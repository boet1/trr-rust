digraph Mir_0_2521 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn oracle_validity(_1: state::user::MarketType, _2: u16, _3: i64, _4: &amp;ReErased state::oracle::OraclePriceData, _5: &amp;ReErased state::state::ValidityGuardRails, _6: u64, _7: &amp;ReErased state::oracle::OracleSource, _8: math::oracle::LogMode, _9: i8) -&gt; std::result::Result&lt;math::oracle::OracleValidity, error::ErrorCode&gt;<br align="left"/>let _10: i64;<br align="left"/>let _11: u64;<br align="left"/>let _12: i64;<br align="left"/>let _13: bool;<br align="left"/>let _14: bool;<br align="left"/>let mut _15: i64;<br align="left"/>let _16: bool;<br align="left"/>let mut _17: &amp;ReErased i64;<br align="left"/>let _18: i64;<br align="left"/>let mut _19: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _20: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _21: i64;<br align="left"/>let mut _22: i64;<br align="left"/>let mut _23: i64;<br align="left"/>let mut _24: i64;<br align="left"/>let mut _25: i64;<br align="left"/>let mut _26: i64;<br align="left"/>let mut _27: i64;<br align="left"/>let mut _28: isize;<br align="left"/>let _29: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _30: !;<br align="left"/>let mut _31: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _32: i64;<br align="left"/>let mut _33: &amp;ReErased i64;<br align="left"/>let _34: &amp;ReErased i64;<br align="left"/>let _35: u64;<br align="left"/>let mut _36: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _37: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _38: u64;<br align="left"/>let mut _39: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _40: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _41: u64;<br align="left"/>let mut _42: isize;<br align="left"/>let _43: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _44: !;<br align="left"/>let mut _45: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _46: u64;<br align="left"/>let mut _47: u64;<br align="left"/>let mut _48: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _49: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _50: i64;<br align="left"/>let mut _51: isize;<br align="left"/>let _52: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _53: !;<br align="left"/>let mut _54: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _55: u64;<br align="left"/>let mut _56: isize;<br align="left"/>let _57: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _58: !;<br align="left"/>let mut _59: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _60: u64;<br align="left"/>let _61: bool;<br align="left"/>let mut _62: &amp;ReErased u64;<br align="left"/>let mut _63: &amp;ReErased u64;<br align="left"/>let _64: &amp;ReErased u64;<br align="left"/>let _65: u64;<br align="left"/>let mut _66: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _67: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _68: u64;<br align="left"/>let mut _69: u64;<br align="left"/>let mut _70: isize;<br align="left"/>let _71: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _72: !;<br align="left"/>let mut _73: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _74: u64;<br align="left"/>let _75: bool;<br align="left"/>let mut _76: bool;<br align="left"/>let mut _77: i8;<br align="left"/>let mut _78: &amp;ReErased i64;<br align="left"/>let mut _79: &amp;ReErased i64;<br align="left"/>let _80: &amp;ReErased i64;<br align="left"/>let _81: i64;<br align="left"/>let mut _82: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _83: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _84: i8;<br align="left"/>let mut _85: i8;<br align="left"/>let mut _86: isize;<br align="left"/>let _87: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _88: !;<br align="left"/>let mut _89: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _90: i64;<br align="left"/>let mut _91: &amp;ReErased i64;<br align="left"/>let mut _92: &amp;ReErased i64;<br align="left"/>let _93: &amp;ReErased i64;<br align="left"/>let _94: bool;<br align="left"/>let mut _95: bool;<br align="left"/>let mut _96: isize;<br align="left"/>let mut _97: &amp;ReErased i64;<br align="left"/>let mut _98: &amp;ReErased i64;<br align="left"/>let _99: &amp;ReErased i64;<br align="left"/>let _100: i64;<br align="left"/>let mut _101: i64;<br align="left"/>let mut _102: &amp;ReErased i64;<br align="left"/>let mut _103: &amp;ReErased i64;<br align="left"/>let _104: &amp;ReErased i64;<br align="left"/>let _105: math::oracle::OracleValidity;<br align="left"/>let mut _106: bool;<br align="left"/>let mut _107: bool;<br align="left"/>let mut _108: bool;<br align="left"/>let mut _109: bool;<br align="left"/>let mut _110: bool;<br align="left"/>let mut _111: bool;<br align="left"/>let _112: ();<br align="left"/>let mut _113: bool;<br align="left"/>let mut _114: &amp;ReErased math::oracle::LogMode;<br align="left"/>let mut _115: &amp;ReErased math::oracle::LogMode;<br align="left"/>let _116: math::oracle::LogMode;<br align="left"/>let _117: &amp;ReErased str;<br align="left"/>let mut _118: bool;<br align="left"/>let mut _119: &amp;ReErased math::oracle::LogMode;<br align="left"/>let mut _120: &amp;ReErased math::oracle::LogMode;<br align="left"/>let _121: math::oracle::LogMode;<br align="left"/>let _122: &amp;ReErased str;<br align="left"/>let mut _123: bool;<br align="left"/>let mut _124: &amp;ReErased math::oracle::LogMode;<br align="left"/>let mut _125: &amp;ReErased math::oracle::LogMode;<br align="left"/>let _126: math::oracle::LogMode;<br align="left"/>let _127: &amp;ReErased str;<br align="left"/>let _128: ();<br align="left"/>let mut _129: bool;<br align="left"/>let _130: ();<br align="left"/>let mut _131: &amp;ReErased str;<br align="left"/>let _132: &amp;ReErased str;<br align="left"/>let mut _133: &amp;ReErased std::string::String;<br align="left"/>let _134: &amp;ReErased std::string::String;<br align="left"/>let _135: std::string::String;<br align="left"/>let _136: std::string::String;<br align="left"/>let mut _137: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _138: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _139: &amp;ReErased [&amp;ReErased str; 4_usize];<br align="left"/>let _140: &amp;ReErased [&amp;ReErased str; 4_usize];<br align="left"/>let _141: [&amp;ReErased str; 4_usize];<br align="left"/>let mut _142: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _143: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _144: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _145: [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let mut _146: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _147: &amp;ReErased state::user::MarketType;<br align="left"/>let _148: &amp;ReErased state::user::MarketType;<br align="left"/>let mut _149: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _150: &amp;ReErased u16;<br align="left"/>let _151: &amp;ReErased u16;<br align="left"/>let mut _152: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _153: &amp;ReErased &amp;ReErased str;<br align="left"/>let _154: &amp;ReErased &amp;ReErased str;<br align="left"/>let _155: ();<br align="left"/>let mut _156: bool;<br align="left"/>let _157: ();<br align="left"/>let mut _158: &amp;ReErased str;<br align="left"/>let _159: &amp;ReErased str;<br align="left"/>let mut _160: &amp;ReErased std::string::String;<br align="left"/>let _161: &amp;ReErased std::string::String;<br align="left"/>let _162: std::string::String;<br align="left"/>let _163: std::string::String;<br align="left"/>let mut _164: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _165: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _166: &amp;ReErased [&amp;ReErased str; 4_usize];<br align="left"/>let _167: &amp;ReErased [&amp;ReErased str; 4_usize];<br align="left"/>let _168: [&amp;ReErased str; 4_usize];<br align="left"/>let mut _169: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _170: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _171: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _172: [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let mut _173: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _174: &amp;ReErased state::user::MarketType;<br align="left"/>let _175: &amp;ReErased state::user::MarketType;<br align="left"/>let mut _176: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _177: &amp;ReErased u16;<br align="left"/>let _178: &amp;ReErased u16;<br align="left"/>let mut _179: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _180: &amp;ReErased &amp;ReErased str;<br align="left"/>let _181: &amp;ReErased &amp;ReErased str;<br align="left"/>let _182: ();<br align="left"/>let mut _183: bool;<br align="left"/>let _184: ();<br align="left"/>let mut _185: &amp;ReErased str;<br align="left"/>let _186: &amp;ReErased str;<br align="left"/>let mut _187: &amp;ReErased std::string::String;<br align="left"/>let _188: &amp;ReErased std::string::String;<br align="left"/>let _189: std::string::String;<br align="left"/>let _190: std::string::String;<br align="left"/>let mut _191: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _192: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _193: &amp;ReErased [&amp;ReErased str; 6_usize];<br align="left"/>let _194: &amp;ReErased [&amp;ReErased str; 6_usize];<br align="left"/>let _195: [&amp;ReErased str; 6_usize];<br align="left"/>let mut _196: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _197: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 5_usize];<br align="left"/>let _198: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 5_usize];<br align="left"/>let _199: [core::fmt::rt::Argument&lt;ReErased&gt;; 5_usize];<br align="left"/>let mut _200: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _201: &amp;ReErased state::user::MarketType;<br align="left"/>let _202: &amp;ReErased state::user::MarketType;<br align="left"/>let mut _203: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _204: &amp;ReErased u16;<br align="left"/>let _205: &amp;ReErased u16;<br align="left"/>let mut _206: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _207: &amp;ReErased &amp;ReErased str;<br align="left"/>let _208: &amp;ReErased &amp;ReErased str;<br align="left"/>let mut _209: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _210: &amp;ReErased i64;<br align="left"/>let _211: &amp;ReErased i64;<br align="left"/>let mut _212: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _213: &amp;ReErased i64;<br align="left"/>let _214: &amp;ReErased i64;<br align="left"/>let _215: ();<br align="left"/>let mut _216: bool;<br align="left"/>let _217: ();<br align="left"/>let mut _218: &amp;ReErased str;<br align="left"/>let _219: &amp;ReErased str;<br align="left"/>let mut _220: &amp;ReErased std::string::String;<br align="left"/>let _221: &amp;ReErased std::string::String;<br align="left"/>let _222: std::string::String;<br align="left"/>let _223: std::string::String;<br align="left"/>let mut _224: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _225: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _226: &amp;ReErased [&amp;ReErased str; 5_usize];<br align="left"/>let _227: &amp;ReErased [&amp;ReErased str; 5_usize];<br align="left"/>let _228: [&amp;ReErased str; 5_usize];<br align="left"/>let mut _229: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _230: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 4_usize];<br align="left"/>let _231: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 4_usize];<br align="left"/>let _232: [core::fmt::rt::Argument&lt;ReErased&gt;; 4_usize];<br align="left"/>let mut _233: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _234: &amp;ReErased state::user::MarketType;<br align="left"/>let _235: &amp;ReErased state::user::MarketType;<br align="left"/>let mut _236: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _237: &amp;ReErased u16;<br align="left"/>let _238: &amp;ReErased u16;<br align="left"/>let mut _239: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _240: &amp;ReErased &amp;ReErased str;<br align="left"/>let _241: &amp;ReErased &amp;ReErased str;<br align="left"/>let mut _242: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _243: &amp;ReErased u64;<br align="left"/>let _244: &amp;ReErased u64;<br align="left"/>let mut _245: bool;<br align="left"/>let mut _246: bool;<br align="left"/>let _247: ();<br align="left"/>let mut _248: &amp;ReErased str;<br align="left"/>let _249: &amp;ReErased str;<br align="left"/>let mut _250: &amp;ReErased std::string::String;<br align="left"/>let _251: &amp;ReErased std::string::String;<br align="left"/>let _252: std::string::String;<br align="left"/>let _253: std::string::String;<br align="left"/>let mut _254: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _255: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _256: &amp;ReErased [&amp;ReErased str; 5_usize];<br align="left"/>let _257: &amp;ReErased [&amp;ReErased str; 5_usize];<br align="left"/>let _258: [&amp;ReErased str; 5_usize];<br align="left"/>let mut _259: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _260: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 4_usize];<br align="left"/>let _261: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 4_usize];<br align="left"/>let _262: [core::fmt::rt::Argument&lt;ReErased&gt;; 4_usize];<br align="left"/>let mut _263: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _264: &amp;ReErased state::user::MarketType;<br align="left"/>let _265: &amp;ReErased state::user::MarketType;<br align="left"/>let mut _266: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _267: &amp;ReErased u16;<br align="left"/>let _268: &amp;ReErased u16;<br align="left"/>let mut _269: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _270: &amp;ReErased &amp;ReErased str;<br align="left"/>let _271: &amp;ReErased &amp;ReErased str;<br align="left"/>let mut _272: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _273: &amp;ReErased i64;<br align="left"/>let _274: &amp;ReErased i64;<br align="left"/>let mut _275: math::oracle::OracleValidity;<br align="left"/>let mut _276: &amp;ReErased [&amp;ReErased str; 5_usize];<br align="left"/>let mut _277: &amp;ReErased [&amp;ReErased str; 5_usize];<br align="left"/>let mut _278: &amp;ReErased [&amp;ReErased str; 6_usize];<br align="left"/>let mut _279: &amp;ReErased [&amp;ReErased str; 4_usize];<br align="left"/>let mut _280: &amp;ReErased [&amp;ReErased str; 4_usize];<br align="left"/>let mut _281: &amp;ReErased math::oracle::LogMode;<br align="left"/>let mut _282: &amp;ReErased math::oracle::LogMode;<br align="left"/>let mut _283: &amp;ReErased math::oracle::LogMode;<br align="left"/>debug market_type =&gt; _1;<br align="left"/>debug market_index =&gt; _2;<br align="left"/>debug last_oracle_twap =&gt; _3;<br align="left"/>debug oracle_price_data =&gt; _4;<br align="left"/>debug valid_oracle_guard_rails =&gt; _5;<br align="left"/>debug max_confidence_interval_multiplier =&gt; _6;<br align="left"/>debug oracle_source =&gt; _7;<br align="left"/>debug log_mode =&gt; _8;<br align="left"/>debug slots_before_stale_for_amm_override =&gt; _9;<br align="left"/>debug oracle_price =&gt; _10;<br align="left"/>debug oracle_conf =&gt; _11;<br align="left"/>debug oracle_delay =&gt; _12;<br align="left"/>debug has_sufficient_number_of_data_points =&gt; _13;<br align="left"/>debug is_oracle_price_nonpositive =&gt; _14;<br align="left"/>debug is_oracle_price_too_volatile =&gt; _16;<br align="left"/>debug residual =&gt; _29;<br align="left"/>debug val =&gt; _32;<br align="left"/>debug conf_pct_of_price =&gt; _35;<br align="left"/>debug residual =&gt; _43;<br align="left"/>debug val =&gt; _46;<br align="left"/>debug residual =&gt; _52;<br align="left"/>debug val =&gt; _55;<br align="left"/>debug residual =&gt; _57;<br align="left"/>debug val =&gt; _60;<br align="left"/>debug is_conf_too_large =&gt; _61;<br align="left"/>debug residual =&gt; _71;<br align="left"/>debug val =&gt; _74;<br align="left"/>debug is_stale_for_amm =&gt; _75;<br align="left"/>debug residual =&gt; _87;<br align="left"/>debug val =&gt; _90;<br align="left"/>debug is_stale_for_margin =&gt; _94;<br align="left"/>debug oracle_validity =&gt; _105;<br align="left"/>debug oracle_type =&gt; _117;<br align="left"/>debug res =&gt; _136;<br align="left"/>debug res =&gt; _163;<br align="left"/>debug res =&gt; _190;<br align="left"/>debug res =&gt; _223;<br align="left"/>debug res =&gt; _253;<br align="left"/>>;
    bb0__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>_10 = ((*_4).0: i64)<br/>StorageLive(_11)<br/>_11 = ((*_4).1: u64)<br/>StorageLive(_12)<br/>_12 = ((*_4).2: i64)<br/>StorageLive(_13)<br/>_13 = ((*_4).3: bool)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = _10<br/>_14 = Le(move _15, const 0_i64)<br/>StorageDead(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_22 = _10<br/>StorageLive(_23)<br/>_23 = _3<br/></td></tr><tr><td align="left">_21 = &lt;i64 as Ord&gt;::max(move _22, move _23)</td></tr></table>>];
    bb1__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_22)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_26 = _3<br/>StorageLive(_27)<br/>_27 = _10<br/></td></tr><tr><td align="left">_25 = &lt;i64 as Ord&gt;::min(move _26, move _27)</td></tr></table>>];
    bb2__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">_24 = &lt;i64 as Ord&gt;::max(move _25, const 1_i64)</td></tr></table>>];
    bb3__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/></td></tr><tr><td align="left">_20 = &lt;i64 as SafeMath&gt;::safe_div(move _21, move _24)</td></tr></table>>];
    bb4__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">_19 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _20)</td></tr></table>>];
    bb5__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>_28 = discriminant(_19)<br/></td></tr><tr><td align="left">switchInt(move _28)</td></tr></table>>];
    bb6__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_32)<br/>_32 = ((_19 as Continue).0: i64)<br/>_18 = _32<br/>StorageDead(_32)<br/>_17 = &amp;_18<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>_34 = &amp;((*_5).3: i64)<br/>_33 = &amp;(*_34)<br/></td></tr><tr><td align="left">_16 = &lt;i64 as PartialOrd&gt;::gt(move _17, move _33)</td></tr></table>>];
    bb7__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb8__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_29)<br/>_29 = ((_19 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_31)<br/>_31 = _29<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;OracleValidity, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _31)</td></tr></table>>];
    bb9__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_29)<br/>StorageDead(_17)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_17)<br/>StorageDead(_34)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>_41 = _11<br/></td></tr><tr><td align="left">_40 = &lt;u64 as SafeMath&gt;::safe_mul(move _41, const _)</td></tr></table>>];
    bb11__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/></td></tr><tr><td align="left">_39 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _40)</td></tr></table>>];
    bb12__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>_42 = discriminant(_39)<br/></td></tr><tr><td align="left">switchInt(move _42)</td></tr></table>>];
    bb13__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_46)<br/>_46 = ((_39 as Continue).0: u64)<br/>_38 = _46<br/>StorageDead(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>_50 = _10<br/></td></tr><tr><td align="left">_49 = &lt;i64 as Cast&gt;::cast::&lt;u64&gt;(move _50)</td></tr></table>>];
    bb14__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_43)<br/>_43 = ((_39 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_45)<br/>_45 = _43<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;OracleValidity, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _45)</td></tr></table>>];
    bb15__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_43)<br/>StorageDead(_38)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/></td></tr><tr><td align="left">_48 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _49)</td></tr></table>>];
    bb17__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>_51 = discriminant(_48)<br/></td></tr><tr><td align="left">switchInt(move _51)</td></tr></table>>];
    bb18__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_55)<br/>_55 = ((_48 as Continue).0: u64)<br/>_47 = _55<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">_37 = &lt;u64 as SafeMath&gt;::safe_div(move _38, move _47)</td></tr></table>>];
    bb19__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_52)<br/>_52 = ((_48 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_54)<br/>_54 = _52<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;OracleValidity, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _54)</td></tr></table>>];
    bb20__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_52)<br/>StorageDead(_47)<br/>StorageDead(_38)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">_36 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _37)</td></tr></table>>];
    bb22__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>_56 = discriminant(_36)<br/></td></tr><tr><td align="left">switchInt(move _56)</td></tr></table>>];
    bb23__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_60)<br/>_60 = ((_36 as Continue).0: u64)<br/>_35 = _60<br/>StorageDead(_60)<br/>StorageDead(_48)<br/>StorageDead(_39)<br/>StorageDead(_36)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>_62 = &amp;_35<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>_68 = ((*_5).2: u64)<br/>StorageLive(_69)<br/>_69 = _6<br/></td></tr><tr><td align="left">_67 = &lt;u64 as SafeMath&gt;::safe_mul(move _68, move _69)</td></tr></table>>];
    bb24__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_57)<br/>_57 = ((_36 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_59)<br/>_59 = _57<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;OracleValidity, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _59)</td></tr></table>>];
    bb25__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageDead(_68)<br/></td></tr><tr><td align="left">_66 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _67)</td></tr></table>>];
    bb27__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>_70 = discriminant(_66)<br/></td></tr><tr><td align="left">switchInt(move _70)</td></tr></table>>];
    bb28__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_74)<br/>_74 = ((_66 as Continue).0: u64)<br/>_65 = _74<br/>StorageDead(_74)<br/>_64 = &amp;_65<br/>_63 = &amp;(*_64)<br/></td></tr><tr><td align="left">_61 = &lt;u64 as PartialOrd&gt;::gt(move _62, move _63)</td></tr></table>>];
    bb29__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_71)<br/>_71 = ((_66 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_73)<br/>_73 = _71<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;OracleValidity, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _73)</td></tr></table>>];
    bb30__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>StorageDead(_71)<br/>StorageDead(_63)<br/>StorageDead(_62)<br/>StorageDead(_66)<br/>StorageDead(_65)<br/>StorageDead(_64)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_62)<br/>StorageDead(_66)<br/>StorageDead(_65)<br/>StorageDead(_64)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>_77 = _9<br/>_76 = Ne(move _77, const 0_i8)<br/></td></tr><tr><td align="left">switchInt(move _76)</td></tr></table>>];
    bb32__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>StorageLive(_78)<br/>_78 = &amp;_12<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>_85 = _9<br/></td></tr><tr><td align="left">_84 = &lt;i8 as Ord&gt;::max(move _85, const 0_i8)</td></tr></table>>];
    bb33__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/></td></tr><tr><td align="left">_83 = &lt;i8 as Cast&gt;::cast::&lt;i64&gt;(move _84)</td></tr></table>>];
    bb34__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/></td></tr><tr><td align="left">_82 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _83)</td></tr></table>>];
    bb35__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>_86 = discriminant(_82)<br/></td></tr><tr><td align="left">switchInt(move _86)</td></tr></table>>];
    bb36__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageLive(_90)<br/>_90 = ((_82 as Continue).0: i64)<br/>_81 = _90<br/>StorageDead(_90)<br/>_80 = &amp;_81<br/>_79 = &amp;(*_80)<br/></td></tr><tr><td align="left">_75 = &lt;i64 as PartialOrd&gt;::gt(move _78, move _79)</td></tr></table>>];
    bb37__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_87)<br/>_87 = ((_82 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_89)<br/>_89 = _87<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;OracleValidity, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _89)</td></tr></table>>];
    bb38__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>StorageDead(_87)<br/>StorageDead(_79)<br/>StorageDead(_78)<br/>StorageDead(_82)<br/>StorageDead(_81)<br/>StorageDead(_80)<br/>StorageDead(_76)<br/>StorageDead(_75)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageDead(_78)<br/>StorageDead(_82)<br/>StorageDead(_81)<br/>StorageDead(_80)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>StorageLive(_91)<br/>_91 = &amp;_12<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>_93 = &amp;((*_5).0: i64)<br/>_92 = &amp;(*_93)<br/></td></tr><tr><td align="left">_75 = &lt;i64 as PartialOrd&gt;::gt(move _91, move _92)</td></tr></table>>];
    bb41__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>StorageDead(_91)<br/>StorageDead(_93)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>_96 = discriminant((*_7))<br/></td></tr><tr><td align="left">switchInt(move _96)</td></tr></table>>];
    bb43__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">_95 = const false<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">_95 = const true<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left">switchInt(move _95)</td></tr></table>>];
    bb46__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageLive(_97)<br/>_97 = &amp;_12<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>_101 = ((*_5).1: i64)<br/></td></tr><tr><td align="left">_100 = core::num::&lt;impl i64&gt;::saturating_mul(move _101, const 3_i64)</td></tr></table>>];
    bb47__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/>_99 = &amp;_100<br/>_98 = &amp;(*_99)<br/></td></tr><tr><td align="left">_94 = &lt;i64 as PartialOrd&gt;::gt(move _97, move _98)</td></tr></table>>];
    bb48__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>StorageDead(_97)<br/>StorageDead(_100)<br/>StorageDead(_99)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageLive(_102)<br/>_102 = &amp;_12<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>_104 = &amp;((*_5).1: i64)<br/>_103 = &amp;(*_104)<br/></td></tr><tr><td align="left">_94 = &lt;i64 as PartialOrd&gt;::gt(move _102, move _103)</td></tr></table>>];
    bb50__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>StorageDead(_102)<br/>StorageDead(_104)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb51__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>_106 = _14<br/></td></tr><tr><td align="left">switchInt(move _106)</td></tr></table>>];
    bb52__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">_105 = OracleValidity::NonPositive<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageLive(_107)<br/>_107 = _16<br/></td></tr><tr><td align="left">switchInt(move _107)</td></tr></table>>];
    bb54__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">_105 = OracleValidity::TooVolatile<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb55__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageLive(_108)<br/>_108 = _61<br/></td></tr><tr><td align="left">switchInt(move _108)</td></tr></table>>];
    bb56__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">_105 = OracleValidity::TooUncertain<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb57__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageLive(_109)<br/>_109 = _94<br/></td></tr><tr><td align="left">switchInt(move _109)</td></tr></table>>];
    bb58__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">_105 = OracleValidity::StaleForMargin<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageLive(_110)<br/>_110 = _13<br/></td></tr><tr><td align="left">switchInt(move _110)</td></tr></table>>];
    bb60__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">_105 = OracleValidity::InsufficientDataPoints<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb61__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageLive(_111)<br/>_111 = _75<br/></td></tr><tr><td align="left">switchInt(move _111)</td></tr></table>>];
    bb62__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">_105 = OracleValidity::StaleForAMM<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb63__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">_105 = OracleValidity::Valid<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb64__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb65__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb66__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb67__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb69__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>_114 = &amp;_8<br/>StorageLive(_115)<br/>_283 = const _<br/>_115 = &amp;(*_283)<br/></td></tr><tr><td align="left">_113 = &lt;LogMode as PartialEq&gt;::ne(move _114, move _115)</td></tr></table>>];
    bb70__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left">switchInt(move _113)</td></tr></table>>];
    bb71__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_115)<br/>StorageDead(_114)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>_119 = &amp;_8<br/>StorageLive(_120)<br/>_282 = const _<br/>_120 = &amp;(*_282)<br/></td></tr><tr><td align="left">_118 = &lt;LogMode as PartialEq&gt;::eq(move _119, move _120)</td></tr></table>>];
    bb72__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left">switchInt(move _118)</td></tr></table>>];
    bb73__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/>StorageDead(_119)<br/>_117 = const &quot;Exchange&quot;<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb74__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/>StorageDead(_119)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>_124 = &amp;_8<br/>StorageLive(_125)<br/>_281 = const _<br/>_125 = &amp;(*_281)<br/></td></tr><tr><td align="left">_123 = &lt;LogMode as PartialEq&gt;::eq(move _124, move _125)</td></tr></table>>];
    bb75__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left">switchInt(move _123)</td></tr></table>>];
    bb76__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/>StorageDead(_124)<br/>_122 = const &quot;SafeMM&quot;<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb77__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/>StorageDead(_124)<br/>StorageLive(_127)<br/>_127 = const &quot;MM&quot;<br/>_122 = &amp;(*_127)<br/>StorageDead(_127)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb78__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">_117 = &amp;(*_122)<br/>StorageDead(_123)<br/>StorageDead(_122)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb79__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>_129 = _13<br/></td></tr><tr><td align="left">switchInt(move _129)</td></tr></table>>];
    bb80__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>StorageLive(_140)<br/>_280 = const _<br/>_140 = &amp;(*_280)<br/>_139 = &amp;(*_140)<br/>_138 = move _139 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_139)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>_148 = &amp;_1<br/>_147 = &amp;(*_148)<br/></td></tr><tr><td align="left">_146 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;state::user::MarketType&gt;(move _147)</td></tr></table>>];
    bb81__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_147)<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>_151 = &amp;_2<br/>_150 = &amp;(*_151)<br/></td></tr><tr><td align="left">_149 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _150)</td></tr></table>>];
    bb82__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_150)<br/>StorageLive(_152)<br/>StorageLive(_153)<br/>StorageLive(_154)<br/>_154 = &amp;_117<br/>_153 = &amp;(*_154)<br/></td></tr><tr><td align="left">_152 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;&amp;str&gt;(move _153)</td></tr></table>>];
    bb83__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_153)<br/>_145 = [move _146, move _149, move _152]<br/>StorageDead(_152)<br/>StorageDead(_149)<br/>StorageDead(_146)<br/>_144 = &amp;_145<br/>_143 = &amp;(*_144)<br/>_142 = move _143 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_143)<br/></td></tr><tr><td align="left">_137 = Arguments::&lt;'_&gt;::new_v1(move _138, move _142)</td></tr></table>>];
    bb84__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_142)<br/>StorageDead(_138)<br/></td></tr><tr><td align="left">_136 = format(move _137)</td></tr></table>>];
    bb85__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_137)<br/>StorageDead(_154)<br/>StorageDead(_151)<br/>StorageDead(_148)<br/>StorageDead(_145)<br/>StorageDead(_144)<br/>StorageDead(_140)<br/>_135 = move _136<br/>StorageDead(_136)<br/>_134 = &amp;_135<br/>_133 = &amp;(*_134)<br/></td></tr><tr><td align="left">_132 = &lt;String as Deref&gt;::deref(move _133)</td></tr></table>>];
    bb86__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">_131 = &amp;(*_132)<br/>StorageDead(_133)<br/></td></tr><tr><td align="left">_130 = solana_program::log::sol_log(move _131)</td></tr></table>>];
    bb87__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_131)<br/></td></tr><tr><td align="left">drop(_135)</td></tr></table>>];
    bb88__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_135)<br/>StorageDead(_134)<br/>StorageDead(_132)<br/>StorageDead(_130)<br/>_128 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb89__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">_128 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb90__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_129)<br/>StorageDead(_128)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>_156 = _14<br/></td></tr><tr><td align="left">switchInt(move _156)</td></tr></table>>];
    bb91__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageLive(_157)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>StorageLive(_161)<br/>StorageLive(_162)<br/>StorageLive(_163)<br/>StorageLive(_164)<br/>StorageLive(_165)<br/>StorageLive(_166)<br/>StorageLive(_167)<br/>_279 = const _<br/>_167 = &amp;(*_279)<br/>_166 = &amp;(*_167)<br/>_165 = move _166 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_166)<br/>StorageLive(_169)<br/>StorageLive(_170)<br/>StorageLive(_171)<br/>StorageLive(_172)<br/>StorageLive(_173)<br/>StorageLive(_174)<br/>StorageLive(_175)<br/>_175 = &amp;_1<br/>_174 = &amp;(*_175)<br/></td></tr><tr><td align="left">_173 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;state::user::MarketType&gt;(move _174)</td></tr></table>>];
    bb92__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_174)<br/>StorageLive(_176)<br/>StorageLive(_177)<br/>StorageLive(_178)<br/>_178 = &amp;_2<br/>_177 = &amp;(*_178)<br/></td></tr><tr><td align="left">_176 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _177)</td></tr></table>>];
    bb93__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_177)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>StorageLive(_181)<br/>_181 = &amp;_117<br/>_180 = &amp;(*_181)<br/></td></tr><tr><td align="left">_179 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;&amp;str&gt;(move _180)</td></tr></table>>];
    bb94__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_180)<br/>_172 = [move _173, move _176, move _179]<br/>StorageDead(_179)<br/>StorageDead(_176)<br/>StorageDead(_173)<br/>_171 = &amp;_172<br/>_170 = &amp;(*_171)<br/>_169 = move _170 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_170)<br/></td></tr><tr><td align="left">_164 = Arguments::&lt;'_&gt;::new_v1(move _165, move _169)</td></tr></table>>];
    bb95__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_169)<br/>StorageDead(_165)<br/></td></tr><tr><td align="left">_163 = format(move _164)</td></tr></table>>];
    bb96__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_164)<br/>StorageDead(_181)<br/>StorageDead(_178)<br/>StorageDead(_175)<br/>StorageDead(_172)<br/>StorageDead(_171)<br/>StorageDead(_167)<br/>_162 = move _163<br/>StorageDead(_163)<br/>_161 = &amp;_162<br/>_160 = &amp;(*_161)<br/></td></tr><tr><td align="left">_159 = &lt;String as Deref&gt;::deref(move _160)</td></tr></table>>];
    bb97__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">_158 = &amp;(*_159)<br/>StorageDead(_160)<br/></td></tr><tr><td align="left">_157 = solana_program::log::sol_log(move _158)</td></tr></table>>];
    bb98__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_158)<br/></td></tr><tr><td align="left">drop(_162)</td></tr></table>>];
    bb99__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageDead(_162)<br/>StorageDead(_161)<br/>StorageDead(_159)<br/>StorageDead(_157)<br/>_155 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb100__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">_155 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb101__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_156)<br/>StorageDead(_155)<br/>StorageLive(_182)<br/>StorageLive(_183)<br/>_183 = _16<br/></td></tr><tr><td align="left">switchInt(move _183)</td></tr></table>>];
    bb102__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageLive(_184)<br/>StorageLive(_185)<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>StorageLive(_189)<br/>StorageLive(_190)<br/>StorageLive(_191)<br/>StorageLive(_192)<br/>StorageLive(_193)<br/>StorageLive(_194)<br/>_278 = const _<br/>_194 = &amp;(*_278)<br/>_193 = &amp;(*_194)<br/>_192 = move _193 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_193)<br/>StorageLive(_196)<br/>StorageLive(_197)<br/>StorageLive(_198)<br/>StorageLive(_199)<br/>StorageLive(_200)<br/>StorageLive(_201)<br/>StorageLive(_202)<br/>_202 = &amp;_1<br/>_201 = &amp;(*_202)<br/></td></tr><tr><td align="left">_200 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;state::user::MarketType&gt;(move _201)</td></tr></table>>];
    bb103__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_201)<br/>StorageLive(_203)<br/>StorageLive(_204)<br/>StorageLive(_205)<br/>_205 = &amp;_2<br/>_204 = &amp;(*_205)<br/></td></tr><tr><td align="left">_203 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _204)</td></tr></table>>];
    bb104__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_204)<br/>StorageLive(_206)<br/>StorageLive(_207)<br/>StorageLive(_208)<br/>_208 = &amp;_117<br/>_207 = &amp;(*_208)<br/></td></tr><tr><td align="left">_206 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;&amp;str&gt;(move _207)</td></tr></table>>];
    bb105__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_207)<br/>StorageLive(_209)<br/>StorageLive(_210)<br/>StorageLive(_211)<br/>_211 = &amp;_3<br/>_210 = &amp;(*_211)<br/></td></tr><tr><td align="left">_209 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;i64&gt;(move _210)</td></tr></table>>];
    bb106__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_210)<br/>StorageLive(_212)<br/>StorageLive(_213)<br/>StorageLive(_214)<br/>_214 = &amp;_10<br/>_213 = &amp;(*_214)<br/></td></tr><tr><td align="left">_212 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;i64&gt;(move _213)</td></tr></table>>];
    bb107__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_213)<br/>_199 = [move _200, move _203, move _206, move _209, move _212]<br/>StorageDead(_212)<br/>StorageDead(_209)<br/>StorageDead(_206)<br/>StorageDead(_203)<br/>StorageDead(_200)<br/>_198 = &amp;_199<br/>_197 = &amp;(*_198)<br/>_196 = move _197 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_197)<br/></td></tr><tr><td align="left">_191 = Arguments::&lt;'_&gt;::new_v1(move _192, move _196)</td></tr></table>>];
    bb108__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageDead(_196)<br/>StorageDead(_192)<br/></td></tr><tr><td align="left">_190 = format(move _191)</td></tr></table>>];
    bb109__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageDead(_191)<br/>StorageDead(_214)<br/>StorageDead(_211)<br/>StorageDead(_208)<br/>StorageDead(_205)<br/>StorageDead(_202)<br/>StorageDead(_199)<br/>StorageDead(_198)<br/>StorageDead(_194)<br/>_189 = move _190<br/>StorageDead(_190)<br/>_188 = &amp;_189<br/>_187 = &amp;(*_188)<br/></td></tr><tr><td align="left">_186 = &lt;String as Deref&gt;::deref(move _187)</td></tr></table>>];
    bb110__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">_185 = &amp;(*_186)<br/>StorageDead(_187)<br/></td></tr><tr><td align="left">_184 = solana_program::log::sol_log(move _185)</td></tr></table>>];
    bb111__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_185)<br/></td></tr><tr><td align="left">drop(_189)</td></tr></table>>];
    bb112__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageDead(_189)<br/>StorageDead(_188)<br/>StorageDead(_186)<br/>StorageDead(_184)<br/>_182 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb113__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">_182 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb114__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageDead(_183)<br/>StorageDead(_182)<br/>StorageLive(_215)<br/>StorageLive(_216)<br/>_216 = _61<br/></td></tr><tr><td align="left">switchInt(move _216)</td></tr></table>>];
    bb115__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageLive(_217)<br/>StorageLive(_218)<br/>StorageLive(_219)<br/>StorageLive(_220)<br/>StorageLive(_221)<br/>StorageLive(_222)<br/>StorageLive(_223)<br/>StorageLive(_224)<br/>StorageLive(_225)<br/>StorageLive(_226)<br/>StorageLive(_227)<br/>_277 = const _<br/>_227 = &amp;(*_277)<br/>_226 = &amp;(*_227)<br/>_225 = move _226 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_226)<br/>StorageLive(_229)<br/>StorageLive(_230)<br/>StorageLive(_231)<br/>StorageLive(_232)<br/>StorageLive(_233)<br/>StorageLive(_234)<br/>StorageLive(_235)<br/>_235 = &amp;_1<br/>_234 = &amp;(*_235)<br/></td></tr><tr><td align="left">_233 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;state::user::MarketType&gt;(move _234)</td></tr></table>>];
    bb116__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_234)<br/>StorageLive(_236)<br/>StorageLive(_237)<br/>StorageLive(_238)<br/>_238 = &amp;_2<br/>_237 = &amp;(*_238)<br/></td></tr><tr><td align="left">_236 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _237)</td></tr></table>>];
    bb117__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageDead(_237)<br/>StorageLive(_239)<br/>StorageLive(_240)<br/>StorageLive(_241)<br/>_241 = &amp;_117<br/>_240 = &amp;(*_241)<br/></td></tr><tr><td align="left">_239 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;&amp;str&gt;(move _240)</td></tr></table>>];
    bb118__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageDead(_240)<br/>StorageLive(_242)<br/>StorageLive(_243)<br/>StorageLive(_244)<br/>_244 = &amp;_35<br/>_243 = &amp;(*_244)<br/></td></tr><tr><td align="left">_242 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;u64&gt;(move _243)</td></tr></table>>];
    bb119__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageDead(_243)<br/>_232 = [move _233, move _236, move _239, move _242]<br/>StorageDead(_242)<br/>StorageDead(_239)<br/>StorageDead(_236)<br/>StorageDead(_233)<br/>_231 = &amp;_232<br/>_230 = &amp;(*_231)<br/>_229 = move _230 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_230)<br/></td></tr><tr><td align="left">_224 = Arguments::&lt;'_&gt;::new_v1(move _225, move _229)</td></tr></table>>];
    bb120__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageDead(_229)<br/>StorageDead(_225)<br/></td></tr><tr><td align="left">_223 = format(move _224)</td></tr></table>>];
    bb121__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageDead(_224)<br/>StorageDead(_244)<br/>StorageDead(_241)<br/>StorageDead(_238)<br/>StorageDead(_235)<br/>StorageDead(_232)<br/>StorageDead(_231)<br/>StorageDead(_227)<br/>_222 = move _223<br/>StorageDead(_223)<br/>_221 = &amp;_222<br/>_220 = &amp;(*_221)<br/></td></tr><tr><td align="left">_219 = &lt;String as Deref&gt;::deref(move _220)</td></tr></table>>];
    bb122__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">_218 = &amp;(*_219)<br/>StorageDead(_220)<br/></td></tr><tr><td align="left">_217 = solana_program::log::sol_log(move _218)</td></tr></table>>];
    bb123__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageDead(_218)<br/></td></tr><tr><td align="left">drop(_222)</td></tr></table>>];
    bb124__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageDead(_222)<br/>StorageDead(_221)<br/>StorageDead(_219)<br/>StorageDead(_217)<br/>_215 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb125__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">_215 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb126__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageDead(_216)<br/>StorageDead(_215)<br/>StorageLive(_245)<br/>_245 = _75<br/></td></tr><tr><td align="left">switchInt(move _245)</td></tr></table>>];
    bb127__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageLive(_246)<br/>_246 = _94<br/></td></tr><tr><td align="left">switchInt(move _246)</td></tr></table>>];
    bb128__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageLive(_247)<br/>StorageLive(_248)<br/>StorageLive(_249)<br/>StorageLive(_250)<br/>StorageLive(_251)<br/>StorageLive(_252)<br/>StorageLive(_253)<br/>StorageLive(_254)<br/>StorageLive(_255)<br/>StorageLive(_256)<br/>StorageLive(_257)<br/>_276 = const _<br/>_257 = &amp;(*_276)<br/>_256 = &amp;(*_257)<br/>_255 = move _256 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_256)<br/>StorageLive(_259)<br/>StorageLive(_260)<br/>StorageLive(_261)<br/>StorageLive(_262)<br/>StorageLive(_263)<br/>StorageLive(_264)<br/>StorageLive(_265)<br/>_265 = &amp;_1<br/>_264 = &amp;(*_265)<br/></td></tr><tr><td align="left">_263 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;state::user::MarketType&gt;(move _264)</td></tr></table>>];
    bb129__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">StorageDead(_264)<br/>StorageLive(_266)<br/>StorageLive(_267)<br/>StorageLive(_268)<br/>_268 = &amp;_2<br/>_267 = &amp;(*_268)<br/></td></tr><tr><td align="left">_266 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _267)</td></tr></table>>];
    bb130__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageDead(_267)<br/>StorageLive(_269)<br/>StorageLive(_270)<br/>StorageLive(_271)<br/>_271 = &amp;_117<br/>_270 = &amp;(*_271)<br/></td></tr><tr><td align="left">_269 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;&amp;str&gt;(move _270)</td></tr></table>>];
    bb131__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageDead(_270)<br/>StorageLive(_272)<br/>StorageLive(_273)<br/>StorageLive(_274)<br/>_274 = &amp;_12<br/>_273 = &amp;(*_274)<br/></td></tr><tr><td align="left">_272 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;i64&gt;(move _273)</td></tr></table>>];
    bb132__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageDead(_273)<br/>_262 = [move _263, move _266, move _269, move _272]<br/>StorageDead(_272)<br/>StorageDead(_269)<br/>StorageDead(_266)<br/>StorageDead(_263)<br/>_261 = &amp;_262<br/>_260 = &amp;(*_261)<br/>_259 = move _260 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_260)<br/></td></tr><tr><td align="left">_254 = Arguments::&lt;'_&gt;::new_v1(move _255, move _259)</td></tr></table>>];
    bb133__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageDead(_259)<br/>StorageDead(_255)<br/></td></tr><tr><td align="left">_253 = format(move _254)</td></tr></table>>];
    bb134__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageDead(_254)<br/>StorageDead(_274)<br/>StorageDead(_271)<br/>StorageDead(_268)<br/>StorageDead(_265)<br/>StorageDead(_262)<br/>StorageDead(_261)<br/>StorageDead(_257)<br/>_252 = move _253<br/>StorageDead(_253)<br/>_251 = &amp;_252<br/>_250 = &amp;(*_251)<br/></td></tr><tr><td align="left">_249 = &lt;String as Deref&gt;::deref(move _250)</td></tr></table>>];
    bb135__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">_248 = &amp;(*_249)<br/>StorageDead(_250)<br/></td></tr><tr><td align="left">_247 = solana_program::log::sol_log(move _248)</td></tr></table>>];
    bb136__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageDead(_248)<br/></td></tr><tr><td align="left">drop(_252)</td></tr></table>>];
    bb137__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">StorageDead(_252)<br/>StorageDead(_251)<br/>StorageDead(_249)<br/>StorageDead(_247)<br/>_112 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb138__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">_112 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb139__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">StorageDead(_246)<br/>StorageDead(_245)<br/>StorageDead(_117)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb140__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">StorageDead(_115)<br/>StorageDead(_114)<br/>_112 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb141__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">StorageDead(_113)<br/>StorageDead(_112)<br/>StorageLive(_275)<br/>_275 = _105<br/>_0 = std::result::Result::&lt;OracleValidity, error::ErrorCode&gt;::Ok(move _275)<br/>StorageDead(_275)<br/>StorageDead(_105)<br/>StorageDead(_94)<br/>StorageDead(_75)<br/>StorageDead(_61)<br/>StorageDead(_35)<br/>StorageDead(_16)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb142__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb143__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb144__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb145__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb146__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb147__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left">return</td></tr></table>>];
    bb148__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">148 (cleanup)</td></tr><tr><td align="left">drop(_252)</td></tr></table>>];
    bb149__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">149 (cleanup)</td></tr><tr><td align="left">drop(_222)</td></tr></table>>];
    bb150__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">150 (cleanup)</td></tr><tr><td align="left">drop(_189)</td></tr></table>>];
    bb151__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">151 (cleanup)</td></tr><tr><td align="left">drop(_162)</td></tr></table>>];
    bb152__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">152 (cleanup)</td></tr><tr><td align="left">drop(_135)</td></tr></table>>];
    bb153__0_2521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">153 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_2521 -> bb1__0_2521 [label="return"];
    bb1__0_2521 -> bb2__0_2521 [label="return"];
    bb2__0_2521 -> bb3__0_2521 [label="return"];
    bb3__0_2521 -> bb4__0_2521 [label="return"];
    bb4__0_2521 -> bb5__0_2521 [label="return"];
    bb5__0_2521 -> bb6__0_2521 [label="0"];
    bb5__0_2521 -> bb8__0_2521 [label="1"];
    bb5__0_2521 -> bb7__0_2521 [label="otherwise"];
    bb6__0_2521 -> bb10__0_2521 [label="return"];
    bb8__0_2521 -> bb9__0_2521 [label="return"];
    bb9__0_2521 -> bb146__0_2521 [label=""];
    bb10__0_2521 -> bb11__0_2521 [label="return"];
    bb11__0_2521 -> bb12__0_2521 [label="return"];
    bb12__0_2521 -> bb13__0_2521 [label="0"];
    bb12__0_2521 -> bb14__0_2521 [label="1"];
    bb12__0_2521 -> bb7__0_2521 [label="otherwise"];
    bb13__0_2521 -> bb16__0_2521 [label="return"];
    bb14__0_2521 -> bb15__0_2521 [label="return"];
    bb15__0_2521 -> bb144__0_2521 [label=""];
    bb16__0_2521 -> bb17__0_2521 [label="return"];
    bb17__0_2521 -> bb18__0_2521 [label="0"];
    bb17__0_2521 -> bb19__0_2521 [label="1"];
    bb17__0_2521 -> bb7__0_2521 [label="otherwise"];
    bb18__0_2521 -> bb21__0_2521 [label="return"];
    bb19__0_2521 -> bb20__0_2521 [label="return"];
    bb20__0_2521 -> bb143__0_2521 [label=""];
    bb21__0_2521 -> bb22__0_2521 [label="return"];
    bb22__0_2521 -> bb23__0_2521 [label="0"];
    bb22__0_2521 -> bb24__0_2521 [label="1"];
    bb22__0_2521 -> bb7__0_2521 [label="otherwise"];
    bb23__0_2521 -> bb26__0_2521 [label="return"];
    bb24__0_2521 -> bb25__0_2521 [label="return"];
    bb25__0_2521 -> bb143__0_2521 [label=""];
    bb26__0_2521 -> bb27__0_2521 [label="return"];
    bb27__0_2521 -> bb28__0_2521 [label="0"];
    bb27__0_2521 -> bb29__0_2521 [label="1"];
    bb27__0_2521 -> bb7__0_2521 [label="otherwise"];
    bb28__0_2521 -> bb31__0_2521 [label="return"];
    bb29__0_2521 -> bb30__0_2521 [label="return"];
    bb30__0_2521 -> bb142__0_2521 [label=""];
    bb31__0_2521 -> bb40__0_2521 [label="0"];
    bb31__0_2521 -> bb32__0_2521 [label="otherwise"];
    bb32__0_2521 -> bb33__0_2521 [label="return"];
    bb33__0_2521 -> bb34__0_2521 [label="return"];
    bb34__0_2521 -> bb35__0_2521 [label="return"];
    bb35__0_2521 -> bb36__0_2521 [label="0"];
    bb35__0_2521 -> bb37__0_2521 [label="1"];
    bb35__0_2521 -> bb7__0_2521 [label="otherwise"];
    bb36__0_2521 -> bb39__0_2521 [label="return"];
    bb37__0_2521 -> bb38__0_2521 [label="return"];
    bb38__0_2521 -> bb142__0_2521 [label=""];
    bb39__0_2521 -> bb42__0_2521 [label=""];
    bb40__0_2521 -> bb41__0_2521 [label="return"];
    bb41__0_2521 -> bb42__0_2521 [label=""];
    bb42__0_2521 -> bb44__0_2521 [label="5"];
    bb42__0_2521 -> bb44__0_2521 [label="10"];
    bb42__0_2521 -> bb43__0_2521 [label="otherwise"];
    bb43__0_2521 -> bb45__0_2521 [label=""];
    bb44__0_2521 -> bb45__0_2521 [label=""];
    bb45__0_2521 -> bb49__0_2521 [label="0"];
    bb45__0_2521 -> bb46__0_2521 [label="otherwise"];
    bb46__0_2521 -> bb47__0_2521 [label="return"];
    bb47__0_2521 -> bb48__0_2521 [label="return"];
    bb48__0_2521 -> bb51__0_2521 [label=""];
    bb49__0_2521 -> bb50__0_2521 [label="return"];
    bb50__0_2521 -> bb51__0_2521 [label=""];
    bb51__0_2521 -> bb53__0_2521 [label="0"];
    bb51__0_2521 -> bb52__0_2521 [label="otherwise"];
    bb52__0_2521 -> bb69__0_2521 [label=""];
    bb53__0_2521 -> bb55__0_2521 [label="0"];
    bb53__0_2521 -> bb54__0_2521 [label="otherwise"];
    bb54__0_2521 -> bb68__0_2521 [label=""];
    bb55__0_2521 -> bb57__0_2521 [label="0"];
    bb55__0_2521 -> bb56__0_2521 [label="otherwise"];
    bb56__0_2521 -> bb67__0_2521 [label=""];
    bb57__0_2521 -> bb59__0_2521 [label="0"];
    bb57__0_2521 -> bb58__0_2521 [label="otherwise"];
    bb58__0_2521 -> bb66__0_2521 [label=""];
    bb59__0_2521 -> bb60__0_2521 [label="0"];
    bb59__0_2521 -> bb61__0_2521 [label="otherwise"];
    bb60__0_2521 -> bb65__0_2521 [label=""];
    bb61__0_2521 -> bb63__0_2521 [label="0"];
    bb61__0_2521 -> bb62__0_2521 [label="otherwise"];
    bb62__0_2521 -> bb64__0_2521 [label=""];
    bb63__0_2521 -> bb64__0_2521 [label=""];
    bb64__0_2521 -> bb65__0_2521 [label=""];
    bb65__0_2521 -> bb66__0_2521 [label=""];
    bb66__0_2521 -> bb67__0_2521 [label=""];
    bb67__0_2521 -> bb68__0_2521 [label=""];
    bb68__0_2521 -> bb69__0_2521 [label=""];
    bb69__0_2521 -> bb70__0_2521 [label="return"];
    bb70__0_2521 -> bb140__0_2521 [label="0"];
    bb70__0_2521 -> bb71__0_2521 [label="otherwise"];
    bb71__0_2521 -> bb72__0_2521 [label="return"];
    bb72__0_2521 -> bb74__0_2521 [label="0"];
    bb72__0_2521 -> bb73__0_2521 [label="otherwise"];
    bb73__0_2521 -> bb79__0_2521 [label=""];
    bb74__0_2521 -> bb75__0_2521 [label="return"];
    bb75__0_2521 -> bb77__0_2521 [label="0"];
    bb75__0_2521 -> bb76__0_2521 [label="otherwise"];
    bb76__0_2521 -> bb78__0_2521 [label=""];
    bb77__0_2521 -> bb78__0_2521 [label=""];
    bb78__0_2521 -> bb79__0_2521 [label=""];
    bb79__0_2521 -> bb80__0_2521 [label="0"];
    bb79__0_2521 -> bb89__0_2521 [label="otherwise"];
    bb80__0_2521 -> bb81__0_2521 [label="return"];
    bb81__0_2521 -> bb82__0_2521 [label="return"];
    bb82__0_2521 -> bb83__0_2521 [label="return"];
    bb83__0_2521 -> bb84__0_2521 [label="return"];
    bb84__0_2521 -> bb85__0_2521 [label="return"];
    bb85__0_2521 -> bb86__0_2521 [label="return"];
    bb85__0_2521 -> bb152__0_2521 [label="unwind"];
    bb86__0_2521 -> bb87__0_2521 [label="return"];
    bb86__0_2521 -> bb152__0_2521 [label="unwind"];
    bb87__0_2521 -> bb88__0_2521 [label="return"];
    bb87__0_2521 -> bb153__0_2521 [label="unwind"];
    bb88__0_2521 -> bb90__0_2521 [label=""];
    bb89__0_2521 -> bb90__0_2521 [label=""];
    bb90__0_2521 -> bb100__0_2521 [label="0"];
    bb90__0_2521 -> bb91__0_2521 [label="otherwise"];
    bb91__0_2521 -> bb92__0_2521 [label="return"];
    bb92__0_2521 -> bb93__0_2521 [label="return"];
    bb93__0_2521 -> bb94__0_2521 [label="return"];
    bb94__0_2521 -> bb95__0_2521 [label="return"];
    bb95__0_2521 -> bb96__0_2521 [label="return"];
    bb96__0_2521 -> bb97__0_2521 [label="return"];
    bb96__0_2521 -> bb151__0_2521 [label="unwind"];
    bb97__0_2521 -> bb98__0_2521 [label="return"];
    bb97__0_2521 -> bb151__0_2521 [label="unwind"];
    bb98__0_2521 -> bb99__0_2521 [label="return"];
    bb98__0_2521 -> bb153__0_2521 [label="unwind"];
    bb99__0_2521 -> bb101__0_2521 [label=""];
    bb100__0_2521 -> bb101__0_2521 [label=""];
    bb101__0_2521 -> bb113__0_2521 [label="0"];
    bb101__0_2521 -> bb102__0_2521 [label="otherwise"];
    bb102__0_2521 -> bb103__0_2521 [label="return"];
    bb103__0_2521 -> bb104__0_2521 [label="return"];
    bb104__0_2521 -> bb105__0_2521 [label="return"];
    bb105__0_2521 -> bb106__0_2521 [label="return"];
    bb106__0_2521 -> bb107__0_2521 [label="return"];
    bb107__0_2521 -> bb108__0_2521 [label="return"];
    bb108__0_2521 -> bb109__0_2521 [label="return"];
    bb109__0_2521 -> bb110__0_2521 [label="return"];
    bb109__0_2521 -> bb150__0_2521 [label="unwind"];
    bb110__0_2521 -> bb111__0_2521 [label="return"];
    bb110__0_2521 -> bb150__0_2521 [label="unwind"];
    bb111__0_2521 -> bb112__0_2521 [label="return"];
    bb111__0_2521 -> bb153__0_2521 [label="unwind"];
    bb112__0_2521 -> bb114__0_2521 [label=""];
    bb113__0_2521 -> bb114__0_2521 [label=""];
    bb114__0_2521 -> bb125__0_2521 [label="0"];
    bb114__0_2521 -> bb115__0_2521 [label="otherwise"];
    bb115__0_2521 -> bb116__0_2521 [label="return"];
    bb116__0_2521 -> bb117__0_2521 [label="return"];
    bb117__0_2521 -> bb118__0_2521 [label="return"];
    bb118__0_2521 -> bb119__0_2521 [label="return"];
    bb119__0_2521 -> bb120__0_2521 [label="return"];
    bb120__0_2521 -> bb121__0_2521 [label="return"];
    bb121__0_2521 -> bb122__0_2521 [label="return"];
    bb121__0_2521 -> bb149__0_2521 [label="unwind"];
    bb122__0_2521 -> bb123__0_2521 [label="return"];
    bb122__0_2521 -> bb149__0_2521 [label="unwind"];
    bb123__0_2521 -> bb124__0_2521 [label="return"];
    bb123__0_2521 -> bb153__0_2521 [label="unwind"];
    bb124__0_2521 -> bb126__0_2521 [label=""];
    bb125__0_2521 -> bb126__0_2521 [label=""];
    bb126__0_2521 -> bb127__0_2521 [label="0"];
    bb126__0_2521 -> bb128__0_2521 [label="otherwise"];
    bb127__0_2521 -> bb138__0_2521 [label="0"];
    bb127__0_2521 -> bb128__0_2521 [label="otherwise"];
    bb128__0_2521 -> bb129__0_2521 [label="return"];
    bb129__0_2521 -> bb130__0_2521 [label="return"];
    bb130__0_2521 -> bb131__0_2521 [label="return"];
    bb131__0_2521 -> bb132__0_2521 [label="return"];
    bb132__0_2521 -> bb133__0_2521 [label="return"];
    bb133__0_2521 -> bb134__0_2521 [label="return"];
    bb134__0_2521 -> bb135__0_2521 [label="return"];
    bb134__0_2521 -> bb148__0_2521 [label="unwind"];
    bb135__0_2521 -> bb136__0_2521 [label="return"];
    bb135__0_2521 -> bb148__0_2521 [label="unwind"];
    bb136__0_2521 -> bb137__0_2521 [label="return"];
    bb136__0_2521 -> bb153__0_2521 [label="unwind"];
    bb137__0_2521 -> bb139__0_2521 [label=""];
    bb138__0_2521 -> bb139__0_2521 [label=""];
    bb139__0_2521 -> bb141__0_2521 [label=""];
    bb140__0_2521 -> bb141__0_2521 [label=""];
    bb141__0_2521 -> bb147__0_2521 [label=""];
    bb142__0_2521 -> bb145__0_2521 [label=""];
    bb143__0_2521 -> bb144__0_2521 [label=""];
    bb144__0_2521 -> bb145__0_2521 [label=""];
    bb145__0_2521 -> bb146__0_2521 [label=""];
    bb146__0_2521 -> bb147__0_2521 [label=""];
    bb148__0_2521 -> bb153__0_2521 [label="return"];
    bb149__0_2521 -> bb153__0_2521 [label="return"];
    bb150__0_2521 -> bb153__0_2521 [label="return"];
    bb151__0_2521 -> bb153__0_2521 [label="return"];
    bb152__0_2521 -> bb153__0_2521 [label="return"];
}
