digraph Mir_0_195 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn apply_rebase_to_insurance_fund(_1: u64, _2: &amp;ReErased mut state::spot_market::SpotMarket) -&gt; std::result::Result&lt;(), error::ErrorCode&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: bool;<br align="left"/>let mut _5: u64;<br align="left"/>let mut _6: bool;<br align="left"/>let mut _7: u128;<br align="left"/>let mut _8: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _9: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _10: u64;<br align="left"/>let mut _11: isize;<br align="left"/>let _12: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _13: !;<br align="left"/>let mut _14: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _15: u128;<br align="left"/>let mut _16: u128;<br align="left"/>let _17: u32;<br align="left"/>let _18: u128;<br align="left"/>let mut _19: (u32, u128);<br align="left"/>let mut _20: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (u32, u128)&gt;;<br align="left"/>let mut _21: std::result::Result&lt;(u32, u128), error::ErrorCode&gt;;<br align="left"/>let mut _22: u128;<br align="left"/>let mut _23: u64;<br align="left"/>let mut _24: isize;<br align="left"/>let _25: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _26: !;<br align="left"/>let mut _27: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _28: (u32, u128);<br align="left"/>let mut _29: u128;<br align="left"/>let mut _30: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _31: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _32: u128;<br align="left"/>let mut _33: u128;<br align="left"/>let mut _34: isize;<br align="left"/>let _35: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _36: !;<br align="left"/>let mut _37: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _38: u128;<br align="left"/>let mut _39: u128;<br align="left"/>let mut _40: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _41: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _42: u128;<br align="left"/>let mut _43: u128;<br align="left"/>let mut _44: isize;<br align="left"/>let _45: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _46: !;<br align="left"/>let mut _47: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _48: u128;<br align="left"/>let mut _49: u128;<br align="left"/>let mut _50: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _51: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _52: u128;<br align="left"/>let mut _53: u128;<br align="left"/>let mut _54: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _55: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _56: u32;<br align="left"/>let mut _57: isize;<br align="left"/>let _58: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _59: !;<br align="left"/>let mut _60: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _61: u128;<br align="left"/>let mut _62: isize;<br align="left"/>let _63: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _64: !;<br align="left"/>let mut _65: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _66: u128;<br align="left"/>let _67: ();<br align="left"/>let mut _68: &amp;ReErased str;<br align="left"/>let _69: &amp;ReErased str;<br align="left"/>let mut _70: &amp;ReErased std::string::String;<br align="left"/>let _71: &amp;ReErased std::string::String;<br align="left"/>let _72: std::string::String;<br align="left"/>let _73: std::string::String;<br align="left"/>let mut _74: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _75: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _76: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _77: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _78: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _79: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _80: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _81: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _82: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _83: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _84: &amp;ReErased u32;<br align="left"/>let _85: &amp;ReErased u32;<br align="left"/>let _86: ();<br align="left"/>let mut _87: bool;<br align="left"/>let mut _88: u64;<br align="left"/>let mut _89: bool;<br align="left"/>let mut _90: u128;<br align="left"/>let mut _91: u128;<br align="left"/>let mut _92: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _93: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _94: u64;<br align="left"/>let mut _95: isize;<br align="left"/>let _96: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _97: !;<br align="left"/>let mut _98: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _99: u128;<br align="left"/>let mut _100: ();<br align="left"/>let mut _101: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>debug insurance_fund_vault_balance =&gt; _1;<br align="left"/>debug spot_market =&gt; _2;<br align="left"/>debug residual =&gt; _12;<br align="left"/>debug val =&gt; _15;<br align="left"/>debug expo_diff =&gt; _17;<br align="left"/>debug rebase_divisor =&gt; _18;<br align="left"/>debug residual =&gt; _25;<br align="left"/>debug val =&gt; _28;<br align="left"/>debug residual =&gt; _35;<br align="left"/>debug val =&gt; _38;<br align="left"/>debug residual =&gt; _45;<br align="left"/>debug val =&gt; _48;<br align="left"/>debug residual =&gt; _58;<br align="left"/>debug val =&gt; _61;<br align="left"/>debug residual =&gt; _63;<br align="left"/>debug val =&gt; _66;<br align="left"/>debug res =&gt; _73;<br align="left"/>debug residual =&gt; _96;<br align="left"/>debug val =&gt; _99;<br align="left"/>>;
    bb0__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = _1<br/>_4 = Ne(move _5, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _4)</td></tr></table>>];
    bb1__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = _1<br/></td></tr><tr><td align="left">_9 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _10)</td></tr></table>>];
    bb2__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/></td></tr><tr><td align="left">_8 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _9)</td></tr></table>>];
    bb3__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>_11 = discriminant(_8)<br/></td></tr><tr><td align="left">switchInt(move _11)</td></tr></table>>];
    bb4__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_15)<br/>_15 = ((_8 as Continue).0: u128)<br/>_7 = _15<br/>StorageDead(_15)<br/>StorageLive(_16)<br/>_16 = (((*_2).9: state::spot_market::InsuranceFund).1: u128)<br/>_6 = Lt(move _7, move _16)<br/></td></tr><tr><td align="left">switchInt(move _6)</td></tr></table>>];
    bb5__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_8 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_14)<br/>_14 = _12<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _14)</td></tr></table>>];
    bb7__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_12)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_22 = (((*_2).9: state::spot_market::InsuranceFund).1: u128)<br/>StorageLive(_23)<br/>_23 = _1<br/></td></tr><tr><td align="left">_21 = calculate_rebase_info(move _22, move _23)</td></tr></table>>];
    bb9__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">_20 = &lt;std::result::Result&lt;(u32, u128), error::ErrorCode&gt; as Try&gt;::branch(move _21)</td></tr></table>>];
    bb11__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>_24 = discriminant(_20)<br/></td></tr><tr><td align="left">switchInt(move _24)</td></tr></table>>];
    bb12__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_28)<br/>_28 = ((_20 as Continue).0: (u32, u128))<br/>_19 = _28<br/>StorageDead(_28)<br/>StorageLive(_17)<br/>_17 = (_19.0: u32)<br/>StorageLive(_18)<br/>_18 = (_19.1: u128)<br/>StorageDead(_20)<br/>StorageDead(_19)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>_32 = (((*_2).9: state::spot_market::InsuranceFund).1: u128)<br/>StorageLive(_33)<br/>_33 = _18<br/></td></tr><tr><td align="left">_31 = &lt;u128 as SafeMath&gt;::safe_div(move _32, move _33)</td></tr></table>>];
    bb13__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_25)<br/>_25 = ((_20 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_27)<br/>_27 = _25<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _27)</td></tr></table>>];
    bb14__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_25)<br/>StorageDead(_20)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">_30 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _31)</td></tr></table>>];
    bb16__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>_34 = discriminant(_30)<br/></td></tr><tr><td align="left">switchInt(move _34)</td></tr></table>>];
    bb17__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_38)<br/>_38 = ((_30 as Continue).0: u128)<br/>_29 = _38<br/>StorageDead(_38)<br/>(((*_2).9: state::spot_market::InsuranceFund).1: u128) = move _29<br/>StorageDead(_29)<br/>StorageDead(_30)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>_42 = (((*_2).9: state::spot_market::InsuranceFund).2: u128)<br/>StorageLive(_43)<br/>_43 = _18<br/></td></tr><tr><td align="left">_41 = &lt;u128 as SafeMath&gt;::safe_div(move _42, move _43)</td></tr></table>>];
    bb18__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = ((_30 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_37)<br/>_37 = _35<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _37)</td></tr></table>>];
    bb19__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_35)<br/>StorageDead(_29)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">_40 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _41)</td></tr></table>>];
    bb21__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>_44 = discriminant(_40)<br/></td></tr><tr><td align="left">switchInt(move _44)</td></tr></table>>];
    bb22__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_48)<br/>_48 = ((_40 as Continue).0: u128)<br/>_39 = _48<br/>StorageDead(_48)<br/>(((*_2).9: state::spot_market::InsuranceFund).2: u128) = move _39<br/>StorageDead(_39)<br/>StorageDead(_40)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>_52 = (((*_2).9: state::spot_market::InsuranceFund).3: u128)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>_56 = _17<br/></td></tr><tr><td align="left">_55 = &lt;u32 as Cast&gt;::cast::&lt;u128&gt;(move _56)</td></tr></table>>];
    bb23__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_45)<br/>_45 = ((_40 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_47)<br/>_47 = _45<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _47)</td></tr></table>>];
    bb24__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_45)<br/>StorageDead(_39)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/></td></tr><tr><td align="left">_54 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _55)</td></tr></table>>];
    bb26__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>_57 = discriminant(_54)<br/></td></tr><tr><td align="left">switchInt(move _57)</td></tr></table>>];
    bb27__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_61)<br/>_61 = ((_54 as Continue).0: u128)<br/>_53 = _61<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">_51 = &lt;u128 as SafeMath&gt;::safe_add(move _52, move _53)</td></tr></table>>];
    bb28__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_58)<br/>_58 = ((_54 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_60)<br/>_60 = _58<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _60)</td></tr></table>>];
    bb29__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageDead(_58)<br/>StorageDead(_53)<br/>StorageDead(_52)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">_50 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _51)</td></tr></table>>];
    bb31__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>_62 = discriminant(_50)<br/></td></tr><tr><td align="left">switchInt(move _62)</td></tr></table>>];
    bb32__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_66)<br/>_66 = ((_50 as Continue).0: u128)<br/>_49 = _66<br/>StorageDead(_66)<br/>(((*_2).9: state::spot_market::InsuranceFund).3: u128) = move _49<br/>StorageDead(_49)<br/>StorageDead(_54)<br/>StorageDead(_50)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>_101 = const _<br/>_77 = &amp;(*_101)<br/>_76 = &amp;(*_77)<br/>_75 = move _76 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_76)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>_85 = &amp;_17<br/>_84 = &amp;(*_85)<br/></td></tr><tr><td align="left">_83 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u32&gt;(move _84)</td></tr></table>>];
    bb33__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageLive(_63)<br/>_63 = ((_50 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_65)<br/>_65 = _63<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _65)</td></tr></table>>];
    bb34__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageDead(_63)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>_82 = [move _83]<br/>StorageDead(_83)<br/>_81 = &amp;_82<br/>_80 = &amp;(*_81)<br/>_79 = move _80 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_80)<br/></td></tr><tr><td align="left">_74 = Arguments::&lt;'_&gt;::new_v1(move _75, move _79)</td></tr></table>>];
    bb36__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageDead(_75)<br/></td></tr><tr><td align="left">_73 = format(move _74)</td></tr></table>>];
    bb37__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageDead(_85)<br/>StorageDead(_82)<br/>StorageDead(_81)<br/>StorageDead(_77)<br/>_72 = move _73<br/>StorageDead(_73)<br/>_71 = &amp;_72<br/>_70 = &amp;(*_71)<br/></td></tr><tr><td align="left">_69 = &lt;String as Deref&gt;::deref(move _70)</td></tr></table>>];
    bb38__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">_68 = &amp;(*_69)<br/>StorageDead(_70)<br/></td></tr><tr><td align="left">_67 = solana_program::log::sol_log(move _68)</td></tr></table>>];
    bb39__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/></td></tr><tr><td align="left">drop(_72)</td></tr></table>>];
    bb40__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_71)<br/>StorageDead(_69)<br/>StorageDead(_67)<br/>_3 = const ()<br/>StorageDead(_18)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">_3 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>_88 = _1<br/>_87 = Ne(move _88, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _87)</td></tr></table>>];
    bb44__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>_90 = (((*_2).9: state::spot_market::InsuranceFund).1: u128)<br/>_89 = Eq(move _90, const 0_u128)<br/></td></tr><tr><td align="left">switchInt(move _89)</td></tr></table>>];
    bb45__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>_94 = _1<br/></td></tr><tr><td align="left">_93 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _94)</td></tr></table>>];
    bb46__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/></td></tr><tr><td align="left">_92 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _93)</td></tr></table>>];
    bb47__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>_95 = discriminant(_92)<br/></td></tr><tr><td align="left">switchInt(move _95)</td></tr></table>>];
    bb48__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageLive(_99)<br/>_99 = ((_92 as Continue).0: u128)<br/>_91 = _99<br/>StorageDead(_99)<br/>(((*_2).9: state::spot_market::InsuranceFund).1: u128) = move _91<br/>StorageDead(_91)<br/>StorageDead(_92)<br/>_86 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageLive(_96)<br/>_96 = ((_92 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_98)<br/>_98 = _96<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _98)</td></tr></table>>];
    bb50__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>StorageDead(_96)<br/>StorageDead(_91)<br/>StorageDead(_92)<br/>StorageDead(_89)<br/>StorageDead(_87)<br/>StorageDead(_86)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb51__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb52__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">_86 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>StorageDead(_87)<br/>StorageDead(_86)<br/>StorageLive(_100)<br/>_100 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _100)<br/>StorageDead(_100)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb55__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_54)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb56__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb57__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb58__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left">return</td></tr></table>>];
    bb59__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">59 (cleanup)</td></tr><tr><td align="left">drop(_72)</td></tr></table>>];
    bb60__0_195 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">60 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_195 -> bb41__0_195 [label="0"];
    bb0__0_195 -> bb1__0_195 [label="otherwise"];
    bb1__0_195 -> bb2__0_195 [label="return"];
    bb2__0_195 -> bb3__0_195 [label="return"];
    bb3__0_195 -> bb4__0_195 [label="0"];
    bb3__0_195 -> bb6__0_195 [label="1"];
    bb3__0_195 -> bb5__0_195 [label="otherwise"];
    bb4__0_195 -> bb9__0_195 [label="0"];
    bb4__0_195 -> bb8__0_195 [label="otherwise"];
    bb6__0_195 -> bb7__0_195 [label="return"];
    bb7__0_195 -> bb57__0_195 [label=""];
    bb8__0_195 -> bb10__0_195 [label="return"];
    bb9__0_195 -> bb42__0_195 [label=""];
    bb10__0_195 -> bb11__0_195 [label="return"];
    bb11__0_195 -> bb12__0_195 [label="0"];
    bb11__0_195 -> bb13__0_195 [label="1"];
    bb11__0_195 -> bb5__0_195 [label="otherwise"];
    bb12__0_195 -> bb15__0_195 [label="return"];
    bb13__0_195 -> bb14__0_195 [label="return"];
    bb14__0_195 -> bb57__0_195 [label=""];
    bb15__0_195 -> bb16__0_195 [label="return"];
    bb16__0_195 -> bb17__0_195 [label="0"];
    bb16__0_195 -> bb18__0_195 [label="1"];
    bb16__0_195 -> bb5__0_195 [label="otherwise"];
    bb17__0_195 -> bb20__0_195 [label="return"];
    bb18__0_195 -> bb19__0_195 [label="return"];
    bb19__0_195 -> bb56__0_195 [label=""];
    bb20__0_195 -> bb21__0_195 [label="return"];
    bb21__0_195 -> bb22__0_195 [label="0"];
    bb21__0_195 -> bb23__0_195 [label="1"];
    bb21__0_195 -> bb5__0_195 [label="otherwise"];
    bb22__0_195 -> bb25__0_195 [label="return"];
    bb23__0_195 -> bb24__0_195 [label="return"];
    bb24__0_195 -> bb56__0_195 [label=""];
    bb25__0_195 -> bb26__0_195 [label="return"];
    bb26__0_195 -> bb27__0_195 [label="0"];
    bb26__0_195 -> bb28__0_195 [label="1"];
    bb26__0_195 -> bb5__0_195 [label="otherwise"];
    bb27__0_195 -> bb30__0_195 [label="return"];
    bb28__0_195 -> bb29__0_195 [label="return"];
    bb29__0_195 -> bb55__0_195 [label=""];
    bb30__0_195 -> bb31__0_195 [label="return"];
    bb31__0_195 -> bb32__0_195 [label="0"];
    bb31__0_195 -> bb33__0_195 [label="1"];
    bb31__0_195 -> bb5__0_195 [label="otherwise"];
    bb32__0_195 -> bb35__0_195 [label="return"];
    bb33__0_195 -> bb34__0_195 [label="return"];
    bb34__0_195 -> bb55__0_195 [label=""];
    bb35__0_195 -> bb36__0_195 [label="return"];
    bb36__0_195 -> bb37__0_195 [label="return"];
    bb37__0_195 -> bb38__0_195 [label="return"];
    bb37__0_195 -> bb59__0_195 [label="unwind"];
    bb38__0_195 -> bb39__0_195 [label="return"];
    bb38__0_195 -> bb59__0_195 [label="unwind"];
    bb39__0_195 -> bb40__0_195 [label="return"];
    bb39__0_195 -> bb60__0_195 [label="unwind"];
    bb40__0_195 -> bb43__0_195 [label=""];
    bb41__0_195 -> bb42__0_195 [label=""];
    bb42__0_195 -> bb43__0_195 [label=""];
    bb43__0_195 -> bb52__0_195 [label="0"];
    bb43__0_195 -> bb44__0_195 [label="otherwise"];
    bb44__0_195 -> bb51__0_195 [label="0"];
    bb44__0_195 -> bb45__0_195 [label="otherwise"];
    bb45__0_195 -> bb46__0_195 [label="return"];
    bb46__0_195 -> bb47__0_195 [label="return"];
    bb47__0_195 -> bb48__0_195 [label="0"];
    bb47__0_195 -> bb49__0_195 [label="1"];
    bb47__0_195 -> bb5__0_195 [label="otherwise"];
    bb48__0_195 -> bb54__0_195 [label=""];
    bb49__0_195 -> bb50__0_195 [label="return"];
    bb50__0_195 -> bb58__0_195 [label=""];
    bb51__0_195 -> bb53__0_195 [label=""];
    bb52__0_195 -> bb53__0_195 [label=""];
    bb53__0_195 -> bb54__0_195 [label=""];
    bb54__0_195 -> bb58__0_195 [label=""];
    bb55__0_195 -> bb56__0_195 [label=""];
    bb56__0_195 -> bb57__0_195 [label=""];
    bb57__0_195 -> bb58__0_195 [label=""];
    bb59__0_195 -> bb60__0_195 [label="return"];
}
