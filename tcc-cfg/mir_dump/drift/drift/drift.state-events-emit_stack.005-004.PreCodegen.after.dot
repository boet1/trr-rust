digraph Mir_0_2896 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn emit_stack(_1: T/#0) -&gt; std::result::Result&lt;(), error::ErrorCode&gt;<br align="left"/>let mut _2: [u8; N/#1: usize];<br align="left"/>let mut _3: [u8; N/#1: usize];<br align="left"/>let mut _4: T/#0;<br align="left"/>let mut _5: &amp;ReErased mut [u8];<br align="left"/>let mut _6: &amp;ReErased mut [u8];<br align="left"/>let mut _7: &amp;ReErased mut [u8];<br align="left"/>let mut _8: &amp;ReErased mut [u8; N/#1: usize];<br align="left"/>let mut _9: std::ops::RangeFull;<br align="left"/>let mut _10: &amp;ReErased mut [u8];<br align="left"/>let mut _11: &amp;ReErased mut [u8];<br align="left"/>let mut _12: &amp;ReErased mut [u8];<br align="left"/>let mut _13: &amp;ReErased mut [u8; N/#1: usize];<br align="left"/>let mut _14: std::ops::RangeFull;<br align="left"/>let mut _15: bool;<br align="left"/>debug event =&gt; _1;<br align="left"/>debug data_buf =&gt; _2;<br align="left"/>debug out_buf =&gt; _3;<br align="left"/>>;
    bb0__0_2896 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_15 = const false<br/>StorageLive(_2)<br/>_2 = [const 0_u8; N]<br/>StorageLive(_3)<br/>_3 = [const 0_u8; N]<br/>StorageLive(_4)<br/>_15 = const true<br/>_4 = move _1<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = &amp;mut _2<br/>StorageLive(_9)<br/>_9 = RangeFull<br/></td></tr><tr><td align="left">_7 = &lt;[u8; N] as IndexMut&lt;RangeFull&gt;&gt;::index_mut(move _8, move _9)</td></tr></table>>];
    bb1__0_2896 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_8)<br/>_6 = &amp;mut (*_7)<br/>_5 = &amp;mut (*_6)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>_13 = &amp;mut _3<br/>StorageLive(_14)<br/>_14 = RangeFull<br/></td></tr><tr><td align="left">_12 = &lt;[u8; N] as IndexMut&lt;RangeFull&gt;&gt;::index_mut(move _13, move _14)</td></tr></table>>];
    bb2__0_2896 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_13)<br/>_11 = &amp;mut (*_12)<br/>_10 = &amp;mut (*_11)<br/>_15 = const false<br/></td></tr><tr><td align="left">_0 = emit_buffers::&lt;T&gt;(move _4, move _5, move _10)</td></tr></table>>];
    bb3__0_2896 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_5)<br/>_15 = const false<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb4__0_2896 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">4 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb5__0_2896 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">5 (cleanup)</td></tr><tr><td align="left">drop(_4)</td></tr></table>>];
    bb6__0_2896 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">6 (cleanup)</td></tr><tr><td align="left">switchInt(_15)</td></tr></table>>];
    bb0__0_2896 -> bb1__0_2896 [label="return"];
    bb0__0_2896 -> bb6__0_2896 [label="unwind"];
    bb1__0_2896 -> bb2__0_2896 [label="return"];
    bb1__0_2896 -> bb6__0_2896 [label="unwind"];
    bb2__0_2896 -> bb3__0_2896 [label="return"];
    bb2__0_2896 -> bb6__0_2896 [label="unwind"];
    bb5__0_2896 -> bb4__0_2896 [label="return"];
    bb6__0_2896 -> bb4__0_2896 [label="0"];
    bb6__0_2896 -> bb5__0_2896 [label="otherwise"];
}
