digraph Mir_0_1869 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_spread_inventory_scale(_1: i128, _2: u128, _3: u128, _4: u128, _5: u64, _6: u64) -&gt; std::result::Result&lt;u64, error::ErrorCode&gt;<br align="left"/>let _7: ();<br align="left"/>let mut _8: bool;<br align="left"/>let mut _9: i128;<br align="left"/>let mut _10: !;<br align="left"/>let _11: i128;<br align="left"/>let mut _12: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _13: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _14: i128;<br align="left"/>let mut _15: u128;<br align="left"/>let mut _16: u128;<br align="left"/>let mut _17: u128;<br align="left"/>let mut _18: isize;<br align="left"/>let _19: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _20: !;<br align="left"/>let mut _21: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _22: i128;<br align="left"/>let _23: u64;<br align="left"/>let mut _24: u64;<br align="left"/>let mut _25: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _26: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _27: u64;<br align="left"/>let mut _28: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _29: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _30: u64;<br align="left"/>let mut _31: isize;<br align="left"/>let _32: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _33: !;<br align="left"/>let mut _34: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _35: u64;<br align="left"/>let mut _36: u64;<br align="left"/>let mut _37: u64;<br align="left"/>let mut _38: isize;<br align="left"/>let _39: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _40: !;<br align="left"/>let mut _41: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _42: u64;<br align="left"/>let _43: u64;<br align="left"/>let mut _44: u64;<br align="left"/>let mut _45: u64;<br align="left"/>let mut _46: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _47: u64;<br align="left"/>let mut _48: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _49: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _50: u64;<br align="left"/>let mut _51: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _52: u64;<br align="left"/>let mut _53: u64;<br align="left"/>let mut _54: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _55: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _56: u128;<br align="left"/>let mut _57: i128;<br align="left"/>let mut _58: isize;<br align="left"/>let _59: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _60: !;<br align="left"/>let mut _61: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _62: u64;<br align="left"/>let mut _63: u64;<br align="left"/>let mut _64: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _65: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _66: isize;<br align="left"/>let _67: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _68: !;<br align="left"/>let mut _69: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _70: u64;<br align="left"/>let mut _71: isize;<br align="left"/>let _72: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _73: !;<br align="left"/>let mut _74: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _75: u64;<br align="left"/>let mut _76: u64;<br align="left"/>debug base_asset_amount_with_amm =&gt; _1;<br align="left"/>debug base_asset_reserve =&gt; _2;<br align="left"/>debug min_base_asset_reserve =&gt; _3;<br align="left"/>debug max_base_asset_reserve =&gt; _4;<br align="left"/>debug directional_spread =&gt; _5;<br align="left"/>debug max_spread =&gt; _6;<br align="left"/>debug amm_inventory_pct =&gt; _11;<br align="left"/>debug residual =&gt; _19;<br align="left"/>debug val =&gt; _22;<br align="left"/>debug inventory_scale_max =&gt; _23;<br align="left"/>debug residual =&gt; _32;<br align="left"/>debug val =&gt; _35;<br align="left"/>debug residual =&gt; _39;<br align="left"/>debug val =&gt; _42;<br align="left"/>debug inventory_scale_capped =&gt; _43;<br align="left"/>debug residual =&gt; _59;<br align="left"/>debug val =&gt; _62;<br align="left"/>debug residual =&gt; _67;<br align="left"/>debug val =&gt; _70;<br align="left"/>debug residual =&gt; _72;<br align="left"/>debug val =&gt; _75;<br align="left"/>>;
    bb0__0_1869 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = _1<br/>_8 = Eq(move _9, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb1__0_1869 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>_0 = std::result::Result::&lt;u64, error::ErrorCode&gt;::Ok(const _)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb2__0_1869 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>_7 = const ()<br/>StorageDead(_8)<br/>StorageDead(_7)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_14 = _1<br/>StorageLive(_15)<br/>_15 = _2<br/>StorageLive(_16)<br/>_16 = _3<br/>StorageLive(_17)<br/>_17 = _4<br/></td></tr><tr><td align="left">_13 = calculate_inventory_liquidity_ratio(move _14, move _15, move _16, move _17)</td></tr></table>>];
    bb3__0_1869 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">_12 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _13)</td></tr></table>>];
    bb4__0_1869 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>_18 = discriminant(_12)<br/></td></tr><tr><td align="left">switchInt(move _18)</td></tr></table>>];
    bb5__0_1869 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_22)<br/>_22 = ((_12 as Continue).0: i128)<br/>_11 = _22<br/>StorageDead(_22)<br/>StorageDead(_12)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>_30 = _6<br/></td></tr><tr><td align="left">_29 = &lt;u64 as SafeMath&gt;::safe_mul(move _30, const _)</td></tr></table>>];
    bb6__0_1869 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb7__0_1869 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_19)<br/>_19 = ((_12 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_21)<br/>_21 = _19<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _21)</td></tr></table>>];
    bb8__0_1869 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_19)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_1869 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/></td></tr><tr><td align="left">_28 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _29)</td></tr></table>>];
    bb10__0_1869 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>_31 = discriminant(_28)<br/></td></tr><tr><td align="left">switchInt(move _31)</td></tr></table>>];
    bb11__0_1869 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = ((_28 as Continue).0: u64)<br/>_27 = _35<br/>StorageDead(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>_37 = _5<br/></td></tr><tr><td align="left">_36 = std::cmp::max::&lt;u64&gt;(move _37, const 1_u64)</td></tr></table>>];
    bb12__0_1869 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_32)<br/>_32 = ((_28 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_34)<br/>_34 = _32<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _34)</td></tr></table>>];
    bb13__0_1869 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_32)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_1869 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/></td></tr><tr><td align="left">_26 = &lt;u64 as SafeMath&gt;::safe_div(move _27, move _36)</td></tr></table>>];
    bb15__0_1869 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">_25 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _26)</td></tr></table>>];
    bb16__0_1869 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>_38 = discriminant(_25)<br/></td></tr><tr><td align="left">switchInt(move _38)</td></tr></table>>];
    bb17__0_1869 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_42)<br/>_42 = ((_25 as Continue).0: u64)<br/>_24 = _42<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">_23 = &lt;u64 as Ord&gt;::max(const _, move _24)</td></tr></table>>];
    bb18__0_1869 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_39)<br/>_39 = ((_25 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_41)<br/>_41 = _39<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _41)</td></tr></table>>];
    bb19__0_1869 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_1869 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_28)<br/>StorageDead(_25)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>_44 = _23<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>_52 = _23<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>_57 = _11<br/></td></tr><tr><td align="left">_56 = core::num::&lt;impl i128&gt;::unsigned_abs(move _57)</td></tr></table>>];
    bb21__0_1869 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/></td></tr><tr><td align="left">_55 = &lt;u128 as Cast&gt;::cast::&lt;u64&gt;(move _56)</td></tr></table>>];
    bb22__0_1869 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/></td></tr><tr><td align="left">_54 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _55)</td></tr></table>>];
    bb23__0_1869 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>_58 = discriminant(_54)<br/></td></tr><tr><td align="left">switchInt(move _58)</td></tr></table>>];
    bb24__0_1869 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_62)<br/>_62 = ((_54 as Continue).0: u64)<br/>_53 = _62<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">_51 = &lt;u64 as SafeMath&gt;::safe_mul(move _52, move _53)</td></tr></table>>];
    bb25__0_1869 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_59)<br/>_59 = ((_54 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_61)<br/>_61 = _59<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _61)</td></tr></table>>];
    bb26__0_1869 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_59)<br/>StorageDead(_53)<br/>StorageDead(_52)<br/>StorageDead(_51)<br/>StorageDead(_50)<br/>StorageDead(_49)<br/>StorageDead(_47)<br/>StorageDead(_46)<br/>StorageDead(_45)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_1869 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">_50 = std::result::Result::&lt;u64, error::ErrorCode&gt;::unwrap_or(move _51, const _)</td></tr></table>>];
    bb28__0_1869 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/></td></tr><tr><td align="left">_65 = &lt;i128 as Cast&gt;::cast::&lt;u64&gt;(const _)</td></tr></table>>];
    bb29__0_1869 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left">_64 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _65)</td></tr></table>>];
    bb30__0_1869 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>_66 = discriminant(_64)<br/></td></tr><tr><td align="left">switchInt(move _66)</td></tr></table>>];
    bb31__0_1869 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_70)<br/>_70 = ((_64 as Continue).0: u64)<br/>_63 = _70<br/>StorageDead(_70)<br/></td></tr><tr><td align="left">_49 = &lt;u64 as SafeMath&gt;::safe_div(move _50, move _63)</td></tr></table>>];
    bb32__0_1869 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_67)<br/>_67 = ((_64 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_69)<br/>_69 = _67<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _69)</td></tr></table>>];
    bb33__0_1869 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageDead(_67)<br/>StorageDead(_63)<br/>StorageDead(_50)<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_1869 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">_48 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _49)</td></tr></table>>];
    bb35__0_1869 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>_71 = discriminant(_48)<br/></td></tr><tr><td align="left">switchInt(move _71)</td></tr></table>>];
    bb36__0_1869 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageLive(_75)<br/>_75 = ((_48 as Continue).0: u64)<br/>_47 = _75<br/>StorageDead(_75)<br/></td></tr><tr><td align="left">_46 = &lt;u64 as SafeMath&gt;::safe_add(const _, move _47)</td></tr></table>>];
    bb37__0_1869 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_72)<br/>_72 = ((_48 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_74)<br/>_74 = _72<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _74)</td></tr></table>>];
    bb38__0_1869 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageDead(_72)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_1869 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/></td></tr><tr><td align="left">_45 = std::result::Result::&lt;u64, error::ErrorCode&gt;::unwrap_or(move _46, const _)</td></tr></table>>];
    bb40__0_1869 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/></td></tr><tr><td align="left">_43 = std::cmp::min::&lt;u64&gt;(move _44, move _45)</td></tr></table>>];
    bb41__0_1869 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_44)<br/>StorageDead(_64)<br/>StorageDead(_54)<br/>StorageDead(_48)<br/>StorageLive(_76)<br/>_76 = _43<br/>_0 = std::result::Result::&lt;u64, error::ErrorCode&gt;::Ok(move _76)<br/>StorageDead(_76)<br/>StorageDead(_43)<br/>StorageDead(_23)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_1869 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_46)<br/>StorageDead(_45)<br/>StorageDead(_44)<br/>StorageDead(_64)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_1869 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_48)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_1869 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_28)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_1869 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_1869 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_1869 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_1869 -> bb2__0_1869 [label="0"];
    bb0__0_1869 -> bb1__0_1869 [label="otherwise"];
    bb1__0_1869 -> bb47__0_1869 [label=""];
    bb2__0_1869 -> bb3__0_1869 [label="return"];
    bb3__0_1869 -> bb4__0_1869 [label="return"];
    bb4__0_1869 -> bb5__0_1869 [label="0"];
    bb4__0_1869 -> bb7__0_1869 [label="1"];
    bb4__0_1869 -> bb6__0_1869 [label="otherwise"];
    bb5__0_1869 -> bb9__0_1869 [label="return"];
    bb7__0_1869 -> bb8__0_1869 [label="return"];
    bb8__0_1869 -> bb46__0_1869 [label=""];
    bb9__0_1869 -> bb10__0_1869 [label="return"];
    bb10__0_1869 -> bb11__0_1869 [label="0"];
    bb10__0_1869 -> bb12__0_1869 [label="1"];
    bb10__0_1869 -> bb6__0_1869 [label="otherwise"];
    bb11__0_1869 -> bb14__0_1869 [label="return"];
    bb12__0_1869 -> bb13__0_1869 [label="return"];
    bb13__0_1869 -> bb44__0_1869 [label=""];
    bb14__0_1869 -> bb15__0_1869 [label="return"];
    bb15__0_1869 -> bb16__0_1869 [label="return"];
    bb16__0_1869 -> bb17__0_1869 [label="0"];
    bb16__0_1869 -> bb18__0_1869 [label="1"];
    bb16__0_1869 -> bb6__0_1869 [label="otherwise"];
    bb17__0_1869 -> bb20__0_1869 [label="return"];
    bb18__0_1869 -> bb19__0_1869 [label="return"];
    bb19__0_1869 -> bb44__0_1869 [label=""];
    bb20__0_1869 -> bb21__0_1869 [label="return"];
    bb21__0_1869 -> bb22__0_1869 [label="return"];
    bb22__0_1869 -> bb23__0_1869 [label="return"];
    bb23__0_1869 -> bb24__0_1869 [label="0"];
    bb23__0_1869 -> bb25__0_1869 [label="1"];
    bb23__0_1869 -> bb6__0_1869 [label="otherwise"];
    bb24__0_1869 -> bb27__0_1869 [label="return"];
    bb25__0_1869 -> bb26__0_1869 [label="return"];
    bb26__0_1869 -> bb43__0_1869 [label=""];
    bb27__0_1869 -> bb28__0_1869 [label="return"];
    bb28__0_1869 -> bb29__0_1869 [label="return"];
    bb29__0_1869 -> bb30__0_1869 [label="return"];
    bb30__0_1869 -> bb31__0_1869 [label="0"];
    bb30__0_1869 -> bb32__0_1869 [label="1"];
    bb30__0_1869 -> bb6__0_1869 [label="otherwise"];
    bb31__0_1869 -> bb34__0_1869 [label="return"];
    bb32__0_1869 -> bb33__0_1869 [label="return"];
    bb33__0_1869 -> bb42__0_1869 [label=""];
    bb34__0_1869 -> bb35__0_1869 [label="return"];
    bb35__0_1869 -> bb36__0_1869 [label="0"];
    bb35__0_1869 -> bb37__0_1869 [label="1"];
    bb35__0_1869 -> bb6__0_1869 [label="otherwise"];
    bb36__0_1869 -> bb39__0_1869 [label="return"];
    bb37__0_1869 -> bb38__0_1869 [label="return"];
    bb38__0_1869 -> bb42__0_1869 [label=""];
    bb39__0_1869 -> bb40__0_1869 [label="return"];
    bb40__0_1869 -> bb41__0_1869 [label="return"];
    bb41__0_1869 -> bb47__0_1869 [label=""];
    bb42__0_1869 -> bb43__0_1869 [label=""];
    bb43__0_1869 -> bb45__0_1869 [label=""];
    bb44__0_1869 -> bb45__0_1869 [label=""];
    bb45__0_1869 -> bb46__0_1869 [label=""];
    bb46__0_1869 -> bb47__0_1869 [label=""];
}
