digraph Mir_0_3365 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn InsuranceFundStake::validate_base(_1: &amp;ReErased state::insurance_fund_stake::InsuranceFundStake, _2: &amp;ReErased state::spot_market::SpotMarket) -&gt; std::result::Result&lt;(), error::ErrorCode&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _5: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _6: bool;<br align="left"/>let mut _7: u128;<br align="left"/>let mut _8: u128;<br align="left"/>let mut _9: ();<br align="left"/>let _10: error::ErrorCode;<br align="left"/>let _11: ();<br align="left"/>let mut _12: &amp;ReErased str;<br align="left"/>let _13: &amp;ReErased str;<br align="left"/>let mut _14: &amp;ReErased std::string::String;<br align="left"/>let _15: &amp;ReErased std::string::String;<br align="left"/>let _16: std::string::String;<br align="left"/>let _17: std::string::String;<br align="left"/>let mut _18: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _19: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _20: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _21: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _22: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _23: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _24: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _25: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _26: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _27: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _28: &amp;ReErased error::ErrorCode;<br align="left"/>let _29: &amp;ReErased error::ErrorCode;<br align="left"/>let _30: ();<br align="left"/>let mut _31: &amp;ReErased str;<br align="left"/>let _32: &amp;ReErased str;<br align="left"/>let mut _33: &amp;ReErased std::string::String;<br align="left"/>let _34: &amp;ReErased std::string::String;<br align="left"/>let _35: std::string::String;<br align="left"/>let _36: std::string::String;<br align="left"/>let mut _37: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _38: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _39: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _40: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _41: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _42: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _43: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _44: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _45: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _46: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _47: &amp;ReErased u128;<br align="left"/>let _48: &amp;ReErased u128;<br align="left"/>let mut _49: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _50: &amp;ReErased u128;<br align="left"/>let _51: &amp;ReErased u128;<br align="left"/>let mut _52: error::ErrorCode;<br align="left"/>let mut _53: isize;<br align="left"/>let _54: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _55: !;<br align="left"/>let mut _56: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _57: ();<br align="left"/>let mut _58: ();<br align="left"/>let mut _59: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _60: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>debug self =&gt; _1;<br align="left"/>debug spot_market =&gt; _2;<br align="left"/>debug error_code =&gt; _10;<br align="left"/>debug res =&gt; _17;<br align="left"/>debug res =&gt; _36;<br align="left"/>debug residual =&gt; _54;<br align="left"/>debug val =&gt; _57;<br align="left"/>>;
    bb0__0_3365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = ((*_1).3: u128)<br/>StorageLive(_8)<br/>_8 = (((*_2).9: state::spot_market::InsuranceFund).3: u128)<br/>_6 = Eq(move _7, move _8)<br/></td></tr><tr><td align="left">switchInt(move _6)</td></tr></table>>];
    bb1__0_3365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_7)<br/>StorageLive(_9)<br/>_9 = ()<br/>_5 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _9)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb2__0_3365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_7)<br/>StorageLive(_10)<br/>_10 = error::ErrorCode::InvalidIFRebase<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_60 = const _<br/>_21 = &amp;(*_60)<br/>_20 = &amp;(*_21)<br/>_19 = move _20 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_20)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_29 = &amp;_10<br/>_28 = &amp;(*_29)<br/></td></tr><tr><td align="left">_27 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _28)</td></tr></table>>];
    bb3__0_3365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>_26 = [move _27]<br/>StorageDead(_27)<br/>_25 = &amp;_26<br/>_24 = &amp;(*_25)<br/>_23 = move _24 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">_18 = Arguments::&lt;'_&gt;::new_v1(move _19, move _23)</td></tr></table>>];
    bb4__0_3365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">_17 = format(move _18)</td></tr></table>>];
    bb5__0_3365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_29)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_21)<br/>_16 = move _17<br/>StorageDead(_17)<br/>_15 = &amp;_16<br/>_14 = &amp;(*_15)<br/></td></tr><tr><td align="left">_13 = &lt;String as Deref&gt;::deref(move _14)</td></tr></table>>];
    bb6__0_3365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">_12 = &amp;(*_13)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">_11 = solana_program::log::sol_log(move _12)</td></tr></table>>];
    bb7__0_3365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/></td></tr><tr><td align="left">drop(_16)</td></tr></table>>];
    bb8__0_3365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_15)<br/>StorageDead(_13)<br/>StorageDead(_11)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_59 = const _<br/>_40 = &amp;(*_59)<br/>_39 = &amp;(*_40)<br/>_38 = move _39 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_39)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>_48 = &amp;((*_1).3: u128)<br/>_47 = &amp;(*_48)<br/></td></tr><tr><td align="left">_46 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u128&gt;(move _47)</td></tr></table>>];
    bb9__0_3365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>_51 = &amp;(((*_2).9: state::spot_market::InsuranceFund).3: u128)<br/>_50 = &amp;(*_51)<br/></td></tr><tr><td align="left">_49 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u128&gt;(move _50)</td></tr></table>>];
    bb10__0_3365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>_45 = [move _46, move _49]<br/>StorageDead(_49)<br/>StorageDead(_46)<br/>_44 = &amp;_45<br/>_43 = &amp;(*_44)<br/>_42 = move _43 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">_37 = Arguments::&lt;'_&gt;::new_v1(move _38, move _42)</td></tr></table>>];
    bb11__0_3365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">_36 = format(move _37)</td></tr></table>>];
    bb12__0_3365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_51)<br/>StorageDead(_48)<br/>StorageDead(_45)<br/>StorageDead(_44)<br/>StorageDead(_40)<br/>_35 = move _36<br/>StorageDead(_36)<br/>_34 = &amp;_35<br/>_33 = &amp;(*_34)<br/></td></tr><tr><td align="left">_32 = &lt;String as Deref&gt;::deref(move _33)</td></tr></table>>];
    bb13__0_3365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">_31 = &amp;(*_32)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">_30 = solana_program::log::sol_log(move _31)</td></tr></table>>];
    bb14__0_3365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/></td></tr><tr><td align="left">drop(_35)</td></tr></table>>];
    bb15__0_3365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_34)<br/>StorageDead(_32)<br/>StorageDead(_30)<br/>StorageLive(_52)<br/>_52 = _10<br/>_5 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _52)<br/>StorageDead(_52)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_3365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb17__0_3365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_53 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _53)</td></tr></table>>];
    bb18__0_3365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_57)<br/>_57 = ((_4 as Continue).0: ())<br/>_3 = _57<br/>StorageDead(_57)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_58)<br/>_58 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _58)<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_3365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb20__0_3365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_54)<br/>_54 = ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_56)<br/>_56 = _54<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _56)</td></tr></table>>];
    bb21__0_3365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_54)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_3365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left">return</td></tr></table>>];
    bb23__0_3365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">23 (cleanup)</td></tr><tr><td align="left">drop(_35)</td></tr></table>>];
    bb24__0_3365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">24 (cleanup)</td></tr><tr><td align="left">drop(_16)</td></tr></table>>];
    bb25__0_3365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">25 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_3365 -> bb2__0_3365 [label="0"];
    bb0__0_3365 -> bb1__0_3365 [label="otherwise"];
    bb1__0_3365 -> bb16__0_3365 [label=""];
    bb2__0_3365 -> bb3__0_3365 [label="return"];
    bb3__0_3365 -> bb4__0_3365 [label="return"];
    bb4__0_3365 -> bb5__0_3365 [label="return"];
    bb5__0_3365 -> bb6__0_3365 [label="return"];
    bb5__0_3365 -> bb24__0_3365 [label="unwind"];
    bb6__0_3365 -> bb7__0_3365 [label="return"];
    bb6__0_3365 -> bb24__0_3365 [label="unwind"];
    bb7__0_3365 -> bb8__0_3365 [label="return"];
    bb7__0_3365 -> bb25__0_3365 [label="unwind"];
    bb8__0_3365 -> bb9__0_3365 [label="return"];
    bb9__0_3365 -> bb10__0_3365 [label="return"];
    bb10__0_3365 -> bb11__0_3365 [label="return"];
    bb11__0_3365 -> bb12__0_3365 [label="return"];
    bb12__0_3365 -> bb13__0_3365 [label="return"];
    bb12__0_3365 -> bb23__0_3365 [label="unwind"];
    bb13__0_3365 -> bb14__0_3365 [label="return"];
    bb13__0_3365 -> bb23__0_3365 [label="unwind"];
    bb14__0_3365 -> bb15__0_3365 [label="return"];
    bb14__0_3365 -> bb25__0_3365 [label="unwind"];
    bb15__0_3365 -> bb16__0_3365 [label=""];
    bb16__0_3365 -> bb17__0_3365 [label="return"];
    bb17__0_3365 -> bb18__0_3365 [label="0"];
    bb17__0_3365 -> bb20__0_3365 [label="1"];
    bb17__0_3365 -> bb19__0_3365 [label="otherwise"];
    bb18__0_3365 -> bb22__0_3365 [label=""];
    bb20__0_3365 -> bb21__0_3365 [label="return"];
    bb21__0_3365 -> bb22__0_3365 [label=""];
    bb23__0_3365 -> bb25__0_3365 [label="return"];
    bb24__0_3365 -> bb25__0_3365 [label="return"];
}
