digraph Mir_0_14512 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn U192::integer_sqrt(_1: &amp;ReErased math::bn::U192) -&gt; math::bn::U192<br align="left"/>let _2: math::bn::U192;<br align="left"/>let _3: ();<br align="left"/>let mut _4: bool;<br align="left"/>let mut _5: &amp;ReErased &amp;ReErased math::bn::U192;<br align="left"/>let mut _6: &amp;ReErased &amp;ReErased math::bn::U192;<br align="left"/>let _7: &amp;ReErased math::bn::U192;<br align="left"/>let _8: &amp;ReErased math::bn::U192;<br align="left"/>let mut _9: !;<br align="left"/>let _10: u32;<br align="left"/>let mut _11: u32;<br align="left"/>let mut _12: u32;<br align="left"/>let mut _13: usize;<br align="left"/>let mut _14: &amp;ReErased math::bn::U192;<br align="left"/>let mut _15: (u32, bool);<br align="left"/>let mut _16: bool;<br align="left"/>let mut _17: math::bn::U192;<br align="left"/>let mut _18: math::bn::U192;<br align="left"/>let mut _19: u32;<br align="left"/>let mut _20: !;<br align="left"/>let mut _21: ();<br align="left"/>let _22: math::bn::U192;<br align="left"/>let mut _23: math::bn::U192;<br align="left"/>let mut _24: math::bn::U192;<br align="left"/>let mut _25: math::bn::U192;<br align="left"/>let mut _26: &amp;ReErased math::bn::U192;<br align="left"/>let mut _27: math::bn::U192;<br align="left"/>let _28: ();<br align="left"/>let mut _29: bool;<br align="left"/>let mut _30: &amp;ReErased math::bn::U192;<br align="left"/>let mut _31: &amp;ReErased math::bn::U192;<br align="left"/>let mut _32: !;<br align="left"/>let mut _33: math::bn::U192;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug one =&gt; _2;<br align="left"/>debug shift =&gt; _10;<br align="left"/>debug x_prev =&gt; _17;<br align="left"/>debug x =&gt; _22;<br align="left"/>>;
    bb0__0_14512 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/></td></tr><tr><td align="left">_2 = U192::one()</td></tr></table>>];
    bb1__0_14512 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = &amp;_1<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = &amp;_2<br/>_7 = &amp;(*_8)<br/>_6 = &amp;_7<br/></td></tr><tr><td align="left">_4 = &lt;&amp;U192 as PartialOrd&gt;::le(move _5, move _6)</td></tr></table>>];
    bb2__0_14512 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left">switchInt(move _4)</td></tr></table>>];
    bb3__0_14512 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>_0 = (*_1)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb4__0_14512 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>_3 = const ()<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_14 = &amp;(*_1)<br/></td></tr><tr><td align="left">_13 = U192::bits(move _14)</td></tr></table>>];
    bb5__0_14512 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>_12 = move _13 as u32 (IntToInt)<br/>StorageDead(_13)<br/>_15 = CheckedAdd(_12, const 1_u32)<br/></td></tr><tr><td align="left">assert(!move (_15.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, move _12, const 1_u32)</td></tr></table>>];
    bb6__0_14512 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">_11 = move (_15.0: u32)<br/>StorageDead(_12)<br/>_16 = Eq(const 2_u32, const 0_u32)<br/></td></tr><tr><td align="left">assert(!move _16, &quot;attempt to divide `{}` by zero&quot;, _11)</td></tr></table>>];
    bb7__0_14512 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">_10 = Div(move _11, const 2_u32)<br/>StorageDead(_11)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = _2<br/>StorageLive(_19)<br/>_19 = _10<br/></td></tr><tr><td align="left">_17 = &lt;U192 as Shl&lt;u32&gt;&gt;::shl(move _18, move _19)</td></tr></table>>];
    bb8__0_14512 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_18)<br/>StorageLive(_20)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_14512 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_24 = _17<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_26 = _1<br/>StorageLive(_27)<br/>_27 = _17<br/></td></tr><tr><td align="left">_25 = &lt;&amp;U192 as Div&lt;U192&gt;&gt;::div(move _26, move _27)</td></tr></table>>];
    bb10__0_14512 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">_23 = &lt;U192 as Add&gt;::add(move _24, move _25)</td></tr></table>>];
    bb11__0_14512 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">_22 = &lt;U192 as Shr&lt;i32&gt;&gt;::shr(move _23, const 1_i32)</td></tr></table>>];
    bb12__0_14512 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>_30 = &amp;_22<br/>StorageLive(_31)<br/>_31 = &amp;_17<br/></td></tr><tr><td align="left">_29 = &lt;U192 as PartialOrd&gt;::ge(move _30, move _31)</td></tr></table>>];
    bb13__0_14512 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left">switchInt(move _29)</td></tr></table>>];
    bb14__0_14512 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_30)<br/>_0 = _17<br/>StorageDead(_29)<br/>StorageDead(_28)<br/>StorageDead(_22)<br/>StorageDead(_20)<br/>StorageDead(_17)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_14512 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_30)<br/>_28 = const ()<br/>StorageDead(_29)<br/>StorageDead(_28)<br/>StorageLive(_33)<br/>_33 = _22<br/>_17 = move _33<br/>StorageDead(_33)<br/>_21 = const ()<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_14512 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_2)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_14512 -> bb1__0_14512 [label="return"];
    bb1__0_14512 -> bb2__0_14512 [label="return"];
    bb2__0_14512 -> bb4__0_14512 [label="0"];
    bb2__0_14512 -> bb3__0_14512 [label="otherwise"];
    bb3__0_14512 -> bb16__0_14512 [label=""];
    bb4__0_14512 -> bb5__0_14512 [label="return"];
    bb5__0_14512 -> bb6__0_14512 [label="success"];
    bb6__0_14512 -> bb7__0_14512 [label="success"];
    bb7__0_14512 -> bb8__0_14512 [label="return"];
    bb8__0_14512 -> bb9__0_14512 [label=""];
    bb9__0_14512 -> bb10__0_14512 [label="return"];
    bb10__0_14512 -> bb11__0_14512 [label="return"];
    bb11__0_14512 -> bb12__0_14512 [label="return"];
    bb12__0_14512 -> bb13__0_14512 [label="return"];
    bb13__0_14512 -> bb15__0_14512 [label="0"];
    bb13__0_14512 -> bb14__0_14512 [label="otherwise"];
    bb14__0_14512 -> bb16__0_14512 [label=""];
    bb15__0_14512 -> bb9__0_14512 [label=""];
}
