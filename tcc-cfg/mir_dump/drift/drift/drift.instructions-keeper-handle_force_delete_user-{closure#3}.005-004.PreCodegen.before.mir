// MIR for `keeper::handle_force_delete_user::{closure#3}` before PreCodegen

fn keeper::handle_force_delete_user::{closure#3}(_1: {closure@programs/drift/src/instructions/keeper.rs:2983:18: 2983:23}, _2: &anchor_lang::prelude::AccountInfo<'_>) -> anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint> {
    debug acc => _2;
    let mut _0: anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint>;
    let mut _3: std::result::Result<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint>, anchor_lang::error::Error>;
    let mut _4: &anchor_lang::prelude::AccountInfo<'_>;

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        _4 = &(*_2);
        _3 = anchor_lang::prelude::InterfaceAccount::<'_, anchor_spl::token_interface::Mint>::try_from(move _4) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_4);
        _0 = std::result::Result::<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint>, anchor_lang::error::Error>::unwrap(move _3) -> [return: bb2, unwind: bb3];
    }

    bb2: {
        StorageDead(_3);
        return;
    }

    bb3 (cleanup): {
        resume;
    }
}
