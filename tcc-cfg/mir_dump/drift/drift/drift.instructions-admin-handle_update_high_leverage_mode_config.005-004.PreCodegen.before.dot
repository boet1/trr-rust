digraph Mir_0_1122 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn admin::handle_update_high_leverage_mode_config(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::admin::UpdateHighLeverageModeConfig&lt;ReErased&gt;&gt;, _2: u32, _3: bool, _4: std::option::Option&lt;u32&gt;) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let mut _5: std::cell::RefMut&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;;<br align="left"/>let mut _6: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;&gt;;<br align="left"/>let mut _7: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _8: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _9: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;;<br align="left"/>let mut _10: Closure(DefId(0:5654 ~ drift[d311]::instructions::admin::handle_update_high_leverage_mode_config::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _11: isize;<br align="left"/>let _12: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _13: !;<br align="left"/>let mut _14: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _15: std::cell::RefMut&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;;<br align="left"/>let mut _16: u32;<br align="left"/>let mut _17: &amp;ReErased mut state::high_leverage_mode_config::HighLeverageModeConfig;<br align="left"/>let mut _18: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;;<br align="left"/>let mut _19: bool;<br align="left"/>let mut _20: &amp;ReErased mut state::high_leverage_mode_config::HighLeverageModeConfig;<br align="left"/>let mut _21: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;;<br align="left"/>let _22: ();<br align="left"/>let mut _23: isize;<br align="left"/>let _24: u32;<br align="left"/>let mut _25: u32;<br align="left"/>let mut _26: &amp;ReErased mut state::high_leverage_mode_config::HighLeverageModeConfig;<br align="left"/>let mut _27: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;;<br align="left"/>let _28: ();<br align="left"/>let mut _29: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _30: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _31: &amp;ReErased state::high_leverage_mode_config::HighLeverageModeConfig;<br align="left"/>let _32: &amp;ReErased state::high_leverage_mode_config::HighLeverageModeConfig;<br align="left"/>let mut _33: &amp;ReErased std::cell::RefMut&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;;<br align="left"/>let mut _34: isize;<br align="left"/>let _35: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _36: !;<br align="left"/>let mut _37: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _38: ();<br align="left"/>let mut _39: ();<br align="left"/>let mut _40: &amp;ReErased mut instructions::admin::UpdateHighLeverageModeConfig&lt;ReErased&gt;;<br align="left"/>let mut _41: isize;<br align="left"/>let mut _42: isize;<br align="left"/>let mut _43: isize;<br align="left"/>let mut _44: isize;<br align="left"/>let mut _45: isize;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug max_users =&gt; _2;<br align="left"/>debug reduce_only =&gt; _3;<br align="left"/>debug current_users =&gt; _4;<br align="left"/>debug config =&gt; _5;<br align="left"/>debug residual =&gt; _12;<br align="left"/>debug val =&gt; _15;<br align="left"/>debug current_users =&gt; _24;<br align="left"/>debug residual =&gt; _35;<br align="left"/>debug val =&gt; _38;<br align="left"/>>;
    bb0__0_1122 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_40 = deref_copy (_1.1: &amp;mut instructions::admin::UpdateHighLeverageModeConfig&lt;'_&gt;)<br/>_9 = &amp;((*_40).1: anchor_lang::prelude::AccountLoader&lt;'_, state::high_leverage_mode_config::HighLeverageModeConfig&gt;)<br/></td></tr><tr><td align="left">_8 = anchor_lang::prelude::AccountLoader::&lt;'_, HighLeverageModeConfig&gt;::load_mut(move _9)</td></tr></table>>];
    bb1__0_1122 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageLive(_10)<br/>_10 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_7 = std::result::Result::&lt;RefMut&lt;'_, HighLeverageModeConfig&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _8, move _10)</td></tr></table>>];
    bb2__0_1122 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">_6 = &lt;std::result::Result&lt;RefMut&lt;'_, HighLeverageModeConfig&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _7)</td></tr></table>>];
    bb3__0_1122 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>_11 = discriminant(_6)<br/></td></tr><tr><td align="left">switchInt(move _11)</td></tr></table>>];
    bb4__0_1122 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_15)<br/>_15 = move ((_6 as Continue).0: std::cell::RefMut&lt;'_, state::high_leverage_mode_config::HighLeverageModeConfig&gt;)<br/>_5 = move _15<br/>StorageDead(_15)<br/>_43 = discriminant(_6)<br/>StorageDead(_6)<br/>StorageLive(_16)<br/>_16 = _2<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = &amp;mut _5<br/></td></tr><tr><td align="left">_17 = &lt;RefMut&lt;'_, HighLeverageModeConfig&gt; as DerefMut&gt;::deref_mut(move _18)</td></tr></table>>];
    bb5__0_1122 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_1122 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_6 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_14)<br/>_14 = _12<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _14)</td></tr></table>>];
    bb7__0_1122 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_12)<br/>_41 = discriminant(_6)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_1122 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>((*_17).0: u32) = move _16<br/>StorageDead(_16)<br/>StorageDead(_17)<br/>StorageLive(_19)<br/>_19 = _3<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_21 = &amp;mut _5<br/></td></tr><tr><td align="left">_20 = &lt;RefMut&lt;'_, HighLeverageModeConfig&gt; as DerefMut&gt;::deref_mut(move _21)</td></tr></table>>];
    bb9__0_1122 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>((*_20).2: u8) = move _19 as u8 (IntToInt)<br/>StorageDead(_19)<br/>StorageDead(_20)<br/>StorageLive(_22)<br/>_23 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _23)</td></tr></table>>];
    bb10__0_1122 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_24)<br/>_24 = ((_4 as Some).0: u32)<br/>StorageLive(_25)<br/>_25 = _24<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_27 = &amp;mut _5<br/></td></tr><tr><td align="left">_26 = &lt;RefMut&lt;'_, HighLeverageModeConfig&gt; as DerefMut&gt;::deref_mut(move _27)</td></tr></table>>];
    bb11__0_1122 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>((*_26).1: u32) = move _25<br/>StorageDead(_25)<br/>StorageDead(_26)<br/>_22 = const ()<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_1122 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">_22 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_1122 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>_33 = &amp;_5<br/></td></tr><tr><td align="left">_32 = &lt;RefMut&lt;'_, HighLeverageModeConfig&gt; as Deref&gt;::deref(move _33)</td></tr></table>>];
    bb14__0_1122 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">_31 = &amp;(*_32)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">_30 = HighLeverageModeConfig::validate(move _31)</td></tr></table>>];
    bb15__0_1122 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/></td></tr><tr><td align="left">_29 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _30)</td></tr></table>>];
    bb16__0_1122 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>_34 = discriminant(_29)<br/></td></tr><tr><td align="left">switchInt(move _34)</td></tr></table>>];
    bb17__0_1122 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_38)<br/>_38 = ((_29 as Continue).0: ())<br/>_28 = _38<br/>StorageDead(_38)<br/>StorageDead(_32)<br/>StorageDead(_29)<br/>StorageDead(_28)<br/>StorageLive(_39)<br/>_39 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _39)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">drop(_5)</td></tr></table>>];
    bb18__0_1122 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = ((_29 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_37)<br/>_37 = _35<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _37)</td></tr></table>>];
    bb19__0_1122 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_35)<br/>StorageDead(_32)<br/>StorageDead(_29)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">drop(_5)</td></tr></table>>];
    bb20__0_1122 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_1122 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_1122 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left">return</td></tr></table>>];
    bb23__0_1122 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">23 (cleanup)</td></tr><tr><td align="left">drop(_5)</td></tr></table>>];
    bb24__0_1122 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">24 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb25__0_1122 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">25 (cleanup)</td></tr><tr><td align="left" balign="left">_45 = discriminant(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_1122 -> bb1__0_1122 [label="return"];
    bb1__0_1122 -> bb2__0_1122 [label="return"];
    bb1__0_1122 -> bb24__0_1122 [label="unwind"];
    bb2__0_1122 -> bb3__0_1122 [label="return"];
    bb2__0_1122 -> bb24__0_1122 [label="unwind"];
    bb3__0_1122 -> bb4__0_1122 [label="0"];
    bb3__0_1122 -> bb6__0_1122 [label="1"];
    bb3__0_1122 -> bb5__0_1122 [label="otherwise"];
    bb4__0_1122 -> bb8__0_1122 [label="return"];
    bb4__0_1122 -> bb23__0_1122 [label="unwind"];
    bb6__0_1122 -> bb7__0_1122 [label="return"];
    bb6__0_1122 -> bb25__0_1122 [label="unwind"];
    bb7__0_1122 -> bb21__0_1122 [label=""];
    bb8__0_1122 -> bb9__0_1122 [label="return"];
    bb8__0_1122 -> bb23__0_1122 [label="unwind"];
    bb9__0_1122 -> bb10__0_1122 [label="1"];
    bb9__0_1122 -> bb12__0_1122 [label="otherwise"];
    bb10__0_1122 -> bb11__0_1122 [label="return"];
    bb10__0_1122 -> bb23__0_1122 [label="unwind"];
    bb11__0_1122 -> bb13__0_1122 [label=""];
    bb12__0_1122 -> bb13__0_1122 [label=""];
    bb13__0_1122 -> bb14__0_1122 [label="return"];
    bb13__0_1122 -> bb23__0_1122 [label="unwind"];
    bb14__0_1122 -> bb15__0_1122 [label="return"];
    bb14__0_1122 -> bb23__0_1122 [label="unwind"];
    bb15__0_1122 -> bb16__0_1122 [label="return"];
    bb15__0_1122 -> bb23__0_1122 [label="unwind"];
    bb16__0_1122 -> bb17__0_1122 [label="0"];
    bb16__0_1122 -> bb18__0_1122 [label="1"];
    bb16__0_1122 -> bb5__0_1122 [label="otherwise"];
    bb17__0_1122 -> bb20__0_1122 [label="return"];
    bb17__0_1122 -> bb24__0_1122 [label="unwind"];
    bb18__0_1122 -> bb19__0_1122 [label="return"];
    bb18__0_1122 -> bb23__0_1122 [label="unwind"];
    bb19__0_1122 -> bb21__0_1122 [label="return"];
    bb19__0_1122 -> bb24__0_1122 [label="unwind"];
    bb20__0_1122 -> bb22__0_1122 [label=""];
    bb21__0_1122 -> bb22__0_1122 [label=""];
    bb23__0_1122 -> bb24__0_1122 [label="return"];
    bb25__0_1122 -> bb24__0_1122 [label=""];
}
