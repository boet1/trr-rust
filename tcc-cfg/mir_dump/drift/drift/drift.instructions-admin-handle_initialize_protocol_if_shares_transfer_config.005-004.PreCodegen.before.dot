digraph Mir_0_1109 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn admin::handle_initialize_protocol_if_shares_transfer_config(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::admin::InitializeProtocolIfSharesTransferConfig&lt;ReErased&gt;&gt;) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let mut _2: std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::ProtocolIfSharesTransferConfig&gt;;<br align="left"/>let mut _3: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::ProtocolIfSharesTransferConfig&gt;&gt;;<br align="left"/>let mut _4: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::ProtocolIfSharesTransferConfig&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _5: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::insurance_fund_stake::ProtocolIfSharesTransferConfig&gt;;<br align="left"/>let mut _6: isize;<br align="left"/>let _7: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _8: !;<br align="left"/>let mut _9: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _10: std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::ProtocolIfSharesTransferConfig&gt;;<br align="left"/>let _11: i64;<br align="left"/>let mut _12: anchor_lang::prelude::Clock;<br align="left"/>let mut _13: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _14: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _15: isize;<br align="left"/>let _16: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _17: !;<br align="left"/>let mut _18: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _19: anchor_lang::prelude::Clock;<br align="left"/>let _20: ();<br align="left"/>let mut _21: &amp;ReErased str;<br align="left"/>let _22: &amp;ReErased str;<br align="left"/>let mut _23: &amp;ReErased std::string::String;<br align="left"/>let _24: &amp;ReErased std::string::String;<br align="left"/>let _25: std::string::String;<br align="left"/>let _26: std::string::String;<br align="left"/>let mut _27: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _28: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _29: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _30: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _31: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _32: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _33: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _34: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _35: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _36: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _37: &amp;ReErased i64;<br align="left"/>let _38: &amp;ReErased i64;<br align="left"/>let _39: &amp;ReErased state::insurance_fund_stake::ProtocolIfSharesTransferConfig;<br align="left"/>let mut _40: &amp;ReErased std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::ProtocolIfSharesTransferConfig&gt;;<br align="left"/>let mut _41: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _42: &amp;ReErased i64;<br align="left"/>let _43: &amp;ReErased i64;<br align="left"/>let _44: i64;<br align="left"/>let mut _45: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _46: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _47: i64;<br align="left"/>let mut _48: isize;<br align="left"/>let _49: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _50: !;<br align="left"/>let mut _51: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _52: i64;<br align="left"/>let mut _53: i64;<br align="left"/>let mut _54: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _55: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _56: i64;<br align="left"/>let mut _57: isize;<br align="left"/>let _58: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _59: !;<br align="left"/>let mut _60: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _61: i64;<br align="left"/>let mut _62: &amp;ReErased mut state::insurance_fund_stake::ProtocolIfSharesTransferConfig;<br align="left"/>let mut _63: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::ProtocolIfSharesTransferConfig&gt;;<br align="left"/>let mut _64: ();<br align="left"/>let mut _65: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _66: &amp;ReErased mut instructions::admin::InitializeProtocolIfSharesTransferConfig&lt;ReErased&gt;;<br align="left"/>let mut _67: isize;<br align="left"/>let mut _68: isize;<br align="left"/>let mut _69: isize;<br align="left"/>let mut _70: isize;<br align="left"/>let mut _71: isize;<br align="left"/>let mut _72: isize;<br align="left"/>let mut _73: isize;<br align="left"/>let mut _74: isize;<br align="left"/>let mut _75: isize;<br align="left"/>let mut _76: isize;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug config =&gt; _2;<br align="left"/>debug residual =&gt; _7;<br align="left"/>debug val =&gt; _10;<br align="left"/>debug now =&gt; _11;<br align="left"/>debug residual =&gt; _16;<br align="left"/>debug val =&gt; _19;<br align="left"/>debug res =&gt; _26;<br align="left"/>debug residual =&gt; _49;<br align="left"/>debug val =&gt; _52;<br align="left"/>debug residual =&gt; _58;<br align="left"/>debug val =&gt; _61;<br align="left"/>>;
    bb0__0_1109 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_66 = deref_copy (_1.1: &amp;mut instructions::admin::InitializeProtocolIfSharesTransferConfig&lt;'_&gt;)<br/>_5 = &amp;((*_66).1: anchor_lang::prelude::AccountLoader&lt;'_, state::insurance_fund_stake::ProtocolIfSharesTransferConfig&gt;)<br/></td></tr><tr><td align="left">_4 = anchor_lang::prelude::AccountLoader::&lt;'_, ProtocolIfSharesTransferConfig&gt;::load_init(move _5)</td></tr></table>>];
    bb1__0_1109 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">_3 = &lt;std::result::Result&lt;RefMut&lt;'_, ProtocolIfSharesTransferConfig&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _4)</td></tr></table>>];
    bb2__0_1109 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>_6 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _6)</td></tr></table>>];
    bb3__0_1109 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>_10 = move ((_3 as Continue).0: std::cell::RefMut&lt;'_, state::insurance_fund_stake::ProtocolIfSharesTransferConfig&gt;)<br/>_2 = move _10<br/>StorageDead(_10)<br/>_67 = discriminant(_3)<br/>StorageDead(_3)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/></td></tr><tr><td align="left">_14 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb4__0_1109 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_1109 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_7)<br/>_7 = move ((_3 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_9)<br/>_9 = move _7<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _9)</td></tr></table>>];
    bb6__0_1109 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_7)<br/>_73 = discriminant(_3)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_1109 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">_13 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _14)</td></tr></table>>];
    bb8__0_1109 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>_15 = discriminant(_13)<br/></td></tr><tr><td align="left">switchInt(move _15)</td></tr></table>>];
    bb9__0_1109 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_19)<br/>_19 = move ((_13 as Continue).0: anchor_lang::prelude::Clock)<br/>_12 = move _19<br/>StorageDead(_19)<br/>_11 = (_12.4: i64)<br/>_69 = discriminant(_13)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>_65 = const _<br/>_30 = &amp;(*_65)<br/>_29 = &amp;(*_30)<br/>_28 = move _29 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_29)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_40 = &amp;_2<br/></td></tr><tr><td align="left">_39 = &lt;RefMut&lt;'_, ProtocolIfSharesTransferConfig&gt; as Deref&gt;::deref(move _40)</td></tr></table>>];
    bb10__0_1109 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_16)<br/>_16 = move ((_13 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_18)<br/>_18 = move _16<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _18)</td></tr></table>>];
    bb11__0_1109 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_16)<br/>_71 = discriminant(_13)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_1109 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>_38 = &amp;((*_39).3: i64)<br/>_37 = &amp;(*_38)<br/></td></tr><tr><td align="left">_36 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;i64&gt;(move _37)</td></tr></table>>];
    bb13__0_1109 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>_47 = _11<br/></td></tr><tr><td align="left">_46 = &lt;i64 as SafeMath&gt;::safe_add(move _47, const _)</td></tr></table>>];
    bb14__0_1109 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/></td></tr><tr><td align="left">_45 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _46)</td></tr></table>>];
    bb15__0_1109 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>_48 = discriminant(_45)<br/></td></tr><tr><td align="left">switchInt(move _48)</td></tr></table>>];
    bb16__0_1109 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_52)<br/>_52 = ((_45 as Continue).0: i64)<br/>_44 = _52<br/>StorageDead(_52)<br/>_43 = &amp;_44<br/>_42 = &amp;(*_43)<br/></td></tr><tr><td align="left">_41 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;i64&gt;(move _42)</td></tr></table>>];
    bb17__0_1109 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_49)<br/>_49 = ((_45 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_51)<br/>_51 = _49<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _51)</td></tr></table>>];
    bb18__0_1109 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageDead(_49)<br/>StorageDead(_42)<br/>StorageDead(_41)<br/>StorageDead(_36)<br/>StorageDead(_33)<br/>StorageDead(_32)<br/>StorageDead(_28)<br/>StorageDead(_27)<br/>StorageDead(_45)<br/>StorageDead(_44)<br/>StorageDead(_43)<br/>StorageDead(_39)<br/>StorageDead(_38)<br/>StorageDead(_35)<br/>StorageDead(_34)<br/>StorageDead(_30)<br/>StorageDead(_26)<br/>StorageDead(_23)<br/>StorageDead(_21)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_22)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_1109 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>_35 = [move _36, move _41]<br/>StorageDead(_41)<br/>StorageDead(_36)<br/>_34 = &amp;_35<br/>_33 = &amp;(*_34)<br/>_32 = move _33 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">_27 = Arguments::&lt;'_&gt;::new_v1(move _28, move _32)</td></tr></table>>];
    bb20__0_1109 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">_26 = format(move _27)</td></tr></table>>];
    bb21__0_1109 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_45)<br/>StorageDead(_44)<br/>StorageDead(_43)<br/>StorageDead(_39)<br/>StorageDead(_38)<br/>StorageDead(_35)<br/>StorageDead(_34)<br/>StorageDead(_30)<br/>_25 = move _26<br/>StorageDead(_26)<br/>_24 = &amp;_25<br/>_23 = &amp;(*_24)<br/></td></tr><tr><td align="left">_22 = &lt;String as Deref&gt;::deref(move _23)</td></tr></table>>];
    bb22__0_1109 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">_21 = &amp;(*_22)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">_20 = solana_program::log::sol_log(move _21)</td></tr></table>>];
    bb23__0_1109 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/></td></tr><tr><td align="left">drop(_25)</td></tr></table>>];
    bb24__0_1109 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_22)<br/>StorageDead(_20)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>_56 = _11<br/></td></tr><tr><td align="left">_55 = &lt;i64 as SafeMath&gt;::safe_add(move _56, const _)</td></tr></table>>];
    bb25__0_1109 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/></td></tr><tr><td align="left">_54 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _55)</td></tr></table>>];
    bb26__0_1109 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>_57 = discriminant(_54)<br/></td></tr><tr><td align="left">switchInt(move _57)</td></tr></table>>];
    bb27__0_1109 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_61)<br/>_61 = ((_54 as Continue).0: i64)<br/>_53 = _61<br/>StorageDead(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>_63 = &amp;mut _2<br/></td></tr><tr><td align="left">_62 = &lt;RefMut&lt;'_, ProtocolIfSharesTransferConfig&gt; as DerefMut&gt;::deref_mut(move _63)</td></tr></table>>];
    bb28__0_1109 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_58)<br/>_58 = ((_54 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_60)<br/>_60 = _58<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _60)</td></tr></table>>];
    bb29__0_1109 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageDead(_58)<br/>StorageDead(_53)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_1109 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>((*_62).3: i64) = move _53<br/>StorageDead(_53)<br/>StorageDead(_62)<br/>StorageDead(_54)<br/>StorageLive(_64)<br/>_64 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _64)<br/>StorageDead(_64)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">drop(_2)</td></tr></table>>];
    bb31__0_1109 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_1109 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/></td></tr><tr><td align="left">drop(_2)</td></tr></table>>];
    bb33__0_1109 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_1109 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left">return</td></tr></table>>];
    bb35__0_1109 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">35 (cleanup)</td></tr><tr><td align="left">drop(_25)</td></tr></table>>];
    bb36__0_1109 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">36 (cleanup)</td></tr><tr><td align="left">drop(_2)</td></tr></table>>];
    bb37__0_1109 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">37 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb38__0_1109 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">38 (cleanup)</td></tr><tr><td align="left" balign="left">_75 = discriminant(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_1109 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">39 (cleanup)</td></tr><tr><td align="left" balign="left">_76 = discriminant(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_1109 -> bb1__0_1109 [label="return"];
    bb1__0_1109 -> bb2__0_1109 [label="return"];
    bb1__0_1109 -> bb37__0_1109 [label="unwind"];
    bb2__0_1109 -> bb3__0_1109 [label="0"];
    bb2__0_1109 -> bb5__0_1109 [label="1"];
    bb2__0_1109 -> bb4__0_1109 [label="otherwise"];
    bb3__0_1109 -> bb7__0_1109 [label="return"];
    bb3__0_1109 -> bb36__0_1109 [label="unwind"];
    bb5__0_1109 -> bb6__0_1109 [label="return"];
    bb5__0_1109 -> bb39__0_1109 [label="unwind"];
    bb6__0_1109 -> bb33__0_1109 [label=""];
    bb7__0_1109 -> bb8__0_1109 [label="return"];
    bb7__0_1109 -> bb36__0_1109 [label="unwind"];
    bb8__0_1109 -> bb9__0_1109 [label="0"];
    bb8__0_1109 -> bb10__0_1109 [label="1"];
    bb8__0_1109 -> bb4__0_1109 [label="otherwise"];
    bb9__0_1109 -> bb12__0_1109 [label="return"];
    bb9__0_1109 -> bb36__0_1109 [label="unwind"];
    bb10__0_1109 -> bb11__0_1109 [label="return"];
    bb10__0_1109 -> bb38__0_1109 [label="unwind"];
    bb11__0_1109 -> bb32__0_1109 [label=""];
    bb12__0_1109 -> bb13__0_1109 [label="return"];
    bb12__0_1109 -> bb36__0_1109 [label="unwind"];
    bb13__0_1109 -> bb14__0_1109 [label="return"];
    bb13__0_1109 -> bb36__0_1109 [label="unwind"];
    bb14__0_1109 -> bb15__0_1109 [label="return"];
    bb14__0_1109 -> bb36__0_1109 [label="unwind"];
    bb15__0_1109 -> bb16__0_1109 [label="0"];
    bb15__0_1109 -> bb17__0_1109 [label="1"];
    bb15__0_1109 -> bb4__0_1109 [label="otherwise"];
    bb16__0_1109 -> bb19__0_1109 [label="return"];
    bb16__0_1109 -> bb36__0_1109 [label="unwind"];
    bb17__0_1109 -> bb18__0_1109 [label="return"];
    bb17__0_1109 -> bb36__0_1109 [label="unwind"];
    bb18__0_1109 -> bb32__0_1109 [label=""];
    bb19__0_1109 -> bb20__0_1109 [label="return"];
    bb19__0_1109 -> bb36__0_1109 [label="unwind"];
    bb20__0_1109 -> bb21__0_1109 [label="return"];
    bb20__0_1109 -> bb36__0_1109 [label="unwind"];
    bb21__0_1109 -> bb22__0_1109 [label="return"];
    bb21__0_1109 -> bb35__0_1109 [label="unwind"];
    bb22__0_1109 -> bb23__0_1109 [label="return"];
    bb22__0_1109 -> bb35__0_1109 [label="unwind"];
    bb23__0_1109 -> bb24__0_1109 [label="return"];
    bb23__0_1109 -> bb36__0_1109 [label="unwind"];
    bb24__0_1109 -> bb25__0_1109 [label="return"];
    bb24__0_1109 -> bb36__0_1109 [label="unwind"];
    bb25__0_1109 -> bb26__0_1109 [label="return"];
    bb25__0_1109 -> bb36__0_1109 [label="unwind"];
    bb26__0_1109 -> bb27__0_1109 [label="0"];
    bb26__0_1109 -> bb28__0_1109 [label="1"];
    bb26__0_1109 -> bb4__0_1109 [label="otherwise"];
    bb27__0_1109 -> bb30__0_1109 [label="return"];
    bb27__0_1109 -> bb36__0_1109 [label="unwind"];
    bb28__0_1109 -> bb29__0_1109 [label="return"];
    bb28__0_1109 -> bb36__0_1109 [label="unwind"];
    bb29__0_1109 -> bb32__0_1109 [label=""];
    bb30__0_1109 -> bb31__0_1109 [label="return"];
    bb30__0_1109 -> bb37__0_1109 [label="unwind"];
    bb31__0_1109 -> bb34__0_1109 [label=""];
    bb32__0_1109 -> bb33__0_1109 [label="return"];
    bb32__0_1109 -> bb37__0_1109 [label="unwind"];
    bb33__0_1109 -> bb34__0_1109 [label=""];
    bb35__0_1109 -> bb36__0_1109 [label="return"];
    bb36__0_1109 -> bb37__0_1109 [label="return"];
    bb38__0_1109 -> bb36__0_1109 [label=""];
    bb39__0_1109 -> bb37__0_1109 [label=""];
}
