digraph Mir_0_4380 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn Order::has_limit_price(_1: state::user::Order, _2: u64) -&gt; std::result::Result&lt;bool, error::ErrorCode&gt;<br align="left"/>let mut _3: bool;<br align="left"/>let mut _4: bool;<br align="left"/>let mut _5: u64;<br align="left"/>let mut _6: bool;<br align="left"/>let mut _7: state::user::Order;<br align="left"/>let mut _8: bool;<br align="left"/>let mut _9: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _10: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _11: u64;<br align="left"/>let mut _12: u8;<br align="left"/>let mut _13: u64;<br align="left"/>let mut _14: isize;<br align="left"/>let _15: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _16: !;<br align="left"/>let mut _17: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _18: bool;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug slot =&gt; _2;<br align="left"/>debug residual =&gt; _15;<br align="left"/>debug val =&gt; _18;<br align="left"/>>;
    bb0__0_4380 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = (_1.1: u64)<br/>_4 = Gt(move _5, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _4)</td></tr></table>>];
    bb1__0_4380 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb2__0_4380 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = _1<br/></td></tr><tr><td align="left">_6 = Order::has_oracle_price_offset(move _7)</td></tr></table>>];
    bb3__0_4380 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left">switchInt(move _6)</td></tr></table>>];
    bb4__0_4380 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>_3 = const true<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb5__0_4380 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = (_1.0: u64)<br/>StorageLive(_12)<br/>_12 = (_1.22: u8)<br/>StorageLive(_13)<br/>_13 = _2<br/></td></tr><tr><td align="left">_10 = is_auction_complete(move _11, move _12, move _13)</td></tr></table>>];
    bb6__0_4380 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">_9 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _10)</td></tr></table>>];
    bb7__0_4380 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>_14 = discriminant(_9)<br/></td></tr><tr><td align="left">switchInt(move _14)</td></tr></table>>];
    bb8__0_4380 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_18)<br/>_18 = ((_9 as Continue).0: bool)<br/>_8 = _18<br/>StorageDead(_18)<br/>_3 = Not(move _8)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_4380 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb10__0_4380 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_15)<br/>_15 = ((_9 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_17)<br/>_17 = _15<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _17)</td></tr></table>>];
    bb11__0_4380 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_15)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/>StorageDead(_6)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_4380 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_4)<br/>_0 = std::result::Result::&lt;bool, error::ErrorCode&gt;::Ok(move _3)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_4380 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_4380 -> bb2__0_4380 [label="0"];
    bb0__0_4380 -> bb1__0_4380 [label="otherwise"];
    bb1__0_4380 -> bb4__0_4380 [label=""];
    bb2__0_4380 -> bb3__0_4380 [label="return"];
    bb3__0_4380 -> bb5__0_4380 [label="0"];
    bb3__0_4380 -> bb4__0_4380 [label="otherwise"];
    bb4__0_4380 -> bb12__0_4380 [label=""];
    bb5__0_4380 -> bb6__0_4380 [label="return"];
    bb6__0_4380 -> bb7__0_4380 [label="return"];
    bb7__0_4380 -> bb8__0_4380 [label="0"];
    bb7__0_4380 -> bb10__0_4380 [label="1"];
    bb7__0_4380 -> bb9__0_4380 [label="otherwise"];
    bb8__0_4380 -> bb12__0_4380 [label=""];
    bb10__0_4380 -> bb11__0_4380 [label="return"];
    bb11__0_4380 -> bb13__0_4380 [label=""];
    bb12__0_4380 -> bb13__0_4380 [label=""];
}
