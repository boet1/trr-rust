digraph Mir_0_681 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn get_position_index(_1: &amp;ReErased [state::user::PerpPosition; 8_usize], _2: u16) -&gt; std::result::Result&lt;usize, error::ErrorCode&gt;<br align="left"/>let _3: std::option::Option&lt;usize&gt;;<br align="left"/>let mut _4: &amp;ReErased mut std::slice::Iter&lt;ReErased, state::user::PerpPosition&gt;;<br align="left"/>let mut _5: std::slice::Iter&lt;ReErased, state::user::PerpPosition&gt;;<br align="left"/>let mut _6: &amp;ReErased [state::user::PerpPosition];<br align="left"/>let mut _7: &amp;ReErased [state::user::PerpPosition; 8_usize];<br align="left"/>let mut _8: Closure(DefId(0:682 ~ drift[d311]::controller::position::get_position_index::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReErased state::user::PerpPosition,)) -&gt; bool, []), (&amp;ReErased u16,)]);<br align="left"/>let mut _9: &amp;ReErased u16;<br align="left"/>let mut _10: isize;<br align="left"/>let _11: usize;<br align="left"/>let mut _12: usize;<br align="left"/>let mut _13: error::ErrorCode;<br align="left"/>debug user_positions =&gt; _1;<br align="left"/>debug market_index =&gt; _2;<br align="left"/>debug position_index =&gt; _3;<br align="left"/>debug position_index =&gt; _11;<br align="left"/>>;
    bb0__0_681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = &amp;(*_1)<br/>_6 = move _7 as &amp;[state::user::PerpPosition] (PointerCoercion(Unsize))<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">_5 = core::slice::&lt;impl [PerpPosition]&gt;::iter(move _6)</td></tr></table>>];
    bb1__0_681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_4 = &amp;mut _5<br/>StorageDead(_6)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = &amp;_2<br/>_8 = {closure@programs/drift/src/controller/position.rs:76:19: 76:36} { market_index: move _9 }<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">_3 = &lt;std::slice::Iter&lt;'_, PerpPosition&gt; as Iterator&gt;::position::&lt;{closure@programs/drift/src/controller/position.rs:76:19: 76:36}&gt;(move _4, move _8)</td></tr></table>>];
    bb2__0_681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_4)<br/>StorageDead(_5)<br/>_10 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _10)</td></tr></table>>];
    bb3__0_681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = error::ErrorCode::UserHasNoPositionInMarket<br/>_0 = std::result::Result::&lt;usize, error::ErrorCode&gt;::Err(move _13)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb4__0_681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = ((_3 as Some).0: usize)<br/>StorageLive(_12)<br/>_12 = _11<br/>_0 = std::result::Result::&lt;usize, error::ErrorCode&gt;::Ok(move _12)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb6__0_681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_681 -> bb1__0_681 [label="return"];
    bb1__0_681 -> bb2__0_681 [label="return"];
    bb2__0_681 -> bb3__0_681 [label="0"];
    bb2__0_681 -> bb5__0_681 [label="1"];
    bb2__0_681 -> bb4__0_681 [label="otherwise"];
    bb3__0_681 -> bb6__0_681 [label=""];
    bb5__0_681 -> bb6__0_681 [label=""];
}
