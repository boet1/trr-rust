digraph Mir_0_342 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn controller::liquidation::liquidate_borrow_for_perp_pnl(_1: u16, _2: u16, _3: u128, _4: std::option::Option&lt;u64&gt;, _5: &amp;ReErased mut state::user::User, _6: &amp;ReErased anchor_lang::prelude::Pubkey, _7: &amp;ReErased mut state::user::User, _8: &amp;ReErased anchor_lang::prelude::Pubkey, _9: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;, _10: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;, _11: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;, _12: i64, _13: u64, _14: u32, _15: u128, _16: u128) -&gt; std::result::Result&lt;(), error::ErrorCode&gt;<br align="left"/>let _17: ();<br align="left"/>let mut _18: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _19: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _20: bool;<br align="left"/>let mut _21: &amp;ReErased state::user::User;<br align="left"/>let mut _22: ();<br align="left"/>let _23: error::ErrorCode;<br align="left"/>let _24: ();<br align="left"/>let mut _25: &amp;ReErased str;<br align="left"/>let _26: &amp;ReErased str;<br align="left"/>let mut _27: &amp;ReErased std::string::String;<br align="left"/>let _28: &amp;ReErased std::string::String;<br align="left"/>let _29: std::string::String;<br align="left"/>let _30: std::string::String;<br align="left"/>let mut _31: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _32: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _33: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _34: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _35: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _36: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _37: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _38: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _39: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _40: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _41: &amp;ReErased error::ErrorCode;<br align="left"/>let _42: &amp;ReErased error::ErrorCode;<br align="left"/>let _43: ();<br align="left"/>let mut _44: &amp;ReErased str;<br align="left"/>let _45: &amp;ReErased str;<br align="left"/>let mut _46: &amp;ReErased std::string::String;<br align="left"/>let _47: &amp;ReErased std::string::String;<br align="left"/>let _48: std::string::String;<br align="left"/>let _49: std::string::String;<br align="left"/>let mut _50: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _51: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _52: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _53: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _54: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _55: error::ErrorCode;<br align="left"/>let mut _56: isize;<br align="left"/>let _57: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _58: !;<br align="left"/>let mut _59: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _60: ();<br align="left"/>let _61: ();<br align="left"/>let mut _62: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _63: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _64: bool;<br align="left"/>let mut _65: &amp;ReErased state::user::User;<br align="left"/>let mut _66: ();<br align="left"/>let _67: error::ErrorCode;<br align="left"/>let _68: ();<br align="left"/>let mut _69: &amp;ReErased str;<br align="left"/>let _70: &amp;ReErased str;<br align="left"/>let mut _71: &amp;ReErased std::string::String;<br align="left"/>let _72: &amp;ReErased std::string::String;<br align="left"/>let _73: std::string::String;<br align="left"/>let _74: std::string::String;<br align="left"/>let mut _75: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _76: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _77: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _78: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _79: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _80: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _81: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _82: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _83: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _84: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _85: &amp;ReErased error::ErrorCode;<br align="left"/>let _86: &amp;ReErased error::ErrorCode;<br align="left"/>let _87: ();<br align="left"/>let mut _88: &amp;ReErased str;<br align="left"/>let _89: &amp;ReErased str;<br align="left"/>let mut _90: &amp;ReErased std::string::String;<br align="left"/>let _91: &amp;ReErased std::string::String;<br align="left"/>let _92: std::string::String;<br align="left"/>let _93: std::string::String;<br align="left"/>let mut _94: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _95: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _96: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _97: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _98: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _99: error::ErrorCode;<br align="left"/>let mut _100: isize;<br align="left"/>let _101: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _102: !;<br align="left"/>let mut _103: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _104: ();<br align="left"/>let _105: ();<br align="left"/>let mut _106: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _107: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _108: bool;<br align="left"/>let mut _109: u8;<br align="left"/>let mut _110: ();<br align="left"/>let _111: error::ErrorCode;<br align="left"/>let _112: ();<br align="left"/>let mut _113: &amp;ReErased str;<br align="left"/>let _114: &amp;ReErased str;<br align="left"/>let mut _115: &amp;ReErased std::string::String;<br align="left"/>let _116: &amp;ReErased std::string::String;<br align="left"/>let _117: std::string::String;<br align="left"/>let _118: std::string::String;<br align="left"/>let mut _119: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _120: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _121: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _122: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _123: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _124: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _125: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _126: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _127: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _128: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _129: &amp;ReErased error::ErrorCode;<br align="left"/>let _130: &amp;ReErased error::ErrorCode;<br align="left"/>let _131: ();<br align="left"/>let mut _132: &amp;ReErased str;<br align="left"/>let _133: &amp;ReErased str;<br align="left"/>let mut _134: &amp;ReErased std::string::String;<br align="left"/>let _135: &amp;ReErased std::string::String;<br align="left"/>let _136: std::string::String;<br align="left"/>let _137: std::string::String;<br align="left"/>let mut _138: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _139: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _140: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _141: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _142: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _143: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _144: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _145: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _146: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _147: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _148: &amp;ReErased u8;<br align="left"/>let _149: &amp;ReErased u8;<br align="left"/>let mut _150: error::ErrorCode;<br align="left"/>let mut _151: isize;<br align="left"/>let _152: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _153: !;<br align="left"/>let mut _154: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _155: ();<br align="left"/>let _156: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _157: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _158: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _159: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _160: &amp;ReErased u16;<br align="left"/>let _161: &amp;ReErased u16;<br align="left"/>let mut _162: isize;<br align="left"/>let _163: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _164: !;<br align="left"/>let mut _165: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _166: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _167: ();<br align="left"/>let mut _168: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _169: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _170: bool;<br align="left"/>let mut _171: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _172: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _173: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _174: state::paused_operations::PerpOperation;<br align="left"/>let mut _175: ();<br align="left"/>let _176: error::ErrorCode;<br align="left"/>let _177: ();<br align="left"/>let mut _178: &amp;ReErased str;<br align="left"/>let _179: &amp;ReErased str;<br align="left"/>let mut _180: &amp;ReErased std::string::String;<br align="left"/>let _181: &amp;ReErased std::string::String;<br align="left"/>let _182: std::string::String;<br align="left"/>let _183: std::string::String;<br align="left"/>let mut _184: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _185: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _186: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _187: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _188: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _189: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _190: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _191: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _192: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _193: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _194: &amp;ReErased error::ErrorCode;<br align="left"/>let _195: &amp;ReErased error::ErrorCode;<br align="left"/>let _196: ();<br align="left"/>let mut _197: &amp;ReErased str;<br align="left"/>let _198: &amp;ReErased str;<br align="left"/>let mut _199: &amp;ReErased std::string::String;<br align="left"/>let _200: &amp;ReErased std::string::String;<br align="left"/>let _201: std::string::String;<br align="left"/>let _202: std::string::String;<br align="left"/>let mut _203: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _204: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _205: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _206: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _207: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _208: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _209: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _210: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _211: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _212: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _213: &amp;ReErased u16;<br align="left"/>let _214: &amp;ReErased u16;<br align="left"/>let mut _215: error::ErrorCode;<br align="left"/>let mut _216: isize;<br align="left"/>let _217: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _218: !;<br align="left"/>let mut _219: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _220: ();<br align="left"/>let _221: ();<br align="left"/>let mut _222: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _223: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _224: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _225: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _226: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _227: &amp;ReErased u16;<br align="left"/>let _228: &amp;ReErased u16;<br align="left"/>let mut _229: isize;<br align="left"/>let _230: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _231: !;<br align="left"/>let mut _232: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _233: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _234: ();<br align="left"/>let mut _235: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _236: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _237: bool;<br align="left"/>let mut _238: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _239: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _240: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _241: state::paused_operations::SpotOperation;<br align="left"/>let mut _242: ();<br align="left"/>let _243: error::ErrorCode;<br align="left"/>let _244: ();<br align="left"/>let mut _245: &amp;ReErased str;<br align="left"/>let _246: &amp;ReErased str;<br align="left"/>let mut _247: &amp;ReErased std::string::String;<br align="left"/>let _248: &amp;ReErased std::string::String;<br align="left"/>let _249: std::string::String;<br align="left"/>let _250: std::string::String;<br align="left"/>let mut _251: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _252: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _253: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _254: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _255: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _256: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _257: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _258: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _259: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _260: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _261: &amp;ReErased error::ErrorCode;<br align="left"/>let _262: &amp;ReErased error::ErrorCode;<br align="left"/>let _263: ();<br align="left"/>let mut _264: &amp;ReErased str;<br align="left"/>let _265: &amp;ReErased str;<br align="left"/>let mut _266: &amp;ReErased std::string::String;<br align="left"/>let _267: &amp;ReErased std::string::String;<br align="left"/>let _268: std::string::String;<br align="left"/>let _269: std::string::String;<br align="left"/>let mut _270: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _271: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _272: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _273: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _274: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _275: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _276: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _277: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _278: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _279: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _280: &amp;ReErased u16;<br align="left"/>let _281: &amp;ReErased u16;<br align="left"/>let mut _282: error::ErrorCode;<br align="left"/>let mut _283: isize;<br align="left"/>let _284: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _285: !;<br align="left"/>let mut _286: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _287: ();<br align="left"/>let _288: ();<br align="left"/>let mut _289: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _290: &amp;ReErased state::user::PerpPosition;<br align="left"/>let mut _291: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::user::PerpPosition&gt;;<br align="left"/>let mut _292: std::result::Result&lt;&amp;ReErased state::user::PerpPosition, error::ErrorCode&gt;;<br align="left"/>let mut _293: std::result::Result&lt;&amp;ReErased state::user::PerpPosition, error::ErrorCode&gt;;<br align="left"/>let mut _294: &amp;ReErased state::user::User;<br align="left"/>let mut _295: u16;<br align="left"/>let mut _296: Closure(DefId(0:343 ~ drift[d311]::controller::liquidation::liquidate_borrow_for_perp_pnl::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((error::ErrorCode,)) -&gt; error::ErrorCode, []), (&amp;ReErased u16,)]);<br align="left"/>let mut _297: &amp;ReErased u16;<br align="left"/>let mut _298: isize;<br align="left"/>let _299: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _300: !;<br align="left"/>let mut _301: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _302: &amp;ReErased state::user::PerpPosition;<br align="left"/>let _303: &amp;ReErased state::user::SpotPosition;<br align="left"/>let mut _304: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::user::SpotPosition&gt;;<br align="left"/>let mut _305: std::result::Result&lt;&amp;ReErased state::user::SpotPosition, error::ErrorCode&gt;;<br align="left"/>let mut _306: std::result::Result&lt;&amp;ReErased state::user::SpotPosition, error::ErrorCode&gt;;<br align="left"/>let mut _307: &amp;ReErased state::user::User;<br align="left"/>let mut _308: u16;<br align="left"/>let mut _309: Closure(DefId(0:344 ~ drift[d311]::controller::liquidation::liquidate_borrow_for_perp_pnl::{closure#1}), [i32, Binder(extern &quot;RustCall&quot; fn((error::ErrorCode,)) -&gt; error::ErrorCode, []), (&amp;ReErased u16,)]);<br align="left"/>let mut _310: &amp;ReErased u16;<br align="left"/>let mut _311: isize;<br align="left"/>let _312: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _313: !;<br align="left"/>let mut _314: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _315: &amp;ReErased state::user::SpotPosition;<br align="left"/>let _316: &amp;ReErased mut state::user::PerpPosition;<br align="left"/>let mut _317: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased mut state::user::PerpPosition&gt;;<br align="left"/>let mut _318: std::result::Result&lt;&amp;ReErased mut state::user::PerpPosition, error::ErrorCode&gt;;<br align="left"/>let mut _319: std::result::Result&lt;&amp;ReErased mut state::user::PerpPosition, error::ErrorCode&gt;;<br align="left"/>let mut _320: &amp;ReErased mut state::user::User;<br align="left"/>let mut _321: u16;<br align="left"/>let mut _322: Closure(DefId(0:345 ~ drift[d311]::controller::liquidation::liquidate_borrow_for_perp_pnl::{closure#2}), [i32, Binder(extern &quot;RustCall&quot; fn((error::ErrorCode,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _323: isize;<br align="left"/>let _324: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _325: !;<br align="left"/>let mut _326: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _327: &amp;ReErased mut state::user::PerpPosition;<br align="left"/>let _328: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let mut _329: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased mut state::user::SpotPosition&gt;;<br align="left"/>let mut _330: std::result::Result&lt;&amp;ReErased mut state::user::SpotPosition, error::ErrorCode&gt;;<br align="left"/>let mut _331: std::result::Result&lt;&amp;ReErased mut state::user::SpotPosition, error::ErrorCode&gt;;<br align="left"/>let mut _332: &amp;ReErased mut state::user::User;<br align="left"/>let mut _333: u16;<br align="left"/>let mut _334: Closure(DefId(0:346 ~ drift[d311]::controller::liquidation::liquidate_borrow_for_perp_pnl::{closure#3}), [i32, Binder(extern &quot;RustCall&quot; fn((error::ErrorCode,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _335: isize;<br align="left"/>let _336: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _337: !;<br align="left"/>let mut _338: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _339: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let _340: ();<br align="left"/>let mut _341: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _342: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _343: &amp;ReErased mut state::user::User;<br align="left"/>let mut _344: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _345: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _346: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _347: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _348: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _349: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _350: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _351: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _352: &amp;ReErased u16;<br align="left"/>let _353: &amp;ReErased u16;<br align="left"/>let mut _354: isize;<br align="left"/>let _355: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _356: !;<br align="left"/>let mut _357: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _358: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _359: i64;<br align="left"/>let mut _360: isize;<br align="left"/>let _361: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _362: !;<br align="left"/>let mut _363: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _364: ();<br align="left"/>let _365: ();<br align="left"/>let mut _366: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _367: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _368: &amp;ReErased mut state::user::User;<br align="left"/>let mut _369: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _370: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _371: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _372: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _373: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _374: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _375: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _376: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _377: &amp;ReErased u16;<br align="left"/>let _378: &amp;ReErased u16;<br align="left"/>let mut _379: isize;<br align="left"/>let _380: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _381: !;<br align="left"/>let mut _382: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _383: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _384: i64;<br align="left"/>let mut _385: isize;<br align="left"/>let _386: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _387: !;<br align="left"/>let mut _388: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _389: ();<br align="left"/>let _390: u128;<br align="left"/>let _391: i64;<br align="left"/>let _392: u32;<br align="left"/>let _393: u32;<br align="left"/>let _394: u32;<br align="left"/>let mut _395: (u128, i64, u32, u32, u32);<br align="left"/>let _396: &amp;ReErased state::user::PerpPosition;<br align="left"/>let mut _397: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::user::PerpPosition&gt;;<br align="left"/>let mut _398: std::result::Result&lt;&amp;ReErased state::user::PerpPosition, error::ErrorCode&gt;;<br align="left"/>let mut _399: &amp;ReErased state::user::User;<br align="left"/>let mut _400: u16;<br align="left"/>let mut _401: isize;<br align="left"/>let _402: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _403: !;<br align="left"/>let mut _404: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _405: &amp;ReErased state::user::PerpPosition;<br align="left"/>let _406: i64;<br align="left"/>let _407: ();<br align="left"/>let mut _408: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _409: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _410: bool;<br align="left"/>let mut _411: i64;<br align="left"/>let mut _412: ();<br align="left"/>let _413: error::ErrorCode;<br align="left"/>let _414: ();<br align="left"/>let mut _415: &amp;ReErased str;<br align="left"/>let _416: &amp;ReErased str;<br align="left"/>let mut _417: &amp;ReErased std::string::String;<br align="left"/>let _418: &amp;ReErased std::string::String;<br align="left"/>let _419: std::string::String;<br align="left"/>let _420: std::string::String;<br align="left"/>let mut _421: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _422: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _423: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _424: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _425: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _426: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _427: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _428: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _429: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _430: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _431: &amp;ReErased error::ErrorCode;<br align="left"/>let _432: &amp;ReErased error::ErrorCode;<br align="left"/>let _433: ();<br align="left"/>let mut _434: &amp;ReErased str;<br align="left"/>let _435: &amp;ReErased str;<br align="left"/>let mut _436: &amp;ReErased std::string::String;<br align="left"/>let _437: &amp;ReErased std::string::String;<br align="left"/>let _438: std::string::String;<br align="left"/>let _439: std::string::String;<br align="left"/>let mut _440: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _441: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _442: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _443: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _444: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _445: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _446: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _447: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _448: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _449: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _450: &amp;ReErased i64;<br align="left"/>let _451: &amp;ReErased i64;<br align="left"/>let mut _452: error::ErrorCode;<br align="left"/>let mut _453: isize;<br align="left"/>let _454: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _455: !;<br align="left"/>let mut _456: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _457: ();<br align="left"/>let _458: i128;<br align="left"/>let mut _459: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _460: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _461: i64;<br align="left"/>let mut _462: isize;<br align="left"/>let _463: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _464: !;<br align="left"/>let mut _465: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _466: i128;<br align="left"/>let _467: ();<br align="left"/>let mut _468: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _469: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _470: bool;<br align="left"/>let mut _471: i128;<br align="left"/>let mut _472: ();<br align="left"/>let _473: error::ErrorCode;<br align="left"/>let _474: ();<br align="left"/>let mut _475: &amp;ReErased str;<br align="left"/>let _476: &amp;ReErased str;<br align="left"/>let mut _477: &amp;ReErased std::string::String;<br align="left"/>let _478: &amp;ReErased std::string::String;<br align="left"/>let _479: std::string::String;<br align="left"/>let _480: std::string::String;<br align="left"/>let mut _481: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _482: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _483: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _484: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _485: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _486: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _487: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _488: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _489: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _490: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _491: &amp;ReErased error::ErrorCode;<br align="left"/>let _492: &amp;ReErased error::ErrorCode;<br align="left"/>let _493: ();<br align="left"/>let mut _494: &amp;ReErased str;<br align="left"/>let _495: &amp;ReErased str;<br align="left"/>let mut _496: error::ErrorCode;<br align="left"/>let mut _497: isize;<br align="left"/>let _498: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _499: !;<br align="left"/>let mut _500: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _501: ();<br align="left"/>let _502: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _503: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _504: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _505: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _506: &amp;ReErased u16;<br align="left"/>let _507: &amp;ReErased u16;<br align="left"/>let mut _508: isize;<br align="left"/>let _509: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _510: !;<br align="left"/>let mut _511: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _512: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _513: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _514: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _515: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _516: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _517: &amp;ReErased u16;<br align="left"/>let _518: &amp;ReErased u16;<br align="left"/>let _519: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _520: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _521: isize;<br align="left"/>let _522: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _523: !;<br align="left"/>let mut _524: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _525: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _526: i64;<br align="left"/>let mut _527: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _528: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _529: std::result::Result&lt;&amp;ReErased state::oracle::OraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _530: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _531: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _532: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _533: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _534: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _535: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _536: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _537: isize;<br align="left"/>let _538: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _539: !;<br align="left"/>let mut _540: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _541: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _542: u32;<br align="left"/>let mut _543: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _544: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _545: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _546: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _547: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _548: i128;<br align="left"/>let mut _549: math::margin::MarginRequirementType;<br align="left"/>let mut _550: isize;<br align="left"/>let _551: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _552: !;<br align="left"/>let mut _553: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _554: u32;<br align="left"/>let mut _555: u128;<br align="left"/>let mut _556: i128;<br align="left"/>let mut _557: i64;<br align="left"/>let mut _558: u32;<br align="left"/>let mut _559: u32;<br align="left"/>let mut _560: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _561: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _562: u32;<br align="left"/>let mut _563: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _564: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _565: math::liquidation::LiquidationMultiplierType;<br align="left"/>let mut _566: isize;<br align="left"/>let _567: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _568: !;<br align="left"/>let mut _569: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _570: u32;<br align="left"/>let _571: u128;<br align="left"/>let _572: i64;<br align="left"/>let _573: u32;<br align="left"/>let _574: u32;<br align="left"/>let _575: u32;<br align="left"/>let mut _576: (u128, i64, u32, u32, u32);<br align="left"/>let mut _577: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _578: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _579: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _580: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _581: &amp;ReErased u16;<br align="left"/>let _582: &amp;ReErased u16;<br align="left"/>let mut _583: isize;<br align="left"/>let _584: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _585: !;<br align="left"/>let mut _586: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _587: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _588: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _589: &amp;ReErased state::state::ValidityGuardRails;<br align="left"/>let mut _590: (&amp;ReErased state::oracle::OraclePriceData, &amp;ReErased state::state::ValidityGuardRails);<br align="left"/>let mut _591: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (&amp;ReErased state::oracle::OraclePriceData, &amp;ReErased state::state::ValidityGuardRails)&gt;;<br align="left"/>let mut _592: std::result::Result&lt;(&amp;ReErased state::oracle::OraclePriceData, &amp;ReErased state::state::ValidityGuardRails), error::ErrorCode&gt;;<br align="left"/>let mut _593: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _594: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _595: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _596: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _597: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _598: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _599: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _600: isize;<br align="left"/>let _601: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _602: !;<br align="left"/>let mut _603: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _604: (&amp;ReErased state::oracle::OraclePriceData, &amp;ReErased state::state::ValidityGuardRails);<br align="left"/>let _605: ();<br align="left"/>let mut _606: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _607: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _608: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _609: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _610: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _611: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _612: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _613: &amp;ReErased state::state::ValidityGuardRails;<br align="left"/>let mut _614: i64;<br align="left"/>let mut _615: std::option::Option&lt;math::oracle::DriftAction&gt;;<br align="left"/>let mut _616: math::oracle::DriftAction;<br align="left"/>let mut _617: isize;<br align="left"/>let _618: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _619: !;<br align="left"/>let mut _620: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _621: ();<br align="left"/>let _622: &amp;ReErased state::user::SpotPosition;<br align="left"/>let mut _623: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::user::SpotPosition&gt;;<br align="left"/>let mut _624: std::result::Result&lt;&amp;ReErased state::user::SpotPosition, error::ErrorCode&gt;;<br align="left"/>let mut _625: &amp;ReErased state::user::User;<br align="left"/>let mut _626: u16;<br align="left"/>let mut _627: isize;<br align="left"/>let _628: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _629: !;<br align="left"/>let mut _630: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _631: &amp;ReErased state::user::SpotPosition;<br align="left"/>let _632: ();<br align="left"/>let mut _633: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _634: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _635: bool;<br align="left"/>let mut _636: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _637: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _638: state::spot_market::SpotBalanceType;<br align="left"/>let mut _639: ();<br align="left"/>let _640: error::ErrorCode;<br align="left"/>let _641: ();<br align="left"/>let mut _642: &amp;ReErased str;<br align="left"/>let _643: &amp;ReErased str;<br align="left"/>let mut _644: &amp;ReErased std::string::String;<br align="left"/>let _645: &amp;ReErased std::string::String;<br align="left"/>let _646: std::string::String;<br align="left"/>let _647: std::string::String;<br align="left"/>let mut _648: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _649: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _650: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _651: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _652: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _653: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _654: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _655: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _656: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _657: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _658: &amp;ReErased error::ErrorCode;<br align="left"/>let _659: &amp;ReErased error::ErrorCode;<br align="left"/>let _660: ();<br align="left"/>let mut _661: &amp;ReErased str;<br align="left"/>let _662: &amp;ReErased str;<br align="left"/>let mut _663: error::ErrorCode;<br align="left"/>let mut _664: isize;<br align="left"/>let _665: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _666: !;<br align="left"/>let mut _667: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _668: ();<br align="left"/>let _669: u128;<br align="left"/>let mut _670: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _671: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _672: &amp;ReErased state::user::SpotPosition;<br align="left"/>let mut _673: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _674: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _675: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _676: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _677: isize;<br align="left"/>let _678: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _679: !;<br align="left"/>let mut _680: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _681: u128;<br align="left"/>let _682: ();<br align="left"/>let mut _683: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _684: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _685: bool;<br align="left"/>let mut _686: u128;<br align="left"/>let mut _687: ();<br align="left"/>let _688: error::ErrorCode;<br align="left"/>let _689: ();<br align="left"/>let mut _690: &amp;ReErased str;<br align="left"/>let _691: &amp;ReErased str;<br align="left"/>let mut _692: &amp;ReErased std::string::String;<br align="left"/>let _693: &amp;ReErased std::string::String;<br align="left"/>let _694: std::string::String;<br align="left"/>let _695: std::string::String;<br align="left"/>let mut _696: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _697: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _698: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _699: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _700: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _701: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _702: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _703: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _704: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _705: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _706: &amp;ReErased error::ErrorCode;<br align="left"/>let _707: &amp;ReErased error::ErrorCode;<br align="left"/>let _708: ();<br align="left"/>let mut _709: &amp;ReErased str;<br align="left"/>let _710: &amp;ReErased str;<br align="left"/>let mut _711: &amp;ReErased std::string::String;<br align="left"/>let _712: &amp;ReErased std::string::String;<br align="left"/>let _713: std::string::String;<br align="left"/>let _714: std::string::String;<br align="left"/>let mut _715: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _716: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _717: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _718: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _719: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _720: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _721: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _722: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _723: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _724: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _725: &amp;ReErased u16;<br align="left"/>let _726: &amp;ReErased u16;<br align="left"/>let mut _727: error::ErrorCode;<br align="left"/>let mut _728: isize;<br align="left"/>let _729: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _730: !;<br align="left"/>let mut _731: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _732: ();<br align="left"/>let mut _733: u128;<br align="left"/>let mut _734: i64;<br align="left"/>let mut _735: u32;<br align="left"/>let mut _736: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _737: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _738: u32;<br align="left"/>let mut _739: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _740: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _741: u32;<br align="left"/>let mut _742: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _743: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _744: u32;<br align="left"/>let mut _745: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _746: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _747: math::liquidation::LiquidationMultiplierType;<br align="left"/>let mut _748: isize;<br align="left"/>let _749: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _750: !;<br align="left"/>let mut _751: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _752: u32;<br align="left"/>let _753: state::margin_calculation::MarginCalculation;<br align="left"/>let mut _754: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::margin_calculation::MarginCalculation&gt;;<br align="left"/>let mut _755: std::result::Result&lt;state::margin_calculation::MarginCalculation, error::ErrorCode&gt;;<br align="left"/>let mut _756: &amp;ReErased state::user::User;<br align="left"/>let mut _757: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _758: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _759: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _760: state::margin_calculation::MarginContext;<br align="left"/>let mut _761: u32;<br align="left"/>let mut _762: isize;<br align="left"/>let _763: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _764: !;<br align="left"/>let mut _765: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _766: state::margin_calculation::MarginCalculation;<br align="left"/>let _767: ();<br align="left"/>let mut _768: bool;<br align="left"/>let mut _769: &amp;ReErased state::user::User;<br align="left"/>let mut _770: bool;<br align="left"/>let mut _771: &amp;ReErased state::margin_calculation::MarginCalculation;<br align="left"/>let mut _772: !;<br align="left"/>let _773: ();<br align="left"/>let mut _774: &amp;ReErased str;<br align="left"/>let _775: &amp;ReErased str;<br align="left"/>let mut _776: &amp;ReErased std::string::String;<br align="left"/>let _777: &amp;ReErased std::string::String;<br align="left"/>let _778: std::string::String;<br align="left"/>let _779: std::string::String;<br align="left"/>let mut _780: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _781: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _782: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _783: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _784: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _785: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _786: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _787: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _788: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _789: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _790: &amp;ReErased state::margin_calculation::MarginCalculation;<br align="left"/>let _791: &amp;ReErased state::margin_calculation::MarginCalculation;<br align="left"/>let mut _792: error::ErrorCode;<br align="left"/>let mut _793: bool;<br align="left"/>let mut _794: &amp;ReErased state::user::User;<br align="left"/>let mut _795: bool;<br align="left"/>let mut _796: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _797: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _798: &amp;ReErased state::margin_calculation::MarginCalculation;<br align="left"/>let mut _799: isize;<br align="left"/>let _800: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _801: !;<br align="left"/>let mut _802: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _803: bool;<br align="left"/>let mut _804: !;<br align="left"/>let _805: ();<br align="left"/>let mut _806: &amp;ReErased mut state::user::User;<br align="left"/>let mut _807: ();<br align="left"/>let _808: u16;<br align="left"/>let mut _809: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u16&gt;;<br align="left"/>let mut _810: std::result::Result&lt;u16, error::ErrorCode&gt;;<br align="left"/>let mut _811: &amp;ReErased mut state::user::User;<br align="left"/>let mut _812: u64;<br align="left"/>let mut _813: isize;<br align="left"/>let _814: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _815: !;<br align="left"/>let mut _816: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _817: u16;<br align="left"/>let mut _818: u64;<br align="left"/>let _819: std::vec::Vec&lt;u32, std::alloc::Global&gt;;<br align="left"/>let mut _820: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::vec::Vec&lt;u32, std::alloc::Global&gt;&gt;;<br align="left"/>let mut _821: std::result::Result&lt;std::vec::Vec&lt;u32, std::alloc::Global&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _822: &amp;ReErased mut state::user::User;<br align="left"/>let mut _823: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _824: std::option::Option&lt;&amp;ReErased anchor_lang::prelude::Pubkey&gt;;<br align="left"/>let mut _825: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _826: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _827: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _828: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _829: i64;<br align="left"/>let mut _830: u64;<br align="left"/>let mut _831: state::events::OrderActionExplanation;<br align="left"/>let mut _832: std::option::Option&lt;state::user::MarketType&gt;;<br align="left"/>let mut _833: std::option::Option&lt;u16&gt;;<br align="left"/>let mut _834: std::option::Option&lt;controller::position::PositionDirection&gt;;<br align="left"/>let mut _835: isize;<br align="left"/>let _836: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _837: !;<br align="left"/>let mut _838: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _839: std::vec::Vec&lt;u32, std::alloc::Global&gt;;<br align="left"/>let _840: state::margin_calculation::MarginCalculation;<br align="left"/>let mut _841: bool;<br align="left"/>let mut _842: &amp;ReErased std::vec::Vec&lt;u32, std::alloc::Global&gt;;<br align="left"/>let _843: state::margin_calculation::MarginCalculation;<br align="left"/>let mut _844: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::margin_calculation::MarginCalculation&gt;;<br align="left"/>let mut _845: std::result::Result&lt;state::margin_calculation::MarginCalculation, error::ErrorCode&gt;;<br align="left"/>let mut _846: &amp;ReErased state::user::User;<br align="left"/>let mut _847: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _848: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _849: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _850: state::margin_calculation::MarginContext;<br align="left"/>let mut _851: u32;<br align="left"/>let mut _852: isize;<br align="left"/>let _853: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _854: !;<br align="left"/>let mut _855: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _856: state::margin_calculation::MarginCalculation;<br align="left"/>let _857: u128;<br align="left"/>let mut _858: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _859: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _860: &amp;ReErased state::margin_calculation::MarginCalculation;<br align="left"/>let mut _861: isize;<br align="left"/>let _862: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _863: !;<br align="left"/>let mut _864: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _865: u128;<br align="left"/>let _866: u128;<br align="left"/>let mut _867: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _868: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _869: &amp;ReErased state::margin_calculation::MarginCalculation;<br align="left"/>let mut _870: isize;<br align="left"/>let _871: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _872: !;<br align="left"/>let mut _873: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _874: u128;<br align="left"/>let mut _875: u64;<br align="left"/>let mut _876: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _877: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _878: u128;<br align="left"/>let mut _879: u128;<br align="left"/>let mut _880: u128;<br align="left"/>let mut _881: isize;<br align="left"/>let _882: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _883: !;<br align="left"/>let mut _884: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _885: u64;<br align="left"/>let _886: ();<br align="left"/>let mut _887: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _888: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _889: &amp;ReErased mut state::user::User;<br align="left"/>let mut _890: u64;<br align="left"/>let mut _891: isize;<br align="left"/>let _892: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _893: !;<br align="left"/>let mut _894: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _895: ();<br align="left"/>let _896: ();<br align="left"/>let mut _897: bool;<br align="left"/>let mut _898: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _899: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _900: &amp;ReErased state::margin_calculation::MarginCalculation;<br align="left"/>let mut _901: isize;<br align="left"/>let _902: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _903: !;<br align="left"/>let mut _904: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _905: bool;<br align="left"/>let mut _906: !;<br align="left"/>let _907: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _908: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _909: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _910: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _911: &amp;ReErased u16;<br align="left"/>let _912: &amp;ReErased u16;<br align="left"/>let mut _913: isize;<br align="left"/>let _914: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _915: !;<br align="left"/>let mut _916: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _917: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _918: i64;<br align="left"/>let mut _919: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _920: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _921: std::result::Result&lt;&amp;ReErased state::oracle::OraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _922: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _923: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _924: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _925: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _926: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _927: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _928: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _929: isize;<br align="left"/>let _930: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _931: !;<br align="left"/>let mut _932: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _933: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _934: ();<br align="left"/>let _935: ();<br align="left"/>let mut _936: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let mut _937: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let _938: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let _939: [&amp;ReErased [u8]; 1_usize];<br align="left"/>let mut _940: &amp;ReErased [u8];<br align="left"/>let _941: &amp;ReErased [u8];<br align="left"/>let mut _942: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _943: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _944: std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _945: &amp;ReErased state::events::LiquidationRecord;<br align="left"/>let _946: &amp;ReErased state::events::LiquidationRecord;<br align="left"/>let _947: state::events::LiquidationRecord;<br align="left"/>let mut _948: i64;<br align="left"/>let mut _949: u16;<br align="left"/>let mut _950: state::events::LiquidationType;<br align="left"/>let mut _951: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _952: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _953: u128;<br align="left"/>let mut _954: i128;<br align="left"/>let mut _955: bool;<br align="left"/>let mut _956: &amp;ReErased state::user::User;<br align="left"/>let mut _957: std::vec::Vec&lt;u32, std::alloc::Global&gt;;<br align="left"/>let mut _958: u64;<br align="left"/>let mut _959: state::events::LiquidateBorrowForPerpPnlRecord;<br align="left"/>let mut _960: u16;<br align="left"/>let mut _961: i64;<br align="left"/>let mut _962: u16;<br align="left"/>let mut _963: i64;<br align="left"/>let mut _964: state::events::LiquidationRecord;<br align="left"/>let _965: ();<br align="left"/>let mut _966: &amp;ReErased mut state::user::User;<br align="left"/>let mut _967: ();<br align="left"/>let _968: u128;<br align="left"/>let mut _969: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _970: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _971: &amp;ReErased state::margin_calculation::MarginCalculation;<br align="left"/>let mut _972: isize;<br align="left"/>let _973: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _974: !;<br align="left"/>let mut _975: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _976: u128;<br align="left"/>let _977: u32;<br align="left"/>let mut _978: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _979: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _980: u32;<br align="left"/>let mut _981: u32;<br align="left"/>let mut _982: isize;<br align="left"/>let _983: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _984: !;<br align="left"/>let mut _985: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _986: u32;<br align="left"/>let _987: u128;<br align="left"/>let mut _988: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _989: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _990: u128;<br align="left"/>let mut _991: u32;<br align="left"/>let mut _992: u32;<br align="left"/>let mut _993: u32;<br align="left"/>let mut _994: u32;<br align="left"/>let mut _995: u32;<br align="left"/>let mut _996: i64;<br align="left"/>let mut _997: isize;<br align="left"/>let _998: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _999: !;<br align="left"/>let mut _1000: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1001: u128;<br align="left"/>let _1002: u128;<br align="left"/>let mut _1003: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _1004: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _1005: &amp;ReErased state::user::User;<br align="left"/>let mut _1006: u128;<br align="left"/>let mut _1007: u64;<br align="left"/>let mut _1008: u128;<br align="left"/>let mut _1009: u128;<br align="left"/>let mut _1010: isize;<br align="left"/>let _1011: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1012: !;<br align="left"/>let mut _1013: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1014: u128;<br align="left"/>let _1015: u128;<br align="left"/>let mut _1016: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _1017: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _1018: u128;<br align="left"/>let mut _1019: u128;<br align="left"/>let mut _1020: u128;<br align="left"/>let mut _1021: isize;<br align="left"/>let _1022: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1023: !;<br align="left"/>let mut _1024: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1025: u128;<br align="left"/>let _1026: ();<br align="left"/>let mut _1027: bool;<br align="left"/>let mut _1028: u128;<br align="left"/>let mut _1029: !;<br align="left"/>let _1030: ();<br align="left"/>let mut _1031: &amp;ReErased str;<br align="left"/>let _1032: &amp;ReErased str;<br align="left"/>let mut _1033: ();<br align="left"/>let _1034: u128;<br align="left"/>let mut _1035: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _1036: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _1037: u128;<br align="left"/>let mut _1038: u32;<br align="left"/>let mut _1039: u32;<br align="left"/>let mut _1040: i64;<br align="left"/>let mut _1041: u32;<br align="left"/>let mut _1042: u32;<br align="left"/>let mut _1043: i64;<br align="left"/>let mut _1044: isize;<br align="left"/>let _1045: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1046: !;<br align="left"/>let mut _1047: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1048: u128;<br align="left"/>let _1049: i128;<br align="left"/>let mut _1050: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _1051: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _1052: i128;<br align="left"/>let mut _1053: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _1054: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _1055: u128;<br align="left"/>let mut _1056: isize;<br align="left"/>let _1057: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1058: !;<br align="left"/>let mut _1059: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1060: i128;<br align="left"/>let mut _1061: u32;<br align="left"/>let mut _1062: i64;<br align="left"/>let mut _1063: isize;<br align="left"/>let _1064: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1065: !;<br align="left"/>let mut _1066: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1067: i128;<br align="left"/>let _1068: u128;<br align="left"/>let mut _1069: bool;<br align="left"/>let mut _1070: i128;<br align="left"/>let mut _1071: i128;<br align="left"/>let mut _1072: (i128, bool);<br align="left"/>let _1073: u128;<br align="left"/>let mut _1074: u128;<br align="left"/>let mut _1075: u128;<br align="left"/>let mut _1076: u128;<br align="left"/>let mut _1077: u128;<br align="left"/>let mut _1078: u128;<br align="left"/>let mut _1079: u128;<br align="left"/>let mut _1080: u128;<br align="left"/>let mut _1081: u128;<br align="left"/>let _1082: u128;<br align="left"/>let mut _1083: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _1084: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _1085: u128;<br align="left"/>let mut _1086: u32;<br align="left"/>let mut _1087: u32;<br align="left"/>let mut _1088: i64;<br align="left"/>let mut _1089: u128;<br align="left"/>let mut _1090: u32;<br align="left"/>let mut _1091: u32;<br align="left"/>let mut _1092: i64;<br align="left"/>let mut _1093: isize;<br align="left"/>let _1094: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1095: !;<br align="left"/>let mut _1096: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1097: u128;<br align="left"/>let _1098: ();<br align="left"/>let mut _1099: bool;<br align="left"/>let mut _1100: u128;<br align="left"/>let mut _1101: bool;<br align="left"/>let mut _1102: u128;<br align="left"/>let mut _1103: !;<br align="left"/>let _1104: ();<br align="left"/>let mut _1105: &amp;ReErased str;<br align="left"/>let _1106: &amp;ReErased str;<br align="left"/>let mut _1107: &amp;ReErased std::string::String;<br align="left"/>let _1108: &amp;ReErased std::string::String;<br align="left"/>let _1109: std::string::String;<br align="left"/>let _1110: std::string::String;<br align="left"/>let mut _1111: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _1112: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _1113: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _1114: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _1115: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1116: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _1117: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _1118: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _1119: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _1120: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1121: &amp;ReErased u16;<br align="left"/>let _1122: &amp;ReErased u16;<br align="left"/>let mut _1123: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1124: &amp;ReErased u16;<br align="left"/>let _1125: &amp;ReErased u16;<br align="left"/>let _1126: ();<br align="left"/>let mut _1127: &amp;ReErased str;<br align="left"/>let _1128: &amp;ReErased str;<br align="left"/>let mut _1129: &amp;ReErased std::string::String;<br align="left"/>let _1130: &amp;ReErased std::string::String;<br align="left"/>let _1131: std::string::String;<br align="left"/>let _1132: std::string::String;<br align="left"/>let mut _1133: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _1134: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _1135: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _1136: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _1137: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _1138: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _1139: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _1140: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _1141: [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let mut _1142: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1143: &amp;ReErased u128;<br align="left"/>let _1144: &amp;ReErased u128;<br align="left"/>let mut _1145: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1146: &amp;ReErased u128;<br align="left"/>let _1147: &amp;ReErased u128;<br align="left"/>let mut _1148: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1149: &amp;ReErased u128;<br align="left"/>let _1150: &amp;ReErased u128;<br align="left"/>let _1151: ();<br align="left"/>let mut _1152: &amp;ReErased str;<br align="left"/>let _1153: &amp;ReErased str;<br align="left"/>let mut _1154: &amp;ReErased std::string::String;<br align="left"/>let _1155: &amp;ReErased std::string::String;<br align="left"/>let _1156: std::string::String;<br align="left"/>let _1157: std::string::String;<br align="left"/>let mut _1158: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _1159: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _1160: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _1161: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _1162: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _1163: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _1164: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _1165: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _1166: [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let mut _1167: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1168: &amp;ReErased u128;<br align="left"/>let _1169: &amp;ReErased u128;<br align="left"/>let mut _1170: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1171: &amp;ReErased u128;<br align="left"/>let _1172: &amp;ReErased u128;<br align="left"/>let mut _1173: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1174: &amp;ReErased u128;<br align="left"/>let _1175: &amp;ReErased u128;<br align="left"/>let mut _1176: error::ErrorCode;<br align="left"/>let _1177: ();<br align="left"/>let mut _1178: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _1179: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _1180: u128;<br align="left"/>let mut _1181: u128;<br align="left"/>let mut _1182: u32;<br align="left"/>let mut _1183: u32;<br align="left"/>let mut _1184: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _1185: isize;<br align="left"/>let _1186: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1187: !;<br align="left"/>let mut _1188: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1189: ();<br align="left"/>let _1190: ();<br align="left"/>let mut _1191: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _1192: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _1193: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _1194: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _1195: &amp;ReErased u16;<br align="left"/>let _1196: &amp;ReErased u16;<br align="left"/>let mut _1197: isize;<br align="left"/>let _1198: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1199: !;<br align="left"/>let mut _1200: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1201: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _1202: ();<br align="left"/>let mut _1203: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _1204: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _1205: u128;<br align="left"/>let mut _1206: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _1207: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _1208: state::spot_market::SpotBalanceType;<br align="left"/>let mut _1209: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _1210: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _1211: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _1212: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _1213: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let mut _1214: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let mut _1215: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased mut state::user::SpotPosition&gt;;<br align="left"/>let mut _1216: std::result::Result&lt;&amp;ReErased mut state::user::SpotPosition, error::ErrorCode&gt;;<br align="left"/>let mut _1217: &amp;ReErased mut state::user::User;<br align="left"/>let mut _1218: u16;<br align="left"/>let mut _1219: isize;<br align="left"/>let _1220: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1221: !;<br align="left"/>let mut _1222: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1223: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let mut _1224: std::option::Option&lt;u128&gt;;<br align="left"/>let mut _1225: u128;<br align="left"/>let mut _1226: isize;<br align="left"/>let _1227: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1228: !;<br align="left"/>let mut _1229: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1230: ();<br align="left"/>let _1231: ();<br align="left"/>let mut _1232: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _1233: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _1234: u128;<br align="left"/>let mut _1235: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _1236: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _1237: state::spot_market::SpotBalanceType;<br align="left"/>let mut _1238: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _1239: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _1240: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _1241: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _1242: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let mut _1243: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let mut _1244: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased mut state::user::SpotPosition&gt;;<br align="left"/>let mut _1245: std::result::Result&lt;&amp;ReErased mut state::user::SpotPosition, error::ErrorCode&gt;;<br align="left"/>let mut _1246: &amp;ReErased mut state::user::User;<br align="left"/>let mut _1247: u16;<br align="left"/>let mut _1248: isize;<br align="left"/>let _1249: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1250: !;<br align="left"/>let mut _1251: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1252: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let mut _1253: std::option::Option&lt;u128&gt;;<br align="left"/>let mut _1254: u128;<br align="left"/>let mut _1255: isize;<br align="left"/>let _1256: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1257: !;<br align="left"/>let mut _1258: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1259: ();<br align="left"/>let _1260: ();<br align="left"/>let mut _1261: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _1262: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _1263: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _1264: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _1265: &amp;ReErased u16;<br align="left"/>let _1266: &amp;ReErased u16;<br align="left"/>let mut _1267: isize;<br align="left"/>let _1268: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1269: !;<br align="left"/>let mut _1270: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1271: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _1272: &amp;ReErased mut state::user::PerpPosition;<br align="left"/>let mut _1273: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased mut state::user::PerpPosition&gt;;<br align="left"/>let mut _1274: std::result::Result&lt;&amp;ReErased mut state::user::PerpPosition, error::ErrorCode&gt;;<br align="left"/>let mut _1275: &amp;ReErased mut state::user::User;<br align="left"/>let mut _1276: u16;<br align="left"/>let mut _1277: isize;<br align="left"/>let _1278: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1279: !;<br align="left"/>let mut _1280: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1281: &amp;ReErased mut state::user::PerpPosition;<br align="left"/>let _1282: ();<br align="left"/>let mut _1283: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _1284: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _1285: &amp;ReErased mut state::user::PerpPosition;<br align="left"/>let mut _1286: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _1287: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _1288: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _1289: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _1290: i64;<br align="left"/>let mut _1291: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _1292: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _1293: u128;<br align="left"/>let mut _1294: isize;<br align="left"/>let _1295: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1296: !;<br align="left"/>let mut _1297: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1298: i64;<br align="left"/>let mut _1299: isize;<br align="left"/>let _1300: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1301: !;<br align="left"/>let mut _1302: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1303: ();<br align="left"/>let _1304: &amp;ReErased mut state::user::PerpPosition;<br align="left"/>let mut _1305: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased mut state::user::PerpPosition&gt;;<br align="left"/>let mut _1306: std::result::Result&lt;&amp;ReErased mut state::user::PerpPosition, error::ErrorCode&gt;;<br align="left"/>let mut _1307: &amp;ReErased mut state::user::User;<br align="left"/>let mut _1308: u16;<br align="left"/>let mut _1309: isize;<br align="left"/>let _1310: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1311: !;<br align="left"/>let mut _1312: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1313: &amp;ReErased mut state::user::PerpPosition;<br align="left"/>let _1314: ();<br align="left"/>let mut _1315: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _1316: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _1317: &amp;ReErased mut state::user::PerpPosition;<br align="left"/>let mut _1318: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _1319: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _1320: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _1321: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _1322: i64;<br align="left"/>let mut _1323: i64;<br align="left"/>let mut _1324: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _1325: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _1326: u128;<br align="left"/>let mut _1327: isize;<br align="left"/>let _1328: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1329: !;<br align="left"/>let mut _1330: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1331: i64;<br align="left"/>let mut _1332: bool;<br align="left"/>let mut _1333: isize;<br align="left"/>let _1334: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1335: !;<br align="left"/>let mut _1336: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1337: ();<br align="left"/>let _1338: u64;<br align="left"/>let mut _1339: (u64, state::margin_calculation::MarginCalculation);<br align="left"/>let mut _1340: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (u64, state::margin_calculation::MarginCalculation)&gt;;<br align="left"/>let mut _1341: std::result::Result&lt;(u64, state::margin_calculation::MarginCalculation), error::ErrorCode&gt;;<br align="left"/>let mut _1342: &amp;ReErased state::user::User;<br align="left"/>let mut _1343: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _1344: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _1345: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _1346: u32;<br align="left"/>let mut _1347: u128;<br align="left"/>let mut _1348: isize;<br align="left"/>let _1349: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1350: !;<br align="left"/>let mut _1351: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1352: (u64, state::margin_calculation::MarginCalculation);<br align="left"/>let mut _1353: u64;<br align="left"/>let mut _1354: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _1355: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _1356: u64;<br align="left"/>let mut _1357: u64;<br align="left"/>let mut _1358: isize;<br align="left"/>let _1359: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1360: !;<br align="left"/>let mut _1361: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1362: u64;<br align="left"/>let _1363: ();<br align="left"/>let mut _1364: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _1365: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _1366: &amp;ReErased mut state::user::User;<br align="left"/>let mut _1367: u64;<br align="left"/>let mut _1368: isize;<br align="left"/>let _1369: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1370: !;<br align="left"/>let mut _1371: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1372: ();<br align="left"/>let _1373: ();<br align="left"/>let mut _1374: bool;<br align="left"/>let mut _1375: u128;<br align="left"/>let mut _1376: u128;<br align="left"/>let _1377: ();<br align="left"/>let mut _1378: &amp;ReErased mut state::user::User;<br align="left"/>let mut _1379: bool;<br align="left"/>let mut _1380: &amp;ReErased state::user::User;<br align="left"/>let _1381: ();<br align="left"/>let mut _1382: &amp;ReErased mut state::user::User;<br align="left"/>let _1383: bool;<br align="left"/>let mut _1384: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _1385: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _1386: &amp;ReErased state::user::User;<br align="left"/>let mut _1387: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _1388: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _1389: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _1390: isize;<br align="left"/>let _1391: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1392: !;<br align="left"/>let mut _1393: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1394: bool;<br align="left"/>let _1395: ();<br align="left"/>let mut _1396: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _1397: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _1398: bool;<br align="left"/>let mut _1399: ();<br align="left"/>let _1400: error::ErrorCode;<br align="left"/>let _1401: ();<br align="left"/>let mut _1402: &amp;ReErased str;<br align="left"/>let _1403: &amp;ReErased str;<br align="left"/>let mut _1404: &amp;ReErased std::string::String;<br align="left"/>let _1405: &amp;ReErased std::string::String;<br align="left"/>let _1406: std::string::String;<br align="left"/>let _1407: std::string::String;<br align="left"/>let mut _1408: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _1409: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _1410: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _1411: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _1412: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1413: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _1414: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _1415: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _1416: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _1417: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1418: &amp;ReErased error::ErrorCode;<br align="left"/>let _1419: &amp;ReErased error::ErrorCode;<br align="left"/>let _1420: ();<br align="left"/>let mut _1421: &amp;ReErased str;<br align="left"/>let _1422: &amp;ReErased str;<br align="left"/>let mut _1423: error::ErrorCode;<br align="left"/>let mut _1424: isize;<br align="left"/>let _1425: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1426: !;<br align="left"/>let mut _1427: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1428: ();<br align="left"/>let _1429: i64;<br align="left"/>let _1430: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _1431: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _1432: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _1433: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _1434: &amp;ReErased u16;<br align="left"/>let _1435: &amp;ReErased u16;<br align="left"/>let mut _1436: isize;<br align="left"/>let _1437: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1438: !;<br align="left"/>let mut _1439: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1440: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _1441: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _1442: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _1443: std::result::Result&lt;&amp;ReErased state::oracle::OraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _1444: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _1445: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _1446: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _1447: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _1448: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _1449: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _1450: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _1451: isize;<br align="left"/>let _1452: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1453: !;<br align="left"/>let mut _1454: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1455: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _1456: ();<br align="left"/>let _1457: ();<br align="left"/>let mut _1458: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let mut _1459: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let _1460: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let _1461: [&amp;ReErased [u8]; 1_usize];<br align="left"/>let mut _1462: &amp;ReErased [u8];<br align="left"/>let _1463: &amp;ReErased [u8];<br align="left"/>let mut _1464: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _1465: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _1466: std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _1467: &amp;ReErased state::events::LiquidationRecord;<br align="left"/>let _1468: &amp;ReErased state::events::LiquidationRecord;<br align="left"/>let _1469: state::events::LiquidationRecord;<br align="left"/>let mut _1470: i64;<br align="left"/>let mut _1471: u16;<br align="left"/>let mut _1472: state::events::LiquidationType;<br align="left"/>let mut _1473: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _1474: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _1475: u128;<br align="left"/>let mut _1476: i128;<br align="left"/>let mut _1477: bool;<br align="left"/>let mut _1478: &amp;ReErased state::user::User;<br align="left"/>let mut _1479: u64;<br align="left"/>let mut _1480: state::events::LiquidateBorrowForPerpPnlRecord;<br align="left"/>let mut _1481: u16;<br align="left"/>let mut _1482: i64;<br align="left"/>let mut _1483: u128;<br align="left"/>let mut _1484: u16;<br align="left"/>let mut _1485: i64;<br align="left"/>let mut _1486: u128;<br align="left"/>let mut _1487: state::events::LiquidationRecord;<br align="left"/>let mut _1488: ();<br align="left"/>let mut _1489: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _1490: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _1491: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1492: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1493: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _1494: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _1495: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _1496: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _1497: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1498: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1499: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _1500: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1501: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1502: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1503: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _1504: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1505: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _1506: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1507: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1508: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1509: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _1510: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1511: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _1512: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1513: bool;<br align="left"/>let mut _1514: bool;<br align="left"/>let mut _1515: bool;<br align="left"/>let mut _1516: bool;<br align="left"/>let mut _1517: bool;<br align="left"/>let mut _1518: isize;<br align="left"/>let mut _1519: isize;<br align="left"/>let mut _1520: isize;<br align="left"/>let mut _1521: isize;<br align="left"/>let mut _1522: isize;<br align="left"/>let mut _1523: isize;<br align="left"/>let mut _1524: isize;<br align="left"/>let mut _1525: isize;<br align="left"/>let mut _1526: isize;<br align="left"/>let mut _1527: isize;<br align="left"/>let mut _1528: isize;<br align="left"/>let mut _1529: isize;<br align="left"/>let mut _1530: isize;<br align="left"/>let mut _1531: isize;<br align="left"/>let mut _1532: isize;<br align="left"/>let mut _1533: isize;<br align="left"/>let mut _1534: isize;<br align="left"/>let mut _1535: isize;<br align="left"/>let mut _1536: isize;<br align="left"/>let mut _1537: isize;<br align="left"/>let mut _1538: isize;<br align="left"/>let mut _1539: isize;<br align="left"/>let mut _1540: isize;<br align="left"/>let mut _1541: isize;<br align="left"/>let mut _1542: isize;<br align="left"/>let mut _1543: isize;<br align="left"/>let mut _1544: isize;<br align="left"/>let mut _1545: isize;<br align="left"/>let mut _1546: isize;<br align="left"/>let mut _1547: isize;<br align="left"/>let mut _1548: isize;<br align="left"/>let mut _1549: isize;<br align="left"/>let mut _1550: isize;<br align="left"/>let mut _1551: isize;<br align="left"/>let mut _1552: isize;<br align="left"/>let mut _1553: isize;<br align="left"/>let mut _1554: isize;<br align="left"/>let mut _1555: isize;<br align="left"/>let mut _1556: isize;<br align="left"/>let mut _1557: isize;<br align="left"/>let mut _1558: isize;<br align="left"/>let mut _1559: isize;<br align="left"/>let mut _1560: isize;<br align="left"/>let mut _1561: isize;<br align="left"/>let mut _1562: isize;<br align="left"/>let mut _1563: isize;<br align="left"/>let mut _1564: isize;<br align="left"/>let mut _1565: isize;<br align="left"/>let mut _1566: isize;<br align="left"/>let mut _1567: isize;<br align="left"/>let mut _1568: isize;<br align="left"/>let mut _1569: isize;<br align="left"/>let mut _1570: isize;<br align="left"/>let mut _1571: isize;<br align="left"/>let mut _1572: isize;<br align="left"/>let mut _1573: isize;<br align="left"/>let mut _1574: isize;<br align="left"/>let mut _1575: isize;<br align="left"/>let mut _1576: isize;<br align="left"/>let mut _1577: isize;<br align="left"/>debug perp_market_index =&gt; _1;<br align="left"/>debug liability_market_index =&gt; _2;<br align="left"/>debug liquidator_max_liability_transfer =&gt; _3;<br align="left"/>debug limit_price =&gt; _4;<br align="left"/>debug user =&gt; _5;<br align="left"/>debug user_key =&gt; _6;<br align="left"/>debug liquidator =&gt; _7;<br align="left"/>debug liquidator_key =&gt; _8;<br align="left"/>debug perp_market_map =&gt; _9;<br align="left"/>debug spot_market_map =&gt; _10;<br align="left"/>debug oracle_map =&gt; _11;<br align="left"/>debug now =&gt; _12;<br align="left"/>debug slot =&gt; _13;<br align="left"/>debug liquidation_margin_buffer_ratio =&gt; _14;<br align="left"/>debug initial_pct_to_liquidate =&gt; _15;<br align="left"/>debug liquidation_duration =&gt; _16;<br align="left"/>debug error_code =&gt; _23;<br align="left"/>debug res =&gt; _30;<br align="left"/>debug res =&gt; _49;<br align="left"/>debug residual =&gt; _57;<br align="left"/>debug val =&gt; _60;<br align="left"/>debug error_code =&gt; _67;<br align="left"/>debug res =&gt; _74;<br align="left"/>debug res =&gt; _93;<br align="left"/>debug residual =&gt; _101;<br align="left"/>debug val =&gt; _104;<br align="left"/>debug error_code =&gt; _111;<br align="left"/>debug res =&gt; _118;<br align="left"/>debug res =&gt; _137;<br align="left"/>debug residual =&gt; _152;<br align="left"/>debug val =&gt; _155;<br align="left"/>debug perp_market =&gt; _156;<br align="left"/>debug residual =&gt; _163;<br align="left"/>debug val =&gt; _166;<br align="left"/>debug error_code =&gt; _176;<br align="left"/>debug res =&gt; _183;<br align="left"/>debug res =&gt; _202;<br align="left"/>debug residual =&gt; _217;<br align="left"/>debug val =&gt; _220;<br align="left"/>debug liability_spot_market =&gt; _223;<br align="left"/>debug residual =&gt; _230;<br align="left"/>debug val =&gt; _233;<br align="left"/>debug error_code =&gt; _243;<br align="left"/>debug res =&gt; _250;<br align="left"/>debug res =&gt; _269;<br align="left"/>debug residual =&gt; _284;<br align="left"/>debug val =&gt; _287;<br align="left"/>debug residual =&gt; _299;<br align="left"/>debug val =&gt; _302;<br align="left"/>debug residual =&gt; _312;<br align="left"/>debug val =&gt; _315;<br align="left"/>debug residual =&gt; _324;<br align="left"/>debug val =&gt; _327;<br align="left"/>debug residual =&gt; _336;<br align="left"/>debug val =&gt; _339;<br align="left"/>debug residual =&gt; _355;<br align="left"/>debug val =&gt; _358;<br align="left"/>debug residual =&gt; _361;<br align="left"/>debug val =&gt; _364;<br align="left"/>debug residual =&gt; _380;<br align="left"/>debug val =&gt; _383;<br align="left"/>debug residual =&gt; _386;<br align="left"/>debug val =&gt; _389;<br align="left"/>debug pnl =&gt; _390;<br align="left"/>debug quote_price =&gt; _391;<br align="left"/>debug quote_decimals =&gt; _392;<br align="left"/>debug pnl_asset_weight =&gt; _393;<br align="left"/>debug pnl_liquidation_multiplier =&gt; _394;<br align="left"/>debug user_position =&gt; _396;<br align="left"/>debug residual =&gt; _402;<br align="left"/>debug val =&gt; _405;<br align="left"/>debug base_asset_amount =&gt; _406;<br align="left"/>debug error_code =&gt; _413;<br align="left"/>debug res =&gt; _420;<br align="left"/>debug res =&gt; _439;<br align="left"/>debug residual =&gt; _454;<br align="left"/>debug val =&gt; _457;<br align="left"/>debug pnl =&gt; _458;<br align="left"/>debug residual =&gt; _463;<br align="left"/>debug val =&gt; _466;<br align="left"/>debug error_code =&gt; _473;<br align="left"/>debug res =&gt; _480;<br align="left"/>debug residual =&gt; _498;<br align="left"/>debug val =&gt; _501;<br align="left"/>debug market =&gt; _502;<br align="left"/>debug residual =&gt; _509;<br align="left"/>debug val =&gt; _512;<br align="left"/>debug quote_spot_market =&gt; _513;<br align="left"/>debug residual =&gt; _522;<br align="left"/>debug val =&gt; _525;<br align="left"/>debug quote_price =&gt; _526;<br align="left"/>debug residual =&gt; _538;<br align="left"/>debug val =&gt; _541;<br align="left"/>debug pnl_asset_weight =&gt; _542;<br align="left"/>debug residual =&gt; _551;<br align="left"/>debug val =&gt; _554;<br align="left"/>debug residual =&gt; _567;<br align="left"/>debug val =&gt; _570;<br align="left"/>debug liability_amount =&gt; _571;<br align="left"/>debug liability_price =&gt; _572;<br align="left"/>debug liability_decimals =&gt; _573;<br align="left"/>debug liability_weight =&gt; _574;<br align="left"/>debug liability_liquidation_multiplier =&gt; _575;<br align="left"/>debug liability_market =&gt; _577;<br align="left"/>debug residual =&gt; _584;<br align="left"/>debug val =&gt; _587;<br align="left"/>debug liability_price_data =&gt; _588;<br align="left"/>debug validity_guard_rails =&gt; _589;<br align="left"/>debug residual =&gt; _601;<br align="left"/>debug val =&gt; _604;<br align="left"/>debug residual =&gt; _618;<br align="left"/>debug val =&gt; _621;<br align="left"/>debug spot_position =&gt; _622;<br align="left"/>debug residual =&gt; _628;<br align="left"/>debug val =&gt; _631;<br align="left"/>debug error_code =&gt; _640;<br align="left"/>debug res =&gt; _647;<br align="left"/>debug residual =&gt; _665;<br align="left"/>debug val =&gt; _668;<br align="left"/>debug token_amount =&gt; _669;<br align="left"/>debug residual =&gt; _678;<br align="left"/>debug val =&gt; _681;<br align="left"/>debug error_code =&gt; _688;<br align="left"/>debug res =&gt; _695;<br align="left"/>debug res =&gt; _714;<br align="left"/>debug residual =&gt; _729;<br align="left"/>debug val =&gt; _732;<br align="left"/>debug residual =&gt; _749;<br align="left"/>debug val =&gt; _752;<br align="left"/>debug margin_calculation =&gt; _753;<br align="left"/>debug residual =&gt; _763;<br align="left"/>debug val =&gt; _766;<br align="left"/>debug res =&gt; _779;<br align="left"/>debug residual =&gt; _800;<br align="left"/>debug val =&gt; _803;<br align="left"/>debug liquidation_id =&gt; _808;<br align="left"/>debug residual =&gt; _814;<br align="left"/>debug val =&gt; _817;<br align="left"/>debug margin_freed =&gt; _818;<br align="left"/>debug canceled_order_ids =&gt; _819;<br align="left"/>debug residual =&gt; _836;<br align="left"/>debug val =&gt; _839;<br align="left"/>debug intermediate_margin_calculation =&gt; _840;<br align="left"/>debug intermediate_margin_calculation =&gt; _843;<br align="left"/>debug residual =&gt; _853;<br align="left"/>debug val =&gt; _856;<br align="left"/>debug initial_margin_shortage =&gt; _857;<br align="left"/>debug residual =&gt; _862;<br align="left"/>debug val =&gt; _865;<br align="left"/>debug new_margin_shortage =&gt; _866;<br align="left"/>debug residual =&gt; _871;<br align="left"/>debug val =&gt; _874;<br align="left"/>debug residual =&gt; _882;<br align="left"/>debug val =&gt; _885;<br align="left"/>debug residual =&gt; _892;<br align="left"/>debug val =&gt; _895;<br align="left"/>debug residual =&gt; _902;<br align="left"/>debug val =&gt; _905;<br align="left"/>debug market =&gt; _907;<br align="left"/>debug residual =&gt; _914;<br align="left"/>debug val =&gt; _917;<br align="left"/>debug market_oracle_price =&gt; _918;<br align="left"/>debug residual =&gt; _930;<br align="left"/>debug val =&gt; _933;<br align="left"/>debug margin_shortage =&gt; _968;<br align="left"/>debug residual =&gt; _973;<br align="left"/>debug val =&gt; _976;<br align="left"/>debug liability_weight_with_buffer =&gt; _977;<br align="left"/>debug residual =&gt; _983;<br align="left"/>debug val =&gt; _986;<br align="left"/>debug liability_transfer_to_cover_margin_shortage =&gt; _987;<br align="left"/>debug residual =&gt; _998;<br align="left"/>debug val =&gt; _1001;<br align="left"/>debug max_pct_allowed =&gt; _1002;<br align="left"/>debug residual =&gt; _1011;<br align="left"/>debug val =&gt; _1014;<br align="left"/>debug max_liability_allowed_to_be_transferred =&gt; _1015;<br align="left"/>debug residual =&gt; _1022;<br align="left"/>debug val =&gt; _1025;<br align="left"/>debug liability_transfer_implied_by_pnl =&gt; _1034;<br align="left"/>debug residual =&gt; _1045;<br align="left"/>debug val =&gt; _1048;<br align="left"/>debug liability_value =&gt; _1049;<br align="left"/>debug residual =&gt; _1057;<br align="left"/>debug val =&gt; _1060;<br align="left"/>debug residual =&gt; _1064;<br align="left"/>debug val =&gt; _1067;<br align="left"/>debug minimum_liability_transfer =&gt; _1068;<br align="left"/>debug liability_transfer =&gt; _1073;<br align="left"/>debug pnl_transfer =&gt; _1082;<br align="left"/>debug residual =&gt; _1094;<br align="left"/>debug val =&gt; _1097;<br align="left"/>debug res =&gt; _1110;<br align="left"/>debug res =&gt; _1132;<br align="left"/>debug res =&gt; _1157;<br align="left"/>debug residual =&gt; _1186;<br align="left"/>debug val =&gt; _1189;<br align="left"/>debug liability_market =&gt; _1191;<br align="left"/>debug residual =&gt; _1198;<br align="left"/>debug val =&gt; _1201;<br align="left"/>debug residual =&gt; _1220;<br align="left"/>debug val =&gt; _1223;<br align="left"/>debug residual =&gt; _1227;<br align="left"/>debug val =&gt; _1230;<br align="left"/>debug residual =&gt; _1249;<br align="left"/>debug val =&gt; _1252;<br align="left"/>debug residual =&gt; _1256;<br align="left"/>debug val =&gt; _1259;<br align="left"/>debug market =&gt; _1261;<br align="left"/>debug residual =&gt; _1268;<br align="left"/>debug val =&gt; _1271;<br align="left"/>debug liquidator_position =&gt; _1272;<br align="left"/>debug residual =&gt; _1278;<br align="left"/>debug val =&gt; _1281;<br align="left"/>debug residual =&gt; _1295;<br align="left"/>debug val =&gt; _1298;<br align="left"/>debug residual =&gt; _1300;<br align="left"/>debug val =&gt; _1303;<br align="left"/>debug user_position =&gt; _1304;<br align="left"/>debug residual =&gt; _1310;<br align="left"/>debug val =&gt; _1313;<br align="left"/>debug residual =&gt; _1328;<br align="left"/>debug val =&gt; _1331;<br align="left"/>debug residual =&gt; _1334;<br align="left"/>debug val =&gt; _1337;<br align="left"/>debug margin_freed_from_liability =&gt; _1338;<br align="left"/>debug residual =&gt; _1349;<br align="left"/>debug val =&gt; _1352;<br align="left"/>debug residual =&gt; _1359;<br align="left"/>debug val =&gt; _1362;<br align="left"/>debug residual =&gt; _1369;<br align="left"/>debug val =&gt; _1372;<br align="left"/>debug liquidator_meets_initial_margin_requirement =&gt; _1383;<br align="left"/>debug residual =&gt; _1391;<br align="left"/>debug val =&gt; _1394;<br align="left"/>debug error_code =&gt; _1400;<br align="left"/>debug res =&gt; _1407;<br align="left"/>debug residual =&gt; _1425;<br align="left"/>debug val =&gt; _1428;<br align="left"/>debug market_oracle_price =&gt; _1429;<br align="left"/>debug market =&gt; _1430;<br align="left"/>debug residual =&gt; _1437;<br align="left"/>debug val =&gt; _1440;<br align="left"/>debug residual =&gt; _1452;<br align="left"/>debug val =&gt; _1455;<br align="left"/>>;
    bb0__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_1517 = const false<br/>_1516 = const false<br/>_1513 = const false<br/>_1515 = const false<br/>_1514 = const false<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_21 = &amp;(*_5)<br/></td></tr><tr><td align="left">_20 = User::is_bankrupt(move _21)</td></tr></table>>];
    bb1__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">switchInt(move _20)</td></tr></table>>];
    bb2__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageLive(_23)<br/>_23 = error::ErrorCode::UserBankrupt<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>_1512 = const _<br/>_34 = &amp;(*_1512)<br/>_33 = &amp;(*_34)<br/>_32 = move _33 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_33)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>_42 = &amp;_23<br/>_41 = &amp;(*_42)<br/></td></tr><tr><td align="left">_40 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _41)</td></tr></table>>];
    bb3__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageLive(_22)<br/>_22 = ()<br/>_19 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _22)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb4__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>_39 = [move _40]<br/>StorageDead(_40)<br/>_38 = &amp;_39<br/>_37 = &amp;(*_38)<br/>_36 = move _37 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">_31 = Arguments::&lt;'_&gt;::new_v1(move _32, move _36)</td></tr></table>>];
    bb5__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">_30 = format(move _31)</td></tr></table>>];
    bb6__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_42)<br/>StorageDead(_39)<br/>StorageDead(_38)<br/>StorageDead(_34)<br/>_29 = move _30<br/>StorageDead(_30)<br/>_28 = &amp;_29<br/>_27 = &amp;(*_28)<br/></td></tr><tr><td align="left">_26 = &lt;String as Deref&gt;::deref(move _27)</td></tr></table>>];
    bb7__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">_25 = &amp;(*_26)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">_24 = solana_program::log::sol_log(move _25)</td></tr></table>>];
    bb8__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/></td></tr><tr><td align="left">drop(_29)</td></tr></table>>];
    bb9__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_28)<br/>StorageDead(_26)<br/>StorageDead(_24)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>_1511 = const _<br/>_53 = &amp;(*_1511)<br/>_52 = &amp;(*_53)<br/>_51 = move _52 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">_50 = Arguments::&lt;'_&gt;::new_const(move _51)</td></tr></table>>];
    bb10__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/></td></tr><tr><td align="left">_49 = format(move _50)</td></tr></table>>];
    bb11__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageDead(_53)<br/>_48 = move _49<br/>StorageDead(_49)<br/>_47 = &amp;_48<br/>_46 = &amp;(*_47)<br/></td></tr><tr><td align="left">_45 = &lt;String as Deref&gt;::deref(move _46)</td></tr></table>>];
    bb12__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">_44 = &amp;(*_45)<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">_43 = solana_program::log::sol_log(move _44)</td></tr></table>>];
    bb13__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/></td></tr><tr><td align="left">drop(_48)</td></tr></table>>];
    bb14__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageDead(_47)<br/>StorageDead(_45)<br/>StorageDead(_43)<br/>StorageLive(_55)<br/>_55 = _23<br/>_19 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _55)<br/>StorageDead(_55)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/></td></tr><tr><td align="left">_18 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _19)</td></tr></table>>];
    bb16__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>_56 = discriminant(_18)<br/></td></tr><tr><td align="left">switchInt(move _56)</td></tr></table>>];
    bb17__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_60)<br/>_60 = ((_18 as Continue).0: ())<br/>_17 = _60<br/>StorageDead(_60)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>_65 = &amp;(*_7)<br/></td></tr><tr><td align="left">_64 = User::is_bankrupt(move _65)</td></tr></table>>];
    bb18__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb19__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_57)<br/>_57 = ((_18 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_59)<br/>_59 = _57<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _59)</td></tr></table>>];
    bb20__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_57)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left">switchInt(move _64)</td></tr></table>>];
    bb22__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageLive(_67)<br/>_67 = error::ErrorCode::UserBankrupt<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>_1510 = const _<br/>_78 = &amp;(*_1510)<br/>_77 = &amp;(*_78)<br/>_76 = move _77 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_77)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>_86 = &amp;_67<br/>_85 = &amp;(*_86)<br/></td></tr><tr><td align="left">_84 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _85)</td></tr></table>>];
    bb23__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageLive(_66)<br/>_66 = ()<br/>_63 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _66)<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>_83 = [move _84]<br/>StorageDead(_84)<br/>_82 = &amp;_83<br/>_81 = &amp;(*_82)<br/>_80 = move _81 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_81)<br/></td></tr><tr><td align="left">_75 = Arguments::&lt;'_&gt;::new_v1(move _76, move _80)</td></tr></table>>];
    bb25__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>StorageDead(_76)<br/></td></tr><tr><td align="left">_74 = format(move _75)</td></tr></table>>];
    bb26__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_86)<br/>StorageDead(_83)<br/>StorageDead(_82)<br/>StorageDead(_78)<br/>_73 = move _74<br/>StorageDead(_74)<br/>_72 = &amp;_73<br/>_71 = &amp;(*_72)<br/></td></tr><tr><td align="left">_70 = &lt;String as Deref&gt;::deref(move _71)</td></tr></table>>];
    bb27__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">_69 = &amp;(*_70)<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">_68 = solana_program::log::sol_log(move _69)</td></tr></table>>];
    bb28__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/></td></tr><tr><td align="left">drop(_73)</td></tr></table>>];
    bb29__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>StorageDead(_72)<br/>StorageDead(_70)<br/>StorageDead(_68)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>_1509 = const _<br/>_97 = &amp;(*_1509)<br/>_96 = &amp;(*_97)<br/>_95 = move _96 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_96)<br/></td></tr><tr><td align="left">_94 = Arguments::&lt;'_&gt;::new_const(move _95)</td></tr></table>>];
    bb30__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/></td></tr><tr><td align="left">_93 = format(move _94)</td></tr></table>>];
    bb31__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/>StorageDead(_97)<br/>_92 = move _93<br/>StorageDead(_93)<br/>_91 = &amp;_92<br/>_90 = &amp;(*_91)<br/></td></tr><tr><td align="left">_89 = &lt;String as Deref&gt;::deref(move _90)</td></tr></table>>];
    bb32__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">_88 = &amp;(*_89)<br/>StorageDead(_90)<br/></td></tr><tr><td align="left">_87 = solana_program::log::sol_log(move _88)</td></tr></table>>];
    bb33__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/></td></tr><tr><td align="left">drop(_92)</td></tr></table>>];
    bb34__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>StorageDead(_91)<br/>StorageDead(_89)<br/>StorageDead(_87)<br/>StorageLive(_99)<br/>_99 = _67<br/>_63 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _99)<br/>StorageDead(_99)<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/></td></tr><tr><td align="left">_62 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _63)</td></tr></table>>];
    bb36__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>_100 = discriminant(_62)<br/></td></tr><tr><td align="left">switchInt(move _100)</td></tr></table>>];
    bb37__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_104)<br/>_104 = ((_62 as Continue).0: ())<br/>_61 = _104<br/>StorageDead(_104)<br/>StorageDead(_62)<br/>StorageDead(_61)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>_109 = ((*_7).27: u8)<br/>_108 = Eq(move _109, const 0_u8)<br/></td></tr><tr><td align="left">switchInt(move _108)</td></tr></table>>];
    bb38__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_101)<br/>_101 = ((_62 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_103)<br/>_103 = _101<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _103)</td></tr></table>>];
    bb39__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>StorageDead(_101)<br/>StorageDead(_62)<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/>StorageLive(_110)<br/>_110 = ()<br/>_107 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _110)<br/>StorageDead(_110)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/>StorageLive(_111)<br/>_111 = error::ErrorCode::InvalidPoolId<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>_1508 = const _<br/>_122 = &amp;(*_1508)<br/>_121 = &amp;(*_122)<br/>_120 = move _121 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_121)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>_130 = &amp;_111<br/>_129 = &amp;(*_130)<br/></td></tr><tr><td align="left">_128 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _129)</td></tr></table>>];
    bb42__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_129)<br/>_127 = [move _128]<br/>StorageDead(_128)<br/>_126 = &amp;_127<br/>_125 = &amp;(*_126)<br/>_124 = move _125 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_125)<br/></td></tr><tr><td align="left">_119 = Arguments::&lt;'_&gt;::new_v1(move _120, move _124)</td></tr></table>>];
    bb43__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_124)<br/>StorageDead(_120)<br/></td></tr><tr><td align="left">_118 = format(move _119)</td></tr></table>>];
    bb44__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/>StorageDead(_130)<br/>StorageDead(_127)<br/>StorageDead(_126)<br/>StorageDead(_122)<br/>_117 = move _118<br/>StorageDead(_118)<br/>_116 = &amp;_117<br/>_115 = &amp;(*_116)<br/></td></tr><tr><td align="left">_114 = &lt;String as Deref&gt;::deref(move _115)</td></tr></table>>];
    bb45__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">_113 = &amp;(*_114)<br/>StorageDead(_115)<br/></td></tr><tr><td align="left">_112 = solana_program::log::sol_log(move _113)</td></tr></table>>];
    bb46__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_113)<br/></td></tr><tr><td align="left">drop(_117)</td></tr></table>>];
    bb47__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/>StorageDead(_116)<br/>StorageDead(_114)<br/>StorageDead(_112)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>_1507 = const _<br/>_141 = &amp;(*_1507)<br/>_140 = &amp;(*_141)<br/>_139 = move _140 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_140)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>_149 = &amp;((*_7).27: u8)<br/>_148 = &amp;(*_149)<br/></td></tr><tr><td align="left">_147 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u8&gt;(move _148)</td></tr></table>>];
    bb48__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_148)<br/>_146 = [move _147]<br/>StorageDead(_147)<br/>_145 = &amp;_146<br/>_144 = &amp;(*_145)<br/>_143 = move _144 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_144)<br/></td></tr><tr><td align="left">_138 = Arguments::&lt;'_&gt;::new_v1(move _139, move _143)</td></tr></table>>];
    bb49__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_143)<br/>StorageDead(_139)<br/></td></tr><tr><td align="left">_137 = format(move _138)</td></tr></table>>];
    bb50__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/>StorageDead(_149)<br/>StorageDead(_146)<br/>StorageDead(_145)<br/>StorageDead(_141)<br/>_136 = move _137<br/>StorageDead(_137)<br/>_135 = &amp;_136<br/>_134 = &amp;(*_135)<br/></td></tr><tr><td align="left">_133 = &lt;String as Deref&gt;::deref(move _134)</td></tr></table>>];
    bb51__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">_132 = &amp;(*_133)<br/>StorageDead(_134)<br/></td></tr><tr><td align="left">_131 = solana_program::log::sol_log(move _132)</td></tr></table>>];
    bb52__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_132)<br/></td></tr><tr><td align="left">drop(_136)</td></tr></table>>];
    bb53__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_136)<br/>StorageDead(_135)<br/>StorageDead(_133)<br/>StorageDead(_131)<br/>StorageLive(_150)<br/>_150 = _111<br/>_107 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _150)<br/>StorageDead(_150)<br/>StorageDead(_111)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/></td></tr><tr><td align="left">_106 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _107)</td></tr></table>>];
    bb55__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>_151 = discriminant(_106)<br/></td></tr><tr><td align="left">switchInt(move _151)</td></tr></table>>];
    bb56__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageLive(_155)<br/>_155 = ((_106 as Continue).0: ())<br/>_105 = _155<br/>StorageDead(_155)<br/>StorageDead(_106)<br/>StorageDead(_105)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>_159 = &amp;(*_9)<br/>StorageLive(_160)<br/>StorageLive(_161)<br/>_161 = &amp;_1<br/>_160 = &amp;(*_161)<br/></td></tr><tr><td align="left">_158 = PerpMarketMap::&lt;'_&gt;::get_ref(move _159, move _160)</td></tr></table>>];
    bb57__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageLive(_152)<br/>_152 = ((_106 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_154)<br/>_154 = _152<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _154)</td></tr></table>>];
    bb58__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_154)<br/>StorageDead(_152)<br/>StorageDead(_106)<br/>StorageDead(_105)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_160)<br/>StorageDead(_159)<br/></td></tr><tr><td align="left">_157 = &lt;std::result::Result&lt;Ref&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _158)</td></tr></table>>];
    bb60__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_158)<br/>_162 = discriminant(_157)<br/></td></tr><tr><td align="left">switchInt(move _162)</td></tr></table>>];
    bb61__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageLive(_166)<br/>_166 = move ((_157 as Continue).0: std::cell::Ref&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_1517 = const true<br/>_156 = move _166<br/>StorageDead(_166)<br/>_1520 = discriminant(_157)<br/>StorageDead(_161)<br/>StorageDead(_157)<br/>StorageLive(_167)<br/>StorageLive(_168)<br/>StorageLive(_169)<br/>StorageLive(_170)<br/>StorageLive(_171)<br/>StorageLive(_172)<br/>StorageLive(_173)<br/>_173 = &amp;_156<br/></td></tr><tr><td align="left">_172 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _173)</td></tr></table>>];
    bb62__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageLive(_163)<br/>_163 = ((_157 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_165)<br/>_165 = _163<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _165)</td></tr></table>>];
    bb63__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_165)<br/>StorageDead(_163)<br/>_1518 = discriminant(_157)<br/>StorageDead(_161)<br/>StorageDead(_157)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb64__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">_171 = &amp;(*_172)<br/>StorageDead(_173)<br/>StorageLive(_174)<br/>_174 = PerpOperation::Liquidation<br/></td></tr><tr><td align="left">_170 = PerpMarket::is_operation_paused(move _171, move _174)</td></tr></table>>];
    bb65__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left">switchInt(move _170)</td></tr></table>>];
    bb66__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_174)<br/>StorageDead(_171)<br/>StorageDead(_172)<br/>StorageLive(_176)<br/>_176 = error::ErrorCode::InvalidLiquidation<br/>StorageLive(_177)<br/>StorageLive(_178)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>StorageLive(_181)<br/>StorageLive(_182)<br/>StorageLive(_183)<br/>StorageLive(_184)<br/>StorageLive(_185)<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>_1506 = const _<br/>_187 = &amp;(*_1506)<br/>_186 = &amp;(*_187)<br/>_185 = move _186 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_186)<br/>StorageLive(_189)<br/>StorageLive(_190)<br/>StorageLive(_191)<br/>StorageLive(_192)<br/>StorageLive(_193)<br/>StorageLive(_194)<br/>StorageLive(_195)<br/>_195 = &amp;_176<br/>_194 = &amp;(*_195)<br/></td></tr><tr><td align="left">_193 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _194)</td></tr></table>>];
    bb67__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_174)<br/>StorageDead(_171)<br/>StorageDead(_172)<br/>StorageLive(_175)<br/>_175 = ()<br/>_169 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _175)<br/>StorageDead(_175)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_194)<br/>_192 = [move _193]<br/>StorageDead(_193)<br/>_191 = &amp;_192<br/>_190 = &amp;(*_191)<br/>_189 = move _190 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_190)<br/></td></tr><tr><td align="left">_184 = Arguments::&lt;'_&gt;::new_v1(move _185, move _189)</td></tr></table>>];
    bb69__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_189)<br/>StorageDead(_185)<br/></td></tr><tr><td align="left">_183 = format(move _184)</td></tr></table>>];
    bb70__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_184)<br/>StorageDead(_195)<br/>StorageDead(_192)<br/>StorageDead(_191)<br/>StorageDead(_187)<br/>_182 = move _183<br/>StorageDead(_183)<br/>_181 = &amp;_182<br/>_180 = &amp;(*_181)<br/></td></tr><tr><td align="left">_179 = &lt;String as Deref&gt;::deref(move _180)</td></tr></table>>];
    bb71__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">_178 = &amp;(*_179)<br/>StorageDead(_180)<br/></td></tr><tr><td align="left">_177 = solana_program::log::sol_log(move _178)</td></tr></table>>];
    bb72__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_178)<br/></td></tr><tr><td align="left">drop(_182)</td></tr></table>>];
    bb73__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_182)<br/>StorageDead(_181)<br/>StorageDead(_179)<br/>StorageDead(_177)<br/>StorageLive(_196)<br/>StorageLive(_197)<br/>StorageLive(_198)<br/>StorageLive(_199)<br/>StorageLive(_200)<br/>StorageLive(_201)<br/>StorageLive(_202)<br/>StorageLive(_203)<br/>StorageLive(_204)<br/>StorageLive(_205)<br/>StorageLive(_206)<br/>_1505 = const _<br/>_206 = &amp;(*_1505)<br/>_205 = &amp;(*_206)<br/>_204 = move _205 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_205)<br/>StorageLive(_208)<br/>StorageLive(_209)<br/>StorageLive(_210)<br/>StorageLive(_211)<br/>StorageLive(_212)<br/>StorageLive(_213)<br/>StorageLive(_214)<br/>_214 = &amp;_1<br/>_213 = &amp;(*_214)<br/></td></tr><tr><td align="left">_212 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _213)</td></tr></table>>];
    bb74__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_213)<br/>_211 = [move _212]<br/>StorageDead(_212)<br/>_210 = &amp;_211<br/>_209 = &amp;(*_210)<br/>_208 = move _209 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_209)<br/></td></tr><tr><td align="left">_203 = Arguments::&lt;'_&gt;::new_v1(move _204, move _208)</td></tr></table>>];
    bb75__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_208)<br/>StorageDead(_204)<br/></td></tr><tr><td align="left">_202 = format(move _203)</td></tr></table>>];
    bb76__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_203)<br/>StorageDead(_214)<br/>StorageDead(_211)<br/>StorageDead(_210)<br/>StorageDead(_206)<br/>_201 = move _202<br/>StorageDead(_202)<br/>_200 = &amp;_201<br/>_199 = &amp;(*_200)<br/></td></tr><tr><td align="left">_198 = &lt;String as Deref&gt;::deref(move _199)</td></tr></table>>];
    bb77__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">_197 = &amp;(*_198)<br/>StorageDead(_199)<br/></td></tr><tr><td align="left">_196 = solana_program::log::sol_log(move _197)</td></tr></table>>];
    bb78__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_197)<br/></td></tr><tr><td align="left">drop(_201)</td></tr></table>>];
    bb79__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_201)<br/>StorageDead(_200)<br/>StorageDead(_198)<br/>StorageDead(_196)<br/>StorageLive(_215)<br/>_215 = _176<br/>_169 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _215)<br/>StorageDead(_215)<br/>StorageDead(_176)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb80__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_170)<br/></td></tr><tr><td align="left">_168 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _169)</td></tr></table>>];
    bb81__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_169)<br/>_216 = discriminant(_168)<br/></td></tr><tr><td align="left">switchInt(move _216)</td></tr></table>>];
    bb82__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageLive(_220)<br/>_220 = ((_168 as Continue).0: ())<br/>_167 = _220<br/>StorageDead(_220)<br/>StorageDead(_168)<br/>StorageDead(_167)<br/>StorageLive(_221)<br/>StorageLive(_222)<br/>_1517 = const false<br/>_222 = move _156<br/></td></tr><tr><td align="left">_221 = std::mem::drop::&lt;Ref&lt;'_, PerpMarket&gt;&gt;(move _222)</td></tr></table>>];
    bb83__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageLive(_217)<br/>_217 = ((_168 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_219)<br/>_219 = _217<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _219)</td></tr></table>>];
    bb84__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_219)<br/>StorageDead(_217)<br/>StorageDead(_168)<br/>StorageDead(_167)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb85__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_222)<br/>StorageDead(_221)<br/>StorageLive(_223)<br/>StorageLive(_224)<br/>StorageLive(_225)<br/>StorageLive(_226)<br/>_226 = &amp;(*_10)<br/>StorageLive(_227)<br/>StorageLive(_228)<br/>_228 = &amp;_2<br/>_227 = &amp;(*_228)<br/></td></tr><tr><td align="left">_225 = SpotMarketMap::&lt;'_&gt;::get_ref(move _226, move _227)</td></tr></table>>];
    bb86__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_227)<br/>StorageDead(_226)<br/></td></tr><tr><td align="left">_224 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _225)</td></tr></table>>];
    bb87__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_225)<br/>_229 = discriminant(_224)<br/></td></tr><tr><td align="left">switchInt(move _229)</td></tr></table>>];
    bb88__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageLive(_233)<br/>_233 = move ((_224 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_1516 = const true<br/>_223 = move _233<br/>StorageDead(_233)<br/>_1524 = discriminant(_224)<br/>StorageDead(_228)<br/>StorageDead(_224)<br/>StorageLive(_234)<br/>StorageLive(_235)<br/>StorageLive(_236)<br/>StorageLive(_237)<br/>StorageLive(_238)<br/>StorageLive(_239)<br/>StorageLive(_240)<br/>_240 = &amp;_223<br/></td></tr><tr><td align="left">_239 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _240)</td></tr></table>>];
    bb89__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageLive(_230)<br/>_230 = ((_224 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_232)<br/>_232 = _230<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _232)</td></tr></table>>];
    bb90__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_232)<br/>StorageDead(_230)<br/>_1522 = discriminant(_224)<br/>StorageDead(_228)<br/>StorageDead(_224)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb91__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">_238 = &amp;(*_239)<br/>StorageDead(_240)<br/>StorageLive(_241)<br/>_241 = SpotOperation::Liquidation<br/></td></tr><tr><td align="left">_237 = SpotMarket::is_operation_paused(move _238, move _241)</td></tr></table>>];
    bb92__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left">switchInt(move _237)</td></tr></table>>];
    bb93__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_241)<br/>StorageDead(_238)<br/>StorageDead(_239)<br/>StorageLive(_243)<br/>_243 = error::ErrorCode::InvalidLiquidation<br/>StorageLive(_244)<br/>StorageLive(_245)<br/>StorageLive(_246)<br/>StorageLive(_247)<br/>StorageLive(_248)<br/>StorageLive(_249)<br/>StorageLive(_250)<br/>StorageLive(_251)<br/>StorageLive(_252)<br/>StorageLive(_253)<br/>StorageLive(_254)<br/>_1504 = const _<br/>_254 = &amp;(*_1504)<br/>_253 = &amp;(*_254)<br/>_252 = move _253 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_253)<br/>StorageLive(_256)<br/>StorageLive(_257)<br/>StorageLive(_258)<br/>StorageLive(_259)<br/>StorageLive(_260)<br/>StorageLive(_261)<br/>StorageLive(_262)<br/>_262 = &amp;_243<br/>_261 = &amp;(*_262)<br/></td></tr><tr><td align="left">_260 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _261)</td></tr></table>>];
    bb94__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_241)<br/>StorageDead(_238)<br/>StorageDead(_239)<br/>StorageLive(_242)<br/>_242 = ()<br/>_236 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _242)<br/>StorageDead(_242)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb95__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_261)<br/>_259 = [move _260]<br/>StorageDead(_260)<br/>_258 = &amp;_259<br/>_257 = &amp;(*_258)<br/>_256 = move _257 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_257)<br/></td></tr><tr><td align="left">_251 = Arguments::&lt;'_&gt;::new_v1(move _252, move _256)</td></tr></table>>];
    bb96__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_256)<br/>StorageDead(_252)<br/></td></tr><tr><td align="left">_250 = format(move _251)</td></tr></table>>];
    bb97__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_251)<br/>StorageDead(_262)<br/>StorageDead(_259)<br/>StorageDead(_258)<br/>StorageDead(_254)<br/>_249 = move _250<br/>StorageDead(_250)<br/>_248 = &amp;_249<br/>_247 = &amp;(*_248)<br/></td></tr><tr><td align="left">_246 = &lt;String as Deref&gt;::deref(move _247)</td></tr></table>>];
    bb98__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">_245 = &amp;(*_246)<br/>StorageDead(_247)<br/></td></tr><tr><td align="left">_244 = solana_program::log::sol_log(move _245)</td></tr></table>>];
    bb99__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageDead(_245)<br/></td></tr><tr><td align="left">drop(_249)</td></tr></table>>];
    bb100__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_249)<br/>StorageDead(_248)<br/>StorageDead(_246)<br/>StorageDead(_244)<br/>StorageLive(_263)<br/>StorageLive(_264)<br/>StorageLive(_265)<br/>StorageLive(_266)<br/>StorageLive(_267)<br/>StorageLive(_268)<br/>StorageLive(_269)<br/>StorageLive(_270)<br/>StorageLive(_271)<br/>StorageLive(_272)<br/>StorageLive(_273)<br/>_1503 = const _<br/>_273 = &amp;(*_1503)<br/>_272 = &amp;(*_273)<br/>_271 = move _272 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_272)<br/>StorageLive(_275)<br/>StorageLive(_276)<br/>StorageLive(_277)<br/>StorageLive(_278)<br/>StorageLive(_279)<br/>StorageLive(_280)<br/>StorageLive(_281)<br/>_281 = &amp;_2<br/>_280 = &amp;(*_281)<br/></td></tr><tr><td align="left">_279 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _280)</td></tr></table>>];
    bb101__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_280)<br/>_278 = [move _279]<br/>StorageDead(_279)<br/>_277 = &amp;_278<br/>_276 = &amp;(*_277)<br/>_275 = move _276 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_276)<br/></td></tr><tr><td align="left">_270 = Arguments::&lt;'_&gt;::new_v1(move _271, move _275)</td></tr></table>>];
    bb102__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_275)<br/>StorageDead(_271)<br/></td></tr><tr><td align="left">_269 = format(move _270)</td></tr></table>>];
    bb103__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_270)<br/>StorageDead(_281)<br/>StorageDead(_278)<br/>StorageDead(_277)<br/>StorageDead(_273)<br/>_268 = move _269<br/>StorageDead(_269)<br/>_267 = &amp;_268<br/>_266 = &amp;(*_267)<br/></td></tr><tr><td align="left">_265 = &lt;String as Deref&gt;::deref(move _266)</td></tr></table>>];
    bb104__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">_264 = &amp;(*_265)<br/>StorageDead(_266)<br/></td></tr><tr><td align="left">_263 = solana_program::log::sol_log(move _264)</td></tr></table>>];
    bb105__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_264)<br/></td></tr><tr><td align="left">drop(_268)</td></tr></table>>];
    bb106__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_268)<br/>StorageDead(_267)<br/>StorageDead(_265)<br/>StorageDead(_263)<br/>StorageLive(_282)<br/>_282 = _243<br/>_236 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _282)<br/>StorageDead(_282)<br/>StorageDead(_243)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb107__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_237)<br/></td></tr><tr><td align="left">_235 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _236)</td></tr></table>>];
    bb108__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageDead(_236)<br/>_283 = discriminant(_235)<br/></td></tr><tr><td align="left">switchInt(move _283)</td></tr></table>>];
    bb109__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageLive(_287)<br/>_287 = ((_235 as Continue).0: ())<br/>_234 = _287<br/>StorageDead(_287)<br/>StorageDead(_235)<br/>StorageDead(_234)<br/>StorageLive(_288)<br/>StorageLive(_289)<br/>_1516 = const false<br/>_289 = move _223<br/></td></tr><tr><td align="left">_288 = std::mem::drop::&lt;Ref&lt;'_, SpotMarket&gt;&gt;(move _289)</td></tr></table>>];
    bb110__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageLive(_284)<br/>_284 = ((_235 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_286)<br/>_286 = _284<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _286)</td></tr></table>>];
    bb111__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_286)<br/>StorageDead(_284)<br/>StorageDead(_235)<br/>StorageDead(_234)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb112__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageDead(_289)<br/>StorageDead(_288)<br/>StorageLive(_290)<br/>StorageLive(_291)<br/>StorageLive(_292)<br/>StorageLive(_293)<br/>StorageLive(_294)<br/>_294 = &amp;(*_5)<br/>StorageLive(_295)<br/>_295 = _1<br/></td></tr><tr><td align="left">_293 = User::get_perp_position(move _294, move _295)</td></tr></table>>];
    bb113__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageDead(_295)<br/>StorageDead(_294)<br/>StorageLive(_296)<br/>StorageLive(_297)<br/>_297 = &amp;_1<br/>_296 = {closure@programs/drift/src/controller/liquidation.rs:2351:55: 2351:58} { perp_market_index: move _297 }<br/>StorageDead(_297)<br/></td></tr><tr><td align="left">_292 = std::result::Result::&lt;&amp;PerpPosition, error::ErrorCode&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/controller/liquidation.rs:2351:55: 2351:58}&gt;(move _293, move _296)</td></tr></table>>];
    bb114__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageDead(_296)<br/>StorageDead(_293)<br/></td></tr><tr><td align="left">_291 = &lt;std::result::Result&lt;&amp;PerpPosition, error::ErrorCode&gt; as Try&gt;::branch(move _292)</td></tr></table>>];
    bb115__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageDead(_292)<br/>_298 = discriminant(_291)<br/></td></tr><tr><td align="left">switchInt(move _298)</td></tr></table>>];
    bb116__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageLive(_302)<br/>_302 = ((_291 as Continue).0: &amp;state::user::PerpPosition)<br/>_290 = _302<br/>StorageDead(_302)<br/>StorageDead(_291)<br/>StorageDead(_290)<br/>StorageLive(_303)<br/>StorageLive(_304)<br/>StorageLive(_305)<br/>StorageLive(_306)<br/>StorageLive(_307)<br/>_307 = &amp;(*_5)<br/>StorageLive(_308)<br/>_308 = _2<br/></td></tr><tr><td align="left">_306 = User::get_spot_position(move _307, move _308)</td></tr></table>>];
    bb117__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageLive(_299)<br/>_299 = ((_291 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_301)<br/>_301 = _299<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _301)</td></tr></table>>];
    bb118__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageDead(_301)<br/>StorageDead(_299)<br/>StorageDead(_291)<br/>StorageDead(_290)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb119__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageDead(_308)<br/>StorageDead(_307)<br/>StorageLive(_309)<br/>StorageLive(_310)<br/>_310 = &amp;_2<br/>_309 = {closure@programs/drift/src/controller/liquidation.rs:2360:18: 2360:21} { liability_market_index: move _310 }<br/>StorageDead(_310)<br/></td></tr><tr><td align="left">_305 = std::result::Result::&lt;&amp;SpotPosition, error::ErrorCode&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/controller/liquidation.rs:2360:18: 2360:21}&gt;(move _306, move _309)</td></tr></table>>];
    bb120__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageDead(_309)<br/>StorageDead(_306)<br/></td></tr><tr><td align="left">_304 = &lt;std::result::Result&lt;&amp;SpotPosition, error::ErrorCode&gt; as Try&gt;::branch(move _305)</td></tr></table>>];
    bb121__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageDead(_305)<br/>_311 = discriminant(_304)<br/></td></tr><tr><td align="left">switchInt(move _311)</td></tr></table>>];
    bb122__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageLive(_315)<br/>_315 = ((_304 as Continue).0: &amp;state::user::SpotPosition)<br/>_303 = _315<br/>StorageDead(_315)<br/>StorageDead(_304)<br/>StorageDead(_303)<br/>StorageLive(_316)<br/>StorageLive(_317)<br/>StorageLive(_318)<br/>StorageLive(_319)<br/>StorageLive(_320)<br/>_320 = &amp;mut (*_7)<br/>StorageLive(_321)<br/>_321 = _1<br/></td></tr><tr><td align="left">_319 = User::force_get_perp_position_mut(move _320, move _321)</td></tr></table>>];
    bb123__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageLive(_312)<br/>_312 = ((_304 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_314)<br/>_314 = _312<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _314)</td></tr></table>>];
    bb124__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageDead(_314)<br/>StorageDead(_312)<br/>StorageDead(_304)<br/>StorageDead(_303)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb125__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageDead(_321)<br/>StorageDead(_320)<br/>StorageLive(_322)<br/>_322 = {closure@programs/drift/src/controller/liquidation.rs:2370:18: 2370:21}<br/></td></tr><tr><td align="left">_318 = std::result::Result::&lt;&amp;mut PerpPosition, error::ErrorCode&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/controller/liquidation.rs:2370:18: 2370:21}&gt;(move _319, move _322)</td></tr></table>>];
    bb126__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageDead(_322)<br/>StorageDead(_319)<br/></td></tr><tr><td align="left">_317 = &lt;std::result::Result&lt;&amp;mut PerpPosition, error::ErrorCode&gt; as Try&gt;::branch(move _318)</td></tr></table>>];
    bb127__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageDead(_318)<br/>_323 = discriminant(_317)<br/></td></tr><tr><td align="left">switchInt(move _323)</td></tr></table>>];
    bb128__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageLive(_327)<br/>_327 = move ((_317 as Continue).0: &amp;mut state::user::PerpPosition)<br/>_316 = move _327<br/>StorageDead(_327)<br/>StorageDead(_317)<br/>StorageDead(_316)<br/>StorageLive(_328)<br/>StorageLive(_329)<br/>StorageLive(_330)<br/>StorageLive(_331)<br/>StorageLive(_332)<br/>_332 = &amp;mut (*_7)<br/>StorageLive(_333)<br/>_333 = _2<br/></td></tr><tr><td align="left">_331 = User::force_get_spot_position_mut(move _332, move _333)</td></tr></table>>];
    bb129__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">StorageLive(_324)<br/>_324 = ((_317 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_326)<br/>_326 = _324<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _326)</td></tr></table>>];
    bb130__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageDead(_326)<br/>StorageDead(_324)<br/>StorageDead(_317)<br/>StorageDead(_316)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb131__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageDead(_333)<br/>StorageDead(_332)<br/>StorageLive(_334)<br/>_334 = {closure@programs/drift/src/controller/liquidation.rs:2377:18: 2377:21}<br/></td></tr><tr><td align="left">_330 = std::result::Result::&lt;&amp;mut SpotPosition, error::ErrorCode&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/controller/liquidation.rs:2377:18: 2377:21}&gt;(move _331, move _334)</td></tr></table>>];
    bb132__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageDead(_334)<br/>StorageDead(_331)<br/></td></tr><tr><td align="left">_329 = &lt;std::result::Result&lt;&amp;mut SpotPosition, error::ErrorCode&gt; as Try&gt;::branch(move _330)</td></tr></table>>];
    bb133__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageDead(_330)<br/>_335 = discriminant(_329)<br/></td></tr><tr><td align="left">switchInt(move _335)</td></tr></table>>];
    bb134__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageLive(_339)<br/>_339 = move ((_329 as Continue).0: &amp;mut state::user::SpotPosition)<br/>_328 = move _339<br/>StorageDead(_339)<br/>StorageDead(_329)<br/>StorageDead(_328)<br/>StorageLive(_340)<br/>StorageLive(_341)<br/>StorageLive(_342)<br/>StorageLive(_343)<br/>_343 = &amp;mut (*_5)<br/>StorageLive(_344)<br/>_344 = &amp;(*_6)<br/>StorageLive(_345)<br/>StorageLive(_346)<br/>StorageLive(_347)<br/>StorageLive(_348)<br/>StorageLive(_349)<br/>StorageLive(_350)<br/>StorageLive(_351)<br/>_351 = &amp;(*_9)<br/>StorageLive(_352)<br/>StorageLive(_353)<br/>_353 = &amp;_1<br/>_352 = &amp;(*_353)<br/></td></tr><tr><td align="left">_350 = PerpMarketMap::&lt;'_&gt;::get_ref_mut(move _351, move _352)</td></tr></table>>];
    bb135__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageLive(_336)<br/>_336 = ((_329 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_338)<br/>_338 = _336<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _338)</td></tr></table>>];
    bb136__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageDead(_338)<br/>StorageDead(_336)<br/>StorageDead(_329)<br/>StorageDead(_328)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb137__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">StorageDead(_352)<br/>StorageDead(_351)<br/></td></tr><tr><td align="left">_349 = &lt;std::result::Result&lt;RefMut&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _350)</td></tr></table>>];
    bb138__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">_1515 = const true<br/>StorageDead(_350)<br/>_354 = discriminant(_349)<br/></td></tr><tr><td align="left">switchInt(move _354)</td></tr></table>>];
    bb139__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">StorageLive(_358)<br/>_358 = move ((_349 as Continue).0: std::cell::RefMut&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_348 = move _358<br/>StorageDead(_358)<br/>_347 = &amp;mut _348<br/></td></tr><tr><td align="left">_346 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _347)</td></tr></table>>];
    bb140__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">StorageLive(_355)<br/>_355 = ((_349 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_357)<br/>_357 = _355<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _357)</td></tr></table>>];
    bb141__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">StorageDead(_357)<br/>StorageDead(_355)<br/>StorageDead(_347)<br/>StorageDead(_345)<br/>StorageDead(_344)<br/>StorageDead(_343)<br/>StorageDead(_342)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb142__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">_345 = &amp;mut (*_346)<br/>StorageDead(_347)<br/>StorageLive(_359)<br/>_359 = _12<br/></td></tr><tr><td align="left">_342 = controller::funding::settle_funding_payment(move _343, move _344, move _345, move _359)</td></tr></table>>];
    bb143__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageDead(_359)<br/>StorageDead(_345)<br/>StorageDead(_344)<br/>StorageDead(_343)<br/></td></tr><tr><td align="left">_341 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _342)</td></tr></table>>];
    bb144__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">StorageDead(_342)<br/>_360 = discriminant(_341)<br/></td></tr><tr><td align="left">switchInt(move _360)</td></tr></table>>];
    bb145__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageLive(_364)<br/>_364 = ((_341 as Continue).0: ())<br/>_340 = _364<br/>StorageDead(_364)<br/></td></tr><tr><td align="left">drop(_348)</td></tr></table>>];
    bb146__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">StorageLive(_361)<br/>_361 = ((_341 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_363)<br/>_363 = _361<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _363)</td></tr></table>>];
    bb147__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left" balign="left">StorageDead(_363)<br/>StorageDead(_361)<br/></td></tr><tr><td align="left">drop(_348)</td></tr></table>>];
    bb148__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left" balign="left">StorageDead(_377)<br/>StorageDead(_376)<br/></td></tr><tr><td align="left">_374 = &lt;std::result::Result&lt;RefMut&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _375)</td></tr></table>>];
    bb149__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">149</td></tr><tr><td align="left" balign="left">_1514 = const true<br/>StorageDead(_375)<br/>_379 = discriminant(_374)<br/></td></tr><tr><td align="left">switchInt(move _379)</td></tr></table>>];
    bb150__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">150</td></tr><tr><td align="left" balign="left">StorageLive(_383)<br/>_383 = move ((_374 as Continue).0: std::cell::RefMut&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_373 = move _383<br/>StorageDead(_383)<br/>_372 = &amp;mut _373<br/></td></tr><tr><td align="left">_371 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _372)</td></tr></table>>];
    bb151__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">151</td></tr><tr><td align="left" balign="left">StorageLive(_380)<br/>_380 = ((_374 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_382)<br/>_382 = _380<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _382)</td></tr></table>>];
    bb152__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">152</td></tr><tr><td align="left" balign="left">StorageDead(_382)<br/>StorageDead(_380)<br/>StorageDead(_372)<br/>StorageDead(_370)<br/>StorageDead(_369)<br/>StorageDead(_368)<br/>StorageDead(_367)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb153__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">153</td></tr><tr><td align="left" balign="left">_370 = &amp;mut (*_371)<br/>StorageDead(_372)<br/>StorageLive(_384)<br/>_384 = _12<br/></td></tr><tr><td align="left">_367 = controller::funding::settle_funding_payment(move _368, move _369, move _370, move _384)</td></tr></table>>];
    bb154__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">154</td></tr><tr><td align="left" balign="left">StorageDead(_384)<br/>StorageDead(_370)<br/>StorageDead(_369)<br/>StorageDead(_368)<br/></td></tr><tr><td align="left">_366 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _367)</td></tr></table>>];
    bb155__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">155</td></tr><tr><td align="left" balign="left">StorageDead(_367)<br/>_385 = discriminant(_366)<br/></td></tr><tr><td align="left">switchInt(move _385)</td></tr></table>>];
    bb156__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">156</td></tr><tr><td align="left" balign="left">StorageLive(_389)<br/>_389 = ((_366 as Continue).0: ())<br/>_365 = _389<br/>StorageDead(_389)<br/></td></tr><tr><td align="left">drop(_373)</td></tr></table>>];
    bb157__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">157</td></tr><tr><td align="left" balign="left">StorageLive(_386)<br/>_386 = ((_366 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_388)<br/>_388 = _386<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _388)</td></tr></table>>];
    bb158__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">158</td></tr><tr><td align="left" balign="left">StorageDead(_388)<br/>StorageDead(_386)<br/></td></tr><tr><td align="left">drop(_373)</td></tr></table>>];
    bb159__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">159</td></tr><tr><td align="left" balign="left">StorageDead(_400)<br/>StorageDead(_399)<br/></td></tr><tr><td align="left">_397 = &lt;std::result::Result&lt;&amp;PerpPosition, error::ErrorCode&gt; as Try&gt;::branch(move _398)</td></tr></table>>];
    bb160__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">160</td></tr><tr><td align="left" balign="left">StorageDead(_398)<br/>_401 = discriminant(_397)<br/></td></tr><tr><td align="left">switchInt(move _401)</td></tr></table>>];
    bb161__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">161</td></tr><tr><td align="left" balign="left">StorageLive(_405)<br/>_405 = ((_397 as Continue).0: &amp;state::user::PerpPosition)<br/>_396 = _405<br/>StorageDead(_405)<br/>StorageDead(_397)<br/>StorageLive(_406)<br/>_406 = ((*_396).1: i64)<br/>StorageLive(_407)<br/>StorageLive(_408)<br/>StorageLive(_409)<br/>StorageLive(_410)<br/>StorageLive(_411)<br/>_411 = _406<br/>_410 = Eq(move _411, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _410)</td></tr></table>>];
    bb162__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">162</td></tr><tr><td align="left" balign="left">StorageLive(_402)<br/>_402 = ((_397 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_404)<br/>_404 = _402<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _404)</td></tr></table>>];
    bb163__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">163</td></tr><tr><td align="left" balign="left">StorageDead(_404)<br/>StorageDead(_402)<br/>StorageDead(_397)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb164__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">164</td></tr><tr><td align="left" balign="left">StorageDead(_411)<br/>StorageLive(_412)<br/>_412 = ()<br/>_409 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _412)<br/>StorageDead(_412)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb165__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">165</td></tr><tr><td align="left" balign="left">StorageDead(_411)<br/>StorageLive(_413)<br/>_413 = error::ErrorCode::InvalidPerpPositionToLiquidate<br/>StorageLive(_414)<br/>StorageLive(_415)<br/>StorageLive(_416)<br/>StorageLive(_417)<br/>StorageLive(_418)<br/>StorageLive(_419)<br/>StorageLive(_420)<br/>StorageLive(_421)<br/>StorageLive(_422)<br/>StorageLive(_423)<br/>StorageLive(_424)<br/>_1502 = const _<br/>_424 = &amp;(*_1502)<br/>_423 = &amp;(*_424)<br/>_422 = move _423 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_423)<br/>StorageLive(_426)<br/>StorageLive(_427)<br/>StorageLive(_428)<br/>StorageLive(_429)<br/>StorageLive(_430)<br/>StorageLive(_431)<br/>StorageLive(_432)<br/>_432 = &amp;_413<br/>_431 = &amp;(*_432)<br/></td></tr><tr><td align="left">_430 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _431)</td></tr></table>>];
    bb166__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">166</td></tr><tr><td align="left" balign="left">StorageDead(_431)<br/>_429 = [move _430]<br/>StorageDead(_430)<br/>_428 = &amp;_429<br/>_427 = &amp;(*_428)<br/>_426 = move _427 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_427)<br/></td></tr><tr><td align="left">_421 = Arguments::&lt;'_&gt;::new_v1(move _422, move _426)</td></tr></table>>];
    bb167__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">167</td></tr><tr><td align="left" balign="left">StorageDead(_426)<br/>StorageDead(_422)<br/></td></tr><tr><td align="left">_420 = format(move _421)</td></tr></table>>];
    bb168__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">168</td></tr><tr><td align="left" balign="left">StorageDead(_421)<br/>StorageDead(_432)<br/>StorageDead(_429)<br/>StorageDead(_428)<br/>StorageDead(_424)<br/>_419 = move _420<br/>StorageDead(_420)<br/>_418 = &amp;_419<br/>_417 = &amp;(*_418)<br/></td></tr><tr><td align="left">_416 = &lt;String as Deref&gt;::deref(move _417)</td></tr></table>>];
    bb169__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">169</td></tr><tr><td align="left" balign="left">_415 = &amp;(*_416)<br/>StorageDead(_417)<br/></td></tr><tr><td align="left">_414 = solana_program::log::sol_log(move _415)</td></tr></table>>];
    bb170__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">170</td></tr><tr><td align="left" balign="left">StorageDead(_415)<br/></td></tr><tr><td align="left">drop(_419)</td></tr></table>>];
    bb171__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">171</td></tr><tr><td align="left" balign="left">StorageDead(_419)<br/>StorageDead(_418)<br/>StorageDead(_416)<br/>StorageDead(_414)<br/>StorageLive(_433)<br/>StorageLive(_434)<br/>StorageLive(_435)<br/>StorageLive(_436)<br/>StorageLive(_437)<br/>StorageLive(_438)<br/>StorageLive(_439)<br/>StorageLive(_440)<br/>StorageLive(_441)<br/>StorageLive(_442)<br/>StorageLive(_443)<br/>_1501 = const _<br/>_443 = &amp;(*_1501)<br/>_442 = &amp;(*_443)<br/>_441 = move _442 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_442)<br/>StorageLive(_445)<br/>StorageLive(_446)<br/>StorageLive(_447)<br/>StorageLive(_448)<br/>StorageLive(_449)<br/>StorageLive(_450)<br/>StorageLive(_451)<br/>_451 = &amp;_406<br/>_450 = &amp;(*_451)<br/></td></tr><tr><td align="left">_449 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i64&gt;(move _450)</td></tr></table>>];
    bb172__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">172</td></tr><tr><td align="left" balign="left">StorageDead(_450)<br/>_448 = [move _449]<br/>StorageDead(_449)<br/>_447 = &amp;_448<br/>_446 = &amp;(*_447)<br/>_445 = move _446 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_446)<br/></td></tr><tr><td align="left">_440 = Arguments::&lt;'_&gt;::new_v1(move _441, move _445)</td></tr></table>>];
    bb173__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">173</td></tr><tr><td align="left" balign="left">StorageDead(_445)<br/>StorageDead(_441)<br/></td></tr><tr><td align="left">_439 = format(move _440)</td></tr></table>>];
    bb174__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">174</td></tr><tr><td align="left" balign="left">StorageDead(_440)<br/>StorageDead(_451)<br/>StorageDead(_448)<br/>StorageDead(_447)<br/>StorageDead(_443)<br/>_438 = move _439<br/>StorageDead(_439)<br/>_437 = &amp;_438<br/>_436 = &amp;(*_437)<br/></td></tr><tr><td align="left">_435 = &lt;String as Deref&gt;::deref(move _436)</td></tr></table>>];
    bb175__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">175</td></tr><tr><td align="left" balign="left">_434 = &amp;(*_435)<br/>StorageDead(_436)<br/></td></tr><tr><td align="left">_433 = solana_program::log::sol_log(move _434)</td></tr></table>>];
    bb176__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">176</td></tr><tr><td align="left" balign="left">StorageDead(_434)<br/></td></tr><tr><td align="left">drop(_438)</td></tr></table>>];
    bb177__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">177</td></tr><tr><td align="left" balign="left">StorageDead(_438)<br/>StorageDead(_437)<br/>StorageDead(_435)<br/>StorageDead(_433)<br/>StorageLive(_452)<br/>_452 = _413<br/>_409 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _452)<br/>StorageDead(_452)<br/>StorageDead(_413)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb178__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">178</td></tr><tr><td align="left" balign="left">StorageDead(_410)<br/></td></tr><tr><td align="left">_408 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _409)</td></tr></table>>];
    bb179__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">179</td></tr><tr><td align="left" balign="left">StorageDead(_409)<br/>_453 = discriminant(_408)<br/></td></tr><tr><td align="left">switchInt(move _453)</td></tr></table>>];
    bb180__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">180</td></tr><tr><td align="left" balign="left">StorageLive(_457)<br/>_457 = ((_408 as Continue).0: ())<br/>_407 = _457<br/>StorageDead(_457)<br/>StorageDead(_408)<br/>StorageDead(_407)<br/>StorageLive(_458)<br/>StorageLive(_459)<br/>StorageLive(_460)<br/>StorageLive(_461)<br/>_461 = ((*_396).2: i64)<br/></td></tr><tr><td align="left">_460 = &lt;i64 as Cast&gt;::cast::&lt;i128&gt;(move _461)</td></tr></table>>];
    bb181__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">181</td></tr><tr><td align="left" balign="left">StorageLive(_454)<br/>_454 = ((_408 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_456)<br/>_456 = _454<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _456)</td></tr></table>>];
    bb182__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">182</td></tr><tr><td align="left" balign="left">StorageDead(_456)<br/>StorageDead(_454)<br/>StorageDead(_408)<br/>StorageDead(_407)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb183__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">183</td></tr><tr><td align="left" balign="left">StorageDead(_461)<br/></td></tr><tr><td align="left">_459 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _460)</td></tr></table>>];
    bb184__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">184</td></tr><tr><td align="left" balign="left">StorageDead(_460)<br/>_462 = discriminant(_459)<br/></td></tr><tr><td align="left">switchInt(move _462)</td></tr></table>>];
    bb185__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">185</td></tr><tr><td align="left" balign="left">StorageLive(_466)<br/>_466 = ((_459 as Continue).0: i128)<br/>_458 = _466<br/>StorageDead(_466)<br/>StorageDead(_459)<br/>StorageLive(_467)<br/>StorageLive(_468)<br/>StorageLive(_469)<br/>StorageLive(_470)<br/>StorageLive(_471)<br/>_471 = _458<br/>_470 = Gt(move _471, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _470)</td></tr></table>>];
    bb186__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">186</td></tr><tr><td align="left" balign="left">StorageLive(_463)<br/>_463 = ((_459 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_465)<br/>_465 = _463<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _465)</td></tr></table>>];
    bb187__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">187</td></tr><tr><td align="left" balign="left">StorageDead(_465)<br/>StorageDead(_463)<br/>StorageDead(_459)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb188__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">188</td></tr><tr><td align="left" balign="left">StorageDead(_471)<br/>StorageLive(_472)<br/>_472 = ()<br/>_469 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _472)<br/>StorageDead(_472)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb189__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">189</td></tr><tr><td align="left" balign="left">StorageDead(_471)<br/>StorageLive(_473)<br/>_473 = error::ErrorCode::InvalidPerpPositionToLiquidate<br/>StorageLive(_474)<br/>StorageLive(_475)<br/>StorageLive(_476)<br/>StorageLive(_477)<br/>StorageLive(_478)<br/>StorageLive(_479)<br/>StorageLive(_480)<br/>StorageLive(_481)<br/>StorageLive(_482)<br/>StorageLive(_483)<br/>StorageLive(_484)<br/>_1500 = const _<br/>_484 = &amp;(*_1500)<br/>_483 = &amp;(*_484)<br/>_482 = move _483 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_483)<br/>StorageLive(_486)<br/>StorageLive(_487)<br/>StorageLive(_488)<br/>StorageLive(_489)<br/>StorageLive(_490)<br/>StorageLive(_491)<br/>StorageLive(_492)<br/>_492 = &amp;_473<br/>_491 = &amp;(*_492)<br/></td></tr><tr><td align="left">_490 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _491)</td></tr></table>>];
    bb190__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">190</td></tr><tr><td align="left" balign="left">StorageDead(_491)<br/>_489 = [move _490]<br/>StorageDead(_490)<br/>_488 = &amp;_489<br/>_487 = &amp;(*_488)<br/>_486 = move _487 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_487)<br/></td></tr><tr><td align="left">_481 = Arguments::&lt;'_&gt;::new_v1(move _482, move _486)</td></tr></table>>];
    bb191__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">191</td></tr><tr><td align="left" balign="left">StorageDead(_486)<br/>StorageDead(_482)<br/></td></tr><tr><td align="left">_480 = format(move _481)</td></tr></table>>];
    bb192__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">192</td></tr><tr><td align="left" balign="left">StorageDead(_481)<br/>StorageDead(_492)<br/>StorageDead(_489)<br/>StorageDead(_488)<br/>StorageDead(_484)<br/>_479 = move _480<br/>StorageDead(_480)<br/>_478 = &amp;_479<br/>_477 = &amp;(*_478)<br/></td></tr><tr><td align="left">_476 = &lt;String as Deref&gt;::deref(move _477)</td></tr></table>>];
    bb193__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">193</td></tr><tr><td align="left" balign="left">_475 = &amp;(*_476)<br/>StorageDead(_477)<br/></td></tr><tr><td align="left">_474 = solana_program::log::sol_log(move _475)</td></tr></table>>];
    bb194__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">194</td></tr><tr><td align="left" balign="left">StorageDead(_475)<br/></td></tr><tr><td align="left">drop(_479)</td></tr></table>>];
    bb195__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">195</td></tr><tr><td align="left" balign="left">StorageDead(_479)<br/>StorageDead(_478)<br/>StorageDead(_476)<br/>StorageDead(_474)<br/>StorageLive(_493)<br/>StorageLive(_494)<br/>StorageLive(_495)<br/>_495 = const &quot;Perp position must have position pnl&quot;<br/>_494 = &amp;(*_495)<br/></td></tr><tr><td align="left">_493 = solana_program::log::sol_log(move _494)</td></tr></table>>];
    bb196__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">196</td></tr><tr><td align="left" balign="left">StorageDead(_494)<br/>StorageDead(_495)<br/>StorageDead(_493)<br/>StorageLive(_496)<br/>_496 = _473<br/>_469 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _496)<br/>StorageDead(_496)<br/>StorageDead(_473)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb197__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">197</td></tr><tr><td align="left" balign="left">StorageDead(_470)<br/></td></tr><tr><td align="left">_468 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _469)</td></tr></table>>];
    bb198__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">198</td></tr><tr><td align="left" balign="left">StorageDead(_469)<br/>_497 = discriminant(_468)<br/></td></tr><tr><td align="left">switchInt(move _497)</td></tr></table>>];
    bb199__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">199</td></tr><tr><td align="left" balign="left">StorageLive(_501)<br/>_501 = ((_468 as Continue).0: ())<br/>_467 = _501<br/>StorageDead(_501)<br/>StorageDead(_468)<br/>StorageDead(_467)<br/>StorageLive(_502)<br/>StorageLive(_503)<br/>StorageLive(_504)<br/>StorageLive(_505)<br/>_505 = &amp;(*_9)<br/>StorageLive(_506)<br/>StorageLive(_507)<br/>_507 = &amp;_1<br/>_506 = &amp;(*_507)<br/></td></tr><tr><td align="left">_504 = PerpMarketMap::&lt;'_&gt;::get_ref(move _505, move _506)</td></tr></table>>];
    bb200__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">200</td></tr><tr><td align="left" balign="left">StorageLive(_498)<br/>_498 = ((_468 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_500)<br/>_500 = _498<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _500)</td></tr></table>>];
    bb201__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">201</td></tr><tr><td align="left" balign="left">StorageDead(_500)<br/>StorageDead(_498)<br/>StorageDead(_468)<br/>StorageDead(_467)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb202__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">202</td></tr><tr><td align="left" balign="left">StorageDead(_506)<br/>StorageDead(_505)<br/></td></tr><tr><td align="left">_503 = &lt;std::result::Result&lt;Ref&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _504)</td></tr></table>>];
    bb203__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">203</td></tr><tr><td align="left" balign="left">StorageDead(_504)<br/>_508 = discriminant(_503)<br/></td></tr><tr><td align="left">switchInt(move _508)</td></tr></table>>];
    bb204__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">204</td></tr><tr><td align="left" balign="left">StorageLive(_512)<br/>_512 = move ((_503 as Continue).0: std::cell::Ref&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_502 = move _512<br/>StorageDead(_512)<br/>_1532 = discriminant(_503)<br/>StorageDead(_507)<br/>StorageDead(_503)<br/>StorageLive(_513)<br/>StorageLive(_514)<br/>StorageLive(_515)<br/>StorageLive(_516)<br/>_516 = &amp;(*_10)<br/>StorageLive(_517)<br/>StorageLive(_518)<br/>StorageLive(_519)<br/>StorageLive(_520)<br/>_520 = &amp;_502<br/></td></tr><tr><td align="left">_519 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _520)</td></tr></table>>];
    bb205__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">205</td></tr><tr><td align="left" balign="left">StorageLive(_509)<br/>_509 = ((_503 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_511)<br/>_511 = _509<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _511)</td></tr></table>>];
    bb206__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">206</td></tr><tr><td align="left" balign="left">StorageDead(_511)<br/>StorageDead(_509)<br/>_1530 = discriminant(_503)<br/>StorageDead(_507)<br/>StorageDead(_503)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb207__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">207</td></tr><tr><td align="left" balign="left">StorageDead(_520)<br/>_518 = &amp;((*_519).26: u16)<br/>_517 = &amp;(*_518)<br/></td></tr><tr><td align="left">_515 = SpotMarketMap::&lt;'_&gt;::get_ref(move _516, move _517)</td></tr></table>>];
    bb208__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">208</td></tr><tr><td align="left" balign="left">StorageDead(_517)<br/>StorageDead(_516)<br/></td></tr><tr><td align="left">_514 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _515)</td></tr></table>>];
    bb209__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">209</td></tr><tr><td align="left" balign="left">StorageDead(_515)<br/>_521 = discriminant(_514)<br/></td></tr><tr><td align="left">switchInt(move _521)</td></tr></table>>];
    bb210__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">210</td></tr><tr><td align="left" balign="left">StorageLive(_525)<br/>_525 = move ((_514 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_513 = move _525<br/>StorageDead(_525)<br/>_1536 = discriminant(_514)<br/>StorageDead(_519)<br/>StorageDead(_518)<br/>StorageDead(_514)<br/>StorageLive(_526)<br/>StorageLive(_527)<br/>StorageLive(_528)<br/>StorageLive(_529)<br/>StorageLive(_530)<br/>_530 = &amp;mut (*_11)<br/>StorageLive(_531)<br/>StorageLive(_532)<br/>StorageLive(_533)<br/>StorageLive(_534)<br/>StorageLive(_535)<br/>StorageLive(_536)<br/>_536 = &amp;_513<br/></td></tr><tr><td align="left">_535 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _536)</td></tr></table>>];
    bb211__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">211</td></tr><tr><td align="left" balign="left">StorageLive(_522)<br/>_522 = ((_514 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_524)<br/>_524 = _522<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _524)</td></tr></table>>];
    bb212__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">212</td></tr><tr><td align="left" balign="left">StorageDead(_524)<br/>StorageDead(_522)<br/>_1534 = discriminant(_514)<br/>StorageDead(_519)<br/>StorageDead(_518)<br/>StorageDead(_514)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb213__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">213</td></tr><tr><td align="left" balign="left">_534 = &amp;(*_535)<br/>StorageDead(_536)<br/></td></tr><tr><td align="left">_533 = SpotMarket::oracle_id(move _534)</td></tr></table>>];
    bb214__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">214</td></tr><tr><td align="left" balign="left">StorageDead(_534)<br/>_532 = &amp;_533<br/>_531 = &amp;(*_532)<br/></td></tr><tr><td align="left">_529 = OracleMap::&lt;'_&gt;::get_price_data(move _530, move _531)</td></tr></table>>];
    bb215__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">215</td></tr><tr><td align="left" balign="left">StorageDead(_531)<br/>StorageDead(_530)<br/></td></tr><tr><td align="left">_528 = &lt;std::result::Result&lt;&amp;OraclePriceData, error::ErrorCode&gt; as Try&gt;::branch(move _529)</td></tr></table>>];
    bb216__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">216</td></tr><tr><td align="left" balign="left">StorageDead(_529)<br/>_537 = discriminant(_528)<br/></td></tr><tr><td align="left">switchInt(move _537)</td></tr></table>>];
    bb217__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">217</td></tr><tr><td align="left" balign="left">StorageLive(_541)<br/>_541 = ((_528 as Continue).0: &amp;state::oracle::OraclePriceData)<br/>_527 = _541<br/>StorageDead(_541)<br/>_526 = ((*_527).0: i64)<br/>StorageDead(_535)<br/>StorageDead(_533)<br/>StorageDead(_532)<br/>StorageDead(_528)<br/>StorageDead(_527)<br/>StorageLive(_542)<br/>StorageLive(_543)<br/>StorageLive(_544)<br/>StorageLive(_545)<br/>StorageLive(_546)<br/>StorageLive(_547)<br/>_547 = &amp;_502<br/></td></tr><tr><td align="left">_546 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _547)</td></tr></table>>];
    bb218__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">218</td></tr><tr><td align="left" balign="left">StorageLive(_538)<br/>_538 = ((_528 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_540)<br/>_540 = _538<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _540)</td></tr></table>>];
    bb219__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">219</td></tr><tr><td align="left" balign="left">StorageDead(_540)<br/>StorageDead(_538)<br/>StorageDead(_535)<br/>StorageDead(_533)<br/>StorageDead(_532)<br/>StorageDead(_528)<br/>StorageDead(_527)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb220__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">220</td></tr><tr><td align="left" balign="left">_545 = &amp;(*_546)<br/>StorageDead(_547)<br/>StorageLive(_548)<br/>_548 = _458<br/>StorageLive(_549)<br/>_549 = math::margin::MarginRequirementType::Maintenance<br/></td></tr><tr><td align="left">_544 = PerpMarket::get_unrealized_asset_weight(move _545, move _548, move _549)</td></tr></table>>];
    bb221__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">221</td></tr><tr><td align="left" balign="left">StorageDead(_549)<br/>StorageDead(_548)<br/>StorageDead(_545)<br/></td></tr><tr><td align="left">_543 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _544)</td></tr></table>>];
    bb222__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">222</td></tr><tr><td align="left" balign="left">StorageDead(_544)<br/>_550 = discriminant(_543)<br/></td></tr><tr><td align="left">switchInt(move _550)</td></tr></table>>];
    bb223__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">223</td></tr><tr><td align="left" balign="left">StorageLive(_554)<br/>_554 = ((_543 as Continue).0: u32)<br/>_542 = _554<br/>StorageDead(_554)<br/>StorageDead(_546)<br/>StorageDead(_543)<br/>StorageLive(_555)<br/>StorageLive(_556)<br/>_556 = _458<br/></td></tr><tr><td align="left">_555 = core::num::&lt;impl i128&gt;::unsigned_abs(move _556)</td></tr></table>>];
    bb224__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">224</td></tr><tr><td align="left" balign="left">StorageLive(_551)<br/>_551 = ((_543 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_553)<br/>_553 = _551<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _553)</td></tr></table>>];
    bb225__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">225</td></tr><tr><td align="left" balign="left">StorageDead(_553)<br/>StorageDead(_551)<br/>StorageDead(_546)<br/>StorageDead(_543)<br/>StorageDead(_542)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb226__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">226</td></tr><tr><td align="left" balign="left">StorageDead(_556)<br/>StorageLive(_557)<br/>_557 = _526<br/>StorageLive(_558)<br/>_558 = _542<br/>StorageLive(_559)<br/>StorageLive(_560)<br/>StorageLive(_561)<br/>StorageLive(_562)<br/>StorageLive(_563)<br/>StorageLive(_564)<br/>_564 = &amp;_502<br/></td></tr><tr><td align="left">_563 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _564)</td></tr></table>>];
    bb227__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">227</td></tr><tr><td align="left" balign="left">StorageDead(_564)<br/>_562 = ((*_563).13: u32)<br/>StorageLive(_565)<br/>_565 = LiquidationMultiplierType::Premium<br/></td></tr><tr><td align="left">_561 = calculate_liquidation_multiplier(move _562, move _565)</td></tr></table>>];
    bb228__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">228</td></tr><tr><td align="left" balign="left">StorageDead(_565)<br/>StorageDead(_562)<br/></td></tr><tr><td align="left">_560 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _561)</td></tr></table>>];
    bb229__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">229</td></tr><tr><td align="left" balign="left">StorageDead(_561)<br/>_566 = discriminant(_560)<br/></td></tr><tr><td align="left">switchInt(move _566)</td></tr></table>>];
    bb230__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">230</td></tr><tr><td align="left" balign="left">StorageLive(_570)<br/>_570 = ((_560 as Continue).0: u32)<br/>_559 = _570<br/>StorageDead(_570)<br/>_395 = (move _555, move _557, const 6_u32, move _558, move _559)<br/>StorageDead(_559)<br/>StorageDead(_558)<br/>StorageDead(_557)<br/>StorageDead(_555)<br/>StorageDead(_542)<br/>StorageDead(_526)<br/></td></tr><tr><td align="left">drop(_513)</td></tr></table>>];
    bb231__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">231</td></tr><tr><td align="left" balign="left">StorageLive(_567)<br/>_567 = ((_560 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_569)<br/>_569 = _567<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _569)</td></tr></table>>];
    bb232__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">232</td></tr><tr><td align="left" balign="left">StorageDead(_569)<br/>StorageDead(_567)<br/>StorageDead(_559)<br/>StorageDead(_558)<br/>StorageDead(_557)<br/>StorageDead(_555)<br/>StorageDead(_542)<br/>StorageDead(_526)<br/></td></tr><tr><td align="left">drop(_513)</td></tr></table>>];
    bb233__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">233</td></tr><tr><td align="left" balign="left">StorageDead(_513)<br/></td></tr><tr><td align="left">drop(_502)</td></tr></table>>];
    bb234__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">234</td></tr><tr><td align="left" balign="left">StorageDead(_502)<br/>StorageDead(_458)<br/>StorageDead(_406)<br/>StorageDead(_396)<br/>StorageLive(_390)<br/>_390 = (_395.0: u128)<br/>StorageLive(_391)<br/>_391 = (_395.1: i64)<br/>StorageLive(_392)<br/>_392 = (_395.2: u32)<br/>StorageLive(_393)<br/>_393 = (_395.3: u32)<br/>StorageLive(_394)<br/>_394 = (_395.4: u32)<br/>StorageDead(_563)<br/>StorageDead(_560)<br/>StorageDead(_395)<br/>StorageLive(_576)<br/>StorageLive(_577)<br/>StorageLive(_578)<br/>StorageLive(_579)<br/>StorageLive(_580)<br/>_580 = &amp;(*_10)<br/>StorageLive(_581)<br/>StorageLive(_582)<br/>_582 = &amp;_2<br/>_581 = &amp;(*_582)<br/></td></tr><tr><td align="left">_579 = SpotMarketMap::&lt;'_&gt;::get_ref_mut(move _580, move _581)</td></tr></table>>];
    bb235__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">235</td></tr><tr><td align="left" balign="left">StorageDead(_581)<br/>StorageDead(_580)<br/></td></tr><tr><td align="left">_578 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _579)</td></tr></table>>];
    bb236__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">236</td></tr><tr><td align="left" balign="left">StorageDead(_579)<br/>_583 = discriminant(_578)<br/></td></tr><tr><td align="left">switchInt(move _583)</td></tr></table>>];
    bb237__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">237</td></tr><tr><td align="left" balign="left">StorageLive(_587)<br/>_587 = move ((_578 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_577 = move _587<br/>StorageDead(_587)<br/>_1540 = discriminant(_578)<br/>StorageDead(_582)<br/>StorageDead(_578)<br/>StorageLive(_590)<br/>StorageLive(_591)<br/>StorageLive(_592)<br/>StorageLive(_593)<br/>_593 = &amp;mut (*_11)<br/>StorageLive(_594)<br/>StorageLive(_595)<br/>StorageLive(_596)<br/>StorageLive(_597)<br/>StorageLive(_598)<br/>StorageLive(_599)<br/>_599 = &amp;_577<br/></td></tr><tr><td align="left">_598 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _599)</td></tr></table>>];
    bb238__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">238</td></tr><tr><td align="left" balign="left">StorageLive(_584)<br/>_584 = ((_578 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_586)<br/>_586 = _584<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _586)</td></tr></table>>];
    bb239__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">239</td></tr><tr><td align="left" balign="left">StorageDead(_586)<br/>StorageDead(_584)<br/>_1538 = discriminant(_578)<br/>StorageDead(_582)<br/>StorageDead(_578)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb240__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">240</td></tr><tr><td align="left" balign="left">_597 = &amp;(*_598)<br/>StorageDead(_599)<br/></td></tr><tr><td align="left">_596 = SpotMarket::oracle_id(move _597)</td></tr></table>>];
    bb241__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">241</td></tr><tr><td align="left" balign="left">StorageDead(_597)<br/>_595 = &amp;_596<br/>_594 = &amp;(*_595)<br/></td></tr><tr><td align="left">_592 = OracleMap::&lt;'_&gt;::get_price_data_and_guard_rails(move _593, move _594)</td></tr></table>>];
    bb242__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">242</td></tr><tr><td align="left" balign="left">StorageDead(_594)<br/>StorageDead(_593)<br/></td></tr><tr><td align="left">_591 = &lt;std::result::Result&lt;(&amp;OraclePriceData, &amp;ValidityGuardRails), error::ErrorCode&gt; as Try&gt;::branch(move _592)</td></tr></table>>];
    bb243__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">243</td></tr><tr><td align="left" balign="left">StorageDead(_592)<br/>_600 = discriminant(_591)<br/></td></tr><tr><td align="left">switchInt(move _600)</td></tr></table>>];
    bb244__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">244</td></tr><tr><td align="left" balign="left">StorageLive(_604)<br/>_604 = ((_591 as Continue).0: (&amp;state::oracle::OraclePriceData, &amp;state::state::ValidityGuardRails))<br/>_590 = _604<br/>StorageDead(_604)<br/>StorageLive(_588)<br/>_588 = (_590.0: &amp;state::oracle::OraclePriceData)<br/>StorageLive(_589)<br/>_589 = (_590.1: &amp;state::state::ValidityGuardRails)<br/>StorageDead(_598)<br/>StorageDead(_596)<br/>StorageDead(_595)<br/>StorageDead(_591)<br/>StorageDead(_590)<br/>StorageLive(_605)<br/>StorageLive(_606)<br/>StorageLive(_607)<br/>StorageLive(_608)<br/>StorageLive(_609)<br/>StorageLive(_610)<br/>StorageLive(_611)<br/>_611 = &amp;mut _577<br/>_610 = &amp;mut (*_611)<br/></td></tr><tr><td align="left">_609 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _610)</td></tr></table>>];
    bb245__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">245</td></tr><tr><td align="left" balign="left">StorageLive(_601)<br/>_601 = ((_591 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_603)<br/>_603 = _601<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _603)</td></tr></table>>];
    bb246__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">246</td></tr><tr><td align="left" balign="left">StorageDead(_603)<br/>StorageDead(_601)<br/>StorageDead(_598)<br/>StorageDead(_596)<br/>StorageDead(_595)<br/>StorageDead(_591)<br/>StorageDead(_590)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb247__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">247</td></tr><tr><td align="left" balign="left">_608 = &amp;mut (*_609)<br/>StorageDead(_610)<br/>StorageLive(_612)<br/>_612 = &amp;(*_588)<br/>StorageLive(_613)<br/>_613 = &amp;(*_589)<br/>StorageLive(_614)<br/>_614 = _12<br/>StorageLive(_615)<br/>StorageLive(_616)<br/>_616 = DriftAction::Liquidate<br/>_615 = Option::&lt;DriftAction&gt;::Some(move _616)<br/>StorageDead(_616)<br/></td></tr><tr><td align="left">_607 = update_spot_market_and_check_validity(move _608, move _612, move _613, move _614, move _615)</td></tr></table>>];
    bb248__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">248</td></tr><tr><td align="left" balign="left">StorageDead(_615)<br/>StorageDead(_614)<br/>StorageDead(_613)<br/>StorageDead(_612)<br/>StorageDead(_608)<br/></td></tr><tr><td align="left">_606 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _607)</td></tr></table>>];
    bb249__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">249</td></tr><tr><td align="left" balign="left">StorageDead(_607)<br/>_617 = discriminant(_606)<br/></td></tr><tr><td align="left">switchInt(move _617)</td></tr></table>>];
    bb250__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">250</td></tr><tr><td align="left" balign="left">StorageLive(_621)<br/>_621 = ((_606 as Continue).0: ())<br/>_605 = _621<br/>StorageDead(_621)<br/>StorageDead(_611)<br/>StorageDead(_609)<br/>StorageDead(_606)<br/>StorageDead(_605)<br/>StorageLive(_622)<br/>StorageLive(_623)<br/>StorageLive(_624)<br/>StorageLive(_625)<br/>_625 = &amp;(*_5)<br/>StorageLive(_626)<br/>_626 = _2<br/></td></tr><tr><td align="left">_624 = User::get_spot_position(move _625, move _626)</td></tr></table>>];
    bb251__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">251</td></tr><tr><td align="left" balign="left">StorageLive(_618)<br/>_618 = ((_606 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_620)<br/>_620 = _618<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _620)</td></tr></table>>];
    bb252__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">252</td></tr><tr><td align="left" balign="left">StorageDead(_620)<br/>StorageDead(_618)<br/>StorageDead(_611)<br/>StorageDead(_609)<br/>StorageDead(_606)<br/>StorageDead(_605)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb253__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">253</td></tr><tr><td align="left" balign="left">StorageDead(_626)<br/>StorageDead(_625)<br/></td></tr><tr><td align="left">_623 = &lt;std::result::Result&lt;&amp;SpotPosition, error::ErrorCode&gt; as Try&gt;::branch(move _624)</td></tr></table>>];
    bb254__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">254</td></tr><tr><td align="left" balign="left">StorageDead(_624)<br/>_627 = discriminant(_623)<br/></td></tr><tr><td align="left">switchInt(move _627)</td></tr></table>>];
    bb255__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">255</td></tr><tr><td align="left" balign="left">StorageLive(_631)<br/>_631 = ((_623 as Continue).0: &amp;state::user::SpotPosition)<br/>_622 = _631<br/>StorageDead(_631)<br/>StorageDead(_623)<br/>StorageLive(_632)<br/>StorageLive(_633)<br/>StorageLive(_634)<br/>StorageLive(_635)<br/>StorageLive(_636)<br/>_636 = &amp;((*_622).5: state::spot_market::SpotBalanceType)<br/>StorageLive(_637)<br/>_1499 = const _<br/>_637 = &amp;(*_1499)<br/></td></tr><tr><td align="left">_635 = &lt;SpotBalanceType as PartialEq&gt;::eq(move _636, move _637)</td></tr></table>>];
    bb256__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">256</td></tr><tr><td align="left" balign="left">StorageLive(_628)<br/>_628 = ((_623 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_630)<br/>_630 = _628<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _630)</td></tr></table>>];
    bb257__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">257</td></tr><tr><td align="left" balign="left">StorageDead(_630)<br/>StorageDead(_628)<br/>StorageDead(_623)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb258__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">258</td></tr><tr><td align="left">switchInt(move _635)</td></tr></table>>];
    bb259__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">259</td></tr><tr><td align="left" balign="left">StorageDead(_637)<br/>StorageDead(_636)<br/>StorageLive(_639)<br/>_639 = ()<br/>_634 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _639)<br/>StorageDead(_639)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb260__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">260</td></tr><tr><td align="left" balign="left">StorageDead(_637)<br/>StorageDead(_636)<br/>StorageLive(_640)<br/>_640 = error::ErrorCode::WrongSpotBalanceType<br/>StorageLive(_641)<br/>StorageLive(_642)<br/>StorageLive(_643)<br/>StorageLive(_644)<br/>StorageLive(_645)<br/>StorageLive(_646)<br/>StorageLive(_647)<br/>StorageLive(_648)<br/>StorageLive(_649)<br/>StorageLive(_650)<br/>StorageLive(_651)<br/>_1498 = const _<br/>_651 = &amp;(*_1498)<br/>_650 = &amp;(*_651)<br/>_649 = move _650 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_650)<br/>StorageLive(_653)<br/>StorageLive(_654)<br/>StorageLive(_655)<br/>StorageLive(_656)<br/>StorageLive(_657)<br/>StorageLive(_658)<br/>StorageLive(_659)<br/>_659 = &amp;_640<br/>_658 = &amp;(*_659)<br/></td></tr><tr><td align="left">_657 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _658)</td></tr></table>>];
    bb261__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">261</td></tr><tr><td align="left" balign="left">StorageDead(_658)<br/>_656 = [move _657]<br/>StorageDead(_657)<br/>_655 = &amp;_656<br/>_654 = &amp;(*_655)<br/>_653 = move _654 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_654)<br/></td></tr><tr><td align="left">_648 = Arguments::&lt;'_&gt;::new_v1(move _649, move _653)</td></tr></table>>];
    bb262__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">262</td></tr><tr><td align="left" balign="left">StorageDead(_653)<br/>StorageDead(_649)<br/></td></tr><tr><td align="left">_647 = format(move _648)</td></tr></table>>];
    bb263__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">263</td></tr><tr><td align="left" balign="left">StorageDead(_648)<br/>StorageDead(_659)<br/>StorageDead(_656)<br/>StorageDead(_655)<br/>StorageDead(_651)<br/>_646 = move _647<br/>StorageDead(_647)<br/>_645 = &amp;_646<br/>_644 = &amp;(*_645)<br/></td></tr><tr><td align="left">_643 = &lt;String as Deref&gt;::deref(move _644)</td></tr></table>>];
    bb264__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">264</td></tr><tr><td align="left" balign="left">_642 = &amp;(*_643)<br/>StorageDead(_644)<br/></td></tr><tr><td align="left">_641 = solana_program::log::sol_log(move _642)</td></tr></table>>];
    bb265__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">265</td></tr><tr><td align="left" balign="left">StorageDead(_642)<br/></td></tr><tr><td align="left">drop(_646)</td></tr></table>>];
    bb266__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">266</td></tr><tr><td align="left" balign="left">StorageDead(_646)<br/>StorageDead(_645)<br/>StorageDead(_643)<br/>StorageDead(_641)<br/>StorageLive(_660)<br/>StorageLive(_661)<br/>StorageLive(_662)<br/>_662 = const &quot;User did not have a borrow for the borrow market index&quot;<br/>_661 = &amp;(*_662)<br/></td></tr><tr><td align="left">_660 = solana_program::log::sol_log(move _661)</td></tr></table>>];
    bb267__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">267</td></tr><tr><td align="left" balign="left">StorageDead(_661)<br/>StorageDead(_662)<br/>StorageDead(_660)<br/>StorageLive(_663)<br/>_663 = _640<br/>_634 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _663)<br/>StorageDead(_663)<br/>StorageDead(_640)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb268__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">268</td></tr><tr><td align="left" balign="left">StorageDead(_635)<br/></td></tr><tr><td align="left">_633 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _634)</td></tr></table>>];
    bb269__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">269</td></tr><tr><td align="left" balign="left">StorageDead(_634)<br/>_664 = discriminant(_633)<br/></td></tr><tr><td align="left">switchInt(move _664)</td></tr></table>>];
    bb270__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">270</td></tr><tr><td align="left" balign="left">StorageLive(_668)<br/>_668 = ((_633 as Continue).0: ())<br/>_632 = _668<br/>StorageDead(_668)<br/>StorageDead(_633)<br/>StorageDead(_632)<br/>StorageLive(_669)<br/>StorageLive(_670)<br/>StorageLive(_671)<br/>StorageLive(_672)<br/>_672 = &amp;(*_622)<br/>StorageLive(_673)<br/>StorageLive(_674)<br/>StorageLive(_675)<br/>StorageLive(_676)<br/>_676 = &amp;_577<br/>_675 = &amp;(*_676)<br/></td></tr><tr><td align="left">_674 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _675)</td></tr></table>>];
    bb271__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">271</td></tr><tr><td align="left" balign="left">StorageLive(_665)<br/>_665 = ((_633 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_667)<br/>_667 = _665<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _667)</td></tr></table>>];
    bb272__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">272</td></tr><tr><td align="left" balign="left">StorageDead(_667)<br/>StorageDead(_665)<br/>StorageDead(_633)<br/>StorageDead(_632)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb273__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">273</td></tr><tr><td align="left" balign="left">_673 = &amp;(*_674)<br/>StorageDead(_675)<br/></td></tr><tr><td align="left">_671 = SpotPosition::get_token_amount(move _672, move _673)</td></tr></table>>];
    bb274__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">274</td></tr><tr><td align="left" balign="left">StorageDead(_673)<br/>StorageDead(_672)<br/></td></tr><tr><td align="left">_670 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _671)</td></tr></table>>];
    bb275__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">275</td></tr><tr><td align="left" balign="left">StorageDead(_671)<br/>_677 = discriminant(_670)<br/></td></tr><tr><td align="left">switchInt(move _677)</td></tr></table>>];
    bb276__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">276</td></tr><tr><td align="left" balign="left">StorageLive(_681)<br/>_681 = ((_670 as Continue).0: u128)<br/>_669 = _681<br/>StorageDead(_681)<br/>StorageDead(_676)<br/>StorageDead(_674)<br/>StorageDead(_670)<br/>StorageLive(_682)<br/>StorageLive(_683)<br/>StorageLive(_684)<br/>StorageLive(_685)<br/>StorageLive(_686)<br/>_686 = _669<br/>_685 = Ne(move _686, const 0_u128)<br/></td></tr><tr><td align="left">switchInt(move _685)</td></tr></table>>];
    bb277__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">277</td></tr><tr><td align="left" balign="left">StorageLive(_678)<br/>_678 = ((_670 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_680)<br/>_680 = _678<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _680)</td></tr></table>>];
    bb278__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">278</td></tr><tr><td align="left" balign="left">StorageDead(_680)<br/>StorageDead(_678)<br/>StorageDead(_676)<br/>StorageDead(_674)<br/>StorageDead(_670)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb279__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">279</td></tr><tr><td align="left" balign="left">StorageDead(_686)<br/>StorageLive(_687)<br/>_687 = ()<br/>_684 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _687)<br/>StorageDead(_687)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb280__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">280</td></tr><tr><td align="left" balign="left">StorageDead(_686)<br/>StorageLive(_688)<br/>_688 = error::ErrorCode::InvalidSpotPosition<br/>StorageLive(_689)<br/>StorageLive(_690)<br/>StorageLive(_691)<br/>StorageLive(_692)<br/>StorageLive(_693)<br/>StorageLive(_694)<br/>StorageLive(_695)<br/>StorageLive(_696)<br/>StorageLive(_697)<br/>StorageLive(_698)<br/>StorageLive(_699)<br/>_1497 = const _<br/>_699 = &amp;(*_1497)<br/>_698 = &amp;(*_699)<br/>_697 = move _698 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_698)<br/>StorageLive(_701)<br/>StorageLive(_702)<br/>StorageLive(_703)<br/>StorageLive(_704)<br/>StorageLive(_705)<br/>StorageLive(_706)<br/>StorageLive(_707)<br/>_707 = &amp;_688<br/>_706 = &amp;(*_707)<br/></td></tr><tr><td align="left">_705 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _706)</td></tr></table>>];
    bb281__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">281</td></tr><tr><td align="left" balign="left">StorageDead(_706)<br/>_704 = [move _705]<br/>StorageDead(_705)<br/>_703 = &amp;_704<br/>_702 = &amp;(*_703)<br/>_701 = move _702 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_702)<br/></td></tr><tr><td align="left">_696 = Arguments::&lt;'_&gt;::new_v1(move _697, move _701)</td></tr></table>>];
    bb282__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">282</td></tr><tr><td align="left" balign="left">StorageDead(_701)<br/>StorageDead(_697)<br/></td></tr><tr><td align="left">_695 = format(move _696)</td></tr></table>>];
    bb283__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">283</td></tr><tr><td align="left" balign="left">StorageDead(_696)<br/>StorageDead(_707)<br/>StorageDead(_704)<br/>StorageDead(_703)<br/>StorageDead(_699)<br/>_694 = move _695<br/>StorageDead(_695)<br/>_693 = &amp;_694<br/>_692 = &amp;(*_693)<br/></td></tr><tr><td align="left">_691 = &lt;String as Deref&gt;::deref(move _692)</td></tr></table>>];
    bb284__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">284</td></tr><tr><td align="left" balign="left">_690 = &amp;(*_691)<br/>StorageDead(_692)<br/></td></tr><tr><td align="left">_689 = solana_program::log::sol_log(move _690)</td></tr></table>>];
    bb285__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">285</td></tr><tr><td align="left" balign="left">StorageDead(_690)<br/></td></tr><tr><td align="left">drop(_694)</td></tr></table>>];
    bb286__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">286</td></tr><tr><td align="left" balign="left">StorageDead(_694)<br/>StorageDead(_693)<br/>StorageDead(_691)<br/>StorageDead(_689)<br/>StorageLive(_708)<br/>StorageLive(_709)<br/>StorageLive(_710)<br/>StorageLive(_711)<br/>StorageLive(_712)<br/>StorageLive(_713)<br/>StorageLive(_714)<br/>StorageLive(_715)<br/>StorageLive(_716)<br/>StorageLive(_717)<br/>StorageLive(_718)<br/>_1496 = const _<br/>_718 = &amp;(*_1496)<br/>_717 = &amp;(*_718)<br/>_716 = move _717 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_717)<br/>StorageLive(_720)<br/>StorageLive(_721)<br/>StorageLive(_722)<br/>StorageLive(_723)<br/>StorageLive(_724)<br/>StorageLive(_725)<br/>StorageLive(_726)<br/>_726 = &amp;_2<br/>_725 = &amp;(*_726)<br/></td></tr><tr><td align="left">_724 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _725)</td></tr></table>>];
    bb287__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">287</td></tr><tr><td align="left" balign="left">StorageDead(_725)<br/>_723 = [move _724]<br/>StorageDead(_724)<br/>_722 = &amp;_723<br/>_721 = &amp;(*_722)<br/>_720 = move _721 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_721)<br/></td></tr><tr><td align="left">_715 = Arguments::&lt;'_&gt;::new_v1(move _716, move _720)</td></tr></table>>];
    bb288__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">288</td></tr><tr><td align="left" balign="left">StorageDead(_720)<br/>StorageDead(_716)<br/></td></tr><tr><td align="left">_714 = format(move _715)</td></tr></table>>];
    bb289__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">289</td></tr><tr><td align="left" balign="left">StorageDead(_715)<br/>StorageDead(_726)<br/>StorageDead(_723)<br/>StorageDead(_722)<br/>StorageDead(_718)<br/>_713 = move _714<br/>StorageDead(_714)<br/>_712 = &amp;_713<br/>_711 = &amp;(*_712)<br/></td></tr><tr><td align="left">_710 = &lt;String as Deref&gt;::deref(move _711)</td></tr></table>>];
    bb290__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">290</td></tr><tr><td align="left" balign="left">_709 = &amp;(*_710)<br/>StorageDead(_711)<br/></td></tr><tr><td align="left">_708 = solana_program::log::sol_log(move _709)</td></tr></table>>];
    bb291__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">291</td></tr><tr><td align="left" balign="left">StorageDead(_709)<br/></td></tr><tr><td align="left">drop(_713)</td></tr></table>>];
    bb292__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">292</td></tr><tr><td align="left" balign="left">StorageDead(_713)<br/>StorageDead(_712)<br/>StorageDead(_710)<br/>StorageDead(_708)<br/>StorageLive(_727)<br/>_727 = _688<br/>_684 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _727)<br/>StorageDead(_727)<br/>StorageDead(_688)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb293__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">293</td></tr><tr><td align="left" balign="left">StorageDead(_685)<br/></td></tr><tr><td align="left">_683 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _684)</td></tr></table>>];
    bb294__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">294</td></tr><tr><td align="left" balign="left">StorageDead(_684)<br/>_728 = discriminant(_683)<br/></td></tr><tr><td align="left">switchInt(move _728)</td></tr></table>>];
    bb295__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">295</td></tr><tr><td align="left" balign="left">StorageLive(_732)<br/>_732 = ((_683 as Continue).0: ())<br/>_682 = _732<br/>StorageDead(_732)<br/>StorageDead(_683)<br/>StorageDead(_682)<br/>StorageLive(_733)<br/>_733 = _669<br/>StorageLive(_734)<br/>_734 = ((*_588).0: i64)<br/>StorageLive(_735)<br/>StorageLive(_736)<br/>StorageLive(_737)<br/>_737 = &amp;_577<br/></td></tr><tr><td align="left">_736 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _737)</td></tr></table>>];
    bb296__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">296</td></tr><tr><td align="left" balign="left">StorageLive(_729)<br/>_729 = ((_683 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_731)<br/>_731 = _729<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _731)</td></tr></table>>];
    bb297__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">297</td></tr><tr><td align="left" balign="left">StorageDead(_731)<br/>StorageDead(_729)<br/>StorageDead(_683)<br/>StorageDead(_682)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb298__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">298</td></tr><tr><td align="left" balign="left">StorageDead(_737)<br/>_735 = ((*_736).41: u32)<br/>StorageLive(_738)<br/>StorageLive(_739)<br/>StorageLive(_740)<br/>_740 = &amp;_577<br/></td></tr><tr><td align="left">_739 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _740)</td></tr></table>>];
    bb299__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">299</td></tr><tr><td align="left" balign="left">StorageDead(_740)<br/>_738 = ((*_739).34: u32)<br/>StorageLive(_741)<br/>StorageLive(_742)<br/>StorageLive(_743)<br/>StorageLive(_744)<br/>StorageLive(_745)<br/>StorageLive(_746)<br/>_746 = &amp;_577<br/></td></tr><tr><td align="left">_745 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _746)</td></tr></table>>];
    bb300__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">300</td></tr><tr><td align="left" balign="left">StorageDead(_746)<br/>_744 = ((*_745).36: u32)<br/>StorageLive(_747)<br/>_747 = LiquidationMultiplierType::Discount<br/></td></tr><tr><td align="left">_743 = calculate_liquidation_multiplier(move _744, move _747)</td></tr></table>>];
    bb301__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">301</td></tr><tr><td align="left" balign="left">StorageDead(_747)<br/>StorageDead(_744)<br/></td></tr><tr><td align="left">_742 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _743)</td></tr></table>>];
    bb302__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">302</td></tr><tr><td align="left" balign="left">StorageDead(_743)<br/>_748 = discriminant(_742)<br/></td></tr><tr><td align="left">switchInt(move _748)</td></tr></table>>];
    bb303__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">303</td></tr><tr><td align="left" balign="left">StorageLive(_752)<br/>_752 = ((_742 as Continue).0: u32)<br/>_741 = _752<br/>StorageDead(_752)<br/>_576 = (move _733, move _734, move _735, move _738, move _741)<br/>StorageDead(_741)<br/>StorageDead(_738)<br/>StorageDead(_735)<br/>StorageDead(_734)<br/>StorageDead(_733)<br/>StorageDead(_669)<br/>StorageDead(_622)<br/>StorageDead(_589)<br/>StorageDead(_588)<br/></td></tr><tr><td align="left">drop(_577)</td></tr></table>>];
    bb304__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">304</td></tr><tr><td align="left" balign="left">StorageLive(_749)<br/>_749 = ((_742 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_751)<br/>_751 = _749<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _751)</td></tr></table>>];
    bb305__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">305</td></tr><tr><td align="left" balign="left">StorageDead(_751)<br/>StorageDead(_749)<br/>StorageDead(_741)<br/>StorageDead(_738)<br/>StorageDead(_735)<br/>StorageDead(_734)<br/>StorageDead(_733)<br/>StorageDead(_669)<br/>StorageDead(_622)<br/>StorageDead(_589)<br/>StorageDead(_588)<br/></td></tr><tr><td align="left">drop(_577)</td></tr></table>>];
    bb306__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">306</td></tr><tr><td align="left" balign="left">StorageDead(_577)<br/>StorageLive(_571)<br/>_571 = (_576.0: u128)<br/>StorageLive(_572)<br/>_572 = (_576.1: i64)<br/>StorageLive(_573)<br/>_573 = (_576.2: u32)<br/>StorageLive(_574)<br/>_574 = (_576.3: u32)<br/>StorageLive(_575)<br/>_575 = (_576.4: u32)<br/>StorageDead(_745)<br/>StorageDead(_742)<br/>StorageDead(_739)<br/>StorageDead(_736)<br/>StorageDead(_576)<br/>StorageLive(_753)<br/>StorageLive(_754)<br/>StorageLive(_755)<br/>StorageLive(_756)<br/>_756 = &amp;(*_5)<br/>StorageLive(_757)<br/>_757 = &amp;(*_9)<br/>StorageLive(_758)<br/>_758 = &amp;(*_10)<br/>StorageLive(_759)<br/>_759 = &amp;mut (*_11)<br/>StorageLive(_760)<br/>StorageLive(_761)<br/>_761 = _14<br/></td></tr><tr><td align="left">_760 = MarginContext::liquidation(move _761)</td></tr></table>>];
    bb307__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">307</td></tr><tr><td align="left" balign="left">StorageDead(_761)<br/></td></tr><tr><td align="left">_755 = math::margin::calculate_margin_requirement_and_total_collateral_and_liability_info(move _756, move _757, move _758, move _759, move _760)</td></tr></table>>];
    bb308__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">308</td></tr><tr><td align="left" balign="left">StorageDead(_760)<br/>StorageDead(_759)<br/>StorageDead(_758)<br/>StorageDead(_757)<br/>StorageDead(_756)<br/></td></tr><tr><td align="left">_754 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as Try&gt;::branch(move _755)</td></tr></table>>];
    bb309__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">309</td></tr><tr><td align="left" balign="left">StorageDead(_755)<br/>_762 = discriminant(_754)<br/></td></tr><tr><td align="left">switchInt(move _762)</td></tr></table>>];
    bb310__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">310</td></tr><tr><td align="left" balign="left">StorageLive(_766)<br/>_766 = ((_754 as Continue).0: state::margin_calculation::MarginCalculation)<br/>_753 = _766<br/>StorageDead(_766)<br/>StorageDead(_754)<br/>StorageLive(_767)<br/>StorageLive(_768)<br/>StorageLive(_769)<br/>_769 = &amp;(*_5)<br/></td></tr><tr><td align="left">_768 = User::is_being_liquidated(move _769)</td></tr></table>>];
    bb311__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">311</td></tr><tr><td align="left" balign="left">StorageLive(_763)<br/>_763 = ((_754 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_765)<br/>_765 = _763<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _765)</td></tr></table>>];
    bb312__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">312</td></tr><tr><td align="left" balign="left">StorageDead(_765)<br/>StorageDead(_763)<br/>StorageDead(_754)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb313__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">313</td></tr><tr><td align="left">switchInt(move _768)</td></tr></table>>];
    bb314__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">314</td></tr><tr><td align="left" balign="left">StorageDead(_769)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb315__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">315</td></tr><tr><td align="left" balign="left">StorageDead(_769)<br/>StorageLive(_770)<br/>StorageLive(_771)<br/>_771 = &amp;_753<br/></td></tr><tr><td align="left">_770 = MarginCalculation::meets_margin_requirement(move _771)</td></tr></table>>];
    bb316__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">316</td></tr><tr><td align="left">switchInt(move _770)</td></tr></table>>];
    bb317__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">317</td></tr><tr><td align="left" balign="left">StorageDead(_771)<br/>StorageLive(_773)<br/>StorageLive(_774)<br/>StorageLive(_775)<br/>StorageLive(_776)<br/>StorageLive(_777)<br/>StorageLive(_778)<br/>StorageLive(_779)<br/>StorageLive(_780)<br/>StorageLive(_781)<br/>StorageLive(_782)<br/>StorageLive(_783)<br/>_1495 = const _<br/>_783 = &amp;(*_1495)<br/>_782 = &amp;(*_783)<br/>_781 = move _782 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_782)<br/>StorageLive(_785)<br/>StorageLive(_786)<br/>StorageLive(_787)<br/>StorageLive(_788)<br/>StorageLive(_789)<br/>StorageLive(_790)<br/>StorageLive(_791)<br/>_791 = &amp;_753<br/>_790 = &amp;(*_791)<br/></td></tr><tr><td align="left">_789 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;MarginCalculation&gt;(move _790)</td></tr></table>>];
    bb318__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">318</td></tr><tr><td align="left" balign="left">StorageDead(_790)<br/>_788 = [move _789]<br/>StorageDead(_789)<br/>_787 = &amp;_788<br/>_786 = &amp;(*_787)<br/>_785 = move _786 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_786)<br/></td></tr><tr><td align="left">_780 = Arguments::&lt;'_&gt;::new_v1(move _781, move _785)</td></tr></table>>];
    bb319__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">319</td></tr><tr><td align="left" balign="left">StorageDead(_785)<br/>StorageDead(_781)<br/></td></tr><tr><td align="left">_779 = format(move _780)</td></tr></table>>];
    bb320__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">320</td></tr><tr><td align="left" balign="left">StorageDead(_780)<br/>StorageDead(_791)<br/>StorageDead(_788)<br/>StorageDead(_787)<br/>StorageDead(_783)<br/>_778 = move _779<br/>StorageDead(_779)<br/>_777 = &amp;_778<br/>_776 = &amp;(*_777)<br/></td></tr><tr><td align="left">_775 = &lt;String as Deref&gt;::deref(move _776)</td></tr></table>>];
    bb321__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">321</td></tr><tr><td align="left" balign="left">_774 = &amp;(*_775)<br/>StorageDead(_776)<br/></td></tr><tr><td align="left">_773 = solana_program::log::sol_log(move _774)</td></tr></table>>];
    bb322__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">322</td></tr><tr><td align="left" balign="left">StorageDead(_774)<br/></td></tr><tr><td align="left">drop(_778)</td></tr></table>>];
    bb323__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">323</td></tr><tr><td align="left" balign="left">StorageDead(_778)<br/>StorageDead(_777)<br/>StorageDead(_775)<br/>StorageDead(_773)<br/>StorageLive(_792)<br/>_792 = error::ErrorCode::SufficientCollateral<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _792)<br/>StorageDead(_792)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb324__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">324</td></tr><tr><td align="left" balign="left">StorageDead(_771)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb325__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">325</td></tr><tr><td align="left" balign="left">StorageLive(_793)<br/>StorageLive(_794)<br/>_794 = &amp;(*_5)<br/></td></tr><tr><td align="left">_793 = User::is_being_liquidated(move _794)</td></tr></table>>];
    bb326__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">326</td></tr><tr><td align="left">switchInt(move _793)</td></tr></table>>];
    bb327__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">327</td></tr><tr><td align="left" balign="left">StorageDead(_794)<br/>StorageLive(_795)<br/>StorageLive(_796)<br/>StorageLive(_797)<br/>StorageLive(_798)<br/>_798 = &amp;_753<br/></td></tr><tr><td align="left">_797 = MarginCalculation::can_exit_liquidation(move _798)</td></tr></table>>];
    bb328__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">328</td></tr><tr><td align="left" balign="left">StorageDead(_798)<br/></td></tr><tr><td align="left">_796 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _797)</td></tr></table>>];
    bb329__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">329</td></tr><tr><td align="left" balign="left">StorageDead(_797)<br/>_799 = discriminant(_796)<br/></td></tr><tr><td align="left">switchInt(move _799)</td></tr></table>>];
    bb330__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">330</td></tr><tr><td align="left" balign="left">StorageLive(_803)<br/>_803 = ((_796 as Continue).0: bool)<br/>_795 = _803<br/>StorageDead(_803)<br/></td></tr><tr><td align="left">switchInt(move _795)</td></tr></table>>];
    bb331__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">331</td></tr><tr><td align="left" balign="left">StorageLive(_800)<br/>_800 = ((_796 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_802)<br/>_802 = _800<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _802)</td></tr></table>>];
    bb332__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">332</td></tr><tr><td align="left" balign="left">StorageDead(_802)<br/>StorageDead(_800)<br/>StorageDead(_796)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb333__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">333</td></tr><tr><td align="left" balign="left">StorageDead(_796)<br/>StorageLive(_805)<br/>StorageLive(_806)<br/>_806 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_805 = User::exit_liquidation(move _806)</td></tr></table>>];
    bb334__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">334</td></tr><tr><td align="left" balign="left">StorageDead(_796)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb335__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">335</td></tr><tr><td align="left" balign="left">StorageDead(_806)<br/>StorageDead(_805)<br/>StorageLive(_807)<br/>_807 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _807)<br/>StorageDead(_807)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb336__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">336</td></tr><tr><td align="left" balign="left">StorageDead(_794)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb337__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">337</td></tr><tr><td align="left" balign="left">_767 = const ()<br/>StorageDead(_795)<br/>StorageDead(_793)<br/>StorageDead(_770)<br/>StorageDead(_768)<br/>StorageDead(_767)<br/>StorageLive(_808)<br/>StorageLive(_809)<br/>StorageLive(_810)<br/>StorageLive(_811)<br/>_811 = &amp;mut (*_5)<br/>StorageLive(_812)<br/>_812 = _13<br/></td></tr><tr><td align="left">_810 = User::enter_liquidation(move _811, move _812)</td></tr></table>>];
    bb338__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">338</td></tr><tr><td align="left" balign="left">StorageDead(_812)<br/>StorageDead(_811)<br/></td></tr><tr><td align="left">_809 = &lt;std::result::Result&lt;u16, error::ErrorCode&gt; as Try&gt;::branch(move _810)</td></tr></table>>];
    bb339__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">339</td></tr><tr><td align="left" balign="left">StorageDead(_810)<br/>_813 = discriminant(_809)<br/></td></tr><tr><td align="left">switchInt(move _813)</td></tr></table>>];
    bb340__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">340</td></tr><tr><td align="left" balign="left">StorageLive(_817)<br/>_817 = ((_809 as Continue).0: u16)<br/>_808 = _817<br/>StorageDead(_817)<br/>StorageDead(_809)<br/>StorageLive(_818)<br/>_818 = const 0_u64<br/>StorageLive(_819)<br/>StorageLive(_820)<br/>StorageLive(_821)<br/>StorageLive(_822)<br/>_822 = &amp;mut (*_5)<br/>StorageLive(_823)<br/>_823 = &amp;(*_6)<br/>StorageLive(_824)<br/>StorageLive(_825)<br/>_825 = &amp;(*_8)<br/>_824 = Option::&lt;&amp;anchor_lang::prelude::Pubkey&gt;::Some(move _825)<br/>StorageDead(_825)<br/>StorageLive(_826)<br/>_826 = &amp;(*_9)<br/>StorageLive(_827)<br/>_827 = &amp;(*_10)<br/>StorageLive(_828)<br/>_828 = &amp;mut (*_11)<br/>StorageLive(_829)<br/>_829 = _12<br/>StorageLive(_830)<br/>_830 = _13<br/>StorageLive(_831)<br/>_831 = OrderActionExplanation::Liquidation<br/>StorageLive(_832)<br/>_832 = Option::&lt;state::user::MarketType&gt;::None<br/>StorageLive(_833)<br/>_833 = Option::&lt;u16&gt;::None<br/>StorageLive(_834)<br/>_834 = Option::&lt;controller::position::PositionDirection&gt;::None<br/></td></tr><tr><td align="left">_821 = controller::orders::cancel_orders(move _822, move _823, move _824, move _826, move _827, move _828, move _829, move _830, move _831, move _832, move _833, move _834)</td></tr></table>>];
    bb341__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">341</td></tr><tr><td align="left" balign="left">StorageLive(_814)<br/>_814 = ((_809 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_816)<br/>_816 = _814<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _816)</td></tr></table>>];
    bb342__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">342</td></tr><tr><td align="left" balign="left">StorageDead(_816)<br/>StorageDead(_814)<br/>StorageDead(_809)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb343__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">343</td></tr><tr><td align="left" balign="left">StorageDead(_834)<br/>StorageDead(_833)<br/>StorageDead(_832)<br/>StorageDead(_831)<br/>StorageDead(_830)<br/>StorageDead(_829)<br/>StorageDead(_828)<br/>StorageDead(_827)<br/>StorageDead(_826)<br/>StorageDead(_824)<br/>StorageDead(_823)<br/>StorageDead(_822)<br/></td></tr><tr><td align="left">_820 = &lt;std::result::Result&lt;Vec&lt;u32&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _821)</td></tr></table>>];
    bb344__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">344</td></tr><tr><td align="left" balign="left">StorageDead(_821)<br/>_835 = discriminant(_820)<br/></td></tr><tr><td align="left">switchInt(move _835)</td></tr></table>>];
    bb345__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">345</td></tr><tr><td align="left" balign="left">StorageLive(_839)<br/>_839 = move ((_820 as Continue).0: std::vec::Vec&lt;u32&gt;)<br/>_1513 = const true<br/>_819 = move _839<br/>StorageDead(_839)<br/>_1544 = discriminant(_820)<br/>StorageDead(_820)<br/>StorageLive(_840)<br/>StorageLive(_841)<br/>StorageLive(_842)<br/>_842 = &amp;_819<br/></td></tr><tr><td align="left">_841 = Vec::&lt;u32&gt;::is_empty(move _842)</td></tr></table>>];
    bb346__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">346</td></tr><tr><td align="left" balign="left">StorageLive(_836)<br/>_836 = ((_820 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_838)<br/>_838 = _836<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _838)</td></tr></table>>];
    bb347__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">347</td></tr><tr><td align="left" balign="left">StorageDead(_838)<br/>StorageDead(_836)<br/>_1542 = discriminant(_820)<br/>StorageDead(_820)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb348__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">348</td></tr><tr><td align="left">switchInt(move _841)</td></tr></table>>];
    bb349__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">349</td></tr><tr><td align="left" balign="left">StorageDead(_842)<br/>_840 = _753<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb350__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">350</td></tr><tr><td align="left" balign="left">StorageDead(_842)<br/>StorageLive(_843)<br/>StorageLive(_844)<br/>StorageLive(_845)<br/>StorageLive(_846)<br/>_846 = &amp;(*_5)<br/>StorageLive(_847)<br/>_847 = &amp;(*_9)<br/>StorageLive(_848)<br/>_848 = &amp;(*_10)<br/>StorageLive(_849)<br/>_849 = &amp;mut (*_11)<br/>StorageLive(_850)<br/>StorageLive(_851)<br/>_851 = _14<br/></td></tr><tr><td align="left">_850 = MarginContext::liquidation(move _851)</td></tr></table>>];
    bb351__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">351</td></tr><tr><td align="left" balign="left">StorageDead(_851)<br/></td></tr><tr><td align="left">_845 = math::margin::calculate_margin_requirement_and_total_collateral_and_liability_info(move _846, move _847, move _848, move _849, move _850)</td></tr></table>>];
    bb352__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">352</td></tr><tr><td align="left" balign="left">StorageDead(_850)<br/>StorageDead(_849)<br/>StorageDead(_848)<br/>StorageDead(_847)<br/>StorageDead(_846)<br/></td></tr><tr><td align="left">_844 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as Try&gt;::branch(move _845)</td></tr></table>>];
    bb353__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">353</td></tr><tr><td align="left" balign="left">StorageDead(_845)<br/>_852 = discriminant(_844)<br/></td></tr><tr><td align="left">switchInt(move _852)</td></tr></table>>];
    bb354__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">354</td></tr><tr><td align="left" balign="left">StorageLive(_856)<br/>_856 = ((_844 as Continue).0: state::margin_calculation::MarginCalculation)<br/>_843 = _856<br/>StorageDead(_856)<br/>StorageDead(_844)<br/>StorageLive(_857)<br/>StorageLive(_858)<br/>StorageLive(_859)<br/>StorageLive(_860)<br/>_860 = &amp;_753<br/></td></tr><tr><td align="left">_859 = MarginCalculation::margin_shortage(move _860)</td></tr></table>>];
    bb355__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">355</td></tr><tr><td align="left" balign="left">StorageLive(_853)<br/>_853 = ((_844 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_855)<br/>_855 = _853<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _855)</td></tr></table>>];
    bb356__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">356</td></tr><tr><td align="left" balign="left">StorageDead(_855)<br/>StorageDead(_853)<br/>StorageDead(_844)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb357__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">357</td></tr><tr><td align="left" balign="left">StorageDead(_860)<br/></td></tr><tr><td align="left">_858 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _859)</td></tr></table>>];
    bb358__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">358</td></tr><tr><td align="left" balign="left">StorageDead(_859)<br/>_861 = discriminant(_858)<br/></td></tr><tr><td align="left">switchInt(move _861)</td></tr></table>>];
    bb359__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">359</td></tr><tr><td align="left" balign="left">StorageLive(_865)<br/>_865 = ((_858 as Continue).0: u128)<br/>_857 = _865<br/>StorageDead(_865)<br/>StorageDead(_858)<br/>StorageLive(_866)<br/>StorageLive(_867)<br/>StorageLive(_868)<br/>StorageLive(_869)<br/>_869 = &amp;_843<br/></td></tr><tr><td align="left">_868 = MarginCalculation::margin_shortage(move _869)</td></tr></table>>];
    bb360__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">360</td></tr><tr><td align="left" balign="left">StorageLive(_862)<br/>_862 = ((_858 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_864)<br/>_864 = _862<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _864)</td></tr></table>>];
    bb361__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">361</td></tr><tr><td align="left" balign="left">StorageDead(_864)<br/>StorageDead(_862)<br/>StorageDead(_858)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb362__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">362</td></tr><tr><td align="left" balign="left">StorageDead(_869)<br/></td></tr><tr><td align="left">_867 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _868)</td></tr></table>>];
    bb363__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">363</td></tr><tr><td align="left" balign="left">StorageDead(_868)<br/>_870 = discriminant(_867)<br/></td></tr><tr><td align="left">switchInt(move _870)</td></tr></table>>];
    bb364__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">364</td></tr><tr><td align="left" balign="left">StorageLive(_874)<br/>_874 = ((_867 as Continue).0: u128)<br/>_866 = _874<br/>StorageDead(_874)<br/>StorageDead(_867)<br/>StorageLive(_875)<br/>StorageLive(_876)<br/>StorageLive(_877)<br/>StorageLive(_878)<br/>StorageLive(_879)<br/>_879 = _857<br/>StorageLive(_880)<br/>_880 = _866<br/></td></tr><tr><td align="left">_878 = core::num::&lt;impl u128&gt;::saturating_sub(move _879, move _880)</td></tr></table>>];
    bb365__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">365</td></tr><tr><td align="left" balign="left">StorageLive(_871)<br/>_871 = ((_867 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_873)<br/>_873 = _871<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _873)</td></tr></table>>];
    bb366__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">366</td></tr><tr><td align="left" balign="left">StorageDead(_873)<br/>StorageDead(_871)<br/>StorageDead(_867)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb367__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">367</td></tr><tr><td align="left" balign="left">StorageDead(_880)<br/>StorageDead(_879)<br/></td></tr><tr><td align="left">_877 = &lt;u128 as Cast&gt;::cast::&lt;u64&gt;(move _878)</td></tr></table>>];
    bb368__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">368</td></tr><tr><td align="left" balign="left">StorageDead(_878)<br/></td></tr><tr><td align="left">_876 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _877)</td></tr></table>>];
    bb369__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">369</td></tr><tr><td align="left" balign="left">StorageDead(_877)<br/>_881 = discriminant(_876)<br/></td></tr><tr><td align="left">switchInt(move _881)</td></tr></table>>];
    bb370__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">370</td></tr><tr><td align="left" balign="left">StorageLive(_885)<br/>_885 = ((_876 as Continue).0: u64)<br/>_875 = _885<br/>StorageDead(_885)<br/>_818 = move _875<br/>StorageDead(_875)<br/>StorageDead(_876)<br/>StorageLive(_886)<br/>StorageLive(_887)<br/>StorageLive(_888)<br/>StorageLive(_889)<br/>_889 = &amp;mut (*_5)<br/>StorageLive(_890)<br/>_890 = _818<br/></td></tr><tr><td align="left">_888 = User::increment_margin_freed(move _889, move _890)</td></tr></table>>];
    bb371__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">371</td></tr><tr><td align="left" balign="left">StorageLive(_882)<br/>_882 = ((_876 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_884)<br/>_884 = _882<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _884)</td></tr></table>>];
    bb372__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">372</td></tr><tr><td align="left" balign="left">StorageDead(_884)<br/>StorageDead(_882)<br/>StorageDead(_875)<br/>StorageDead(_876)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb373__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">373</td></tr><tr><td align="left" balign="left">StorageDead(_890)<br/>StorageDead(_889)<br/></td></tr><tr><td align="left">_887 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _888)</td></tr></table>>];
    bb374__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">374</td></tr><tr><td align="left" balign="left">StorageDead(_888)<br/>_891 = discriminant(_887)<br/></td></tr><tr><td align="left">switchInt(move _891)</td></tr></table>>];
    bb375__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">375</td></tr><tr><td align="left" balign="left">StorageLive(_895)<br/>_895 = ((_887 as Continue).0: ())<br/>_886 = _895<br/>StorageDead(_895)<br/>StorageDead(_887)<br/>StorageDead(_886)<br/>StorageLive(_896)<br/>StorageLive(_897)<br/>StorageLive(_898)<br/>StorageLive(_899)<br/>StorageLive(_900)<br/>_900 = &amp;_843<br/></td></tr><tr><td align="left">_899 = MarginCalculation::can_exit_liquidation(move _900)</td></tr></table>>];
    bb376__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">376</td></tr><tr><td align="left" balign="left">StorageLive(_892)<br/>_892 = ((_887 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_894)<br/>_894 = _892<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _894)</td></tr></table>>];
    bb377__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">377</td></tr><tr><td align="left" balign="left">StorageDead(_894)<br/>StorageDead(_892)<br/>StorageDead(_887)<br/>StorageDead(_886)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb378__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">378</td></tr><tr><td align="left" balign="left">StorageDead(_900)<br/></td></tr><tr><td align="left">_898 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _899)</td></tr></table>>];
    bb379__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">379</td></tr><tr><td align="left" balign="left">StorageDead(_899)<br/>_901 = discriminant(_898)<br/></td></tr><tr><td align="left">switchInt(move _901)</td></tr></table>>];
    bb380__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">380</td></tr><tr><td align="left" balign="left">StorageLive(_905)<br/>_905 = ((_898 as Continue).0: bool)<br/>_897 = _905<br/>StorageDead(_905)<br/></td></tr><tr><td align="left">switchInt(move _897)</td></tr></table>>];
    bb381__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">381</td></tr><tr><td align="left" balign="left">StorageLive(_902)<br/>_902 = ((_898 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_904)<br/>_904 = _902<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _904)</td></tr></table>>];
    bb382__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">382</td></tr><tr><td align="left" balign="left">StorageDead(_904)<br/>StorageDead(_902)<br/>StorageDead(_898)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb383__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">383</td></tr><tr><td align="left" balign="left">StorageDead(_898)<br/>StorageLive(_907)<br/>StorageLive(_908)<br/>StorageLive(_909)<br/>StorageLive(_910)<br/>_910 = &amp;(*_9)<br/>StorageLive(_911)<br/>StorageLive(_912)<br/>_912 = &amp;_1<br/>_911 = &amp;(*_912)<br/></td></tr><tr><td align="left">_909 = PerpMarketMap::&lt;'_&gt;::get_ref(move _910, move _911)</td></tr></table>>];
    bb384__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">384</td></tr><tr><td align="left" balign="left">StorageDead(_898)<br/>_896 = const ()<br/>StorageDead(_897)<br/>StorageDead(_896)<br/>_840 = _843<br/>StorageDead(_866)<br/>StorageDead(_857)<br/>StorageDead(_843)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb385__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">385</td></tr><tr><td align="left" balign="left">StorageDead(_911)<br/>StorageDead(_910)<br/></td></tr><tr><td align="left">_908 = &lt;std::result::Result&lt;Ref&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _909)</td></tr></table>>];
    bb386__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">386</td></tr><tr><td align="left" balign="left">StorageDead(_909)<br/>_913 = discriminant(_908)<br/></td></tr><tr><td align="left">switchInt(move _913)</td></tr></table>>];
    bb387__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">387</td></tr><tr><td align="left" balign="left">StorageLive(_917)<br/>_917 = move ((_908 as Continue).0: std::cell::Ref&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_907 = move _917<br/>StorageDead(_917)<br/>_1548 = discriminant(_908)<br/>StorageDead(_912)<br/>StorageDead(_908)<br/>StorageLive(_918)<br/>StorageLive(_919)<br/>StorageLive(_920)<br/>StorageLive(_921)<br/>StorageLive(_922)<br/>_922 = &amp;mut (*_11)<br/>StorageLive(_923)<br/>StorageLive(_924)<br/>StorageLive(_925)<br/>StorageLive(_926)<br/>StorageLive(_927)<br/>StorageLive(_928)<br/>_928 = &amp;_907<br/></td></tr><tr><td align="left">_927 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _928)</td></tr></table>>];
    bb388__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">388</td></tr><tr><td align="left" balign="left">StorageLive(_914)<br/>_914 = ((_908 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_916)<br/>_916 = _914<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _916)</td></tr></table>>];
    bb389__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">389</td></tr><tr><td align="left" balign="left">StorageDead(_916)<br/>StorageDead(_914)<br/>_1546 = discriminant(_908)<br/>StorageDead(_912)<br/>StorageDead(_908)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb390__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">390</td></tr><tr><td align="left" balign="left">_926 = &amp;(*_927)<br/>StorageDead(_928)<br/></td></tr><tr><td align="left">_925 = PerpMarket::oracle_id(move _926)</td></tr></table>>];
    bb391__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">391</td></tr><tr><td align="left" balign="left">StorageDead(_926)<br/>_924 = &amp;_925<br/>_923 = &amp;(*_924)<br/></td></tr><tr><td align="left">_921 = OracleMap::&lt;'_&gt;::get_price_data(move _922, move _923)</td></tr></table>>];
    bb392__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">392</td></tr><tr><td align="left" balign="left">StorageDead(_923)<br/>StorageDead(_922)<br/></td></tr><tr><td align="left">_920 = &lt;std::result::Result&lt;&amp;OraclePriceData, error::ErrorCode&gt; as Try&gt;::branch(move _921)</td></tr></table>>];
    bb393__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">393</td></tr><tr><td align="left" balign="left">StorageDead(_921)<br/>_929 = discriminant(_920)<br/></td></tr><tr><td align="left">switchInt(move _929)</td></tr></table>>];
    bb394__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">394</td></tr><tr><td align="left" balign="left">StorageLive(_933)<br/>_933 = ((_920 as Continue).0: &amp;state::oracle::OraclePriceData)<br/>_919 = _933<br/>StorageDead(_933)<br/>_918 = ((*_919).0: i64)<br/>StorageDead(_927)<br/>StorageDead(_925)<br/>StorageDead(_924)<br/>StorageDead(_920)<br/>StorageDead(_919)<br/>StorageLive(_934)<br/>StorageLive(_935)<br/>StorageLive(_936)<br/>StorageLive(_937)<br/>StorageLive(_938)<br/>StorageLive(_939)<br/>StorageLive(_940)<br/>StorageLive(_941)<br/>StorageLive(_942)<br/>StorageLive(_943)<br/>StorageLive(_944)<br/>StorageLive(_945)<br/>StorageLive(_946)<br/>StorageLive(_947)<br/>StorageLive(_948)<br/>_948 = _12<br/>StorageLive(_949)<br/>_949 = _808<br/>StorageLive(_950)<br/>_950 = LiquidationType::LiquidateBorrowForPerpPnl<br/>StorageLive(_951)<br/>_951 = (*_6)<br/>StorageLive(_952)<br/>_952 = (*_8)<br/>StorageLive(_953)<br/>_953 = (_753.3: u128)<br/>StorageLive(_954)<br/>_954 = (_753.1: i128)<br/>StorageLive(_955)<br/>StorageLive(_956)<br/>_956 = &amp;(*_5)<br/></td></tr><tr><td align="left">_955 = User::is_bankrupt(move _956)</td></tr></table>>];
    bb395__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">395</td></tr><tr><td align="left" balign="left">StorageLive(_930)<br/>_930 = ((_920 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_932)<br/>_932 = _930<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _932)</td></tr></table>>];
    bb396__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">396</td></tr><tr><td align="left" balign="left">StorageDead(_932)<br/>StorageDead(_930)<br/>StorageDead(_927)<br/>StorageDead(_925)<br/>StorageDead(_924)<br/>StorageDead(_920)<br/>StorageDead(_919)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb397__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">397</td></tr><tr><td align="left" balign="left">StorageDead(_956)<br/>StorageLive(_957)<br/>_1513 = const false<br/>_957 = move _819<br/>StorageLive(_958)<br/>_958 = _818<br/>StorageLive(_959)<br/>StorageLive(_960)<br/>_960 = _1<br/>StorageLive(_961)<br/>_961 = _918<br/>StorageLive(_962)<br/>_962 = _2<br/>StorageLive(_963)<br/>_963 = _572<br/>_959 = LiquidateBorrowForPerpPnlRecord { perp_market_index: move _960, market_oracle_price: move _961, pnl_transfer: const 0_u128, liability_market_index: move _962, liability_price: move _963, liability_transfer: const 0_u128 }<br/>StorageDead(_963)<br/>StorageDead(_962)<br/>StorageDead(_961)<br/>StorageDead(_960)<br/>StorageLive(_964)<br/></td></tr><tr><td align="left">_964 = &lt;LiquidationRecord as Default&gt;::default()</td></tr></table>>];
    bb398__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">398</td></tr><tr><td align="left" balign="left">_947 = LiquidationRecord { ts: move _948, liquidation_type: move _950, user: move _951, liquidator: move _952, margin_requirement: move _953, total_collateral: move _954, margin_freed: move _958, liquidation_id: move _949, bankrupt: move _955, canceled_order_ids: move _957, liquidate_perp: move (_964.10: state::events::LiquidatePerpRecord), liquidate_spot: move (_964.11: state::events::LiquidateSpotRecord), liquidate_borrow_for_perp_pnl: move _959, liquidate_perp_pnl_for_deposit: move (_964.13: state::events::LiquidatePerpPnlForDepositRecord), perp_bankruptcy: move (_964.14: state::events::PerpBankruptcyRecord), spot_bankruptcy: move (_964.15: state::events::SpotBankruptcyRecord) }<br/>StorageDead(_959)<br/>StorageDead(_958)<br/>StorageDead(_957)<br/>StorageDead(_955)<br/>StorageDead(_954)<br/>StorageDead(_953)<br/>StorageDead(_952)<br/>StorageDead(_951)<br/>StorageDead(_950)<br/>StorageDead(_949)<br/>StorageDead(_948)<br/>_946 = &amp;_947<br/>_945 = &amp;(*_946)<br/></td></tr><tr><td align="left">_944 = &lt;LiquidationRecord as anchor_lang::Event&gt;::data(move _945)</td></tr></table>>];
    bb399__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">399</td></tr><tr><td align="left" balign="left">StorageDead(_945)<br/>_943 = &amp;_944<br/>_942 = &amp;(*_943)<br/></td></tr><tr><td align="left">_941 = &lt;Vec&lt;u8&gt; as Deref&gt;::deref(move _942)</td></tr></table>>];
    bb400__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">400</td></tr><tr><td align="left" balign="left">_940 = &amp;(*_941)<br/>StorageDead(_942)<br/>_939 = [move _940]<br/>StorageDead(_940)<br/>_938 = &amp;_939<br/>_937 = &amp;(*_938)<br/>_936 = move _937 as &amp;[&amp;[u8]] (PointerCoercion(Unsize))<br/>StorageDead(_937)<br/></td></tr><tr><td align="left">_935 = solana_program::log::sol_log_data(move _936)</td></tr></table>>];
    bb401__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">401</td></tr><tr><td align="left" balign="left">StorageDead(_936)<br/></td></tr><tr><td align="left">drop(_944)</td></tr></table>>];
    bb402__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">402</td></tr><tr><td align="left">drop(_947)</td></tr></table>>];
    bb403__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">403</td></tr><tr><td align="left">drop(_964)</td></tr></table>>];
    bb404__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">404</td></tr><tr><td align="left" balign="left">StorageDead(_964)<br/>StorageDead(_947)<br/>StorageDead(_946)<br/>StorageDead(_944)<br/>StorageDead(_943)<br/>StorageDead(_941)<br/>StorageDead(_939)<br/>StorageDead(_938)<br/>StorageDead(_935)<br/>_934 = const ()<br/>StorageDead(_934)<br/>StorageLive(_965)<br/>StorageLive(_966)<br/>_966 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_965 = User::exit_liquidation(move _966)</td></tr></table>>];
    bb405__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">405</td></tr><tr><td align="left" balign="left">StorageDead(_966)<br/>StorageDead(_965)<br/>StorageLive(_967)<br/>_967 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _967)<br/>StorageDead(_967)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb406__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">406</td></tr><tr><td align="left" balign="left">StorageDead(_841)<br/>StorageLive(_968)<br/>StorageLive(_969)<br/>StorageLive(_970)<br/>StorageLive(_971)<br/>_971 = &amp;_840<br/></td></tr><tr><td align="left">_970 = MarginCalculation::margin_shortage(move _971)</td></tr></table>>];
    bb407__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">407</td></tr><tr><td align="left" balign="left">StorageDead(_971)<br/></td></tr><tr><td align="left">_969 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _970)</td></tr></table>>];
    bb408__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">408</td></tr><tr><td align="left" balign="left">StorageDead(_970)<br/>_972 = discriminant(_969)<br/></td></tr><tr><td align="left">switchInt(move _972)</td></tr></table>>];
    bb409__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">409</td></tr><tr><td align="left" balign="left">StorageLive(_976)<br/>_976 = ((_969 as Continue).0: u128)<br/>_968 = _976<br/>StorageDead(_976)<br/>StorageDead(_969)<br/>StorageLive(_977)<br/>StorageLive(_978)<br/>StorageLive(_979)<br/>StorageLive(_980)<br/>_980 = _574<br/>StorageLive(_981)<br/>_981 = _14<br/></td></tr><tr><td align="left">_979 = &lt;u32 as SafeMath&gt;::safe_add(move _980, move _981)</td></tr></table>>];
    bb410__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">410</td></tr><tr><td align="left" balign="left">StorageLive(_973)<br/>_973 = ((_969 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_975)<br/>_975 = _973<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _975)</td></tr></table>>];
    bb411__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">411</td></tr><tr><td align="left" balign="left">StorageDead(_975)<br/>StorageDead(_973)<br/>StorageDead(_969)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb412__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">412</td></tr><tr><td align="left" balign="left">StorageDead(_981)<br/>StorageDead(_980)<br/></td></tr><tr><td align="left">_978 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _979)</td></tr></table>>];
    bb413__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">413</td></tr><tr><td align="left" balign="left">StorageDead(_979)<br/>_982 = discriminant(_978)<br/></td></tr><tr><td align="left">switchInt(move _982)</td></tr></table>>];
    bb414__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">414</td></tr><tr><td align="left" balign="left">StorageLive(_986)<br/>_986 = ((_978 as Continue).0: u32)<br/>_977 = _986<br/>StorageDead(_986)<br/>StorageDead(_978)<br/>StorageLive(_987)<br/>StorageLive(_988)<br/>StorageLive(_989)<br/>StorageLive(_990)<br/>_990 = _968<br/>StorageLive(_991)<br/>_991 = _393<br/>StorageLive(_992)<br/>_992 = _394<br/>StorageLive(_993)<br/>_993 = _977<br/>StorageLive(_994)<br/>_994 = _575<br/>StorageLive(_995)<br/>_995 = _573<br/>StorageLive(_996)<br/>_996 = _572<br/></td></tr><tr><td align="left">_989 = calculate_liability_transfer_to_cover_margin_shortage(move _990, move _991, move _992, move _993, move _994, move _995, move _996, const 0_u32)</td></tr></table>>];
    bb415__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">415</td></tr><tr><td align="left" balign="left">StorageLive(_983)<br/>_983 = ((_978 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_985)<br/>_985 = _983<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _985)</td></tr></table>>];
    bb416__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">416</td></tr><tr><td align="left" balign="left">StorageDead(_985)<br/>StorageDead(_983)<br/>StorageDead(_978)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb417__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">417</td></tr><tr><td align="left" balign="left">StorageDead(_996)<br/>StorageDead(_995)<br/>StorageDead(_994)<br/>StorageDead(_993)<br/>StorageDead(_992)<br/>StorageDead(_991)<br/>StorageDead(_990)<br/></td></tr><tr><td align="left">_988 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _989)</td></tr></table>>];
    bb418__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">418</td></tr><tr><td align="left" balign="left">StorageDead(_989)<br/>_997 = discriminant(_988)<br/></td></tr><tr><td align="left">switchInt(move _997)</td></tr></table>>];
    bb419__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">419</td></tr><tr><td align="left" balign="left">StorageLive(_1001)<br/>_1001 = ((_988 as Continue).0: u128)<br/>_987 = _1001<br/>StorageDead(_1001)<br/>StorageDead(_988)<br/>StorageLive(_1002)<br/>StorageLive(_1003)<br/>StorageLive(_1004)<br/>StorageLive(_1005)<br/>_1005 = &amp;(*_5)<br/>StorageLive(_1006)<br/>_1006 = _968<br/>StorageLive(_1007)<br/>_1007 = _13<br/>StorageLive(_1008)<br/>_1008 = _15<br/>StorageLive(_1009)<br/>_1009 = _16<br/></td></tr><tr><td align="left">_1004 = calculate_max_pct_to_liquidate(move _1005, move _1006, move _1007, move _1008, move _1009)</td></tr></table>>];
    bb420__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">420</td></tr><tr><td align="left" balign="left">StorageLive(_998)<br/>_998 = ((_988 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1000)<br/>_1000 = _998<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1000)</td></tr></table>>];
    bb421__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">421</td></tr><tr><td align="left" balign="left">StorageDead(_1000)<br/>StorageDead(_998)<br/>StorageDead(_988)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb422__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">422</td></tr><tr><td align="left" balign="left">StorageDead(_1009)<br/>StorageDead(_1008)<br/>StorageDead(_1007)<br/>StorageDead(_1006)<br/>StorageDead(_1005)<br/></td></tr><tr><td align="left">_1003 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _1004)</td></tr></table>>];
    bb423__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">423</td></tr><tr><td align="left" balign="left">StorageDead(_1004)<br/>_1010 = discriminant(_1003)<br/></td></tr><tr><td align="left">switchInt(move _1010)</td></tr></table>>];
    bb424__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">424</td></tr><tr><td align="left" balign="left">StorageLive(_1014)<br/>_1014 = ((_1003 as Continue).0: u128)<br/>_1002 = _1014<br/>StorageDead(_1014)<br/>StorageDead(_1003)<br/>StorageLive(_1015)<br/>StorageLive(_1016)<br/>StorageLive(_1017)<br/>StorageLive(_1018)<br/>StorageLive(_1019)<br/>_1019 = _987<br/>StorageLive(_1020)<br/>_1020 = _1002<br/></td></tr><tr><td align="left">_1018 = core::num::&lt;impl u128&gt;::saturating_mul(move _1019, move _1020)</td></tr></table>>];
    bb425__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">425</td></tr><tr><td align="left" balign="left">StorageLive(_1011)<br/>_1011 = ((_1003 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1013)<br/>_1013 = _1011<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1013)</td></tr></table>>];
    bb426__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">426</td></tr><tr><td align="left" balign="left">StorageDead(_1013)<br/>StorageDead(_1011)<br/>StorageDead(_1003)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb427__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">427</td></tr><tr><td align="left" balign="left">StorageDead(_1020)<br/>StorageDead(_1019)<br/></td></tr><tr><td align="left">_1017 = &lt;u128 as SafeMath&gt;::safe_div(move _1018, const _)</td></tr></table>>];
    bb428__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">428</td></tr><tr><td align="left" balign="left">StorageDead(_1018)<br/></td></tr><tr><td align="left">_1016 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _1017)</td></tr></table>>];
    bb429__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">429</td></tr><tr><td align="left" balign="left">StorageDead(_1017)<br/>_1021 = discriminant(_1016)<br/></td></tr><tr><td align="left">switchInt(move _1021)</td></tr></table>>];
    bb430__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">430</td></tr><tr><td align="left" balign="left">StorageLive(_1025)<br/>_1025 = ((_1016 as Continue).0: u128)<br/>_1015 = _1025<br/>StorageDead(_1025)<br/>StorageDead(_1016)<br/>StorageLive(_1026)<br/>StorageLive(_1027)<br/>StorageLive(_1028)<br/>_1028 = _1015<br/>_1027 = Eq(move _1028, const 0_u128)<br/></td></tr><tr><td align="left">switchInt(move _1027)</td></tr></table>>];
    bb431__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">431</td></tr><tr><td align="left" balign="left">StorageLive(_1022)<br/>_1022 = ((_1016 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1024)<br/>_1024 = _1022<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1024)</td></tr></table>>];
    bb432__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">432</td></tr><tr><td align="left" balign="left">StorageDead(_1024)<br/>StorageDead(_1022)<br/>StorageDead(_1016)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb433__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">433</td></tr><tr><td align="left" balign="left">StorageDead(_1028)<br/>StorageLive(_1030)<br/>StorageLive(_1031)<br/>StorageLive(_1032)<br/>_1032 = const &quot;max_liability_allowed_to_be_transferred == 0&quot;<br/>_1031 = &amp;(*_1032)<br/></td></tr><tr><td align="left">_1030 = solana_program::log::sol_log(move _1031)</td></tr></table>>];
    bb434__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">434</td></tr><tr><td align="left" balign="left">StorageDead(_1028)<br/>_1026 = const ()<br/>StorageDead(_1027)<br/>StorageDead(_1026)<br/>StorageLive(_1034)<br/>StorageLive(_1035)<br/>StorageLive(_1036)<br/>StorageLive(_1037)<br/>_1037 = _390<br/>StorageLive(_1038)<br/>_1038 = _394<br/>StorageLive(_1039)<br/>_1039 = _392<br/>StorageLive(_1040)<br/>_1040 = _391<br/>StorageLive(_1041)<br/>_1041 = _575<br/>StorageLive(_1042)<br/>_1042 = _573<br/>StorageLive(_1043)<br/>_1043 = _572<br/></td></tr><tr><td align="left">_1036 = calculate_liability_transfer_implied_by_asset_amount(move _1037, move _1038, move _1039, move _1040, move _1041, move _1042, move _1043)</td></tr></table>>];
    bb435__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">435</td></tr><tr><td align="left" balign="left">StorageDead(_1031)<br/>StorageDead(_1032)<br/>StorageDead(_1030)<br/>StorageLive(_1033)<br/>_1033 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _1033)<br/>StorageDead(_1033)<br/>StorageDead(_1027)<br/>StorageDead(_1026)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb436__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">436</td></tr><tr><td align="left" balign="left">StorageDead(_1043)<br/>StorageDead(_1042)<br/>StorageDead(_1041)<br/>StorageDead(_1040)<br/>StorageDead(_1039)<br/>StorageDead(_1038)<br/>StorageDead(_1037)<br/></td></tr><tr><td align="left">_1035 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _1036)</td></tr></table>>];
    bb437__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">437</td></tr><tr><td align="left" balign="left">StorageDead(_1036)<br/>_1044 = discriminant(_1035)<br/></td></tr><tr><td align="left">switchInt(move _1044)</td></tr></table>>];
    bb438__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">438</td></tr><tr><td align="left" balign="left">StorageLive(_1048)<br/>_1048 = ((_1035 as Continue).0: u128)<br/>_1034 = _1048<br/>StorageDead(_1048)<br/>StorageDead(_1035)<br/>StorageLive(_1049)<br/>StorageLive(_1050)<br/>StorageLive(_1051)<br/>StorageLive(_1052)<br/>StorageLive(_1053)<br/>StorageLive(_1054)<br/>StorageLive(_1055)<br/>_1055 = _571<br/></td></tr><tr><td align="left">_1054 = &lt;u128 as Cast&gt;::cast::&lt;i128&gt;(move _1055)</td></tr></table>>];
    bb439__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">439</td></tr><tr><td align="left" balign="left">StorageLive(_1045)<br/>_1045 = ((_1035 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1047)<br/>_1047 = _1045<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1047)</td></tr></table>>];
    bb440__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">440</td></tr><tr><td align="left" balign="left">StorageDead(_1047)<br/>StorageDead(_1045)<br/>StorageDead(_1035)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb441__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">441</td></tr><tr><td align="left" balign="left">StorageDead(_1055)<br/></td></tr><tr><td align="left">_1053 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _1054)</td></tr></table>>];
    bb442__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">442</td></tr><tr><td align="left" balign="left">StorageDead(_1054)<br/>_1056 = discriminant(_1053)<br/></td></tr><tr><td align="left">switchInt(move _1056)</td></tr></table>>];
    bb443__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">443</td></tr><tr><td align="left" balign="left">StorageLive(_1060)<br/>_1060 = ((_1053 as Continue).0: i128)<br/>_1052 = _1060<br/>StorageDead(_1060)<br/>StorageLive(_1061)<br/>_1061 = _573<br/>StorageLive(_1062)<br/>_1062 = _572<br/></td></tr><tr><td align="left">_1051 = get_token_value(move _1052, move _1061, move _1062)</td></tr></table>>];
    bb444__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">444</td></tr><tr><td align="left" balign="left">StorageLive(_1057)<br/>_1057 = ((_1053 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1059)<br/>_1059 = _1057<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1059)</td></tr></table>>];
    bb445__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">445</td></tr><tr><td align="left" balign="left">StorageDead(_1059)<br/>StorageDead(_1057)<br/>StorageDead(_1052)<br/>StorageDead(_1051)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb446__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">446</td></tr><tr><td align="left" balign="left">StorageDead(_1062)<br/>StorageDead(_1061)<br/>StorageDead(_1052)<br/></td></tr><tr><td align="left">_1050 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _1051)</td></tr></table>>];
    bb447__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">447</td></tr><tr><td align="left" balign="left">StorageDead(_1051)<br/>_1063 = discriminant(_1050)<br/></td></tr><tr><td align="left">switchInt(move _1063)</td></tr></table>>];
    bb448__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">448</td></tr><tr><td align="left" balign="left">StorageLive(_1067)<br/>_1067 = ((_1050 as Continue).0: i128)<br/>_1049 = _1067<br/>StorageDead(_1067)<br/>StorageDead(_1053)<br/>StorageDead(_1050)<br/>StorageLive(_1068)<br/>StorageLive(_1069)<br/>StorageLive(_1070)<br/>_1070 = _1049<br/>StorageLive(_1071)<br/>_1072 = CheckedMul(const 10_i128, const _)<br/></td></tr><tr><td align="left">assert(!move (_1072.1: bool), &quot;attempt to compute `{} * {}`, which would overflow&quot;, const 10_i128, const _)</td></tr></table>>];
    bb449__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">449</td></tr><tr><td align="left" balign="left">StorageLive(_1064)<br/>_1064 = ((_1050 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1066)<br/>_1066 = _1064<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1066)</td></tr></table>>];
    bb450__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">450</td></tr><tr><td align="left" balign="left">StorageDead(_1066)<br/>StorageDead(_1064)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb451__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">451</td></tr><tr><td align="left" balign="left">_1071 = move (_1072.0: i128)<br/>_1069 = Gt(move _1070, move _1071)<br/></td></tr><tr><td align="left">switchInt(move _1069)</td></tr></table>>];
    bb452__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">452</td></tr><tr><td align="left" balign="left">StorageDead(_1071)<br/>StorageDead(_1070)<br/>_1068 = const 0_u128<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb453__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">453</td></tr><tr><td align="left" balign="left">StorageDead(_1071)<br/>StorageDead(_1070)<br/>_1068 = _571<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb454__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">454</td></tr><tr><td align="left" balign="left">StorageDead(_1069)<br/>StorageLive(_1073)<br/>StorageLive(_1074)<br/>StorageLive(_1075)<br/>StorageLive(_1076)<br/>_1076 = _3<br/>StorageLive(_1077)<br/>_1077 = _571<br/></td></tr><tr><td align="left">_1075 = &lt;u128 as Ord&gt;::min(move _1076, move _1077)</td></tr></table>>];
    bb455__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">455</td></tr><tr><td align="left" balign="left">StorageDead(_1077)<br/>StorageDead(_1076)<br/>StorageLive(_1078)<br/>StorageLive(_1079)<br/>_1079 = _1015<br/>StorageLive(_1080)<br/>_1080 = _1068<br/></td></tr><tr><td align="left">_1078 = &lt;u128 as Ord&gt;::max(move _1079, move _1080)</td></tr></table>>];
    bb456__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">456</td></tr><tr><td align="left" balign="left">StorageDead(_1080)<br/>StorageDead(_1079)<br/></td></tr><tr><td align="left">_1074 = &lt;u128 as Ord&gt;::min(move _1075, move _1078)</td></tr></table>>];
    bb457__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">457</td></tr><tr><td align="left" balign="left">StorageDead(_1078)<br/>StorageDead(_1075)<br/>StorageLive(_1081)<br/>_1081 = _1034<br/></td></tr><tr><td align="left">_1073 = &lt;u128 as Ord&gt;::min(move _1074, move _1081)</td></tr></table>>];
    bb458__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">458</td></tr><tr><td align="left" balign="left">StorageDead(_1081)<br/>StorageDead(_1074)<br/>StorageLive(_1082)<br/>StorageLive(_1083)<br/>StorageLive(_1084)<br/>StorageLive(_1085)<br/>_1085 = _390<br/>StorageLive(_1086)<br/>_1086 = _394<br/>StorageLive(_1087)<br/>_1087 = _392<br/>StorageLive(_1088)<br/>_1088 = _391<br/>StorageLive(_1089)<br/>_1089 = _1073<br/>StorageLive(_1090)<br/>_1090 = _575<br/>StorageLive(_1091)<br/>_1091 = _573<br/>StorageLive(_1092)<br/>_1092 = _572<br/></td></tr><tr><td align="left">_1084 = calculate_asset_transfer_for_liability_transfer(move _1085, move _1086, move _1087, move _1088, move _1089, move _1090, move _1091, move _1092)</td></tr></table>>];
    bb459__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">459</td></tr><tr><td align="left" balign="left">StorageDead(_1092)<br/>StorageDead(_1091)<br/>StorageDead(_1090)<br/>StorageDead(_1089)<br/>StorageDead(_1088)<br/>StorageDead(_1087)<br/>StorageDead(_1086)<br/>StorageDead(_1085)<br/></td></tr><tr><td align="left">_1083 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _1084)</td></tr></table>>];
    bb460__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">460</td></tr><tr><td align="left" balign="left">StorageDead(_1084)<br/>_1093 = discriminant(_1083)<br/></td></tr><tr><td align="left">switchInt(move _1093)</td></tr></table>>];
    bb461__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">461</td></tr><tr><td align="left" balign="left">StorageLive(_1097)<br/>_1097 = ((_1083 as Continue).0: u128)<br/>_1082 = _1097<br/>StorageDead(_1097)<br/>StorageDead(_1083)<br/>StorageLive(_1098)<br/>StorageLive(_1099)<br/>StorageLive(_1100)<br/>_1100 = _1073<br/>_1099 = Eq(move _1100, const 0_u128)<br/></td></tr><tr><td align="left">switchInt(move _1099)</td></tr></table>>];
    bb462__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">462</td></tr><tr><td align="left" balign="left">StorageLive(_1094)<br/>_1094 = ((_1083 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1096)<br/>_1096 = _1094<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1096)</td></tr></table>>];
    bb463__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">463</td></tr><tr><td align="left" balign="left">StorageDead(_1096)<br/>StorageDead(_1094)<br/>StorageDead(_1083)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb464__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">464</td></tr><tr><td align="left" balign="left">StorageDead(_1100)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb465__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">465</td></tr><tr><td align="left" balign="left">StorageDead(_1100)<br/>StorageLive(_1101)<br/>StorageLive(_1102)<br/>_1102 = _1082<br/>_1101 = Eq(move _1102, const 0_u128)<br/></td></tr><tr><td align="left">switchInt(move _1101)</td></tr></table>>];
    bb466__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">466</td></tr><tr><td align="left" balign="left">StorageDead(_1102)<br/>StorageLive(_1104)<br/>StorageLive(_1105)<br/>StorageLive(_1106)<br/>StorageLive(_1107)<br/>StorageLive(_1108)<br/>StorageLive(_1109)<br/>StorageLive(_1110)<br/>StorageLive(_1111)<br/>StorageLive(_1112)<br/>StorageLive(_1113)<br/>StorageLive(_1114)<br/>_1491 = const _<br/>_1114 = &amp;(*_1491)<br/>_1113 = &amp;(*_1114)<br/>_1112 = move _1113 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_1113)<br/>StorageLive(_1116)<br/>StorageLive(_1117)<br/>StorageLive(_1118)<br/>StorageLive(_1119)<br/>StorageLive(_1120)<br/>StorageLive(_1121)<br/>StorageLive(_1122)<br/>_1122 = &amp;_1<br/>_1121 = &amp;(*_1122)<br/></td></tr><tr><td align="left">_1120 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _1121)</td></tr></table>>];
    bb467__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">467</td></tr><tr><td align="left" balign="left">StorageDead(_1102)<br/>_1098 = const ()<br/>StorageDead(_1101)<br/>StorageDead(_1099)<br/>StorageDead(_1098)<br/>StorageLive(_1177)<br/>StorageLive(_1178)<br/>StorageLive(_1179)<br/>StorageLive(_1180)<br/>_1180 = _1082<br/>StorageLive(_1181)<br/>_1181 = _1073<br/>StorageLive(_1182)<br/>_1182 = _392<br/>StorageLive(_1183)<br/>_1183 = _573<br/>StorageLive(_1184)<br/>_1184 = _4<br/></td></tr><tr><td align="left">_1179 = validate_transfer_satisfies_limit_price(move _1180, move _1181, move _1182, move _1183, move _1184)</td></tr></table>>];
    bb468__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">468</td></tr><tr><td align="left" balign="left">StorageDead(_1121)<br/>StorageLive(_1123)<br/>StorageLive(_1124)<br/>StorageLive(_1125)<br/>_1125 = &amp;_2<br/>_1124 = &amp;(*_1125)<br/></td></tr><tr><td align="left">_1123 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _1124)</td></tr></table>>];
    bb469__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">469</td></tr><tr><td align="left" balign="left">StorageDead(_1124)<br/>_1119 = [move _1120, move _1123]<br/>StorageDead(_1123)<br/>StorageDead(_1120)<br/>_1118 = &amp;_1119<br/>_1117 = &amp;(*_1118)<br/>_1116 = move _1117 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_1117)<br/></td></tr><tr><td align="left">_1111 = Arguments::&lt;'_&gt;::new_v1(move _1112, move _1116)</td></tr></table>>];
    bb470__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">470</td></tr><tr><td align="left" balign="left">StorageDead(_1116)<br/>StorageDead(_1112)<br/></td></tr><tr><td align="left">_1110 = format(move _1111)</td></tr></table>>];
    bb471__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">471</td></tr><tr><td align="left" balign="left">StorageDead(_1111)<br/>StorageDead(_1125)<br/>StorageDead(_1122)<br/>StorageDead(_1119)<br/>StorageDead(_1118)<br/>StorageDead(_1114)<br/>_1109 = move _1110<br/>StorageDead(_1110)<br/>_1108 = &amp;_1109<br/>_1107 = &amp;(*_1108)<br/></td></tr><tr><td align="left">_1106 = &lt;String as Deref&gt;::deref(move _1107)</td></tr></table>>];
    bb472__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">472</td></tr><tr><td align="left" balign="left">_1105 = &amp;(*_1106)<br/>StorageDead(_1107)<br/></td></tr><tr><td align="left">_1104 = solana_program::log::sol_log(move _1105)</td></tr></table>>];
    bb473__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">473</td></tr><tr><td align="left" balign="left">StorageDead(_1105)<br/></td></tr><tr><td align="left">drop(_1109)</td></tr></table>>];
    bb474__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">474</td></tr><tr><td align="left" balign="left">StorageDead(_1109)<br/>StorageDead(_1108)<br/>StorageDead(_1106)<br/>StorageDead(_1104)<br/>StorageLive(_1126)<br/>StorageLive(_1127)<br/>StorageLive(_1128)<br/>StorageLive(_1129)<br/>StorageLive(_1130)<br/>StorageLive(_1131)<br/>StorageLive(_1132)<br/>StorageLive(_1133)<br/>StorageLive(_1134)<br/>StorageLive(_1135)<br/>StorageLive(_1136)<br/>_1490 = const _<br/>_1136 = &amp;(*_1490)<br/>_1135 = &amp;(*_1136)<br/>_1134 = move _1135 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_1135)<br/>StorageLive(_1138)<br/>StorageLive(_1139)<br/>StorageLive(_1140)<br/>StorageLive(_1141)<br/>StorageLive(_1142)<br/>StorageLive(_1143)<br/>StorageLive(_1144)<br/>_1144 = &amp;_3<br/>_1143 = &amp;(*_1144)<br/></td></tr><tr><td align="left">_1142 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u128&gt;(move _1143)</td></tr></table>>];
    bb475__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">475</td></tr><tr><td align="left" balign="left">StorageDead(_1143)<br/>StorageLive(_1145)<br/>StorageLive(_1146)<br/>StorageLive(_1147)<br/>_1147 = &amp;_571<br/>_1146 = &amp;(*_1147)<br/></td></tr><tr><td align="left">_1145 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u128&gt;(move _1146)</td></tr></table>>];
    bb476__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">476</td></tr><tr><td align="left" balign="left">StorageDead(_1146)<br/>StorageLive(_1148)<br/>StorageLive(_1149)<br/>StorageLive(_1150)<br/>_1150 = &amp;_987<br/>_1149 = &amp;(*_1150)<br/></td></tr><tr><td align="left">_1148 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u128&gt;(move _1149)</td></tr></table>>];
    bb477__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">477</td></tr><tr><td align="left" balign="left">StorageDead(_1149)<br/>_1141 = [move _1142, move _1145, move _1148]<br/>StorageDead(_1148)<br/>StorageDead(_1145)<br/>StorageDead(_1142)<br/>_1140 = &amp;_1141<br/>_1139 = &amp;(*_1140)<br/>_1138 = move _1139 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_1139)<br/></td></tr><tr><td align="left">_1133 = Arguments::&lt;'_&gt;::new_v1(move _1134, move _1138)</td></tr></table>>];
    bb478__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">478</td></tr><tr><td align="left" balign="left">StorageDead(_1138)<br/>StorageDead(_1134)<br/></td></tr><tr><td align="left">_1132 = format(move _1133)</td></tr></table>>];
    bb479__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">479</td></tr><tr><td align="left" balign="left">StorageDead(_1133)<br/>StorageDead(_1150)<br/>StorageDead(_1147)<br/>StorageDead(_1144)<br/>StorageDead(_1141)<br/>StorageDead(_1140)<br/>StorageDead(_1136)<br/>_1131 = move _1132<br/>StorageDead(_1132)<br/>_1130 = &amp;_1131<br/>_1129 = &amp;(*_1130)<br/></td></tr><tr><td align="left">_1128 = &lt;String as Deref&gt;::deref(move _1129)</td></tr></table>>];
    bb480__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">480</td></tr><tr><td align="left" balign="left">_1127 = &amp;(*_1128)<br/>StorageDead(_1129)<br/></td></tr><tr><td align="left">_1126 = solana_program::log::sol_log(move _1127)</td></tr></table>>];
    bb481__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">481</td></tr><tr><td align="left" balign="left">StorageDead(_1127)<br/></td></tr><tr><td align="left">drop(_1131)</td></tr></table>>];
    bb482__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">482</td></tr><tr><td align="left" balign="left">StorageDead(_1131)<br/>StorageDead(_1130)<br/>StorageDead(_1128)<br/>StorageDead(_1126)<br/>StorageLive(_1151)<br/>StorageLive(_1152)<br/>StorageLive(_1153)<br/>StorageLive(_1154)<br/>StorageLive(_1155)<br/>StorageLive(_1156)<br/>StorageLive(_1157)<br/>StorageLive(_1158)<br/>StorageLive(_1159)<br/>StorageLive(_1160)<br/>StorageLive(_1161)<br/>_1489 = const _<br/>_1161 = &amp;(*_1489)<br/>_1160 = &amp;(*_1161)<br/>_1159 = move _1160 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_1160)<br/>StorageLive(_1163)<br/>StorageLive(_1164)<br/>StorageLive(_1165)<br/>StorageLive(_1166)<br/>StorageLive(_1167)<br/>StorageLive(_1168)<br/>StorageLive(_1169)<br/>_1169 = &amp;_1034<br/>_1168 = &amp;(*_1169)<br/></td></tr><tr><td align="left">_1167 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u128&gt;(move _1168)</td></tr></table>>];
    bb483__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">483</td></tr><tr><td align="left" balign="left">StorageDead(_1168)<br/>StorageLive(_1170)<br/>StorageLive(_1171)<br/>StorageLive(_1172)<br/>_1172 = &amp;_1073<br/>_1171 = &amp;(*_1172)<br/></td></tr><tr><td align="left">_1170 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u128&gt;(move _1171)</td></tr></table>>];
    bb484__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">484</td></tr><tr><td align="left" balign="left">StorageDead(_1171)<br/>StorageLive(_1173)<br/>StorageLive(_1174)<br/>StorageLive(_1175)<br/>_1175 = &amp;_1082<br/>_1174 = &amp;(*_1175)<br/></td></tr><tr><td align="left">_1173 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u128&gt;(move _1174)</td></tr></table>>];
    bb485__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">485</td></tr><tr><td align="left" balign="left">StorageDead(_1174)<br/>_1166 = [move _1167, move _1170, move _1173]<br/>StorageDead(_1173)<br/>StorageDead(_1170)<br/>StorageDead(_1167)<br/>_1165 = &amp;_1166<br/>_1164 = &amp;(*_1165)<br/>_1163 = move _1164 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_1164)<br/></td></tr><tr><td align="left">_1158 = Arguments::&lt;'_&gt;::new_v1(move _1159, move _1163)</td></tr></table>>];
    bb486__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">486</td></tr><tr><td align="left" balign="left">StorageDead(_1163)<br/>StorageDead(_1159)<br/></td></tr><tr><td align="left">_1157 = format(move _1158)</td></tr></table>>];
    bb487__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">487</td></tr><tr><td align="left" balign="left">StorageDead(_1158)<br/>StorageDead(_1175)<br/>StorageDead(_1172)<br/>StorageDead(_1169)<br/>StorageDead(_1166)<br/>StorageDead(_1165)<br/>StorageDead(_1161)<br/>_1156 = move _1157<br/>StorageDead(_1157)<br/>_1155 = &amp;_1156<br/>_1154 = &amp;(*_1155)<br/></td></tr><tr><td align="left">_1153 = &lt;String as Deref&gt;::deref(move _1154)</td></tr></table>>];
    bb488__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">488</td></tr><tr><td align="left" balign="left">_1152 = &amp;(*_1153)<br/>StorageDead(_1154)<br/></td></tr><tr><td align="left">_1151 = solana_program::log::sol_log(move _1152)</td></tr></table>>];
    bb489__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">489</td></tr><tr><td align="left" balign="left">StorageDead(_1152)<br/></td></tr><tr><td align="left">drop(_1156)</td></tr></table>>];
    bb490__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">490</td></tr><tr><td align="left" balign="left">StorageDead(_1156)<br/>StorageDead(_1155)<br/>StorageDead(_1153)<br/>StorageDead(_1151)<br/>StorageLive(_1176)<br/>_1176 = error::ErrorCode::InvalidLiquidation<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _1176)<br/>StorageDead(_1176)<br/>StorageDead(_1101)<br/>StorageDead(_1099)<br/>StorageDead(_1098)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb491__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">491</td></tr><tr><td align="left" balign="left">StorageDead(_1184)<br/>StorageDead(_1183)<br/>StorageDead(_1182)<br/>StorageDead(_1181)<br/>StorageDead(_1180)<br/></td></tr><tr><td align="left">_1178 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _1179)</td></tr></table>>];
    bb492__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">492</td></tr><tr><td align="left" balign="left">StorageDead(_1179)<br/>_1185 = discriminant(_1178)<br/></td></tr><tr><td align="left">switchInt(move _1185)</td></tr></table>>];
    bb493__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">493</td></tr><tr><td align="left" balign="left">StorageLive(_1189)<br/>_1189 = ((_1178 as Continue).0: ())<br/>_1177 = _1189<br/>StorageDead(_1189)<br/>StorageDead(_1178)<br/>StorageDead(_1177)<br/>StorageLive(_1190)<br/>StorageLive(_1191)<br/>StorageLive(_1192)<br/>StorageLive(_1193)<br/>StorageLive(_1194)<br/>_1194 = &amp;(*_10)<br/>StorageLive(_1195)<br/>StorageLive(_1196)<br/>_1196 = &amp;_2<br/>_1195 = &amp;(*_1196)<br/></td></tr><tr><td align="left">_1193 = SpotMarketMap::&lt;'_&gt;::get_ref_mut(move _1194, move _1195)</td></tr></table>>];
    bb494__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">494</td></tr><tr><td align="left" balign="left">StorageLive(_1186)<br/>_1186 = ((_1178 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1188)<br/>_1188 = _1186<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1188)</td></tr></table>>];
    bb495__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">495</td></tr><tr><td align="left" balign="left">StorageDead(_1188)<br/>StorageDead(_1186)<br/>StorageDead(_1178)<br/>StorageDead(_1177)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb496__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">496</td></tr><tr><td align="left" balign="left">StorageDead(_1195)<br/>StorageDead(_1194)<br/></td></tr><tr><td align="left">_1192 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _1193)</td></tr></table>>];
    bb497__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">497</td></tr><tr><td align="left" balign="left">StorageDead(_1193)<br/>_1197 = discriminant(_1192)<br/></td></tr><tr><td align="left">switchInt(move _1197)</td></tr></table>>];
    bb498__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">498</td></tr><tr><td align="left" balign="left">StorageLive(_1201)<br/>_1201 = move ((_1192 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_1191 = move _1201<br/>StorageDead(_1201)<br/>_1552 = discriminant(_1192)<br/>StorageDead(_1196)<br/>StorageDead(_1192)<br/>StorageLive(_1202)<br/>StorageLive(_1203)<br/>StorageLive(_1204)<br/>StorageLive(_1205)<br/>_1205 = _1073<br/>StorageLive(_1206)<br/>StorageLive(_1207)<br/>_1494 = const _<br/>_1207 = &amp;(*_1494)<br/>_1206 = &amp;(*_1207)<br/>StorageLive(_1209)<br/>StorageLive(_1210)<br/>StorageLive(_1211)<br/>StorageLive(_1212)<br/>_1212 = &amp;mut _1191<br/>_1211 = &amp;mut (*_1212)<br/></td></tr><tr><td align="left">_1210 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _1211)</td></tr></table>>];
    bb499__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">499</td></tr><tr><td align="left" balign="left">StorageLive(_1198)<br/>_1198 = ((_1192 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1200)<br/>_1200 = _1198<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1200)</td></tr></table>>];
    bb500__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">500</td></tr><tr><td align="left" balign="left">StorageDead(_1200)<br/>StorageDead(_1198)<br/>_1550 = discriminant(_1192)<br/>StorageDead(_1196)<br/>StorageDead(_1192)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb501__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">501</td></tr><tr><td align="left" balign="left">_1209 = &amp;mut (*_1210)<br/>StorageDead(_1211)<br/>StorageLive(_1213)<br/>StorageLive(_1214)<br/>StorageLive(_1215)<br/>StorageLive(_1216)<br/>StorageLive(_1217)<br/>_1217 = &amp;mut (*_5)<br/>StorageLive(_1218)<br/>_1218 = _2<br/></td></tr><tr><td align="left">_1216 = User::force_get_spot_position_mut(move _1217, move _1218)</td></tr></table>>];
    bb502__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">502</td></tr><tr><td align="left" balign="left">StorageDead(_1218)<br/>StorageDead(_1217)<br/></td></tr><tr><td align="left">_1215 = &lt;std::result::Result&lt;&amp;mut SpotPosition, error::ErrorCode&gt; as Try&gt;::branch(move _1216)</td></tr></table>>];
    bb503__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">503</td></tr><tr><td align="left" balign="left">StorageDead(_1216)<br/>_1219 = discriminant(_1215)<br/></td></tr><tr><td align="left">switchInt(move _1219)</td></tr></table>>];
    bb504__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">504</td></tr><tr><td align="left" balign="left">StorageLive(_1223)<br/>_1223 = move ((_1215 as Continue).0: &amp;mut state::user::SpotPosition)<br/>_1214 = &amp;mut (*_1223)<br/>StorageDead(_1223)<br/>_1213 = &amp;mut (*_1214)<br/>StorageLive(_1224)<br/>StorageLive(_1225)<br/>_1225 = _1073<br/>_1224 = Option::&lt;u128&gt;::Some(move _1225)<br/>StorageDead(_1225)<br/></td></tr><tr><td align="left">_1204 = update_spot_balances_and_cumulative_deposits(move _1205, move _1206, move _1209, move _1213, const false, move _1224)</td></tr></table>>];
    bb505__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">505</td></tr><tr><td align="left" balign="left">StorageLive(_1220)<br/>_1220 = ((_1215 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1222)<br/>_1222 = _1220<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1222)</td></tr></table>>];
    bb506__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">506</td></tr><tr><td align="left" balign="left">StorageDead(_1222)<br/>StorageDead(_1220)<br/>StorageDead(_1213)<br/>StorageDead(_1209)<br/>StorageDead(_1206)<br/>StorageDead(_1205)<br/>StorageDead(_1204)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb507__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">507</td></tr><tr><td align="left" balign="left">StorageDead(_1224)<br/>StorageDead(_1213)<br/>StorageDead(_1209)<br/>StorageDead(_1206)<br/>StorageDead(_1205)<br/></td></tr><tr><td align="left">_1203 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _1204)</td></tr></table>>];
    bb508__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">508</td></tr><tr><td align="left" balign="left">StorageDead(_1204)<br/>_1226 = discriminant(_1203)<br/></td></tr><tr><td align="left">switchInt(move _1226)</td></tr></table>>];
    bb509__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">509</td></tr><tr><td align="left" balign="left">StorageLive(_1230)<br/>_1230 = ((_1203 as Continue).0: ())<br/>_1202 = _1230<br/>StorageDead(_1230)<br/>StorageDead(_1215)<br/>StorageDead(_1214)<br/>StorageDead(_1212)<br/>StorageDead(_1210)<br/>StorageDead(_1207)<br/>StorageDead(_1203)<br/>StorageDead(_1202)<br/>StorageLive(_1231)<br/>StorageLive(_1232)<br/>StorageLive(_1233)<br/>StorageLive(_1234)<br/>_1234 = _1073<br/>StorageLive(_1235)<br/>StorageLive(_1236)<br/>_1493 = const _<br/>_1236 = &amp;(*_1493)<br/>_1235 = &amp;(*_1236)<br/>StorageLive(_1238)<br/>StorageLive(_1239)<br/>StorageLive(_1240)<br/>StorageLive(_1241)<br/>_1241 = &amp;mut _1191<br/>_1240 = &amp;mut (*_1241)<br/></td></tr><tr><td align="left">_1239 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _1240)</td></tr></table>>];
    bb510__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">510</td></tr><tr><td align="left" balign="left">StorageLive(_1227)<br/>_1227 = ((_1203 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1229)<br/>_1229 = _1227<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1229)</td></tr></table>>];
    bb511__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">511</td></tr><tr><td align="left" balign="left">StorageDead(_1229)<br/>StorageDead(_1227)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb512__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">512</td></tr><tr><td align="left" balign="left">_1238 = &amp;mut (*_1239)<br/>StorageDead(_1240)<br/>StorageLive(_1242)<br/>StorageLive(_1243)<br/>StorageLive(_1244)<br/>StorageLive(_1245)<br/>StorageLive(_1246)<br/>_1246 = &amp;mut (*_7)<br/>StorageLive(_1247)<br/>_1247 = _2<br/></td></tr><tr><td align="left">_1245 = User::force_get_spot_position_mut(move _1246, move _1247)</td></tr></table>>];
    bb513__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">513</td></tr><tr><td align="left" balign="left">StorageDead(_1247)<br/>StorageDead(_1246)<br/></td></tr><tr><td align="left">_1244 = &lt;std::result::Result&lt;&amp;mut SpotPosition, error::ErrorCode&gt; as Try&gt;::branch(move _1245)</td></tr></table>>];
    bb514__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">514</td></tr><tr><td align="left" balign="left">StorageDead(_1245)<br/>_1248 = discriminant(_1244)<br/></td></tr><tr><td align="left">switchInt(move _1248)</td></tr></table>>];
    bb515__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">515</td></tr><tr><td align="left" balign="left">StorageLive(_1252)<br/>_1252 = move ((_1244 as Continue).0: &amp;mut state::user::SpotPosition)<br/>_1243 = &amp;mut (*_1252)<br/>StorageDead(_1252)<br/>_1242 = &amp;mut (*_1243)<br/>StorageLive(_1253)<br/>StorageLive(_1254)<br/>_1254 = _1073<br/>_1253 = Option::&lt;u128&gt;::Some(move _1254)<br/>StorageDead(_1254)<br/></td></tr><tr><td align="left">_1233 = update_spot_balances_and_cumulative_deposits(move _1234, move _1235, move _1238, move _1242, const false, move _1253)</td></tr></table>>];
    bb516__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">516</td></tr><tr><td align="left" balign="left">StorageLive(_1249)<br/>_1249 = ((_1244 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1251)<br/>_1251 = _1249<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1251)</td></tr></table>>];
    bb517__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">517</td></tr><tr><td align="left" balign="left">StorageDead(_1251)<br/>StorageDead(_1249)<br/>StorageDead(_1242)<br/>StorageDead(_1238)<br/>StorageDead(_1235)<br/>StorageDead(_1234)<br/>StorageDead(_1233)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb518__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">518</td></tr><tr><td align="left" balign="left">StorageDead(_1253)<br/>StorageDead(_1242)<br/>StorageDead(_1238)<br/>StorageDead(_1235)<br/>StorageDead(_1234)<br/></td></tr><tr><td align="left">_1232 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _1233)</td></tr></table>>];
    bb519__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">519</td></tr><tr><td align="left" balign="left">StorageDead(_1233)<br/>_1255 = discriminant(_1232)<br/></td></tr><tr><td align="left">switchInt(move _1255)</td></tr></table>>];
    bb520__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">520</td></tr><tr><td align="left" balign="left">StorageLive(_1259)<br/>_1259 = ((_1232 as Continue).0: ())<br/>_1231 = _1259<br/>StorageDead(_1259)<br/>StorageDead(_1244)<br/>StorageDead(_1243)<br/>StorageDead(_1241)<br/>StorageDead(_1239)<br/>StorageDead(_1236)<br/>StorageDead(_1232)<br/>StorageDead(_1231)<br/>_1190 = const ()<br/></td></tr><tr><td align="left">drop(_1191)</td></tr></table>>];
    bb521__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">521</td></tr><tr><td align="left" balign="left">StorageLive(_1256)<br/>_1256 = ((_1232 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1258)<br/>_1258 = _1256<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1258)</td></tr></table>>];
    bb522__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">522</td></tr><tr><td align="left" balign="left">StorageDead(_1258)<br/>StorageDead(_1256)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb523__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">523</td></tr><tr><td align="left" balign="left">StorageDead(_1191)<br/>StorageDead(_1190)<br/>StorageLive(_1260)<br/>StorageLive(_1261)<br/>StorageLive(_1262)<br/>StorageLive(_1263)<br/>StorageLive(_1264)<br/>_1264 = &amp;(*_9)<br/>StorageLive(_1265)<br/>StorageLive(_1266)<br/>_1266 = &amp;_1<br/>_1265 = &amp;(*_1266)<br/></td></tr><tr><td align="left">_1263 = PerpMarketMap::&lt;'_&gt;::get_ref_mut(move _1264, move _1265)</td></tr></table>>];
    bb524__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">524</td></tr><tr><td align="left" balign="left">StorageDead(_1265)<br/>StorageDead(_1264)<br/></td></tr><tr><td align="left">_1262 = &lt;std::result::Result&lt;RefMut&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _1263)</td></tr></table>>];
    bb525__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">525</td></tr><tr><td align="left" balign="left">StorageDead(_1263)<br/>_1267 = discriminant(_1262)<br/></td></tr><tr><td align="left">switchInt(move _1267)</td></tr></table>>];
    bb526__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">526</td></tr><tr><td align="left" balign="left">StorageLive(_1271)<br/>_1271 = move ((_1262 as Continue).0: std::cell::RefMut&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_1261 = move _1271<br/>StorageDead(_1271)<br/>_1556 = discriminant(_1262)<br/>StorageDead(_1266)<br/>StorageDead(_1262)<br/>StorageLive(_1272)<br/>StorageLive(_1273)<br/>StorageLive(_1274)<br/>StorageLive(_1275)<br/>_1275 = &amp;mut (*_7)<br/>StorageLive(_1276)<br/>_1276 = _1<br/></td></tr><tr><td align="left">_1274 = User::force_get_perp_position_mut(move _1275, move _1276)</td></tr></table>>];
    bb527__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">527</td></tr><tr><td align="left" balign="left">StorageLive(_1268)<br/>_1268 = ((_1262 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1270)<br/>_1270 = _1268<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1270)</td></tr></table>>];
    bb528__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">528</td></tr><tr><td align="left" balign="left">StorageDead(_1270)<br/>StorageDead(_1268)<br/>_1554 = discriminant(_1262)<br/>StorageDead(_1266)<br/>StorageDead(_1262)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb529__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">529</td></tr><tr><td align="left" balign="left">StorageDead(_1276)<br/>StorageDead(_1275)<br/></td></tr><tr><td align="left">_1273 = &lt;std::result::Result&lt;&amp;mut PerpPosition, error::ErrorCode&gt; as Try&gt;::branch(move _1274)</td></tr></table>>];
    bb530__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">530</td></tr><tr><td align="left" balign="left">StorageDead(_1274)<br/>_1277 = discriminant(_1273)<br/></td></tr><tr><td align="left">switchInt(move _1277)</td></tr></table>>];
    bb531__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">531</td></tr><tr><td align="left" balign="left">StorageLive(_1281)<br/>_1281 = move ((_1273 as Continue).0: &amp;mut state::user::PerpPosition)<br/>_1272 = move _1281<br/>StorageDead(_1281)<br/>StorageDead(_1273)<br/>StorageLive(_1282)<br/>StorageLive(_1283)<br/>StorageLive(_1284)<br/>StorageLive(_1285)<br/>_1285 = &amp;mut (*_1272)<br/>StorageLive(_1286)<br/>StorageLive(_1287)<br/>StorageLive(_1288)<br/>StorageLive(_1289)<br/>_1289 = &amp;mut _1261<br/>_1288 = &amp;mut (*_1289)<br/></td></tr><tr><td align="left">_1287 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _1288)</td></tr></table>>];
    bb532__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">532</td></tr><tr><td align="left" balign="left">StorageLive(_1278)<br/>_1278 = ((_1273 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1280)<br/>_1280 = _1278<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1280)</td></tr></table>>];
    bb533__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">533</td></tr><tr><td align="left" balign="left">StorageDead(_1280)<br/>StorageDead(_1278)<br/>StorageDead(_1273)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb534__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">534</td></tr><tr><td align="left" balign="left">_1286 = &amp;mut (*_1287)<br/>StorageDead(_1288)<br/>StorageLive(_1290)<br/>StorageLive(_1291)<br/>StorageLive(_1292)<br/>StorageLive(_1293)<br/>_1293 = _1082<br/></td></tr><tr><td align="left">_1292 = &lt;u128 as Cast&gt;::cast::&lt;i64&gt;(move _1293)</td></tr></table>>];
    bb535__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">535</td></tr><tr><td align="left" balign="left">StorageDead(_1293)<br/></td></tr><tr><td align="left">_1291 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _1292)</td></tr></table>>];
    bb536__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">536</td></tr><tr><td align="left" balign="left">StorageDead(_1292)<br/>_1294 = discriminant(_1291)<br/></td></tr><tr><td align="left">switchInt(move _1294)</td></tr></table>>];
    bb537__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">537</td></tr><tr><td align="left" balign="left">StorageLive(_1298)<br/>_1298 = ((_1291 as Continue).0: i64)<br/>_1290 = _1298<br/>StorageDead(_1298)<br/></td></tr><tr><td align="left">_1284 = update_quote_asset_amount(move _1285, move _1286, move _1290)</td></tr></table>>];
    bb538__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">538</td></tr><tr><td align="left" balign="left">StorageLive(_1295)<br/>_1295 = ((_1291 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1297)<br/>_1297 = _1295<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1297)</td></tr></table>>];
    bb539__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">539</td></tr><tr><td align="left" balign="left">StorageDead(_1297)<br/>StorageDead(_1295)<br/>StorageDead(_1290)<br/>StorageDead(_1286)<br/>StorageDead(_1285)<br/>StorageDead(_1284)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb540__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">540</td></tr><tr><td align="left" balign="left">StorageDead(_1290)<br/>StorageDead(_1286)<br/>StorageDead(_1285)<br/></td></tr><tr><td align="left">_1283 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _1284)</td></tr></table>>];
    bb541__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">541</td></tr><tr><td align="left" balign="left">StorageDead(_1284)<br/>_1299 = discriminant(_1283)<br/></td></tr><tr><td align="left">switchInt(move _1299)</td></tr></table>>];
    bb542__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">542</td></tr><tr><td align="left" balign="left">StorageLive(_1303)<br/>_1303 = ((_1283 as Continue).0: ())<br/>_1282 = _1303<br/>StorageDead(_1303)<br/>StorageDead(_1291)<br/>StorageDead(_1289)<br/>StorageDead(_1287)<br/>StorageDead(_1283)<br/>StorageDead(_1282)<br/>StorageLive(_1304)<br/>StorageLive(_1305)<br/>StorageLive(_1306)<br/>StorageLive(_1307)<br/>_1307 = &amp;mut (*_5)<br/>StorageLive(_1308)<br/>_1308 = _1<br/></td></tr><tr><td align="left">_1306 = User::get_perp_position_mut(move _1307, move _1308)</td></tr></table>>];
    bb543__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">543</td></tr><tr><td align="left" balign="left">StorageLive(_1300)<br/>_1300 = ((_1283 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1302)<br/>_1302 = _1300<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1302)</td></tr></table>>];
    bb544__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">544</td></tr><tr><td align="left" balign="left">StorageDead(_1302)<br/>StorageDead(_1300)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb545__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">545</td></tr><tr><td align="left" balign="left">StorageDead(_1308)<br/>StorageDead(_1307)<br/></td></tr><tr><td align="left">_1305 = &lt;std::result::Result&lt;&amp;mut PerpPosition, error::ErrorCode&gt; as Try&gt;::branch(move _1306)</td></tr></table>>];
    bb546__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">546</td></tr><tr><td align="left" balign="left">StorageDead(_1306)<br/>_1309 = discriminant(_1305)<br/></td></tr><tr><td align="left">switchInt(move _1309)</td></tr></table>>];
    bb547__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">547</td></tr><tr><td align="left" balign="left">StorageLive(_1313)<br/>_1313 = move ((_1305 as Continue).0: &amp;mut state::user::PerpPosition)<br/>_1304 = move _1313<br/>StorageDead(_1313)<br/>StorageDead(_1305)<br/>StorageLive(_1314)<br/>StorageLive(_1315)<br/>StorageLive(_1316)<br/>StorageLive(_1317)<br/>_1317 = &amp;mut (*_1304)<br/>StorageLive(_1318)<br/>StorageLive(_1319)<br/>StorageLive(_1320)<br/>StorageLive(_1321)<br/>_1321 = &amp;mut _1261<br/>_1320 = &amp;mut (*_1321)<br/></td></tr><tr><td align="left">_1319 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _1320)</td></tr></table>>];
    bb548__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">548</td></tr><tr><td align="left" balign="left">StorageLive(_1310)<br/>_1310 = ((_1305 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1312)<br/>_1312 = _1310<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1312)</td></tr></table>>];
    bb549__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">549</td></tr><tr><td align="left" balign="left">StorageDead(_1312)<br/>StorageDead(_1310)<br/>StorageDead(_1305)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb550__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">550</td></tr><tr><td align="left" balign="left">_1318 = &amp;mut (*_1319)<br/>StorageDead(_1320)<br/>StorageLive(_1322)<br/>StorageLive(_1323)<br/>StorageLive(_1324)<br/>StorageLive(_1325)<br/>StorageLive(_1326)<br/>_1326 = _1082<br/></td></tr><tr><td align="left">_1325 = &lt;u128 as Cast&gt;::cast::&lt;i64&gt;(move _1326)</td></tr></table>>];
    bb551__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">551</td></tr><tr><td align="left" balign="left">StorageDead(_1326)<br/></td></tr><tr><td align="left">_1324 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _1325)</td></tr></table>>];
    bb552__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">552</td></tr><tr><td align="left" balign="left">StorageDead(_1325)<br/>_1327 = discriminant(_1324)<br/></td></tr><tr><td align="left">switchInt(move _1327)</td></tr></table>>];
    bb553__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">553</td></tr><tr><td align="left" balign="left">StorageLive(_1331)<br/>_1331 = ((_1324 as Continue).0: i64)<br/>_1323 = _1331<br/>StorageDead(_1331)<br/>_1332 = Eq(_1323, const i64::MIN)<br/></td></tr><tr><td align="left">assert(!move _1332, &quot;attempt to negate `{}`, which would overflow&quot;, _1323)</td></tr></table>>];
    bb554__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">554</td></tr><tr><td align="left" balign="left">StorageLive(_1328)<br/>_1328 = ((_1324 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1330)<br/>_1330 = _1328<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1330)</td></tr></table>>];
    bb555__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">555</td></tr><tr><td align="left" balign="left">StorageDead(_1330)<br/>StorageDead(_1328)<br/>StorageDead(_1323)<br/>StorageDead(_1322)<br/>StorageDead(_1318)<br/>StorageDead(_1317)<br/>StorageDead(_1316)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb556__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">556</td></tr><tr><td align="left" balign="left">_1322 = Neg(move _1323)<br/>StorageDead(_1323)<br/></td></tr><tr><td align="left">_1316 = update_quote_asset_amount(move _1317, move _1318, move _1322)</td></tr></table>>];
    bb557__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">557</td></tr><tr><td align="left" balign="left">StorageDead(_1322)<br/>StorageDead(_1318)<br/>StorageDead(_1317)<br/></td></tr><tr><td align="left">_1315 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _1316)</td></tr></table>>];
    bb558__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">558</td></tr><tr><td align="left" balign="left">StorageDead(_1316)<br/>_1333 = discriminant(_1315)<br/></td></tr><tr><td align="left">switchInt(move _1333)</td></tr></table>>];
    bb559__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">559</td></tr><tr><td align="left" balign="left">StorageLive(_1337)<br/>_1337 = ((_1315 as Continue).0: ())<br/>_1314 = _1337<br/>StorageDead(_1337)<br/>StorageDead(_1324)<br/>StorageDead(_1321)<br/>StorageDead(_1319)<br/>StorageDead(_1315)<br/>StorageDead(_1314)<br/>_1260 = const ()<br/>StorageDead(_1304)<br/>StorageDead(_1272)<br/></td></tr><tr><td align="left">drop(_1261)</td></tr></table>>];
    bb560__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">560</td></tr><tr><td align="left" balign="left">StorageLive(_1334)<br/>_1334 = ((_1315 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1336)<br/>_1336 = _1334<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1336)</td></tr></table>>];
    bb561__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">561</td></tr><tr><td align="left" balign="left">StorageDead(_1336)<br/>StorageDead(_1334)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb562__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">562</td></tr><tr><td align="left" balign="left">StorageDead(_1261)<br/>StorageDead(_1260)<br/>StorageLive(_1339)<br/>StorageLive(_1340)<br/>StorageLive(_1341)<br/>StorageLive(_1342)<br/>_1342 = &amp;(*_5)<br/>StorageLive(_1343)<br/>_1343 = &amp;(*_9)<br/>StorageLive(_1344)<br/>_1344 = &amp;(*_10)<br/>StorageLive(_1345)<br/>_1345 = &amp;mut (*_11)<br/>StorageLive(_1346)<br/>_1346 = _14<br/>StorageLive(_1347)<br/>_1347 = _968<br/></td></tr><tr><td align="left">_1341 = calculate_margin_freed(move _1342, move _1343, move _1344, move _1345, move _1346, move _1347)</td></tr></table>>];
    bb563__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">563</td></tr><tr><td align="left" balign="left">StorageDead(_1347)<br/>StorageDead(_1346)<br/>StorageDead(_1345)<br/>StorageDead(_1344)<br/>StorageDead(_1343)<br/>StorageDead(_1342)<br/></td></tr><tr><td align="left">_1340 = &lt;std::result::Result&lt;(u64, MarginCalculation), error::ErrorCode&gt; as Try&gt;::branch(move _1341)</td></tr></table>>];
    bb564__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">564</td></tr><tr><td align="left" balign="left">StorageDead(_1341)<br/>_1348 = discriminant(_1340)<br/></td></tr><tr><td align="left">switchInt(move _1348)</td></tr></table>>];
    bb565__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">565</td></tr><tr><td align="left" balign="left">StorageLive(_1352)<br/>_1352 = ((_1340 as Continue).0: (u64, state::margin_calculation::MarginCalculation))<br/>_1339 = _1352<br/>StorageDead(_1352)<br/>StorageLive(_1338)<br/>_1338 = (_1339.0: u64)<br/>StorageDead(_1340)<br/>StorageDead(_1339)<br/>StorageLive(_1353)<br/>StorageLive(_1354)<br/>StorageLive(_1355)<br/>StorageLive(_1356)<br/>_1356 = _818<br/>StorageLive(_1357)<br/>_1357 = _1338<br/></td></tr><tr><td align="left">_1355 = &lt;u64 as SafeMath&gt;::safe_add(move _1356, move _1357)</td></tr></table>>];
    bb566__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">566</td></tr><tr><td align="left" balign="left">StorageLive(_1349)<br/>_1349 = ((_1340 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1351)<br/>_1351 = _1349<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1351)</td></tr></table>>];
    bb567__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">567</td></tr><tr><td align="left" balign="left">StorageDead(_1351)<br/>StorageDead(_1349)<br/>StorageDead(_1340)<br/>StorageDead(_1339)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb568__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">568</td></tr><tr><td align="left" balign="left">StorageDead(_1357)<br/>StorageDead(_1356)<br/></td></tr><tr><td align="left">_1354 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _1355)</td></tr></table>>];
    bb569__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">569</td></tr><tr><td align="left" balign="left">StorageDead(_1355)<br/>_1358 = discriminant(_1354)<br/></td></tr><tr><td align="left">switchInt(move _1358)</td></tr></table>>];
    bb570__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">570</td></tr><tr><td align="left" balign="left">StorageLive(_1362)<br/>_1362 = ((_1354 as Continue).0: u64)<br/>_1353 = _1362<br/>StorageDead(_1362)<br/>_818 = move _1353<br/>StorageDead(_1353)<br/>StorageDead(_1354)<br/>StorageLive(_1363)<br/>StorageLive(_1364)<br/>StorageLive(_1365)<br/>StorageLive(_1366)<br/>_1366 = &amp;mut (*_5)<br/>StorageLive(_1367)<br/>_1367 = _1338<br/></td></tr><tr><td align="left">_1365 = User::increment_margin_freed(move _1366, move _1367)</td></tr></table>>];
    bb571__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">571</td></tr><tr><td align="left" balign="left">StorageLive(_1359)<br/>_1359 = ((_1354 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1361)<br/>_1361 = _1359<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1361)</td></tr></table>>];
    bb572__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">572</td></tr><tr><td align="left" balign="left">StorageDead(_1361)<br/>StorageDead(_1359)<br/>StorageDead(_1353)<br/>StorageDead(_1354)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb573__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">573</td></tr><tr><td align="left" balign="left">StorageDead(_1367)<br/>StorageDead(_1366)<br/></td></tr><tr><td align="left">_1364 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _1365)</td></tr></table>>];
    bb574__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">574</td></tr><tr><td align="left" balign="left">StorageDead(_1365)<br/>_1368 = discriminant(_1364)<br/></td></tr><tr><td align="left">switchInt(move _1368)</td></tr></table>>];
    bb575__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">575</td></tr><tr><td align="left" balign="left">StorageLive(_1372)<br/>_1372 = ((_1364 as Continue).0: ())<br/>_1363 = _1372<br/>StorageDead(_1372)<br/>StorageDead(_1364)<br/>StorageDead(_1363)<br/>StorageLive(_1373)<br/>StorageLive(_1374)<br/>StorageLive(_1375)<br/>_1375 = _1073<br/>StorageLive(_1376)<br/>_1376 = _987<br/>_1374 = Ge(move _1375, move _1376)<br/></td></tr><tr><td align="left">switchInt(move _1374)</td></tr></table>>];
    bb576__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">576</td></tr><tr><td align="left" balign="left">StorageLive(_1369)<br/>_1369 = ((_1364 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1371)<br/>_1371 = _1369<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1371)</td></tr></table>>];
    bb577__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">577</td></tr><tr><td align="left" balign="left">StorageDead(_1371)<br/>StorageDead(_1369)<br/>StorageDead(_1364)<br/>StorageDead(_1363)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb578__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">578</td></tr><tr><td align="left" balign="left">StorageDead(_1376)<br/>StorageDead(_1375)<br/>StorageLive(_1377)<br/>StorageLive(_1378)<br/>_1378 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_1377 = User::exit_liquidation(move _1378)</td></tr></table>>];
    bb579__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">579</td></tr><tr><td align="left" balign="left">StorageDead(_1376)<br/>StorageDead(_1375)<br/>StorageLive(_1379)<br/>StorageLive(_1380)<br/>_1380 = &amp;(*_5)<br/></td></tr><tr><td align="left">_1379 = is_user_bankrupt(move _1380)</td></tr></table>>];
    bb580__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">580</td></tr><tr><td align="left" balign="left">StorageDead(_1378)<br/>StorageDead(_1377)<br/>_1373 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb581__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">581</td></tr><tr><td align="left">switchInt(move _1379)</td></tr></table>>];
    bb582__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">582</td></tr><tr><td align="left" balign="left">StorageDead(_1380)<br/>StorageLive(_1381)<br/>StorageLive(_1382)<br/>_1382 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_1381 = User::enter_bankruptcy(move _1382)</td></tr></table>>];
    bb583__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">583</td></tr><tr><td align="left" balign="left">StorageDead(_1382)<br/>StorageDead(_1381)<br/>_1373 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb584__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">584</td></tr><tr><td align="left" balign="left">StorageDead(_1380)<br/>_1373 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb585__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">585</td></tr><tr><td align="left" balign="left">StorageDead(_1379)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb586__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">586</td></tr><tr><td align="left" balign="left">StorageDead(_1374)<br/>StorageDead(_1373)<br/>StorageLive(_1383)<br/>StorageLive(_1384)<br/>StorageLive(_1385)<br/>StorageLive(_1386)<br/>_1386 = &amp;(*_7)<br/>StorageLive(_1387)<br/>_1387 = &amp;(*_9)<br/>StorageLive(_1388)<br/>_1388 = &amp;(*_10)<br/>StorageLive(_1389)<br/>_1389 = &amp;mut (*_11)<br/></td></tr><tr><td align="left">_1385 = math::margin::meets_initial_margin_requirement(move _1386, move _1387, move _1388, move _1389)</td></tr></table>>];
    bb587__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">587</td></tr><tr><td align="left" balign="left">StorageDead(_1389)<br/>StorageDead(_1388)<br/>StorageDead(_1387)<br/>StorageDead(_1386)<br/></td></tr><tr><td align="left">_1384 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _1385)</td></tr></table>>];
    bb588__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">588</td></tr><tr><td align="left" balign="left">StorageDead(_1385)<br/>_1390 = discriminant(_1384)<br/></td></tr><tr><td align="left">switchInt(move _1390)</td></tr></table>>];
    bb589__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">589</td></tr><tr><td align="left" balign="left">StorageLive(_1394)<br/>_1394 = ((_1384 as Continue).0: bool)<br/>_1383 = _1394<br/>StorageDead(_1394)<br/>StorageDead(_1384)<br/>StorageLive(_1395)<br/>StorageLive(_1396)<br/>StorageLive(_1397)<br/>StorageLive(_1398)<br/>_1398 = _1383<br/></td></tr><tr><td align="left">switchInt(move _1398)</td></tr></table>>];
    bb590__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">590</td></tr><tr><td align="left" balign="left">StorageLive(_1391)<br/>_1391 = ((_1384 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1393)<br/>_1393 = _1391<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1393)</td></tr></table>>];
    bb591__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">591</td></tr><tr><td align="left" balign="left">StorageDead(_1393)<br/>StorageDead(_1391)<br/>StorageDead(_1384)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb592__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">592</td></tr><tr><td align="left" balign="left">StorageLive(_1399)<br/>_1399 = ()<br/>_1397 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _1399)<br/>StorageDead(_1399)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb593__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">593</td></tr><tr><td align="left" balign="left">StorageLive(_1400)<br/>_1400 = error::ErrorCode::InsufficientCollateral<br/>StorageLive(_1401)<br/>StorageLive(_1402)<br/>StorageLive(_1403)<br/>StorageLive(_1404)<br/>StorageLive(_1405)<br/>StorageLive(_1406)<br/>StorageLive(_1407)<br/>StorageLive(_1408)<br/>StorageLive(_1409)<br/>StorageLive(_1410)<br/>StorageLive(_1411)<br/>_1492 = const _<br/>_1411 = &amp;(*_1492)<br/>_1410 = &amp;(*_1411)<br/>_1409 = move _1410 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_1410)<br/>StorageLive(_1413)<br/>StorageLive(_1414)<br/>StorageLive(_1415)<br/>StorageLive(_1416)<br/>StorageLive(_1417)<br/>StorageLive(_1418)<br/>StorageLive(_1419)<br/>_1419 = &amp;_1400<br/>_1418 = &amp;(*_1419)<br/></td></tr><tr><td align="left">_1417 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _1418)</td></tr></table>>];
    bb594__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">594</td></tr><tr><td align="left" balign="left">StorageDead(_1418)<br/>_1416 = [move _1417]<br/>StorageDead(_1417)<br/>_1415 = &amp;_1416<br/>_1414 = &amp;(*_1415)<br/>_1413 = move _1414 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_1414)<br/></td></tr><tr><td align="left">_1408 = Arguments::&lt;'_&gt;::new_v1(move _1409, move _1413)</td></tr></table>>];
    bb595__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">595</td></tr><tr><td align="left" balign="left">StorageDead(_1413)<br/>StorageDead(_1409)<br/></td></tr><tr><td align="left">_1407 = format(move _1408)</td></tr></table>>];
    bb596__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">596</td></tr><tr><td align="left" balign="left">StorageDead(_1408)<br/>StorageDead(_1419)<br/>StorageDead(_1416)<br/>StorageDead(_1415)<br/>StorageDead(_1411)<br/>_1406 = move _1407<br/>StorageDead(_1407)<br/>_1405 = &amp;_1406<br/>_1404 = &amp;(*_1405)<br/></td></tr><tr><td align="left">_1403 = &lt;String as Deref&gt;::deref(move _1404)</td></tr></table>>];
    bb597__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">597</td></tr><tr><td align="left" balign="left">_1402 = &amp;(*_1403)<br/>StorageDead(_1404)<br/></td></tr><tr><td align="left">_1401 = solana_program::log::sol_log(move _1402)</td></tr></table>>];
    bb598__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">598</td></tr><tr><td align="left" balign="left">StorageDead(_1402)<br/></td></tr><tr><td align="left">drop(_1406)</td></tr></table>>];
    bb599__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">599</td></tr><tr><td align="left" balign="left">StorageDead(_1406)<br/>StorageDead(_1405)<br/>StorageDead(_1403)<br/>StorageDead(_1401)<br/>StorageLive(_1420)<br/>StorageLive(_1421)<br/>StorageLive(_1422)<br/>_1422 = const &quot;Liquidator doesnt have enough collateral to take over borrow&quot;<br/>_1421 = &amp;(*_1422)<br/></td></tr><tr><td align="left">_1420 = solana_program::log::sol_log(move _1421)</td></tr></table>>];
    bb600__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">600</td></tr><tr><td align="left" balign="left">StorageDead(_1421)<br/>StorageDead(_1422)<br/>StorageDead(_1420)<br/>StorageLive(_1423)<br/>_1423 = _1400<br/>_1397 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _1423)<br/>StorageDead(_1423)<br/>StorageDead(_1400)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb601__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">601</td></tr><tr><td align="left" balign="left">StorageDead(_1398)<br/></td></tr><tr><td align="left">_1396 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _1397)</td></tr></table>>];
    bb602__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">602</td></tr><tr><td align="left" balign="left">StorageDead(_1397)<br/>_1424 = discriminant(_1396)<br/></td></tr><tr><td align="left">switchInt(move _1424)</td></tr></table>>];
    bb603__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">603</td></tr><tr><td align="left" balign="left">StorageLive(_1428)<br/>_1428 = ((_1396 as Continue).0: ())<br/>_1395 = _1428<br/>StorageDead(_1428)<br/>StorageDead(_1396)<br/>StorageDead(_1395)<br/>StorageLive(_1429)<br/>StorageLive(_1430)<br/>StorageLive(_1431)<br/>StorageLive(_1432)<br/>StorageLive(_1433)<br/>_1433 = &amp;(*_9)<br/>StorageLive(_1434)<br/>StorageLive(_1435)<br/>_1435 = &amp;_1<br/>_1434 = &amp;(*_1435)<br/></td></tr><tr><td align="left">_1432 = PerpMarketMap::&lt;'_&gt;::get_ref_mut(move _1433, move _1434)</td></tr></table>>];
    bb604__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">604</td></tr><tr><td align="left" balign="left">StorageLive(_1425)<br/>_1425 = ((_1396 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1427)<br/>_1427 = _1425<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1427)</td></tr></table>>];
    bb605__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">605</td></tr><tr><td align="left" balign="left">StorageDead(_1427)<br/>StorageDead(_1425)<br/>StorageDead(_1396)<br/>StorageDead(_1395)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb606__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">606</td></tr><tr><td align="left" balign="left">StorageDead(_1434)<br/>StorageDead(_1433)<br/></td></tr><tr><td align="left">_1431 = &lt;std::result::Result&lt;RefMut&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _1432)</td></tr></table>>];
    bb607__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">607</td></tr><tr><td align="left" balign="left">StorageDead(_1432)<br/>_1436 = discriminant(_1431)<br/></td></tr><tr><td align="left">switchInt(move _1436)</td></tr></table>>];
    bb608__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">608</td></tr><tr><td align="left" balign="left">StorageLive(_1440)<br/>_1440 = move ((_1431 as Continue).0: std::cell::RefMut&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_1430 = move _1440<br/>StorageDead(_1440)<br/>_1560 = discriminant(_1431)<br/>StorageDead(_1435)<br/>StorageDead(_1431)<br/>StorageLive(_1441)<br/>StorageLive(_1442)<br/>StorageLive(_1443)<br/>StorageLive(_1444)<br/>_1444 = &amp;mut (*_11)<br/>StorageLive(_1445)<br/>StorageLive(_1446)<br/>StorageLive(_1447)<br/>StorageLive(_1448)<br/>StorageLive(_1449)<br/>StorageLive(_1450)<br/>_1450 = &amp;_1430<br/></td></tr><tr><td align="left">_1449 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _1450)</td></tr></table>>];
    bb609__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">609</td></tr><tr><td align="left" balign="left">StorageLive(_1437)<br/>_1437 = ((_1431 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1439)<br/>_1439 = _1437<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1439)</td></tr></table>>];
    bb610__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">610</td></tr><tr><td align="left" balign="left">StorageDead(_1439)<br/>StorageDead(_1437)<br/>_1558 = discriminant(_1431)<br/>StorageDead(_1435)<br/>StorageDead(_1431)<br/>StorageDead(_1430)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb611__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">611</td></tr><tr><td align="left" balign="left">_1448 = &amp;(*_1449)<br/>StorageDead(_1450)<br/></td></tr><tr><td align="left">_1447 = PerpMarket::oracle_id(move _1448)</td></tr></table>>];
    bb612__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">612</td></tr><tr><td align="left" balign="left">StorageDead(_1448)<br/>_1446 = &amp;_1447<br/>_1445 = &amp;(*_1446)<br/></td></tr><tr><td align="left">_1443 = OracleMap::&lt;'_&gt;::get_price_data(move _1444, move _1445)</td></tr></table>>];
    bb613__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">613</td></tr><tr><td align="left" balign="left">StorageDead(_1445)<br/>StorageDead(_1444)<br/></td></tr><tr><td align="left">_1442 = &lt;std::result::Result&lt;&amp;OraclePriceData, error::ErrorCode&gt; as Try&gt;::branch(move _1443)</td></tr></table>>];
    bb614__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">614</td></tr><tr><td align="left" balign="left">StorageDead(_1443)<br/>_1451 = discriminant(_1442)<br/></td></tr><tr><td align="left">switchInt(move _1451)</td></tr></table>>];
    bb615__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">615</td></tr><tr><td align="left" balign="left">StorageLive(_1455)<br/>_1455 = ((_1442 as Continue).0: &amp;state::oracle::OraclePriceData)<br/>_1441 = _1455<br/>StorageDead(_1455)<br/>_1429 = ((*_1441).0: i64)<br/></td></tr><tr><td align="left">drop(_1430)</td></tr></table>>];
    bb616__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">616</td></tr><tr><td align="left" balign="left">StorageLive(_1452)<br/>_1452 = ((_1442 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1454)<br/>_1454 = _1452<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1454)</td></tr></table>>];
    bb617__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">617</td></tr><tr><td align="left" balign="left">StorageDead(_1454)<br/>StorageDead(_1452)<br/></td></tr><tr><td align="left">drop(_1430)</td></tr></table>>];
    bb618__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">618</td></tr><tr><td align="left" balign="left">StorageDead(_1430)<br/>StorageDead(_1449)<br/>StorageDead(_1447)<br/>StorageDead(_1446)<br/>StorageDead(_1442)<br/>StorageDead(_1441)<br/>StorageLive(_1456)<br/>StorageLive(_1457)<br/>StorageLive(_1458)<br/>StorageLive(_1459)<br/>StorageLive(_1460)<br/>StorageLive(_1461)<br/>StorageLive(_1462)<br/>StorageLive(_1463)<br/>StorageLive(_1464)<br/>StorageLive(_1465)<br/>StorageLive(_1466)<br/>StorageLive(_1467)<br/>StorageLive(_1468)<br/>StorageLive(_1469)<br/>StorageLive(_1470)<br/>_1470 = _12<br/>StorageLive(_1471)<br/>_1471 = _808<br/>StorageLive(_1472)<br/>_1472 = LiquidationType::LiquidateBorrowForPerpPnl<br/>StorageLive(_1473)<br/>_1473 = (*_6)<br/>StorageLive(_1474)<br/>_1474 = (*_8)<br/>StorageLive(_1475)<br/>_1475 = (_753.3: u128)<br/>StorageLive(_1476)<br/>_1476 = (_753.1: i128)<br/>StorageLive(_1477)<br/>StorageLive(_1478)<br/>_1478 = &amp;(*_5)<br/></td></tr><tr><td align="left">_1477 = User::is_bankrupt(move _1478)</td></tr></table>>];
    bb619__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">619</td></tr><tr><td align="left" balign="left">StorageDead(_1478)<br/>StorageLive(_1479)<br/>_1479 = _818<br/>StorageLive(_1480)<br/>StorageLive(_1481)<br/>_1481 = _1<br/>StorageLive(_1482)<br/>_1482 = _1429<br/>StorageLive(_1483)<br/>_1483 = _1082<br/>StorageLive(_1484)<br/>_1484 = _2<br/>StorageLive(_1485)<br/>_1485 = _572<br/>StorageLive(_1486)<br/>_1486 = _1073<br/>_1480 = LiquidateBorrowForPerpPnlRecord { perp_market_index: move _1481, market_oracle_price: move _1482, pnl_transfer: move _1483, liability_market_index: move _1484, liability_price: move _1485, liability_transfer: move _1486 }<br/>StorageDead(_1486)<br/>StorageDead(_1485)<br/>StorageDead(_1484)<br/>StorageDead(_1483)<br/>StorageDead(_1482)<br/>StorageDead(_1481)<br/>StorageLive(_1487)<br/></td></tr><tr><td align="left">_1487 = &lt;LiquidationRecord as Default&gt;::default()</td></tr></table>>];
    bb620__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">620</td></tr><tr><td align="left" balign="left">_1469 = LiquidationRecord { ts: move _1470, liquidation_type: move _1472, user: move _1473, liquidator: move _1474, margin_requirement: move _1475, total_collateral: move _1476, margin_freed: move _1479, liquidation_id: move _1471, bankrupt: move _1477, canceled_order_ids: move (_1487.9: std::vec::Vec&lt;u32&gt;), liquidate_perp: move (_1487.10: state::events::LiquidatePerpRecord), liquidate_spot: move (_1487.11: state::events::LiquidateSpotRecord), liquidate_borrow_for_perp_pnl: move _1480, liquidate_perp_pnl_for_deposit: move (_1487.13: state::events::LiquidatePerpPnlForDepositRecord), perp_bankruptcy: move (_1487.14: state::events::PerpBankruptcyRecord), spot_bankruptcy: move (_1487.15: state::events::SpotBankruptcyRecord) }<br/>StorageDead(_1480)<br/>StorageDead(_1479)<br/>StorageDead(_1477)<br/>StorageDead(_1476)<br/>StorageDead(_1475)<br/>StorageDead(_1474)<br/>StorageDead(_1473)<br/>StorageDead(_1472)<br/>StorageDead(_1471)<br/>StorageDead(_1470)<br/>_1468 = &amp;_1469<br/>_1467 = &amp;(*_1468)<br/></td></tr><tr><td align="left">_1466 = &lt;LiquidationRecord as anchor_lang::Event&gt;::data(move _1467)</td></tr></table>>];
    bb621__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">621</td></tr><tr><td align="left" balign="left">StorageDead(_1467)<br/>_1465 = &amp;_1466<br/>_1464 = &amp;(*_1465)<br/></td></tr><tr><td align="left">_1463 = &lt;Vec&lt;u8&gt; as Deref&gt;::deref(move _1464)</td></tr></table>>];
    bb622__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">622</td></tr><tr><td align="left" balign="left">_1462 = &amp;(*_1463)<br/>StorageDead(_1464)<br/>_1461 = [move _1462]<br/>StorageDead(_1462)<br/>_1460 = &amp;_1461<br/>_1459 = &amp;(*_1460)<br/>_1458 = move _1459 as &amp;[&amp;[u8]] (PointerCoercion(Unsize))<br/>StorageDead(_1459)<br/></td></tr><tr><td align="left">_1457 = solana_program::log::sol_log_data(move _1458)</td></tr></table>>];
    bb623__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">623</td></tr><tr><td align="left" balign="left">StorageDead(_1458)<br/></td></tr><tr><td align="left">drop(_1466)</td></tr></table>>];
    bb624__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">624</td></tr><tr><td align="left">drop(_1469)</td></tr></table>>];
    bb625__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">625</td></tr><tr><td align="left" balign="left">StorageDead(_1487)<br/>StorageDead(_1469)<br/>StorageDead(_1468)<br/>StorageDead(_1466)<br/>StorageDead(_1465)<br/>StorageDead(_1463)<br/>StorageDead(_1461)<br/>StorageDead(_1460)<br/>StorageDead(_1457)<br/>_1456 = const ()<br/>StorageDead(_1456)<br/>StorageLive(_1488)<br/>_1488 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _1488)<br/>StorageDead(_1488)<br/>StorageDead(_1429)<br/>StorageDead(_1383)<br/>StorageDead(_1338)<br/>StorageDead(_1082)<br/>StorageDead(_1073)<br/>StorageDead(_1068)<br/>StorageDead(_1049)<br/>StorageDead(_1034)<br/>StorageDead(_1015)<br/>StorageDead(_1002)<br/>StorageDead(_987)<br/>StorageDead(_977)<br/>StorageDead(_968)<br/>StorageDead(_840)<br/></td></tr><tr><td align="left">drop(_819)</td></tr></table>>];
    bb626__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">626</td></tr><tr><td align="left" balign="left">_1513 = const false<br/>StorageDead(_819)<br/>StorageDead(_818)<br/>StorageDead(_808)<br/>StorageDead(_753)<br/>StorageDead(_575)<br/>StorageDead(_574)<br/>StorageDead(_573)<br/>StorageDead(_572)<br/>StorageDead(_571)<br/>StorageDead(_394)<br/>StorageDead(_393)<br/>StorageDead(_392)<br/>StorageDead(_391)<br/>StorageDead(_390)<br/>_1516 = const false<br/>StorageDead(_223)<br/>_1517 = const false<br/>StorageDead(_156)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb627__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">627</td></tr><tr><td align="left" balign="left">StorageDead(_1430)<br/>StorageDead(_1449)<br/>StorageDead(_1447)<br/>StorageDead(_1446)<br/>StorageDead(_1442)<br/>StorageDead(_1441)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb628__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">628</td></tr><tr><td align="left" balign="left">StorageDead(_1429)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb629__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">629</td></tr><tr><td align="left" balign="left">StorageDead(_1383)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb630__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">630</td></tr><tr><td align="left" balign="left">StorageDead(_1338)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb631__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">631</td></tr><tr><td align="left" balign="left">StorageDead(_1324)<br/>StorageDead(_1321)<br/>StorageDead(_1319)<br/>StorageDead(_1315)<br/>StorageDead(_1314)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb632__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">632</td></tr><tr><td align="left" balign="left">StorageDead(_1304)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb633__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">633</td></tr><tr><td align="left" balign="left">StorageDead(_1291)<br/>StorageDead(_1289)<br/>StorageDead(_1287)<br/>StorageDead(_1283)<br/>StorageDead(_1282)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb634__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">634</td></tr><tr><td align="left" balign="left">StorageDead(_1272)<br/></td></tr><tr><td align="left">drop(_1261)</td></tr></table>>];
    bb635__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">635</td></tr><tr><td align="left" balign="left">StorageDead(_1261)<br/>StorageDead(_1260)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb636__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">636</td></tr><tr><td align="left" balign="left">StorageDead(_1244)<br/>StorageDead(_1243)<br/>StorageDead(_1241)<br/>StorageDead(_1239)<br/>StorageDead(_1236)<br/>StorageDead(_1232)<br/>StorageDead(_1231)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb637__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">637</td></tr><tr><td align="left" balign="left">StorageDead(_1215)<br/>StorageDead(_1214)<br/>StorageDead(_1212)<br/>StorageDead(_1210)<br/>StorageDead(_1207)<br/>StorageDead(_1203)<br/>StorageDead(_1202)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb638__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">638</td></tr><tr><td align="left">drop(_1191)</td></tr></table>>];
    bb639__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">639</td></tr><tr><td align="left" balign="left">StorageDead(_1191)<br/>StorageDead(_1190)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb640__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">640</td></tr><tr><td align="left" balign="left">StorageDead(_1082)<br/>StorageDead(_1073)<br/>StorageDead(_1068)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb641__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">641</td></tr><tr><td align="left" balign="left">StorageDead(_1053)<br/>StorageDead(_1050)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb642__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">642</td></tr><tr><td align="left" balign="left">StorageDead(_1049)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb643__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">643</td></tr><tr><td align="left" balign="left">StorageDead(_1034)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb644__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">644</td></tr><tr><td align="left" balign="left">StorageDead(_1015)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb645__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">645</td></tr><tr><td align="left" balign="left">StorageDead(_1002)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb646__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">646</td></tr><tr><td align="left" balign="left">StorageDead(_987)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb647__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">647</td></tr><tr><td align="left" balign="left">StorageDead(_977)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb648__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">648</td></tr><tr><td align="left" balign="left">StorageDead(_968)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb649__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">649</td></tr><tr><td align="left" balign="left">StorageDead(_918)<br/></td></tr><tr><td align="left">drop(_907)</td></tr></table>>];
    bb650__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">650</td></tr><tr><td align="left" balign="left">StorageDead(_907)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb651__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">651</td></tr><tr><td align="left" balign="left">StorageDead(_897)<br/>StorageDead(_896)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb652__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">652</td></tr><tr><td align="left" balign="left">StorageDead(_866)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb653__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">653</td></tr><tr><td align="left" balign="left">StorageDead(_857)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb654__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">654</td></tr><tr><td align="left" balign="left">StorageDead(_843)<br/>StorageDead(_841)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb655__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">655</td></tr><tr><td align="left" balign="left">StorageDead(_840)<br/></td></tr><tr><td align="left">switchInt(_1513)</td></tr></table>>];
    bb656__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">656</td></tr><tr><td align="left" balign="left">_1513 = const false<br/>StorageDead(_819)<br/>StorageDead(_818)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb657__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">657</td></tr><tr><td align="left" balign="left">StorageDead(_808)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb658__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">658</td></tr><tr><td align="left" balign="left">StorageDead(_795)<br/>StorageDead(_793)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb659__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">659</td></tr><tr><td align="left" balign="left">StorageDead(_770)<br/>StorageDead(_768)<br/>StorageDead(_767)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb660__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">660</td></tr><tr><td align="left" balign="left">StorageDead(_753)<br/>StorageDead(_575)<br/>StorageDead(_574)<br/>StorageDead(_573)<br/>StorageDead(_572)<br/>StorageDead(_571)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb661__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">661</td></tr><tr><td align="left" balign="left">StorageDead(_577)<br/>StorageDead(_745)<br/>StorageDead(_742)<br/>StorageDead(_739)<br/>StorageDead(_736)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb662__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">662</td></tr><tr><td align="left" balign="left">StorageDead(_669)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb663__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">663</td></tr><tr><td align="left" balign="left">StorageDead(_622)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb664__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">664</td></tr><tr><td align="left" balign="left">StorageDead(_589)<br/>StorageDead(_588)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb665__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">665</td></tr><tr><td align="left">drop(_577)</td></tr></table>>];
    bb666__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">666</td></tr><tr><td align="left" balign="left">StorageDead(_577)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb667__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">667</td></tr><tr><td align="left" balign="left">StorageDead(_576)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb668__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">668</td></tr><tr><td align="left" balign="left">StorageDead(_394)<br/>StorageDead(_393)<br/>StorageDead(_392)<br/>StorageDead(_391)<br/>StorageDead(_390)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb669__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">669</td></tr><tr><td align="left" balign="left">StorageDead(_513)<br/></td></tr><tr><td align="left">drop(_502)</td></tr></table>>];
    bb670__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">670</td></tr><tr><td align="left" balign="left">StorageDead(_502)<br/>StorageDead(_458)<br/>StorageDead(_406)<br/>StorageDead(_396)<br/>StorageDead(_563)<br/>StorageDead(_560)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb671__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">671</td></tr><tr><td align="left" balign="left">StorageDead(_526)<br/></td></tr><tr><td align="left">drop(_513)</td></tr></table>>];
    bb672__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">672</td></tr><tr><td align="left" balign="left">StorageDead(_513)<br/></td></tr><tr><td align="left">drop(_502)</td></tr></table>>];
    bb673__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">673</td></tr><tr><td align="left" balign="left">StorageDead(_502)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb674__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">674</td></tr><tr><td align="left" balign="left">StorageDead(_458)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb675__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">675</td></tr><tr><td align="left" balign="left">StorageDead(_406)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb676__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">676</td></tr><tr><td align="left" balign="left">StorageDead(_396)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb677__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">677</td></tr><tr><td align="left" balign="left">StorageDead(_395)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb678__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">678</td></tr><tr><td align="left" balign="left">_1516 = const false<br/>StorageDead(_223)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb679__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">679</td></tr><tr><td align="left" balign="left">_1517 = const false<br/>StorageDead(_156)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb680__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">680</td></tr><tr><td align="left">return</td></tr></table>>];
    bb681__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">681 (cleanup)</td></tr><tr><td align="left">drop(_1466)</td></tr></table>>];
    bb682__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">682 (cleanup)</td></tr><tr><td align="left">drop(_1469)</td></tr></table>>];
    bb683__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">683 (cleanup)</td></tr><tr><td align="left">drop(_1430)</td></tr></table>>];
    bb684__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">684 (cleanup)</td></tr><tr><td align="left">drop(_1406)</td></tr></table>>];
    bb685__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">685 (cleanup)</td></tr><tr><td align="left">drop(_1261)</td></tr></table>>];
    bb686__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">686 (cleanup)</td></tr><tr><td align="left">drop(_1191)</td></tr></table>>];
    bb687__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">687 (cleanup)</td></tr><tr><td align="left">drop(_1156)</td></tr></table>>];
    bb688__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">688 (cleanup)</td></tr><tr><td align="left">drop(_1131)</td></tr></table>>];
    bb689__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">689 (cleanup)</td></tr><tr><td align="left">drop(_1109)</td></tr></table>>];
    bb690__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">690 (cleanup)</td></tr><tr><td align="left">drop(_944)</td></tr></table>>];
    bb691__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">691 (cleanup)</td></tr><tr><td align="left">drop(_947)</td></tr></table>>];
    bb692__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">692 (cleanup)</td></tr><tr><td align="left">drop(_964)</td></tr></table>>];
    bb693__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">693 (cleanup)</td></tr><tr><td align="left">drop(_957)</td></tr></table>>];
    bb694__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">694 (cleanup)</td></tr><tr><td align="left">drop(_907)</td></tr></table>>];
    bb695__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">695 (cleanup)</td></tr><tr><td align="left">drop(_778)</td></tr></table>>];
    bb696__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">696 (cleanup)</td></tr><tr><td align="left">drop(_713)</td></tr></table>>];
    bb697__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">697 (cleanup)</td></tr><tr><td align="left">drop(_694)</td></tr></table>>];
    bb698__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">698 (cleanup)</td></tr><tr><td align="left">drop(_646)</td></tr></table>>];
    bb699__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">699 (cleanup)</td></tr><tr><td align="left">drop(_577)</td></tr></table>>];
    bb700__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">700 (cleanup)</td></tr><tr><td align="left">drop(_513)</td></tr></table>>];
    bb701__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">701 (cleanup)</td></tr><tr><td align="left">drop(_502)</td></tr></table>>];
    bb702__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">702 (cleanup)</td></tr><tr><td align="left">drop(_479)</td></tr></table>>];
    bb703__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">703 (cleanup)</td></tr><tr><td align="left">drop(_438)</td></tr></table>>];
    bb704__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">704 (cleanup)</td></tr><tr><td align="left">drop(_419)</td></tr></table>>];
    bb705__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">705 (cleanup)</td></tr><tr><td align="left">drop(_373)</td></tr></table>>];
    bb706__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">706 (cleanup)</td></tr><tr><td align="left">drop(_348)</td></tr></table>>];
    bb707__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">707 (cleanup)</td></tr><tr><td align="left">drop(_268)</td></tr></table>>];
    bb708__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">708 (cleanup)</td></tr><tr><td align="left">drop(_249)</td></tr></table>>];
    bb709__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">709 (cleanup)</td></tr><tr><td align="left">drop(_201)</td></tr></table>>];
    bb710__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">710 (cleanup)</td></tr><tr><td align="left">drop(_182)</td></tr></table>>];
    bb711__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">711 (cleanup)</td></tr><tr><td align="left">drop(_136)</td></tr></table>>];
    bb712__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">712 (cleanup)</td></tr><tr><td align="left">drop(_117)</td></tr></table>>];
    bb713__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">713 (cleanup)</td></tr><tr><td align="left">drop(_92)</td></tr></table>>];
    bb714__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">714 (cleanup)</td></tr><tr><td align="left">drop(_73)</td></tr></table>>];
    bb715__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">715 (cleanup)</td></tr><tr><td align="left">drop(_48)</td></tr></table>>];
    bb716__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">716 (cleanup)</td></tr><tr><td align="left">drop(_29)</td></tr></table>>];
    bb717__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">717 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb718__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">718</td></tr><tr><td align="left" balign="left">_1526 = discriminant(_349)<br/>StorageDead(_353)<br/>_1515 = const false<br/>StorageDead(_349)<br/>StorageDead(_348)<br/>StorageDead(_346)<br/>StorageDead(_341)<br/>StorageDead(_340)<br/>StorageLive(_365)<br/>StorageLive(_366)<br/>StorageLive(_367)<br/>StorageLive(_368)<br/>_368 = &amp;mut (*_7)<br/>StorageLive(_369)<br/>_369 = &amp;(*_8)<br/>StorageLive(_370)<br/>StorageLive(_371)<br/>StorageLive(_372)<br/>StorageLive(_373)<br/>StorageLive(_374)<br/>StorageLive(_375)<br/>StorageLive(_376)<br/>_376 = &amp;(*_9)<br/>StorageLive(_377)<br/>StorageLive(_378)<br/>_378 = &amp;_1<br/>_377 = &amp;(*_378)<br/></td></tr><tr><td align="left">_375 = PerpMarketMap::&lt;'_&gt;::get_ref_mut(move _376, move _377)</td></tr></table>>];
    bb719__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">719</td></tr><tr><td align="left" balign="left">_1528 = discriminant(_374)<br/>StorageDead(_378)<br/>_1514 = const false<br/>StorageDead(_374)<br/>StorageDead(_373)<br/>StorageDead(_371)<br/>StorageDead(_366)<br/>StorageDead(_365)<br/>StorageLive(_395)<br/>StorageLive(_396)<br/>StorageLive(_397)<br/>StorageLive(_398)<br/>StorageLive(_399)<br/>_399 = &amp;(*_5)<br/>StorageLive(_400)<br/>_400 = _1<br/></td></tr><tr><td align="left">_398 = User::get_perp_position(move _399, move _400)</td></tr></table>>];
    bb720__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">720</td></tr><tr><td align="left">drop(_819)</td></tr></table>>];
    bb721__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">721</td></tr><tr><td align="left" balign="left">_1562 = discriminant(_374)<br/>StorageDead(_378)<br/>_1514 = const false<br/>StorageDead(_374)<br/>StorageDead(_373)<br/>StorageDead(_371)<br/>StorageDead(_366)<br/>StorageDead(_365)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb722__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">722</td></tr><tr><td align="left" balign="left">_1564 = discriminant(_349)<br/>StorageDead(_353)<br/>_1515 = const false<br/>StorageDead(_349)<br/>StorageDead(_348)<br/>StorageDead(_346)<br/>StorageDead(_341)<br/>StorageDead(_340)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb723__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">723</td></tr><tr><td align="left">drop(_223)</td></tr></table>>];
    bb724__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">724</td></tr><tr><td align="left">switchInt(_1516)</td></tr></table>>];
    bb725__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">725</td></tr><tr><td align="left">drop(_156)</td></tr></table>>];
    bb726__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">726</td></tr><tr><td align="left">switchInt(_1517)</td></tr></table>>];
    bb727__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">727 (cleanup)</td></tr><tr><td align="left" balign="left">_1566 = discriminant(_1431)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb728__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">728 (cleanup)</td></tr><tr><td align="left" balign="left">_1567 = discriminant(_1262)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb729__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">729 (cleanup)</td></tr><tr><td align="left" balign="left">_1568 = discriminant(_1192)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb730__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">730 (cleanup)</td></tr><tr><td align="left" balign="left">_1569 = discriminant(_908)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb731__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">731 (cleanup)</td></tr><tr><td align="left">drop(_819)</td></tr></table>>];
    bb732__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">732 (cleanup)</td></tr><tr><td align="left">switchInt(_1513)</td></tr></table>>];
    bb733__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">733 (cleanup)</td></tr><tr><td align="left" balign="left">_1570 = discriminant(_820)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb734__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">734 (cleanup)</td></tr><tr><td align="left" balign="left">_1571 = discriminant(_578)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb735__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">735 (cleanup)</td></tr><tr><td align="left" balign="left">_1572 = discriminant(_514)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb736__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">736 (cleanup)</td></tr><tr><td align="left" balign="left">_1573 = discriminant(_503)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb737__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">737 (cleanup)</td></tr><tr><td align="left" balign="left">_1574 = discriminant(_374)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb738__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">738 (cleanup)</td></tr><tr><td align="left" balign="left">_1575 = discriminant(_349)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb739__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">739 (cleanup)</td></tr><tr><td align="left">drop(_223)</td></tr></table>>];
    bb740__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">740 (cleanup)</td></tr><tr><td align="left">switchInt(_1516)</td></tr></table>>];
    bb741__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">741 (cleanup)</td></tr><tr><td align="left" balign="left">_1576 = discriminant(_224)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb742__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">742 (cleanup)</td></tr><tr><td align="left">drop(_156)</td></tr></table>>];
    bb743__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">743 (cleanup)</td></tr><tr><td align="left">switchInt(_1517)</td></tr></table>>];
    bb744__0_342 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">744 (cleanup)</td></tr><tr><td align="left" balign="left">_1577 = discriminant(_157)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_342 -> bb1__0_342 [label="return"];
    bb1__0_342 -> bb3__0_342 [label="0"];
    bb1__0_342 -> bb2__0_342 [label="otherwise"];
    bb2__0_342 -> bb4__0_342 [label="return"];
    bb3__0_342 -> bb15__0_342 [label=""];
    bb4__0_342 -> bb5__0_342 [label="return"];
    bb5__0_342 -> bb6__0_342 [label="return"];
    bb6__0_342 -> bb7__0_342 [label="return"];
    bb6__0_342 -> bb716__0_342 [label="unwind"];
    bb7__0_342 -> bb8__0_342 [label="return"];
    bb7__0_342 -> bb716__0_342 [label="unwind"];
    bb8__0_342 -> bb9__0_342 [label="return"];
    bb8__0_342 -> bb717__0_342 [label="unwind"];
    bb9__0_342 -> bb10__0_342 [label="return"];
    bb10__0_342 -> bb11__0_342 [label="return"];
    bb11__0_342 -> bb12__0_342 [label="return"];
    bb11__0_342 -> bb715__0_342 [label="unwind"];
    bb12__0_342 -> bb13__0_342 [label="return"];
    bb12__0_342 -> bb715__0_342 [label="unwind"];
    bb13__0_342 -> bb14__0_342 [label="return"];
    bb13__0_342 -> bb717__0_342 [label="unwind"];
    bb14__0_342 -> bb15__0_342 [label=""];
    bb15__0_342 -> bb16__0_342 [label="return"];
    bb16__0_342 -> bb17__0_342 [label="0"];
    bb16__0_342 -> bb19__0_342 [label="1"];
    bb16__0_342 -> bb18__0_342 [label="otherwise"];
    bb17__0_342 -> bb21__0_342 [label="return"];
    bb19__0_342 -> bb20__0_342 [label="return"];
    bb20__0_342 -> bb680__0_342 [label=""];
    bb21__0_342 -> bb23__0_342 [label="0"];
    bb21__0_342 -> bb22__0_342 [label="otherwise"];
    bb22__0_342 -> bb24__0_342 [label="return"];
    bb23__0_342 -> bb35__0_342 [label=""];
    bb24__0_342 -> bb25__0_342 [label="return"];
    bb25__0_342 -> bb26__0_342 [label="return"];
    bb26__0_342 -> bb27__0_342 [label="return"];
    bb26__0_342 -> bb714__0_342 [label="unwind"];
    bb27__0_342 -> bb28__0_342 [label="return"];
    bb27__0_342 -> bb714__0_342 [label="unwind"];
    bb28__0_342 -> bb29__0_342 [label="return"];
    bb28__0_342 -> bb717__0_342 [label="unwind"];
    bb29__0_342 -> bb30__0_342 [label="return"];
    bb30__0_342 -> bb31__0_342 [label="return"];
    bb31__0_342 -> bb32__0_342 [label="return"];
    bb31__0_342 -> bb713__0_342 [label="unwind"];
    bb32__0_342 -> bb33__0_342 [label="return"];
    bb32__0_342 -> bb713__0_342 [label="unwind"];
    bb33__0_342 -> bb34__0_342 [label="return"];
    bb33__0_342 -> bb717__0_342 [label="unwind"];
    bb34__0_342 -> bb35__0_342 [label=""];
    bb35__0_342 -> bb36__0_342 [label="return"];
    bb36__0_342 -> bb37__0_342 [label="0"];
    bb36__0_342 -> bb38__0_342 [label="1"];
    bb36__0_342 -> bb18__0_342 [label="otherwise"];
    bb37__0_342 -> bb41__0_342 [label="0"];
    bb37__0_342 -> bb40__0_342 [label="otherwise"];
    bb38__0_342 -> bb39__0_342 [label="return"];
    bb39__0_342 -> bb680__0_342 [label=""];
    bb40__0_342 -> bb54__0_342 [label=""];
    bb41__0_342 -> bb42__0_342 [label="return"];
    bb42__0_342 -> bb43__0_342 [label="return"];
    bb43__0_342 -> bb44__0_342 [label="return"];
    bb44__0_342 -> bb45__0_342 [label="return"];
    bb44__0_342 -> bb712__0_342 [label="unwind"];
    bb45__0_342 -> bb46__0_342 [label="return"];
    bb45__0_342 -> bb712__0_342 [label="unwind"];
    bb46__0_342 -> bb47__0_342 [label="return"];
    bb46__0_342 -> bb717__0_342 [label="unwind"];
    bb47__0_342 -> bb48__0_342 [label="return"];
    bb48__0_342 -> bb49__0_342 [label="return"];
    bb49__0_342 -> bb50__0_342 [label="return"];
    bb50__0_342 -> bb51__0_342 [label="return"];
    bb50__0_342 -> bb711__0_342 [label="unwind"];
    bb51__0_342 -> bb52__0_342 [label="return"];
    bb51__0_342 -> bb711__0_342 [label="unwind"];
    bb52__0_342 -> bb53__0_342 [label="return"];
    bb52__0_342 -> bb717__0_342 [label="unwind"];
    bb53__0_342 -> bb54__0_342 [label=""];
    bb54__0_342 -> bb55__0_342 [label="return"];
    bb55__0_342 -> bb56__0_342 [label="0"];
    bb55__0_342 -> bb57__0_342 [label="1"];
    bb55__0_342 -> bb18__0_342 [label="otherwise"];
    bb56__0_342 -> bb59__0_342 [label="return"];
    bb57__0_342 -> bb58__0_342 [label="return"];
    bb58__0_342 -> bb680__0_342 [label=""];
    bb59__0_342 -> bb60__0_342 [label="return"];
    bb59__0_342 -> bb717__0_342 [label="unwind"];
    bb60__0_342 -> bb61__0_342 [label="0"];
    bb60__0_342 -> bb62__0_342 [label="1"];
    bb60__0_342 -> bb18__0_342 [label="otherwise"];
    bb61__0_342 -> bb64__0_342 [label="return"];
    bb61__0_342 -> bb743__0_342 [label="unwind"];
    bb62__0_342 -> bb63__0_342 [label="return"];
    bb62__0_342 -> bb744__0_342 [label="unwind"];
    bb63__0_342 -> bb679__0_342 [label=""];
    bb64__0_342 -> bb65__0_342 [label="return"];
    bb64__0_342 -> bb743__0_342 [label="unwind"];
    bb65__0_342 -> bb67__0_342 [label="0"];
    bb65__0_342 -> bb66__0_342 [label="otherwise"];
    bb66__0_342 -> bb68__0_342 [label="return"];
    bb66__0_342 -> bb743__0_342 [label="unwind"];
    bb67__0_342 -> bb80__0_342 [label=""];
    bb68__0_342 -> bb69__0_342 [label="return"];
    bb68__0_342 -> bb743__0_342 [label="unwind"];
    bb69__0_342 -> bb70__0_342 [label="return"];
    bb69__0_342 -> bb743__0_342 [label="unwind"];
    bb70__0_342 -> bb71__0_342 [label="return"];
    bb70__0_342 -> bb710__0_342 [label="unwind"];
    bb71__0_342 -> bb72__0_342 [label="return"];
    bb71__0_342 -> bb710__0_342 [label="unwind"];
    bb72__0_342 -> bb73__0_342 [label="return"];
    bb72__0_342 -> bb743__0_342 [label="unwind"];
    bb73__0_342 -> bb74__0_342 [label="return"];
    bb73__0_342 -> bb743__0_342 [label="unwind"];
    bb74__0_342 -> bb75__0_342 [label="return"];
    bb74__0_342 -> bb743__0_342 [label="unwind"];
    bb75__0_342 -> bb76__0_342 [label="return"];
    bb75__0_342 -> bb743__0_342 [label="unwind"];
    bb76__0_342 -> bb77__0_342 [label="return"];
    bb76__0_342 -> bb709__0_342 [label="unwind"];
    bb77__0_342 -> bb78__0_342 [label="return"];
    bb77__0_342 -> bb709__0_342 [label="unwind"];
    bb78__0_342 -> bb79__0_342 [label="return"];
    bb78__0_342 -> bb743__0_342 [label="unwind"];
    bb79__0_342 -> bb80__0_342 [label=""];
    bb80__0_342 -> bb81__0_342 [label="return"];
    bb80__0_342 -> bb743__0_342 [label="unwind"];
    bb81__0_342 -> bb82__0_342 [label="0"];
    bb81__0_342 -> bb83__0_342 [label="1"];
    bb81__0_342 -> bb18__0_342 [label="otherwise"];
    bb82__0_342 -> bb85__0_342 [label="return"];
    bb82__0_342 -> bb743__0_342 [label="unwind"];
    bb83__0_342 -> bb84__0_342 [label="return"];
    bb83__0_342 -> bb743__0_342 [label="unwind"];
    bb84__0_342 -> bb726__0_342 [label=""];
    bb85__0_342 -> bb86__0_342 [label="return"];
    bb85__0_342 -> bb743__0_342 [label="unwind"];
    bb86__0_342 -> bb87__0_342 [label="return"];
    bb86__0_342 -> bb743__0_342 [label="unwind"];
    bb87__0_342 -> bb88__0_342 [label="0"];
    bb87__0_342 -> bb89__0_342 [label="1"];
    bb87__0_342 -> bb18__0_342 [label="otherwise"];
    bb88__0_342 -> bb91__0_342 [label="return"];
    bb88__0_342 -> bb740__0_342 [label="unwind"];
    bb89__0_342 -> bb90__0_342 [label="return"];
    bb89__0_342 -> bb741__0_342 [label="unwind"];
    bb90__0_342 -> bb678__0_342 [label=""];
    bb91__0_342 -> bb92__0_342 [label="return"];
    bb91__0_342 -> bb740__0_342 [label="unwind"];
    bb92__0_342 -> bb94__0_342 [label="0"];
    bb92__0_342 -> bb93__0_342 [label="otherwise"];
    bb93__0_342 -> bb95__0_342 [label="return"];
    bb93__0_342 -> bb740__0_342 [label="unwind"];
    bb94__0_342 -> bb107__0_342 [label=""];
    bb95__0_342 -> bb96__0_342 [label="return"];
    bb95__0_342 -> bb740__0_342 [label="unwind"];
    bb96__0_342 -> bb97__0_342 [label="return"];
    bb96__0_342 -> bb740__0_342 [label="unwind"];
    bb97__0_342 -> bb98__0_342 [label="return"];
    bb97__0_342 -> bb708__0_342 [label="unwind"];
    bb98__0_342 -> bb99__0_342 [label="return"];
    bb98__0_342 -> bb708__0_342 [label="unwind"];
    bb99__0_342 -> bb100__0_342 [label="return"];
    bb99__0_342 -> bb740__0_342 [label="unwind"];
    bb100__0_342 -> bb101__0_342 [label="return"];
    bb100__0_342 -> bb740__0_342 [label="unwind"];
    bb101__0_342 -> bb102__0_342 [label="return"];
    bb101__0_342 -> bb740__0_342 [label="unwind"];
    bb102__0_342 -> bb103__0_342 [label="return"];
    bb102__0_342 -> bb740__0_342 [label="unwind"];
    bb103__0_342 -> bb104__0_342 [label="return"];
    bb103__0_342 -> bb707__0_342 [label="unwind"];
    bb104__0_342 -> bb105__0_342 [label="return"];
    bb104__0_342 -> bb707__0_342 [label="unwind"];
    bb105__0_342 -> bb106__0_342 [label="return"];
    bb105__0_342 -> bb740__0_342 [label="unwind"];
    bb106__0_342 -> bb107__0_342 [label=""];
    bb107__0_342 -> bb108__0_342 [label="return"];
    bb107__0_342 -> bb740__0_342 [label="unwind"];
    bb108__0_342 -> bb109__0_342 [label="0"];
    bb108__0_342 -> bb110__0_342 [label="1"];
    bb108__0_342 -> bb18__0_342 [label="otherwise"];
    bb109__0_342 -> bb112__0_342 [label="return"];
    bb109__0_342 -> bb740__0_342 [label="unwind"];
    bb110__0_342 -> bb111__0_342 [label="return"];
    bb110__0_342 -> bb740__0_342 [label="unwind"];
    bb111__0_342 -> bb724__0_342 [label=""];
    bb112__0_342 -> bb113__0_342 [label="return"];
    bb112__0_342 -> bb740__0_342 [label="unwind"];
    bb113__0_342 -> bb114__0_342 [label="return"];
    bb113__0_342 -> bb740__0_342 [label="unwind"];
    bb114__0_342 -> bb115__0_342 [label="return"];
    bb114__0_342 -> bb740__0_342 [label="unwind"];
    bb115__0_342 -> bb116__0_342 [label="0"];
    bb115__0_342 -> bb117__0_342 [label="1"];
    bb115__0_342 -> bb18__0_342 [label="otherwise"];
    bb116__0_342 -> bb119__0_342 [label="return"];
    bb116__0_342 -> bb740__0_342 [label="unwind"];
    bb117__0_342 -> bb118__0_342 [label="return"];
    bb117__0_342 -> bb740__0_342 [label="unwind"];
    bb118__0_342 -> bb724__0_342 [label=""];
    bb119__0_342 -> bb120__0_342 [label="return"];
    bb119__0_342 -> bb740__0_342 [label="unwind"];
    bb120__0_342 -> bb121__0_342 [label="return"];
    bb120__0_342 -> bb740__0_342 [label="unwind"];
    bb121__0_342 -> bb122__0_342 [label="0"];
    bb121__0_342 -> bb123__0_342 [label="1"];
    bb121__0_342 -> bb18__0_342 [label="otherwise"];
    bb122__0_342 -> bb125__0_342 [label="return"];
    bb122__0_342 -> bb740__0_342 [label="unwind"];
    bb123__0_342 -> bb124__0_342 [label="return"];
    bb123__0_342 -> bb740__0_342 [label="unwind"];
    bb124__0_342 -> bb724__0_342 [label=""];
    bb125__0_342 -> bb126__0_342 [label="return"];
    bb125__0_342 -> bb740__0_342 [label="unwind"];
    bb126__0_342 -> bb127__0_342 [label="return"];
    bb126__0_342 -> bb740__0_342 [label="unwind"];
    bb127__0_342 -> bb128__0_342 [label="0"];
    bb127__0_342 -> bb129__0_342 [label="1"];
    bb127__0_342 -> bb18__0_342 [label="otherwise"];
    bb128__0_342 -> bb131__0_342 [label="return"];
    bb128__0_342 -> bb740__0_342 [label="unwind"];
    bb129__0_342 -> bb130__0_342 [label="return"];
    bb129__0_342 -> bb740__0_342 [label="unwind"];
    bb130__0_342 -> bb724__0_342 [label=""];
    bb131__0_342 -> bb132__0_342 [label="return"];
    bb131__0_342 -> bb740__0_342 [label="unwind"];
    bb132__0_342 -> bb133__0_342 [label="return"];
    bb132__0_342 -> bb740__0_342 [label="unwind"];
    bb133__0_342 -> bb134__0_342 [label="0"];
    bb133__0_342 -> bb135__0_342 [label="1"];
    bb133__0_342 -> bb18__0_342 [label="otherwise"];
    bb134__0_342 -> bb137__0_342 [label="return"];
    bb134__0_342 -> bb740__0_342 [label="unwind"];
    bb135__0_342 -> bb136__0_342 [label="return"];
    bb135__0_342 -> bb740__0_342 [label="unwind"];
    bb136__0_342 -> bb724__0_342 [label=""];
    bb137__0_342 -> bb138__0_342 [label="return"];
    bb137__0_342 -> bb740__0_342 [label="unwind"];
    bb138__0_342 -> bb139__0_342 [label="0"];
    bb138__0_342 -> bb140__0_342 [label="1"];
    bb138__0_342 -> bb18__0_342 [label="otherwise"];
    bb139__0_342 -> bb142__0_342 [label="return"];
    bb139__0_342 -> bb706__0_342 [label="unwind"];
    bb140__0_342 -> bb141__0_342 [label="return"];
    bb140__0_342 -> bb738__0_342 [label="unwind"];
    bb141__0_342 -> bb722__0_342 [label=""];
    bb142__0_342 -> bb143__0_342 [label="return"];
    bb142__0_342 -> bb706__0_342 [label="unwind"];
    bb143__0_342 -> bb144__0_342 [label="return"];
    bb143__0_342 -> bb706__0_342 [label="unwind"];
    bb144__0_342 -> bb145__0_342 [label="0"];
    bb144__0_342 -> bb146__0_342 [label="1"];
    bb144__0_342 -> bb18__0_342 [label="otherwise"];
    bb145__0_342 -> bb718__0_342 [label="return"];
    bb145__0_342 -> bb738__0_342 [label="unwind"];
    bb146__0_342 -> bb147__0_342 [label="return"];
    bb146__0_342 -> bb706__0_342 [label="unwind"];
    bb147__0_342 -> bb722__0_342 [label="return"];
    bb147__0_342 -> bb738__0_342 [label="unwind"];
    bb148__0_342 -> bb149__0_342 [label="return"];
    bb148__0_342 -> bb740__0_342 [label="unwind"];
    bb149__0_342 -> bb150__0_342 [label="0"];
    bb149__0_342 -> bb151__0_342 [label="1"];
    bb149__0_342 -> bb18__0_342 [label="otherwise"];
    bb150__0_342 -> bb153__0_342 [label="return"];
    bb150__0_342 -> bb705__0_342 [label="unwind"];
    bb151__0_342 -> bb152__0_342 [label="return"];
    bb151__0_342 -> bb737__0_342 [label="unwind"];
    bb152__0_342 -> bb721__0_342 [label=""];
    bb153__0_342 -> bb154__0_342 [label="return"];
    bb153__0_342 -> bb705__0_342 [label="unwind"];
    bb154__0_342 -> bb155__0_342 [label="return"];
    bb154__0_342 -> bb705__0_342 [label="unwind"];
    bb155__0_342 -> bb156__0_342 [label="0"];
    bb155__0_342 -> bb157__0_342 [label="1"];
    bb155__0_342 -> bb18__0_342 [label="otherwise"];
    bb156__0_342 -> bb719__0_342 [label="return"];
    bb156__0_342 -> bb737__0_342 [label="unwind"];
    bb157__0_342 -> bb158__0_342 [label="return"];
    bb157__0_342 -> bb705__0_342 [label="unwind"];
    bb158__0_342 -> bb721__0_342 [label="return"];
    bb158__0_342 -> bb737__0_342 [label="unwind"];
    bb159__0_342 -> bb160__0_342 [label="return"];
    bb159__0_342 -> bb740__0_342 [label="unwind"];
    bb160__0_342 -> bb161__0_342 [label="0"];
    bb160__0_342 -> bb162__0_342 [label="1"];
    bb160__0_342 -> bb18__0_342 [label="otherwise"];
    bb161__0_342 -> bb165__0_342 [label="0"];
    bb161__0_342 -> bb164__0_342 [label="otherwise"];
    bb162__0_342 -> bb163__0_342 [label="return"];
    bb162__0_342 -> bb740__0_342 [label="unwind"];
    bb163__0_342 -> bb676__0_342 [label=""];
    bb164__0_342 -> bb178__0_342 [label=""];
    bb165__0_342 -> bb166__0_342 [label="return"];
    bb165__0_342 -> bb740__0_342 [label="unwind"];
    bb166__0_342 -> bb167__0_342 [label="return"];
    bb166__0_342 -> bb740__0_342 [label="unwind"];
    bb167__0_342 -> bb168__0_342 [label="return"];
    bb167__0_342 -> bb740__0_342 [label="unwind"];
    bb168__0_342 -> bb169__0_342 [label="return"];
    bb168__0_342 -> bb704__0_342 [label="unwind"];
    bb169__0_342 -> bb170__0_342 [label="return"];
    bb169__0_342 -> bb704__0_342 [label="unwind"];
    bb170__0_342 -> bb171__0_342 [label="return"];
    bb170__0_342 -> bb740__0_342 [label="unwind"];
    bb171__0_342 -> bb172__0_342 [label="return"];
    bb171__0_342 -> bb740__0_342 [label="unwind"];
    bb172__0_342 -> bb173__0_342 [label="return"];
    bb172__0_342 -> bb740__0_342 [label="unwind"];
    bb173__0_342 -> bb174__0_342 [label="return"];
    bb173__0_342 -> bb740__0_342 [label="unwind"];
    bb174__0_342 -> bb175__0_342 [label="return"];
    bb174__0_342 -> bb703__0_342 [label="unwind"];
    bb175__0_342 -> bb176__0_342 [label="return"];
    bb175__0_342 -> bb703__0_342 [label="unwind"];
    bb176__0_342 -> bb177__0_342 [label="return"];
    bb176__0_342 -> bb740__0_342 [label="unwind"];
    bb177__0_342 -> bb178__0_342 [label=""];
    bb178__0_342 -> bb179__0_342 [label="return"];
    bb178__0_342 -> bb740__0_342 [label="unwind"];
    bb179__0_342 -> bb180__0_342 [label="0"];
    bb179__0_342 -> bb181__0_342 [label="1"];
    bb179__0_342 -> bb18__0_342 [label="otherwise"];
    bb180__0_342 -> bb183__0_342 [label="return"];
    bb180__0_342 -> bb740__0_342 [label="unwind"];
    bb181__0_342 -> bb182__0_342 [label="return"];
    bb181__0_342 -> bb740__0_342 [label="unwind"];
    bb182__0_342 -> bb675__0_342 [label=""];
    bb183__0_342 -> bb184__0_342 [label="return"];
    bb183__0_342 -> bb740__0_342 [label="unwind"];
    bb184__0_342 -> bb185__0_342 [label="0"];
    bb184__0_342 -> bb186__0_342 [label="1"];
    bb184__0_342 -> bb18__0_342 [label="otherwise"];
    bb185__0_342 -> bb189__0_342 [label="0"];
    bb185__0_342 -> bb188__0_342 [label="otherwise"];
    bb186__0_342 -> bb187__0_342 [label="return"];
    bb186__0_342 -> bb740__0_342 [label="unwind"];
    bb187__0_342 -> bb674__0_342 [label=""];
    bb188__0_342 -> bb197__0_342 [label=""];
    bb189__0_342 -> bb190__0_342 [label="return"];
    bb189__0_342 -> bb740__0_342 [label="unwind"];
    bb190__0_342 -> bb191__0_342 [label="return"];
    bb190__0_342 -> bb740__0_342 [label="unwind"];
    bb191__0_342 -> bb192__0_342 [label="return"];
    bb191__0_342 -> bb740__0_342 [label="unwind"];
    bb192__0_342 -> bb193__0_342 [label="return"];
    bb192__0_342 -> bb702__0_342 [label="unwind"];
    bb193__0_342 -> bb194__0_342 [label="return"];
    bb193__0_342 -> bb702__0_342 [label="unwind"];
    bb194__0_342 -> bb195__0_342 [label="return"];
    bb194__0_342 -> bb740__0_342 [label="unwind"];
    bb195__0_342 -> bb196__0_342 [label="return"];
    bb195__0_342 -> bb740__0_342 [label="unwind"];
    bb196__0_342 -> bb197__0_342 [label=""];
    bb197__0_342 -> bb198__0_342 [label="return"];
    bb197__0_342 -> bb740__0_342 [label="unwind"];
    bb198__0_342 -> bb199__0_342 [label="0"];
    bb198__0_342 -> bb200__0_342 [label="1"];
    bb198__0_342 -> bb18__0_342 [label="otherwise"];
    bb199__0_342 -> bb202__0_342 [label="return"];
    bb199__0_342 -> bb740__0_342 [label="unwind"];
    bb200__0_342 -> bb201__0_342 [label="return"];
    bb200__0_342 -> bb740__0_342 [label="unwind"];
    bb201__0_342 -> bb674__0_342 [label=""];
    bb202__0_342 -> bb203__0_342 [label="return"];
    bb202__0_342 -> bb740__0_342 [label="unwind"];
    bb203__0_342 -> bb204__0_342 [label="0"];
    bb203__0_342 -> bb205__0_342 [label="1"];
    bb203__0_342 -> bb18__0_342 [label="otherwise"];
    bb204__0_342 -> bb207__0_342 [label="return"];
    bb204__0_342 -> bb701__0_342 [label="unwind"];
    bb205__0_342 -> bb206__0_342 [label="return"];
    bb205__0_342 -> bb736__0_342 [label="unwind"];
    bb206__0_342 -> bb673__0_342 [label=""];
    bb207__0_342 -> bb208__0_342 [label="return"];
    bb207__0_342 -> bb701__0_342 [label="unwind"];
    bb208__0_342 -> bb209__0_342 [label="return"];
    bb208__0_342 -> bb701__0_342 [label="unwind"];
    bb209__0_342 -> bb210__0_342 [label="0"];
    bb209__0_342 -> bb211__0_342 [label="1"];
    bb209__0_342 -> bb18__0_342 [label="otherwise"];
    bb210__0_342 -> bb213__0_342 [label="return"];
    bb210__0_342 -> bb700__0_342 [label="unwind"];
    bb211__0_342 -> bb212__0_342 [label="return"];
    bb211__0_342 -> bb735__0_342 [label="unwind"];
    bb212__0_342 -> bb672__0_342 [label=""];
    bb213__0_342 -> bb214__0_342 [label="return"];
    bb213__0_342 -> bb700__0_342 [label="unwind"];
    bb214__0_342 -> bb215__0_342 [label="return"];
    bb214__0_342 -> bb700__0_342 [label="unwind"];
    bb215__0_342 -> bb216__0_342 [label="return"];
    bb215__0_342 -> bb700__0_342 [label="unwind"];
    bb216__0_342 -> bb217__0_342 [label="0"];
    bb216__0_342 -> bb218__0_342 [label="1"];
    bb216__0_342 -> bb18__0_342 [label="otherwise"];
    bb217__0_342 -> bb220__0_342 [label="return"];
    bb217__0_342 -> bb700__0_342 [label="unwind"];
    bb218__0_342 -> bb219__0_342 [label="return"];
    bb218__0_342 -> bb700__0_342 [label="unwind"];
    bb219__0_342 -> bb671__0_342 [label=""];
    bb220__0_342 -> bb221__0_342 [label="return"];
    bb220__0_342 -> bb700__0_342 [label="unwind"];
    bb221__0_342 -> bb222__0_342 [label="return"];
    bb221__0_342 -> bb700__0_342 [label="unwind"];
    bb222__0_342 -> bb223__0_342 [label="0"];
    bb222__0_342 -> bb224__0_342 [label="1"];
    bb222__0_342 -> bb18__0_342 [label="otherwise"];
    bb223__0_342 -> bb226__0_342 [label="return"];
    bb223__0_342 -> bb700__0_342 [label="unwind"];
    bb224__0_342 -> bb225__0_342 [label="return"];
    bb224__0_342 -> bb700__0_342 [label="unwind"];
    bb225__0_342 -> bb671__0_342 [label=""];
    bb226__0_342 -> bb227__0_342 [label="return"];
    bb226__0_342 -> bb700__0_342 [label="unwind"];
    bb227__0_342 -> bb228__0_342 [label="return"];
    bb227__0_342 -> bb700__0_342 [label="unwind"];
    bb228__0_342 -> bb229__0_342 [label="return"];
    bb228__0_342 -> bb700__0_342 [label="unwind"];
    bb229__0_342 -> bb230__0_342 [label="0"];
    bb229__0_342 -> bb231__0_342 [label="1"];
    bb229__0_342 -> bb18__0_342 [label="otherwise"];
    bb230__0_342 -> bb233__0_342 [label="return"];
    bb230__0_342 -> bb701__0_342 [label="unwind"];
    bb231__0_342 -> bb232__0_342 [label="return"];
    bb231__0_342 -> bb700__0_342 [label="unwind"];
    bb232__0_342 -> bb669__0_342 [label="return"];
    bb232__0_342 -> bb701__0_342 [label="unwind"];
    bb233__0_342 -> bb234__0_342 [label="return"];
    bb233__0_342 -> bb740__0_342 [label="unwind"];
    bb234__0_342 -> bb235__0_342 [label="return"];
    bb234__0_342 -> bb740__0_342 [label="unwind"];
    bb235__0_342 -> bb236__0_342 [label="return"];
    bb235__0_342 -> bb740__0_342 [label="unwind"];
    bb236__0_342 -> bb237__0_342 [label="0"];
    bb236__0_342 -> bb238__0_342 [label="1"];
    bb236__0_342 -> bb18__0_342 [label="otherwise"];
    bb237__0_342 -> bb240__0_342 [label="return"];
    bb237__0_342 -> bb699__0_342 [label="unwind"];
    bb238__0_342 -> bb239__0_342 [label="return"];
    bb238__0_342 -> bb734__0_342 [label="unwind"];
    bb239__0_342 -> bb666__0_342 [label=""];
    bb240__0_342 -> bb241__0_342 [label="return"];
    bb240__0_342 -> bb699__0_342 [label="unwind"];
    bb241__0_342 -> bb242__0_342 [label="return"];
    bb241__0_342 -> bb699__0_342 [label="unwind"];
    bb242__0_342 -> bb243__0_342 [label="return"];
    bb242__0_342 -> bb699__0_342 [label="unwind"];
    bb243__0_342 -> bb244__0_342 [label="0"];
    bb243__0_342 -> bb245__0_342 [label="1"];
    bb243__0_342 -> bb18__0_342 [label="otherwise"];
    bb244__0_342 -> bb247__0_342 [label="return"];
    bb244__0_342 -> bb699__0_342 [label="unwind"];
    bb245__0_342 -> bb246__0_342 [label="return"];
    bb245__0_342 -> bb699__0_342 [label="unwind"];
    bb246__0_342 -> bb665__0_342 [label=""];
    bb247__0_342 -> bb248__0_342 [label="return"];
    bb247__0_342 -> bb699__0_342 [label="unwind"];
    bb248__0_342 -> bb249__0_342 [label="return"];
    bb248__0_342 -> bb699__0_342 [label="unwind"];
    bb249__0_342 -> bb250__0_342 [label="0"];
    bb249__0_342 -> bb251__0_342 [label="1"];
    bb249__0_342 -> bb18__0_342 [label="otherwise"];
    bb250__0_342 -> bb253__0_342 [label="return"];
    bb250__0_342 -> bb699__0_342 [label="unwind"];
    bb251__0_342 -> bb252__0_342 [label="return"];
    bb251__0_342 -> bb699__0_342 [label="unwind"];
    bb252__0_342 -> bb664__0_342 [label=""];
    bb253__0_342 -> bb254__0_342 [label="return"];
    bb253__0_342 -> bb699__0_342 [label="unwind"];
    bb254__0_342 -> bb255__0_342 [label="0"];
    bb254__0_342 -> bb256__0_342 [label="1"];
    bb254__0_342 -> bb18__0_342 [label="otherwise"];
    bb255__0_342 -> bb258__0_342 [label="return"];
    bb255__0_342 -> bb699__0_342 [label="unwind"];
    bb256__0_342 -> bb257__0_342 [label="return"];
    bb256__0_342 -> bb699__0_342 [label="unwind"];
    bb257__0_342 -> bb663__0_342 [label=""];
    bb258__0_342 -> bb260__0_342 [label="0"];
    bb258__0_342 -> bb259__0_342 [label="otherwise"];
    bb259__0_342 -> bb268__0_342 [label=""];
    bb260__0_342 -> bb261__0_342 [label="return"];
    bb260__0_342 -> bb699__0_342 [label="unwind"];
    bb261__0_342 -> bb262__0_342 [label="return"];
    bb261__0_342 -> bb699__0_342 [label="unwind"];
    bb262__0_342 -> bb263__0_342 [label="return"];
    bb262__0_342 -> bb699__0_342 [label="unwind"];
    bb263__0_342 -> bb264__0_342 [label="return"];
    bb263__0_342 -> bb698__0_342 [label="unwind"];
    bb264__0_342 -> bb265__0_342 [label="return"];
    bb264__0_342 -> bb698__0_342 [label="unwind"];
    bb265__0_342 -> bb266__0_342 [label="return"];
    bb265__0_342 -> bb699__0_342 [label="unwind"];
    bb266__0_342 -> bb267__0_342 [label="return"];
    bb266__0_342 -> bb699__0_342 [label="unwind"];
    bb267__0_342 -> bb268__0_342 [label=""];
    bb268__0_342 -> bb269__0_342 [label="return"];
    bb268__0_342 -> bb699__0_342 [label="unwind"];
    bb269__0_342 -> bb270__0_342 [label="0"];
    bb269__0_342 -> bb271__0_342 [label="1"];
    bb269__0_342 -> bb18__0_342 [label="otherwise"];
    bb270__0_342 -> bb273__0_342 [label="return"];
    bb270__0_342 -> bb699__0_342 [label="unwind"];
    bb271__0_342 -> bb272__0_342 [label="return"];
    bb271__0_342 -> bb699__0_342 [label="unwind"];
    bb272__0_342 -> bb663__0_342 [label=""];
    bb273__0_342 -> bb274__0_342 [label="return"];
    bb273__0_342 -> bb699__0_342 [label="unwind"];
    bb274__0_342 -> bb275__0_342 [label="return"];
    bb274__0_342 -> bb699__0_342 [label="unwind"];
    bb275__0_342 -> bb276__0_342 [label="0"];
    bb275__0_342 -> bb277__0_342 [label="1"];
    bb275__0_342 -> bb18__0_342 [label="otherwise"];
    bb276__0_342 -> bb280__0_342 [label="0"];
    bb276__0_342 -> bb279__0_342 [label="otherwise"];
    bb277__0_342 -> bb278__0_342 [label="return"];
    bb277__0_342 -> bb699__0_342 [label="unwind"];
    bb278__0_342 -> bb662__0_342 [label=""];
    bb279__0_342 -> bb293__0_342 [label=""];
    bb280__0_342 -> bb281__0_342 [label="return"];
    bb280__0_342 -> bb699__0_342 [label="unwind"];
    bb281__0_342 -> bb282__0_342 [label="return"];
    bb281__0_342 -> bb699__0_342 [label="unwind"];
    bb282__0_342 -> bb283__0_342 [label="return"];
    bb282__0_342 -> bb699__0_342 [label="unwind"];
    bb283__0_342 -> bb284__0_342 [label="return"];
    bb283__0_342 -> bb697__0_342 [label="unwind"];
    bb284__0_342 -> bb285__0_342 [label="return"];
    bb284__0_342 -> bb697__0_342 [label="unwind"];
    bb285__0_342 -> bb286__0_342 [label="return"];
    bb285__0_342 -> bb699__0_342 [label="unwind"];
    bb286__0_342 -> bb287__0_342 [label="return"];
    bb286__0_342 -> bb699__0_342 [label="unwind"];
    bb287__0_342 -> bb288__0_342 [label="return"];
    bb287__0_342 -> bb699__0_342 [label="unwind"];
    bb288__0_342 -> bb289__0_342 [label="return"];
    bb288__0_342 -> bb699__0_342 [label="unwind"];
    bb289__0_342 -> bb290__0_342 [label="return"];
    bb289__0_342 -> bb696__0_342 [label="unwind"];
    bb290__0_342 -> bb291__0_342 [label="return"];
    bb290__0_342 -> bb696__0_342 [label="unwind"];
    bb291__0_342 -> bb292__0_342 [label="return"];
    bb291__0_342 -> bb699__0_342 [label="unwind"];
    bb292__0_342 -> bb293__0_342 [label=""];
    bb293__0_342 -> bb294__0_342 [label="return"];
    bb293__0_342 -> bb699__0_342 [label="unwind"];
    bb294__0_342 -> bb295__0_342 [label="0"];
    bb294__0_342 -> bb296__0_342 [label="1"];
    bb294__0_342 -> bb18__0_342 [label="otherwise"];
    bb295__0_342 -> bb298__0_342 [label="return"];
    bb295__0_342 -> bb699__0_342 [label="unwind"];
    bb296__0_342 -> bb297__0_342 [label="return"];
    bb296__0_342 -> bb699__0_342 [label="unwind"];
    bb297__0_342 -> bb662__0_342 [label=""];
    bb298__0_342 -> bb299__0_342 [label="return"];
    bb298__0_342 -> bb699__0_342 [label="unwind"];
    bb299__0_342 -> bb300__0_342 [label="return"];
    bb299__0_342 -> bb699__0_342 [label="unwind"];
    bb300__0_342 -> bb301__0_342 [label="return"];
    bb300__0_342 -> bb699__0_342 [label="unwind"];
    bb301__0_342 -> bb302__0_342 [label="return"];
    bb301__0_342 -> bb699__0_342 [label="unwind"];
    bb302__0_342 -> bb303__0_342 [label="0"];
    bb302__0_342 -> bb304__0_342 [label="1"];
    bb302__0_342 -> bb18__0_342 [label="otherwise"];
    bb303__0_342 -> bb306__0_342 [label="return"];
    bb303__0_342 -> bb740__0_342 [label="unwind"];
    bb304__0_342 -> bb305__0_342 [label="return"];
    bb304__0_342 -> bb699__0_342 [label="unwind"];
    bb305__0_342 -> bb661__0_342 [label="return"];
    bb305__0_342 -> bb740__0_342 [label="unwind"];
    bb306__0_342 -> bb307__0_342 [label="return"];
    bb306__0_342 -> bb740__0_342 [label="unwind"];
    bb307__0_342 -> bb308__0_342 [label="return"];
    bb307__0_342 -> bb740__0_342 [label="unwind"];
    bb308__0_342 -> bb309__0_342 [label="return"];
    bb308__0_342 -> bb740__0_342 [label="unwind"];
    bb309__0_342 -> bb310__0_342 [label="0"];
    bb309__0_342 -> bb311__0_342 [label="1"];
    bb309__0_342 -> bb18__0_342 [label="otherwise"];
    bb310__0_342 -> bb313__0_342 [label="return"];
    bb310__0_342 -> bb740__0_342 [label="unwind"];
    bb311__0_342 -> bb312__0_342 [label="return"];
    bb311__0_342 -> bb740__0_342 [label="unwind"];
    bb312__0_342 -> bb660__0_342 [label=""];
    bb313__0_342 -> bb315__0_342 [label="0"];
    bb313__0_342 -> bb314__0_342 [label="otherwise"];
    bb314__0_342 -> bb325__0_342 [label=""];
    bb315__0_342 -> bb316__0_342 [label="return"];
    bb315__0_342 -> bb740__0_342 [label="unwind"];
    bb316__0_342 -> bb324__0_342 [label="0"];
    bb316__0_342 -> bb317__0_342 [label="otherwise"];
    bb317__0_342 -> bb318__0_342 [label="return"];
    bb317__0_342 -> bb740__0_342 [label="unwind"];
    bb318__0_342 -> bb319__0_342 [label="return"];
    bb318__0_342 -> bb740__0_342 [label="unwind"];
    bb319__0_342 -> bb320__0_342 [label="return"];
    bb319__0_342 -> bb740__0_342 [label="unwind"];
    bb320__0_342 -> bb321__0_342 [label="return"];
    bb320__0_342 -> bb695__0_342 [label="unwind"];
    bb321__0_342 -> bb322__0_342 [label="return"];
    bb321__0_342 -> bb695__0_342 [label="unwind"];
    bb322__0_342 -> bb323__0_342 [label="return"];
    bb322__0_342 -> bb740__0_342 [label="unwind"];
    bb323__0_342 -> bb659__0_342 [label=""];
    bb324__0_342 -> bb325__0_342 [label=""];
    bb325__0_342 -> bb326__0_342 [label="return"];
    bb325__0_342 -> bb740__0_342 [label="unwind"];
    bb326__0_342 -> bb336__0_342 [label="0"];
    bb326__0_342 -> bb327__0_342 [label="otherwise"];
    bb327__0_342 -> bb328__0_342 [label="return"];
    bb327__0_342 -> bb740__0_342 [label="unwind"];
    bb328__0_342 -> bb329__0_342 [label="return"];
    bb328__0_342 -> bb740__0_342 [label="unwind"];
    bb329__0_342 -> bb330__0_342 [label="0"];
    bb329__0_342 -> bb331__0_342 [label="1"];
    bb329__0_342 -> bb18__0_342 [label="otherwise"];
    bb330__0_342 -> bb334__0_342 [label="0"];
    bb330__0_342 -> bb333__0_342 [label="otherwise"];
    bb331__0_342 -> bb332__0_342 [label="return"];
    bb331__0_342 -> bb740__0_342 [label="unwind"];
    bb332__0_342 -> bb658__0_342 [label=""];
    bb333__0_342 -> bb335__0_342 [label="return"];
    bb333__0_342 -> bb740__0_342 [label="unwind"];
    bb334__0_342 -> bb337__0_342 [label=""];
    bb335__0_342 -> bb658__0_342 [label=""];
    bb336__0_342 -> bb337__0_342 [label=""];
    bb337__0_342 -> bb338__0_342 [label="return"];
    bb337__0_342 -> bb740__0_342 [label="unwind"];
    bb338__0_342 -> bb339__0_342 [label="return"];
    bb338__0_342 -> bb740__0_342 [label="unwind"];
    bb339__0_342 -> bb340__0_342 [label="0"];
    bb339__0_342 -> bb341__0_342 [label="1"];
    bb339__0_342 -> bb18__0_342 [label="otherwise"];
    bb340__0_342 -> bb343__0_342 [label="return"];
    bb340__0_342 -> bb740__0_342 [label="unwind"];
    bb341__0_342 -> bb342__0_342 [label="return"];
    bb341__0_342 -> bb740__0_342 [label="unwind"];
    bb342__0_342 -> bb657__0_342 [label=""];
    bb343__0_342 -> bb344__0_342 [label="return"];
    bb343__0_342 -> bb740__0_342 [label="unwind"];
    bb344__0_342 -> bb345__0_342 [label="0"];
    bb344__0_342 -> bb346__0_342 [label="1"];
    bb344__0_342 -> bb18__0_342 [label="otherwise"];
    bb345__0_342 -> bb348__0_342 [label="return"];
    bb345__0_342 -> bb732__0_342 [label="unwind"];
    bb346__0_342 -> bb347__0_342 [label="return"];
    bb346__0_342 -> bb733__0_342 [label="unwind"];
    bb347__0_342 -> bb656__0_342 [label=""];
    bb348__0_342 -> bb350__0_342 [label="0"];
    bb348__0_342 -> bb349__0_342 [label="otherwise"];
    bb349__0_342 -> bb406__0_342 [label=""];
    bb350__0_342 -> bb351__0_342 [label="return"];
    bb350__0_342 -> bb732__0_342 [label="unwind"];
    bb351__0_342 -> bb352__0_342 [label="return"];
    bb351__0_342 -> bb732__0_342 [label="unwind"];
    bb352__0_342 -> bb353__0_342 [label="return"];
    bb352__0_342 -> bb732__0_342 [label="unwind"];
    bb353__0_342 -> bb354__0_342 [label="0"];
    bb353__0_342 -> bb355__0_342 [label="1"];
    bb353__0_342 -> bb18__0_342 [label="otherwise"];
    bb354__0_342 -> bb357__0_342 [label="return"];
    bb354__0_342 -> bb732__0_342 [label="unwind"];
    bb355__0_342 -> bb356__0_342 [label="return"];
    bb355__0_342 -> bb732__0_342 [label="unwind"];
    bb356__0_342 -> bb654__0_342 [label=""];
    bb357__0_342 -> bb358__0_342 [label="return"];
    bb357__0_342 -> bb732__0_342 [label="unwind"];
    bb358__0_342 -> bb359__0_342 [label="0"];
    bb358__0_342 -> bb360__0_342 [label="1"];
    bb358__0_342 -> bb18__0_342 [label="otherwise"];
    bb359__0_342 -> bb362__0_342 [label="return"];
    bb359__0_342 -> bb732__0_342 [label="unwind"];
    bb360__0_342 -> bb361__0_342 [label="return"];
    bb360__0_342 -> bb732__0_342 [label="unwind"];
    bb361__0_342 -> bb653__0_342 [label=""];
    bb362__0_342 -> bb363__0_342 [label="return"];
    bb362__0_342 -> bb732__0_342 [label="unwind"];
    bb363__0_342 -> bb364__0_342 [label="0"];
    bb363__0_342 -> bb365__0_342 [label="1"];
    bb363__0_342 -> bb18__0_342 [label="otherwise"];
    bb364__0_342 -> bb367__0_342 [label="return"];
    bb364__0_342 -> bb732__0_342 [label="unwind"];
    bb365__0_342 -> bb366__0_342 [label="return"];
    bb365__0_342 -> bb732__0_342 [label="unwind"];
    bb366__0_342 -> bb652__0_342 [label=""];
    bb367__0_342 -> bb368__0_342 [label="return"];
    bb367__0_342 -> bb732__0_342 [label="unwind"];
    bb368__0_342 -> bb369__0_342 [label="return"];
    bb368__0_342 -> bb732__0_342 [label="unwind"];
    bb369__0_342 -> bb370__0_342 [label="0"];
    bb369__0_342 -> bb371__0_342 [label="1"];
    bb369__0_342 -> bb18__0_342 [label="otherwise"];
    bb370__0_342 -> bb373__0_342 [label="return"];
    bb370__0_342 -> bb732__0_342 [label="unwind"];
    bb371__0_342 -> bb372__0_342 [label="return"];
    bb371__0_342 -> bb732__0_342 [label="unwind"];
    bb372__0_342 -> bb652__0_342 [label=""];
    bb373__0_342 -> bb374__0_342 [label="return"];
    bb373__0_342 -> bb732__0_342 [label="unwind"];
    bb374__0_342 -> bb375__0_342 [label="0"];
    bb374__0_342 -> bb376__0_342 [label="1"];
    bb374__0_342 -> bb18__0_342 [label="otherwise"];
    bb375__0_342 -> bb378__0_342 [label="return"];
    bb375__0_342 -> bb732__0_342 [label="unwind"];
    bb376__0_342 -> bb377__0_342 [label="return"];
    bb376__0_342 -> bb732__0_342 [label="unwind"];
    bb377__0_342 -> bb652__0_342 [label=""];
    bb378__0_342 -> bb379__0_342 [label="return"];
    bb378__0_342 -> bb732__0_342 [label="unwind"];
    bb379__0_342 -> bb380__0_342 [label="0"];
    bb379__0_342 -> bb381__0_342 [label="1"];
    bb379__0_342 -> bb18__0_342 [label="otherwise"];
    bb380__0_342 -> bb384__0_342 [label="0"];
    bb380__0_342 -> bb383__0_342 [label="otherwise"];
    bb381__0_342 -> bb382__0_342 [label="return"];
    bb381__0_342 -> bb732__0_342 [label="unwind"];
    bb382__0_342 -> bb651__0_342 [label=""];
    bb383__0_342 -> bb385__0_342 [label="return"];
    bb383__0_342 -> bb732__0_342 [label="unwind"];
    bb384__0_342 -> bb406__0_342 [label=""];
    bb385__0_342 -> bb386__0_342 [label="return"];
    bb385__0_342 -> bb732__0_342 [label="unwind"];
    bb386__0_342 -> bb387__0_342 [label="0"];
    bb386__0_342 -> bb388__0_342 [label="1"];
    bb386__0_342 -> bb18__0_342 [label="otherwise"];
    bb387__0_342 -> bb390__0_342 [label="return"];
    bb387__0_342 -> bb694__0_342 [label="unwind"];
    bb388__0_342 -> bb389__0_342 [label="return"];
    bb388__0_342 -> bb730__0_342 [label="unwind"];
    bb389__0_342 -> bb650__0_342 [label=""];
    bb390__0_342 -> bb391__0_342 [label="return"];
    bb390__0_342 -> bb694__0_342 [label="unwind"];
    bb391__0_342 -> bb392__0_342 [label="return"];
    bb391__0_342 -> bb694__0_342 [label="unwind"];
    bb392__0_342 -> bb393__0_342 [label="return"];
    bb392__0_342 -> bb694__0_342 [label="unwind"];
    bb393__0_342 -> bb394__0_342 [label="0"];
    bb393__0_342 -> bb395__0_342 [label="1"];
    bb393__0_342 -> bb18__0_342 [label="otherwise"];
    bb394__0_342 -> bb397__0_342 [label="return"];
    bb394__0_342 -> bb694__0_342 [label="unwind"];
    bb395__0_342 -> bb396__0_342 [label="return"];
    bb395__0_342 -> bb694__0_342 [label="unwind"];
    bb396__0_342 -> bb649__0_342 [label=""];
    bb397__0_342 -> bb398__0_342 [label="return"];
    bb397__0_342 -> bb693__0_342 [label="unwind"];
    bb398__0_342 -> bb399__0_342 [label="return"];
    bb398__0_342 -> bb691__0_342 [label="unwind"];
    bb399__0_342 -> bb400__0_342 [label="return"];
    bb399__0_342 -> bb690__0_342 [label="unwind"];
    bb400__0_342 -> bb401__0_342 [label="return"];
    bb400__0_342 -> bb690__0_342 [label="unwind"];
    bb401__0_342 -> bb402__0_342 [label="return"];
    bb401__0_342 -> bb691__0_342 [label="unwind"];
    bb402__0_342 -> bb403__0_342 [label="return"];
    bb402__0_342 -> bb692__0_342 [label="unwind"];
    bb403__0_342 -> bb404__0_342 [label="return"];
    bb403__0_342 -> bb694__0_342 [label="unwind"];
    bb404__0_342 -> bb405__0_342 [label="return"];
    bb404__0_342 -> bb694__0_342 [label="unwind"];
    bb405__0_342 -> bb649__0_342 [label=""];
    bb406__0_342 -> bb407__0_342 [label="return"];
    bb406__0_342 -> bb732__0_342 [label="unwind"];
    bb407__0_342 -> bb408__0_342 [label="return"];
    bb407__0_342 -> bb732__0_342 [label="unwind"];
    bb408__0_342 -> bb409__0_342 [label="0"];
    bb408__0_342 -> bb410__0_342 [label="1"];
    bb408__0_342 -> bb18__0_342 [label="otherwise"];
    bb409__0_342 -> bb412__0_342 [label="return"];
    bb409__0_342 -> bb732__0_342 [label="unwind"];
    bb410__0_342 -> bb411__0_342 [label="return"];
    bb410__0_342 -> bb732__0_342 [label="unwind"];
    bb411__0_342 -> bb648__0_342 [label=""];
    bb412__0_342 -> bb413__0_342 [label="return"];
    bb412__0_342 -> bb732__0_342 [label="unwind"];
    bb413__0_342 -> bb414__0_342 [label="0"];
    bb413__0_342 -> bb415__0_342 [label="1"];
    bb413__0_342 -> bb18__0_342 [label="otherwise"];
    bb414__0_342 -> bb417__0_342 [label="return"];
    bb414__0_342 -> bb732__0_342 [label="unwind"];
    bb415__0_342 -> bb416__0_342 [label="return"];
    bb415__0_342 -> bb732__0_342 [label="unwind"];
    bb416__0_342 -> bb647__0_342 [label=""];
    bb417__0_342 -> bb418__0_342 [label="return"];
    bb417__0_342 -> bb732__0_342 [label="unwind"];
    bb418__0_342 -> bb419__0_342 [label="0"];
    bb418__0_342 -> bb420__0_342 [label="1"];
    bb418__0_342 -> bb18__0_342 [label="otherwise"];
    bb419__0_342 -> bb422__0_342 [label="return"];
    bb419__0_342 -> bb732__0_342 [label="unwind"];
    bb420__0_342 -> bb421__0_342 [label="return"];
    bb420__0_342 -> bb732__0_342 [label="unwind"];
    bb421__0_342 -> bb646__0_342 [label=""];
    bb422__0_342 -> bb423__0_342 [label="return"];
    bb422__0_342 -> bb732__0_342 [label="unwind"];
    bb423__0_342 -> bb424__0_342 [label="0"];
    bb423__0_342 -> bb425__0_342 [label="1"];
    bb423__0_342 -> bb18__0_342 [label="otherwise"];
    bb424__0_342 -> bb427__0_342 [label="return"];
    bb424__0_342 -> bb732__0_342 [label="unwind"];
    bb425__0_342 -> bb426__0_342 [label="return"];
    bb425__0_342 -> bb732__0_342 [label="unwind"];
    bb426__0_342 -> bb645__0_342 [label=""];
    bb427__0_342 -> bb428__0_342 [label="return"];
    bb427__0_342 -> bb732__0_342 [label="unwind"];
    bb428__0_342 -> bb429__0_342 [label="return"];
    bb428__0_342 -> bb732__0_342 [label="unwind"];
    bb429__0_342 -> bb430__0_342 [label="0"];
    bb429__0_342 -> bb431__0_342 [label="1"];
    bb429__0_342 -> bb18__0_342 [label="otherwise"];
    bb430__0_342 -> bb434__0_342 [label="0"];
    bb430__0_342 -> bb433__0_342 [label="otherwise"];
    bb431__0_342 -> bb432__0_342 [label="return"];
    bb431__0_342 -> bb732__0_342 [label="unwind"];
    bb432__0_342 -> bb644__0_342 [label=""];
    bb433__0_342 -> bb435__0_342 [label="return"];
    bb433__0_342 -> bb732__0_342 [label="unwind"];
    bb434__0_342 -> bb436__0_342 [label="return"];
    bb434__0_342 -> bb732__0_342 [label="unwind"];
    bb435__0_342 -> bb644__0_342 [label=""];
    bb436__0_342 -> bb437__0_342 [label="return"];
    bb436__0_342 -> bb732__0_342 [label="unwind"];
    bb437__0_342 -> bb438__0_342 [label="0"];
    bb437__0_342 -> bb439__0_342 [label="1"];
    bb437__0_342 -> bb18__0_342 [label="otherwise"];
    bb438__0_342 -> bb441__0_342 [label="return"];
    bb438__0_342 -> bb732__0_342 [label="unwind"];
    bb439__0_342 -> bb440__0_342 [label="return"];
    bb439__0_342 -> bb732__0_342 [label="unwind"];
    bb440__0_342 -> bb643__0_342 [label=""];
    bb441__0_342 -> bb442__0_342 [label="return"];
    bb441__0_342 -> bb732__0_342 [label="unwind"];
    bb442__0_342 -> bb443__0_342 [label="0"];
    bb442__0_342 -> bb444__0_342 [label="1"];
    bb442__0_342 -> bb18__0_342 [label="otherwise"];
    bb443__0_342 -> bb446__0_342 [label="return"];
    bb443__0_342 -> bb732__0_342 [label="unwind"];
    bb444__0_342 -> bb445__0_342 [label="return"];
    bb444__0_342 -> bb732__0_342 [label="unwind"];
    bb445__0_342 -> bb641__0_342 [label=""];
    bb446__0_342 -> bb447__0_342 [label="return"];
    bb446__0_342 -> bb732__0_342 [label="unwind"];
    bb447__0_342 -> bb448__0_342 [label="0"];
    bb447__0_342 -> bb449__0_342 [label="1"];
    bb447__0_342 -> bb18__0_342 [label="otherwise"];
    bb448__0_342 -> bb451__0_342 [label="success"];
    bb448__0_342 -> bb732__0_342 [label="unwind"];
    bb449__0_342 -> bb450__0_342 [label="return"];
    bb449__0_342 -> bb732__0_342 [label="unwind"];
    bb450__0_342 -> bb641__0_342 [label=""];
    bb451__0_342 -> bb453__0_342 [label="0"];
    bb451__0_342 -> bb452__0_342 [label="otherwise"];
    bb452__0_342 -> bb454__0_342 [label=""];
    bb453__0_342 -> bb454__0_342 [label=""];
    bb454__0_342 -> bb455__0_342 [label="return"];
    bb454__0_342 -> bb732__0_342 [label="unwind"];
    bb455__0_342 -> bb456__0_342 [label="return"];
    bb455__0_342 -> bb732__0_342 [label="unwind"];
    bb456__0_342 -> bb457__0_342 [label="return"];
    bb456__0_342 -> bb732__0_342 [label="unwind"];
    bb457__0_342 -> bb458__0_342 [label="return"];
    bb457__0_342 -> bb732__0_342 [label="unwind"];
    bb458__0_342 -> bb459__0_342 [label="return"];
    bb458__0_342 -> bb732__0_342 [label="unwind"];
    bb459__0_342 -> bb460__0_342 [label="return"];
    bb459__0_342 -> bb732__0_342 [label="unwind"];
    bb460__0_342 -> bb461__0_342 [label="0"];
    bb460__0_342 -> bb462__0_342 [label="1"];
    bb460__0_342 -> bb18__0_342 [label="otherwise"];
    bb461__0_342 -> bb465__0_342 [label="0"];
    bb461__0_342 -> bb464__0_342 [label="otherwise"];
    bb462__0_342 -> bb463__0_342 [label="return"];
    bb462__0_342 -> bb732__0_342 [label="unwind"];
    bb463__0_342 -> bb640__0_342 [label=""];
    bb464__0_342 -> bb466__0_342 [label=""];
    bb465__0_342 -> bb467__0_342 [label="0"];
    bb465__0_342 -> bb466__0_342 [label="otherwise"];
    bb466__0_342 -> bb468__0_342 [label="return"];
    bb466__0_342 -> bb732__0_342 [label="unwind"];
    bb467__0_342 -> bb491__0_342 [label="return"];
    bb467__0_342 -> bb732__0_342 [label="unwind"];
    bb468__0_342 -> bb469__0_342 [label="return"];
    bb468__0_342 -> bb732__0_342 [label="unwind"];
    bb469__0_342 -> bb470__0_342 [label="return"];
    bb469__0_342 -> bb732__0_342 [label="unwind"];
    bb470__0_342 -> bb471__0_342 [label="return"];
    bb470__0_342 -> bb732__0_342 [label="unwind"];
    bb471__0_342 -> bb472__0_342 [label="return"];
    bb471__0_342 -> bb689__0_342 [label="unwind"];
    bb472__0_342 -> bb473__0_342 [label="return"];
    bb472__0_342 -> bb689__0_342 [label="unwind"];
    bb473__0_342 -> bb474__0_342 [label="return"];
    bb473__0_342 -> bb732__0_342 [label="unwind"];
    bb474__0_342 -> bb475__0_342 [label="return"];
    bb474__0_342 -> bb732__0_342 [label="unwind"];
    bb475__0_342 -> bb476__0_342 [label="return"];
    bb475__0_342 -> bb732__0_342 [label="unwind"];
    bb476__0_342 -> bb477__0_342 [label="return"];
    bb476__0_342 -> bb732__0_342 [label="unwind"];
    bb477__0_342 -> bb478__0_342 [label="return"];
    bb477__0_342 -> bb732__0_342 [label="unwind"];
    bb478__0_342 -> bb479__0_342 [label="return"];
    bb478__0_342 -> bb732__0_342 [label="unwind"];
    bb479__0_342 -> bb480__0_342 [label="return"];
    bb479__0_342 -> bb688__0_342 [label="unwind"];
    bb480__0_342 -> bb481__0_342 [label="return"];
    bb480__0_342 -> bb688__0_342 [label="unwind"];
    bb481__0_342 -> bb482__0_342 [label="return"];
    bb481__0_342 -> bb732__0_342 [label="unwind"];
    bb482__0_342 -> bb483__0_342 [label="return"];
    bb482__0_342 -> bb732__0_342 [label="unwind"];
    bb483__0_342 -> bb484__0_342 [label="return"];
    bb483__0_342 -> bb732__0_342 [label="unwind"];
    bb484__0_342 -> bb485__0_342 [label="return"];
    bb484__0_342 -> bb732__0_342 [label="unwind"];
    bb485__0_342 -> bb486__0_342 [label="return"];
    bb485__0_342 -> bb732__0_342 [label="unwind"];
    bb486__0_342 -> bb487__0_342 [label="return"];
    bb486__0_342 -> bb732__0_342 [label="unwind"];
    bb487__0_342 -> bb488__0_342 [label="return"];
    bb487__0_342 -> bb687__0_342 [label="unwind"];
    bb488__0_342 -> bb489__0_342 [label="return"];
    bb488__0_342 -> bb687__0_342 [label="unwind"];
    bb489__0_342 -> bb490__0_342 [label="return"];
    bb489__0_342 -> bb732__0_342 [label="unwind"];
    bb490__0_342 -> bb640__0_342 [label=""];
    bb491__0_342 -> bb492__0_342 [label="return"];
    bb491__0_342 -> bb732__0_342 [label="unwind"];
    bb492__0_342 -> bb493__0_342 [label="0"];
    bb492__0_342 -> bb494__0_342 [label="1"];
    bb492__0_342 -> bb18__0_342 [label="otherwise"];
    bb493__0_342 -> bb496__0_342 [label="return"];
    bb493__0_342 -> bb732__0_342 [label="unwind"];
    bb494__0_342 -> bb495__0_342 [label="return"];
    bb494__0_342 -> bb732__0_342 [label="unwind"];
    bb495__0_342 -> bb640__0_342 [label=""];
    bb496__0_342 -> bb497__0_342 [label="return"];
    bb496__0_342 -> bb732__0_342 [label="unwind"];
    bb497__0_342 -> bb498__0_342 [label="0"];
    bb497__0_342 -> bb499__0_342 [label="1"];
    bb497__0_342 -> bb18__0_342 [label="otherwise"];
    bb498__0_342 -> bb501__0_342 [label="return"];
    bb498__0_342 -> bb686__0_342 [label="unwind"];
    bb499__0_342 -> bb500__0_342 [label="return"];
    bb499__0_342 -> bb729__0_342 [label="unwind"];
    bb500__0_342 -> bb639__0_342 [label=""];
    bb501__0_342 -> bb502__0_342 [label="return"];
    bb501__0_342 -> bb686__0_342 [label="unwind"];
    bb502__0_342 -> bb503__0_342 [label="return"];
    bb502__0_342 -> bb686__0_342 [label="unwind"];
    bb503__0_342 -> bb504__0_342 [label="0"];
    bb503__0_342 -> bb505__0_342 [label="1"];
    bb503__0_342 -> bb18__0_342 [label="otherwise"];
    bb504__0_342 -> bb507__0_342 [label="return"];
    bb504__0_342 -> bb686__0_342 [label="unwind"];
    bb505__0_342 -> bb506__0_342 [label="return"];
    bb505__0_342 -> bb686__0_342 [label="unwind"];
    bb506__0_342 -> bb637__0_342 [label=""];
    bb507__0_342 -> bb508__0_342 [label="return"];
    bb507__0_342 -> bb686__0_342 [label="unwind"];
    bb508__0_342 -> bb509__0_342 [label="0"];
    bb508__0_342 -> bb510__0_342 [label="1"];
    bb508__0_342 -> bb18__0_342 [label="otherwise"];
    bb509__0_342 -> bb512__0_342 [label="return"];
    bb509__0_342 -> bb686__0_342 [label="unwind"];
    bb510__0_342 -> bb511__0_342 [label="return"];
    bb510__0_342 -> bb686__0_342 [label="unwind"];
    bb511__0_342 -> bb637__0_342 [label=""];
    bb512__0_342 -> bb513__0_342 [label="return"];
    bb512__0_342 -> bb686__0_342 [label="unwind"];
    bb513__0_342 -> bb514__0_342 [label="return"];
    bb513__0_342 -> bb686__0_342 [label="unwind"];
    bb514__0_342 -> bb515__0_342 [label="0"];
    bb514__0_342 -> bb516__0_342 [label="1"];
    bb514__0_342 -> bb18__0_342 [label="otherwise"];
    bb515__0_342 -> bb518__0_342 [label="return"];
    bb515__0_342 -> bb686__0_342 [label="unwind"];
    bb516__0_342 -> bb517__0_342 [label="return"];
    bb516__0_342 -> bb686__0_342 [label="unwind"];
    bb517__0_342 -> bb636__0_342 [label=""];
    bb518__0_342 -> bb519__0_342 [label="return"];
    bb518__0_342 -> bb686__0_342 [label="unwind"];
    bb519__0_342 -> bb520__0_342 [label="0"];
    bb519__0_342 -> bb521__0_342 [label="1"];
    bb519__0_342 -> bb18__0_342 [label="otherwise"];
    bb520__0_342 -> bb523__0_342 [label="return"];
    bb520__0_342 -> bb732__0_342 [label="unwind"];
    bb521__0_342 -> bb522__0_342 [label="return"];
    bb521__0_342 -> bb686__0_342 [label="unwind"];
    bb522__0_342 -> bb636__0_342 [label=""];
    bb523__0_342 -> bb524__0_342 [label="return"];
    bb523__0_342 -> bb732__0_342 [label="unwind"];
    bb524__0_342 -> bb525__0_342 [label="return"];
    bb524__0_342 -> bb732__0_342 [label="unwind"];
    bb525__0_342 -> bb526__0_342 [label="0"];
    bb525__0_342 -> bb527__0_342 [label="1"];
    bb525__0_342 -> bb18__0_342 [label="otherwise"];
    bb526__0_342 -> bb529__0_342 [label="return"];
    bb526__0_342 -> bb685__0_342 [label="unwind"];
    bb527__0_342 -> bb528__0_342 [label="return"];
    bb527__0_342 -> bb728__0_342 [label="unwind"];
    bb528__0_342 -> bb635__0_342 [label=""];
    bb529__0_342 -> bb530__0_342 [label="return"];
    bb529__0_342 -> bb685__0_342 [label="unwind"];
    bb530__0_342 -> bb531__0_342 [label="0"];
    bb530__0_342 -> bb532__0_342 [label="1"];
    bb530__0_342 -> bb18__0_342 [label="otherwise"];
    bb531__0_342 -> bb534__0_342 [label="return"];
    bb531__0_342 -> bb685__0_342 [label="unwind"];
    bb532__0_342 -> bb533__0_342 [label="return"];
    bb532__0_342 -> bb685__0_342 [label="unwind"];
    bb533__0_342 -> bb634__0_342 [label=""];
    bb534__0_342 -> bb535__0_342 [label="return"];
    bb534__0_342 -> bb685__0_342 [label="unwind"];
    bb535__0_342 -> bb536__0_342 [label="return"];
    bb535__0_342 -> bb685__0_342 [label="unwind"];
    bb536__0_342 -> bb537__0_342 [label="0"];
    bb536__0_342 -> bb538__0_342 [label="1"];
    bb536__0_342 -> bb18__0_342 [label="otherwise"];
    bb537__0_342 -> bb540__0_342 [label="return"];
    bb537__0_342 -> bb685__0_342 [label="unwind"];
    bb538__0_342 -> bb539__0_342 [label="return"];
    bb538__0_342 -> bb685__0_342 [label="unwind"];
    bb539__0_342 -> bb633__0_342 [label=""];
    bb540__0_342 -> bb541__0_342 [label="return"];
    bb540__0_342 -> bb685__0_342 [label="unwind"];
    bb541__0_342 -> bb542__0_342 [label="0"];
    bb541__0_342 -> bb543__0_342 [label="1"];
    bb541__0_342 -> bb18__0_342 [label="otherwise"];
    bb542__0_342 -> bb545__0_342 [label="return"];
    bb542__0_342 -> bb685__0_342 [label="unwind"];
    bb543__0_342 -> bb544__0_342 [label="return"];
    bb543__0_342 -> bb685__0_342 [label="unwind"];
    bb544__0_342 -> bb633__0_342 [label=""];
    bb545__0_342 -> bb546__0_342 [label="return"];
    bb545__0_342 -> bb685__0_342 [label="unwind"];
    bb546__0_342 -> bb547__0_342 [label="0"];
    bb546__0_342 -> bb548__0_342 [label="1"];
    bb546__0_342 -> bb18__0_342 [label="otherwise"];
    bb547__0_342 -> bb550__0_342 [label="return"];
    bb547__0_342 -> bb685__0_342 [label="unwind"];
    bb548__0_342 -> bb549__0_342 [label="return"];
    bb548__0_342 -> bb685__0_342 [label="unwind"];
    bb549__0_342 -> bb632__0_342 [label=""];
    bb550__0_342 -> bb551__0_342 [label="return"];
    bb550__0_342 -> bb685__0_342 [label="unwind"];
    bb551__0_342 -> bb552__0_342 [label="return"];
    bb551__0_342 -> bb685__0_342 [label="unwind"];
    bb552__0_342 -> bb553__0_342 [label="0"];
    bb552__0_342 -> bb554__0_342 [label="1"];
    bb552__0_342 -> bb18__0_342 [label="otherwise"];
    bb553__0_342 -> bb556__0_342 [label="success"];
    bb553__0_342 -> bb685__0_342 [label="unwind"];
    bb554__0_342 -> bb555__0_342 [label="return"];
    bb554__0_342 -> bb685__0_342 [label="unwind"];
    bb555__0_342 -> bb631__0_342 [label=""];
    bb556__0_342 -> bb557__0_342 [label="return"];
    bb556__0_342 -> bb685__0_342 [label="unwind"];
    bb557__0_342 -> bb558__0_342 [label="return"];
    bb557__0_342 -> bb685__0_342 [label="unwind"];
    bb558__0_342 -> bb559__0_342 [label="0"];
    bb558__0_342 -> bb560__0_342 [label="1"];
    bb558__0_342 -> bb18__0_342 [label="otherwise"];
    bb559__0_342 -> bb562__0_342 [label="return"];
    bb559__0_342 -> bb732__0_342 [label="unwind"];
    bb560__0_342 -> bb561__0_342 [label="return"];
    bb560__0_342 -> bb685__0_342 [label="unwind"];
    bb561__0_342 -> bb631__0_342 [label=""];
    bb562__0_342 -> bb563__0_342 [label="return"];
    bb562__0_342 -> bb732__0_342 [label="unwind"];
    bb563__0_342 -> bb564__0_342 [label="return"];
    bb563__0_342 -> bb732__0_342 [label="unwind"];
    bb564__0_342 -> bb565__0_342 [label="0"];
    bb564__0_342 -> bb566__0_342 [label="1"];
    bb564__0_342 -> bb18__0_342 [label="otherwise"];
    bb565__0_342 -> bb568__0_342 [label="return"];
    bb565__0_342 -> bb732__0_342 [label="unwind"];
    bb566__0_342 -> bb567__0_342 [label="return"];
    bb566__0_342 -> bb732__0_342 [label="unwind"];
    bb567__0_342 -> bb640__0_342 [label=""];
    bb568__0_342 -> bb569__0_342 [label="return"];
    bb568__0_342 -> bb732__0_342 [label="unwind"];
    bb569__0_342 -> bb570__0_342 [label="0"];
    bb569__0_342 -> bb571__0_342 [label="1"];
    bb569__0_342 -> bb18__0_342 [label="otherwise"];
    bb570__0_342 -> bb573__0_342 [label="return"];
    bb570__0_342 -> bb732__0_342 [label="unwind"];
    bb571__0_342 -> bb572__0_342 [label="return"];
    bb571__0_342 -> bb732__0_342 [label="unwind"];
    bb572__0_342 -> bb630__0_342 [label=""];
    bb573__0_342 -> bb574__0_342 [label="return"];
    bb573__0_342 -> bb732__0_342 [label="unwind"];
    bb574__0_342 -> bb575__0_342 [label="0"];
    bb574__0_342 -> bb576__0_342 [label="1"];
    bb574__0_342 -> bb18__0_342 [label="otherwise"];
    bb575__0_342 -> bb579__0_342 [label="0"];
    bb575__0_342 -> bb578__0_342 [label="otherwise"];
    bb576__0_342 -> bb577__0_342 [label="return"];
    bb576__0_342 -> bb732__0_342 [label="unwind"];
    bb577__0_342 -> bb630__0_342 [label=""];
    bb578__0_342 -> bb580__0_342 [label="return"];
    bb578__0_342 -> bb732__0_342 [label="unwind"];
    bb579__0_342 -> bb581__0_342 [label="return"];
    bb579__0_342 -> bb732__0_342 [label="unwind"];
    bb580__0_342 -> bb586__0_342 [label=""];
    bb581__0_342 -> bb584__0_342 [label="0"];
    bb581__0_342 -> bb582__0_342 [label="otherwise"];
    bb582__0_342 -> bb583__0_342 [label="return"];
    bb582__0_342 -> bb732__0_342 [label="unwind"];
    bb583__0_342 -> bb585__0_342 [label=""];
    bb584__0_342 -> bb585__0_342 [label=""];
    bb585__0_342 -> bb586__0_342 [label=""];
    bb586__0_342 -> bb587__0_342 [label="return"];
    bb586__0_342 -> bb732__0_342 [label="unwind"];
    bb587__0_342 -> bb588__0_342 [label="return"];
    bb587__0_342 -> bb732__0_342 [label="unwind"];
    bb588__0_342 -> bb589__0_342 [label="0"];
    bb588__0_342 -> bb590__0_342 [label="1"];
    bb588__0_342 -> bb18__0_342 [label="otherwise"];
    bb589__0_342 -> bb593__0_342 [label="0"];
    bb589__0_342 -> bb592__0_342 [label="otherwise"];
    bb590__0_342 -> bb591__0_342 [label="return"];
    bb590__0_342 -> bb732__0_342 [label="unwind"];
    bb591__0_342 -> bb629__0_342 [label=""];
    bb592__0_342 -> bb601__0_342 [label=""];
    bb593__0_342 -> bb594__0_342 [label="return"];
    bb593__0_342 -> bb732__0_342 [label="unwind"];
    bb594__0_342 -> bb595__0_342 [label="return"];
    bb594__0_342 -> bb732__0_342 [label="unwind"];
    bb595__0_342 -> bb596__0_342 [label="return"];
    bb595__0_342 -> bb732__0_342 [label="unwind"];
    bb596__0_342 -> bb597__0_342 [label="return"];
    bb596__0_342 -> bb684__0_342 [label="unwind"];
    bb597__0_342 -> bb598__0_342 [label="return"];
    bb597__0_342 -> bb684__0_342 [label="unwind"];
    bb598__0_342 -> bb599__0_342 [label="return"];
    bb598__0_342 -> bb732__0_342 [label="unwind"];
    bb599__0_342 -> bb600__0_342 [label="return"];
    bb599__0_342 -> bb732__0_342 [label="unwind"];
    bb600__0_342 -> bb601__0_342 [label=""];
    bb601__0_342 -> bb602__0_342 [label="return"];
    bb601__0_342 -> bb732__0_342 [label="unwind"];
    bb602__0_342 -> bb603__0_342 [label="0"];
    bb602__0_342 -> bb604__0_342 [label="1"];
    bb602__0_342 -> bb18__0_342 [label="otherwise"];
    bb603__0_342 -> bb606__0_342 [label="return"];
    bb603__0_342 -> bb732__0_342 [label="unwind"];
    bb604__0_342 -> bb605__0_342 [label="return"];
    bb604__0_342 -> bb732__0_342 [label="unwind"];
    bb605__0_342 -> bb629__0_342 [label=""];
    bb606__0_342 -> bb607__0_342 [label="return"];
    bb606__0_342 -> bb732__0_342 [label="unwind"];
    bb607__0_342 -> bb608__0_342 [label="0"];
    bb607__0_342 -> bb609__0_342 [label="1"];
    bb607__0_342 -> bb18__0_342 [label="otherwise"];
    bb608__0_342 -> bb611__0_342 [label="return"];
    bb608__0_342 -> bb683__0_342 [label="unwind"];
    bb609__0_342 -> bb610__0_342 [label="return"];
    bb609__0_342 -> bb727__0_342 [label="unwind"];
    bb610__0_342 -> bb628__0_342 [label=""];
    bb611__0_342 -> bb612__0_342 [label="return"];
    bb611__0_342 -> bb683__0_342 [label="unwind"];
    bb612__0_342 -> bb613__0_342 [label="return"];
    bb612__0_342 -> bb683__0_342 [label="unwind"];
    bb613__0_342 -> bb614__0_342 [label="return"];
    bb613__0_342 -> bb683__0_342 [label="unwind"];
    bb614__0_342 -> bb615__0_342 [label="0"];
    bb614__0_342 -> bb616__0_342 [label="1"];
    bb614__0_342 -> bb18__0_342 [label="otherwise"];
    bb615__0_342 -> bb618__0_342 [label="return"];
    bb615__0_342 -> bb732__0_342 [label="unwind"];
    bb616__0_342 -> bb617__0_342 [label="return"];
    bb616__0_342 -> bb683__0_342 [label="unwind"];
    bb617__0_342 -> bb627__0_342 [label="return"];
    bb617__0_342 -> bb732__0_342 [label="unwind"];
    bb618__0_342 -> bb619__0_342 [label="return"];
    bb618__0_342 -> bb732__0_342 [label="unwind"];
    bb619__0_342 -> bb620__0_342 [label="return"];
    bb619__0_342 -> bb732__0_342 [label="unwind"];
    bb620__0_342 -> bb621__0_342 [label="return"];
    bb620__0_342 -> bb682__0_342 [label="unwind"];
    bb621__0_342 -> bb622__0_342 [label="return"];
    bb621__0_342 -> bb681__0_342 [label="unwind"];
    bb622__0_342 -> bb623__0_342 [label="return"];
    bb622__0_342 -> bb681__0_342 [label="unwind"];
    bb623__0_342 -> bb624__0_342 [label="return"];
    bb623__0_342 -> bb682__0_342 [label="unwind"];
    bb624__0_342 -> bb625__0_342 [label="return"];
    bb624__0_342 -> bb732__0_342 [label="unwind"];
    bb625__0_342 -> bb626__0_342 [label="return"];
    bb625__0_342 -> bb740__0_342 [label="unwind"];
    bb626__0_342 -> bb680__0_342 [label=""];
    bb627__0_342 -> bb628__0_342 [label=""];
    bb628__0_342 -> bb629__0_342 [label=""];
    bb629__0_342 -> bb630__0_342 [label=""];
    bb630__0_342 -> bb640__0_342 [label=""];
    bb631__0_342 -> bb632__0_342 [label=""];
    bb632__0_342 -> bb634__0_342 [label=""];
    bb633__0_342 -> bb634__0_342 [label=""];
    bb634__0_342 -> bb635__0_342 [label="return"];
    bb634__0_342 -> bb732__0_342 [label="unwind"];
    bb635__0_342 -> bb640__0_342 [label=""];
    bb636__0_342 -> bb638__0_342 [label=""];
    bb637__0_342 -> bb638__0_342 [label=""];
    bb638__0_342 -> bb639__0_342 [label="return"];
    bb638__0_342 -> bb732__0_342 [label="unwind"];
    bb639__0_342 -> bb640__0_342 [label=""];
    bb640__0_342 -> bb642__0_342 [label=""];
    bb641__0_342 -> bb642__0_342 [label=""];
    bb642__0_342 -> bb643__0_342 [label=""];
    bb643__0_342 -> bb644__0_342 [label=""];
    bb644__0_342 -> bb645__0_342 [label=""];
    bb645__0_342 -> bb646__0_342 [label=""];
    bb646__0_342 -> bb647__0_342 [label=""];
    bb647__0_342 -> bb648__0_342 [label=""];
    bb648__0_342 -> bb655__0_342 [label=""];
    bb649__0_342 -> bb650__0_342 [label="return"];
    bb649__0_342 -> bb732__0_342 [label="unwind"];
    bb650__0_342 -> bb651__0_342 [label=""];
    bb651__0_342 -> bb652__0_342 [label=""];
    bb652__0_342 -> bb653__0_342 [label=""];
    bb653__0_342 -> bb654__0_342 [label=""];
    bb654__0_342 -> bb655__0_342 [label=""];
    bb655__0_342 -> bb656__0_342 [label="0"];
    bb655__0_342 -> bb720__0_342 [label="otherwise"];
    bb656__0_342 -> bb657__0_342 [label=""];
    bb657__0_342 -> bb660__0_342 [label=""];
    bb658__0_342 -> bb659__0_342 [label=""];
    bb659__0_342 -> bb660__0_342 [label=""];
    bb660__0_342 -> bb668__0_342 [label=""];
    bb661__0_342 -> bb667__0_342 [label=""];
    bb662__0_342 -> bb663__0_342 [label=""];
    bb663__0_342 -> bb664__0_342 [label=""];
    bb664__0_342 -> bb665__0_342 [label=""];
    bb665__0_342 -> bb666__0_342 [label="return"];
    bb665__0_342 -> bb740__0_342 [label="unwind"];
    bb666__0_342 -> bb667__0_342 [label=""];
    bb667__0_342 -> bb668__0_342 [label=""];
    bb668__0_342 -> bb724__0_342 [label=""];
    bb669__0_342 -> bb670__0_342 [label="return"];
    bb669__0_342 -> bb740__0_342 [label="unwind"];
    bb670__0_342 -> bb677__0_342 [label=""];
    bb671__0_342 -> bb672__0_342 [label="return"];
    bb671__0_342 -> bb701__0_342 [label="unwind"];
    bb672__0_342 -> bb673__0_342 [label="return"];
    bb672__0_342 -> bb740__0_342 [label="unwind"];
    bb673__0_342 -> bb674__0_342 [label=""];
    bb674__0_342 -> bb675__0_342 [label=""];
    bb675__0_342 -> bb676__0_342 [label=""];
    bb676__0_342 -> bb677__0_342 [label=""];
    bb677__0_342 -> bb724__0_342 [label=""];
    bb678__0_342 -> bb726__0_342 [label=""];
    bb679__0_342 -> bb680__0_342 [label=""];
    bb681__0_342 -> bb682__0_342 [label="return"];
    bb682__0_342 -> bb732__0_342 [label="return"];
    bb683__0_342 -> bb732__0_342 [label="return"];
    bb684__0_342 -> bb732__0_342 [label="return"];
    bb685__0_342 -> bb732__0_342 [label="return"];
    bb686__0_342 -> bb732__0_342 [label="return"];
    bb687__0_342 -> bb732__0_342 [label="return"];
    bb688__0_342 -> bb732__0_342 [label="return"];
    bb689__0_342 -> bb732__0_342 [label="return"];
    bb690__0_342 -> bb691__0_342 [label="return"];
    bb691__0_342 -> bb692__0_342 [label="return"];
    bb692__0_342 -> bb694__0_342 [label="return"];
    bb693__0_342 -> bb694__0_342 [label="return"];
    bb694__0_342 -> bb732__0_342 [label="return"];
    bb695__0_342 -> bb740__0_342 [label="return"];
    bb696__0_342 -> bb699__0_342 [label="return"];
    bb697__0_342 -> bb699__0_342 [label="return"];
    bb698__0_342 -> bb699__0_342 [label="return"];
    bb699__0_342 -> bb740__0_342 [label="return"];
    bb700__0_342 -> bb701__0_342 [label="return"];
    bb701__0_342 -> bb740__0_342 [label="return"];
    bb702__0_342 -> bb740__0_342 [label="return"];
    bb703__0_342 -> bb740__0_342 [label="return"];
    bb704__0_342 -> bb740__0_342 [label="return"];
    bb705__0_342 -> bb737__0_342 [label="return"];
    bb706__0_342 -> bb738__0_342 [label="return"];
    bb707__0_342 -> bb740__0_342 [label="return"];
    bb708__0_342 -> bb740__0_342 [label="return"];
    bb709__0_342 -> bb743__0_342 [label="return"];
    bb710__0_342 -> bb743__0_342 [label="return"];
    bb711__0_342 -> bb717__0_342 [label="return"];
    bb712__0_342 -> bb717__0_342 [label="return"];
    bb713__0_342 -> bb717__0_342 [label="return"];
    bb714__0_342 -> bb717__0_342 [label="return"];
    bb715__0_342 -> bb717__0_342 [label="return"];
    bb716__0_342 -> bb717__0_342 [label="return"];
    bb718__0_342 -> bb148__0_342 [label="return"];
    bb718__0_342 -> bb740__0_342 [label="unwind"];
    bb719__0_342 -> bb159__0_342 [label="return"];
    bb719__0_342 -> bb740__0_342 [label="unwind"];
    bb720__0_342 -> bb656__0_342 [label="return"];
    bb720__0_342 -> bb740__0_342 [label="unwind"];
    bb721__0_342 -> bb724__0_342 [label=""];
    bb722__0_342 -> bb724__0_342 [label=""];
    bb723__0_342 -> bb678__0_342 [label="return"];
    bb723__0_342 -> bb743__0_342 [label="unwind"];
    bb724__0_342 -> bb678__0_342 [label="0"];
    bb724__0_342 -> bb723__0_342 [label="otherwise"];
    bb725__0_342 -> bb679__0_342 [label="return"];
    bb725__0_342 -> bb717__0_342 [label="unwind"];
    bb726__0_342 -> bb679__0_342 [label="0"];
    bb726__0_342 -> bb725__0_342 [label="otherwise"];
    bb727__0_342 -> bb732__0_342 [label=""];
    bb728__0_342 -> bb732__0_342 [label=""];
    bb729__0_342 -> bb732__0_342 [label=""];
    bb730__0_342 -> bb732__0_342 [label=""];
    bb731__0_342 -> bb740__0_342 [label="return"];
    bb732__0_342 -> bb740__0_342 [label="0"];
    bb732__0_342 -> bb731__0_342 [label="otherwise"];
    bb733__0_342 -> bb740__0_342 [label=""];
    bb734__0_342 -> bb740__0_342 [label=""];
    bb735__0_342 -> bb701__0_342 [label=""];
    bb736__0_342 -> bb740__0_342 [label=""];
    bb737__0_342 -> bb740__0_342 [label=""];
    bb738__0_342 -> bb740__0_342 [label=""];
    bb739__0_342 -> bb743__0_342 [label="return"];
    bb740__0_342 -> bb743__0_342 [label="0"];
    bb740__0_342 -> bb739__0_342 [label="otherwise"];
    bb741__0_342 -> bb743__0_342 [label=""];
    bb742__0_342 -> bb717__0_342 [label="return"];
    bb743__0_342 -> bb717__0_342 [label="0"];
    bb743__0_342 -> bb742__0_342 [label="otherwise"];
    bb744__0_342 -> bb717__0_342 [label=""];
}
