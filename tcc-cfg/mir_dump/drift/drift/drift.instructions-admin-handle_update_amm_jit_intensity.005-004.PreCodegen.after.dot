digraph Mir_0_5621 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn admin::handle_update_amm_jit_intensity(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::admin::HotAdminUpdatePerpMarket&lt;ReErased&gt;&gt;, _2: u8) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _5: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _6: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _7: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _8: isize;<br align="left"/>let _9: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _10: !;<br align="left"/>let mut _11: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _12: ();<br align="left"/>let _13: ();<br align="left"/>let mut _14: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _15: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _16: bool;<br align="left"/>let mut _17: &amp;ReErased std::ops::RangeInclusive&lt;u8&gt;;<br align="left"/>let _18: std::ops::RangeInclusive&lt;u8&gt;;<br align="left"/>let mut _19: &amp;ReErased u8;<br align="left"/>let _20: &amp;ReErased u8;<br align="left"/>let mut _21: ();<br align="left"/>let _22: error::ErrorCode;<br align="left"/>let _23: ();<br align="left"/>let mut _24: &amp;ReErased str;<br align="left"/>let _25: &amp;ReErased str;<br align="left"/>let mut _26: &amp;ReErased std::string::String;<br align="left"/>let _27: &amp;ReErased std::string::String;<br align="left"/>let _28: std::string::String;<br align="left"/>let _29: std::string::String;<br align="left"/>let mut _30: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _31: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _32: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _33: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _34: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _35: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _36: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _37: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _38: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _39: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _40: &amp;ReErased error::ErrorCode;<br align="left"/>let _41: &amp;ReErased error::ErrorCode;<br align="left"/>let _42: ();<br align="left"/>let mut _43: &amp;ReErased str;<br align="left"/>let _44: &amp;ReErased str;<br align="left"/>let mut _45: &amp;ReErased std::string::String;<br align="left"/>let _46: &amp;ReErased std::string::String;<br align="left"/>let _47: std::string::String;<br align="left"/>let _48: std::string::String;<br align="left"/>let mut _49: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _50: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _51: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _52: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _53: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _54: error::ErrorCode;<br align="left"/>let mut _55: isize;<br align="left"/>let _56: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _57: !;<br align="left"/>let mut _58: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _59: ();<br align="left"/>let _60: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _61: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _62: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _63: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _64: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _65: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _66: Closure(DefId(0:5622 ~ drift[d311]::instructions::admin::handle_update_amm_jit_intensity::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _67: isize;<br align="left"/>let _68: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _69: !;<br align="left"/>let mut _70: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _71: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _72: ();<br align="left"/>let mut _73: &amp;ReErased str;<br align="left"/>let _74: &amp;ReErased str;<br align="left"/>let mut _75: &amp;ReErased std::string::String;<br align="left"/>let _76: &amp;ReErased std::string::String;<br align="left"/>let _77: std::string::String;<br align="left"/>let _78: std::string::String;<br align="left"/>let mut _79: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _80: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _81: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _82: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _83: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _84: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _85: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _86: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _87: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _88: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _89: &amp;ReErased u16;<br align="left"/>let _90: &amp;ReErased u16;<br align="left"/>let _91: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _92: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _93: ();<br align="left"/>let mut _94: &amp;ReErased str;<br align="left"/>let _95: &amp;ReErased str;<br align="left"/>let mut _96: &amp;ReErased std::string::String;<br align="left"/>let _97: &amp;ReErased std::string::String;<br align="left"/>let _98: std::string::String;<br align="left"/>let _99: std::string::String;<br align="left"/>let mut _100: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _101: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _102: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _103: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _104: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _105: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _106: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _107: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _108: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _109: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _110: &amp;ReErased u8;<br align="left"/>let _111: &amp;ReErased u8;<br align="left"/>let _112: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _113: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _114: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _115: &amp;ReErased u8;<br align="left"/>let _116: &amp;ReErased u8;<br align="left"/>let mut _117: u8;<br align="left"/>let mut _118: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _119: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _120: ();<br align="left"/>let mut _121: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _122: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _123: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _124: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _125: &amp;ReErased std::ops::RangeInclusive&lt;u8&gt;;<br align="left"/>let mut _126: &amp;ReErased mut instructions::admin::HotAdminUpdatePerpMarket&lt;ReErased&gt;;<br align="left"/>let mut _127: &amp;ReErased mut instructions::admin::HotAdminUpdatePerpMarket&lt;ReErased&gt;;<br align="left"/>let mut _128: isize;<br align="left"/>let mut _129: isize;<br align="left"/>let mut _130: isize;<br align="left"/>let mut _131: isize;<br align="left"/>let mut _132: isize;<br align="left"/>let mut _133: isize;<br align="left"/>let mut _134: isize;<br align="left"/>let mut _135: isize;<br align="left"/>let mut _136: isize;<br align="left"/>let mut _137: isize;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug amm_jit_intensity =&gt; _2;<br align="left"/>debug residual =&gt; _9;<br align="left"/>debug val =&gt; _12;<br align="left"/>debug error_code =&gt; _22;<br align="left"/>debug res =&gt; _29;<br align="left"/>debug res =&gt; _48;<br align="left"/>debug residual =&gt; _56;<br align="left"/>debug val =&gt; _59;<br align="left"/>debug perp_market =&gt; _60;<br align="left"/>debug residual =&gt; _68;<br align="left"/>debug val =&gt; _71;<br align="left"/>debug res =&gt; _78;<br align="left"/>debug res =&gt; _99;<br align="left"/>>;
    bb0__0_5621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_126 = deref_copy (_1.1: &amp;mut instructions::admin::HotAdminUpdatePerpMarket&lt;'_&gt;)<br/>_7 = &amp;((*_126).2: anchor_lang::prelude::AccountLoader&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_6 = &amp;(*_7)<br/></td></tr><tr><td align="left">_5 = constraints::perp_market_valid(move _6)</td></tr></table>>];
    bb1__0_5621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb2__0_5621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_8 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb3__0_5621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_4 as Continue).0: ())<br/>_3 = _12<br/>StorageDead(_12)<br/>_128 = discriminant(_4)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_125 = const _<br/>_17 = &amp;(*_125)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_20 = &amp;_2<br/>_19 = &amp;(*_20)<br/></td></tr><tr><td align="left">_16 = RangeInclusive::&lt;u8&gt;::contains::&lt;u8&gt;(move _17, move _19)</td></tr></table>>];
    bb4__0_5621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_5621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>_9 = move ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_11)<br/>_11 = move _9<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _11)</td></tr></table>>];
    bb6__0_5621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_9)<br/>_134 = discriminant(_4)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_5621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">switchInt(move _16)</td></tr></table>>];
    bb8__0_5621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_19)<br/>StorageDead(_17)<br/>StorageLive(_21)<br/>_21 = ()<br/>_15 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _21)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_5621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_19)<br/>StorageDead(_17)<br/>StorageLive(_22)<br/>_22 = error::ErrorCode::DefaultError<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>_124 = const _<br/>_33 = &amp;(*_124)<br/>_32 = &amp;(*_33)<br/>_31 = move _32 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_32)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>_41 = &amp;_22<br/>_40 = &amp;(*_41)<br/></td></tr><tr><td align="left">_39 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _40)</td></tr></table>>];
    bb10__0_5621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>_38 = [move _39]<br/>StorageDead(_39)<br/>_37 = &amp;_38<br/>_36 = &amp;(*_37)<br/>_35 = move _36 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">_30 = Arguments::&lt;'_&gt;::new_v1(move _31, move _35)</td></tr></table>>];
    bb11__0_5621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">_29 = format(move _30)</td></tr></table>>];
    bb12__0_5621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_41)<br/>StorageDead(_38)<br/>StorageDead(_37)<br/>StorageDead(_33)<br/>_28 = move _29<br/>StorageDead(_29)<br/>_27 = &amp;_28<br/>_26 = &amp;(*_27)<br/></td></tr><tr><td align="left">_25 = &lt;String as Deref&gt;::deref(move _26)</td></tr></table>>];
    bb13__0_5621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">_24 = &amp;(*_25)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">_23 = solana_program::log::sol_log(move _24)</td></tr></table>>];
    bb14__0_5621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/></td></tr><tr><td align="left">drop(_28)</td></tr></table>>];
    bb15__0_5621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_27)<br/>StorageDead(_25)<br/>StorageDead(_23)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>_123 = const _<br/>_52 = &amp;(*_123)<br/>_51 = &amp;(*_52)<br/>_50 = move _51 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">_49 = Arguments::&lt;'_&gt;::new_const(move _50)</td></tr></table>>];
    bb16__0_5621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/></td></tr><tr><td align="left">_48 = format(move _49)</td></tr></table>>];
    bb17__0_5621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_52)<br/>_47 = move _48<br/>StorageDead(_48)<br/>_46 = &amp;_47<br/>_45 = &amp;(*_46)<br/></td></tr><tr><td align="left">_44 = &lt;String as Deref&gt;::deref(move _45)</td></tr></table>>];
    bb18__0_5621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">_43 = &amp;(*_44)<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">_42 = solana_program::log::sol_log(move _43)</td></tr></table>>];
    bb19__0_5621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/></td></tr><tr><td align="left">drop(_47)</td></tr></table>>];
    bb20__0_5621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_46)<br/>StorageDead(_44)<br/>StorageDead(_42)<br/>StorageLive(_54)<br/>_54 = _22<br/>_15 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _54)<br/>StorageDead(_54)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_5621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/></td></tr><tr><td align="left">_14 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _15)</td></tr></table>>];
    bb22__0_5621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>_55 = discriminant(_14)<br/></td></tr><tr><td align="left">switchInt(move _55)</td></tr></table>>];
    bb23__0_5621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_59)<br/>_59 = ((_14 as Continue).0: ())<br/>_13 = _59<br/>StorageDead(_59)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>_127 = deref_copy (_1.1: &amp;mut instructions::admin::HotAdminUpdatePerpMarket&lt;'_&gt;)<br/>_65 = &amp;((*_127).2: anchor_lang::prelude::AccountLoader&lt;'_, state::perp_market::PerpMarket&gt;)<br/></td></tr><tr><td align="left">_64 = anchor_lang::prelude::AccountLoader::&lt;'_, PerpMarket&gt;::load_mut(move _65)</td></tr></table>>];
    bb24__0_5621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_56)<br/>_56 = ((_14 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_58)<br/>_58 = _56<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _58)</td></tr></table>>];
    bb25__0_5621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageDead(_56)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_5621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageLive(_66)<br/>_66 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_63 = std::result::Result::&lt;RefMut&lt;'_, PerpMarket&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _64, move _66)</td></tr></table>>];
    bb27__0_5621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageDead(_64)<br/></td></tr><tr><td align="left">_62 = &lt;std::result::Result&lt;RefMut&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _63)</td></tr></table>>];
    bb28__0_5621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>_67 = discriminant(_62)<br/></td></tr><tr><td align="left">switchInt(move _67)</td></tr></table>>];
    bb29__0_5621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_71)<br/>_71 = move ((_62 as Continue).0: std::cell::RefMut&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_61 = move _71<br/>StorageDead(_71)<br/>_60 = &amp;mut _61<br/>_132 = discriminant(_62)<br/>StorageDead(_62)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>_122 = const _<br/>_82 = &amp;(*_122)<br/>_81 = &amp;(*_82)<br/>_80 = move _81 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_81)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>_92 = &amp;(*_60)<br/></td></tr><tr><td align="left">_91 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _92)</td></tr></table>>];
    bb30__0_5621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_68)<br/>_68 = ((_62 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_70)<br/>_70 = _68<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _70)</td></tr></table>>];
    bb31__0_5621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_68)<br/>_130 = discriminant(_62)<br/>StorageDead(_62)<br/>StorageDead(_61)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_5621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>_90 = &amp;((*_91).21: u16)<br/>_89 = &amp;(*_90)<br/></td></tr><tr><td align="left">_88 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _89)</td></tr></table>>];
    bb33__0_5621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>_87 = [move _88]<br/>StorageDead(_88)<br/>_86 = &amp;_87<br/>_85 = &amp;(*_86)<br/>_84 = move _85 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_85)<br/></td></tr><tr><td align="left">_79 = Arguments::&lt;'_&gt;::new_v1(move _80, move _84)</td></tr></table>>];
    bb34__0_5621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>StorageDead(_80)<br/></td></tr><tr><td align="left">_78 = format(move _79)</td></tr></table>>];
    bb35__0_5621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageDead(_91)<br/>StorageDead(_90)<br/>StorageDead(_87)<br/>StorageDead(_86)<br/>StorageDead(_82)<br/>_77 = move _78<br/>StorageDead(_78)<br/>_76 = &amp;_77<br/>_75 = &amp;(*_76)<br/></td></tr><tr><td align="left">_74 = &lt;String as Deref&gt;::deref(move _75)</td></tr></table>>];
    bb36__0_5621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">_73 = &amp;(*_74)<br/>StorageDead(_75)<br/></td></tr><tr><td align="left">_72 = solana_program::log::sol_log(move _73)</td></tr></table>>];
    bb37__0_5621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/></td></tr><tr><td align="left">drop(_77)</td></tr></table>>];
    bb38__0_5621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>StorageDead(_76)<br/>StorageDead(_74)<br/>StorageDead(_72)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>_121 = const _<br/>_103 = &amp;(*_121)<br/>_102 = &amp;(*_103)<br/>_101 = move _102 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_102)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>_113 = &amp;(*_60)<br/></td></tr><tr><td align="left">_112 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _113)</td></tr></table>>];
    bb39__0_5621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_113)<br/>_111 = &amp;(((*_112).1: state::perp_market::AMM).71: u8)<br/>_110 = &amp;(*_111)<br/></td></tr><tr><td align="left">_109 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u8&gt;(move _110)</td></tr></table>>];
    bb40__0_5621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>_116 = &amp;_2<br/>_115 = &amp;(*_116)<br/></td></tr><tr><td align="left">_114 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u8&gt;(move _115)</td></tr></table>>];
    bb41__0_5621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_115)<br/>_108 = [move _109, move _114]<br/>StorageDead(_114)<br/>StorageDead(_109)<br/>_107 = &amp;_108<br/>_106 = &amp;(*_107)<br/>_105 = move _106 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_106)<br/></td></tr><tr><td align="left">_100 = Arguments::&lt;'_&gt;::new_v1(move _101, move _105)</td></tr></table>>];
    bb42__0_5621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/>StorageDead(_101)<br/></td></tr><tr><td align="left">_99 = format(move _100)</td></tr></table>>];
    bb43__0_5621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>StorageDead(_116)<br/>StorageDead(_112)<br/>StorageDead(_111)<br/>StorageDead(_108)<br/>StorageDead(_107)<br/>StorageDead(_103)<br/>_98 = move _99<br/>StorageDead(_99)<br/>_97 = &amp;_98<br/>_96 = &amp;(*_97)<br/></td></tr><tr><td align="left">_95 = &lt;String as Deref&gt;::deref(move _96)</td></tr></table>>];
    bb44__0_5621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">_94 = &amp;(*_95)<br/>StorageDead(_96)<br/></td></tr><tr><td align="left">_93 = solana_program::log::sol_log(move _94)</td></tr></table>>];
    bb45__0_5621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/></td></tr><tr><td align="left">drop(_98)</td></tr></table>>];
    bb46__0_5621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>StorageDead(_97)<br/>StorageDead(_95)<br/>StorageDead(_93)<br/>StorageLive(_117)<br/>_117 = _2<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>_119 = &amp;mut (*_60)<br/></td></tr><tr><td align="left">_118 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _119)</td></tr></table>>];
    bb47__0_5621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/>(((*_118).1: state::perp_market::AMM).71: u8) = move _117<br/>StorageDead(_117)<br/>StorageDead(_118)<br/>StorageLive(_120)<br/>_120 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _120)<br/>StorageDead(_120)<br/></td></tr><tr><td align="left">drop(_61)</td></tr></table>>];
    bb48__0_5621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_5621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left">return</td></tr></table>>];
    bb50__0_5621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">50 (cleanup)</td></tr><tr><td align="left">drop(_98)</td></tr></table>>];
    bb51__0_5621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">51 (cleanup)</td></tr><tr><td align="left">drop(_77)</td></tr></table>>];
    bb52__0_5621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">52 (cleanup)</td></tr><tr><td align="left">drop(_61)</td></tr></table>>];
    bb53__0_5621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">53 (cleanup)</td></tr><tr><td align="left">drop(_47)</td></tr></table>>];
    bb54__0_5621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">54 (cleanup)</td></tr><tr><td align="left">drop(_28)</td></tr></table>>];
    bb55__0_5621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">55 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb56__0_5621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">56 (cleanup)</td></tr><tr><td align="left" balign="left">_136 = discriminant(_62)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb57__0_5621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">57 (cleanup)</td></tr><tr><td align="left" balign="left">_137 = discriminant(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_5621 -> bb1__0_5621 [label="return"];
    bb1__0_5621 -> bb2__0_5621 [label="return"];
    bb1__0_5621 -> bb55__0_5621 [label="unwind"];
    bb2__0_5621 -> bb3__0_5621 [label="0"];
    bb2__0_5621 -> bb5__0_5621 [label="1"];
    bb2__0_5621 -> bb4__0_5621 [label="otherwise"];
    bb3__0_5621 -> bb7__0_5621 [label="return"];
    bb5__0_5621 -> bb6__0_5621 [label="return"];
    bb5__0_5621 -> bb57__0_5621 [label="unwind"];
    bb6__0_5621 -> bb49__0_5621 [label=""];
    bb7__0_5621 -> bb9__0_5621 [label="0"];
    bb7__0_5621 -> bb8__0_5621 [label="otherwise"];
    bb8__0_5621 -> bb21__0_5621 [label=""];
    bb9__0_5621 -> bb10__0_5621 [label="return"];
    bb10__0_5621 -> bb11__0_5621 [label="return"];
    bb11__0_5621 -> bb12__0_5621 [label="return"];
    bb12__0_5621 -> bb13__0_5621 [label="return"];
    bb12__0_5621 -> bb54__0_5621 [label="unwind"];
    bb13__0_5621 -> bb14__0_5621 [label="return"];
    bb13__0_5621 -> bb54__0_5621 [label="unwind"];
    bb14__0_5621 -> bb15__0_5621 [label="return"];
    bb14__0_5621 -> bb55__0_5621 [label="unwind"];
    bb15__0_5621 -> bb16__0_5621 [label="return"];
    bb16__0_5621 -> bb17__0_5621 [label="return"];
    bb17__0_5621 -> bb18__0_5621 [label="return"];
    bb17__0_5621 -> bb53__0_5621 [label="unwind"];
    bb18__0_5621 -> bb19__0_5621 [label="return"];
    bb18__0_5621 -> bb53__0_5621 [label="unwind"];
    bb19__0_5621 -> bb20__0_5621 [label="return"];
    bb19__0_5621 -> bb55__0_5621 [label="unwind"];
    bb20__0_5621 -> bb21__0_5621 [label=""];
    bb21__0_5621 -> bb22__0_5621 [label="return"];
    bb22__0_5621 -> bb23__0_5621 [label="0"];
    bb22__0_5621 -> bb24__0_5621 [label="1"];
    bb22__0_5621 -> bb4__0_5621 [label="otherwise"];
    bb23__0_5621 -> bb26__0_5621 [label="return"];
    bb24__0_5621 -> bb25__0_5621 [label="return"];
    bb25__0_5621 -> bb49__0_5621 [label=""];
    bb26__0_5621 -> bb27__0_5621 [label="return"];
    bb26__0_5621 -> bb55__0_5621 [label="unwind"];
    bb27__0_5621 -> bb28__0_5621 [label="return"];
    bb27__0_5621 -> bb55__0_5621 [label="unwind"];
    bb28__0_5621 -> bb29__0_5621 [label="0"];
    bb28__0_5621 -> bb30__0_5621 [label="1"];
    bb28__0_5621 -> bb4__0_5621 [label="otherwise"];
    bb29__0_5621 -> bb32__0_5621 [label="return"];
    bb29__0_5621 -> bb52__0_5621 [label="unwind"];
    bb30__0_5621 -> bb31__0_5621 [label="return"];
    bb30__0_5621 -> bb56__0_5621 [label="unwind"];
    bb31__0_5621 -> bb49__0_5621 [label=""];
    bb32__0_5621 -> bb33__0_5621 [label="return"];
    bb32__0_5621 -> bb52__0_5621 [label="unwind"];
    bb33__0_5621 -> bb34__0_5621 [label="return"];
    bb33__0_5621 -> bb52__0_5621 [label="unwind"];
    bb34__0_5621 -> bb35__0_5621 [label="return"];
    bb34__0_5621 -> bb52__0_5621 [label="unwind"];
    bb35__0_5621 -> bb36__0_5621 [label="return"];
    bb35__0_5621 -> bb51__0_5621 [label="unwind"];
    bb36__0_5621 -> bb37__0_5621 [label="return"];
    bb36__0_5621 -> bb51__0_5621 [label="unwind"];
    bb37__0_5621 -> bb38__0_5621 [label="return"];
    bb37__0_5621 -> bb52__0_5621 [label="unwind"];
    bb38__0_5621 -> bb39__0_5621 [label="return"];
    bb38__0_5621 -> bb52__0_5621 [label="unwind"];
    bb39__0_5621 -> bb40__0_5621 [label="return"];
    bb39__0_5621 -> bb52__0_5621 [label="unwind"];
    bb40__0_5621 -> bb41__0_5621 [label="return"];
    bb40__0_5621 -> bb52__0_5621 [label="unwind"];
    bb41__0_5621 -> bb42__0_5621 [label="return"];
    bb41__0_5621 -> bb52__0_5621 [label="unwind"];
    bb42__0_5621 -> bb43__0_5621 [label="return"];
    bb42__0_5621 -> bb52__0_5621 [label="unwind"];
    bb43__0_5621 -> bb44__0_5621 [label="return"];
    bb43__0_5621 -> bb50__0_5621 [label="unwind"];
    bb44__0_5621 -> bb45__0_5621 [label="return"];
    bb44__0_5621 -> bb50__0_5621 [label="unwind"];
    bb45__0_5621 -> bb46__0_5621 [label="return"];
    bb45__0_5621 -> bb52__0_5621 [label="unwind"];
    bb46__0_5621 -> bb47__0_5621 [label="return"];
    bb46__0_5621 -> bb52__0_5621 [label="unwind"];
    bb47__0_5621 -> bb48__0_5621 [label="return"];
    bb47__0_5621 -> bb55__0_5621 [label="unwind"];
    bb48__0_5621 -> bb49__0_5621 [label=""];
    bb50__0_5621 -> bb52__0_5621 [label="return"];
    bb51__0_5621 -> bb52__0_5621 [label="return"];
    bb52__0_5621 -> bb55__0_5621 [label="return"];
    bb53__0_5621 -> bb55__0_5621 [label="return"];
    bb54__0_5621 -> bb55__0_5621 [label="return"];
    bb56__0_5621 -> bb55__0_5621 [label=""];
    bb57__0_5621 -> bb55__0_5621 [label=""];
}
