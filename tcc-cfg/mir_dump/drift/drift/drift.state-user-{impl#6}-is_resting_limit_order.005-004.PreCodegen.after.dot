digraph Mir_0_4393 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn Order::is_resting_limit_order(_1: &amp;ReErased state::user::Order, _2: u64) -&gt; std::result::Result&lt;bool, error::ErrorCode&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: bool;<br align="left"/>let mut _5: &amp;ReErased state::user::Order;<br align="left"/>let mut _6: !;<br align="left"/>let mut _7: bool;<br align="left"/>let mut _8: bool;<br align="left"/>let mut _9: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _10: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _11: state::user::Order;<br align="left"/>let mut _12: u64;<br align="left"/>let mut _13: isize;<br align="left"/>let _14: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _15: !;<br align="left"/>let mut _16: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _17: bool;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug slot =&gt; _2;<br align="left"/>debug residual =&gt; _14;<br align="left"/>debug val =&gt; _17;<br align="left"/>>;
    bb0__0_4393 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = &amp;(*_1)<br/></td></tr><tr><td align="left">_4 = Order::is_limit_order(move _5)</td></tr></table>>];
    bb1__0_4393 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">switchInt(move _4)</td></tr></table>>];
    bb2__0_4393 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_3 = const ()<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = ((*_1).19: bool)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb3__0_4393 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_0 = std::result::Result::&lt;bool, error::ErrorCode&gt;::Ok(const false)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb4__0_4393 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">_7 = const true<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb5__0_4393 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = (*_1)<br/>StorageLive(_12)<br/>_12 = _2<br/></td></tr><tr><td align="left">_10 = Order::is_auction_complete(move _11, move _12)</td></tr></table>>];
    bb6__0_4393 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">_9 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _10)</td></tr></table>>];
    bb7__0_4393 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>_13 = discriminant(_9)<br/></td></tr><tr><td align="left">switchInt(move _13)</td></tr></table>>];
    bb8__0_4393 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>_17 = ((_9 as Continue).0: bool)<br/>_7 = _17<br/>StorageDead(_17)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_4393 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb10__0_4393 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = ((_9 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_16)<br/>_16 = _14<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _16)</td></tr></table>>];
    bb11__0_4393 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_14)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_4393 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_0 = std::result::Result::&lt;bool, error::ErrorCode&gt;::Ok(move _7)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_4393 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_4393 -> bb1__0_4393 [label="return"];
    bb1__0_4393 -> bb3__0_4393 [label="0"];
    bb1__0_4393 -> bb2__0_4393 [label="otherwise"];
    bb2__0_4393 -> bb5__0_4393 [label="0"];
    bb2__0_4393 -> bb4__0_4393 [label="otherwise"];
    bb3__0_4393 -> bb13__0_4393 [label=""];
    bb4__0_4393 -> bb12__0_4393 [label=""];
    bb5__0_4393 -> bb6__0_4393 [label="return"];
    bb6__0_4393 -> bb7__0_4393 [label="return"];
    bb7__0_4393 -> bb8__0_4393 [label="0"];
    bb7__0_4393 -> bb10__0_4393 [label="1"];
    bb7__0_4393 -> bb9__0_4393 [label="otherwise"];
    bb8__0_4393 -> bb12__0_4393 [label=""];
    bb10__0_4393 -> bb11__0_4393 [label="return"];
    bb11__0_4393 -> bb13__0_4393 [label=""];
    bb12__0_4393 -> bb13__0_4393 [label=""];
}
