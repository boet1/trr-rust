digraph Mir_0_643 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn controller::pnl::settle_pnl(_1: u16, _2: &amp;ReErased mut state::user::User, _3: &amp;ReErased anchor_lang::prelude::Pubkey, _4: &amp;ReErased anchor_lang::prelude::Pubkey, _5: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;, _6: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;, _7: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;, _8: &amp;ReErased anchor_lang::prelude::Clock, _9: &amp;ReErased state::state::State, _10: std::option::Option&lt;bool&gt;, _11: state::settle_pnl_mode::SettlePnlMode) -&gt; std::result::Result&lt;(), error::ErrorCode&gt;<br align="left"/>let _12: ();<br align="left"/>let mut _13: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _14: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _15: bool;<br align="left"/>let mut _16: &amp;ReErased state::user::User;<br align="left"/>let mut _17: ();<br align="left"/>let _18: error::ErrorCode;<br align="left"/>let _19: ();<br align="left"/>let mut _20: &amp;ReErased str;<br align="left"/>let _21: &amp;ReErased str;<br align="left"/>let mut _22: &amp;ReErased std::string::String;<br align="left"/>let _23: &amp;ReErased std::string::String;<br align="left"/>let _24: std::string::String;<br align="left"/>let _25: std::string::String;<br align="left"/>let mut _26: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _27: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _28: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _29: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _30: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _31: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _32: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _33: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _34: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _35: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _36: &amp;ReErased error::ErrorCode;<br align="left"/>let _37: &amp;ReErased error::ErrorCode;<br align="left"/>let mut _38: error::ErrorCode;<br align="left"/>let mut _39: isize;<br align="left"/>let _40: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _41: !;<br align="left"/>let mut _42: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _43: ();<br align="left"/>let _44: i64;<br align="left"/>let _45: u128;<br align="left"/>let _46: u128;<br align="left"/>let _47: u128;<br align="left"/>let _48: ();<br align="left"/>let _49: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _50: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _51: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _52: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _53: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _54: isize;<br align="left"/>let _55: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _56: !;<br align="left"/>let mut _57: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _58: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _59: ();<br align="left"/>let mut _60: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _61: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _62: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _63: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _64: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _65: std::option::Option&lt;&amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _66: i64;<br align="left"/>let mut _67: isize;<br align="left"/>let _68: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _69: !;<br align="left"/>let mut _70: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _71: ();<br align="left"/>let mut _72: u128;<br align="left"/>let mut _73: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _74: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _75: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _76: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _77: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _78: isize;<br align="left"/>let _79: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _80: !;<br align="left"/>let mut _81: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _82: u128;<br align="left"/>let mut _83: u128;<br align="left"/>let mut _84: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _85: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _86: u128;<br align="left"/>let mut _87: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _88: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _89: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _90: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _91: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _92: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _93: &amp;ReErased u16;<br align="left"/>let _94: &amp;ReErased u16;<br align="left"/>let mut _95: isize;<br align="left"/>let _96: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _97: !;<br align="left"/>let mut _98: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _99: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _100: i64;<br align="left"/>let mut _101: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _102: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _103: std::result::Result&lt;&amp;ReErased state::oracle::OraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _104: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _105: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _106: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _107: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _108: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _109: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _110: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _111: isize;<br align="left"/>let _112: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _113: !;<br align="left"/>let mut _114: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _115: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _116: bool;<br align="left"/>let mut _117: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _118: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _119: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _120: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _121: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _122: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _123: &amp;ReErased state::state::State;<br align="left"/>let mut _124: i64;<br align="left"/>let mut _125: isize;<br align="left"/>let _126: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _127: !;<br align="left"/>let mut _128: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _129: bool;<br align="left"/>let _130: ();<br align="left"/>let mut _131: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _132: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _133: &amp;ReErased mut state::user::User;<br align="left"/>let mut _134: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _135: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _136: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _137: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _138: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _139: i64;<br align="left"/>let mut _140: isize;<br align="left"/>let _141: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _142: !;<br align="left"/>let mut _143: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _144: ();<br align="left"/>let _145: ();<br align="left"/>let mut _146: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _147: usize;<br align="left"/>let mut _148: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, usize&gt;;<br align="left"/>let mut _149: std::result::Result&lt;usize, error::ErrorCode&gt;;<br align="left"/>let mut _150: &amp;ReErased [state::user::PerpPosition; 8_usize];<br align="left"/>let _151: &amp;ReErased [state::user::PerpPosition; 8_usize];<br align="left"/>let mut _152: u16;<br align="left"/>let mut _153: isize;<br align="left"/>let _154: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _155: !;<br align="left"/>let mut _156: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _157: usize;<br align="left"/>let _158: i128;<br align="left"/>let mut _159: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _160: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _161: &amp;ReErased state::user::PerpPosition;<br align="left"/>let _162: usize;<br align="left"/>let mut _163: usize;<br align="left"/>let mut _164: bool;<br align="left"/>let mut _165: i64;<br align="left"/>let mut _166: isize;<br align="left"/>let _167: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _168: !;<br align="left"/>let mut _169: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _170: i128;<br align="left"/>let _171: ();<br align="left"/>let mut _172: bool;<br align="left"/>let mut _173: i128;<br align="left"/>let _174: bool;<br align="left"/>let mut _175: isize;<br align="left"/>let _176: bool;<br align="left"/>let mut _177: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _178: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _179: &amp;ReErased state::user::User;<br align="left"/>let mut _180: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _181: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _182: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _183: isize;<br align="left"/>let _184: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _185: !;<br align="left"/>let mut _186: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _187: bool;<br align="left"/>let mut _188: bool;<br align="left"/>let mut _189: !;<br align="left"/>let _190: std::string::String;<br align="left"/>let _191: std::string::String;<br align="left"/>let mut _192: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _193: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _194: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _195: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _196: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _197: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _198: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _199: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _200: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _201: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _202: &amp;ReErased u16;<br align="left"/>let _203: &amp;ReErased u16;<br align="left"/>let mut _204: state::settle_pnl_mode::SettlePnlMode;<br align="left"/>let mut _205: error::ErrorCode;<br align="left"/>let mut _206: u16;<br align="left"/>let mut _207: &amp;ReErased str;<br align="left"/>let _208: &amp;ReErased str;<br align="left"/>let mut _209: &amp;ReErased std::string::String;<br align="left"/>let _210: &amp;ReErased std::string::String;<br align="left"/>let _211: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _212: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _213: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _214: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _215: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _216: isize;<br align="left"/>let _217: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _218: !;<br align="left"/>let mut _219: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _220: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _221: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _222: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _223: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _224: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _225: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _226: &amp;ReErased u16;<br align="left"/>let _227: &amp;ReErased u16;<br align="left"/>let mut _228: isize;<br align="left"/>let _229: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _230: !;<br align="left"/>let mut _231: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _232: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _233: ();<br align="left"/>let mut _234: bool;<br align="left"/>let mut _235: u8;<br align="left"/>let mut _236: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _237: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _238: bool;<br align="left"/>let mut _239: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _240: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _241: &amp;ReErased state::perp_market::AMM;<br align="left"/>let _242: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _243: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _244: u64;<br align="left"/>let mut _245: isize;<br align="left"/>let _246: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _247: !;<br align="left"/>let mut _248: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _249: bool;<br align="left"/>let mut _250: bool;<br align="left"/>let _251: math::oracle::OracleValidity;<br align="left"/>let mut _252: (&amp;ReErased state::oracle::OraclePriceData, math::oracle::OracleValidity);<br align="left"/>let mut _253: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (&amp;ReErased state::oracle::OraclePriceData, math::oracle::OracleValidity)&gt;;<br align="left"/>let mut _254: std::result::Result&lt;(&amp;ReErased state::oracle::OraclePriceData, math::oracle::OracleValidity), error::ErrorCode&gt;;<br align="left"/>let mut _255: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _256: state::user::MarketType;<br align="left"/>let mut _257: u16;<br align="left"/>let mut _258: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _259: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _260: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _261: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _262: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _263: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _264: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _265: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _266: i64;<br align="left"/>let mut _267: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _268: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _269: u64;<br align="left"/>let mut _270: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _271: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _272: state::perp_market::PerpMarket;<br align="left"/>let mut _273: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _274: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _275: isize;<br align="left"/>let _276: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _277: !;<br align="left"/>let mut _278: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _279: u64;<br align="left"/>let mut _280: isize;<br align="left"/>let _281: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _282: !;<br align="left"/>let mut _283: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _284: (&amp;ReErased state::oracle::OraclePriceData, math::oracle::OracleValidity);<br align="left"/>let mut _285: bool;<br align="left"/>let mut _286: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _287: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _288: math::oracle::OracleValidity;<br align="left"/>let mut _289: std::option::Option&lt;math::oracle::DriftAction&gt;;<br align="left"/>let mut _290: math::oracle::DriftAction;<br align="left"/>let mut _291: isize;<br align="left"/>let _292: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _293: !;<br align="left"/>let mut _294: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _295: bool;<br align="left"/>let mut _296: bool;<br align="left"/>let mut _297: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _298: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _299: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _300: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _301: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _302: i64;<br align="left"/>let mut _303: isize;<br align="left"/>let _304: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _305: !;<br align="left"/>let mut _306: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _307: bool;<br align="left"/>let _308: ();<br align="left"/>let mut _309: bool;<br align="left"/>let mut _310: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _311: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _312: !;<br align="left"/>let _313: std::string::String;<br align="left"/>let _314: std::string::String;<br align="left"/>let mut _315: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _316: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _317: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _318: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _319: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _320: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _321: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _322: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _323: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _324: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _325: &amp;ReErased math::oracle::OracleValidity;<br align="left"/>let _326: &amp;ReErased math::oracle::OracleValidity;<br align="left"/>let mut _327: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _328: &amp;ReErased u16;<br align="left"/>let _329: &amp;ReErased u16;<br align="left"/>let mut _330: state::settle_pnl_mode::SettlePnlMode;<br align="left"/>let mut _331: error::ErrorCode;<br align="left"/>let mut _332: &amp;ReErased math::oracle::OracleValidity;<br align="left"/>let mut _333: u16;<br align="left"/>let mut _334: &amp;ReErased str;<br align="left"/>let _335: &amp;ReErased str;<br align="left"/>let mut _336: &amp;ReErased std::string::String;<br align="left"/>let _337: &amp;ReErased std::string::String;<br align="left"/>let mut _338: bool;<br align="left"/>let mut _339: u64;<br align="left"/>let mut _340: u64;<br align="left"/>let mut _341: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _342: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _343: !;<br align="left"/>let _344: std::string::String;<br align="left"/>let _345: std::string::String;<br align="left"/>let mut _346: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _347: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _348: &amp;ReErased [&amp;ReErased str; 5_usize];<br align="left"/>let _349: &amp;ReErased [&amp;ReErased str; 5_usize];<br align="left"/>let _350: [&amp;ReErased str; 5_usize];<br align="left"/>let mut _351: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _352: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 4_usize];<br align="left"/>let _353: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 4_usize];<br align="left"/>let _354: [core::fmt::rt::Argument&lt;ReErased&gt;; 4_usize];<br align="left"/>let mut _355: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _356: &amp;ReErased u16;<br align="left"/>let _357: &amp;ReErased u16;<br align="left"/>let mut _358: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _359: &amp;ReErased u64;<br align="left"/>let _360: &amp;ReErased u64;<br align="left"/>let mut _361: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _362: &amp;ReErased u64;<br align="left"/>let _363: &amp;ReErased u64;<br align="left"/>let _364: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _365: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _366: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _367: &amp;ReErased bool;<br align="left"/>let _368: &amp;ReErased bool;<br align="left"/>let _369: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _370: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _371: state::settle_pnl_mode::SettlePnlMode;<br align="left"/>let mut _372: error::ErrorCode;<br align="left"/>let mut _373: u16;<br align="left"/>let mut _374: &amp;ReErased str;<br align="left"/>let _375: &amp;ReErased str;<br align="left"/>let mut _376: &amp;ReErased std::string::String;<br align="left"/>let _377: &amp;ReErased std::string::String;<br align="left"/>let _378: ();<br align="left"/>let mut _379: bool;<br align="left"/>let mut _380: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _381: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _382: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _383: state::paused_operations::PerpOperation;<br align="left"/>let mut _384: !;<br align="left"/>let _385: std::string::String;<br align="left"/>let _386: std::string::String;<br align="left"/>let mut _387: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _388: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _389: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _390: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _391: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _392: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _393: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _394: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _395: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _396: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _397: &amp;ReErased u16;<br align="left"/>let _398: &amp;ReErased u16;<br align="left"/>let mut _399: state::settle_pnl_mode::SettlePnlMode;<br align="left"/>let mut _400: error::ErrorCode;<br align="left"/>let mut _401: u16;<br align="left"/>let mut _402: &amp;ReErased str;<br align="left"/>let _403: &amp;ReErased str;<br align="left"/>let mut _404: &amp;ReErased std::string::String;<br align="left"/>let _405: &amp;ReErased std::string::String;<br align="left"/>let _406: i64;<br align="left"/>let _407: usize;<br align="left"/>let mut _408: usize;<br align="left"/>let mut _409: bool;<br align="left"/>let _410: ();<br align="left"/>let mut _411: bool;<br align="left"/>let mut _412: i64;<br align="left"/>let _413: ();<br align="left"/>let mut _414: bool;<br align="left"/>let mut _415: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _416: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _417: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _418: state::paused_operations::PerpOperation;<br align="left"/>let mut _419: !;<br align="left"/>let _420: std::string::String;<br align="left"/>let _421: std::string::String;<br align="left"/>let mut _422: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _423: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _424: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _425: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _426: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _427: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _428: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _429: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _430: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _431: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _432: &amp;ReErased u16;<br align="left"/>let _433: &amp;ReErased u16;<br align="left"/>let mut _434: state::settle_pnl_mode::SettlePnlMode;<br align="left"/>let mut _435: error::ErrorCode;<br align="left"/>let mut _436: u16;<br align="left"/>let mut _437: &amp;ReErased str;<br align="left"/>let _438: &amp;ReErased str;<br align="left"/>let mut _439: &amp;ReErased std::string::String;<br align="left"/>let _440: &amp;ReErased std::string::String;<br align="left"/>let mut _441: bool;<br align="left"/>let mut _442: &amp;ReErased state::perp_market::MarketStatus;<br align="left"/>let _443: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _444: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _445: &amp;ReErased state::perp_market::MarketStatus;<br align="left"/>let _446: state::perp_market::MarketStatus;<br align="left"/>let mut _447: !;<br align="left"/>let _448: std::string::String;<br align="left"/>let _449: std::string::String;<br align="left"/>let mut _450: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _451: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _452: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _453: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _454: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _455: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _456: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _457: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _458: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _459: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _460: &amp;ReErased u16;<br align="left"/>let _461: &amp;ReErased u16;<br align="left"/>let mut _462: state::settle_pnl_mode::SettlePnlMode;<br align="left"/>let mut _463: error::ErrorCode;<br align="left"/>let mut _464: u16;<br align="left"/>let mut _465: &amp;ReErased str;<br align="left"/>let _466: &amp;ReErased str;<br align="left"/>let mut _467: &amp;ReErased std::string::String;<br align="left"/>let _468: &amp;ReErased std::string::String;<br align="left"/>let mut _469: bool;<br align="left"/>let mut _470: &amp;ReErased state::perp_market::MarketStatus;<br align="left"/>let _471: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _472: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _473: &amp;ReErased state::perp_market::MarketStatus;<br align="left"/>let _474: state::perp_market::MarketStatus;<br align="left"/>let mut _475: bool;<br align="left"/>let mut _476: &amp;ReErased state::perp_market::MarketStatus;<br align="left"/>let _477: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _478: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _479: &amp;ReErased state::perp_market::MarketStatus;<br align="left"/>let _480: state::perp_market::MarketStatus;<br align="left"/>let mut _481: !;<br align="left"/>let _482: std::string::String;<br align="left"/>let _483: std::string::String;<br align="left"/>let mut _484: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _485: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _486: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _487: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _488: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _489: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _490: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _491: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _492: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _493: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _494: &amp;ReErased u16;<br align="left"/>let _495: &amp;ReErased u16;<br align="left"/>let mut _496: state::settle_pnl_mode::SettlePnlMode;<br align="left"/>let mut _497: error::ErrorCode;<br align="left"/>let mut _498: u16;<br align="left"/>let mut _499: &amp;ReErased str;<br align="left"/>let _500: &amp;ReErased str;<br align="left"/>let mut _501: &amp;ReErased std::string::String;<br align="left"/>let _502: &amp;ReErased std::string::String;<br align="left"/>let _503: u128;<br align="left"/>let mut _504: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _505: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _506: u128;<br align="left"/>let mut _507: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _508: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _509: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _510: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _511: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _512: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _513: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _514: &amp;ReErased state::perp_market::PoolBalance;<br align="left"/>let _515: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _516: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _517: isize;<br align="left"/>let _518: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _519: !;<br align="left"/>let mut _520: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _521: u128;<br align="left"/>let _522: u128;<br align="left"/>let mut _523: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _524: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _525: u128;<br align="left"/>let mut _526: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _527: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _528: u128;<br align="left"/>let mut _529: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _530: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _531: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _532: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _533: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _534: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _535: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _536: &amp;ReErased state::perp_market::PoolBalance;<br align="left"/>let _537: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _538: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _539: isize;<br align="left"/>let _540: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _541: !;<br align="left"/>let mut _542: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _543: u128;<br align="left"/>let mut _544: isize;<br align="left"/>let _545: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _546: !;<br align="left"/>let mut _547: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _548: u128;<br align="left"/>let _549: i128;<br align="left"/>let mut _550: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _551: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _552: u128;<br align="left"/>let mut _553: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _554: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _555: u128;<br align="left"/>let mut _556: u128;<br align="left"/>let mut _557: isize;<br align="left"/>let _558: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _559: !;<br align="left"/>let mut _560: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _561: u128;<br align="left"/>let mut _562: isize;<br align="left"/>let _563: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _564: !;<br align="left"/>let mut _565: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _566: i128;<br align="left"/>let _567: i128;<br align="left"/>let mut _568: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _569: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _570: &amp;ReErased state::perp_market::AMM;<br align="left"/>let _571: &amp;ReErased state::perp_market::AMM;<br align="left"/>let _572: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _573: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _574: i64;<br align="left"/>let mut _575: isize;<br align="left"/>let _576: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _577: !;<br align="left"/>let mut _578: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _579: i128;<br align="left"/>let _580: i128;<br align="left"/>let mut _581: bool;<br align="left"/>let mut _582: i128;<br align="left"/>let mut _583: i128;<br align="left"/>let mut _584: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _585: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _586: i128;<br align="left"/>let mut _587: i128;<br align="left"/>let mut _588: i128;<br align="left"/>let mut _589: isize;<br align="left"/>let _590: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _591: !;<br align="left"/>let mut _592: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _593: i128;<br align="left"/>let _594: i128;<br align="left"/>let mut _595: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _596: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _597: &amp;ReErased state::user::PerpPosition;<br align="left"/>let _598: usize;<br align="left"/>let mut _599: usize;<br align="left"/>let mut _600: bool;<br align="left"/>let mut _601: i64;<br align="left"/>let mut _602: i128;<br align="left"/>let mut _603: isize;<br align="left"/>let _604: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _605: !;<br align="left"/>let mut _606: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _607: i128;<br align="left"/>let _608: i128;<br align="left"/>let mut _609: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _610: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _611: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _612: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _613: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _614: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _615: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _616: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _617: &amp;ReErased state::user::SpotPosition;<br align="left"/>let _618: &amp;ReErased state::user::SpotPosition;<br align="left"/>let mut _619: &amp;ReErased state::user::User;<br align="left"/>let mut _620: i128;<br align="left"/>let mut _621: i64;<br align="left"/>let mut _622: isize;<br align="left"/>let _623: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _624: !;<br align="left"/>let mut _625: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _626: i128;<br align="left"/>let _627: ();<br align="left"/>let mut _628: bool;<br align="left"/>let mut _629: u128;<br align="left"/>let mut _630: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _631: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _632: u128;<br align="left"/>let mut _633: bool;<br align="left"/>let mut _634: u128;<br align="left"/>let mut _635: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _636: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _637: u128;<br align="left"/>let mut _638: bool;<br align="left"/>let mut _639: &amp;ReErased state::settle_pnl_mode::SettlePnlMode;<br align="left"/>let mut _640: &amp;ReErased state::settle_pnl_mode::SettlePnlMode;<br align="left"/>let _641: state::settle_pnl_mode::SettlePnlMode;<br align="left"/>let _642: ();<br align="left"/>let mut _643: &amp;ReErased str;<br align="left"/>let _644: &amp;ReErased str;<br align="left"/>let mut _645: state::settle_pnl_mode::SettlePnlMode;<br align="left"/>let _646: ();<br align="left"/>let mut _647: bool;<br align="left"/>let mut _648: i128;<br align="left"/>let mut _649: !;<br align="left"/>let _650: std::string::String;<br align="left"/>let _651: std::string::String;<br align="left"/>let mut _652: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _653: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _654: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _655: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _656: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _657: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _658: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _659: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _660: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _661: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _662: &amp;ReErased u16;<br align="left"/>let _663: &amp;ReErased u16;<br align="left"/>let mut _664: state::settle_pnl_mode::SettlePnlMode;<br align="left"/>let mut _665: error::ErrorCode;<br align="left"/>let mut _666: u16;<br align="left"/>let mut _667: &amp;ReErased str;<br align="left"/>let _668: &amp;ReErased str;<br align="left"/>let mut _669: &amp;ReErased std::string::String;<br align="left"/>let _670: &amp;ReErased std::string::String;<br align="left"/>let mut _671: bool;<br align="left"/>let mut _672: i128;<br align="left"/>let mut _673: !;<br align="left"/>let _674: std::string::String;<br align="left"/>let _675: std::string::String;<br align="left"/>let mut _676: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _677: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _678: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _679: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _680: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _681: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _682: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _683: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _684: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _685: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _686: &amp;ReErased u16;<br align="left"/>let _687: &amp;ReErased u16;<br align="left"/>let mut _688: state::settle_pnl_mode::SettlePnlMode;<br align="left"/>let mut _689: error::ErrorCode;<br align="left"/>let mut _690: u16;<br align="left"/>let mut _691: &amp;ReErased str;<br align="left"/>let _692: &amp;ReErased str;<br align="left"/>let mut _693: &amp;ReErased std::string::String;<br align="left"/>let _694: &amp;ReErased std::string::String;<br align="left"/>let _695: bool;<br align="left"/>let mut _696: bool;<br align="left"/>let mut _697: i128;<br align="left"/>let mut _698: bool;<br align="left"/>let mut _699: i128;<br align="left"/>let mut _700: bool;<br align="left"/>let mut _701: i128;<br align="left"/>let mut _702: bool;<br align="left"/>let mut _703: i64;<br align="left"/>let mut _704: bool;<br align="left"/>let mut _705: &amp;ReErased state::user::User;<br align="left"/>let mut _706: bool;<br align="left"/>let mut _707: bool;<br align="left"/>let mut _708: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _709: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _710: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _711: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _712: ();<br align="left"/>let mut _713: bool;<br align="left"/>let mut _714: !;<br align="left"/>let _715: std::string::String;<br align="left"/>let _716: std::string::String;<br align="left"/>let mut _717: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _718: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _719: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _720: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _721: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _722: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _723: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _724: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _725: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _726: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _727: &amp;ReErased u16;<br align="left"/>let _728: &amp;ReErased u16;<br align="left"/>let mut _729: state::settle_pnl_mode::SettlePnlMode;<br align="left"/>let mut _730: error::ErrorCode;<br align="left"/>let mut _731: u16;<br align="left"/>let mut _732: &amp;ReErased str;<br align="left"/>let _733: &amp;ReErased str;<br align="left"/>let mut _734: &amp;ReErased std::string::String;<br align="left"/>let _735: &amp;ReErased std::string::String;<br align="left"/>let _736: ();<br align="left"/>let mut _737: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _738: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _739: u128;<br align="left"/>let mut _740: i128;<br align="left"/>let mut _741: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _742: bool;<br align="left"/>let mut _743: i128;<br align="left"/>let _744: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _745: state::spot_market::SpotBalanceType;<br align="left"/>let _746: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _747: state::spot_market::SpotBalanceType;<br align="left"/>let mut _748: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _749: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _750: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _751: &amp;ReErased mut dyn [Binder(Trait(state::spot_market::SpotBalance), [])] + ReErased;<br align="left"/>let mut _752: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let mut _753: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let mut _754: &amp;ReErased mut state::user::User;<br align="left"/>let mut _755: isize;<br align="left"/>let _756: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _757: !;<br align="left"/>let mut _758: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _759: ();<br align="left"/>let _760: ();<br align="left"/>let mut _761: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _762: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _763: &amp;ReErased mut state::user::PerpPosition;<br align="left"/>let mut _764: &amp;ReErased mut state::user::PerpPosition;<br align="left"/>let _765: usize;<br align="left"/>let mut _766: usize;<br align="left"/>let mut _767: bool;<br align="left"/>let mut _768: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _769: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _770: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _771: i64;<br align="left"/>let mut _772: i64;<br align="left"/>let mut _773: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _774: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _775: i128;<br align="left"/>let mut _776: isize;<br align="left"/>let _777: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _778: !;<br align="left"/>let mut _779: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _780: i64;<br align="left"/>let mut _781: bool;<br align="left"/>let mut _782: isize;<br align="left"/>let _783: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _784: !;<br align="left"/>let mut _785: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _786: ();<br align="left"/>let _787: ();<br align="left"/>let mut _788: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _789: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _790: &amp;ReErased mut state::user::User;<br align="left"/>let mut _791: usize;<br align="left"/>let mut _792: i64;<br align="left"/>let mut _793: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _794: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _795: i128;<br align="left"/>let mut _796: isize;<br align="left"/>let _797: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _798: !;<br align="left"/>let mut _799: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _800: i64;<br align="left"/>let mut _801: isize;<br align="left"/>let _802: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _803: !;<br align="left"/>let mut _804: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _805: ();<br align="left"/>let _806: i64;<br align="left"/>let _807: usize;<br align="left"/>let mut _808: usize;<br align="left"/>let mut _809: bool;<br align="left"/>let _810: i64;<br align="left"/>let _811: usize;<br align="left"/>let mut _812: usize;<br align="left"/>let mut _813: bool;<br align="left"/>let _814: ();<br align="left"/>let mut _815: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _816: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _817: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _818: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _819: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _820: isize;<br align="left"/>let _821: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _822: !;<br align="left"/>let mut _823: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _824: ();<br align="left"/>let _825: ();<br align="left"/>let mut _826: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _827: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _828: &amp;ReErased state::user::PerpPosition;<br align="left"/>let _829: &amp;ReErased state::user::PerpPosition;<br align="left"/>let _830: usize;<br align="left"/>let mut _831: usize;<br align="left"/>let mut _832: bool;<br align="left"/>let mut _833: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _834: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _835: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _836: isize;<br align="left"/>let _837: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _838: !;<br align="left"/>let mut _839: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _840: ();<br align="left"/>let _841: ();<br align="left"/>let _842: ();<br align="left"/>let mut _843: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let mut _844: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let _845: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let _846: [&amp;ReErased [u8]; 1_usize];<br align="left"/>let mut _847: &amp;ReErased [u8];<br align="left"/>let _848: &amp;ReErased [u8];<br align="left"/>let mut _849: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _850: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _851: std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _852: &amp;ReErased state::events::SettlePnlRecord;<br align="left"/>let _853: &amp;ReErased state::events::SettlePnlRecord;<br align="left"/>let _854: state::events::SettlePnlRecord;<br align="left"/>let mut _855: i64;<br align="left"/>let mut _856: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _857: u16;<br align="left"/>let mut _858: i128;<br align="left"/>let mut _859: i64;<br align="left"/>let mut _860: i64;<br align="left"/>let mut _861: i64;<br align="left"/>let mut _862: i64;<br align="left"/>let mut _863: state::events::SettlePnlExplanation;<br align="left"/>let _864: u128;<br align="left"/>let mut _865: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _866: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _867: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _868: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _869: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _870: isize;<br align="left"/>let _871: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _872: !;<br align="left"/>let mut _873: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _874: u128;<br align="left"/>let _875: ();<br align="left"/>let mut _876: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _877: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _878: bool;<br align="left"/>let mut _879: u128;<br align="left"/>let mut _880: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _881: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _882: u128;<br align="left"/>let mut _883: u128;<br align="left"/>let mut _884: isize;<br align="left"/>let _885: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _886: !;<br align="left"/>let mut _887: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _888: u128;<br align="left"/>let mut _889: ();<br align="left"/>let _890: error::ErrorCode;<br align="left"/>let _891: ();<br align="left"/>let mut _892: &amp;ReErased str;<br align="left"/>let _893: &amp;ReErased str;<br align="left"/>let mut _894: &amp;ReErased std::string::String;<br align="left"/>let _895: &amp;ReErased std::string::String;<br align="left"/>let _896: std::string::String;<br align="left"/>let _897: std::string::String;<br align="left"/>let mut _898: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _899: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _900: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _901: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _902: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _903: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _904: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _905: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _906: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _907: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _908: &amp;ReErased error::ErrorCode;<br align="left"/>let _909: &amp;ReErased error::ErrorCode;<br align="left"/>let _910: ();<br align="left"/>let mut _911: &amp;ReErased str;<br align="left"/>let _912: &amp;ReErased str;<br align="left"/>let mut _913: &amp;ReErased std::string::String;<br align="left"/>let _914: &amp;ReErased std::string::String;<br align="left"/>let _915: std::string::String;<br align="left"/>let _916: std::string::String;<br align="left"/>let mut _917: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _918: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _919: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _920: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _921: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _922: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _923: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _924: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _925: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _926: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _927: &amp;ReErased u128;<br align="left"/>let _928: &amp;ReErased u128;<br align="left"/>let mut _929: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _930: &amp;ReErased u128;<br align="left"/>let _931: &amp;ReErased u128;<br align="left"/>let mut _932: error::ErrorCode;<br align="left"/>let mut _933: isize;<br align="left"/>let _934: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _935: !;<br align="left"/>let mut _936: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _937: ();<br align="left"/>let mut _938: ();<br align="left"/>let mut _939: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _940: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _941: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _942: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _943: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _944: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _945: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _946: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _947: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _948: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _949: &amp;ReErased state::settle_pnl_mode::SettlePnlMode;<br align="left"/>let mut _950: &amp;ReErased state::perp_market::MarketStatus;<br align="left"/>let mut _951: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _952: &amp;ReErased state::perp_market::MarketStatus;<br align="left"/>let mut _953: &amp;ReErased state::perp_market::MarketStatus;<br align="left"/>let mut _954: &amp;ReErased [&amp;ReErased str; 5_usize];<br align="left"/>let mut _955: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _956: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _957: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _958: bool;<br align="left"/>let mut _959: isize;<br align="left"/>let mut _960: isize;<br align="left"/>let mut _961: isize;<br align="left"/>let mut _962: isize;<br align="left"/>let mut _963: isize;<br align="left"/>let mut _964: isize;<br align="left"/>let mut _965: isize;<br align="left"/>let mut _966: isize;<br align="left"/>let mut _967: isize;<br align="left"/>let mut _968: isize;<br align="left"/>let mut _969: isize;<br align="left"/>let mut _970: isize;<br align="left"/>let mut _971: isize;<br align="left"/>let mut _972: isize;<br align="left"/>let mut _973: isize;<br align="left"/>let mut _974: isize;<br align="left"/>let mut _975: isize;<br align="left"/>let mut _976: isize;<br align="left"/>let mut _977: isize;<br align="left"/>let mut _978: isize;<br align="left"/>debug market_index =&gt; _1;<br align="left"/>debug user =&gt; _2;<br align="left"/>debug authority =&gt; _3;<br align="left"/>debug user_key =&gt; _4;<br align="left"/>debug perp_market_map =&gt; _5;<br align="left"/>debug spot_market_map =&gt; _6;<br align="left"/>debug oracle_map =&gt; _7;<br align="left"/>debug clock =&gt; _8;<br align="left"/>debug state =&gt; _9;<br align="left"/>debug meets_margin_requirement =&gt; _10;<br align="left"/>debug mode =&gt; _11;<br align="left"/>debug error_code =&gt; _18;<br align="left"/>debug res =&gt; _25;<br align="left"/>debug residual =&gt; _40;<br align="left"/>debug val =&gt; _43;<br align="left"/>debug now =&gt; _44;<br align="left"/>debug tvl_before =&gt; _45;<br align="left"/>debug deposits_balance_before =&gt; _46;<br align="left"/>debug borrows_balance_before =&gt; _47;<br align="left"/>debug spot_market =&gt; _49;<br align="left"/>debug residual =&gt; _55;<br align="left"/>debug val =&gt; _58;<br align="left"/>debug residual =&gt; _68;<br align="left"/>debug val =&gt; _71;<br align="left"/>debug residual =&gt; _79;<br align="left"/>debug val =&gt; _82;<br align="left"/>debug market =&gt; _89;<br align="left"/>debug residual =&gt; _96;<br align="left"/>debug val =&gt; _99;<br align="left"/>debug oracle_price =&gt; _100;<br align="left"/>debug residual =&gt; _112;<br align="left"/>debug val =&gt; _115;<br align="left"/>debug residual =&gt; _126;<br align="left"/>debug val =&gt; _129;<br align="left"/>debug residual =&gt; _141;<br align="left"/>debug val =&gt; _144;<br align="left"/>debug position_index =&gt; _147;<br align="left"/>debug residual =&gt; _154;<br align="left"/>debug val =&gt; _157;<br align="left"/>debug unrealized_pnl =&gt; _158;<br align="left"/>debug residual =&gt; _167;<br align="left"/>debug val =&gt; _170;<br align="left"/>debug meets_margin_requirement =&gt; _174;<br align="left"/>debug meets_margin_requirement =&gt; _176;<br align="left"/>debug residual =&gt; _184;<br align="left"/>debug val =&gt; _187;<br align="left"/>debug msg =&gt; _190;<br align="left"/>debug res =&gt; _191;<br align="left"/>debug spot_market =&gt; _211;<br align="left"/>debug residual =&gt; _217;<br align="left"/>debug val =&gt; _220;<br align="left"/>debug perp_market =&gt; _221;<br align="left"/>debug residual =&gt; _229;<br align="left"/>debug val =&gt; _232;<br align="left"/>debug healthy_oracle =&gt; _238;<br align="left"/>debug residual =&gt; _246;<br align="left"/>debug val =&gt; _249;<br align="left"/>debug oracle_validity =&gt; _251;<br align="left"/>debug residual =&gt; _276;<br align="left"/>debug val =&gt; _279;<br align="left"/>debug residual =&gt; _281;<br align="left"/>debug val =&gt; _284;<br align="left"/>debug residual =&gt; _292;<br align="left"/>debug val =&gt; _295;<br align="left"/>debug residual =&gt; _304;<br align="left"/>debug val =&gt; _307;<br align="left"/>debug msg =&gt; _313;<br align="left"/>debug res =&gt; _314;<br align="left"/>debug msg =&gt; _344;<br align="left"/>debug res =&gt; _345;<br align="left"/>debug msg =&gt; _385;<br align="left"/>debug res =&gt; _386;<br align="left"/>debug base_asset_amount =&gt; _406;<br align="left"/>debug msg =&gt; _420;<br align="left"/>debug res =&gt; _421;<br align="left"/>debug msg =&gt; _448;<br align="left"/>debug res =&gt; _449;<br align="left"/>debug msg =&gt; _482;<br align="left"/>debug res =&gt; _483;<br align="left"/>debug pnl_pool_token_amount =&gt; _503;<br align="left"/>debug residual =&gt; _518;<br align="left"/>debug val =&gt; _521;<br align="left"/>debug fraction_of_fee_pool_token_amount =&gt; _522;<br align="left"/>debug residual =&gt; _540;<br align="left"/>debug val =&gt; _543;<br align="left"/>debug residual =&gt; _545;<br align="left"/>debug val =&gt; _548;<br align="left"/>debug pnl_tokens_available =&gt; _549;<br align="left"/>debug residual =&gt; _558;<br align="left"/>debug val =&gt; _561;<br align="left"/>debug residual =&gt; _563;<br align="left"/>debug val =&gt; _566;<br align="left"/>debug net_user_pnl =&gt; _567;<br align="left"/>debug residual =&gt; _576;<br align="left"/>debug val =&gt; _579;<br align="left"/>debug max_pnl_pool_excess =&gt; _580;<br align="left"/>debug residual =&gt; _590;<br align="left"/>debug val =&gt; _593;<br align="left"/>debug user_unsettled_pnl =&gt; _594;<br align="left"/>debug residual =&gt; _604;<br align="left"/>debug val =&gt; _607;<br align="left"/>debug pnl_to_settle_with_user =&gt; _608;<br align="left"/>debug residual =&gt; _623;<br align="left"/>debug val =&gt; _626;<br align="left"/>debug msg =&gt; _650;<br align="left"/>debug res =&gt; _651;<br align="left"/>debug msg =&gt; _674;<br align="left"/>debug res =&gt; _675;<br align="left"/>debug user_must_settle_themself =&gt; _695;<br align="left"/>debug msg =&gt; _715;<br align="left"/>debug res =&gt; _716;<br align="left"/>debug residual =&gt; _756;<br align="left"/>debug val =&gt; _759;<br align="left"/>debug residual =&gt; _777;<br align="left"/>debug val =&gt; _780;<br align="left"/>debug residual =&gt; _783;<br align="left"/>debug val =&gt; _786;<br align="left"/>debug residual =&gt; _797;<br align="left"/>debug val =&gt; _800;<br align="left"/>debug residual =&gt; _802;<br align="left"/>debug val =&gt; _805;<br align="left"/>debug quote_asset_amount_after =&gt; _806;<br align="left"/>debug quote_entry_amount =&gt; _810;<br align="left"/>debug residual =&gt; _821;<br align="left"/>debug val =&gt; _824;<br align="left"/>debug residual =&gt; _837;<br align="left"/>debug val =&gt; _840;<br align="left"/>debug tvl_after =&gt; _864;<br align="left"/>debug residual =&gt; _871;<br align="left"/>debug val =&gt; _874;<br align="left"/>debug residual =&gt; _885;<br align="left"/>debug val =&gt; _888;<br align="left"/>debug error_code =&gt; _890;<br align="left"/>debug res =&gt; _897;<br align="left"/>debug res =&gt; _916;<br align="left"/>debug residual =&gt; _934;<br align="left"/>debug val =&gt; _937;<br align="left"/>>;
    bb0__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_958 = const false<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_16 = &amp;(*_2)<br/></td></tr><tr><td align="left">_15 = User::is_bankrupt(move _16)</td></tr></table>>];
    bb1__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">switchInt(move _15)</td></tr></table>>];
    bb2__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageLive(_18)<br/>_18 = error::ErrorCode::UserBankrupt<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_957 = const _<br/>_29 = &amp;(*_957)<br/>_28 = &amp;(*_29)<br/>_27 = move _28 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_28)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>_37 = &amp;_18<br/>_36 = &amp;(*_37)<br/></td></tr><tr><td align="left">_35 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _36)</td></tr></table>>];
    bb3__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageLive(_17)<br/>_17 = ()<br/>_14 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _17)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb4__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>_34 = [move _35]<br/>StorageDead(_35)<br/>_33 = &amp;_34<br/>_32 = &amp;(*_33)<br/>_31 = move _32 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">_26 = Arguments::&lt;'_&gt;::new_v1(move _27, move _31)</td></tr></table>>];
    bb5__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">_25 = format(move _26)</td></tr></table>>];
    bb6__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_37)<br/>StorageDead(_34)<br/>StorageDead(_33)<br/>StorageDead(_29)<br/>_24 = move _25<br/>StorageDead(_25)<br/>_23 = &amp;_24<br/>_22 = &amp;(*_23)<br/></td></tr><tr><td align="left">_21 = &lt;String as Deref&gt;::deref(move _22)</td></tr></table>>];
    bb7__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">_20 = &amp;(*_21)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">_19 = solana_program::log::sol_log(move _20)</td></tr></table>>];
    bb8__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/></td></tr><tr><td align="left">drop(_24)</td></tr></table>>];
    bb9__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_23)<br/>StorageDead(_21)<br/>StorageDead(_19)<br/>StorageLive(_38)<br/>_38 = _18<br/>_14 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _38)<br/>StorageDead(_38)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/></td></tr><tr><td align="left">_13 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _14)</td></tr></table>>];
    bb11__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>_39 = discriminant(_13)<br/></td></tr><tr><td align="left">switchInt(move _39)</td></tr></table>>];
    bb12__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_43)<br/>_43 = ((_13 as Continue).0: ())<br/>_12 = _43<br/>StorageDead(_43)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageLive(_44)<br/>_44 = ((*_8).4: i64)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>_53 = &amp;(*_6)<br/></td></tr><tr><td align="left">_52 = SpotMarketMap::&lt;'_&gt;::get_quote_spot_market_mut(move _53)</td></tr></table>>];
    bb13__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb14__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_40)<br/>_40 = ((_13 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_42)<br/>_42 = _40<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _42)</td></tr></table>>];
    bb15__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_40)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/></td></tr><tr><td align="left">_51 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _52)</td></tr></table>>];
    bb17__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>_54 = discriminant(_51)<br/></td></tr><tr><td align="left">switchInt(move _54)</td></tr></table>>];
    bb18__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_58)<br/>_58 = move ((_51 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_50 = move _58<br/>StorageDead(_58)<br/>_49 = &amp;mut _50<br/>_961 = discriminant(_51)<br/>StorageDead(_51)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>_64 = &amp;mut (*_49)<br/></td></tr><tr><td align="left">_63 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _64)</td></tr></table>>];
    bb19__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_55)<br/>_55 = ((_51 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_57)<br/>_57 = _55<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _57)</td></tr></table>>];
    bb20__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_55)<br/>_959 = discriminant(_51)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">_62 = &amp;mut (*_63)<br/>StorageDead(_64)<br/>StorageLive(_65)<br/>_65 = Option::&lt;&amp;OraclePriceData&gt;::None<br/>StorageLive(_66)<br/>_66 = _44<br/></td></tr><tr><td align="left">_61 = controller::spot_balance::update_spot_market_cumulative_interest(move _62, move _65, move _66)</td></tr></table>>];
    bb22__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageDead(_65)<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">_60 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _61)</td></tr></table>>];
    bb23__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>_67 = discriminant(_60)<br/></td></tr><tr><td align="left">switchInt(move _67)</td></tr></table>>];
    bb24__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_71)<br/>_71 = ((_60 as Continue).0: ())<br/>_59 = _71<br/>StorageDead(_71)<br/>StorageDead(_63)<br/>StorageDead(_60)<br/>StorageDead(_59)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>_77 = &amp;(*_49)<br/></td></tr><tr><td align="left">_76 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _77)</td></tr></table>>];
    bb25__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_68)<br/>_68 = ((_60 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_70)<br/>_70 = _68<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _70)</td></tr></table>>];
    bb26__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_68)<br/>StorageDead(_63)<br/>StorageDead(_60)<br/>StorageDead(_59)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">_75 = &amp;(*_76)<br/>StorageDead(_77)<br/></td></tr><tr><td align="left">_74 = SpotMarket::get_tvl(move _75)</td></tr></table>>];
    bb28__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/></td></tr><tr><td align="left">_73 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _74)</td></tr></table>>];
    bb29__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>_78 = discriminant(_73)<br/></td></tr><tr><td align="left">switchInt(move _78)</td></tr></table>>];
    bb30__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_82)<br/>_82 = ((_73 as Continue).0: u128)<br/>_72 = _82<br/>StorageDead(_82)<br/>_45 = move _72<br/>StorageDead(_72)<br/>StorageDead(_76)<br/>StorageDead(_73)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>_85 = &amp;(*_49)<br/></td></tr><tr><td align="left">_84 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _85)</td></tr></table>>];
    bb31__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_79)<br/>_79 = ((_73 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_81)<br/>_81 = _79<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _81)</td></tr></table>>];
    bb32__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>StorageDead(_79)<br/>StorageDead(_72)<br/>StorageDead(_76)<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>_83 = ((*_84).11: u128)<br/>_46 = move _83<br/>StorageDead(_83)<br/>StorageDead(_84)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>_88 = &amp;(*_49)<br/></td></tr><tr><td align="left">_87 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _88)</td></tr></table>>];
    bb34__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>_86 = ((*_87).12: u128)<br/>_47 = move _86<br/>StorageDead(_86)<br/>StorageDead(_87)<br/>_48 = const ()<br/></td></tr><tr><td align="left">drop(_50)</td></tr></table>>];
    bb35__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageDead(_49)<br/>StorageDead(_48)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>_92 = &amp;(*_5)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>_94 = &amp;_1<br/>_93 = &amp;(*_94)<br/></td></tr><tr><td align="left">_91 = PerpMarketMap::&lt;'_&gt;::get_ref_mut(move _92, move _93)</td></tr></table>>];
    bb36__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageDead(_92)<br/></td></tr><tr><td align="left">_90 = &lt;std::result::Result&lt;RefMut&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _91)</td></tr></table>>];
    bb37__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/>_95 = discriminant(_90)<br/></td></tr><tr><td align="left">switchInt(move _95)</td></tr></table>>];
    bb38__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_99)<br/>_99 = move ((_90 as Continue).0: std::cell::RefMut&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_958 = const true<br/>_89 = move _99<br/>StorageDead(_99)<br/>_965 = discriminant(_90)<br/>StorageDead(_94)<br/>StorageDead(_90)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>_104 = &amp;mut (*_7)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>_110 = &amp;_89<br/></td></tr><tr><td align="left">_109 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _110)</td></tr></table>>];
    bb39__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_96)<br/>_96 = ((_90 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_98)<br/>_98 = _96<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _98)</td></tr></table>>];
    bb40__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>StorageDead(_96)<br/>_963 = discriminant(_90)<br/>StorageDead(_94)<br/>StorageDead(_90)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">_108 = &amp;(*_109)<br/>StorageDead(_110)<br/></td></tr><tr><td align="left">_107 = PerpMarket::oracle_id(move _108)</td></tr></table>>];
    bb42__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/>_106 = &amp;_107<br/>_105 = &amp;(*_106)<br/></td></tr><tr><td align="left">_103 = OracleMap::&lt;'_&gt;::get_price_data(move _104, move _105)</td></tr></table>>];
    bb43__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/>StorageDead(_104)<br/></td></tr><tr><td align="left">_102 = &lt;std::result::Result&lt;&amp;OraclePriceData, error::ErrorCode&gt; as Try&gt;::branch(move _103)</td></tr></table>>];
    bb44__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>_111 = discriminant(_102)<br/></td></tr><tr><td align="left">switchInt(move _111)</td></tr></table>>];
    bb45__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageLive(_115)<br/>_115 = ((_102 as Continue).0: &amp;state::oracle::OraclePriceData)<br/>_101 = _115<br/>StorageDead(_115)<br/>_100 = ((*_101).0: i64)<br/>StorageDead(_109)<br/>StorageDead(_107)<br/>StorageDead(_106)<br/>StorageDead(_102)<br/>StorageDead(_101)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>_122 = &amp;_89<br/>_121 = &amp;(*_122)<br/></td></tr><tr><td align="left">_120 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _121)</td></tr></table>>];
    bb46__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageLive(_112)<br/>_112 = ((_102 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_114)<br/>_114 = _112<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _114)</td></tr></table>>];
    bb47__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/>StorageDead(_112)<br/>StorageDead(_109)<br/>StorageDead(_107)<br/>StorageDead(_106)<br/>StorageDead(_102)<br/>StorageDead(_101)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">_119 = &amp;(*_120)<br/>StorageDead(_121)<br/>StorageLive(_123)<br/>_123 = &amp;(*_9)<br/>StorageLive(_124)<br/>_124 = _100<br/></td></tr><tr><td align="left">_118 = validate_market_within_price_band(move _119, move _123, move _124)</td></tr></table>>];
    bb49__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_124)<br/>StorageDead(_123)<br/>StorageDead(_119)<br/></td></tr><tr><td align="left">_117 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _118)</td></tr></table>>];
    bb50__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>_125 = discriminant(_117)<br/></td></tr><tr><td align="left">switchInt(move _125)</td></tr></table>>];
    bb51__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageLive(_129)<br/>_129 = ((_117 as Continue).0: bool)<br/>_116 = _129<br/>StorageDead(_129)<br/>StorageDead(_122)<br/>StorageDead(_120)<br/>StorageDead(_117)<br/>StorageDead(_116)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>_133 = &amp;mut (*_2)<br/>StorageLive(_134)<br/>_134 = &amp;(*_4)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>_138 = &amp;mut _89<br/>_137 = &amp;mut (*_138)<br/></td></tr><tr><td align="left">_136 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _137)</td></tr></table>>];
    bb52__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageLive(_126)<br/>_126 = ((_117 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_128)<br/>_128 = _126<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _128)</td></tr></table>>];
    bb53__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>StorageDead(_126)<br/>StorageDead(_122)<br/>StorageDead(_120)<br/>StorageDead(_117)<br/>StorageDead(_116)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">_135 = &amp;mut (*_136)<br/>StorageDead(_137)<br/>StorageLive(_139)<br/>_139 = _44<br/></td></tr><tr><td align="left">_132 = controller::funding::settle_funding_payment(move _133, move _134, move _135, move _139)</td></tr></table>>];
    bb55__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_139)<br/>StorageDead(_135)<br/>StorageDead(_134)<br/>StorageDead(_133)<br/></td></tr><tr><td align="left">_131 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _132)</td></tr></table>>];
    bb56__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_132)<br/>_140 = discriminant(_131)<br/></td></tr><tr><td align="left">switchInt(move _140)</td></tr></table>>];
    bb57__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageLive(_144)<br/>_144 = ((_131 as Continue).0: ())<br/>_130 = _144<br/>StorageDead(_144)<br/>StorageDead(_138)<br/>StorageDead(_136)<br/>StorageDead(_131)<br/>StorageDead(_130)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>_958 = const false<br/>_146 = move _89<br/></td></tr><tr><td align="left">_145 = std::mem::drop::&lt;RefMut&lt;'_, PerpMarket&gt;&gt;(move _146)</td></tr></table>>];
    bb58__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageLive(_141)<br/>_141 = ((_131 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_143)<br/>_143 = _141<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _143)</td></tr></table>>];
    bb59__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_143)<br/>StorageDead(_141)<br/>StorageDead(_138)<br/>StorageDead(_136)<br/>StorageDead(_131)<br/>StorageDead(_130)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb60__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_146)<br/>StorageDead(_145)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>_151 = &amp;((*_2).4: [state::user::PerpPosition; 8])<br/>_150 = &amp;(*_151)<br/>StorageLive(_152)<br/>_152 = _1<br/></td></tr><tr><td align="left">_149 = get_position_index(move _150, move _152)</td></tr></table>>];
    bb61__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_152)<br/>StorageDead(_150)<br/></td></tr><tr><td align="left">_148 = &lt;std::result::Result&lt;usize, error::ErrorCode&gt; as Try&gt;::branch(move _149)</td></tr></table>>];
    bb62__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_149)<br/>_153 = discriminant(_148)<br/></td></tr><tr><td align="left">switchInt(move _153)</td></tr></table>>];
    bb63__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageLive(_157)<br/>_157 = ((_148 as Continue).0: usize)<br/>_147 = _157<br/>StorageDead(_157)<br/>StorageDead(_151)<br/>StorageDead(_148)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>StorageLive(_161)<br/>StorageLive(_162)<br/>_162 = _147<br/>_163 = Len(((*_2).4: [state::user::PerpPosition; 8]))<br/>_164 = Lt(_162, _163)<br/></td></tr><tr><td align="left">assert(move _164, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _163, _162)</td></tr></table>>];
    bb64__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageLive(_154)<br/>_154 = ((_148 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_156)<br/>_156 = _154<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _156)</td></tr></table>>];
    bb65__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_156)<br/>StorageDead(_154)<br/>StorageDead(_151)<br/>StorageDead(_148)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb66__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">_161 = &amp;((*_2).4: [state::user::PerpPosition; 8])[_162]<br/>StorageLive(_165)<br/>_165 = _100<br/></td></tr><tr><td align="left">_160 = PerpPosition::get_unrealized_pnl(move _161, move _165)</td></tr></table>>];
    bb67__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_165)<br/>StorageDead(_161)<br/></td></tr><tr><td align="left">_159 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _160)</td></tr></table>>];
    bb68__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_160)<br/>_166 = discriminant(_159)<br/></td></tr><tr><td align="left">switchInt(move _166)</td></tr></table>>];
    bb69__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageLive(_170)<br/>_170 = ((_159 as Continue).0: i128)<br/>_158 = _170<br/>StorageDead(_170)<br/>StorageDead(_162)<br/>StorageDead(_159)<br/>StorageLive(_171)<br/>StorageLive(_172)<br/>StorageLive(_173)<br/>_173 = _158<br/>_172 = Lt(move _173, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _172)</td></tr></table>>];
    bb70__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageLive(_167)<br/>_167 = ((_159 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_169)<br/>_169 = _167<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _169)</td></tr></table>>];
    bb71__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_169)<br/>StorageDead(_167)<br/>StorageDead(_162)<br/>StorageDead(_159)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb72__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_173)<br/>StorageLive(_174)<br/>_175 = discriminant(_10)<br/></td></tr><tr><td align="left">switchInt(move _175)</td></tr></table>>];
    bb73__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_173)<br/>_171 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb74__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageLive(_177)<br/>StorageLive(_178)<br/>StorageLive(_179)<br/>_179 = &amp;(*_2)<br/>StorageLive(_180)<br/>_180 = &amp;(*_5)<br/>StorageLive(_181)<br/>_181 = &amp;(*_6)<br/>StorageLive(_182)<br/>_182 = &amp;mut (*_7)<br/></td></tr><tr><td align="left">_178 = meets_settle_pnl_maintenance_margin_requirement(move _179, move _180, move _181, move _182)</td></tr></table>>];
    bb75__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageLive(_176)<br/>_176 = ((_10 as Some).0: bool)<br/>_174 = _176<br/>StorageDead(_176)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb76__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_182)<br/>StorageDead(_181)<br/>StorageDead(_180)<br/>StorageDead(_179)<br/></td></tr><tr><td align="left">_177 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _178)</td></tr></table>>];
    bb77__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_178)<br/>_183 = discriminant(_177)<br/></td></tr><tr><td align="left">switchInt(move _183)</td></tr></table>>];
    bb78__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageLive(_187)<br/>_187 = ((_177 as Continue).0: bool)<br/>_174 = _187<br/>StorageDead(_187)<br/>StorageDead(_177)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb79__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageLive(_184)<br/>_184 = ((_177 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_186)<br/>_186 = _184<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _186)</td></tr></table>>];
    bb80__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_186)<br/>StorageDead(_184)<br/>StorageDead(_177)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb81__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageLive(_188)<br/>_188 = _174<br/></td></tr><tr><td align="left">switchInt(move _188)</td></tr></table>>];
    bb82__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageLive(_190)<br/>StorageLive(_191)<br/>StorageLive(_192)<br/>StorageLive(_193)<br/>StorageLive(_194)<br/>StorageLive(_195)<br/>_956 = const _<br/>_195 = &amp;(*_956)<br/>_194 = &amp;(*_195)<br/>_193 = move _194 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_194)<br/>StorageLive(_197)<br/>StorageLive(_198)<br/>StorageLive(_199)<br/>StorageLive(_200)<br/>StorageLive(_201)<br/>StorageLive(_202)<br/>StorageLive(_203)<br/>_203 = &amp;_1<br/>_202 = &amp;(*_203)<br/></td></tr><tr><td align="left">_201 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _202)</td></tr></table>>];
    bb83__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_202)<br/>_200 = [move _201]<br/>StorageDead(_201)<br/>_199 = &amp;_200<br/>_198 = &amp;(*_199)<br/>_197 = move _198 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_198)<br/></td></tr><tr><td align="left">_192 = Arguments::&lt;'_&gt;::new_v1(move _193, move _197)</td></tr></table>>];
    bb84__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_197)<br/>StorageDead(_193)<br/></td></tr><tr><td align="left">_191 = format(move _192)</td></tr></table>>];
    bb85__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_192)<br/>StorageDead(_203)<br/>StorageDead(_200)<br/>StorageDead(_199)<br/>StorageDead(_195)<br/>_190 = move _191<br/>StorageDead(_191)<br/>StorageLive(_204)<br/>_204 = _11<br/>StorageLive(_205)<br/>_205 = error::ErrorCode::InsufficientCollateralForSettlingPNL<br/>StorageLive(_206)<br/>_206 = _1<br/>StorageLive(_207)<br/>StorageLive(_208)<br/>StorageLive(_209)<br/>StorageLive(_210)<br/>_210 = &amp;_190<br/>_209 = &amp;(*_210)<br/></td></tr><tr><td align="left">_208 = &lt;String as Deref&gt;::deref(move _209)</td></tr></table>>];
    bb86__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">_207 = &amp;(*_208)<br/>StorageDead(_209)<br/></td></tr><tr><td align="left">_0 = settle_pnl_mode::SettlePnlMode::result(move _204, move _205, move _206, move _207)</td></tr></table>>];
    bb87__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_207)<br/>StorageDead(_206)<br/>StorageDead(_205)<br/>StorageDead(_204)<br/>StorageDead(_210)<br/>StorageDead(_208)<br/></td></tr><tr><td align="left">drop(_190)</td></tr></table>>];
    bb88__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">_171 = const ()<br/>StorageDead(_188)<br/>StorageDead(_174)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb89__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_172)<br/>StorageDead(_171)<br/>StorageLive(_211)<br/>StorageLive(_212)<br/>StorageLive(_213)<br/>StorageLive(_214)<br/>StorageLive(_215)<br/>_215 = &amp;(*_6)<br/></td></tr><tr><td align="left">_214 = SpotMarketMap::&lt;'_&gt;::get_quote_spot_market_mut(move _215)</td></tr></table>>];
    bb90__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_215)<br/></td></tr><tr><td align="left">_213 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _214)</td></tr></table>>];
    bb91__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_214)<br/>_216 = discriminant(_213)<br/></td></tr><tr><td align="left">switchInt(move _216)</td></tr></table>>];
    bb92__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageLive(_220)<br/>_220 = move ((_213 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_212 = move _220<br/>StorageDead(_220)<br/>_211 = &amp;mut _212<br/>_969 = discriminant(_213)<br/>StorageDead(_213)<br/>StorageLive(_221)<br/>StorageLive(_222)<br/>StorageLive(_223)<br/>StorageLive(_224)<br/>StorageLive(_225)<br/>_225 = &amp;(*_5)<br/>StorageLive(_226)<br/>StorageLive(_227)<br/>_227 = &amp;_1<br/>_226 = &amp;(*_227)<br/></td></tr><tr><td align="left">_224 = PerpMarketMap::&lt;'_&gt;::get_ref_mut(move _225, move _226)</td></tr></table>>];
    bb93__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageLive(_217)<br/>_217 = ((_213 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_219)<br/>_219 = _217<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _219)</td></tr></table>>];
    bb94__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_219)<br/>StorageDead(_217)<br/>_967 = discriminant(_213)<br/>StorageDead(_213)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb95__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_226)<br/>StorageDead(_225)<br/></td></tr><tr><td align="left">_223 = &lt;std::result::Result&lt;RefMut&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _224)</td></tr></table>>];
    bb96__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_224)<br/>_228 = discriminant(_223)<br/></td></tr><tr><td align="left">switchInt(move _228)</td></tr></table>>];
    bb97__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageLive(_232)<br/>_232 = move ((_223 as Continue).0: std::cell::RefMut&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_222 = move _232<br/>StorageDead(_232)<br/>_221 = &amp;mut _222<br/>_973 = discriminant(_223)<br/>StorageDead(_227)<br/>StorageDead(_223)<br/>StorageLive(_233)<br/>StorageLive(_234)<br/>StorageLive(_235)<br/>StorageLive(_236)<br/>StorageLive(_237)<br/>_237 = &amp;(*_221)<br/></td></tr><tr><td align="left">_236 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _237)</td></tr></table>>];
    bb98__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageLive(_229)<br/>_229 = ((_223 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_231)<br/>_231 = _229<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _231)</td></tr></table>>];
    bb99__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageDead(_231)<br/>StorageDead(_229)<br/>_971 = discriminant(_223)<br/>StorageDead(_227)<br/>StorageDead(_223)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb100__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_237)<br/>_235 = (((*_236).1: state::perp_market::AMM).70: u8)<br/>_234 = Gt(move _235, const 0_u8)<br/></td></tr><tr><td align="left">switchInt(move _234)</td></tr></table>>];
    bb101__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_236)<br/>StorageDead(_235)<br/>StorageLive(_238)<br/>StorageLive(_239)<br/>StorageLive(_240)<br/>StorageLive(_241)<br/>StorageLive(_242)<br/>StorageLive(_243)<br/>_243 = &amp;(*_221)<br/></td></tr><tr><td align="left">_242 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _243)</td></tr></table>>];
    bb102__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_243)<br/>_241 = &amp;((*_242).1: state::perp_market::AMM)<br/>StorageLive(_244)<br/>_244 = ((*_7).3: u64)<br/></td></tr><tr><td align="left">_240 = AMM::is_recent_oracle_valid(move _241, move _244)</td></tr></table>>];
    bb103__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_244)<br/>StorageDead(_241)<br/></td></tr><tr><td align="left">_239 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _240)</td></tr></table>>];
    bb104__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_240)<br/>_245 = discriminant(_239)<br/></td></tr><tr><td align="left">switchInt(move _245)</td></tr></table>>];
    bb105__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageLive(_249)<br/>_249 = ((_239 as Continue).0: bool)<br/>_238 = _249<br/>StorageDead(_249)<br/>StorageDead(_242)<br/>StorageDead(_239)<br/>StorageLive(_250)<br/>_250 = _238<br/></td></tr><tr><td align="left">switchInt(move _250)</td></tr></table>>];
    bb106__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageLive(_246)<br/>_246 = ((_239 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_248)<br/>_248 = _246<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _248)</td></tr></table>>];
    bb107__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_248)<br/>StorageDead(_246)<br/>StorageDead(_242)<br/>StorageDead(_239)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb108__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">_233 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb109__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageLive(_252)<br/>StorageLive(_253)<br/>StorageLive(_254)<br/>StorageLive(_255)<br/>_255 = &amp;mut (*_7)<br/>StorageLive(_256)<br/>_256 = state::user::MarketType::Perp<br/>StorageLive(_257)<br/>StorageLive(_258)<br/>StorageLive(_259)<br/>_259 = &amp;(*_221)<br/></td></tr><tr><td align="left">_258 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _259)</td></tr></table>>];
    bb110__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_259)<br/>_257 = ((*_258).21: u16)<br/>StorageLive(_260)<br/>StorageLive(_261)<br/>StorageLive(_262)<br/>StorageLive(_263)<br/>StorageLive(_264)<br/>StorageLive(_265)<br/>_265 = &amp;(*_221)<br/></td></tr><tr><td align="left">_264 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _265)</td></tr></table>>];
    bb111__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">_263 = &amp;(*_264)<br/>StorageDead(_265)<br/></td></tr><tr><td align="left">_262 = PerpMarket::oracle_id(move _263)</td></tr></table>>];
    bb112__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageDead(_263)<br/>_261 = &amp;_262<br/>_260 = &amp;(*_261)<br/>StorageLive(_266)<br/>StorageLive(_267)<br/>StorageLive(_268)<br/>_268 = &amp;(*_221)<br/></td></tr><tr><td align="left">_267 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _268)</td></tr></table>>];
    bb113__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageDead(_268)<br/>_266 = ((((*_267).1: state::perp_market::AMM).1: state::oracle::HistoricalOracleData).3: i64)<br/>StorageLive(_269)<br/>StorageLive(_270)<br/>StorageLive(_271)<br/>StorageLive(_272)<br/>StorageLive(_273)<br/>StorageLive(_274)<br/>_274 = &amp;(*_221)<br/></td></tr><tr><td align="left">_273 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _274)</td></tr></table>>];
    bb114__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">_272 = (*_273)<br/>StorageDead(_274)<br/></td></tr><tr><td align="left">_271 = PerpMarket::get_max_confidence_interval_multiplier(move _272)</td></tr></table>>];
    bb115__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageDead(_272)<br/></td></tr><tr><td align="left">_270 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _271)</td></tr></table>>];
    bb116__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_271)<br/>_275 = discriminant(_270)<br/></td></tr><tr><td align="left">switchInt(move _275)</td></tr></table>>];
    bb117__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageLive(_279)<br/>_279 = ((_270 as Continue).0: u64)<br/>_269 = _279<br/>StorageDead(_279)<br/></td></tr><tr><td align="left">_254 = OracleMap::&lt;'_&gt;::get_price_data_and_validity(move _255, move _256, move _257, move _260, move _266, move _269, const 0_i8)</td></tr></table>>];
    bb118__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageLive(_276)<br/>_276 = ((_270 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_278)<br/>_278 = _276<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _278)</td></tr></table>>];
    bb119__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageDead(_278)<br/>StorageDead(_276)<br/>StorageDead(_269)<br/>StorageDead(_266)<br/>StorageDead(_260)<br/>StorageDead(_257)<br/>StorageDead(_256)<br/>StorageDead(_255)<br/>StorageDead(_254)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb120__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageDead(_269)<br/>StorageDead(_266)<br/>StorageDead(_260)<br/>StorageDead(_257)<br/>StorageDead(_256)<br/>StorageDead(_255)<br/></td></tr><tr><td align="left">_253 = &lt;std::result::Result&lt;(&amp;OraclePriceData, OracleValidity), error::ErrorCode&gt; as Try&gt;::branch(move _254)</td></tr></table>>];
    bb121__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageDead(_254)<br/>_280 = discriminant(_253)<br/></td></tr><tr><td align="left">switchInt(move _280)</td></tr></table>>];
    bb122__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageLive(_284)<br/>_284 = ((_253 as Continue).0: (&amp;state::oracle::OraclePriceData, math::oracle::OracleValidity))<br/>_252 = _284<br/>StorageDead(_284)<br/>StorageLive(_251)<br/>_251 = (_252.1: math::oracle::OracleValidity)<br/>StorageDead(_273)<br/>StorageDead(_270)<br/>StorageDead(_267)<br/>StorageDead(_264)<br/>StorageDead(_262)<br/>StorageDead(_261)<br/>StorageDead(_258)<br/>StorageDead(_253)<br/>StorageDead(_252)<br/>StorageLive(_285)<br/>StorageLive(_286)<br/>StorageLive(_287)<br/>StorageLive(_288)<br/>_288 = _251<br/>StorageLive(_289)<br/>StorageLive(_290)<br/>_290 = DriftAction::SettlePnl<br/>_289 = Option::&lt;DriftAction&gt;::Some(move _290)<br/>StorageDead(_290)<br/></td></tr><tr><td align="left">_287 = is_oracle_valid_for_action(move _288, move _289)</td></tr></table>>];
    bb123__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageLive(_281)<br/>_281 = ((_253 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_283)<br/>_283 = _281<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _283)</td></tr></table>>];
    bb124__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageDead(_283)<br/>StorageDead(_281)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb125__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageDead(_289)<br/>StorageDead(_288)<br/></td></tr><tr><td align="left">_286 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _287)</td></tr></table>>];
    bb126__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageDead(_287)<br/>_291 = discriminant(_286)<br/></td></tr><tr><td align="left">switchInt(move _291)</td></tr></table>>];
    bb127__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageLive(_295)<br/>_295 = ((_286 as Continue).0: bool)<br/>_285 = _295<br/>StorageDead(_295)<br/></td></tr><tr><td align="left">switchInt(move _285)</td></tr></table>>];
    bb128__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageLive(_292)<br/>_292 = ((_286 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_294)<br/>_294 = _292<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _294)</td></tr></table>>];
    bb129__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">StorageDead(_294)<br/>StorageDead(_292)<br/>StorageDead(_286)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb130__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageDead(_286)<br/>StorageLive(_296)<br/>StorageLive(_297)<br/>StorageLive(_298)<br/>StorageLive(_299)<br/>StorageLive(_300)<br/>StorageLive(_301)<br/>_301 = &amp;(*_221)<br/></td></tr><tr><td align="left">_300 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _301)</td></tr></table>>];
    bb131__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageDead(_286)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb132__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">_299 = &amp;(*_300)<br/>StorageDead(_301)<br/>StorageLive(_302)<br/>_302 = _100<br/></td></tr><tr><td align="left">_298 = PerpMarket::is_price_divergence_ok_for_settle_pnl(move _299, move _302)</td></tr></table>>];
    bb133__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageDead(_302)<br/>StorageDead(_299)<br/></td></tr><tr><td align="left">_297 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _298)</td></tr></table>>];
    bb134__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageDead(_298)<br/>_303 = discriminant(_297)<br/></td></tr><tr><td align="left">switchInt(move _303)</td></tr></table>>];
    bb135__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageLive(_307)<br/>_307 = ((_297 as Continue).0: bool)<br/>_296 = _307<br/>StorageDead(_307)<br/></td></tr><tr><td align="left">switchInt(move _296)</td></tr></table>>];
    bb136__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageLive(_304)<br/>_304 = ((_297 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_306)<br/>_306 = _304<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _306)</td></tr></table>>];
    bb137__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">StorageDead(_306)<br/>StorageDead(_304)<br/>StorageDead(_300)<br/>StorageDead(_297)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb138__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">StorageDead(_300)<br/>StorageDead(_297)<br/>_233 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb139__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">StorageDead(_300)<br/>StorageDead(_297)<br/>StorageLive(_308)<br/>StorageLive(_309)<br/>StorageLive(_310)<br/>StorageLive(_311)<br/>_311 = &amp;(*_221)<br/></td></tr><tr><td align="left">_310 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _311)</td></tr></table>>];
    bb140__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">StorageDead(_311)<br/>_309 = (((*_310).1: state::perp_market::AMM).73: bool)<br/></td></tr><tr><td align="left">switchInt(move _309)</td></tr></table>>];
    bb141__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">StorageDead(_310)<br/>StorageLive(_313)<br/>StorageLive(_314)<br/>StorageLive(_315)<br/>StorageLive(_316)<br/>StorageLive(_317)<br/>StorageLive(_318)<br/>_955 = const _<br/>_318 = &amp;(*_955)<br/>_317 = &amp;(*_318)<br/>_316 = move _317 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_317)<br/>StorageLive(_320)<br/>StorageLive(_321)<br/>StorageLive(_322)<br/>StorageLive(_323)<br/>StorageLive(_324)<br/>StorageLive(_325)<br/>StorageLive(_326)<br/>_326 = &amp;_251<br/>_325 = &amp;(*_326)<br/></td></tr><tr><td align="left">_324 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;OracleValidity&gt;(move _325)</td></tr></table>>];
    bb142__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageDead(_325)<br/>StorageLive(_327)<br/>StorageLive(_328)<br/>StorageLive(_329)<br/>_329 = &amp;_1<br/>_328 = &amp;(*_329)<br/></td></tr><tr><td align="left">_327 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _328)</td></tr></table>>];
    bb143__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageDead(_328)<br/>_323 = [move _324, move _327]<br/>StorageDead(_327)<br/>StorageDead(_324)<br/>_322 = &amp;_323<br/>_321 = &amp;(*_322)<br/>_320 = move _321 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_321)<br/></td></tr><tr><td align="left">_315 = Arguments::&lt;'_&gt;::new_v1(move _316, move _320)</td></tr></table>>];
    bb144__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">StorageDead(_320)<br/>StorageDead(_316)<br/></td></tr><tr><td align="left">_314 = format(move _315)</td></tr></table>>];
    bb145__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageDead(_315)<br/>StorageDead(_329)<br/>StorageDead(_326)<br/>StorageDead(_323)<br/>StorageDead(_322)<br/>StorageDead(_318)<br/>_313 = move _314<br/>StorageDead(_314)<br/>StorageLive(_330)<br/>_330 = _11<br/>StorageLive(_331)<br/>StorageLive(_332)<br/>_332 = &amp;_251<br/></td></tr><tr><td align="left">_331 = OracleValidity::get_error_code(move _332)</td></tr></table>>];
    bb146__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">StorageDead(_332)<br/>StorageLive(_333)<br/>_333 = _1<br/>StorageLive(_334)<br/>StorageLive(_335)<br/>StorageLive(_336)<br/>StorageLive(_337)<br/>_337 = &amp;_313<br/>_336 = &amp;(*_337)<br/></td></tr><tr><td align="left">_335 = &lt;String as Deref&gt;::deref(move _336)</td></tr></table>>];
    bb147__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left" balign="left">_334 = &amp;(*_335)<br/>StorageDead(_336)<br/></td></tr><tr><td align="left">_0 = settle_pnl_mode::SettlePnlMode::result(move _330, move _331, move _333, move _334)</td></tr></table>>];
    bb148__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left" balign="left">StorageDead(_334)<br/>StorageDead(_333)<br/>StorageDead(_331)<br/>StorageDead(_330)<br/>StorageDead(_337)<br/>StorageDead(_335)<br/></td></tr><tr><td align="left">drop(_313)</td></tr></table>>];
    bb149__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">149</td></tr><tr><td align="left" balign="left">StorageDead(_310)<br/>_308 = const ()<br/>StorageDead(_309)<br/>StorageDead(_308)<br/>StorageLive(_338)<br/>StorageLive(_339)<br/>_339 = ((*_7).3: u64)<br/>StorageLive(_340)<br/>StorageLive(_341)<br/>StorageLive(_342)<br/>_342 = &amp;(*_221)<br/></td></tr><tr><td align="left">_341 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _342)</td></tr></table>>];
    bb150__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">150</td></tr><tr><td align="left" balign="left">StorageDead(_342)<br/>_340 = (((*_341).1: state::perp_market::AMM).47: u64)<br/>_338 = Ne(move _339, move _340)<br/></td></tr><tr><td align="left">switchInt(move _338)</td></tr></table>>];
    bb151__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">151</td></tr><tr><td align="left" balign="left">StorageDead(_341)<br/>StorageDead(_340)<br/>StorageDead(_339)<br/>StorageLive(_344)<br/>StorageLive(_345)<br/>StorageLive(_346)<br/>StorageLive(_347)<br/>StorageLive(_348)<br/>StorageLive(_349)<br/>_954 = const _<br/>_349 = &amp;(*_954)<br/>_348 = &amp;(*_349)<br/>_347 = move _348 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_348)<br/>StorageLive(_351)<br/>StorageLive(_352)<br/>StorageLive(_353)<br/>StorageLive(_354)<br/>StorageLive(_355)<br/>StorageLive(_356)<br/>StorageLive(_357)<br/>_357 = &amp;_1<br/>_356 = &amp;(*_357)<br/></td></tr><tr><td align="left">_355 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _356)</td></tr></table>>];
    bb152__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">152</td></tr><tr><td align="left" balign="left">StorageDead(_356)<br/>StorageLive(_358)<br/>StorageLive(_359)<br/>StorageLive(_360)<br/>_360 = &amp;((*_7).3: u64)<br/>_359 = &amp;(*_360)<br/></td></tr><tr><td align="left">_358 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _359)</td></tr></table>>];
    bb153__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">153</td></tr><tr><td align="left" balign="left">StorageDead(_359)<br/>StorageLive(_361)<br/>StorageLive(_362)<br/>StorageLive(_363)<br/>StorageLive(_364)<br/>StorageLive(_365)<br/>_365 = &amp;(*_221)<br/></td></tr><tr><td align="left">_364 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _365)</td></tr></table>>];
    bb154__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">154</td></tr><tr><td align="left" balign="left">StorageDead(_365)<br/>_363 = &amp;(((*_364).1: state::perp_market::AMM).47: u64)<br/>_362 = &amp;(*_363)<br/></td></tr><tr><td align="left">_361 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _362)</td></tr></table>>];
    bb155__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">155</td></tr><tr><td align="left" balign="left">StorageDead(_362)<br/>StorageLive(_366)<br/>StorageLive(_367)<br/>StorageLive(_368)<br/>StorageLive(_369)<br/>StorageLive(_370)<br/>_370 = &amp;(*_221)<br/></td></tr><tr><td align="left">_369 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _370)</td></tr></table>>];
    bb156__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">156</td></tr><tr><td align="left" balign="left">StorageDead(_370)<br/>_368 = &amp;(((*_369).1: state::perp_market::AMM).73: bool)<br/>_367 = &amp;(*_368)<br/></td></tr><tr><td align="left">_366 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;bool&gt;(move _367)</td></tr></table>>];
    bb157__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">157</td></tr><tr><td align="left" balign="left">StorageDead(_367)<br/>_354 = [move _355, move _358, move _361, move _366]<br/>StorageDead(_366)<br/>StorageDead(_361)<br/>StorageDead(_358)<br/>StorageDead(_355)<br/>_353 = &amp;_354<br/>_352 = &amp;(*_353)<br/>_351 = move _352 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_352)<br/></td></tr><tr><td align="left">_346 = Arguments::&lt;'_&gt;::new_v1(move _347, move _351)</td></tr></table>>];
    bb158__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">158</td></tr><tr><td align="left" balign="left">StorageDead(_351)<br/>StorageDead(_347)<br/></td></tr><tr><td align="left">_345 = format(move _346)</td></tr></table>>];
    bb159__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">159</td></tr><tr><td align="left" balign="left">StorageDead(_346)<br/>StorageDead(_369)<br/>StorageDead(_368)<br/>StorageDead(_364)<br/>StorageDead(_363)<br/>StorageDead(_360)<br/>StorageDead(_357)<br/>StorageDead(_354)<br/>StorageDead(_353)<br/>StorageDead(_349)<br/>_344 = move _345<br/>StorageDead(_345)<br/>StorageLive(_371)<br/>_371 = _11<br/>StorageLive(_372)<br/>_372 = error::ErrorCode::AMMNotUpdatedInSameSlot<br/>StorageLive(_373)<br/>_373 = _1<br/>StorageLive(_374)<br/>StorageLive(_375)<br/>StorageLive(_376)<br/>StorageLive(_377)<br/>_377 = &amp;_344<br/>_376 = &amp;(*_377)<br/></td></tr><tr><td align="left">_375 = &lt;String as Deref&gt;::deref(move _376)</td></tr></table>>];
    bb160__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">160</td></tr><tr><td align="left" balign="left">_374 = &amp;(*_375)<br/>StorageDead(_376)<br/></td></tr><tr><td align="left">_0 = settle_pnl_mode::SettlePnlMode::result(move _371, move _372, move _373, move _374)</td></tr></table>>];
    bb161__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">161</td></tr><tr><td align="left" balign="left">StorageDead(_374)<br/>StorageDead(_373)<br/>StorageDead(_372)<br/>StorageDead(_371)<br/>StorageDead(_377)<br/>StorageDead(_375)<br/></td></tr><tr><td align="left">drop(_344)</td></tr></table>>];
    bb162__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">162</td></tr><tr><td align="left" balign="left">StorageDead(_341)<br/>StorageDead(_340)<br/>StorageDead(_339)<br/>_233 = const ()<br/>StorageDead(_338)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb163__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">163</td></tr><tr><td align="left" balign="left">StorageDead(_296)<br/>StorageDead(_285)<br/>StorageDead(_251)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb164__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">164</td></tr><tr><td align="left" balign="left">StorageDead(_250)<br/>StorageDead(_238)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb165__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">165</td></tr><tr><td align="left" balign="left">StorageDead(_236)<br/>StorageDead(_235)<br/>_233 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb166__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">166</td></tr><tr><td align="left" balign="left">StorageDead(_234)<br/>StorageDead(_233)<br/>StorageLive(_378)<br/>StorageLive(_379)<br/>StorageLive(_380)<br/>StorageLive(_381)<br/>StorageLive(_382)<br/>_382 = &amp;(*_221)<br/></td></tr><tr><td align="left">_381 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _382)</td></tr></table>>];
    bb167__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">167</td></tr><tr><td align="left" balign="left">_380 = &amp;(*_381)<br/>StorageDead(_382)<br/>StorageLive(_383)<br/>_383 = PerpOperation::SettlePnl<br/></td></tr><tr><td align="left">_379 = PerpMarket::is_operation_paused(move _380, move _383)</td></tr></table>>];
    bb168__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">168</td></tr><tr><td align="left">switchInt(move _379)</td></tr></table>>];
    bb169__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">169</td></tr><tr><td align="left" balign="left">StorageDead(_383)<br/>StorageDead(_381)<br/>StorageDead(_380)<br/>StorageLive(_385)<br/>StorageLive(_386)<br/>StorageLive(_387)<br/>StorageLive(_388)<br/>StorageLive(_389)<br/>StorageLive(_390)<br/>_939 = const _<br/>_390 = &amp;(*_939)<br/>_389 = &amp;(*_390)<br/>_388 = move _389 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_389)<br/>StorageLive(_392)<br/>StorageLive(_393)<br/>StorageLive(_394)<br/>StorageLive(_395)<br/>StorageLive(_396)<br/>StorageLive(_397)<br/>StorageLive(_398)<br/>_398 = &amp;_1<br/>_397 = &amp;(*_398)<br/></td></tr><tr><td align="left">_396 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _397)</td></tr></table>>];
    bb170__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">170</td></tr><tr><td align="left" balign="left">StorageDead(_397)<br/>_395 = [move _396]<br/>StorageDead(_396)<br/>_394 = &amp;_395<br/>_393 = &amp;(*_394)<br/>_392 = move _393 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_393)<br/></td></tr><tr><td align="left">_387 = Arguments::&lt;'_&gt;::new_v1(move _388, move _392)</td></tr></table>>];
    bb171__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">171</td></tr><tr><td align="left" balign="left">StorageDead(_392)<br/>StorageDead(_388)<br/></td></tr><tr><td align="left">_386 = format(move _387)</td></tr></table>>];
    bb172__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">172</td></tr><tr><td align="left" balign="left">StorageDead(_387)<br/>StorageDead(_398)<br/>StorageDead(_395)<br/>StorageDead(_394)<br/>StorageDead(_390)<br/>_385 = move _386<br/>StorageDead(_386)<br/>StorageLive(_399)<br/>_399 = _11<br/>StorageLive(_400)<br/>_400 = error::ErrorCode::InvalidMarketStatusToSettlePnl<br/>StorageLive(_401)<br/>_401 = _1<br/>StorageLive(_402)<br/>StorageLive(_403)<br/>StorageLive(_404)<br/>StorageLive(_405)<br/>_405 = &amp;_385<br/>_404 = &amp;(*_405)<br/></td></tr><tr><td align="left">_403 = &lt;String as Deref&gt;::deref(move _404)</td></tr></table>>];
    bb173__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">173</td></tr><tr><td align="left" balign="left">_402 = &amp;(*_403)<br/>StorageDead(_404)<br/></td></tr><tr><td align="left">_0 = settle_pnl_mode::SettlePnlMode::result(move _399, move _400, move _401, move _402)</td></tr></table>>];
    bb174__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">174</td></tr><tr><td align="left" balign="left">StorageDead(_402)<br/>StorageDead(_401)<br/>StorageDead(_400)<br/>StorageDead(_399)<br/>StorageDead(_405)<br/>StorageDead(_403)<br/></td></tr><tr><td align="left">drop(_385)</td></tr></table>>];
    bb175__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">175</td></tr><tr><td align="left" balign="left">StorageDead(_383)<br/>StorageDead(_381)<br/>StorageDead(_380)<br/>_378 = const ()<br/>StorageDead(_379)<br/>StorageDead(_378)<br/>StorageLive(_406)<br/>StorageLive(_407)<br/>_407 = _147<br/>_408 = Len(((*_2).4: [state::user::PerpPosition; 8]))<br/>_409 = Lt(_407, _408)<br/></td></tr><tr><td align="left">assert(move _409, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _408, _407)</td></tr></table>>];
    bb176__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">176</td></tr><tr><td align="left" balign="left">_406 = (((*_2).4: [state::user::PerpPosition; 8])[_407].1: i64)<br/>StorageDead(_407)<br/>StorageLive(_410)<br/>StorageLive(_411)<br/>StorageLive(_412)<br/>_412 = _406<br/>_411 = Ne(move _412, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _411)</td></tr></table>>];
    bb177__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">177</td></tr><tr><td align="left" balign="left">StorageDead(_412)<br/>StorageLive(_413)<br/>StorageLive(_414)<br/>StorageLive(_415)<br/>StorageLive(_416)<br/>StorageLive(_417)<br/>_417 = &amp;(*_221)<br/></td></tr><tr><td align="left">_416 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _417)</td></tr></table>>];
    bb178__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">178</td></tr><tr><td align="left" balign="left">_415 = &amp;(*_416)<br/>StorageDead(_417)<br/>StorageLive(_418)<br/>_418 = PerpOperation::SettlePnlWithPosition<br/></td></tr><tr><td align="left">_414 = PerpMarket::is_operation_paused(move _415, move _418)</td></tr></table>>];
    bb179__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">179</td></tr><tr><td align="left">switchInt(move _414)</td></tr></table>>];
    bb180__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">180</td></tr><tr><td align="left" balign="left">StorageDead(_418)<br/>StorageDead(_416)<br/>StorageDead(_415)<br/>StorageLive(_420)<br/>StorageLive(_421)<br/>StorageLive(_422)<br/>StorageLive(_423)<br/>StorageLive(_424)<br/>StorageLive(_425)<br/>_940 = const _<br/>_425 = &amp;(*_940)<br/>_424 = &amp;(*_425)<br/>_423 = move _424 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_424)<br/>StorageLive(_427)<br/>StorageLive(_428)<br/>StorageLive(_429)<br/>StorageLive(_430)<br/>StorageLive(_431)<br/>StorageLive(_432)<br/>StorageLive(_433)<br/>_433 = &amp;_1<br/>_432 = &amp;(*_433)<br/></td></tr><tr><td align="left">_431 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _432)</td></tr></table>>];
    bb181__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">181</td></tr><tr><td align="left" balign="left">StorageDead(_432)<br/>_430 = [move _431]<br/>StorageDead(_431)<br/>_429 = &amp;_430<br/>_428 = &amp;(*_429)<br/>_427 = move _428 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_428)<br/></td></tr><tr><td align="left">_422 = Arguments::&lt;'_&gt;::new_v1(move _423, move _427)</td></tr></table>>];
    bb182__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">182</td></tr><tr><td align="left" balign="left">StorageDead(_427)<br/>StorageDead(_423)<br/></td></tr><tr><td align="left">_421 = format(move _422)</td></tr></table>>];
    bb183__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">183</td></tr><tr><td align="left" balign="left">StorageDead(_422)<br/>StorageDead(_433)<br/>StorageDead(_430)<br/>StorageDead(_429)<br/>StorageDead(_425)<br/>_420 = move _421<br/>StorageDead(_421)<br/>StorageLive(_434)<br/>_434 = _11<br/>StorageLive(_435)<br/>_435 = error::ErrorCode::InvalidMarketStatusToSettlePnl<br/>StorageLive(_436)<br/>_436 = _1<br/>StorageLive(_437)<br/>StorageLive(_438)<br/>StorageLive(_439)<br/>StorageLive(_440)<br/>_440 = &amp;_420<br/>_439 = &amp;(*_440)<br/></td></tr><tr><td align="left">_438 = &lt;String as Deref&gt;::deref(move _439)</td></tr></table>>];
    bb184__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">184</td></tr><tr><td align="left" balign="left">_437 = &amp;(*_438)<br/>StorageDead(_439)<br/></td></tr><tr><td align="left">_0 = settle_pnl_mode::SettlePnlMode::result(move _434, move _435, move _436, move _437)</td></tr></table>>];
    bb185__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">185</td></tr><tr><td align="left" balign="left">StorageDead(_437)<br/>StorageDead(_436)<br/>StorageDead(_435)<br/>StorageDead(_434)<br/>StorageDead(_440)<br/>StorageDead(_438)<br/></td></tr><tr><td align="left">drop(_420)</td></tr></table>>];
    bb186__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">186</td></tr><tr><td align="left" balign="left">StorageDead(_418)<br/>StorageDead(_416)<br/>StorageDead(_415)<br/>_413 = const ()<br/>StorageDead(_414)<br/>StorageDead(_413)<br/>StorageLive(_441)<br/>StorageLive(_442)<br/>StorageLive(_443)<br/>StorageLive(_444)<br/>_444 = &amp;(*_221)<br/></td></tr><tr><td align="left">_443 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _444)</td></tr></table>>];
    bb187__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">187</td></tr><tr><td align="left" balign="left">StorageDead(_444)<br/>_442 = &amp;((*_443).22: state::perp_market::MarketStatus)<br/>StorageLive(_445)<br/>_950 = const _<br/>_445 = &amp;(*_950)<br/></td></tr><tr><td align="left">_441 = &lt;state::perp_market::MarketStatus as PartialEq&gt;::ne(move _442, move _445)</td></tr></table>>];
    bb188__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">188</td></tr><tr><td align="left">switchInt(move _441)</td></tr></table>>];
    bb189__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">189</td></tr><tr><td align="left" balign="left">StorageDead(_445)<br/>StorageDead(_443)<br/>StorageDead(_442)<br/>StorageLive(_448)<br/>StorageLive(_449)<br/>StorageLive(_450)<br/>StorageLive(_451)<br/>StorageLive(_452)<br/>StorageLive(_453)<br/>_941 = const _<br/>_453 = &amp;(*_941)<br/>_452 = &amp;(*_453)<br/>_451 = move _452 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_452)<br/>StorageLive(_455)<br/>StorageLive(_456)<br/>StorageLive(_457)<br/>StorageLive(_458)<br/>StorageLive(_459)<br/>StorageLive(_460)<br/>StorageLive(_461)<br/>_461 = &amp;_1<br/>_460 = &amp;(*_461)<br/></td></tr><tr><td align="left">_459 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _460)</td></tr></table>>];
    bb190__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">190</td></tr><tr><td align="left" balign="left">StorageDead(_460)<br/>_458 = [move _459]<br/>StorageDead(_459)<br/>_457 = &amp;_458<br/>_456 = &amp;(*_457)<br/>_455 = move _456 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_456)<br/></td></tr><tr><td align="left">_450 = Arguments::&lt;'_&gt;::new_v1(move _451, move _455)</td></tr></table>>];
    bb191__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">191</td></tr><tr><td align="left" balign="left">StorageDead(_455)<br/>StorageDead(_451)<br/></td></tr><tr><td align="left">_449 = format(move _450)</td></tr></table>>];
    bb192__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">192</td></tr><tr><td align="left" balign="left">StorageDead(_450)<br/>StorageDead(_461)<br/>StorageDead(_458)<br/>StorageDead(_457)<br/>StorageDead(_453)<br/>_448 = move _449<br/>StorageDead(_449)<br/>StorageLive(_462)<br/>_462 = _11<br/>StorageLive(_463)<br/>_463 = error::ErrorCode::InvalidMarketStatusToSettlePnl<br/>StorageLive(_464)<br/>_464 = _1<br/>StorageLive(_465)<br/>StorageLive(_466)<br/>StorageLive(_467)<br/>StorageLive(_468)<br/>_468 = &amp;_448<br/>_467 = &amp;(*_468)<br/></td></tr><tr><td align="left">_466 = &lt;String as Deref&gt;::deref(move _467)</td></tr></table>>];
    bb193__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">193</td></tr><tr><td align="left" balign="left">_465 = &amp;(*_466)<br/>StorageDead(_467)<br/></td></tr><tr><td align="left">_0 = settle_pnl_mode::SettlePnlMode::result(move _462, move _463, move _464, move _465)</td></tr></table>>];
    bb194__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">194</td></tr><tr><td align="left" balign="left">StorageDead(_465)<br/>StorageDead(_464)<br/>StorageDead(_463)<br/>StorageDead(_462)<br/>StorageDead(_468)<br/>StorageDead(_466)<br/></td></tr><tr><td align="left">drop(_448)</td></tr></table>>];
    bb195__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">195</td></tr><tr><td align="left" balign="left">StorageDead(_445)<br/>StorageDead(_443)<br/>StorageDead(_442)<br/>_410 = const ()<br/>StorageDead(_441)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb196__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">196</td></tr><tr><td align="left" balign="left">StorageDead(_412)<br/>StorageLive(_469)<br/>StorageLive(_470)<br/>StorageLive(_471)<br/>StorageLive(_472)<br/>_472 = &amp;(*_221)<br/></td></tr><tr><td align="left">_471 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _472)</td></tr></table>>];
    bb197__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">197</td></tr><tr><td align="left" balign="left">StorageDead(_472)<br/>_470 = &amp;((*_471).22: state::perp_market::MarketStatus)<br/>StorageLive(_473)<br/>_953 = const _<br/>_473 = &amp;(*_953)<br/></td></tr><tr><td align="left">_469 = &lt;state::perp_market::MarketStatus as PartialEq&gt;::ne(move _470, move _473)</td></tr></table>>];
    bb198__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">198</td></tr><tr><td align="left">switchInt(move _469)</td></tr></table>>];
    bb199__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">199</td></tr><tr><td align="left" balign="left">StorageDead(_473)<br/>StorageDead(_471)<br/>StorageDead(_470)<br/>StorageLive(_475)<br/>StorageLive(_476)<br/>StorageLive(_477)<br/>StorageLive(_478)<br/>_478 = &amp;(*_221)<br/></td></tr><tr><td align="left">_477 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _478)</td></tr></table>>];
    bb200__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">200</td></tr><tr><td align="left" balign="left">StorageDead(_478)<br/>_476 = &amp;((*_477).22: state::perp_market::MarketStatus)<br/>StorageLive(_479)<br/>_952 = const _<br/>_479 = &amp;(*_952)<br/></td></tr><tr><td align="left">_475 = &lt;state::perp_market::MarketStatus as PartialEq&gt;::ne(move _476, move _479)</td></tr></table>>];
    bb201__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">201</td></tr><tr><td align="left">switchInt(move _475)</td></tr></table>>];
    bb202__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">202</td></tr><tr><td align="left" balign="left">StorageDead(_479)<br/>StorageDead(_477)<br/>StorageDead(_476)<br/>StorageLive(_482)<br/>StorageLive(_483)<br/>StorageLive(_484)<br/>StorageLive(_485)<br/>StorageLive(_486)<br/>StorageLive(_487)<br/>_951 = const _<br/>_487 = &amp;(*_951)<br/>_486 = &amp;(*_487)<br/>_485 = move _486 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_486)<br/>StorageLive(_489)<br/>StorageLive(_490)<br/>StorageLive(_491)<br/>StorageLive(_492)<br/>StorageLive(_493)<br/>StorageLive(_494)<br/>StorageLive(_495)<br/>_495 = &amp;_1<br/>_494 = &amp;(*_495)<br/></td></tr><tr><td align="left">_493 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _494)</td></tr></table>>];
    bb203__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">203</td></tr><tr><td align="left" balign="left">StorageDead(_494)<br/>_492 = [move _493]<br/>StorageDead(_493)<br/>_491 = &amp;_492<br/>_490 = &amp;(*_491)<br/>_489 = move _490 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_490)<br/></td></tr><tr><td align="left">_484 = Arguments::&lt;'_&gt;::new_v1(move _485, move _489)</td></tr></table>>];
    bb204__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">204</td></tr><tr><td align="left" balign="left">StorageDead(_489)<br/>StorageDead(_485)<br/></td></tr><tr><td align="left">_483 = format(move _484)</td></tr></table>>];
    bb205__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">205</td></tr><tr><td align="left" balign="left">StorageDead(_484)<br/>StorageDead(_495)<br/>StorageDead(_492)<br/>StorageDead(_491)<br/>StorageDead(_487)<br/>_482 = move _483<br/>StorageDead(_483)<br/>StorageLive(_496)<br/>_496 = _11<br/>StorageLive(_497)<br/>_497 = error::ErrorCode::InvalidMarketStatusToSettlePnl<br/>StorageLive(_498)<br/>_498 = _1<br/>StorageLive(_499)<br/>StorageLive(_500)<br/>StorageLive(_501)<br/>StorageLive(_502)<br/>_502 = &amp;_482<br/>_501 = &amp;(*_502)<br/></td></tr><tr><td align="left">_500 = &lt;String as Deref&gt;::deref(move _501)</td></tr></table>>];
    bb206__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">206</td></tr><tr><td align="left" balign="left">_499 = &amp;(*_500)<br/>StorageDead(_501)<br/></td></tr><tr><td align="left">_0 = settle_pnl_mode::SettlePnlMode::result(move _496, move _497, move _498, move _499)</td></tr></table>>];
    bb207__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">207</td></tr><tr><td align="left" balign="left">StorageDead(_499)<br/>StorageDead(_498)<br/>StorageDead(_497)<br/>StorageDead(_496)<br/>StorageDead(_502)<br/>StorageDead(_500)<br/></td></tr><tr><td align="left">drop(_482)</td></tr></table>>];
    bb208__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">208</td></tr><tr><td align="left" balign="left">StorageDead(_479)<br/>StorageDead(_477)<br/>StorageDead(_476)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb209__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">209</td></tr><tr><td align="left" balign="left">StorageDead(_473)<br/>StorageDead(_471)<br/>StorageDead(_470)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb210__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">210</td></tr><tr><td align="left" balign="left">_410 = const ()<br/>StorageDead(_475)<br/>StorageDead(_469)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb211__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">211</td></tr><tr><td align="left" balign="left">StorageDead(_411)<br/>StorageDead(_410)<br/>StorageLive(_503)<br/>StorageLive(_504)<br/>StorageLive(_505)<br/>StorageLive(_506)<br/>StorageLive(_507)<br/>StorageLive(_508)<br/>_508 = &amp;(*_221)<br/></td></tr><tr><td align="left">_507 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _508)</td></tr></table>>];
    bb212__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">212</td></tr><tr><td align="left" balign="left">StorageDead(_508)<br/>_506 = (((*_507).2: state::perp_market::PoolBalance).0: u128)<br/>StorageLive(_509)<br/>StorageLive(_510)<br/>StorageLive(_511)<br/>_511 = &amp;(*_211)<br/></td></tr><tr><td align="left">_510 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _511)</td></tr></table>>];
    bb213__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">213</td></tr><tr><td align="left" balign="left">_509 = &amp;(*_510)<br/>StorageDead(_511)<br/>StorageLive(_512)<br/>StorageLive(_513)<br/>StorageLive(_514)<br/>StorageLive(_515)<br/>StorageLive(_516)<br/>_516 = &amp;(*_221)<br/></td></tr><tr><td align="left">_515 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _516)</td></tr></table>>];
    bb214__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">214</td></tr><tr><td align="left" balign="left">StorageDead(_516)<br/>_514 = &amp;((*_515).2: state::perp_market::PoolBalance)<br/></td></tr><tr><td align="left">_513 = &lt;PoolBalance as SpotBalance&gt;::balance_type(move _514)</td></tr></table>>];
    bb215__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">215</td></tr><tr><td align="left" balign="left">_512 = &amp;(*_513)<br/>StorageDead(_514)<br/></td></tr><tr><td align="left">_505 = get_token_amount(move _506, move _509, move _512)</td></tr></table>>];
    bb216__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">216</td></tr><tr><td align="left" balign="left">StorageDead(_512)<br/>StorageDead(_509)<br/>StorageDead(_506)<br/></td></tr><tr><td align="left">_504 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _505)</td></tr></table>>];
    bb217__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">217</td></tr><tr><td align="left" balign="left">StorageDead(_505)<br/>_517 = discriminant(_504)<br/></td></tr><tr><td align="left">switchInt(move _517)</td></tr></table>>];
    bb218__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">218</td></tr><tr><td align="left" balign="left">StorageLive(_521)<br/>_521 = ((_504 as Continue).0: u128)<br/>_503 = _521<br/>StorageDead(_521)<br/>StorageDead(_515)<br/>StorageDead(_513)<br/>StorageDead(_510)<br/>StorageDead(_507)<br/>StorageDead(_504)<br/>StorageLive(_522)<br/>StorageLive(_523)<br/>StorageLive(_524)<br/>StorageLive(_525)<br/>StorageLive(_526)<br/>StorageLive(_527)<br/>StorageLive(_528)<br/>StorageLive(_529)<br/>StorageLive(_530)<br/>_530 = &amp;(*_221)<br/></td></tr><tr><td align="left">_529 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _530)</td></tr></table>>];
    bb219__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">219</td></tr><tr><td align="left" balign="left">StorageLive(_518)<br/>_518 = ((_504 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_520)<br/>_520 = _518<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _520)</td></tr></table>>];
    bb220__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">220</td></tr><tr><td align="left" balign="left">StorageDead(_520)<br/>StorageDead(_518)<br/>StorageDead(_515)<br/>StorageDead(_513)<br/>StorageDead(_510)<br/>StorageDead(_507)<br/>StorageDead(_504)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb221__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">221</td></tr><tr><td align="left" balign="left">StorageDead(_530)<br/>_528 = ((((*_529).1: state::perp_market::AMM).4: state::perp_market::PoolBalance).0: u128)<br/>StorageLive(_531)<br/>StorageLive(_532)<br/>StorageLive(_533)<br/>_533 = &amp;(*_211)<br/></td></tr><tr><td align="left">_532 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _533)</td></tr></table>>];
    bb222__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">222</td></tr><tr><td align="left" balign="left">_531 = &amp;(*_532)<br/>StorageDead(_533)<br/>StorageLive(_534)<br/>StorageLive(_535)<br/>StorageLive(_536)<br/>StorageLive(_537)<br/>StorageLive(_538)<br/>_538 = &amp;(*_221)<br/></td></tr><tr><td align="left">_537 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _538)</td></tr></table>>];
    bb223__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">223</td></tr><tr><td align="left" balign="left">StorageDead(_538)<br/>_536 = &amp;(((*_537).1: state::perp_market::AMM).4: state::perp_market::PoolBalance)<br/></td></tr><tr><td align="left">_535 = &lt;PoolBalance as SpotBalance&gt;::balance_type(move _536)</td></tr></table>>];
    bb224__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">224</td></tr><tr><td align="left" balign="left">_534 = &amp;(*_535)<br/>StorageDead(_536)<br/></td></tr><tr><td align="left">_527 = get_token_amount(move _528, move _531, move _534)</td></tr></table>>];
    bb225__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">225</td></tr><tr><td align="left" balign="left">StorageDead(_534)<br/>StorageDead(_531)<br/>StorageDead(_528)<br/></td></tr><tr><td align="left">_526 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _527)</td></tr></table>>];
    bb226__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">226</td></tr><tr><td align="left" balign="left">StorageDead(_527)<br/>_539 = discriminant(_526)<br/></td></tr><tr><td align="left">switchInt(move _539)</td></tr></table>>];
    bb227__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">227</td></tr><tr><td align="left" balign="left">StorageLive(_543)<br/>_543 = ((_526 as Continue).0: u128)<br/>_525 = _543<br/>StorageDead(_543)<br/></td></tr><tr><td align="left">_524 = &lt;u128 as SafeMath&gt;::safe_div(move _525, const 5_u128)</td></tr></table>>];
    bb228__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">228</td></tr><tr><td align="left" balign="left">StorageLive(_540)<br/>_540 = ((_526 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_542)<br/>_542 = _540<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _542)</td></tr></table>>];
    bb229__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">229</td></tr><tr><td align="left" balign="left">StorageDead(_542)<br/>StorageDead(_540)<br/>StorageDead(_525)<br/>StorageDead(_524)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb230__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">230</td></tr><tr><td align="left" balign="left">StorageDead(_525)<br/></td></tr><tr><td align="left">_523 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _524)</td></tr></table>>];
    bb231__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">231</td></tr><tr><td align="left" balign="left">StorageDead(_524)<br/>_544 = discriminant(_523)<br/></td></tr><tr><td align="left">switchInt(move _544)</td></tr></table>>];
    bb232__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">232</td></tr><tr><td align="left" balign="left">StorageLive(_548)<br/>_548 = ((_523 as Continue).0: u128)<br/>_522 = _548<br/>StorageDead(_548)<br/>StorageDead(_537)<br/>StorageDead(_535)<br/>StorageDead(_532)<br/>StorageDead(_529)<br/>StorageDead(_526)<br/>StorageDead(_523)<br/>StorageLive(_549)<br/>StorageLive(_550)<br/>StorageLive(_551)<br/>StorageLive(_552)<br/>StorageLive(_553)<br/>StorageLive(_554)<br/>StorageLive(_555)<br/>_555 = _503<br/>StorageLive(_556)<br/>_556 = _522<br/></td></tr><tr><td align="left">_554 = &lt;u128 as SafeMath&gt;::safe_add(move _555, move _556)</td></tr></table>>];
    bb233__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">233</td></tr><tr><td align="left" balign="left">StorageLive(_545)<br/>_545 = ((_523 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_547)<br/>_547 = _545<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _547)</td></tr></table>>];
    bb234__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">234</td></tr><tr><td align="left" balign="left">StorageDead(_547)<br/>StorageDead(_545)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb235__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">235</td></tr><tr><td align="left" balign="left">StorageDead(_556)<br/>StorageDead(_555)<br/></td></tr><tr><td align="left">_553 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _554)</td></tr></table>>];
    bb236__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">236</td></tr><tr><td align="left" balign="left">StorageDead(_554)<br/>_557 = discriminant(_553)<br/></td></tr><tr><td align="left">switchInt(move _557)</td></tr></table>>];
    bb237__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">237</td></tr><tr><td align="left" balign="left">StorageLive(_561)<br/>_561 = ((_553 as Continue).0: u128)<br/>_552 = _561<br/>StorageDead(_561)<br/></td></tr><tr><td align="left">_551 = &lt;u128 as Cast&gt;::cast::&lt;i128&gt;(move _552)</td></tr></table>>];
    bb238__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">238</td></tr><tr><td align="left" balign="left">StorageLive(_558)<br/>_558 = ((_553 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_560)<br/>_560 = _558<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _560)</td></tr></table>>];
    bb239__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">239</td></tr><tr><td align="left" balign="left">StorageDead(_560)<br/>StorageDead(_558)<br/>StorageDead(_552)<br/>StorageDead(_551)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb240__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">240</td></tr><tr><td align="left" balign="left">StorageDead(_552)<br/></td></tr><tr><td align="left">_550 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _551)</td></tr></table>>];
    bb241__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">241</td></tr><tr><td align="left" balign="left">StorageDead(_551)<br/>_562 = discriminant(_550)<br/></td></tr><tr><td align="left">switchInt(move _562)</td></tr></table>>];
    bb242__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">242</td></tr><tr><td align="left" balign="left">StorageLive(_566)<br/>_566 = ((_550 as Continue).0: i128)<br/>_549 = _566<br/>StorageDead(_566)<br/>StorageDead(_553)<br/>StorageDead(_550)<br/>StorageLive(_567)<br/>StorageLive(_568)<br/>StorageLive(_569)<br/>StorageLive(_570)<br/>StorageLive(_571)<br/>StorageLive(_572)<br/>StorageLive(_573)<br/>_573 = &amp;(*_221)<br/></td></tr><tr><td align="left">_572 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _573)</td></tr></table>>];
    bb243__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">243</td></tr><tr><td align="left" balign="left">StorageLive(_563)<br/>_563 = ((_550 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_565)<br/>_565 = _563<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _565)</td></tr></table>>];
    bb244__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">244</td></tr><tr><td align="left" balign="left">StorageDead(_565)<br/>StorageDead(_563)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb245__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">245</td></tr><tr><td align="left" balign="left">StorageDead(_573)<br/>_571 = &amp;((*_572).1: state::perp_market::AMM)<br/>_570 = &amp;(*_571)<br/>StorageLive(_574)<br/>_574 = _100<br/></td></tr><tr><td align="left">_569 = calculate_net_user_pnl(move _570, move _574)</td></tr></table>>];
    bb246__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">246</td></tr><tr><td align="left" balign="left">StorageDead(_574)<br/>StorageDead(_570)<br/></td></tr><tr><td align="left">_568 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _569)</td></tr></table>>];
    bb247__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">247</td></tr><tr><td align="left" balign="left">StorageDead(_569)<br/>_575 = discriminant(_568)<br/></td></tr><tr><td align="left">switchInt(move _575)</td></tr></table>>];
    bb248__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">248</td></tr><tr><td align="left" balign="left">StorageLive(_579)<br/>_579 = ((_568 as Continue).0: i128)<br/>_567 = _579<br/>StorageDead(_579)<br/>StorageDead(_572)<br/>StorageDead(_571)<br/>StorageDead(_568)<br/>StorageLive(_580)<br/>StorageLive(_581)<br/>StorageLive(_582)<br/>_582 = _567<br/>StorageLive(_583)<br/>_583 = _549<br/>_581 = Lt(move _582, move _583)<br/></td></tr><tr><td align="left">switchInt(move _581)</td></tr></table>>];
    bb249__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">249</td></tr><tr><td align="left" balign="left">StorageLive(_576)<br/>_576 = ((_568 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_578)<br/>_578 = _576<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _578)</td></tr></table>>];
    bb250__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">250</td></tr><tr><td align="left" balign="left">StorageDead(_578)<br/>StorageDead(_576)<br/>StorageDead(_572)<br/>StorageDead(_571)<br/>StorageDead(_568)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb251__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">251</td></tr><tr><td align="left" balign="left">StorageDead(_583)<br/>StorageDead(_582)<br/>StorageLive(_584)<br/>StorageLive(_585)<br/>StorageLive(_586)<br/>_586 = _549<br/>StorageLive(_587)<br/>StorageLive(_588)<br/>_588 = _567<br/></td></tr><tr><td align="left">_587 = &lt;i128 as Ord&gt;::max(move _588, const 0_i128)</td></tr></table>>];
    bb252__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">252</td></tr><tr><td align="left" balign="left">StorageDead(_583)<br/>StorageDead(_582)<br/>_580 = const 0_i128<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb253__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">253</td></tr><tr><td align="left" balign="left">StorageDead(_588)<br/></td></tr><tr><td align="left">_585 = &lt;i128 as SafeMath&gt;::safe_sub(move _586, move _587)</td></tr></table>>];
    bb254__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">254</td></tr><tr><td align="left" balign="left">StorageDead(_587)<br/>StorageDead(_586)<br/></td></tr><tr><td align="left">_584 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _585)</td></tr></table>>];
    bb255__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">255</td></tr><tr><td align="left" balign="left">StorageDead(_585)<br/>_589 = discriminant(_584)<br/></td></tr><tr><td align="left">switchInt(move _589)</td></tr></table>>];
    bb256__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">256</td></tr><tr><td align="left" balign="left">StorageLive(_593)<br/>_593 = ((_584 as Continue).0: i128)<br/>_580 = _593<br/>StorageDead(_593)<br/>StorageDead(_584)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb257__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">257</td></tr><tr><td align="left" balign="left">StorageLive(_590)<br/>_590 = ((_584 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_592)<br/>_592 = _590<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _592)</td></tr></table>>];
    bb258__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">258</td></tr><tr><td align="left" balign="left">StorageDead(_592)<br/>StorageDead(_590)<br/>StorageDead(_584)<br/>StorageDead(_581)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb259__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">259</td></tr><tr><td align="left" balign="left">StorageDead(_581)<br/>StorageLive(_594)<br/>StorageLive(_595)<br/>StorageLive(_596)<br/>StorageLive(_597)<br/>StorageLive(_598)<br/>_598 = _147<br/>_599 = Len(((*_2).4: [state::user::PerpPosition; 8]))<br/>_600 = Lt(_598, _599)<br/></td></tr><tr><td align="left">assert(move _600, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _599, _598)</td></tr></table>>];
    bb260__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">260</td></tr><tr><td align="left" balign="left">_597 = &amp;((*_2).4: [state::user::PerpPosition; 8])[_598]<br/>StorageLive(_601)<br/>_601 = _100<br/>StorageLive(_602)<br/>_602 = _580<br/></td></tr><tr><td align="left">_596 = PerpPosition::get_claimable_pnl(move _597, move _601, move _602)</td></tr></table>>];
    bb261__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">261</td></tr><tr><td align="left" balign="left">StorageDead(_602)<br/>StorageDead(_601)<br/>StorageDead(_597)<br/></td></tr><tr><td align="left">_595 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _596)</td></tr></table>>];
    bb262__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">262</td></tr><tr><td align="left" balign="left">StorageDead(_596)<br/>_603 = discriminant(_595)<br/></td></tr><tr><td align="left">switchInt(move _603)</td></tr></table>>];
    bb263__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">263</td></tr><tr><td align="left" balign="left">StorageLive(_607)<br/>_607 = ((_595 as Continue).0: i128)<br/>_594 = _607<br/>StorageDead(_607)<br/>StorageDead(_598)<br/>StorageDead(_595)<br/>StorageLive(_608)<br/>StorageLive(_609)<br/>StorageLive(_610)<br/>StorageLive(_611)<br/>StorageLive(_612)<br/>StorageLive(_613)<br/>_613 = &amp;mut (*_221)<br/></td></tr><tr><td align="left">_612 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _613)</td></tr></table>>];
    bb264__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">264</td></tr><tr><td align="left" balign="left">StorageLive(_604)<br/>_604 = ((_595 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_606)<br/>_606 = _604<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _606)</td></tr></table>>];
    bb265__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">265</td></tr><tr><td align="left" balign="left">StorageDead(_606)<br/>StorageDead(_604)<br/>StorageDead(_598)<br/>StorageDead(_595)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb266__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">266</td></tr><tr><td align="left" balign="left">_611 = &amp;mut (*_612)<br/>StorageDead(_613)<br/>StorageLive(_614)<br/>StorageLive(_615)<br/>StorageLive(_616)<br/>_616 = &amp;mut (*_211)<br/></td></tr><tr><td align="left">_615 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _616)</td></tr></table>>];
    bb267__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">267</td></tr><tr><td align="left" balign="left">_614 = &amp;mut (*_615)<br/>StorageDead(_616)<br/>StorageLive(_617)<br/>StorageLive(_618)<br/>StorageLive(_619)<br/>_619 = &amp;(*_2)<br/></td></tr><tr><td align="left">_618 = User::get_quote_spot_position(move _619)</td></tr></table>>];
    bb268__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">268</td></tr><tr><td align="left" balign="left">_617 = &amp;(*_618)<br/>StorageDead(_619)<br/>StorageLive(_620)<br/>_620 = _594<br/>StorageLive(_621)<br/>_621 = _44<br/></td></tr><tr><td align="left">_610 = update_pool_balances(move _611, move _614, move _617, move _620, move _621)</td></tr></table>>];
    bb269__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">269</td></tr><tr><td align="left" balign="left">StorageDead(_621)<br/>StorageDead(_620)<br/>StorageDead(_617)<br/>StorageDead(_614)<br/>StorageDead(_611)<br/></td></tr><tr><td align="left">_609 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _610)</td></tr></table>>];
    bb270__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">270</td></tr><tr><td align="left" balign="left">StorageDead(_610)<br/>_622 = discriminant(_609)<br/></td></tr><tr><td align="left">switchInt(move _622)</td></tr></table>>];
    bb271__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">271</td></tr><tr><td align="left" balign="left">StorageLive(_626)<br/>_626 = ((_609 as Continue).0: i128)<br/>_608 = _626<br/>StorageDead(_626)<br/>StorageDead(_618)<br/>StorageDead(_615)<br/>StorageDead(_612)<br/>StorageDead(_609)<br/>StorageLive(_627)<br/>StorageLive(_628)<br/>StorageLive(_629)<br/>StorageLive(_630)<br/>StorageLive(_631)<br/>_631 = &amp;(*_211)<br/></td></tr><tr><td align="left">_630 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _631)</td></tr></table>>];
    bb272__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">272</td></tr><tr><td align="left" balign="left">StorageLive(_623)<br/>_623 = ((_609 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_625)<br/>_625 = _623<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _625)</td></tr></table>>];
    bb273__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">273</td></tr><tr><td align="left" balign="left">StorageDead(_625)<br/>StorageDead(_623)<br/>StorageDead(_618)<br/>StorageDead(_615)<br/>StorageDead(_612)<br/>StorageDead(_609)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb274__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">274</td></tr><tr><td align="left" balign="left">StorageDead(_631)<br/>_629 = ((*_630).11: u128)<br/>StorageLive(_632)<br/>_632 = _46<br/>_628 = Ne(move _629, move _632)<br/></td></tr><tr><td align="left">switchInt(move _628)</td></tr></table>>];
    bb275__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">275</td></tr><tr><td align="left" balign="left">StorageDead(_632)<br/>StorageDead(_630)<br/>StorageDead(_629)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb276__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">276</td></tr><tr><td align="left" balign="left">StorageDead(_632)<br/>StorageDead(_630)<br/>StorageDead(_629)<br/>StorageLive(_633)<br/>StorageLive(_634)<br/>StorageLive(_635)<br/>StorageLive(_636)<br/>_636 = &amp;(*_211)<br/></td></tr><tr><td align="left">_635 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _636)</td></tr></table>>];
    bb277__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">277</td></tr><tr><td align="left" balign="left">StorageDead(_636)<br/>_634 = ((*_635).12: u128)<br/>StorageLive(_637)<br/>_637 = _47<br/>_633 = Ne(move _634, move _637)<br/></td></tr><tr><td align="left">switchInt(move _633)</td></tr></table>>];
    bb278__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">278</td></tr><tr><td align="left" balign="left">StorageDead(_637)<br/>StorageDead(_635)<br/>StorageDead(_634)<br/>StorageLive(_638)<br/>StorageLive(_639)<br/>_639 = &amp;_11<br/>StorageLive(_640)<br/>_949 = const _<br/>_640 = &amp;(*_949)<br/></td></tr><tr><td align="left">_638 = &lt;settle_pnl_mode::SettlePnlMode as PartialEq&gt;::eq(move _639, move _640)</td></tr></table>>];
    bb279__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">279</td></tr><tr><td align="left">switchInt(move _638)</td></tr></table>>];
    bb280__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">280</td></tr><tr><td align="left" balign="left">StorageDead(_640)<br/>StorageDead(_639)<br/>StorageLive(_642)<br/>StorageLive(_643)<br/>StorageLive(_644)<br/>_644 = const &quot;Spot market balance has changed, switch to MUST_SETTLE mode&quot;<br/>_643 = &amp;(*_644)<br/></td></tr><tr><td align="left">_642 = solana_program::log::sol_log(move _643)</td></tr></table>>];
    bb281__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">281</td></tr><tr><td align="left" balign="left">StorageDead(_643)<br/>StorageDead(_644)<br/>StorageDead(_642)<br/>StorageLive(_645)<br/>_645 = settle_pnl_mode::SettlePnlMode::MustSettle<br/>_11 = move _645<br/>StorageDead(_645)<br/>_627 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb282__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">282</td></tr><tr><td align="left" balign="left">StorageDead(_640)<br/>StorageDead(_639)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb283__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">283</td></tr><tr><td align="left" balign="left">StorageDead(_637)<br/>StorageDead(_635)<br/>StorageDead(_634)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb284__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">284</td></tr><tr><td align="left" balign="left">_627 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb285__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">285</td></tr><tr><td align="left" balign="left">StorageDead(_638)<br/>StorageDead(_633)<br/>StorageDead(_628)<br/>StorageDead(_627)<br/>StorageLive(_646)<br/>StorageLive(_647)<br/>StorageLive(_648)<br/>_648 = _594<br/>_647 = Eq(move _648, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _647)</td></tr></table>>];
    bb286__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">286</td></tr><tr><td align="left" balign="left">StorageDead(_648)<br/>StorageLive(_650)<br/>StorageLive(_651)<br/>StorageLive(_652)<br/>StorageLive(_653)<br/>StorageLive(_654)<br/>StorageLive(_655)<br/>_942 = const _<br/>_655 = &amp;(*_942)<br/>_654 = &amp;(*_655)<br/>_653 = move _654 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_654)<br/>StorageLive(_657)<br/>StorageLive(_658)<br/>StorageLive(_659)<br/>StorageLive(_660)<br/>StorageLive(_661)<br/>StorageLive(_662)<br/>StorageLive(_663)<br/>_663 = &amp;_1<br/>_662 = &amp;(*_663)<br/></td></tr><tr><td align="left">_661 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _662)</td></tr></table>>];
    bb287__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">287</td></tr><tr><td align="left" balign="left">StorageDead(_662)<br/>_660 = [move _661]<br/>StorageDead(_661)<br/>_659 = &amp;_660<br/>_658 = &amp;(*_659)<br/>_657 = move _658 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_658)<br/></td></tr><tr><td align="left">_652 = Arguments::&lt;'_&gt;::new_v1(move _653, move _657)</td></tr></table>>];
    bb288__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">288</td></tr><tr><td align="left" balign="left">StorageDead(_657)<br/>StorageDead(_653)<br/></td></tr><tr><td align="left">_651 = format(move _652)</td></tr></table>>];
    bb289__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">289</td></tr><tr><td align="left" balign="left">StorageDead(_652)<br/>StorageDead(_663)<br/>StorageDead(_660)<br/>StorageDead(_659)<br/>StorageDead(_655)<br/>_650 = move _651<br/>StorageDead(_651)<br/>StorageLive(_664)<br/>_664 = _11<br/>StorageLive(_665)<br/>_665 = error::ErrorCode::NoUnsettledPnl<br/>StorageLive(_666)<br/>_666 = _1<br/>StorageLive(_667)<br/>StorageLive(_668)<br/>StorageLive(_669)<br/>StorageLive(_670)<br/>_670 = &amp;_650<br/>_669 = &amp;(*_670)<br/></td></tr><tr><td align="left">_668 = &lt;String as Deref&gt;::deref(move _669)</td></tr></table>>];
    bb290__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">290</td></tr><tr><td align="left" balign="left">_667 = &amp;(*_668)<br/>StorageDead(_669)<br/></td></tr><tr><td align="left">_0 = settle_pnl_mode::SettlePnlMode::result(move _664, move _665, move _666, move _667)</td></tr></table>>];
    bb291__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">291</td></tr><tr><td align="left" balign="left">StorageDead(_667)<br/>StorageDead(_666)<br/>StorageDead(_665)<br/>StorageDead(_664)<br/>StorageDead(_670)<br/>StorageDead(_668)<br/></td></tr><tr><td align="left">drop(_650)</td></tr></table>>];
    bb292__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">292</td></tr><tr><td align="left" balign="left">StorageDead(_648)<br/>StorageLive(_671)<br/>StorageLive(_672)<br/>_672 = _608<br/>_671 = Eq(move _672, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _671)</td></tr></table>>];
    bb293__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">293</td></tr><tr><td align="left" balign="left">StorageDead(_672)<br/>StorageLive(_674)<br/>StorageLive(_675)<br/>StorageLive(_676)<br/>StorageLive(_677)<br/>StorageLive(_678)<br/>StorageLive(_679)<br/>_943 = const _<br/>_679 = &amp;(*_943)<br/>_678 = &amp;(*_679)<br/>_677 = move _678 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_678)<br/>StorageLive(_681)<br/>StorageLive(_682)<br/>StorageLive(_683)<br/>StorageLive(_684)<br/>StorageLive(_685)<br/>StorageLive(_686)<br/>StorageLive(_687)<br/>_687 = &amp;_1<br/>_686 = &amp;(*_687)<br/></td></tr><tr><td align="left">_685 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _686)</td></tr></table>>];
    bb294__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">294</td></tr><tr><td align="left" balign="left">StorageDead(_686)<br/>_684 = [move _685]<br/>StorageDead(_685)<br/>_683 = &amp;_684<br/>_682 = &amp;(*_683)<br/>_681 = move _682 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_682)<br/></td></tr><tr><td align="left">_676 = Arguments::&lt;'_&gt;::new_v1(move _677, move _681)</td></tr></table>>];
    bb295__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">295</td></tr><tr><td align="left" balign="left">StorageDead(_681)<br/>StorageDead(_677)<br/></td></tr><tr><td align="left">_675 = format(move _676)</td></tr></table>>];
    bb296__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">296</td></tr><tr><td align="left" balign="left">StorageDead(_676)<br/>StorageDead(_687)<br/>StorageDead(_684)<br/>StorageDead(_683)<br/>StorageDead(_679)<br/>_674 = move _675<br/>StorageDead(_675)<br/>StorageLive(_688)<br/>_688 = _11<br/>StorageLive(_689)<br/>_689 = error::ErrorCode::PnlPoolCantSettleUser<br/>StorageLive(_690)<br/>_690 = _1<br/>StorageLive(_691)<br/>StorageLive(_692)<br/>StorageLive(_693)<br/>StorageLive(_694)<br/>_694 = &amp;_674<br/>_693 = &amp;(*_694)<br/></td></tr><tr><td align="left">_692 = &lt;String as Deref&gt;::deref(move _693)</td></tr></table>>];
    bb297__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">297</td></tr><tr><td align="left" balign="left">_691 = &amp;(*_692)<br/>StorageDead(_693)<br/></td></tr><tr><td align="left">_0 = settle_pnl_mode::SettlePnlMode::result(move _688, move _689, move _690, move _691)</td></tr></table>>];
    bb298__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">298</td></tr><tr><td align="left" balign="left">StorageDead(_691)<br/>StorageDead(_690)<br/>StorageDead(_689)<br/>StorageDead(_688)<br/>StorageDead(_694)<br/>StorageDead(_692)<br/></td></tr><tr><td align="left">drop(_674)</td></tr></table>>];
    bb299__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">299</td></tr><tr><td align="left" balign="left">StorageDead(_672)<br/>_646 = const ()<br/>StorageDead(_671)<br/>StorageDead(_647)<br/>StorageDead(_646)<br/>StorageLive(_695)<br/>StorageLive(_696)<br/>StorageLive(_697)<br/>_697 = _608<br/>_696 = Ge(move _697, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _696)</td></tr></table>>];
    bb300__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">300</td></tr><tr><td align="left" balign="left">StorageDead(_697)<br/>StorageLive(_698)<br/>StorageLive(_699)<br/>_699 = _580<br/>_698 = Le(move _699, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _698)</td></tr></table>>];
    bb301__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">301</td></tr><tr><td align="left" balign="left">StorageDead(_697)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb302__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">302</td></tr><tr><td align="left" balign="left">StorageDead(_699)<br/>StorageLive(_700)<br/>StorageLive(_701)<br/>_701 = _608<br/>_700 = Gt(move _701, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _700)</td></tr></table>>];
    bb303__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">303</td></tr><tr><td align="left" balign="left">StorageDead(_701)<br/>StorageLive(_702)<br/>StorageLive(_703)<br/>_703 = _406<br/>_702 = Eq(move _703, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _702)</td></tr></table>>];
    bb304__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">304</td></tr><tr><td align="left" balign="left">StorageDead(_703)<br/>StorageLive(_704)<br/>StorageLive(_705)<br/>_705 = &amp;(*_2)<br/></td></tr><tr><td align="left">_704 = User::is_being_liquidated(move _705)</td></tr></table>>];
    bb305__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">305</td></tr><tr><td align="left">switchInt(move _704)</td></tr></table>>];
    bb306__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">306</td></tr><tr><td align="left" balign="left">StorageDead(_705)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb307__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">307</td></tr><tr><td align="left" balign="left">StorageDead(_705)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb308__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">308</td></tr><tr><td align="left" balign="left">StorageDead(_703)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb309__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">309</td></tr><tr><td align="left" balign="left">StorageDead(_701)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb310__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">310</td></tr><tr><td align="left" balign="left">StorageLive(_706)<br/>StorageLive(_707)<br/>StorageLive(_708)<br/>_708 = &amp;((*_2).0: anchor_lang::prelude::Pubkey)<br/>StorageLive(_709)<br/>_709 = &amp;(*_3)<br/></td></tr><tr><td align="left">_707 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _708, move _709)</td></tr></table>>];
    bb311__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">311</td></tr><tr><td align="left" balign="left">StorageDead(_699)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb312__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">312</td></tr><tr><td align="left" balign="left">_695 = const false<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb313__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">313</td></tr><tr><td align="left">switchInt(move _707)</td></tr></table>>];
    bb314__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">314</td></tr><tr><td align="left" balign="left">StorageDead(_709)<br/>StorageDead(_708)<br/>_706 = const true<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb315__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">315</td></tr><tr><td align="left" balign="left">StorageDead(_709)<br/>StorageDead(_708)<br/>StorageLive(_710)<br/>_710 = &amp;((*_2).1: anchor_lang::prelude::Pubkey)<br/>StorageLive(_711)<br/>_711 = &amp;(*_3)<br/></td></tr><tr><td align="left">_706 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _710, move _711)</td></tr></table>>];
    bb316__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">316</td></tr><tr><td align="left" balign="left">StorageDead(_711)<br/>StorageDead(_710)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb317__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">317</td></tr><tr><td align="left" balign="left">StorageDead(_707)<br/>_695 = Not(move _706)<br/>StorageDead(_706)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb318__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">318</td></tr><tr><td align="left" balign="left">StorageDead(_704)<br/>StorageDead(_702)<br/>StorageDead(_700)<br/>StorageDead(_698)<br/>StorageDead(_696)<br/>StorageLive(_712)<br/>StorageLive(_713)<br/>_713 = _695<br/></td></tr><tr><td align="left">switchInt(move _713)</td></tr></table>>];
    bb319__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">319</td></tr><tr><td align="left" balign="left">StorageLive(_715)<br/>StorageLive(_716)<br/>StorageLive(_717)<br/>StorageLive(_718)<br/>StorageLive(_719)<br/>StorageLive(_720)<br/>_944 = const _<br/>_720 = &amp;(*_944)<br/>_719 = &amp;(*_720)<br/>_718 = move _719 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_719)<br/>StorageLive(_722)<br/>StorageLive(_723)<br/>StorageLive(_724)<br/>StorageLive(_725)<br/>StorageLive(_726)<br/>StorageLive(_727)<br/>StorageLive(_728)<br/>_728 = &amp;_1<br/>_727 = &amp;(*_728)<br/></td></tr><tr><td align="left">_726 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _727)</td></tr></table>>];
    bb320__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">320</td></tr><tr><td align="left" balign="left">StorageDead(_727)<br/>_725 = [move _726]<br/>StorageDead(_726)<br/>_724 = &amp;_725<br/>_723 = &amp;(*_724)<br/>_722 = move _723 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_723)<br/></td></tr><tr><td align="left">_717 = Arguments::&lt;'_&gt;::new_v1(move _718, move _722)</td></tr></table>>];
    bb321__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">321</td></tr><tr><td align="left" balign="left">StorageDead(_722)<br/>StorageDead(_718)<br/></td></tr><tr><td align="left">_716 = format(move _717)</td></tr></table>>];
    bb322__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">322</td></tr><tr><td align="left" balign="left">StorageDead(_717)<br/>StorageDead(_728)<br/>StorageDead(_725)<br/>StorageDead(_724)<br/>StorageDead(_720)<br/>_715 = move _716<br/>StorageDead(_716)<br/>StorageLive(_729)<br/>_729 = _11<br/>StorageLive(_730)<br/>_730 = error::ErrorCode::UserMustSettleTheirOwnPositiveUnsettledPNL<br/>StorageLive(_731)<br/>_731 = _1<br/>StorageLive(_732)<br/>StorageLive(_733)<br/>StorageLive(_734)<br/>StorageLive(_735)<br/>_735 = &amp;_715<br/>_734 = &amp;(*_735)<br/></td></tr><tr><td align="left">_733 = &lt;String as Deref&gt;::deref(move _734)</td></tr></table>>];
    bb323__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">323</td></tr><tr><td align="left" balign="left">_732 = &amp;(*_733)<br/>StorageDead(_734)<br/></td></tr><tr><td align="left">_0 = settle_pnl_mode::SettlePnlMode::result(move _729, move _730, move _731, move _732)</td></tr></table>>];
    bb324__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">324</td></tr><tr><td align="left" balign="left">StorageDead(_732)<br/>StorageDead(_731)<br/>StorageDead(_730)<br/>StorageDead(_729)<br/>StorageDead(_735)<br/>StorageDead(_733)<br/></td></tr><tr><td align="left">drop(_715)</td></tr></table>>];
    bb325__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">325</td></tr><tr><td align="left" balign="left">_712 = const ()<br/>StorageDead(_713)<br/>StorageDead(_712)<br/>StorageLive(_736)<br/>StorageLive(_737)<br/>StorageLive(_738)<br/>StorageLive(_739)<br/>StorageLive(_740)<br/>_740 = _608<br/></td></tr><tr><td align="left">_739 = core::num::&lt;impl i128&gt;::unsigned_abs(move _740)</td></tr></table>>];
    bb326__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">326</td></tr><tr><td align="left" balign="left">StorageDead(_740)<br/>StorageLive(_741)<br/>StorageLive(_742)<br/>StorageLive(_743)<br/>_743 = _608<br/>_742 = Gt(move _743, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _742)</td></tr></table>>];
    bb327__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">327</td></tr><tr><td align="left" balign="left">StorageDead(_743)<br/>StorageLive(_744)<br/>_947 = const _<br/>_744 = &amp;(*_947)<br/>_741 = &amp;(*_744)<br/>StorageDead(_744)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb328__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">328</td></tr><tr><td align="left" balign="left">StorageDead(_743)<br/>StorageLive(_746)<br/>_948 = const _<br/>_746 = &amp;(*_948)<br/>_741 = &amp;(*_746)<br/>StorageDead(_746)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb329__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">329</td></tr><tr><td align="left" balign="left">StorageDead(_742)<br/>StorageLive(_748)<br/>StorageLive(_749)<br/>StorageLive(_750)<br/>_750 = &amp;mut (*_211)<br/></td></tr><tr><td align="left">_749 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _750)</td></tr></table>>];
    bb330__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">330</td></tr><tr><td align="left" balign="left">_748 = &amp;mut (*_749)<br/>StorageDead(_750)<br/>StorageLive(_751)<br/>StorageLive(_752)<br/>StorageLive(_753)<br/>StorageLive(_754)<br/>_754 = &amp;mut (*_2)<br/></td></tr><tr><td align="left">_753 = User::get_quote_spot_position_mut(move _754)</td></tr></table>>];
    bb331__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">331</td></tr><tr><td align="left" balign="left">_752 = &amp;mut (*_753)<br/>_751 = move _752 as &amp;mut dyn state::spot_market::SpotBalance (PointerCoercion(Unsize))<br/>StorageDead(_754)<br/>StorageDead(_752)<br/></td></tr><tr><td align="left">_738 = update_spot_balances(move _739, move _741, move _748, move _751, const false)</td></tr></table>>];
    bb332__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">332</td></tr><tr><td align="left" balign="left">StorageDead(_751)<br/>StorageDead(_748)<br/>StorageDead(_741)<br/>StorageDead(_739)<br/></td></tr><tr><td align="left">_737 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _738)</td></tr></table>>];
    bb333__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">333</td></tr><tr><td align="left" balign="left">StorageDead(_738)<br/>_755 = discriminant(_737)<br/></td></tr><tr><td align="left">switchInt(move _755)</td></tr></table>>];
    bb334__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">334</td></tr><tr><td align="left" balign="left">StorageLive(_759)<br/>_759 = ((_737 as Continue).0: ())<br/>_736 = _759<br/>StorageDead(_759)<br/>StorageDead(_753)<br/>StorageDead(_749)<br/>StorageDead(_737)<br/>StorageDead(_736)<br/>StorageLive(_760)<br/>StorageLive(_761)<br/>StorageLive(_762)<br/>StorageLive(_763)<br/>StorageLive(_764)<br/>StorageLive(_765)<br/>_765 = _147<br/>_766 = Len(((*_2).4: [state::user::PerpPosition; 8]))<br/>_767 = Lt(_765, _766)<br/></td></tr><tr><td align="left">assert(move _767, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _766, _765)</td></tr></table>>];
    bb335__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">335</td></tr><tr><td align="left" balign="left">StorageLive(_756)<br/>_756 = ((_737 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_758)<br/>_758 = _756<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _758)</td></tr></table>>];
    bb336__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">336</td></tr><tr><td align="left" balign="left">StorageDead(_758)<br/>StorageDead(_756)<br/>StorageDead(_753)<br/>StorageDead(_749)<br/>StorageDead(_737)<br/>StorageDead(_736)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb337__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">337</td></tr><tr><td align="left" balign="left">_764 = &amp;mut ((*_2).4: [state::user::PerpPosition; 8])[_765]<br/>_763 = &amp;mut (*_764)<br/>StorageLive(_768)<br/>StorageLive(_769)<br/>StorageLive(_770)<br/>_770 = &amp;mut (*_221)<br/></td></tr><tr><td align="left">_769 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _770)</td></tr></table>>];
    bb338__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">338</td></tr><tr><td align="left" balign="left">_768 = &amp;mut (*_769)<br/>StorageDead(_770)<br/>StorageLive(_771)<br/>StorageLive(_772)<br/>StorageLive(_773)<br/>StorageLive(_774)<br/>StorageLive(_775)<br/>_775 = _608<br/></td></tr><tr><td align="left">_774 = &lt;i128 as Cast&gt;::cast::&lt;i64&gt;(move _775)</td></tr></table>>];
    bb339__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">339</td></tr><tr><td align="left" balign="left">StorageDead(_775)<br/></td></tr><tr><td align="left">_773 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _774)</td></tr></table>>];
    bb340__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">340</td></tr><tr><td align="left" balign="left">StorageDead(_774)<br/>_776 = discriminant(_773)<br/></td></tr><tr><td align="left">switchInt(move _776)</td></tr></table>>];
    bb341__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">341</td></tr><tr><td align="left" balign="left">StorageLive(_780)<br/>_780 = ((_773 as Continue).0: i64)<br/>_772 = _780<br/>StorageDead(_780)<br/>_781 = Eq(_772, const i64::MIN)<br/></td></tr><tr><td align="left">assert(!move _781, &quot;attempt to negate `{}`, which would overflow&quot;, _772)</td></tr></table>>];
    bb342__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">342</td></tr><tr><td align="left" balign="left">StorageLive(_777)<br/>_777 = ((_773 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_779)<br/>_779 = _777<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _779)</td></tr></table>>];
    bb343__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">343</td></tr><tr><td align="left" balign="left">StorageDead(_779)<br/>StorageDead(_777)<br/>StorageDead(_772)<br/>StorageDead(_771)<br/>StorageDead(_768)<br/>StorageDead(_763)<br/>StorageDead(_762)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb344__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">344</td></tr><tr><td align="left" balign="left">_771 = Neg(move _772)<br/>StorageDead(_772)<br/></td></tr><tr><td align="left">_762 = update_quote_asset_amount(move _763, move _768, move _771)</td></tr></table>>];
    bb345__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">345</td></tr><tr><td align="left" balign="left">StorageDead(_771)<br/>StorageDead(_768)<br/>StorageDead(_763)<br/></td></tr><tr><td align="left">_761 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _762)</td></tr></table>>];
    bb346__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">346</td></tr><tr><td align="left" balign="left">StorageDead(_762)<br/>_782 = discriminant(_761)<br/></td></tr><tr><td align="left">switchInt(move _782)</td></tr></table>>];
    bb347__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">347</td></tr><tr><td align="left" balign="left">StorageLive(_786)<br/>_786 = ((_761 as Continue).0: ())<br/>_760 = _786<br/>StorageDead(_786)<br/>StorageDead(_773)<br/>StorageDead(_769)<br/>StorageDead(_765)<br/>StorageDead(_764)<br/>StorageDead(_761)<br/>StorageDead(_760)<br/>StorageLive(_787)<br/>StorageLive(_788)<br/>StorageLive(_789)<br/>StorageLive(_790)<br/>_790 = &amp;mut (*_2)<br/>StorageLive(_791)<br/>_791 = _147<br/>StorageLive(_792)<br/>StorageLive(_793)<br/>StorageLive(_794)<br/>StorageLive(_795)<br/>_795 = _608<br/></td></tr><tr><td align="left">_794 = &lt;i128 as Cast&gt;::cast::&lt;i64&gt;(move _795)</td></tr></table>>];
    bb348__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">348</td></tr><tr><td align="left" balign="left">StorageLive(_783)<br/>_783 = ((_761 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_785)<br/>_785 = _783<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _785)</td></tr></table>>];
    bb349__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">349</td></tr><tr><td align="left" balign="left">StorageDead(_785)<br/>StorageDead(_783)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb350__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">350</td></tr><tr><td align="left" balign="left">StorageDead(_795)<br/></td></tr><tr><td align="left">_793 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _794)</td></tr></table>>];
    bb351__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">351</td></tr><tr><td align="left" balign="left">StorageDead(_794)<br/>_796 = discriminant(_793)<br/></td></tr><tr><td align="left">switchInt(move _796)</td></tr></table>>];
    bb352__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">352</td></tr><tr><td align="left" balign="left">StorageLive(_800)<br/>_800 = ((_793 as Continue).0: i64)<br/>_792 = _800<br/>StorageDead(_800)<br/></td></tr><tr><td align="left">_789 = update_settled_pnl(move _790, move _791, move _792)</td></tr></table>>];
    bb353__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">353</td></tr><tr><td align="left" balign="left">StorageLive(_797)<br/>_797 = ((_793 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_799)<br/>_799 = _797<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _799)</td></tr></table>>];
    bb354__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">354</td></tr><tr><td align="left" balign="left">StorageDead(_799)<br/>StorageDead(_797)<br/>StorageDead(_792)<br/>StorageDead(_791)<br/>StorageDead(_790)<br/>StorageDead(_789)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb355__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">355</td></tr><tr><td align="left" balign="left">StorageDead(_792)<br/>StorageDead(_791)<br/>StorageDead(_790)<br/></td></tr><tr><td align="left">_788 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _789)</td></tr></table>>];
    bb356__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">356</td></tr><tr><td align="left" balign="left">StorageDead(_789)<br/>_801 = discriminant(_788)<br/></td></tr><tr><td align="left">switchInt(move _801)</td></tr></table>>];
    bb357__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">357</td></tr><tr><td align="left" balign="left">StorageLive(_805)<br/>_805 = ((_788 as Continue).0: ())<br/>_787 = _805<br/>StorageDead(_805)<br/>StorageDead(_793)<br/>StorageDead(_788)<br/>StorageDead(_787)<br/>StorageLive(_806)<br/>StorageLive(_807)<br/>_807 = _147<br/>_808 = Len(((*_2).4: [state::user::PerpPosition; 8]))<br/>_809 = Lt(_807, _808)<br/></td></tr><tr><td align="left">assert(move _809, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _808, _807)</td></tr></table>>];
    bb358__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">358</td></tr><tr><td align="left" balign="left">StorageLive(_802)<br/>_802 = ((_788 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_804)<br/>_804 = _802<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _804)</td></tr></table>>];
    bb359__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">359</td></tr><tr><td align="left" balign="left">StorageDead(_804)<br/>StorageDead(_802)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb360__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">360</td></tr><tr><td align="left" balign="left">_806 = (((*_2).4: [state::user::PerpPosition; 8])[_807].2: i64)<br/>StorageDead(_807)<br/>StorageLive(_810)<br/>StorageLive(_811)<br/>_811 = _147<br/>_812 = Len(((*_2).4: [state::user::PerpPosition; 8]))<br/>_813 = Lt(_811, _812)<br/></td></tr><tr><td align="left">assert(move _813, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _812, _811)</td></tr></table>>];
    bb361__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">361</td></tr><tr><td align="left" balign="left">_810 = (((*_2).4: [state::user::PerpPosition; 8])[_811].4: i64)<br/>StorageDead(_811)<br/>StorageLive(_814)<br/>StorageLive(_815)<br/>StorageLive(_816)<br/>StorageLive(_817)<br/>StorageLive(_818)<br/>StorageLive(_819)<br/>_819 = &amp;(*_221)<br/></td></tr><tr><td align="left">_818 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _819)</td></tr></table>>];
    bb362__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">362</td></tr><tr><td align="left" balign="left">_817 = &amp;(*_818)<br/>StorageDead(_819)<br/></td></tr><tr><td align="left">_816 = validate_perp_market(move _817)</td></tr></table>>];
    bb363__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">363</td></tr><tr><td align="left" balign="left">StorageDead(_817)<br/></td></tr><tr><td align="left">_815 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _816)</td></tr></table>>];
    bb364__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">364</td></tr><tr><td align="left" balign="left">StorageDead(_816)<br/>_820 = discriminant(_815)<br/></td></tr><tr><td align="left">switchInt(move _820)</td></tr></table>>];
    bb365__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">365</td></tr><tr><td align="left" balign="left">StorageLive(_824)<br/>_824 = ((_815 as Continue).0: ())<br/>_814 = _824<br/>StorageDead(_824)<br/>StorageDead(_818)<br/>StorageDead(_815)<br/>StorageDead(_814)<br/>StorageLive(_825)<br/>StorageLive(_826)<br/>StorageLive(_827)<br/>StorageLive(_828)<br/>StorageLive(_829)<br/>StorageLive(_830)<br/>_830 = _147<br/>_831 = Len(((*_2).4: [state::user::PerpPosition; 8]))<br/>_832 = Lt(_830, _831)<br/></td></tr><tr><td align="left">assert(move _832, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _831, _830)</td></tr></table>>];
    bb366__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">366</td></tr><tr><td align="left" balign="left">StorageLive(_821)<br/>_821 = ((_815 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_823)<br/>_823 = _821<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _823)</td></tr></table>>];
    bb367__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">367</td></tr><tr><td align="left" balign="left">StorageDead(_823)<br/>StorageDead(_821)<br/>StorageDead(_818)<br/>StorageDead(_815)<br/>StorageDead(_814)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb368__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">368</td></tr><tr><td align="left" balign="left">_829 = &amp;((*_2).4: [state::user::PerpPosition; 8])[_830]<br/>_828 = &amp;(*_829)<br/>StorageLive(_833)<br/>StorageLive(_834)<br/>StorageLive(_835)<br/>_835 = &amp;(*_221)<br/></td></tr><tr><td align="left">_834 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _835)</td></tr></table>>];
    bb369__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">369</td></tr><tr><td align="left" balign="left">_833 = &amp;(*_834)<br/>StorageDead(_835)<br/></td></tr><tr><td align="left">_827 = validate_perp_position_with_perp_market(move _828, move _833)</td></tr></table>>];
    bb370__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">370</td></tr><tr><td align="left" balign="left">StorageDead(_833)<br/>StorageDead(_828)<br/></td></tr><tr><td align="left">_826 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _827)</td></tr></table>>];
    bb371__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">371</td></tr><tr><td align="left" balign="left">StorageDead(_827)<br/>_836 = discriminant(_826)<br/></td></tr><tr><td align="left">switchInt(move _836)</td></tr></table>>];
    bb372__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">372</td></tr><tr><td align="left" balign="left">StorageLive(_840)<br/>_840 = ((_826 as Continue).0: ())<br/>_825 = _840<br/>StorageDead(_840)<br/>StorageDead(_834)<br/>StorageDead(_830)<br/>StorageDead(_829)<br/>StorageDead(_826)<br/>StorageDead(_825)<br/>StorageLive(_841)<br/>StorageLive(_842)<br/>StorageLive(_843)<br/>StorageLive(_844)<br/>StorageLive(_845)<br/>StorageLive(_846)<br/>StorageLive(_847)<br/>StorageLive(_848)<br/>StorageLive(_849)<br/>StorageLive(_850)<br/>StorageLive(_851)<br/>StorageLive(_852)<br/>StorageLive(_853)<br/>StorageLive(_854)<br/>StorageLive(_855)<br/>_855 = _44<br/>StorageLive(_856)<br/>_856 = (*_4)<br/>StorageLive(_857)<br/>_857 = _1<br/>StorageLive(_858)<br/>_858 = _608<br/>StorageLive(_859)<br/>_859 = _406<br/>StorageLive(_860)<br/>_860 = _806<br/>StorageLive(_861)<br/>_861 = _810<br/>StorageLive(_862)<br/>_862 = _100<br/>StorageLive(_863)<br/>_863 = SettlePnlExplanation::None<br/>_854 = SettlePnlRecord { ts: move _855, user: move _856, market_index: move _857, pnl: move _858, base_asset_amount: move _859, quote_asset_amount_after: move _860, quote_entry_amount: move _861, settle_price: move _862, explanation: move _863 }<br/>StorageDead(_863)<br/>StorageDead(_862)<br/>StorageDead(_861)<br/>StorageDead(_860)<br/>StorageDead(_859)<br/>StorageDead(_858)<br/>StorageDead(_857)<br/>StorageDead(_856)<br/>StorageDead(_855)<br/>_853 = &amp;_854<br/>_852 = &amp;(*_853)<br/></td></tr><tr><td align="left">_851 = &lt;SettlePnlRecord as anchor_lang::Event&gt;::data(move _852)</td></tr></table>>];
    bb373__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">373</td></tr><tr><td align="left" balign="left">StorageLive(_837)<br/>_837 = ((_826 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_839)<br/>_839 = _837<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _839)</td></tr></table>>];
    bb374__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">374</td></tr><tr><td align="left" balign="left">StorageDead(_839)<br/>StorageDead(_837)<br/>StorageDead(_834)<br/>StorageDead(_830)<br/>StorageDead(_829)<br/>StorageDead(_826)<br/>StorageDead(_825)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb375__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">375</td></tr><tr><td align="left" balign="left">StorageDead(_852)<br/>_850 = &amp;_851<br/>_849 = &amp;(*_850)<br/></td></tr><tr><td align="left">_848 = &lt;Vec&lt;u8&gt; as Deref&gt;::deref(move _849)</td></tr></table>>];
    bb376__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">376</td></tr><tr><td align="left" balign="left">_847 = &amp;(*_848)<br/>StorageDead(_849)<br/>_846 = [move _847]<br/>StorageDead(_847)<br/>_845 = &amp;_846<br/>_844 = &amp;(*_845)<br/>_843 = move _844 as &amp;[&amp;[u8]] (PointerCoercion(Unsize))<br/>StorageDead(_844)<br/></td></tr><tr><td align="left">_842 = solana_program::log::sol_log_data(move _843)</td></tr></table>>];
    bb377__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">377</td></tr><tr><td align="left" balign="left">StorageDead(_843)<br/></td></tr><tr><td align="left">drop(_851)</td></tr></table>>];
    bb378__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">378</td></tr><tr><td align="left" balign="left">StorageDead(_854)<br/>StorageDead(_853)<br/>StorageDead(_851)<br/>StorageDead(_850)<br/>StorageDead(_848)<br/>StorageDead(_846)<br/>StorageDead(_845)<br/>StorageDead(_842)<br/>_841 = const ()<br/>StorageDead(_841)<br/>StorageLive(_864)<br/>StorageLive(_865)<br/>StorageLive(_866)<br/>StorageLive(_867)<br/>StorageLive(_868)<br/>StorageLive(_869)<br/>_869 = &amp;(*_211)<br/></td></tr><tr><td align="left">_868 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _869)</td></tr></table>>];
    bb379__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">379</td></tr><tr><td align="left" balign="left">_867 = &amp;(*_868)<br/>StorageDead(_869)<br/></td></tr><tr><td align="left">_866 = SpotMarket::get_tvl(move _867)</td></tr></table>>];
    bb380__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">380</td></tr><tr><td align="left" balign="left">StorageDead(_867)<br/></td></tr><tr><td align="left">_865 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _866)</td></tr></table>>];
    bb381__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">381</td></tr><tr><td align="left" balign="left">StorageDead(_866)<br/>_870 = discriminant(_865)<br/></td></tr><tr><td align="left">switchInt(move _870)</td></tr></table>>];
    bb382__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">382</td></tr><tr><td align="left" balign="left">StorageLive(_874)<br/>_874 = ((_865 as Continue).0: u128)<br/>_864 = _874<br/>StorageDead(_874)<br/>StorageDead(_868)<br/>StorageDead(_865)<br/>StorageLive(_875)<br/>StorageLive(_876)<br/>StorageLive(_877)<br/>StorageLive(_878)<br/>StorageLive(_879)<br/>StorageLive(_880)<br/>StorageLive(_881)<br/>StorageLive(_882)<br/>_882 = _45<br/>StorageLive(_883)<br/>_883 = _864<br/></td></tr><tr><td align="left">_881 = &lt;u128 as SafeMath&gt;::safe_sub(move _882, move _883)</td></tr></table>>];
    bb383__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">383</td></tr><tr><td align="left" balign="left">StorageLive(_871)<br/>_871 = ((_865 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_873)<br/>_873 = _871<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _873)</td></tr></table>>];
    bb384__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">384</td></tr><tr><td align="left" balign="left">StorageDead(_873)<br/>StorageDead(_871)<br/>StorageDead(_868)<br/>StorageDead(_865)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb385__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">385</td></tr><tr><td align="left" balign="left">StorageDead(_883)<br/>StorageDead(_882)<br/></td></tr><tr><td align="left">_880 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _881)</td></tr></table>>];
    bb386__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">386</td></tr><tr><td align="left" balign="left">StorageDead(_881)<br/>_884 = discriminant(_880)<br/></td></tr><tr><td align="left">switchInt(move _884)</td></tr></table>>];
    bb387__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">387</td></tr><tr><td align="left" balign="left">StorageLive(_888)<br/>_888 = ((_880 as Continue).0: u128)<br/>_879 = _888<br/>StorageDead(_888)<br/>_878 = Le(move _879, const 10_u128)<br/></td></tr><tr><td align="left">switchInt(move _878)</td></tr></table>>];
    bb388__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">388</td></tr><tr><td align="left" balign="left">StorageLive(_885)<br/>_885 = ((_880 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_887)<br/>_887 = _885<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _887)</td></tr></table>>];
    bb389__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">389</td></tr><tr><td align="left" balign="left">StorageDead(_887)<br/>StorageDead(_885)<br/>StorageDead(_880)<br/>StorageDead(_879)<br/>StorageDead(_878)<br/>StorageDead(_877)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb390__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">390</td></tr><tr><td align="left" balign="left">StorageDead(_880)<br/>StorageDead(_879)<br/>StorageLive(_889)<br/>_889 = ()<br/>_877 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _889)<br/>StorageDead(_889)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb391__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">391</td></tr><tr><td align="left" balign="left">StorageDead(_880)<br/>StorageDead(_879)<br/>StorageLive(_890)<br/>_890 = error::ErrorCode::DefaultError<br/>StorageLive(_891)<br/>StorageLive(_892)<br/>StorageLive(_893)<br/>StorageLive(_894)<br/>StorageLive(_895)<br/>StorageLive(_896)<br/>StorageLive(_897)<br/>StorageLive(_898)<br/>StorageLive(_899)<br/>StorageLive(_900)<br/>StorageLive(_901)<br/>_946 = const _<br/>_901 = &amp;(*_946)<br/>_900 = &amp;(*_901)<br/>_899 = move _900 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_900)<br/>StorageLive(_903)<br/>StorageLive(_904)<br/>StorageLive(_905)<br/>StorageLive(_906)<br/>StorageLive(_907)<br/>StorageLive(_908)<br/>StorageLive(_909)<br/>_909 = &amp;_890<br/>_908 = &amp;(*_909)<br/></td></tr><tr><td align="left">_907 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _908)</td></tr></table>>];
    bb392__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">392</td></tr><tr><td align="left" balign="left">StorageDead(_908)<br/>_906 = [move _907]<br/>StorageDead(_907)<br/>_905 = &amp;_906<br/>_904 = &amp;(*_905)<br/>_903 = move _904 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_904)<br/></td></tr><tr><td align="left">_898 = Arguments::&lt;'_&gt;::new_v1(move _899, move _903)</td></tr></table>>];
    bb393__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">393</td></tr><tr><td align="left" balign="left">StorageDead(_903)<br/>StorageDead(_899)<br/></td></tr><tr><td align="left">_897 = format(move _898)</td></tr></table>>];
    bb394__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">394</td></tr><tr><td align="left" balign="left">StorageDead(_898)<br/>StorageDead(_909)<br/>StorageDead(_906)<br/>StorageDead(_905)<br/>StorageDead(_901)<br/>_896 = move _897<br/>StorageDead(_897)<br/>_895 = &amp;_896<br/>_894 = &amp;(*_895)<br/></td></tr><tr><td align="left">_893 = &lt;String as Deref&gt;::deref(move _894)</td></tr></table>>];
    bb395__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">395</td></tr><tr><td align="left" balign="left">_892 = &amp;(*_893)<br/>StorageDead(_894)<br/></td></tr><tr><td align="left">_891 = solana_program::log::sol_log(move _892)</td></tr></table>>];
    bb396__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">396</td></tr><tr><td align="left" balign="left">StorageDead(_892)<br/></td></tr><tr><td align="left">drop(_896)</td></tr></table>>];
    bb397__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">397</td></tr><tr><td align="left" balign="left">StorageDead(_896)<br/>StorageDead(_895)<br/>StorageDead(_893)<br/>StorageDead(_891)<br/>StorageLive(_910)<br/>StorageLive(_911)<br/>StorageLive(_912)<br/>StorageLive(_913)<br/>StorageLive(_914)<br/>StorageLive(_915)<br/>StorageLive(_916)<br/>StorageLive(_917)<br/>StorageLive(_918)<br/>StorageLive(_919)<br/>StorageLive(_920)<br/>_945 = const _<br/>_920 = &amp;(*_945)<br/>_919 = &amp;(*_920)<br/>_918 = move _919 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_919)<br/>StorageLive(_922)<br/>StorageLive(_923)<br/>StorageLive(_924)<br/>StorageLive(_925)<br/>StorageLive(_926)<br/>StorageLive(_927)<br/>StorageLive(_928)<br/>_928 = &amp;_45<br/>_927 = &amp;(*_928)<br/></td></tr><tr><td align="left">_926 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u128&gt;(move _927)</td></tr></table>>];
    bb398__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">398</td></tr><tr><td align="left" balign="left">StorageDead(_927)<br/>StorageLive(_929)<br/>StorageLive(_930)<br/>StorageLive(_931)<br/>_931 = &amp;_864<br/>_930 = &amp;(*_931)<br/></td></tr><tr><td align="left">_929 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u128&gt;(move _930)</td></tr></table>>];
    bb399__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">399</td></tr><tr><td align="left" balign="left">StorageDead(_930)<br/>_925 = [move _926, move _929]<br/>StorageDead(_929)<br/>StorageDead(_926)<br/>_924 = &amp;_925<br/>_923 = &amp;(*_924)<br/>_922 = move _923 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_923)<br/></td></tr><tr><td align="left">_917 = Arguments::&lt;'_&gt;::new_v1(move _918, move _922)</td></tr></table>>];
    bb400__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">400</td></tr><tr><td align="left" balign="left">StorageDead(_922)<br/>StorageDead(_918)<br/></td></tr><tr><td align="left">_916 = format(move _917)</td></tr></table>>];
    bb401__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">401</td></tr><tr><td align="left" balign="left">StorageDead(_917)<br/>StorageDead(_931)<br/>StorageDead(_928)<br/>StorageDead(_925)<br/>StorageDead(_924)<br/>StorageDead(_920)<br/>_915 = move _916<br/>StorageDead(_916)<br/>_914 = &amp;_915<br/>_913 = &amp;(*_914)<br/></td></tr><tr><td align="left">_912 = &lt;String as Deref&gt;::deref(move _913)</td></tr></table>>];
    bb402__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">402</td></tr><tr><td align="left" balign="left">_911 = &amp;(*_912)<br/>StorageDead(_913)<br/></td></tr><tr><td align="left">_910 = solana_program::log::sol_log(move _911)</td></tr></table>>];
    bb403__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">403</td></tr><tr><td align="left" balign="left">StorageDead(_911)<br/></td></tr><tr><td align="left">drop(_915)</td></tr></table>>];
    bb404__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">404</td></tr><tr><td align="left" balign="left">StorageDead(_915)<br/>StorageDead(_914)<br/>StorageDead(_912)<br/>StorageDead(_910)<br/>StorageLive(_932)<br/>_932 = _890<br/>_877 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _932)<br/>StorageDead(_932)<br/>StorageDead(_890)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb405__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">405</td></tr><tr><td align="left" balign="left">StorageDead(_878)<br/></td></tr><tr><td align="left">_876 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _877)</td></tr></table>>];
    bb406__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">406</td></tr><tr><td align="left" balign="left">StorageDead(_877)<br/>_933 = discriminant(_876)<br/></td></tr><tr><td align="left">switchInt(move _933)</td></tr></table>>];
    bb407__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">407</td></tr><tr><td align="left" balign="left">StorageLive(_937)<br/>_937 = ((_876 as Continue).0: ())<br/>_875 = _937<br/>StorageDead(_937)<br/>StorageDead(_876)<br/>StorageDead(_875)<br/>StorageLive(_938)<br/>_938 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _938)<br/>StorageDead(_938)<br/>StorageDead(_864)<br/>StorageDead(_810)<br/>StorageDead(_806)<br/>StorageDead(_695)<br/>StorageDead(_608)<br/>StorageDead(_594)<br/>StorageDead(_580)<br/>StorageDead(_567)<br/>StorageDead(_549)<br/>StorageDead(_522)<br/>StorageDead(_503)<br/>StorageDead(_406)<br/></td></tr><tr><td align="left">drop(_222)</td></tr></table>>];
    bb408__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">408</td></tr><tr><td align="left" balign="left">StorageLive(_934)<br/>_934 = ((_876 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_936)<br/>_936 = _934<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _936)</td></tr></table>>];
    bb409__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">409</td></tr><tr><td align="left" balign="left">StorageDead(_936)<br/>StorageDead(_934)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb410__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">410</td></tr><tr><td align="left" balign="left">StorageDead(_222)<br/>StorageDead(_221)<br/></td></tr><tr><td align="left">drop(_212)</td></tr></table>>];
    bb411__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">411</td></tr><tr><td align="left" balign="left">StorageDead(_212)<br/>StorageDead(_211)<br/>StorageDead(_158)<br/>StorageDead(_147)<br/>StorageDead(_100)<br/>_958 = const false<br/>StorageDead(_89)<br/>StorageDead(_47)<br/>StorageDead(_46)<br/>StorageDead(_45)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb412__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">412</td></tr><tr><td align="left" balign="left">StorageDead(_876)<br/>StorageDead(_875)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb413__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">413</td></tr><tr><td align="left" balign="left">StorageDead(_864)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb414__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">414</td></tr><tr><td align="left" balign="left">StorageDead(_810)<br/>StorageDead(_806)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb415__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">415</td></tr><tr><td align="left" balign="left">StorageDead(_793)<br/>StorageDead(_788)<br/>StorageDead(_787)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb416__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">416</td></tr><tr><td align="left" balign="left">StorageDead(_773)<br/>StorageDead(_769)<br/>StorageDead(_765)<br/>StorageDead(_764)<br/>StorageDead(_761)<br/>StorageDead(_760)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb417__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">417</td></tr><tr><td align="left" balign="left">StorageDead(_715)<br/>StorageDead(_713)<br/>StorageDead(_712)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb418__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">418</td></tr><tr><td align="left" balign="left">StorageDead(_695)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb419__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">419</td></tr><tr><td align="left" balign="left">StorageDead(_674)<br/>StorageDead(_671)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb420__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">420</td></tr><tr><td align="left" balign="left">StorageDead(_650)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb421__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">421</td></tr><tr><td align="left" balign="left">StorageDead(_647)<br/>StorageDead(_646)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb422__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">422</td></tr><tr><td align="left" balign="left">StorageDead(_608)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb423__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">423</td></tr><tr><td align="left" balign="left">StorageDead(_594)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb424__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">424</td></tr><tr><td align="left" balign="left">StorageDead(_580)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb425__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">425</td></tr><tr><td align="left" balign="left">StorageDead(_567)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb426__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">426</td></tr><tr><td align="left" balign="left">StorageDead(_553)<br/>StorageDead(_550)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb427__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">427</td></tr><tr><td align="left" balign="left">StorageDead(_549)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb428__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">428</td></tr><tr><td align="left" balign="left">StorageDead(_537)<br/>StorageDead(_535)<br/>StorageDead(_532)<br/>StorageDead(_529)<br/>StorageDead(_526)<br/>StorageDead(_523)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb429__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">429</td></tr><tr><td align="left" balign="left">StorageDead(_522)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb430__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">430</td></tr><tr><td align="left" balign="left">StorageDead(_503)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb431__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">431</td></tr><tr><td align="left" balign="left">StorageDead(_482)<br/>StorageDead(_475)<br/>StorageDead(_469)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb432__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">432</td></tr><tr><td align="left" balign="left">StorageDead(_448)<br/>StorageDead(_441)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb433__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">433</td></tr><tr><td align="left" balign="left">StorageDead(_420)<br/>StorageDead(_414)<br/>StorageDead(_413)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb434__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">434</td></tr><tr><td align="left" balign="left">StorageDead(_411)<br/>StorageDead(_410)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb435__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">435</td></tr><tr><td align="left" balign="left">StorageDead(_406)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb436__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">436</td></tr><tr><td align="left" balign="left">StorageDead(_385)<br/>StorageDead(_379)<br/>StorageDead(_378)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb437__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">437</td></tr><tr><td align="left" balign="left">StorageDead(_344)<br/>StorageDead(_338)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb438__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">438</td></tr><tr><td align="left" balign="left">StorageDead(_313)<br/>StorageDead(_309)<br/>StorageDead(_308)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb439__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">439</td></tr><tr><td align="left" balign="left">StorageDead(_296)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb440__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">440</td></tr><tr><td align="left" balign="left">StorageDead(_285)<br/>StorageDead(_251)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb441__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">441</td></tr><tr><td align="left" balign="left">StorageDead(_273)<br/>StorageDead(_270)<br/>StorageDead(_267)<br/>StorageDead(_264)<br/>StorageDead(_262)<br/>StorageDead(_261)<br/>StorageDead(_258)<br/>StorageDead(_253)<br/>StorageDead(_252)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb442__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">442</td></tr><tr><td align="left" balign="left">StorageDead(_250)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb443__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">443</td></tr><tr><td align="left" balign="left">StorageDead(_238)<br/>StorageDead(_234)<br/>StorageDead(_233)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb444__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">444</td></tr><tr><td align="left">drop(_222)</td></tr></table>>];
    bb445__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">445</td></tr><tr><td align="left" balign="left">StorageDead(_222)<br/>StorageDead(_221)<br/></td></tr><tr><td align="left">drop(_212)</td></tr></table>>];
    bb446__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">446</td></tr><tr><td align="left" balign="left">StorageDead(_212)<br/>StorageDead(_211)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb447__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">447</td></tr><tr><td align="left" balign="left">StorageDead(_190)<br/>StorageDead(_188)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb448__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">448</td></tr><tr><td align="left" balign="left">StorageDead(_174)<br/>StorageDead(_172)<br/>StorageDead(_171)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb449__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">449</td></tr><tr><td align="left" balign="left">StorageDead(_158)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb450__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">450</td></tr><tr><td align="left" balign="left">StorageDead(_147)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb451__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">451</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/></td></tr><tr><td align="left">switchInt(_958)</td></tr></table>>];
    bb452__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">452</td></tr><tr><td align="left" balign="left">_958 = const false<br/>StorageDead(_89)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb453__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">453</td></tr><tr><td align="left">drop(_50)</td></tr></table>>];
    bb454__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">454</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageDead(_49)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb455__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">455</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_46)<br/>StorageDead(_45)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb456__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">456</td></tr><tr><td align="left">return</td></tr></table>>];
    bb457__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">457 (cleanup)</td></tr><tr><td align="left">drop(_915)</td></tr></table>>];
    bb458__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">458 (cleanup)</td></tr><tr><td align="left">drop(_896)</td></tr></table>>];
    bb459__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">459 (cleanup)</td></tr><tr><td align="left">drop(_851)</td></tr></table>>];
    bb460__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">460 (cleanup)</td></tr><tr><td align="left">drop(_715)</td></tr></table>>];
    bb461__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">461 (cleanup)</td></tr><tr><td align="left">drop(_674)</td></tr></table>>];
    bb462__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">462 (cleanup)</td></tr><tr><td align="left">drop(_650)</td></tr></table>>];
    bb463__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">463 (cleanup)</td></tr><tr><td align="left">drop(_482)</td></tr></table>>];
    bb464__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">464 (cleanup)</td></tr><tr><td align="left">drop(_448)</td></tr></table>>];
    bb465__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">465 (cleanup)</td></tr><tr><td align="left">drop(_420)</td></tr></table>>];
    bb466__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">466 (cleanup)</td></tr><tr><td align="left">drop(_385)</td></tr></table>>];
    bb467__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">467 (cleanup)</td></tr><tr><td align="left">drop(_344)</td></tr></table>>];
    bb468__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">468 (cleanup)</td></tr><tr><td align="left">drop(_313)</td></tr></table>>];
    bb469__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">469 (cleanup)</td></tr><tr><td align="left">drop(_222)</td></tr></table>>];
    bb470__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">470 (cleanup)</td></tr><tr><td align="left">drop(_212)</td></tr></table>>];
    bb471__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">471 (cleanup)</td></tr><tr><td align="left">drop(_190)</td></tr></table>>];
    bb472__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">472 (cleanup)</td></tr><tr><td align="left">drop(_50)</td></tr></table>>];
    bb473__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">473 (cleanup)</td></tr><tr><td align="left">drop(_24)</td></tr></table>>];
    bb474__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">474 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb475__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">475</td></tr><tr><td align="left">drop(_89)</td></tr></table>>];
    bb476__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">476 (cleanup)</td></tr><tr><td align="left" balign="left">_975 = discriminant(_223)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb477__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">477 (cleanup)</td></tr><tr><td align="left" balign="left">_976 = discriminant(_213)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb478__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">478 (cleanup)</td></tr><tr><td align="left">drop(_89)</td></tr></table>>];
    bb479__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">479 (cleanup)</td></tr><tr><td align="left">switchInt(_958)</td></tr></table>>];
    bb480__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">480 (cleanup)</td></tr><tr><td align="left" balign="left">_977 = discriminant(_90)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb481__0_643 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">481 (cleanup)</td></tr><tr><td align="left" balign="left">_978 = discriminant(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_643 -> bb1__0_643 [label="return"];
    bb1__0_643 -> bb3__0_643 [label="0"];
    bb1__0_643 -> bb2__0_643 [label="otherwise"];
    bb2__0_643 -> bb4__0_643 [label="return"];
    bb3__0_643 -> bb10__0_643 [label=""];
    bb4__0_643 -> bb5__0_643 [label="return"];
    bb5__0_643 -> bb6__0_643 [label="return"];
    bb6__0_643 -> bb7__0_643 [label="return"];
    bb6__0_643 -> bb473__0_643 [label="unwind"];
    bb7__0_643 -> bb8__0_643 [label="return"];
    bb7__0_643 -> bb473__0_643 [label="unwind"];
    bb8__0_643 -> bb9__0_643 [label="return"];
    bb8__0_643 -> bb474__0_643 [label="unwind"];
    bb9__0_643 -> bb10__0_643 [label=""];
    bb10__0_643 -> bb11__0_643 [label="return"];
    bb11__0_643 -> bb12__0_643 [label="0"];
    bb11__0_643 -> bb14__0_643 [label="1"];
    bb11__0_643 -> bb13__0_643 [label="otherwise"];
    bb12__0_643 -> bb16__0_643 [label="return"];
    bb14__0_643 -> bb15__0_643 [label="return"];
    bb15__0_643 -> bb456__0_643 [label=""];
    bb16__0_643 -> bb17__0_643 [label="return"];
    bb16__0_643 -> bb474__0_643 [label="unwind"];
    bb17__0_643 -> bb18__0_643 [label="0"];
    bb17__0_643 -> bb19__0_643 [label="1"];
    bb17__0_643 -> bb13__0_643 [label="otherwise"];
    bb18__0_643 -> bb21__0_643 [label="return"];
    bb18__0_643 -> bb472__0_643 [label="unwind"];
    bb19__0_643 -> bb20__0_643 [label="return"];
    bb19__0_643 -> bb481__0_643 [label="unwind"];
    bb20__0_643 -> bb454__0_643 [label=""];
    bb21__0_643 -> bb22__0_643 [label="return"];
    bb21__0_643 -> bb472__0_643 [label="unwind"];
    bb22__0_643 -> bb23__0_643 [label="return"];
    bb22__0_643 -> bb472__0_643 [label="unwind"];
    bb23__0_643 -> bb24__0_643 [label="0"];
    bb23__0_643 -> bb25__0_643 [label="1"];
    bb23__0_643 -> bb13__0_643 [label="otherwise"];
    bb24__0_643 -> bb27__0_643 [label="return"];
    bb24__0_643 -> bb472__0_643 [label="unwind"];
    bb25__0_643 -> bb26__0_643 [label="return"];
    bb25__0_643 -> bb472__0_643 [label="unwind"];
    bb26__0_643 -> bb453__0_643 [label=""];
    bb27__0_643 -> bb28__0_643 [label="return"];
    bb27__0_643 -> bb472__0_643 [label="unwind"];
    bb28__0_643 -> bb29__0_643 [label="return"];
    bb28__0_643 -> bb472__0_643 [label="unwind"];
    bb29__0_643 -> bb30__0_643 [label="0"];
    bb29__0_643 -> bb31__0_643 [label="1"];
    bb29__0_643 -> bb13__0_643 [label="otherwise"];
    bb30__0_643 -> bb33__0_643 [label="return"];
    bb30__0_643 -> bb472__0_643 [label="unwind"];
    bb31__0_643 -> bb32__0_643 [label="return"];
    bb31__0_643 -> bb472__0_643 [label="unwind"];
    bb32__0_643 -> bb453__0_643 [label=""];
    bb33__0_643 -> bb34__0_643 [label="return"];
    bb33__0_643 -> bb472__0_643 [label="unwind"];
    bb34__0_643 -> bb35__0_643 [label="return"];
    bb34__0_643 -> bb474__0_643 [label="unwind"];
    bb35__0_643 -> bb36__0_643 [label="return"];
    bb36__0_643 -> bb37__0_643 [label="return"];
    bb36__0_643 -> bb474__0_643 [label="unwind"];
    bb37__0_643 -> bb38__0_643 [label="0"];
    bb37__0_643 -> bb39__0_643 [label="1"];
    bb37__0_643 -> bb13__0_643 [label="otherwise"];
    bb38__0_643 -> bb41__0_643 [label="return"];
    bb38__0_643 -> bb479__0_643 [label="unwind"];
    bb39__0_643 -> bb40__0_643 [label="return"];
    bb39__0_643 -> bb480__0_643 [label="unwind"];
    bb40__0_643 -> bb452__0_643 [label=""];
    bb41__0_643 -> bb42__0_643 [label="return"];
    bb41__0_643 -> bb479__0_643 [label="unwind"];
    bb42__0_643 -> bb43__0_643 [label="return"];
    bb42__0_643 -> bb479__0_643 [label="unwind"];
    bb43__0_643 -> bb44__0_643 [label="return"];
    bb43__0_643 -> bb479__0_643 [label="unwind"];
    bb44__0_643 -> bb45__0_643 [label="0"];
    bb44__0_643 -> bb46__0_643 [label="1"];
    bb44__0_643 -> bb13__0_643 [label="otherwise"];
    bb45__0_643 -> bb48__0_643 [label="return"];
    bb45__0_643 -> bb479__0_643 [label="unwind"];
    bb46__0_643 -> bb47__0_643 [label="return"];
    bb46__0_643 -> bb479__0_643 [label="unwind"];
    bb47__0_643 -> bb451__0_643 [label=""];
    bb48__0_643 -> bb49__0_643 [label="return"];
    bb48__0_643 -> bb479__0_643 [label="unwind"];
    bb49__0_643 -> bb50__0_643 [label="return"];
    bb49__0_643 -> bb479__0_643 [label="unwind"];
    bb50__0_643 -> bb51__0_643 [label="0"];
    bb50__0_643 -> bb52__0_643 [label="1"];
    bb50__0_643 -> bb13__0_643 [label="otherwise"];
    bb51__0_643 -> bb54__0_643 [label="return"];
    bb51__0_643 -> bb479__0_643 [label="unwind"];
    bb52__0_643 -> bb53__0_643 [label="return"];
    bb52__0_643 -> bb479__0_643 [label="unwind"];
    bb53__0_643 -> bb451__0_643 [label=""];
    bb54__0_643 -> bb55__0_643 [label="return"];
    bb54__0_643 -> bb479__0_643 [label="unwind"];
    bb55__0_643 -> bb56__0_643 [label="return"];
    bb55__0_643 -> bb479__0_643 [label="unwind"];
    bb56__0_643 -> bb57__0_643 [label="0"];
    bb56__0_643 -> bb58__0_643 [label="1"];
    bb56__0_643 -> bb13__0_643 [label="otherwise"];
    bb57__0_643 -> bb60__0_643 [label="return"];
    bb57__0_643 -> bb479__0_643 [label="unwind"];
    bb58__0_643 -> bb59__0_643 [label="return"];
    bb58__0_643 -> bb479__0_643 [label="unwind"];
    bb59__0_643 -> bb451__0_643 [label=""];
    bb60__0_643 -> bb61__0_643 [label="return"];
    bb60__0_643 -> bb479__0_643 [label="unwind"];
    bb61__0_643 -> bb62__0_643 [label="return"];
    bb61__0_643 -> bb479__0_643 [label="unwind"];
    bb62__0_643 -> bb63__0_643 [label="0"];
    bb62__0_643 -> bb64__0_643 [label="1"];
    bb62__0_643 -> bb13__0_643 [label="otherwise"];
    bb63__0_643 -> bb66__0_643 [label="success"];
    bb63__0_643 -> bb479__0_643 [label="unwind"];
    bb64__0_643 -> bb65__0_643 [label="return"];
    bb64__0_643 -> bb479__0_643 [label="unwind"];
    bb65__0_643 -> bb450__0_643 [label=""];
    bb66__0_643 -> bb67__0_643 [label="return"];
    bb66__0_643 -> bb479__0_643 [label="unwind"];
    bb67__0_643 -> bb68__0_643 [label="return"];
    bb67__0_643 -> bb479__0_643 [label="unwind"];
    bb68__0_643 -> bb69__0_643 [label="0"];
    bb68__0_643 -> bb70__0_643 [label="1"];
    bb68__0_643 -> bb13__0_643 [label="otherwise"];
    bb69__0_643 -> bb73__0_643 [label="0"];
    bb69__0_643 -> bb72__0_643 [label="otherwise"];
    bb70__0_643 -> bb71__0_643 [label="return"];
    bb70__0_643 -> bb479__0_643 [label="unwind"];
    bb71__0_643 -> bb449__0_643 [label=""];
    bb72__0_643 -> bb74__0_643 [label="0"];
    bb72__0_643 -> bb75__0_643 [label="1"];
    bb72__0_643 -> bb13__0_643 [label="otherwise"];
    bb73__0_643 -> bb89__0_643 [label=""];
    bb74__0_643 -> bb76__0_643 [label="return"];
    bb74__0_643 -> bb479__0_643 [label="unwind"];
    bb75__0_643 -> bb81__0_643 [label=""];
    bb76__0_643 -> bb77__0_643 [label="return"];
    bb76__0_643 -> bb479__0_643 [label="unwind"];
    bb77__0_643 -> bb78__0_643 [label="0"];
    bb77__0_643 -> bb79__0_643 [label="1"];
    bb77__0_643 -> bb13__0_643 [label="otherwise"];
    bb78__0_643 -> bb81__0_643 [label=""];
    bb79__0_643 -> bb80__0_643 [label="return"];
    bb79__0_643 -> bb479__0_643 [label="unwind"];
    bb80__0_643 -> bb448__0_643 [label=""];
    bb81__0_643 -> bb82__0_643 [label="0"];
    bb81__0_643 -> bb88__0_643 [label="otherwise"];
    bb82__0_643 -> bb83__0_643 [label="return"];
    bb82__0_643 -> bb479__0_643 [label="unwind"];
    bb83__0_643 -> bb84__0_643 [label="return"];
    bb83__0_643 -> bb479__0_643 [label="unwind"];
    bb84__0_643 -> bb85__0_643 [label="return"];
    bb84__0_643 -> bb479__0_643 [label="unwind"];
    bb85__0_643 -> bb86__0_643 [label="return"];
    bb85__0_643 -> bb471__0_643 [label="unwind"];
    bb86__0_643 -> bb87__0_643 [label="return"];
    bb86__0_643 -> bb471__0_643 [label="unwind"];
    bb87__0_643 -> bb447__0_643 [label="return"];
    bb87__0_643 -> bb479__0_643 [label="unwind"];
    bb88__0_643 -> bb89__0_643 [label=""];
    bb89__0_643 -> bb90__0_643 [label="return"];
    bb89__0_643 -> bb479__0_643 [label="unwind"];
    bb90__0_643 -> bb91__0_643 [label="return"];
    bb90__0_643 -> bb479__0_643 [label="unwind"];
    bb91__0_643 -> bb92__0_643 [label="0"];
    bb91__0_643 -> bb93__0_643 [label="1"];
    bb91__0_643 -> bb13__0_643 [label="otherwise"];
    bb92__0_643 -> bb95__0_643 [label="return"];
    bb92__0_643 -> bb470__0_643 [label="unwind"];
    bb93__0_643 -> bb94__0_643 [label="return"];
    bb93__0_643 -> bb477__0_643 [label="unwind"];
    bb94__0_643 -> bb446__0_643 [label=""];
    bb95__0_643 -> bb96__0_643 [label="return"];
    bb95__0_643 -> bb470__0_643 [label="unwind"];
    bb96__0_643 -> bb97__0_643 [label="0"];
    bb96__0_643 -> bb98__0_643 [label="1"];
    bb96__0_643 -> bb13__0_643 [label="otherwise"];
    bb97__0_643 -> bb100__0_643 [label="return"];
    bb97__0_643 -> bb469__0_643 [label="unwind"];
    bb98__0_643 -> bb99__0_643 [label="return"];
    bb98__0_643 -> bb476__0_643 [label="unwind"];
    bb99__0_643 -> bb445__0_643 [label=""];
    bb100__0_643 -> bb165__0_643 [label="0"];
    bb100__0_643 -> bb101__0_643 [label="otherwise"];
    bb101__0_643 -> bb102__0_643 [label="return"];
    bb101__0_643 -> bb469__0_643 [label="unwind"];
    bb102__0_643 -> bb103__0_643 [label="return"];
    bb102__0_643 -> bb469__0_643 [label="unwind"];
    bb103__0_643 -> bb104__0_643 [label="return"];
    bb103__0_643 -> bb469__0_643 [label="unwind"];
    bb104__0_643 -> bb105__0_643 [label="0"];
    bb104__0_643 -> bb106__0_643 [label="1"];
    bb104__0_643 -> bb13__0_643 [label="otherwise"];
    bb105__0_643 -> bb109__0_643 [label="0"];
    bb105__0_643 -> bb108__0_643 [label="otherwise"];
    bb106__0_643 -> bb107__0_643 [label="return"];
    bb106__0_643 -> bb469__0_643 [label="unwind"];
    bb107__0_643 -> bb443__0_643 [label=""];
    bb108__0_643 -> bb164__0_643 [label=""];
    bb109__0_643 -> bb110__0_643 [label="return"];
    bb109__0_643 -> bb469__0_643 [label="unwind"];
    bb110__0_643 -> bb111__0_643 [label="return"];
    bb110__0_643 -> bb469__0_643 [label="unwind"];
    bb111__0_643 -> bb112__0_643 [label="return"];
    bb111__0_643 -> bb469__0_643 [label="unwind"];
    bb112__0_643 -> bb113__0_643 [label="return"];
    bb112__0_643 -> bb469__0_643 [label="unwind"];
    bb113__0_643 -> bb114__0_643 [label="return"];
    bb113__0_643 -> bb469__0_643 [label="unwind"];
    bb114__0_643 -> bb115__0_643 [label="return"];
    bb114__0_643 -> bb469__0_643 [label="unwind"];
    bb115__0_643 -> bb116__0_643 [label="return"];
    bb115__0_643 -> bb469__0_643 [label="unwind"];
    bb116__0_643 -> bb117__0_643 [label="0"];
    bb116__0_643 -> bb118__0_643 [label="1"];
    bb116__0_643 -> bb13__0_643 [label="otherwise"];
    bb117__0_643 -> bb120__0_643 [label="return"];
    bb117__0_643 -> bb469__0_643 [label="unwind"];
    bb118__0_643 -> bb119__0_643 [label="return"];
    bb118__0_643 -> bb469__0_643 [label="unwind"];
    bb119__0_643 -> bb441__0_643 [label=""];
    bb120__0_643 -> bb121__0_643 [label="return"];
    bb120__0_643 -> bb469__0_643 [label="unwind"];
    bb121__0_643 -> bb122__0_643 [label="0"];
    bb121__0_643 -> bb123__0_643 [label="1"];
    bb121__0_643 -> bb13__0_643 [label="otherwise"];
    bb122__0_643 -> bb125__0_643 [label="return"];
    bb122__0_643 -> bb469__0_643 [label="unwind"];
    bb123__0_643 -> bb124__0_643 [label="return"];
    bb123__0_643 -> bb469__0_643 [label="unwind"];
    bb124__0_643 -> bb441__0_643 [label=""];
    bb125__0_643 -> bb126__0_643 [label="return"];
    bb125__0_643 -> bb469__0_643 [label="unwind"];
    bb126__0_643 -> bb127__0_643 [label="0"];
    bb126__0_643 -> bb128__0_643 [label="1"];
    bb126__0_643 -> bb13__0_643 [label="otherwise"];
    bb127__0_643 -> bb131__0_643 [label="0"];
    bb127__0_643 -> bb130__0_643 [label="otherwise"];
    bb128__0_643 -> bb129__0_643 [label="return"];
    bb128__0_643 -> bb469__0_643 [label="unwind"];
    bb129__0_643 -> bb440__0_643 [label=""];
    bb130__0_643 -> bb132__0_643 [label="return"];
    bb130__0_643 -> bb469__0_643 [label="unwind"];
    bb131__0_643 -> bb139__0_643 [label=""];
    bb132__0_643 -> bb133__0_643 [label="return"];
    bb132__0_643 -> bb469__0_643 [label="unwind"];
    bb133__0_643 -> bb134__0_643 [label="return"];
    bb133__0_643 -> bb469__0_643 [label="unwind"];
    bb134__0_643 -> bb135__0_643 [label="0"];
    bb134__0_643 -> bb136__0_643 [label="1"];
    bb134__0_643 -> bb13__0_643 [label="otherwise"];
    bb135__0_643 -> bb139__0_643 [label="0"];
    bb135__0_643 -> bb138__0_643 [label="otherwise"];
    bb136__0_643 -> bb137__0_643 [label="return"];
    bb136__0_643 -> bb469__0_643 [label="unwind"];
    bb137__0_643 -> bb439__0_643 [label=""];
    bb138__0_643 -> bb163__0_643 [label=""];
    bb139__0_643 -> bb140__0_643 [label="return"];
    bb139__0_643 -> bb469__0_643 [label="unwind"];
    bb140__0_643 -> bb141__0_643 [label="0"];
    bb140__0_643 -> bb149__0_643 [label="otherwise"];
    bb141__0_643 -> bb142__0_643 [label="return"];
    bb141__0_643 -> bb469__0_643 [label="unwind"];
    bb142__0_643 -> bb143__0_643 [label="return"];
    bb142__0_643 -> bb469__0_643 [label="unwind"];
    bb143__0_643 -> bb144__0_643 [label="return"];
    bb143__0_643 -> bb469__0_643 [label="unwind"];
    bb144__0_643 -> bb145__0_643 [label="return"];
    bb144__0_643 -> bb469__0_643 [label="unwind"];
    bb145__0_643 -> bb146__0_643 [label="return"];
    bb145__0_643 -> bb468__0_643 [label="unwind"];
    bb146__0_643 -> bb147__0_643 [label="return"];
    bb146__0_643 -> bb468__0_643 [label="unwind"];
    bb147__0_643 -> bb148__0_643 [label="return"];
    bb147__0_643 -> bb468__0_643 [label="unwind"];
    bb148__0_643 -> bb438__0_643 [label="return"];
    bb148__0_643 -> bb469__0_643 [label="unwind"];
    bb149__0_643 -> bb150__0_643 [label="return"];
    bb149__0_643 -> bb469__0_643 [label="unwind"];
    bb150__0_643 -> bb162__0_643 [label="0"];
    bb150__0_643 -> bb151__0_643 [label="otherwise"];
    bb151__0_643 -> bb152__0_643 [label="return"];
    bb151__0_643 -> bb469__0_643 [label="unwind"];
    bb152__0_643 -> bb153__0_643 [label="return"];
    bb152__0_643 -> bb469__0_643 [label="unwind"];
    bb153__0_643 -> bb154__0_643 [label="return"];
    bb153__0_643 -> bb469__0_643 [label="unwind"];
    bb154__0_643 -> bb155__0_643 [label="return"];
    bb154__0_643 -> bb469__0_643 [label="unwind"];
    bb155__0_643 -> bb156__0_643 [label="return"];
    bb155__0_643 -> bb469__0_643 [label="unwind"];
    bb156__0_643 -> bb157__0_643 [label="return"];
    bb156__0_643 -> bb469__0_643 [label="unwind"];
    bb157__0_643 -> bb158__0_643 [label="return"];
    bb157__0_643 -> bb469__0_643 [label="unwind"];
    bb158__0_643 -> bb159__0_643 [label="return"];
    bb158__0_643 -> bb469__0_643 [label="unwind"];
    bb159__0_643 -> bb160__0_643 [label="return"];
    bb159__0_643 -> bb467__0_643 [label="unwind"];
    bb160__0_643 -> bb161__0_643 [label="return"];
    bb160__0_643 -> bb467__0_643 [label="unwind"];
    bb161__0_643 -> bb437__0_643 [label="return"];
    bb161__0_643 -> bb469__0_643 [label="unwind"];
    bb162__0_643 -> bb163__0_643 [label=""];
    bb163__0_643 -> bb164__0_643 [label=""];
    bb164__0_643 -> bb166__0_643 [label=""];
    bb165__0_643 -> bb166__0_643 [label=""];
    bb166__0_643 -> bb167__0_643 [label="return"];
    bb166__0_643 -> bb469__0_643 [label="unwind"];
    bb167__0_643 -> bb168__0_643 [label="return"];
    bb167__0_643 -> bb469__0_643 [label="unwind"];
    bb168__0_643 -> bb175__0_643 [label="0"];
    bb168__0_643 -> bb169__0_643 [label="otherwise"];
    bb169__0_643 -> bb170__0_643 [label="return"];
    bb169__0_643 -> bb469__0_643 [label="unwind"];
    bb170__0_643 -> bb171__0_643 [label="return"];
    bb170__0_643 -> bb469__0_643 [label="unwind"];
    bb171__0_643 -> bb172__0_643 [label="return"];
    bb171__0_643 -> bb469__0_643 [label="unwind"];
    bb172__0_643 -> bb173__0_643 [label="return"];
    bb172__0_643 -> bb466__0_643 [label="unwind"];
    bb173__0_643 -> bb174__0_643 [label="return"];
    bb173__0_643 -> bb466__0_643 [label="unwind"];
    bb174__0_643 -> bb436__0_643 [label="return"];
    bb174__0_643 -> bb469__0_643 [label="unwind"];
    bb175__0_643 -> bb176__0_643 [label="success"];
    bb175__0_643 -> bb469__0_643 [label="unwind"];
    bb176__0_643 -> bb196__0_643 [label="0"];
    bb176__0_643 -> bb177__0_643 [label="otherwise"];
    bb177__0_643 -> bb178__0_643 [label="return"];
    bb177__0_643 -> bb469__0_643 [label="unwind"];
    bb178__0_643 -> bb179__0_643 [label="return"];
    bb178__0_643 -> bb469__0_643 [label="unwind"];
    bb179__0_643 -> bb186__0_643 [label="0"];
    bb179__0_643 -> bb180__0_643 [label="otherwise"];
    bb180__0_643 -> bb181__0_643 [label="return"];
    bb180__0_643 -> bb469__0_643 [label="unwind"];
    bb181__0_643 -> bb182__0_643 [label="return"];
    bb181__0_643 -> bb469__0_643 [label="unwind"];
    bb182__0_643 -> bb183__0_643 [label="return"];
    bb182__0_643 -> bb469__0_643 [label="unwind"];
    bb183__0_643 -> bb184__0_643 [label="return"];
    bb183__0_643 -> bb465__0_643 [label="unwind"];
    bb184__0_643 -> bb185__0_643 [label="return"];
    bb184__0_643 -> bb465__0_643 [label="unwind"];
    bb185__0_643 -> bb433__0_643 [label="return"];
    bb185__0_643 -> bb469__0_643 [label="unwind"];
    bb186__0_643 -> bb187__0_643 [label="return"];
    bb186__0_643 -> bb469__0_643 [label="unwind"];
    bb187__0_643 -> bb188__0_643 [label="return"];
    bb187__0_643 -> bb469__0_643 [label="unwind"];
    bb188__0_643 -> bb195__0_643 [label="0"];
    bb188__0_643 -> bb189__0_643 [label="otherwise"];
    bb189__0_643 -> bb190__0_643 [label="return"];
    bb189__0_643 -> bb469__0_643 [label="unwind"];
    bb190__0_643 -> bb191__0_643 [label="return"];
    bb190__0_643 -> bb469__0_643 [label="unwind"];
    bb191__0_643 -> bb192__0_643 [label="return"];
    bb191__0_643 -> bb469__0_643 [label="unwind"];
    bb192__0_643 -> bb193__0_643 [label="return"];
    bb192__0_643 -> bb464__0_643 [label="unwind"];
    bb193__0_643 -> bb194__0_643 [label="return"];
    bb193__0_643 -> bb464__0_643 [label="unwind"];
    bb194__0_643 -> bb432__0_643 [label="return"];
    bb194__0_643 -> bb469__0_643 [label="unwind"];
    bb195__0_643 -> bb211__0_643 [label=""];
    bb196__0_643 -> bb197__0_643 [label="return"];
    bb196__0_643 -> bb469__0_643 [label="unwind"];
    bb197__0_643 -> bb198__0_643 [label="return"];
    bb197__0_643 -> bb469__0_643 [label="unwind"];
    bb198__0_643 -> bb209__0_643 [label="0"];
    bb198__0_643 -> bb199__0_643 [label="otherwise"];
    bb199__0_643 -> bb200__0_643 [label="return"];
    bb199__0_643 -> bb469__0_643 [label="unwind"];
    bb200__0_643 -> bb201__0_643 [label="return"];
    bb200__0_643 -> bb469__0_643 [label="unwind"];
    bb201__0_643 -> bb208__0_643 [label="0"];
    bb201__0_643 -> bb202__0_643 [label="otherwise"];
    bb202__0_643 -> bb203__0_643 [label="return"];
    bb202__0_643 -> bb469__0_643 [label="unwind"];
    bb203__0_643 -> bb204__0_643 [label="return"];
    bb203__0_643 -> bb469__0_643 [label="unwind"];
    bb204__0_643 -> bb205__0_643 [label="return"];
    bb204__0_643 -> bb469__0_643 [label="unwind"];
    bb205__0_643 -> bb206__0_643 [label="return"];
    bb205__0_643 -> bb463__0_643 [label="unwind"];
    bb206__0_643 -> bb207__0_643 [label="return"];
    bb206__0_643 -> bb463__0_643 [label="unwind"];
    bb207__0_643 -> bb431__0_643 [label="return"];
    bb207__0_643 -> bb469__0_643 [label="unwind"];
    bb208__0_643 -> bb210__0_643 [label=""];
    bb209__0_643 -> bb210__0_643 [label=""];
    bb210__0_643 -> bb211__0_643 [label=""];
    bb211__0_643 -> bb212__0_643 [label="return"];
    bb211__0_643 -> bb469__0_643 [label="unwind"];
    bb212__0_643 -> bb213__0_643 [label="return"];
    bb212__0_643 -> bb469__0_643 [label="unwind"];
    bb213__0_643 -> bb214__0_643 [label="return"];
    bb213__0_643 -> bb469__0_643 [label="unwind"];
    bb214__0_643 -> bb215__0_643 [label="return"];
    bb214__0_643 -> bb469__0_643 [label="unwind"];
    bb215__0_643 -> bb216__0_643 [label="return"];
    bb215__0_643 -> bb469__0_643 [label="unwind"];
    bb216__0_643 -> bb217__0_643 [label="return"];
    bb216__0_643 -> bb469__0_643 [label="unwind"];
    bb217__0_643 -> bb218__0_643 [label="0"];
    bb217__0_643 -> bb219__0_643 [label="1"];
    bb217__0_643 -> bb13__0_643 [label="otherwise"];
    bb218__0_643 -> bb221__0_643 [label="return"];
    bb218__0_643 -> bb469__0_643 [label="unwind"];
    bb219__0_643 -> bb220__0_643 [label="return"];
    bb219__0_643 -> bb469__0_643 [label="unwind"];
    bb220__0_643 -> bb430__0_643 [label=""];
    bb221__0_643 -> bb222__0_643 [label="return"];
    bb221__0_643 -> bb469__0_643 [label="unwind"];
    bb222__0_643 -> bb223__0_643 [label="return"];
    bb222__0_643 -> bb469__0_643 [label="unwind"];
    bb223__0_643 -> bb224__0_643 [label="return"];
    bb223__0_643 -> bb469__0_643 [label="unwind"];
    bb224__0_643 -> bb225__0_643 [label="return"];
    bb224__0_643 -> bb469__0_643 [label="unwind"];
    bb225__0_643 -> bb226__0_643 [label="return"];
    bb225__0_643 -> bb469__0_643 [label="unwind"];
    bb226__0_643 -> bb227__0_643 [label="0"];
    bb226__0_643 -> bb228__0_643 [label="1"];
    bb226__0_643 -> bb13__0_643 [label="otherwise"];
    bb227__0_643 -> bb230__0_643 [label="return"];
    bb227__0_643 -> bb469__0_643 [label="unwind"];
    bb228__0_643 -> bb229__0_643 [label="return"];
    bb228__0_643 -> bb469__0_643 [label="unwind"];
    bb229__0_643 -> bb428__0_643 [label=""];
    bb230__0_643 -> bb231__0_643 [label="return"];
    bb230__0_643 -> bb469__0_643 [label="unwind"];
    bb231__0_643 -> bb232__0_643 [label="0"];
    bb231__0_643 -> bb233__0_643 [label="1"];
    bb231__0_643 -> bb13__0_643 [label="otherwise"];
    bb232__0_643 -> bb235__0_643 [label="return"];
    bb232__0_643 -> bb469__0_643 [label="unwind"];
    bb233__0_643 -> bb234__0_643 [label="return"];
    bb233__0_643 -> bb469__0_643 [label="unwind"];
    bb234__0_643 -> bb428__0_643 [label=""];
    bb235__0_643 -> bb236__0_643 [label="return"];
    bb235__0_643 -> bb469__0_643 [label="unwind"];
    bb236__0_643 -> bb237__0_643 [label="0"];
    bb236__0_643 -> bb238__0_643 [label="1"];
    bb236__0_643 -> bb13__0_643 [label="otherwise"];
    bb237__0_643 -> bb240__0_643 [label="return"];
    bb237__0_643 -> bb469__0_643 [label="unwind"];
    bb238__0_643 -> bb239__0_643 [label="return"];
    bb238__0_643 -> bb469__0_643 [label="unwind"];
    bb239__0_643 -> bb426__0_643 [label=""];
    bb240__0_643 -> bb241__0_643 [label="return"];
    bb240__0_643 -> bb469__0_643 [label="unwind"];
    bb241__0_643 -> bb242__0_643 [label="0"];
    bb241__0_643 -> bb243__0_643 [label="1"];
    bb241__0_643 -> bb13__0_643 [label="otherwise"];
    bb242__0_643 -> bb245__0_643 [label="return"];
    bb242__0_643 -> bb469__0_643 [label="unwind"];
    bb243__0_643 -> bb244__0_643 [label="return"];
    bb243__0_643 -> bb469__0_643 [label="unwind"];
    bb244__0_643 -> bb426__0_643 [label=""];
    bb245__0_643 -> bb246__0_643 [label="return"];
    bb245__0_643 -> bb469__0_643 [label="unwind"];
    bb246__0_643 -> bb247__0_643 [label="return"];
    bb246__0_643 -> bb469__0_643 [label="unwind"];
    bb247__0_643 -> bb248__0_643 [label="0"];
    bb247__0_643 -> bb249__0_643 [label="1"];
    bb247__0_643 -> bb13__0_643 [label="otherwise"];
    bb248__0_643 -> bb252__0_643 [label="0"];
    bb248__0_643 -> bb251__0_643 [label="otherwise"];
    bb249__0_643 -> bb250__0_643 [label="return"];
    bb249__0_643 -> bb469__0_643 [label="unwind"];
    bb250__0_643 -> bb425__0_643 [label=""];
    bb251__0_643 -> bb253__0_643 [label="return"];
    bb251__0_643 -> bb469__0_643 [label="unwind"];
    bb252__0_643 -> bb259__0_643 [label=""];
    bb253__0_643 -> bb254__0_643 [label="return"];
    bb253__0_643 -> bb469__0_643 [label="unwind"];
    bb254__0_643 -> bb255__0_643 [label="return"];
    bb254__0_643 -> bb469__0_643 [label="unwind"];
    bb255__0_643 -> bb256__0_643 [label="0"];
    bb255__0_643 -> bb257__0_643 [label="1"];
    bb255__0_643 -> bb13__0_643 [label="otherwise"];
    bb256__0_643 -> bb259__0_643 [label=""];
    bb257__0_643 -> bb258__0_643 [label="return"];
    bb257__0_643 -> bb469__0_643 [label="unwind"];
    bb258__0_643 -> bb424__0_643 [label=""];
    bb259__0_643 -> bb260__0_643 [label="success"];
    bb259__0_643 -> bb469__0_643 [label="unwind"];
    bb260__0_643 -> bb261__0_643 [label="return"];
    bb260__0_643 -> bb469__0_643 [label="unwind"];
    bb261__0_643 -> bb262__0_643 [label="return"];
    bb261__0_643 -> bb469__0_643 [label="unwind"];
    bb262__0_643 -> bb263__0_643 [label="0"];
    bb262__0_643 -> bb264__0_643 [label="1"];
    bb262__0_643 -> bb13__0_643 [label="otherwise"];
    bb263__0_643 -> bb266__0_643 [label="return"];
    bb263__0_643 -> bb469__0_643 [label="unwind"];
    bb264__0_643 -> bb265__0_643 [label="return"];
    bb264__0_643 -> bb469__0_643 [label="unwind"];
    bb265__0_643 -> bb423__0_643 [label=""];
    bb266__0_643 -> bb267__0_643 [label="return"];
    bb266__0_643 -> bb469__0_643 [label="unwind"];
    bb267__0_643 -> bb268__0_643 [label="return"];
    bb267__0_643 -> bb469__0_643 [label="unwind"];
    bb268__0_643 -> bb269__0_643 [label="return"];
    bb268__0_643 -> bb469__0_643 [label="unwind"];
    bb269__0_643 -> bb270__0_643 [label="return"];
    bb269__0_643 -> bb469__0_643 [label="unwind"];
    bb270__0_643 -> bb271__0_643 [label="0"];
    bb270__0_643 -> bb272__0_643 [label="1"];
    bb270__0_643 -> bb13__0_643 [label="otherwise"];
    bb271__0_643 -> bb274__0_643 [label="return"];
    bb271__0_643 -> bb469__0_643 [label="unwind"];
    bb272__0_643 -> bb273__0_643 [label="return"];
    bb272__0_643 -> bb469__0_643 [label="unwind"];
    bb273__0_643 -> bb422__0_643 [label=""];
    bb274__0_643 -> bb276__0_643 [label="0"];
    bb274__0_643 -> bb275__0_643 [label="otherwise"];
    bb275__0_643 -> bb278__0_643 [label=""];
    bb276__0_643 -> bb277__0_643 [label="return"];
    bb276__0_643 -> bb469__0_643 [label="unwind"];
    bb277__0_643 -> bb283__0_643 [label="0"];
    bb277__0_643 -> bb278__0_643 [label="otherwise"];
    bb278__0_643 -> bb279__0_643 [label="return"];
    bb278__0_643 -> bb469__0_643 [label="unwind"];
    bb279__0_643 -> bb282__0_643 [label="0"];
    bb279__0_643 -> bb280__0_643 [label="otherwise"];
    bb280__0_643 -> bb281__0_643 [label="return"];
    bb280__0_643 -> bb469__0_643 [label="unwind"];
    bb281__0_643 -> bb285__0_643 [label=""];
    bb282__0_643 -> bb284__0_643 [label=""];
    bb283__0_643 -> bb284__0_643 [label=""];
    bb284__0_643 -> bb285__0_643 [label=""];
    bb285__0_643 -> bb292__0_643 [label="0"];
    bb285__0_643 -> bb286__0_643 [label="otherwise"];
    bb286__0_643 -> bb287__0_643 [label="return"];
    bb286__0_643 -> bb469__0_643 [label="unwind"];
    bb287__0_643 -> bb288__0_643 [label="return"];
    bb287__0_643 -> bb469__0_643 [label="unwind"];
    bb288__0_643 -> bb289__0_643 [label="return"];
    bb288__0_643 -> bb469__0_643 [label="unwind"];
    bb289__0_643 -> bb290__0_643 [label="return"];
    bb289__0_643 -> bb462__0_643 [label="unwind"];
    bb290__0_643 -> bb291__0_643 [label="return"];
    bb290__0_643 -> bb462__0_643 [label="unwind"];
    bb291__0_643 -> bb420__0_643 [label="return"];
    bb291__0_643 -> bb469__0_643 [label="unwind"];
    bb292__0_643 -> bb299__0_643 [label="0"];
    bb292__0_643 -> bb293__0_643 [label="otherwise"];
    bb293__0_643 -> bb294__0_643 [label="return"];
    bb293__0_643 -> bb469__0_643 [label="unwind"];
    bb294__0_643 -> bb295__0_643 [label="return"];
    bb294__0_643 -> bb469__0_643 [label="unwind"];
    bb295__0_643 -> bb296__0_643 [label="return"];
    bb295__0_643 -> bb469__0_643 [label="unwind"];
    bb296__0_643 -> bb297__0_643 [label="return"];
    bb296__0_643 -> bb461__0_643 [label="unwind"];
    bb297__0_643 -> bb298__0_643 [label="return"];
    bb297__0_643 -> bb461__0_643 [label="unwind"];
    bb298__0_643 -> bb419__0_643 [label="return"];
    bb298__0_643 -> bb469__0_643 [label="unwind"];
    bb299__0_643 -> bb301__0_643 [label="0"];
    bb299__0_643 -> bb300__0_643 [label="otherwise"];
    bb300__0_643 -> bb311__0_643 [label="0"];
    bb300__0_643 -> bb302__0_643 [label="otherwise"];
    bb301__0_643 -> bb312__0_643 [label=""];
    bb302__0_643 -> bb309__0_643 [label="0"];
    bb302__0_643 -> bb303__0_643 [label="otherwise"];
    bb303__0_643 -> bb308__0_643 [label="0"];
    bb303__0_643 -> bb304__0_643 [label="otherwise"];
    bb304__0_643 -> bb305__0_643 [label="return"];
    bb304__0_643 -> bb469__0_643 [label="unwind"];
    bb305__0_643 -> bb307__0_643 [label="0"];
    bb305__0_643 -> bb306__0_643 [label="otherwise"];
    bb306__0_643 -> bb312__0_643 [label=""];
    bb307__0_643 -> bb310__0_643 [label=""];
    bb308__0_643 -> bb310__0_643 [label=""];
    bb309__0_643 -> bb310__0_643 [label=""];
    bb310__0_643 -> bb313__0_643 [label="return"];
    bb310__0_643 -> bb469__0_643 [label="unwind"];
    bb311__0_643 -> bb312__0_643 [label=""];
    bb312__0_643 -> bb318__0_643 [label=""];
    bb313__0_643 -> bb315__0_643 [label="0"];
    bb313__0_643 -> bb314__0_643 [label="otherwise"];
    bb314__0_643 -> bb317__0_643 [label=""];
    bb315__0_643 -> bb316__0_643 [label="return"];
    bb315__0_643 -> bb469__0_643 [label="unwind"];
    bb316__0_643 -> bb317__0_643 [label=""];
    bb317__0_643 -> bb318__0_643 [label=""];
    bb318__0_643 -> bb325__0_643 [label="0"];
    bb318__0_643 -> bb319__0_643 [label="otherwise"];
    bb319__0_643 -> bb320__0_643 [label="return"];
    bb319__0_643 -> bb469__0_643 [label="unwind"];
    bb320__0_643 -> bb321__0_643 [label="return"];
    bb320__0_643 -> bb469__0_643 [label="unwind"];
    bb321__0_643 -> bb322__0_643 [label="return"];
    bb321__0_643 -> bb469__0_643 [label="unwind"];
    bb322__0_643 -> bb323__0_643 [label="return"];
    bb322__0_643 -> bb460__0_643 [label="unwind"];
    bb323__0_643 -> bb324__0_643 [label="return"];
    bb323__0_643 -> bb460__0_643 [label="unwind"];
    bb324__0_643 -> bb417__0_643 [label="return"];
    bb324__0_643 -> bb469__0_643 [label="unwind"];
    bb325__0_643 -> bb326__0_643 [label="return"];
    bb325__0_643 -> bb469__0_643 [label="unwind"];
    bb326__0_643 -> bb328__0_643 [label="0"];
    bb326__0_643 -> bb327__0_643 [label="otherwise"];
    bb327__0_643 -> bb329__0_643 [label=""];
    bb328__0_643 -> bb329__0_643 [label=""];
    bb329__0_643 -> bb330__0_643 [label="return"];
    bb329__0_643 -> bb469__0_643 [label="unwind"];
    bb330__0_643 -> bb331__0_643 [label="return"];
    bb330__0_643 -> bb469__0_643 [label="unwind"];
    bb331__0_643 -> bb332__0_643 [label="return"];
    bb331__0_643 -> bb469__0_643 [label="unwind"];
    bb332__0_643 -> bb333__0_643 [label="return"];
    bb332__0_643 -> bb469__0_643 [label="unwind"];
    bb333__0_643 -> bb334__0_643 [label="0"];
    bb333__0_643 -> bb335__0_643 [label="1"];
    bb333__0_643 -> bb13__0_643 [label="otherwise"];
    bb334__0_643 -> bb337__0_643 [label="success"];
    bb334__0_643 -> bb469__0_643 [label="unwind"];
    bb335__0_643 -> bb336__0_643 [label="return"];
    bb335__0_643 -> bb469__0_643 [label="unwind"];
    bb336__0_643 -> bb418__0_643 [label=""];
    bb337__0_643 -> bb338__0_643 [label="return"];
    bb337__0_643 -> bb469__0_643 [label="unwind"];
    bb338__0_643 -> bb339__0_643 [label="return"];
    bb338__0_643 -> bb469__0_643 [label="unwind"];
    bb339__0_643 -> bb340__0_643 [label="return"];
    bb339__0_643 -> bb469__0_643 [label="unwind"];
    bb340__0_643 -> bb341__0_643 [label="0"];
    bb340__0_643 -> bb342__0_643 [label="1"];
    bb340__0_643 -> bb13__0_643 [label="otherwise"];
    bb341__0_643 -> bb344__0_643 [label="success"];
    bb341__0_643 -> bb469__0_643 [label="unwind"];
    bb342__0_643 -> bb343__0_643 [label="return"];
    bb342__0_643 -> bb469__0_643 [label="unwind"];
    bb343__0_643 -> bb416__0_643 [label=""];
    bb344__0_643 -> bb345__0_643 [label="return"];
    bb344__0_643 -> bb469__0_643 [label="unwind"];
    bb345__0_643 -> bb346__0_643 [label="return"];
    bb345__0_643 -> bb469__0_643 [label="unwind"];
    bb346__0_643 -> bb347__0_643 [label="0"];
    bb346__0_643 -> bb348__0_643 [label="1"];
    bb346__0_643 -> bb13__0_643 [label="otherwise"];
    bb347__0_643 -> bb350__0_643 [label="return"];
    bb347__0_643 -> bb469__0_643 [label="unwind"];
    bb348__0_643 -> bb349__0_643 [label="return"];
    bb348__0_643 -> bb469__0_643 [label="unwind"];
    bb349__0_643 -> bb416__0_643 [label=""];
    bb350__0_643 -> bb351__0_643 [label="return"];
    bb350__0_643 -> bb469__0_643 [label="unwind"];
    bb351__0_643 -> bb352__0_643 [label="0"];
    bb351__0_643 -> bb353__0_643 [label="1"];
    bb351__0_643 -> bb13__0_643 [label="otherwise"];
    bb352__0_643 -> bb355__0_643 [label="return"];
    bb352__0_643 -> bb469__0_643 [label="unwind"];
    bb353__0_643 -> bb354__0_643 [label="return"];
    bb353__0_643 -> bb469__0_643 [label="unwind"];
    bb354__0_643 -> bb415__0_643 [label=""];
    bb355__0_643 -> bb356__0_643 [label="return"];
    bb355__0_643 -> bb469__0_643 [label="unwind"];
    bb356__0_643 -> bb357__0_643 [label="0"];
    bb356__0_643 -> bb358__0_643 [label="1"];
    bb356__0_643 -> bb13__0_643 [label="otherwise"];
    bb357__0_643 -> bb360__0_643 [label="success"];
    bb357__0_643 -> bb469__0_643 [label="unwind"];
    bb358__0_643 -> bb359__0_643 [label="return"];
    bb358__0_643 -> bb469__0_643 [label="unwind"];
    bb359__0_643 -> bb415__0_643 [label=""];
    bb360__0_643 -> bb361__0_643 [label="success"];
    bb360__0_643 -> bb469__0_643 [label="unwind"];
    bb361__0_643 -> bb362__0_643 [label="return"];
    bb361__0_643 -> bb469__0_643 [label="unwind"];
    bb362__0_643 -> bb363__0_643 [label="return"];
    bb362__0_643 -> bb469__0_643 [label="unwind"];
    bb363__0_643 -> bb364__0_643 [label="return"];
    bb363__0_643 -> bb469__0_643 [label="unwind"];
    bb364__0_643 -> bb365__0_643 [label="0"];
    bb364__0_643 -> bb366__0_643 [label="1"];
    bb364__0_643 -> bb13__0_643 [label="otherwise"];
    bb365__0_643 -> bb368__0_643 [label="success"];
    bb365__0_643 -> bb469__0_643 [label="unwind"];
    bb366__0_643 -> bb367__0_643 [label="return"];
    bb366__0_643 -> bb469__0_643 [label="unwind"];
    bb367__0_643 -> bb414__0_643 [label=""];
    bb368__0_643 -> bb369__0_643 [label="return"];
    bb368__0_643 -> bb469__0_643 [label="unwind"];
    bb369__0_643 -> bb370__0_643 [label="return"];
    bb369__0_643 -> bb469__0_643 [label="unwind"];
    bb370__0_643 -> bb371__0_643 [label="return"];
    bb370__0_643 -> bb469__0_643 [label="unwind"];
    bb371__0_643 -> bb372__0_643 [label="0"];
    bb371__0_643 -> bb373__0_643 [label="1"];
    bb371__0_643 -> bb13__0_643 [label="otherwise"];
    bb372__0_643 -> bb375__0_643 [label="return"];
    bb372__0_643 -> bb469__0_643 [label="unwind"];
    bb373__0_643 -> bb374__0_643 [label="return"];
    bb373__0_643 -> bb469__0_643 [label="unwind"];
    bb374__0_643 -> bb414__0_643 [label=""];
    bb375__0_643 -> bb376__0_643 [label="return"];
    bb375__0_643 -> bb459__0_643 [label="unwind"];
    bb376__0_643 -> bb377__0_643 [label="return"];
    bb376__0_643 -> bb459__0_643 [label="unwind"];
    bb377__0_643 -> bb378__0_643 [label="return"];
    bb377__0_643 -> bb469__0_643 [label="unwind"];
    bb378__0_643 -> bb379__0_643 [label="return"];
    bb378__0_643 -> bb469__0_643 [label="unwind"];
    bb379__0_643 -> bb380__0_643 [label="return"];
    bb379__0_643 -> bb469__0_643 [label="unwind"];
    bb380__0_643 -> bb381__0_643 [label="return"];
    bb380__0_643 -> bb469__0_643 [label="unwind"];
    bb381__0_643 -> bb382__0_643 [label="0"];
    bb381__0_643 -> bb383__0_643 [label="1"];
    bb381__0_643 -> bb13__0_643 [label="otherwise"];
    bb382__0_643 -> bb385__0_643 [label="return"];
    bb382__0_643 -> bb469__0_643 [label="unwind"];
    bb383__0_643 -> bb384__0_643 [label="return"];
    bb383__0_643 -> bb469__0_643 [label="unwind"];
    bb384__0_643 -> bb413__0_643 [label=""];
    bb385__0_643 -> bb386__0_643 [label="return"];
    bb385__0_643 -> bb469__0_643 [label="unwind"];
    bb386__0_643 -> bb387__0_643 [label="0"];
    bb386__0_643 -> bb388__0_643 [label="1"];
    bb386__0_643 -> bb13__0_643 [label="otherwise"];
    bb387__0_643 -> bb391__0_643 [label="0"];
    bb387__0_643 -> bb390__0_643 [label="otherwise"];
    bb388__0_643 -> bb389__0_643 [label="return"];
    bb388__0_643 -> bb469__0_643 [label="unwind"];
    bb389__0_643 -> bb412__0_643 [label=""];
    bb390__0_643 -> bb405__0_643 [label=""];
    bb391__0_643 -> bb392__0_643 [label="return"];
    bb391__0_643 -> bb469__0_643 [label="unwind"];
    bb392__0_643 -> bb393__0_643 [label="return"];
    bb392__0_643 -> bb469__0_643 [label="unwind"];
    bb393__0_643 -> bb394__0_643 [label="return"];
    bb393__0_643 -> bb469__0_643 [label="unwind"];
    bb394__0_643 -> bb395__0_643 [label="return"];
    bb394__0_643 -> bb458__0_643 [label="unwind"];
    bb395__0_643 -> bb396__0_643 [label="return"];
    bb395__0_643 -> bb458__0_643 [label="unwind"];
    bb396__0_643 -> bb397__0_643 [label="return"];
    bb396__0_643 -> bb469__0_643 [label="unwind"];
    bb397__0_643 -> bb398__0_643 [label="return"];
    bb397__0_643 -> bb469__0_643 [label="unwind"];
    bb398__0_643 -> bb399__0_643 [label="return"];
    bb398__0_643 -> bb469__0_643 [label="unwind"];
    bb399__0_643 -> bb400__0_643 [label="return"];
    bb399__0_643 -> bb469__0_643 [label="unwind"];
    bb400__0_643 -> bb401__0_643 [label="return"];
    bb400__0_643 -> bb469__0_643 [label="unwind"];
    bb401__0_643 -> bb402__0_643 [label="return"];
    bb401__0_643 -> bb457__0_643 [label="unwind"];
    bb402__0_643 -> bb403__0_643 [label="return"];
    bb402__0_643 -> bb457__0_643 [label="unwind"];
    bb403__0_643 -> bb404__0_643 [label="return"];
    bb403__0_643 -> bb469__0_643 [label="unwind"];
    bb404__0_643 -> bb405__0_643 [label=""];
    bb405__0_643 -> bb406__0_643 [label="return"];
    bb405__0_643 -> bb469__0_643 [label="unwind"];
    bb406__0_643 -> bb407__0_643 [label="0"];
    bb406__0_643 -> bb408__0_643 [label="1"];
    bb406__0_643 -> bb13__0_643 [label="otherwise"];
    bb407__0_643 -> bb410__0_643 [label="return"];
    bb407__0_643 -> bb470__0_643 [label="unwind"];
    bb408__0_643 -> bb409__0_643 [label="return"];
    bb408__0_643 -> bb469__0_643 [label="unwind"];
    bb409__0_643 -> bb412__0_643 [label=""];
    bb410__0_643 -> bb411__0_643 [label="return"];
    bb410__0_643 -> bb479__0_643 [label="unwind"];
    bb411__0_643 -> bb456__0_643 [label=""];
    bb412__0_643 -> bb413__0_643 [label=""];
    bb413__0_643 -> bb414__0_643 [label=""];
    bb414__0_643 -> bb418__0_643 [label=""];
    bb415__0_643 -> bb418__0_643 [label=""];
    bb416__0_643 -> bb418__0_643 [label=""];
    bb417__0_643 -> bb418__0_643 [label=""];
    bb418__0_643 -> bb422__0_643 [label=""];
    bb419__0_643 -> bb421__0_643 [label=""];
    bb420__0_643 -> bb421__0_643 [label=""];
    bb421__0_643 -> bb422__0_643 [label=""];
    bb422__0_643 -> bb423__0_643 [label=""];
    bb423__0_643 -> bb424__0_643 [label=""];
    bb424__0_643 -> bb425__0_643 [label=""];
    bb425__0_643 -> bb427__0_643 [label=""];
    bb426__0_643 -> bb427__0_643 [label=""];
    bb427__0_643 -> bb429__0_643 [label=""];
    bb428__0_643 -> bb429__0_643 [label=""];
    bb429__0_643 -> bb430__0_643 [label=""];
    bb430__0_643 -> bb435__0_643 [label=""];
    bb431__0_643 -> bb434__0_643 [label=""];
    bb432__0_643 -> bb434__0_643 [label=""];
    bb433__0_643 -> bb434__0_643 [label=""];
    bb434__0_643 -> bb435__0_643 [label=""];
    bb435__0_643 -> bb444__0_643 [label=""];
    bb436__0_643 -> bb444__0_643 [label=""];
    bb437__0_643 -> bb439__0_643 [label=""];
    bb438__0_643 -> bb439__0_643 [label=""];
    bb439__0_643 -> bb440__0_643 [label=""];
    bb440__0_643 -> bb442__0_643 [label=""];
    bb441__0_643 -> bb442__0_643 [label=""];
    bb442__0_643 -> bb443__0_643 [label=""];
    bb443__0_643 -> bb444__0_643 [label=""];
    bb444__0_643 -> bb445__0_643 [label="return"];
    bb444__0_643 -> bb470__0_643 [label="unwind"];
    bb445__0_643 -> bb446__0_643 [label="return"];
    bb445__0_643 -> bb479__0_643 [label="unwind"];
    bb446__0_643 -> bb449__0_643 [label=""];
    bb447__0_643 -> bb448__0_643 [label=""];
    bb448__0_643 -> bb449__0_643 [label=""];
    bb449__0_643 -> bb450__0_643 [label=""];
    bb450__0_643 -> bb451__0_643 [label=""];
    bb451__0_643 -> bb452__0_643 [label="0"];
    bb451__0_643 -> bb475__0_643 [label="otherwise"];
    bb452__0_643 -> bb455__0_643 [label=""];
    bb453__0_643 -> bb454__0_643 [label="return"];
    bb453__0_643 -> bb474__0_643 [label="unwind"];
    bb454__0_643 -> bb455__0_643 [label=""];
    bb455__0_643 -> bb456__0_643 [label=""];
    bb457__0_643 -> bb469__0_643 [label="return"];
    bb458__0_643 -> bb469__0_643 [label="return"];
    bb459__0_643 -> bb469__0_643 [label="return"];
    bb460__0_643 -> bb469__0_643 [label="return"];
    bb461__0_643 -> bb469__0_643 [label="return"];
    bb462__0_643 -> bb469__0_643 [label="return"];
    bb463__0_643 -> bb469__0_643 [label="return"];
    bb464__0_643 -> bb469__0_643 [label="return"];
    bb465__0_643 -> bb469__0_643 [label="return"];
    bb466__0_643 -> bb469__0_643 [label="return"];
    bb467__0_643 -> bb469__0_643 [label="return"];
    bb468__0_643 -> bb469__0_643 [label="return"];
    bb469__0_643 -> bb470__0_643 [label="return"];
    bb470__0_643 -> bb479__0_643 [label="return"];
    bb471__0_643 -> bb479__0_643 [label="return"];
    bb472__0_643 -> bb474__0_643 [label="return"];
    bb473__0_643 -> bb474__0_643 [label="return"];
    bb475__0_643 -> bb452__0_643 [label="return"];
    bb475__0_643 -> bb474__0_643 [label="unwind"];
    bb476__0_643 -> bb470__0_643 [label=""];
    bb477__0_643 -> bb479__0_643 [label=""];
    bb478__0_643 -> bb474__0_643 [label="return"];
    bb479__0_643 -> bb474__0_643 [label="0"];
    bb479__0_643 -> bb478__0_643 [label="otherwise"];
    bb480__0_643 -> bb474__0_643 [label=""];
    bb481__0_643 -> bb474__0_643 [label=""];
}
