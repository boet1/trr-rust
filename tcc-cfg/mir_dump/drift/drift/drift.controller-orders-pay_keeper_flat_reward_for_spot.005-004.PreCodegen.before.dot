digraph Mir_0_551 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn pay_keeper_flat_reward_for_spot(_1: &amp;ReErased mut state::user::User, _2: std::option::Option&lt;&amp;ReErased mut state::user::User&gt;, _3: &amp;ReErased mut state::spot_market::SpotMarket, _4: u64, _5: u64) -&gt; std::result::Result&lt;u64, error::ErrorCode&gt;<br align="left"/>let _6: u64;<br align="left"/>let mut _7: isize;<br align="left"/>let _8: &amp;ReErased mut state::user::User;<br align="left"/>let _9: ();<br align="left"/>let mut _10: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _11: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _12: u128;<br align="left"/>let mut _13: u64;<br align="left"/>let mut _14: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _15: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _16: state::spot_market::SpotBalanceType;<br align="left"/>let mut _17: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _18: &amp;ReErased mut dyn [Binder(Trait(state::spot_market::SpotBalance), [])] + ReErased;<br align="left"/>let mut _19: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let mut _20: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let mut _21: &amp;ReErased mut state::user::User;<br align="left"/>let mut _22: isize;<br align="left"/>let _23: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _24: !;<br align="left"/>let mut _25: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _26: ();<br align="left"/>let _27: ();<br align="left"/>let mut _28: &amp;ReErased mut state::user::User;<br align="left"/>let mut _29: u64;<br align="left"/>let _30: ();<br align="left"/>let mut _31: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _32: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _33: &amp;ReErased mut state::user::User;<br align="left"/>let mut _34: i64;<br align="left"/>let mut _35: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _36: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _37: u64;<br align="left"/>let mut _38: isize;<br align="left"/>let _39: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _40: !;<br align="left"/>let mut _41: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _42: i64;<br align="left"/>let mut _43: isize;<br align="left"/>let _44: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _45: !;<br align="left"/>let mut _46: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _47: ();<br align="left"/>let _48: ();<br align="left"/>let mut _49: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _50: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _51: u128;<br align="left"/>let mut _52: u64;<br align="left"/>let mut _53: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _54: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _55: state::spot_market::SpotBalanceType;<br align="left"/>let mut _56: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _57: &amp;ReErased mut dyn [Binder(Trait(state::spot_market::SpotBalance), [])] + ReErased;<br align="left"/>let mut _58: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let mut _59: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let mut _60: &amp;ReErased mut state::user::User;<br align="left"/>let mut _61: isize;<br align="left"/>let _62: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _63: !;<br align="left"/>let mut _64: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _65: ();<br align="left"/>let _66: ();<br align="left"/>let mut _67: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _68: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _69: &amp;ReErased mut state::user::User;<br align="left"/>let mut _70: i64;<br align="left"/>let mut _71: i64;<br align="left"/>let mut _72: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _73: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _74: u64;<br align="left"/>let mut _75: isize;<br align="left"/>let _76: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _77: !;<br align="left"/>let mut _78: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _79: i64;<br align="left"/>let mut _80: bool;<br align="left"/>let mut _81: isize;<br align="left"/>let _82: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _83: !;<br align="left"/>let mut _84: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _85: ();<br align="left"/>let mut _86: u64;<br align="left"/>let mut _87: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _88: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>debug user =&gt; _1;<br align="left"/>debug filler =&gt; _2;<br align="left"/>debug quote_market =&gt; _3;<br align="left"/>debug filler_reward =&gt; _4;<br align="left"/>debug slot =&gt; _5;<br align="left"/>debug filler_reward =&gt; _6;<br align="left"/>debug filler =&gt; _8;<br align="left"/>debug residual =&gt; _23;<br align="left"/>debug val =&gt; _26;<br align="left"/>debug residual =&gt; _39;<br align="left"/>debug val =&gt; _42;<br align="left"/>debug residual =&gt; _44;<br align="left"/>debug val =&gt; _47;<br align="left"/>debug residual =&gt; _62;<br align="left"/>debug val =&gt; _65;<br align="left"/>debug residual =&gt; _76;<br align="left"/>debug val =&gt; _79;<br align="left"/>debug residual =&gt; _82;<br align="left"/>debug val =&gt; _85;<br align="left"/>>;
    bb0__0_551 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_6)<br/>_7 = discriminant(_2)<br/></td></tr><tr><td align="left">switchInt(move _7)</td></tr></table>>];
    bb1__0_551 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/>_8 = move ((_2 as Some).0: &amp;mut state::user::User)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>_13 = _4<br/>_12 = move _13 as u128 (IntToInt)<br/>StorageDead(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_88 = const _<br/>_15 = &amp;(*_88)<br/>_14 = &amp;(*_15)<br/>StorageLive(_17)<br/>_17 = &amp;mut (*_3)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_21 = &amp;mut (*_8)<br/></td></tr><tr><td align="left">_20 = User::get_quote_spot_position_mut(move _21)</td></tr></table>>];
    bb2__0_551 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">_19 = &amp;mut (*_20)<br/>_18 = move _19 as &amp;mut dyn state::spot_market::SpotBalance (PointerCoercion(Unsize))<br/>StorageDead(_21)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">_11 = update_spot_balances(move _12, move _14, move _17, move _18, const false)</td></tr></table>>];
    bb3__0_551 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_17)<br/>StorageDead(_14)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">_10 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _11)</td></tr></table>>];
    bb4__0_551 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>_22 = discriminant(_10)<br/></td></tr><tr><td align="left">switchInt(move _22)</td></tr></table>>];
    bb5__0_551 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_26)<br/>_26 = ((_10 as Continue).0: ())<br/>_9 = _26<br/>StorageDead(_26)<br/>StorageDead(_20)<br/>StorageDead(_15)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>_28 = &amp;mut (*_8)<br/>StorageLive(_29)<br/>_29 = _5<br/></td></tr><tr><td align="left">_27 = User::update_last_active_slot(move _28, move _29)</td></tr></table>>];
    bb6__0_551 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb7__0_551 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_23)<br/>_23 = ((_10 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_25)<br/>_25 = _23<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _25)</td></tr></table>>];
    bb8__0_551 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_23)<br/>StorageDead(_20)<br/>StorageDead(_15)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_551 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_28)<br/>StorageDead(_27)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>_33 = &amp;mut (*_8)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>_37 = _4<br/></td></tr><tr><td align="left">_36 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _37)</td></tr></table>>];
    bb10__0_551 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/></td></tr><tr><td align="left">_35 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _36)</td></tr></table>>];
    bb11__0_551 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>_38 = discriminant(_35)<br/></td></tr><tr><td align="left">switchInt(move _38)</td></tr></table>>];
    bb12__0_551 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_42)<br/>_42 = ((_35 as Continue).0: i64)<br/>_34 = _42<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">_32 = User::update_cumulative_spot_fees(move _33, move _34)</td></tr></table>>];
    bb13__0_551 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_39)<br/>_39 = ((_35 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_41)<br/>_41 = _39<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _41)</td></tr></table>>];
    bb14__0_551 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_39)<br/>StorageDead(_34)<br/>StorageDead(_33)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_551 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">_31 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _32)</td></tr></table>>];
    bb16__0_551 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>_43 = discriminant(_31)<br/></td></tr><tr><td align="left">switchInt(move _43)</td></tr></table>>];
    bb17__0_551 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>_47 = ((_31 as Continue).0: ())<br/>_30 = _47<br/>StorageDead(_47)<br/>StorageDead(_35)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>_52 = _4<br/>_51 = move _52 as u128 (IntToInt)<br/>StorageDead(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>_87 = const _<br/>_54 = &amp;(*_87)<br/>_53 = &amp;(*_54)<br/>StorageLive(_56)<br/>_56 = &amp;mut (*_3)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>_60 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_59 = User::get_quote_spot_position_mut(move _60)</td></tr></table>>];
    bb18__0_551 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_44)<br/>_44 = ((_31 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_46)<br/>_46 = _44<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _46)</td></tr></table>>];
    bb19__0_551 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_551 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">_58 = &amp;mut (*_59)<br/>_57 = move _58 as &amp;mut dyn state::spot_market::SpotBalance (PointerCoercion(Unsize))<br/>StorageDead(_60)<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">_50 = update_spot_balances(move _51, move _53, move _56, move _57, const false)</td></tr></table>>];
    bb21__0_551 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_56)<br/>StorageDead(_53)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">_49 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _50)</td></tr></table>>];
    bb22__0_551 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>_61 = discriminant(_49)<br/></td></tr><tr><td align="left">switchInt(move _61)</td></tr></table>>];
    bb23__0_551 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_65)<br/>_65 = ((_49 as Continue).0: ())<br/>_48 = _65<br/>StorageDead(_65)<br/>StorageDead(_59)<br/>StorageDead(_54)<br/>StorageDead(_49)<br/>StorageDead(_48)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>_69 = &amp;mut (*_1)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>_74 = _4<br/></td></tr><tr><td align="left">_73 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _74)</td></tr></table>>];
    bb24__0_551 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_62)<br/>_62 = ((_49 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_64)<br/>_64 = _62<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _64)</td></tr></table>>];
    bb25__0_551 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageDead(_62)<br/>StorageDead(_59)<br/>StorageDead(_54)<br/>StorageDead(_49)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_551 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/></td></tr><tr><td align="left">_72 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _73)</td></tr></table>>];
    bb27__0_551 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>_75 = discriminant(_72)<br/></td></tr><tr><td align="left">switchInt(move _75)</td></tr></table>>];
    bb28__0_551 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_79)<br/>_79 = ((_72 as Continue).0: i64)<br/>_71 = _79<br/>StorageDead(_79)<br/>_80 = Eq(_71, const i64::MIN)<br/></td></tr><tr><td align="left">assert(!move _80, &quot;attempt to negate `{}`, which would overflow&quot;, _71)</td></tr></table>>];
    bb29__0_551 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_76)<br/>_76 = ((_72 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_78)<br/>_78 = _76<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _78)</td></tr></table>>];
    bb30__0_551 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>StorageDead(_76)<br/>StorageDead(_71)<br/>StorageDead(_70)<br/>StorageDead(_69)<br/>StorageDead(_68)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_551 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">_70 = Neg(move _71)<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">_68 = User::update_cumulative_spot_fees(move _69, move _70)</td></tr></table>>];
    bb32__0_551 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_69)<br/></td></tr><tr><td align="left">_67 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _68)</td></tr></table>>];
    bb33__0_551 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>_81 = discriminant(_67)<br/></td></tr><tr><td align="left">switchInt(move _81)</td></tr></table>>];
    bb34__0_551 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_85)<br/>_85 = ((_67 as Continue).0: ())<br/>_66 = _85<br/>StorageDead(_85)<br/>StorageDead(_72)<br/>StorageDead(_67)<br/>StorageDead(_66)<br/>_6 = _4<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_551 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_82)<br/>_82 = ((_67 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_84)<br/>_84 = _82<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _84)</td></tr></table>>];
    bb36__0_551 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>StorageDead(_82)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_551 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">_6 = const 0_u64<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_551 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_86)<br/>_86 = _6<br/>_0 = std::result::Result::&lt;u64, error::ErrorCode&gt;::Ok(move _86)<br/>StorageDead(_86)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_551 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_67)<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_551 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_551 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_551 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_551 -> bb1__0_551 [label="1"];
    bb0__0_551 -> bb37__0_551 [label="otherwise"];
    bb1__0_551 -> bb2__0_551 [label="return"];
    bb2__0_551 -> bb3__0_551 [label="return"];
    bb3__0_551 -> bb4__0_551 [label="return"];
    bb4__0_551 -> bb5__0_551 [label="0"];
    bb4__0_551 -> bb7__0_551 [label="1"];
    bb4__0_551 -> bb6__0_551 [label="otherwise"];
    bb5__0_551 -> bb9__0_551 [label="return"];
    bb7__0_551 -> bb8__0_551 [label="return"];
    bb8__0_551 -> bb41__0_551 [label=""];
    bb9__0_551 -> bb10__0_551 [label="return"];
    bb10__0_551 -> bb11__0_551 [label="return"];
    bb11__0_551 -> bb12__0_551 [label="0"];
    bb11__0_551 -> bb13__0_551 [label="1"];
    bb11__0_551 -> bb6__0_551 [label="otherwise"];
    bb12__0_551 -> bb15__0_551 [label="return"];
    bb13__0_551 -> bb14__0_551 [label="return"];
    bb14__0_551 -> bb40__0_551 [label=""];
    bb15__0_551 -> bb16__0_551 [label="return"];
    bb16__0_551 -> bb17__0_551 [label="0"];
    bb16__0_551 -> bb18__0_551 [label="1"];
    bb16__0_551 -> bb6__0_551 [label="otherwise"];
    bb17__0_551 -> bb20__0_551 [label="return"];
    bb18__0_551 -> bb19__0_551 [label="return"];
    bb19__0_551 -> bb40__0_551 [label=""];
    bb20__0_551 -> bb21__0_551 [label="return"];
    bb21__0_551 -> bb22__0_551 [label="return"];
    bb22__0_551 -> bb23__0_551 [label="0"];
    bb22__0_551 -> bb24__0_551 [label="1"];
    bb22__0_551 -> bb6__0_551 [label="otherwise"];
    bb23__0_551 -> bb26__0_551 [label="return"];
    bb24__0_551 -> bb25__0_551 [label="return"];
    bb25__0_551 -> bb41__0_551 [label=""];
    bb26__0_551 -> bb27__0_551 [label="return"];
    bb27__0_551 -> bb28__0_551 [label="0"];
    bb27__0_551 -> bb29__0_551 [label="1"];
    bb27__0_551 -> bb6__0_551 [label="otherwise"];
    bb28__0_551 -> bb31__0_551 [label="success"];
    bb29__0_551 -> bb30__0_551 [label="return"];
    bb30__0_551 -> bb39__0_551 [label=""];
    bb31__0_551 -> bb32__0_551 [label="return"];
    bb32__0_551 -> bb33__0_551 [label="return"];
    bb33__0_551 -> bb34__0_551 [label="0"];
    bb33__0_551 -> bb35__0_551 [label="1"];
    bb33__0_551 -> bb6__0_551 [label="otherwise"];
    bb34__0_551 -> bb38__0_551 [label=""];
    bb35__0_551 -> bb36__0_551 [label="return"];
    bb36__0_551 -> bb39__0_551 [label=""];
    bb37__0_551 -> bb38__0_551 [label=""];
    bb38__0_551 -> bb42__0_551 [label=""];
    bb39__0_551 -> bb41__0_551 [label=""];
    bb40__0_551 -> bb41__0_551 [label=""];
    bb41__0_551 -> bb42__0_551 [label=""];
}
