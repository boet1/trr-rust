digraph Mir_0_92 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn update_pool_balances(_1: &amp;ReErased mut state::perp_market::PerpMarket, _2: &amp;ReErased mut state::spot_market::SpotMarket, _3: &amp;ReErased state::user::SpotPosition, _4: i128, _5: i64) -&gt; std::result::Result&lt;i128, error::ErrorCode&gt;<br align="left"/>let _6: i128;<br align="left"/>let mut _7: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _8: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _9: u128;<br align="left"/>let mut _10: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _11: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _12: u128;<br align="left"/>let mut _13: &amp;ReErased state::perp_market::PoolBalance;<br align="left"/>let mut _14: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _15: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _16: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _17: &amp;ReErased state::perp_market::PoolBalance;<br align="left"/>let mut _18: isize;<br align="left"/>let _19: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _20: !;<br align="left"/>let mut _21: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _22: u128;<br align="left"/>let mut _23: isize;<br align="left"/>let _24: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _25: !;<br align="left"/>let mut _26: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _27: i128;<br align="left"/>let mut _28: i128;<br align="left"/>let _29: i128;<br align="left"/>let mut _30: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _31: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _32: i128;<br align="left"/>let mut _33: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _34: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _35: i128;<br align="left"/>let mut _36: i128;<br align="left"/>let mut _37: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _38: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _39: u128;<br align="left"/>let mut _40: isize;<br align="left"/>let _41: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _42: !;<br align="left"/>let mut _43: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _44: i128;<br align="left"/>let mut _45: isize;<br align="left"/>let _46: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _47: !;<br align="left"/>let mut _48: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _49: i128;<br align="left"/>let mut _50: i128;<br align="left"/>let mut _51: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _52: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _53: u128;<br align="left"/>let mut _54: isize;<br align="left"/>let _55: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _56: !;<br align="left"/>let mut _57: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _58: i128;<br align="left"/>let mut _59: isize;<br align="left"/>let _60: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _61: !;<br align="left"/>let mut _62: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _63: i128;<br align="left"/>let _64: ();<br align="left"/>let mut _65: bool;<br align="left"/>let mut _66: i128;<br align="left"/>let mut _67: i128;<br align="left"/>let _68: i128;<br align="left"/>let mut _69: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _70: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _71: i128;<br align="left"/>let mut _72: i128;<br align="left"/>let mut _73: i128;<br align="left"/>let mut _74: isize;<br align="left"/>let _75: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _76: !;<br align="left"/>let mut _77: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _78: i128;<br align="left"/>let _79: ();<br align="left"/>let mut _80: bool;<br align="left"/>let mut _81: i128;<br align="left"/>let _82: ();<br align="left"/>let mut _83: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _84: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _85: i128;<br align="left"/>let mut _86: i128;<br align="left"/>let mut _87: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _88: &amp;ReErased mut dyn [Binder(Trait(state::spot_market::SpotBalance), [])] + ReErased;<br align="left"/>let mut _89: &amp;ReErased mut state::perp_market::PoolBalance;<br align="left"/>let mut _90: &amp;ReErased mut state::perp_market::PoolBalance;<br align="left"/>let mut _91: &amp;ReErased mut dyn [Binder(Trait(state::spot_market::SpotBalance), [])] + ReErased;<br align="left"/>let mut _92: &amp;ReErased mut state::perp_market::PoolBalance;<br align="left"/>let mut _93: &amp;ReErased mut state::perp_market::PoolBalance;<br align="left"/>let mut _94: isize;<br align="left"/>let _95: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _96: !;<br align="left"/>let mut _97: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _98: ();<br align="left"/>let _99: ();<br align="left"/>let _100: u128;<br align="left"/>let mut _101: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _102: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _103: u128;<br align="left"/>let mut _104: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _105: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _106: u128;<br align="left"/>let mut _107: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _108: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _109: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _110: isize;<br align="left"/>let _111: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _112: !;<br align="left"/>let mut _113: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _114: u128;<br align="left"/>let mut _115: u128;<br align="left"/>let mut _116: isize;<br align="left"/>let _117: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _118: !;<br align="left"/>let mut _119: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _120: u128;<br align="left"/>let mut _121: u128;<br align="left"/>let mut _122: isize;<br align="left"/>let _123: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _124: !;<br align="left"/>let mut _125: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _126: u128;<br align="left"/>let _127: u128;<br align="left"/>let mut _128: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _129: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _130: u128;<br align="left"/>let mut _131: &amp;ReErased state::perp_market::PoolBalance;<br align="left"/>let mut _132: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _133: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _134: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _135: &amp;ReErased state::perp_market::PoolBalance;<br align="left"/>let mut _136: isize;<br align="left"/>let _137: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _138: !;<br align="left"/>let mut _139: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _140: u128;<br align="left"/>let _141: ();<br align="left"/>let mut _142: bool;<br align="left"/>let mut _143: u128;<br align="left"/>let mut _144: u128;<br align="left"/>let _145: u128;<br align="left"/>let mut _146: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _147: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _148: u128;<br align="left"/>let mut _149: &amp;ReErased state::perp_market::PoolBalance;<br align="left"/>let mut _150: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _151: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _152: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _153: &amp;ReErased state::perp_market::PoolBalance;<br align="left"/>let mut _154: isize;<br align="left"/>let _155: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _156: !;<br align="left"/>let mut _157: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _158: u128;<br align="left"/>let _159: u128;<br align="left"/>let mut _160: u128;<br align="left"/>let mut _161: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _162: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _163: u128;<br align="left"/>let mut _164: u128;<br align="left"/>let mut _165: isize;<br align="left"/>let _166: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _167: !;<br align="left"/>let mut _168: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _169: u128;<br align="left"/>let mut _170: u128;<br align="left"/>let mut _171: bool;<br align="left"/>let mut _172: u128;<br align="left"/>let _173: ();<br align="left"/>let mut _174: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _175: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _176: i128;<br align="left"/>let mut _177: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _178: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _179: u128;<br align="left"/>let mut _180: isize;<br align="left"/>let _181: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _182: !;<br align="left"/>let mut _183: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _184: i128;<br align="left"/>let mut _185: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _186: &amp;ReErased mut dyn [Binder(Trait(state::spot_market::SpotBalance), [])] + ReErased;<br align="left"/>let mut _187: &amp;ReErased mut state::perp_market::PoolBalance;<br align="left"/>let mut _188: &amp;ReErased mut state::perp_market::PoolBalance;<br align="left"/>let mut _189: &amp;ReErased mut dyn [Binder(Trait(state::spot_market::SpotBalance), [])] + ReErased;<br align="left"/>let mut _190: &amp;ReErased mut state::perp_market::PoolBalance;<br align="left"/>let mut _191: &amp;ReErased mut state::perp_market::PoolBalance;<br align="left"/>let mut _192: isize;<br align="left"/>let _193: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _194: !;<br align="left"/>let mut _195: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _196: ();<br align="left"/>let _197: u128;<br align="left"/>let mut _198: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _199: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _200: u128;<br align="left"/>let mut _201: &amp;ReErased state::perp_market::PoolBalance;<br align="left"/>let mut _202: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _203: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _204: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _205: &amp;ReErased state::perp_market::PoolBalance;<br align="left"/>let mut _206: isize;<br align="left"/>let _207: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _208: !;<br align="left"/>let mut _209: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _210: u128;<br align="left"/>let _211: i128;<br align="left"/>let mut _212: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _213: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _214: i128;<br align="left"/>let mut _215: i128;<br align="left"/>let mut _216: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _217: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _218: u128;<br align="left"/>let mut _219: isize;<br align="left"/>let _220: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _221: !;<br align="left"/>let mut _222: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _223: i128;<br align="left"/>let mut _224: isize;<br align="left"/>let _225: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _226: !;<br align="left"/>let mut _227: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _228: i128;<br align="left"/>let _229: ();<br align="left"/>let mut _230: bool;<br align="left"/>let mut _231: i64;<br align="left"/>let mut _232: i64;<br align="left"/>let _233: ();<br align="left"/>let mut _234: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _235: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _236: bool;<br align="left"/>let mut _237: i64;<br align="left"/>let mut _238: i64;<br align="left"/>let mut _239: bool;<br align="left"/>let mut _240: i64;<br align="left"/>let mut _241: i64;<br align="left"/>let mut _242: ();<br align="left"/>let _243: error::ErrorCode;<br align="left"/>let _244: ();<br align="left"/>let mut _245: &amp;ReErased str;<br align="left"/>let _246: &amp;ReErased str;<br align="left"/>let mut _247: &amp;ReErased std::string::String;<br align="left"/>let _248: &amp;ReErased std::string::String;<br align="left"/>let _249: std::string::String;<br align="left"/>let _250: std::string::String;<br align="left"/>let mut _251: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _252: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _253: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _254: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _255: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _256: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _257: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _258: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _259: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _260: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _261: &amp;ReErased error::ErrorCode;<br align="left"/>let _262: &amp;ReErased error::ErrorCode;<br align="left"/>let _263: ();<br align="left"/>let mut _264: &amp;ReErased str;<br align="left"/>let _265: &amp;ReErased str;<br align="left"/>let mut _266: &amp;ReErased std::string::String;<br align="left"/>let _267: &amp;ReErased std::string::String;<br align="left"/>let _268: std::string::String;<br align="left"/>let _269: std::string::String;<br align="left"/>let mut _270: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _271: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _272: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _273: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _274: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _275: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _276: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _277: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _278: [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let mut _279: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _280: &amp;ReErased i64;<br align="left"/>let _281: &amp;ReErased i64;<br align="left"/>let mut _282: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _283: &amp;ReErased i64;<br align="left"/>let _284: &amp;ReErased i64;<br align="left"/>let mut _285: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _286: &amp;ReErased i64;<br align="left"/>let _287: &amp;ReErased i64;<br align="left"/>let mut _288: error::ErrorCode;<br align="left"/>let mut _289: isize;<br align="left"/>let _290: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _291: !;<br align="left"/>let mut _292: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _293: ();<br align="left"/>let _294: i128;<br align="left"/>let mut _295: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _296: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _297: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _298: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _299: u128;<br align="left"/>let mut _300: i128;<br align="left"/>let mut _301: isize;<br align="left"/>let _302: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _303: !;<br align="left"/>let mut _304: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _305: i128;<br align="left"/>let _306: ();<br align="left"/>let mut _307: std::cmp::Ordering;<br align="left"/>let mut _308: &amp;ReErased i128;<br align="left"/>let mut _309: &amp;ReErased i128;<br align="left"/>let _310: &amp;ReErased i128;<br align="left"/>let _311: i128;<br align="left"/>let mut _312: i8;<br align="left"/>let _313: ();<br align="left"/>let mut _314: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _315: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _316: u128;<br align="left"/>let mut _317: i128;<br align="left"/>let mut _318: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _319: &amp;ReErased mut dyn [Binder(Trait(state::spot_market::SpotBalance), [])] + ReErased;<br align="left"/>let mut _320: &amp;ReErased mut state::perp_market::PoolBalance;<br align="left"/>let mut _321: &amp;ReErased mut state::perp_market::PoolBalance;<br align="left"/>let mut _322: isize;<br align="left"/>let _323: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _324: !;<br align="left"/>let mut _325: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _326: ();<br align="left"/>let mut _327: u128;<br align="left"/>let mut _328: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _329: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _330: u128;<br align="left"/>let mut _331: u128;<br align="left"/>let mut _332: i128;<br align="left"/>let mut _333: isize;<br align="left"/>let _334: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _335: !;<br align="left"/>let mut _336: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _337: u128;<br align="left"/>let _338: ();<br align="left"/>let mut _339: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _340: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _341: u128;<br align="left"/>let mut _342: i128;<br align="left"/>let mut _343: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _344: &amp;ReErased mut dyn [Binder(Trait(state::spot_market::SpotBalance), [])] + ReErased;<br align="left"/>let mut _345: &amp;ReErased mut state::perp_market::PoolBalance;<br align="left"/>let mut _346: &amp;ReErased mut state::perp_market::PoolBalance;<br align="left"/>let mut _347: isize;<br align="left"/>let _348: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _349: !;<br align="left"/>let mut _350: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _351: ();<br align="left"/>let mut _352: bool;<br align="left"/>let mut _353: i128;<br align="left"/>let mut _354: i128;<br align="left"/>let mut _355: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _356: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _357: i128;<br align="left"/>let mut _358: i128;<br align="left"/>let mut _359: isize;<br align="left"/>let _360: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _361: !;<br align="left"/>let mut _362: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _363: i128;<br align="left"/>let mut _364: i64;<br align="left"/>let mut _365: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _366: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _367: i64;<br align="left"/>let mut _368: i64;<br align="left"/>let mut _369: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _370: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _371: i128;<br align="left"/>let mut _372: isize;<br align="left"/>let _373: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _374: !;<br align="left"/>let mut _375: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _376: i64;<br align="left"/>let mut _377: isize;<br align="left"/>let _378: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _379: !;<br align="left"/>let mut _380: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _381: i64;<br align="left"/>let mut _382: i64;<br align="left"/>let _383: u128;<br align="left"/>let mut _384: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _385: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _386: u128;<br align="left"/>let mut _387: &amp;ReErased state::perp_market::PoolBalance;<br align="left"/>let mut _388: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _389: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _390: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _391: &amp;ReErased state::perp_market::PoolBalance;<br align="left"/>let mut _392: isize;<br align="left"/>let _393: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _394: !;<br align="left"/>let mut _395: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _396: u128;<br align="left"/>let _397: i128;<br align="left"/>let mut _398: bool;<br align="left"/>let mut _399: i128;<br align="left"/>let mut _400: i128;<br align="left"/>let mut _401: i128;<br align="left"/>let mut _402: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _403: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _404: u128;<br align="left"/>let mut _405: isize;<br align="left"/>let _406: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _407: !;<br align="left"/>let mut _408: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _409: i128;<br align="left"/>let _410: i128;<br align="left"/>let mut _411: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _412: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _413: &amp;ReErased state::user::SpotPosition;<br align="left"/>let mut _414: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _415: isize;<br align="left"/>let _416: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _417: !;<br align="left"/>let mut _418: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _419: i128;<br align="left"/>let _420: i128;<br align="left"/>let mut _421: i128;<br align="left"/>let mut _422: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _423: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _424: u128;<br align="left"/>let mut _425: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _426: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _427: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _428: i128;<br align="left"/>let mut _429: isize;<br align="left"/>let _430: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _431: !;<br align="left"/>let mut _432: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _433: u128;<br align="left"/>let mut _434: isize;<br align="left"/>let _435: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _436: !;<br align="left"/>let mut _437: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _438: i128;<br align="left"/>let mut _439: bool;<br align="left"/>let mut _440: i128;<br align="left"/>let mut _441: i128;<br align="left"/>let _442: i128;<br align="left"/>let mut _443: bool;<br align="left"/>let mut _444: i128;<br align="left"/>let mut _445: bool;<br align="left"/>let mut _446: i128;<br align="left"/>let _447: i128;<br align="left"/>let mut _448: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _449: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _450: i128;<br align="left"/>let mut _451: i128;<br align="left"/>let mut _452: isize;<br align="left"/>let _453: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _454: !;<br align="left"/>let mut _455: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _456: i128;<br align="left"/>let _457: ();<br align="left"/>let mut _458: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _459: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _460: u128;<br align="left"/>let mut _461: i128;<br align="left"/>let mut _462: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _463: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _464: state::spot_market::SpotBalanceType;<br align="left"/>let mut _465: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _466: &amp;ReErased mut dyn [Binder(Trait(state::spot_market::SpotBalance), [])] + ReErased;<br align="left"/>let mut _467: &amp;ReErased mut state::perp_market::PoolBalance;<br align="left"/>let mut _468: &amp;ReErased mut state::perp_market::PoolBalance;<br align="left"/>let mut _469: isize;<br align="left"/>let _470: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _471: !;<br align="left"/>let mut _472: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _473: ();<br align="left"/>let _474: i128;<br align="left"/>let mut _475: i128;<br align="left"/>let mut _476: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _477: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _478: i128;<br align="left"/>let mut _479: i128;<br align="left"/>let mut _480: isize;<br align="left"/>let _481: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _482: !;<br align="left"/>let mut _483: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _484: i128;<br align="left"/>let mut _485: bool;<br align="left"/>let _486: ();<br align="left"/>let mut _487: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _488: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _489: u128;<br align="left"/>let mut _490: i128;<br align="left"/>let mut _491: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _492: bool;<br align="left"/>let mut _493: i128;<br align="left"/>let _494: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _495: state::spot_market::SpotBalanceType;<br align="left"/>let _496: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _497: state::spot_market::SpotBalanceType;<br align="left"/>let mut _498: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _499: &amp;ReErased mut dyn [Binder(Trait(state::spot_market::SpotBalance), [])] + ReErased;<br align="left"/>let mut _500: &amp;ReErased mut state::perp_market::PoolBalance;<br align="left"/>let mut _501: &amp;ReErased mut state::perp_market::PoolBalance;<br align="left"/>let mut _502: isize;<br align="left"/>let _503: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _504: !;<br align="left"/>let mut _505: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _506: ();<br align="left"/>let _507: i64;<br align="left"/>let mut _508: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _509: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _510: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _511: isize;<br align="left"/>let _512: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _513: !;<br align="left"/>let mut _514: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _515: i64;<br align="left"/>let mut _516: i128;<br align="left"/>let mut _517: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _518: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _519: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _520: &amp;ReErased i128;<br align="left"/>let mut _521: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _522: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>debug market =&gt; _1;<br align="left"/>debug spot_market =&gt; _2;<br align="left"/>debug user_quote_position =&gt; _3;<br align="left"/>debug user_unsettled_pnl =&gt; _4;<br align="left"/>debug now =&gt; _5;<br align="left"/>debug amm_fee_pool_token_amount =&gt; _6;<br align="left"/>debug residual =&gt; _19;<br align="left"/>debug val =&gt; _22;<br align="left"/>debug residual =&gt; _24;<br align="left"/>debug val =&gt; _27;<br align="left"/>debug fraction_for_amm =&gt; _28;<br align="left"/>debug amm_target_max_fee_pool_token_amount =&gt; _29;<br align="left"/>debug residual =&gt; _41;<br align="left"/>debug val =&gt; _44;<br align="left"/>debug residual =&gt; _46;<br align="left"/>debug val =&gt; _49;<br align="left"/>debug residual =&gt; _55;<br align="left"/>debug val =&gt; _58;<br align="left"/>debug residual =&gt; _60;<br align="left"/>debug val =&gt; _63;<br align="left"/>debug pnl_pool_addition =&gt; _68;<br align="left"/>debug residual =&gt; _75;<br align="left"/>debug val =&gt; _78;<br align="left"/>debug residual =&gt; _95;<br align="left"/>debug val =&gt; _98;<br align="left"/>debug amm_target_min_fee_pool_token_amount =&gt; _100;<br align="left"/>debug residual =&gt; _111;<br align="left"/>debug val =&gt; _114;<br align="left"/>debug residual =&gt; _117;<br align="left"/>debug val =&gt; _120;<br align="left"/>debug residual =&gt; _123;<br align="left"/>debug val =&gt; _126;<br align="left"/>debug amm_fee_pool_token_amount =&gt; _127;<br align="left"/>debug residual =&gt; _137;<br align="left"/>debug val =&gt; _140;<br align="left"/>debug pnl_pool_token_amount =&gt; _145;<br align="left"/>debug residual =&gt; _155;<br align="left"/>debug val =&gt; _158;<br align="left"/>debug pnl_pool_removal =&gt; _159;<br align="left"/>debug residual =&gt; _166;<br align="left"/>debug val =&gt; _169;<br align="left"/>debug residual =&gt; _181;<br align="left"/>debug val =&gt; _184;<br align="left"/>debug residual =&gt; _193;<br align="left"/>debug val =&gt; _196;<br align="left"/>debug amm_fee_pool_token_amount_after =&gt; _197;<br align="left"/>debug residual =&gt; _207;<br align="left"/>debug val =&gt; _210;<br align="left"/>debug terminal_state_surplus =&gt; _211;<br align="left"/>debug residual =&gt; _220;<br align="left"/>debug val =&gt; _223;<br align="left"/>debug residual =&gt; _225;<br align="left"/>debug val =&gt; _228;<br align="left"/>debug error_code =&gt; _243;<br align="left"/>debug res =&gt; _250;<br align="left"/>debug res =&gt; _269;<br align="left"/>debug residual =&gt; _290;<br align="left"/>debug val =&gt; _293;<br align="left"/>debug revenue_pool_transfer =&gt; _294;<br align="left"/>debug residual =&gt; _302;<br align="left"/>debug val =&gt; _305;<br align="left"/>debug residual =&gt; _323;<br align="left"/>debug val =&gt; _326;<br align="left"/>debug residual =&gt; _334;<br align="left"/>debug val =&gt; _337;<br align="left"/>debug residual =&gt; _348;<br align="left"/>debug val =&gt; _351;<br align="left"/>debug residual =&gt; _360;<br align="left"/>debug val =&gt; _363;<br align="left"/>debug residual =&gt; _373;<br align="left"/>debug val =&gt; _376;<br align="left"/>debug residual =&gt; _378;<br align="left"/>debug val =&gt; _381;<br align="left"/>debug pnl_pool_token_amount =&gt; _383;<br align="left"/>debug residual =&gt; _393;<br align="left"/>debug val =&gt; _396;<br align="left"/>debug pnl_to_settle_with_user =&gt; _397;<br align="left"/>debug residual =&gt; _406;<br align="left"/>debug val =&gt; _409;<br align="left"/>debug token_amount =&gt; _410;<br align="left"/>debug residual =&gt; _416;<br align="left"/>debug val =&gt; _419;<br align="left"/>debug max_withdraw_amount =&gt; _420;<br align="left"/>debug residual =&gt; _430;<br align="left"/>debug val =&gt; _433;<br align="left"/>debug residual =&gt; _435;<br align="left"/>debug val =&gt; _438;<br align="left"/>debug pnl_fraction_for_amm =&gt; _442;<br align="left"/>debug pnl_fraction_for_amm =&gt; _447;<br align="left"/>debug residual =&gt; _453;<br align="left"/>debug val =&gt; _456;<br align="left"/>debug residual =&gt; _470;<br align="left"/>debug val =&gt; _473;<br align="left"/>debug pnl_to_settle_with_market =&gt; _474;<br align="left"/>debug residual =&gt; _481;<br align="left"/>debug val =&gt; _484;<br align="left"/>debug residual =&gt; _503;<br align="left"/>debug val =&gt; _506;<br align="left"/>debug _depositors_claim =&gt; _507;<br align="left"/>debug residual =&gt; _512;<br align="left"/>debug val =&gt; _515;<br align="left"/>>;
    bb0__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>_13 = &amp;(((*_1).1: state::perp_market::AMM).4: state::perp_market::PoolBalance)<br/></td></tr><tr><td align="left">_12 = &lt;PoolBalance as SpotBalance&gt;::balance(move _13)</td></tr></table>>];
    bb1__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageLive(_14)<br/>_14 = &amp;(*_2)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_17 = &amp;(((*_1).1: state::perp_market::AMM).4: state::perp_market::PoolBalance)<br/></td></tr><tr><td align="left">_16 = &lt;PoolBalance as SpotBalance&gt;::balance_type(move _17)</td></tr></table>>];
    bb2__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">_15 = &amp;(*_16)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">_11 = get_token_amount(move _12, move _14, move _15)</td></tr></table>>];
    bb3__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">_10 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _11)</td></tr></table>>];
    bb4__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>_18 = discriminant(_10)<br/></td></tr><tr><td align="left">switchInt(move _18)</td></tr></table>>];
    bb5__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_22)<br/>_22 = ((_10 as Continue).0: u128)<br/>_9 = _22<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">_8 = &lt;u128 as Cast&gt;::cast::&lt;i128&gt;(move _9)</td></tr></table>>];
    bb6__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb7__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_19)<br/>_19 = ((_10 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_21)<br/>_21 = _19<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _21)</td></tr></table>>];
    bb8__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_19)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _8)</td></tr></table>>];
    bb10__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_23 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _23)</td></tr></table>>];
    bb11__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_27)<br/>_27 = ((_7 as Continue).0: i128)<br/>_6 = _27<br/>StorageDead(_27)<br/>StorageDead(_16)<br/>StorageDead(_10)<br/>StorageDead(_7)<br/>StorageLive(_28)<br/>_28 = const 100_i128<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>_35 = (((*_1).1: state::perp_market::AMM).31: i128)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>_39 = (((*_1).1: state::perp_market::AMM).33: u128)<br/></td></tr><tr><td align="left">_38 = &lt;u128 as Cast&gt;::cast::&lt;i128&gt;(move _39)</td></tr></table>>];
    bb12__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_24)<br/>_24 = ((_7 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_26)<br/>_26 = _24<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _26)</td></tr></table>>];
    bb13__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/></td></tr><tr><td align="left">_37 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _38)</td></tr></table>>];
    bb15__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>_40 = discriminant(_37)<br/></td></tr><tr><td align="left">switchInt(move _40)</td></tr></table>>];
    bb16__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_44)<br/>_44 = ((_37 as Continue).0: i128)<br/>_36 = _44<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">_34 = &lt;i128 as SafeMath&gt;::safe_add(move _35, move _36)</td></tr></table>>];
    bb17__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_41)<br/>_41 = ((_37 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_43)<br/>_43 = _41<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _43)</td></tr></table>>];
    bb18__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_41)<br/>StorageDead(_36)<br/>StorageDead(_35)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">_33 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _34)</td></tr></table>>];
    bb20__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>_45 = discriminant(_33)<br/></td></tr><tr><td align="left">switchInt(move _45)</td></tr></table>>];
    bb21__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_49)<br/>_49 = ((_33 as Continue).0: i128)<br/>_32 = _49<br/>StorageDead(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>_53 = (((*_1).1: state::perp_market::AMM).32: u128)<br/></td></tr><tr><td align="left">_52 = &lt;u128 as Cast&gt;::cast::&lt;i128&gt;(move _53)</td></tr></table>>];
    bb22__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_46)<br/>_46 = ((_33 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_48)<br/>_48 = _46<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _48)</td></tr></table>>];
    bb23__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/></td></tr><tr><td align="left">_51 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _52)</td></tr></table>>];
    bb25__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>_54 = discriminant(_51)<br/></td></tr><tr><td align="left">switchInt(move _54)</td></tr></table>>];
    bb26__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_58)<br/>_58 = ((_51 as Continue).0: i128)<br/>_50 = _58<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">_31 = &lt;i128 as SafeMath&gt;::safe_sub(move _32, move _50)</td></tr></table>>];
    bb27__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_55)<br/>_55 = ((_51 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_57)<br/>_57 = _55<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _57)</td></tr></table>>];
    bb28__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_55)<br/>StorageDead(_50)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">_30 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _31)</td></tr></table>>];
    bb30__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>_59 = discriminant(_30)<br/></td></tr><tr><td align="left">switchInt(move _59)</td></tr></table>>];
    bb31__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_63)<br/>_63 = ((_30 as Continue).0: i128)<br/>_29 = _63<br/>StorageDead(_63)<br/>StorageDead(_51)<br/>StorageDead(_37)<br/>StorageDead(_33)<br/>StorageDead(_30)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>_66 = _29<br/>StorageLive(_67)<br/>_67 = _6<br/>_65 = Le(move _66, move _67)<br/></td></tr><tr><td align="left">switchInt(move _65)</td></tr></table>>];
    bb32__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_60)<br/>_60 = ((_30 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_62)<br/>_62 = _60<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _62)</td></tr></table>>];
    bb33__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>StorageDead(_66)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>_72 = _29<br/></td></tr><tr><td align="left">_71 = std::cmp::max::&lt;i128&gt;(const 0_i128, move _72)</td></tr></table>>];
    bb35__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>StorageDead(_66)<br/>_64 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageLive(_73)<br/>_73 = _6<br/></td></tr><tr><td align="left">_70 = &lt;i128 as SafeMath&gt;::safe_sub(move _71, move _73)</td></tr></table>>];
    bb37__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">_69 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _70)</td></tr></table>>];
    bb38__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>_74 = discriminant(_69)<br/></td></tr><tr><td align="left">switchInt(move _74)</td></tr></table>>];
    bb39__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_78)<br/>_78 = ((_69 as Continue).0: i128)<br/>_68 = _78<br/>StorageDead(_78)<br/>StorageDead(_69)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>_81 = _68<br/>_80 = Lt(move _81, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _80)</td></tr></table>>];
    bb40__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageLive(_75)<br/>_75 = ((_69 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_77)<br/>_77 = _75<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _77)</td></tr></table>>];
    bb41__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>StorageDead(_75)<br/>StorageDead(_69)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>_86 = _68<br/></td></tr><tr><td align="left">_85 = core::num::&lt;impl i128&gt;::abs(move _86)</td></tr></table>>];
    bb43__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>_79 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>StorageLive(_87)<br/>_87 = &amp;mut (*_2)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>_90 = &amp;mut (((*_1).1: state::perp_market::AMM).4: state::perp_market::PoolBalance)<br/>_89 = &amp;mut (*_90)<br/>_88 = move _89 as &amp;mut dyn state::spot_market::SpotBalance (PointerCoercion(Unsize))<br/>StorageDead(_89)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>_93 = &amp;mut ((*_1).2: state::perp_market::PoolBalance)<br/>_92 = &amp;mut (*_93)<br/>_91 = move _92 as &amp;mut dyn state::spot_market::SpotBalance (PointerCoercion(Unsize))<br/>StorageDead(_92)<br/></td></tr><tr><td align="left">_84 = transfer_spot_balances(move _85, move _87, move _88, move _91)</td></tr></table>>];
    bb45__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/>StorageDead(_88)<br/>StorageDead(_87)<br/>StorageDead(_85)<br/></td></tr><tr><td align="left">_83 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _84)</td></tr></table>>];
    bb46__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>_94 = discriminant(_83)<br/></td></tr><tr><td align="left">switchInt(move _94)</td></tr></table>>];
    bb47__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageLive(_98)<br/>_98 = ((_83 as Continue).0: ())<br/>_82 = _98<br/>StorageDead(_98)<br/>StorageDead(_93)<br/>StorageDead(_90)<br/>StorageDead(_83)<br/>StorageDead(_82)<br/>_79 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageLive(_95)<br/>_95 = ((_83 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_97)<br/>_97 = _95<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _97)</td></tr></table>>];
    bb49__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>StorageDead(_95)<br/>StorageDead(_93)<br/>StorageDead(_90)<br/>StorageDead(_83)<br/>StorageDead(_82)<br/>StorageDead(_80)<br/>StorageDead(_79)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>StorageDead(_79)<br/>_28 = const 0_i128<br/>_64 = const ()<br/>StorageDead(_68)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb51__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageDead(_64)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>_109 = &amp;(*_1)<br/></td></tr><tr><td align="left">_108 = get_total_fee_lower_bound(move _109)</td></tr></table>>];
    bb52__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/></td></tr><tr><td align="left">_107 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _108)</td></tr></table>>];
    bb53__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/>_110 = discriminant(_107)<br/></td></tr><tr><td align="left">switchInt(move _110)</td></tr></table>>];
    bb54__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageLive(_114)<br/>_114 = ((_107 as Continue).0: u128)<br/>_106 = _114<br/>StorageDead(_114)<br/>StorageLive(_115)<br/>_115 = (((*_1).1: state::perp_market::AMM).33: u128)<br/></td></tr><tr><td align="left">_105 = &lt;u128 as SafeMath&gt;::safe_add(move _106, move _115)</td></tr></table>>];
    bb55__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageLive(_111)<br/>_111 = ((_107 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_113)<br/>_113 = _111<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _113)</td></tr></table>>];
    bb56__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_113)<br/>StorageDead(_111)<br/>StorageDead(_106)<br/>StorageDead(_105)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb57__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_115)<br/>StorageDead(_106)<br/></td></tr><tr><td align="left">_104 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _105)</td></tr></table>>];
    bb58__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/>_116 = discriminant(_104)<br/></td></tr><tr><td align="left">switchInt(move _116)</td></tr></table>>];
    bb59__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageLive(_120)<br/>_120 = ((_104 as Continue).0: u128)<br/>_103 = _120<br/>StorageDead(_120)<br/>StorageLive(_121)<br/>_121 = (((*_1).1: state::perp_market::AMM).32: u128)<br/></td></tr><tr><td align="left">_102 = &lt;u128 as SafeMath&gt;::safe_sub(move _103, move _121)</td></tr></table>>];
    bb60__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageLive(_117)<br/>_117 = ((_104 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_119)<br/>_119 = _117<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _119)</td></tr></table>>];
    bb61__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/>StorageDead(_117)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_121)<br/>StorageDead(_103)<br/></td></tr><tr><td align="left">_101 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _102)</td></tr></table>>];
    bb63__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>_122 = discriminant(_101)<br/></td></tr><tr><td align="left">switchInt(move _122)</td></tr></table>>];
    bb64__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageLive(_126)<br/>_126 = ((_101 as Continue).0: u128)<br/>_100 = _126<br/>StorageDead(_126)<br/>StorageDead(_107)<br/>StorageDead(_104)<br/>StorageDead(_101)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>_131 = &amp;(((*_1).1: state::perp_market::AMM).4: state::perp_market::PoolBalance)<br/></td></tr><tr><td align="left">_130 = &lt;PoolBalance as SpotBalance&gt;::balance(move _131)</td></tr></table>>];
    bb65__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageLive(_123)<br/>_123 = ((_101 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_125)<br/>_125 = _123<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _125)</td></tr></table>>];
    bb66__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/>StorageDead(_123)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb67__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_131)<br/>StorageLive(_132)<br/>_132 = &amp;(*_2)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>_135 = &amp;(((*_1).1: state::perp_market::AMM).4: state::perp_market::PoolBalance)<br/></td></tr><tr><td align="left">_134 = &lt;PoolBalance as SpotBalance&gt;::balance_type(move _135)</td></tr></table>>];
    bb68__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">_133 = &amp;(*_134)<br/>StorageDead(_135)<br/></td></tr><tr><td align="left">_129 = get_token_amount(move _130, move _132, move _133)</td></tr></table>>];
    bb69__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/>StorageDead(_132)<br/>StorageDead(_130)<br/></td></tr><tr><td align="left">_128 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _129)</td></tr></table>>];
    bb70__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_129)<br/>_136 = discriminant(_128)<br/></td></tr><tr><td align="left">switchInt(move _136)</td></tr></table>>];
    bb71__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageLive(_140)<br/>_140 = ((_128 as Continue).0: u128)<br/>_127 = _140<br/>StorageDead(_140)<br/>StorageDead(_134)<br/>StorageDead(_128)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>_143 = _127<br/>StorageLive(_144)<br/>_144 = _100<br/>_142 = Lt(move _143, move _144)<br/></td></tr><tr><td align="left">switchInt(move _142)</td></tr></table>>];
    bb72__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageLive(_137)<br/>_137 = ((_128 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_139)<br/>_139 = _137<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _139)</td></tr></table>>];
    bb73__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_139)<br/>StorageDead(_137)<br/>StorageDead(_134)<br/>StorageDead(_128)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb74__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_144)<br/>StorageDead(_143)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>_149 = &amp;((*_1).2: state::perp_market::PoolBalance)<br/></td></tr><tr><td align="left">_148 = &lt;PoolBalance as SpotBalance&gt;::balance(move _149)</td></tr></table>>];
    bb75__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_144)<br/>StorageDead(_143)<br/>_141 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb76__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_149)<br/>StorageLive(_150)<br/>_150 = &amp;(*_2)<br/>StorageLive(_151)<br/>StorageLive(_152)<br/>StorageLive(_153)<br/>_153 = &amp;((*_1).2: state::perp_market::PoolBalance)<br/></td></tr><tr><td align="left">_152 = &lt;PoolBalance as SpotBalance&gt;::balance_type(move _153)</td></tr></table>>];
    bb77__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">_151 = &amp;(*_152)<br/>StorageDead(_153)<br/></td></tr><tr><td align="left">_147 = get_token_amount(move _148, move _150, move _151)</td></tr></table>>];
    bb78__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_151)<br/>StorageDead(_150)<br/>StorageDead(_148)<br/></td></tr><tr><td align="left">_146 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _147)</td></tr></table>>];
    bb79__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_147)<br/>_154 = discriminant(_146)<br/></td></tr><tr><td align="left">switchInt(move _154)</td></tr></table>>];
    bb80__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageLive(_158)<br/>_158 = ((_146 as Continue).0: u128)<br/>_145 = _158<br/>StorageDead(_158)<br/>StorageDead(_152)<br/>StorageDead(_146)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>StorageLive(_161)<br/>StorageLive(_162)<br/>StorageLive(_163)<br/>_163 = _100<br/>StorageLive(_164)<br/>_164 = _127<br/></td></tr><tr><td align="left">_162 = &lt;u128 as SafeMath&gt;::safe_sub(move _163, move _164)</td></tr></table>>];
    bb81__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageLive(_155)<br/>_155 = ((_146 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_157)<br/>_157 = _155<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _157)</td></tr></table>>];
    bb82__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_157)<br/>StorageDead(_155)<br/>StorageDead(_152)<br/>StorageDead(_146)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb83__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_164)<br/>StorageDead(_163)<br/></td></tr><tr><td align="left">_161 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _162)</td></tr></table>>];
    bb84__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_162)<br/>_165 = discriminant(_161)<br/></td></tr><tr><td align="left">switchInt(move _165)</td></tr></table>>];
    bb85__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageLive(_169)<br/>_169 = ((_161 as Continue).0: u128)<br/>_160 = _169<br/>StorageDead(_169)<br/>StorageLive(_170)<br/>_170 = _145<br/></td></tr><tr><td align="left">_159 = &lt;u128 as Ord&gt;::min(move _160, move _170)</td></tr></table>>];
    bb86__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageLive(_166)<br/>_166 = ((_161 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_168)<br/>_168 = _166<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _168)</td></tr></table>>];
    bb87__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_168)<br/>StorageDead(_166)<br/>StorageDead(_160)<br/>StorageDead(_161)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb88__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_170)<br/>StorageDead(_160)<br/>StorageDead(_161)<br/>StorageLive(_171)<br/>StorageLive(_172)<br/>_172 = _159<br/>_171 = Gt(move _172, const 0_u128)<br/></td></tr><tr><td align="left">switchInt(move _171)</td></tr></table>>];
    bb89__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_172)<br/>StorageLive(_173)<br/>StorageLive(_174)<br/>StorageLive(_175)<br/>StorageLive(_176)<br/>StorageLive(_177)<br/>StorageLive(_178)<br/>StorageLive(_179)<br/>_179 = _159<br/></td></tr><tr><td align="left">_178 = &lt;u128 as Cast&gt;::cast::&lt;i128&gt;(move _179)</td></tr></table>>];
    bb90__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_179)<br/></td></tr><tr><td align="left">_177 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _178)</td></tr></table>>];
    bb91__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_178)<br/>_180 = discriminant(_177)<br/></td></tr><tr><td align="left">switchInt(move _180)</td></tr></table>>];
    bb92__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageLive(_184)<br/>_184 = ((_177 as Continue).0: i128)<br/>_176 = _184<br/>StorageDead(_184)<br/>StorageLive(_185)<br/>_185 = &amp;mut (*_2)<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>_188 = &amp;mut ((*_1).2: state::perp_market::PoolBalance)<br/>_187 = &amp;mut (*_188)<br/>_186 = move _187 as &amp;mut dyn state::spot_market::SpotBalance (PointerCoercion(Unsize))<br/>StorageDead(_187)<br/>StorageLive(_189)<br/>StorageLive(_190)<br/>StorageLive(_191)<br/>_191 = &amp;mut (((*_1).1: state::perp_market::AMM).4: state::perp_market::PoolBalance)<br/>_190 = &amp;mut (*_191)<br/>_189 = move _190 as &amp;mut dyn state::spot_market::SpotBalance (PointerCoercion(Unsize))<br/>StorageDead(_190)<br/></td></tr><tr><td align="left">_175 = transfer_spot_balances(move _176, move _185, move _186, move _189)</td></tr></table>>];
    bb93__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageLive(_181)<br/>_181 = ((_177 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_183)<br/>_183 = _181<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _183)</td></tr></table>>];
    bb94__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_183)<br/>StorageDead(_181)<br/>StorageDead(_176)<br/>StorageDead(_175)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb95__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_189)<br/>StorageDead(_186)<br/>StorageDead(_185)<br/>StorageDead(_176)<br/></td></tr><tr><td align="left">_174 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _175)</td></tr></table>>];
    bb96__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_175)<br/>_192 = discriminant(_174)<br/></td></tr><tr><td align="left">switchInt(move _192)</td></tr></table>>];
    bb97__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageLive(_196)<br/>_196 = ((_174 as Continue).0: ())<br/>_173 = _196<br/>StorageDead(_196)<br/>StorageDead(_191)<br/>StorageDead(_188)<br/>StorageDead(_177)<br/>StorageDead(_174)<br/>StorageDead(_173)<br/>_141 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb98__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageLive(_193)<br/>_193 = ((_174 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_195)<br/>_195 = _193<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _195)</td></tr></table>>];
    bb99__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageDead(_195)<br/>StorageDead(_193)<br/>StorageDead(_191)<br/>StorageDead(_188)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb100__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_172)<br/>_141 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb101__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_171)<br/>StorageDead(_159)<br/>StorageDead(_145)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb102__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_142)<br/>StorageDead(_141)<br/>StorageLive(_197)<br/>StorageLive(_198)<br/>StorageLive(_199)<br/>StorageLive(_200)<br/>StorageLive(_201)<br/>_201 = &amp;(((*_1).1: state::perp_market::AMM).4: state::perp_market::PoolBalance)<br/></td></tr><tr><td align="left">_200 = &lt;PoolBalance as SpotBalance&gt;::balance(move _201)</td></tr></table>>];
    bb103__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_201)<br/>StorageLive(_202)<br/>_202 = &amp;(*_2)<br/>StorageLive(_203)<br/>StorageLive(_204)<br/>StorageLive(_205)<br/>_205 = &amp;(((*_1).1: state::perp_market::AMM).4: state::perp_market::PoolBalance)<br/></td></tr><tr><td align="left">_204 = &lt;PoolBalance as SpotBalance&gt;::balance_type(move _205)</td></tr></table>>];
    bb104__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">_203 = &amp;(*_204)<br/>StorageDead(_205)<br/></td></tr><tr><td align="left">_199 = get_token_amount(move _200, move _202, move _203)</td></tr></table>>];
    bb105__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_203)<br/>StorageDead(_202)<br/>StorageDead(_200)<br/></td></tr><tr><td align="left">_198 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _199)</td></tr></table>>];
    bb106__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_199)<br/>_206 = discriminant(_198)<br/></td></tr><tr><td align="left">switchInt(move _206)</td></tr></table>>];
    bb107__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageLive(_210)<br/>_210 = ((_198 as Continue).0: u128)<br/>_197 = _210<br/>StorageDead(_210)<br/>StorageDead(_204)<br/>StorageDead(_198)<br/>StorageLive(_211)<br/>StorageLive(_212)<br/>StorageLive(_213)<br/>StorageLive(_214)<br/>_214 = (((*_1).1: state::perp_market::AMM).31: i128)<br/>StorageLive(_215)<br/>StorageLive(_216)<br/>StorageLive(_217)<br/>StorageLive(_218)<br/>_218 = (((*_1).1: state::perp_market::AMM).32: u128)<br/></td></tr><tr><td align="left">_217 = &lt;u128 as Cast&gt;::cast::&lt;i128&gt;(move _218)</td></tr></table>>];
    bb108__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageLive(_207)<br/>_207 = ((_198 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_209)<br/>_209 = _207<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _209)</td></tr></table>>];
    bb109__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageDead(_209)<br/>StorageDead(_207)<br/>StorageDead(_204)<br/>StorageDead(_198)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb110__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_218)<br/></td></tr><tr><td align="left">_216 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _217)</td></tr></table>>];
    bb111__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_217)<br/>_219 = discriminant(_216)<br/></td></tr><tr><td align="left">switchInt(move _219)</td></tr></table>>];
    bb112__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageLive(_223)<br/>_223 = ((_216 as Continue).0: i128)<br/>_215 = _223<br/>StorageDead(_223)<br/></td></tr><tr><td align="left">_213 = &lt;i128 as SafeMath&gt;::safe_sub(move _214, move _215)</td></tr></table>>];
    bb113__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageLive(_220)<br/>_220 = ((_216 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_222)<br/>_222 = _220<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _222)</td></tr></table>>];
    bb114__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageDead(_222)<br/>StorageDead(_220)<br/>StorageDead(_215)<br/>StorageDead(_214)<br/>StorageDead(_213)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb115__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageDead(_215)<br/>StorageDead(_214)<br/></td></tr><tr><td align="left">_212 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _213)</td></tr></table>>];
    bb116__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_213)<br/>_224 = discriminant(_212)<br/></td></tr><tr><td align="left">switchInt(move _224)</td></tr></table>>];
    bb117__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageLive(_228)<br/>_228 = ((_212 as Continue).0: i128)<br/>_211 = _228<br/>StorageDead(_228)<br/>StorageDead(_216)<br/>StorageDead(_212)<br/>StorageLive(_229)<br/>StorageLive(_230)<br/>StorageLive(_231)<br/>_231 = (((*_2).9: state::spot_market::InsuranceFund).5: i64)<br/>StorageLive(_232)<br/>_232 = (((*_1).4: state::perp_market::InsuranceClaim).4: i64)<br/>_230 = Gt(move _231, move _232)<br/></td></tr><tr><td align="left">switchInt(move _230)</td></tr></table>>];
    bb118__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageLive(_225)<br/>_225 = ((_212 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_227)<br/>_227 = _225<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _227)</td></tr></table>>];
    bb119__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageDead(_227)<br/>StorageDead(_225)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb120__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageDead(_232)<br/>StorageDead(_231)<br/>StorageLive(_233)<br/>StorageLive(_234)<br/>StorageLive(_235)<br/>StorageLive(_236)<br/>StorageLive(_237)<br/>_237 = _5<br/>StorageLive(_238)<br/>_238 = (((*_1).4: state::perp_market::InsuranceClaim).4: i64)<br/>_236 = Ge(move _237, move _238)<br/></td></tr><tr><td align="left">switchInt(move _236)</td></tr></table>>];
    bb121__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageDead(_232)<br/>StorageDead(_231)<br/>_229 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb122__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageDead(_238)<br/>StorageDead(_237)<br/>StorageLive(_239)<br/>StorageLive(_240)<br/>_240 = _5<br/>StorageLive(_241)<br/>_241 = (((*_2).9: state::spot_market::InsuranceFund).5: i64)<br/>_239 = Ge(move _240, move _241)<br/></td></tr><tr><td align="left">switchInt(move _239)</td></tr></table>>];
    bb123__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageDead(_241)<br/>StorageDead(_240)<br/>StorageLive(_242)<br/>_242 = ()<br/>_235 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _242)<br/>StorageDead(_242)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb124__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageDead(_241)<br/>StorageDead(_240)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb125__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageDead(_238)<br/>StorageDead(_237)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb126__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageLive(_243)<br/>_243 = error::ErrorCode::BlockchainClockInconsistency<br/>StorageLive(_244)<br/>StorageLive(_245)<br/>StorageLive(_246)<br/>StorageLive(_247)<br/>StorageLive(_248)<br/>StorageLive(_249)<br/>StorageLive(_250)<br/>StorageLive(_251)<br/>StorageLive(_252)<br/>StorageLive(_253)<br/>StorageLive(_254)<br/>_522 = const _<br/>_254 = &amp;(*_522)<br/>_253 = &amp;(*_254)<br/>_252 = move _253 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_253)<br/>StorageLive(_256)<br/>StorageLive(_257)<br/>StorageLive(_258)<br/>StorageLive(_259)<br/>StorageLive(_260)<br/>StorageLive(_261)<br/>StorageLive(_262)<br/>_262 = &amp;_243<br/>_261 = &amp;(*_262)<br/></td></tr><tr><td align="left">_260 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _261)</td></tr></table>>];
    bb127__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageDead(_261)<br/>_259 = [move _260]<br/>StorageDead(_260)<br/>_258 = &amp;_259<br/>_257 = &amp;(*_258)<br/>_256 = move _257 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_257)<br/></td></tr><tr><td align="left">_251 = Arguments::&lt;'_&gt;::new_v1(move _252, move _256)</td></tr></table>>];
    bb128__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageDead(_256)<br/>StorageDead(_252)<br/></td></tr><tr><td align="left">_250 = format(move _251)</td></tr></table>>];
    bb129__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">StorageDead(_251)<br/>StorageDead(_262)<br/>StorageDead(_259)<br/>StorageDead(_258)<br/>StorageDead(_254)<br/>_249 = move _250<br/>StorageDead(_250)<br/>_248 = &amp;_249<br/>_247 = &amp;(*_248)<br/></td></tr><tr><td align="left">_246 = &lt;String as Deref&gt;::deref(move _247)</td></tr></table>>];
    bb130__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">_245 = &amp;(*_246)<br/>StorageDead(_247)<br/></td></tr><tr><td align="left">_244 = solana_program::log::sol_log(move _245)</td></tr></table>>];
    bb131__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageDead(_245)<br/></td></tr><tr><td align="left">drop(_249)</td></tr></table>>];
    bb132__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageDead(_249)<br/>StorageDead(_248)<br/>StorageDead(_246)<br/>StorageDead(_244)<br/>StorageLive(_263)<br/>StorageLive(_264)<br/>StorageLive(_265)<br/>StorageLive(_266)<br/>StorageLive(_267)<br/>StorageLive(_268)<br/>StorageLive(_269)<br/>StorageLive(_270)<br/>StorageLive(_271)<br/>StorageLive(_272)<br/>StorageLive(_273)<br/>_521 = const _<br/>_273 = &amp;(*_521)<br/>_272 = &amp;(*_273)<br/>_271 = move _272 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_272)<br/>StorageLive(_275)<br/>StorageLive(_276)<br/>StorageLive(_277)<br/>StorageLive(_278)<br/>StorageLive(_279)<br/>StorageLive(_280)<br/>StorageLive(_281)<br/>_281 = &amp;_5<br/>_280 = &amp;(*_281)<br/></td></tr><tr><td align="left">_279 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i64&gt;(move _280)</td></tr></table>>];
    bb133__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageDead(_280)<br/>StorageLive(_282)<br/>StorageLive(_283)<br/>StorageLive(_284)<br/>_284 = &amp;(((*_1).4: state::perp_market::InsuranceClaim).4: i64)<br/>_283 = &amp;(*_284)<br/></td></tr><tr><td align="left">_282 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i64&gt;(move _283)</td></tr></table>>];
    bb134__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageDead(_283)<br/>StorageLive(_285)<br/>StorageLive(_286)<br/>StorageLive(_287)<br/>_287 = &amp;(((*_2).9: state::spot_market::InsuranceFund).5: i64)<br/>_286 = &amp;(*_287)<br/></td></tr><tr><td align="left">_285 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i64&gt;(move _286)</td></tr></table>>];
    bb135__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageDead(_286)<br/>_278 = [move _279, move _282, move _285]<br/>StorageDead(_285)<br/>StorageDead(_282)<br/>StorageDead(_279)<br/>_277 = &amp;_278<br/>_276 = &amp;(*_277)<br/>_275 = move _276 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_276)<br/></td></tr><tr><td align="left">_270 = Arguments::&lt;'_&gt;::new_v1(move _271, move _275)</td></tr></table>>];
    bb136__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageDead(_275)<br/>StorageDead(_271)<br/></td></tr><tr><td align="left">_269 = format(move _270)</td></tr></table>>];
    bb137__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">StorageDead(_270)<br/>StorageDead(_287)<br/>StorageDead(_284)<br/>StorageDead(_281)<br/>StorageDead(_278)<br/>StorageDead(_277)<br/>StorageDead(_273)<br/>_268 = move _269<br/>StorageDead(_269)<br/>_267 = &amp;_268<br/>_266 = &amp;(*_267)<br/></td></tr><tr><td align="left">_265 = &lt;String as Deref&gt;::deref(move _266)</td></tr></table>>];
    bb138__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">_264 = &amp;(*_265)<br/>StorageDead(_266)<br/></td></tr><tr><td align="left">_263 = solana_program::log::sol_log(move _264)</td></tr></table>>];
    bb139__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">StorageDead(_264)<br/></td></tr><tr><td align="left">drop(_268)</td></tr></table>>];
    bb140__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">StorageDead(_268)<br/>StorageDead(_267)<br/>StorageDead(_265)<br/>StorageDead(_263)<br/>StorageLive(_288)<br/>_288 = _243<br/>_235 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _288)<br/>StorageDead(_288)<br/>StorageDead(_243)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb141__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">StorageDead(_239)<br/>StorageDead(_236)<br/></td></tr><tr><td align="left">_234 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _235)</td></tr></table>>];
    bb142__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageDead(_235)<br/>_289 = discriminant(_234)<br/></td></tr><tr><td align="left">switchInt(move _289)</td></tr></table>>];
    bb143__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageLive(_293)<br/>_293 = ((_234 as Continue).0: ())<br/>_233 = _293<br/>StorageDead(_293)<br/>StorageDead(_234)<br/>StorageDead(_233)<br/>(((*_1).4: state::perp_market::InsuranceClaim).0: i64) = const 0_i64<br/>_229 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb144__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">StorageLive(_290)<br/>_290 = ((_234 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_292)<br/>_292 = _290<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _292)</td></tr></table>>];
    bb145__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageDead(_292)<br/>StorageDead(_290)<br/>StorageDead(_234)<br/>StorageDead(_233)<br/>StorageDead(_230)<br/>StorageDead(_229)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb146__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">StorageDead(_230)<br/>StorageDead(_229)<br/>StorageLive(_294)<br/>StorageLive(_295)<br/>StorageLive(_296)<br/>StorageLive(_297)<br/>_297 = &amp;(*_1)<br/>StorageLive(_298)<br/>_298 = &amp;(*_2)<br/>StorageLive(_299)<br/>_299 = _197<br/>StorageLive(_300)<br/>_300 = _211<br/></td></tr><tr><td align="left">_296 = calculate_revenue_pool_transfer(move _297, move _298, move _299, move _300)</td></tr></table>>];
    bb147__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left" balign="left">StorageDead(_300)<br/>StorageDead(_299)<br/>StorageDead(_298)<br/>StorageDead(_297)<br/></td></tr><tr><td align="left">_295 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _296)</td></tr></table>>];
    bb148__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left" balign="left">StorageDead(_296)<br/>_301 = discriminant(_295)<br/></td></tr><tr><td align="left">switchInt(move _301)</td></tr></table>>];
    bb149__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">149</td></tr><tr><td align="left" balign="left">StorageLive(_305)<br/>_305 = ((_295 as Continue).0: i128)<br/>_294 = _305<br/>StorageDead(_305)<br/>StorageDead(_295)<br/>StorageLive(_306)<br/>StorageLive(_307)<br/>StorageLive(_308)<br/>_308 = &amp;_294<br/>StorageLive(_309)<br/>StorageLive(_310)<br/>_520 = const _<br/>_310 = &amp;(*_520)<br/>_309 = &amp;(*_310)<br/></td></tr><tr><td align="left">_307 = &lt;i128 as Ord&gt;::cmp(move _308, move _309)</td></tr></table>>];
    bb150__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">150</td></tr><tr><td align="left" balign="left">StorageLive(_302)<br/>_302 = ((_295 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_304)<br/>_304 = _302<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _304)</td></tr></table>>];
    bb151__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">151</td></tr><tr><td align="left" balign="left">StorageDead(_304)<br/>StorageDead(_302)<br/>StorageDead(_295)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb152__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">152</td></tr><tr><td align="left" balign="left">StorageDead(_309)<br/>StorageDead(_308)<br/>_312 = discriminant(_307)<br/></td></tr><tr><td align="left">switchInt(move _312)</td></tr></table>>];
    bb153__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">153</td></tr><tr><td align="left" balign="left">_306 = ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb154__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">154</td></tr><tr><td align="left" balign="left">StorageLive(_313)<br/>StorageLive(_314)<br/>StorageLive(_315)<br/>StorageLive(_316)<br/>StorageLive(_317)<br/>_317 = _294<br/></td></tr><tr><td align="left">_316 = core::num::&lt;impl i128&gt;::unsigned_abs(move _317)</td></tr></table>>];
    bb155__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">155</td></tr><tr><td align="left" balign="left">StorageDead(_317)<br/>StorageLive(_318)<br/>_318 = &amp;mut (*_2)<br/>StorageLive(_319)<br/>StorageLive(_320)<br/>StorageLive(_321)<br/>_321 = &amp;mut (((*_1).1: state::perp_market::AMM).4: state::perp_market::PoolBalance)<br/>_320 = &amp;mut (*_321)<br/>_319 = move _320 as &amp;mut dyn state::spot_market::SpotBalance (PointerCoercion(Unsize))<br/>StorageDead(_320)<br/></td></tr><tr><td align="left">_315 = transfer_spot_balance_to_revenue_pool(move _316, move _318, move _319)</td></tr></table>>];
    bb156__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">156</td></tr><tr><td align="left" balign="left">StorageDead(_319)<br/>StorageDead(_318)<br/>StorageDead(_316)<br/></td></tr><tr><td align="left">_314 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _315)</td></tr></table>>];
    bb157__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">157</td></tr><tr><td align="left" balign="left">StorageDead(_315)<br/>_322 = discriminant(_314)<br/></td></tr><tr><td align="left">switchInt(move _322)</td></tr></table>>];
    bb158__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">158</td></tr><tr><td align="left" balign="left">StorageLive(_326)<br/>_326 = ((_314 as Continue).0: ())<br/>_313 = _326<br/>StorageDead(_326)<br/>StorageDead(_321)<br/>StorageDead(_314)<br/>StorageDead(_313)<br/>StorageLive(_327)<br/>StorageLive(_328)<br/>StorageLive(_329)<br/>StorageLive(_330)<br/>_330 = (((*_1).1: state::perp_market::AMM).32: u128)<br/>StorageLive(_331)<br/>StorageLive(_332)<br/>_332 = _294<br/></td></tr><tr><td align="left">_331 = core::num::&lt;impl i128&gt;::unsigned_abs(move _332)</td></tr></table>>];
    bb159__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">159</td></tr><tr><td align="left" balign="left">StorageLive(_323)<br/>_323 = ((_314 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_325)<br/>_325 = _323<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _325)</td></tr></table>>];
    bb160__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">160</td></tr><tr><td align="left" balign="left">StorageDead(_325)<br/>StorageDead(_323)<br/>StorageDead(_321)<br/>StorageDead(_314)<br/>StorageDead(_313)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb161__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">161</td></tr><tr><td align="left" balign="left">StorageDead(_332)<br/></td></tr><tr><td align="left">_329 = &lt;u128 as SafeMath&gt;::safe_add(move _330, move _331)</td></tr></table>>];
    bb162__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">162</td></tr><tr><td align="left" balign="left">StorageDead(_331)<br/>StorageDead(_330)<br/></td></tr><tr><td align="left">_328 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _329)</td></tr></table>>];
    bb163__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">163</td></tr><tr><td align="left" balign="left">StorageDead(_329)<br/>_333 = discriminant(_328)<br/></td></tr><tr><td align="left">switchInt(move _333)</td></tr></table>>];
    bb164__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">164</td></tr><tr><td align="left" balign="left">StorageLive(_337)<br/>_337 = ((_328 as Continue).0: u128)<br/>_327 = _337<br/>StorageDead(_337)<br/>(((*_1).1: state::perp_market::AMM).32: u128) = move _327<br/>StorageDead(_327)<br/>StorageDead(_328)<br/>_306 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb165__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">165</td></tr><tr><td align="left" balign="left">StorageLive(_334)<br/>_334 = ((_328 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_336)<br/>_336 = _334<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _336)</td></tr></table>>];
    bb166__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">166</td></tr><tr><td align="left" balign="left">StorageDead(_336)<br/>StorageDead(_334)<br/>StorageDead(_327)<br/>StorageDead(_328)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb167__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">167</td></tr><tr><td align="left" balign="left">StorageLive(_338)<br/>StorageLive(_339)<br/>StorageLive(_340)<br/>StorageLive(_341)<br/>StorageLive(_342)<br/>_342 = _294<br/></td></tr><tr><td align="left">_341 = core::num::&lt;impl i128&gt;::unsigned_abs(move _342)</td></tr></table>>];
    bb168__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">168</td></tr><tr><td align="left" balign="left">StorageDead(_342)<br/>StorageLive(_343)<br/>_343 = &amp;mut (*_2)<br/>StorageLive(_344)<br/>StorageLive(_345)<br/>StorageLive(_346)<br/>_346 = &amp;mut (((*_1).1: state::perp_market::AMM).4: state::perp_market::PoolBalance)<br/>_345 = &amp;mut (*_346)<br/>_344 = move _345 as &amp;mut dyn state::spot_market::SpotBalance (PointerCoercion(Unsize))<br/>StorageDead(_345)<br/></td></tr><tr><td align="left">_340 = transfer_revenue_pool_to_spot_balance(move _341, move _343, move _344)</td></tr></table>>];
    bb169__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">169</td></tr><tr><td align="left" balign="left">StorageDead(_344)<br/>StorageDead(_343)<br/>StorageDead(_341)<br/></td></tr><tr><td align="left">_339 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _340)</td></tr></table>>];
    bb170__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">170</td></tr><tr><td align="left" balign="left">StorageDead(_340)<br/>_347 = discriminant(_339)<br/></td></tr><tr><td align="left">switchInt(move _347)</td></tr></table>>];
    bb171__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">171</td></tr><tr><td align="left" balign="left">StorageLive(_351)<br/>_351 = ((_339 as Continue).0: ())<br/>_338 = _351<br/>StorageDead(_351)<br/>StorageDead(_346)<br/>StorageDead(_339)<br/>StorageDead(_338)<br/>_306 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb172__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">172</td></tr><tr><td align="left" balign="left">StorageLive(_348)<br/>_348 = ((_339 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_350)<br/>_350 = _348<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _350)</td></tr></table>>];
    bb173__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">173</td></tr><tr><td align="left" balign="left">StorageDead(_350)<br/>StorageDead(_348)<br/>StorageDead(_346)<br/>StorageDead(_339)<br/>StorageDead(_338)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb174__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">174</td></tr><tr><td align="left" balign="left">StorageDead(_310)<br/>StorageDead(_307)<br/>StorageDead(_306)<br/>StorageLive(_352)<br/>StorageLive(_353)<br/>_353 = _294<br/>_352 = Ne(move _353, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _352)</td></tr></table>>];
    bb175__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">175</td></tr><tr><td align="left" balign="left">StorageDead(_353)<br/>StorageLive(_354)<br/>StorageLive(_355)<br/>StorageLive(_356)<br/>StorageLive(_357)<br/>_357 = (((*_1).1: state::perp_market::AMM).31: i128)<br/>StorageLive(_358)<br/>_358 = _294<br/></td></tr><tr><td align="left">_356 = &lt;i128 as SafeMath&gt;::safe_sub(move _357, move _358)</td></tr></table>>];
    bb176__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">176</td></tr><tr><td align="left" balign="left">StorageDead(_358)<br/>StorageDead(_357)<br/></td></tr><tr><td align="left">_355 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _356)</td></tr></table>>];
    bb177__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">177</td></tr><tr><td align="left" balign="left">StorageDead(_356)<br/>_359 = discriminant(_355)<br/></td></tr><tr><td align="left">switchInt(move _359)</td></tr></table>>];
    bb178__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">178</td></tr><tr><td align="left" balign="left">StorageLive(_363)<br/>_363 = ((_355 as Continue).0: i128)<br/>_354 = _363<br/>StorageDead(_363)<br/>(((*_1).1: state::perp_market::AMM).31: i128) = move _354<br/>StorageDead(_354)<br/>StorageDead(_355)<br/>StorageLive(_364)<br/>StorageLive(_365)<br/>StorageLive(_366)<br/>StorageLive(_367)<br/>_367 = (((*_1).4: state::perp_market::InsuranceClaim).0: i64)<br/>StorageLive(_368)<br/>StorageLive(_369)<br/>StorageLive(_370)<br/>StorageLive(_371)<br/>_371 = _294<br/></td></tr><tr><td align="left">_370 = &lt;i128 as Cast&gt;::cast::&lt;i64&gt;(move _371)</td></tr></table>>];
    bb179__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">179</td></tr><tr><td align="left" balign="left">StorageLive(_360)<br/>_360 = ((_355 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_362)<br/>_362 = _360<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _362)</td></tr></table>>];
    bb180__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">180</td></tr><tr><td align="left" balign="left">StorageDead(_362)<br/>StorageDead(_360)<br/>StorageDead(_354)<br/>StorageDead(_355)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb181__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">181</td></tr><tr><td align="left" balign="left">StorageDead(_371)<br/></td></tr><tr><td align="left">_369 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _370)</td></tr></table>>];
    bb182__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">182</td></tr><tr><td align="left" balign="left">StorageDead(_370)<br/>_372 = discriminant(_369)<br/></td></tr><tr><td align="left">switchInt(move _372)</td></tr></table>>];
    bb183__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">183</td></tr><tr><td align="left" balign="left">StorageLive(_376)<br/>_376 = ((_369 as Continue).0: i64)<br/>_368 = _376<br/>StorageDead(_376)<br/></td></tr><tr><td align="left">_366 = &lt;i64 as SafeMath&gt;::safe_sub(move _367, move _368)</td></tr></table>>];
    bb184__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">184</td></tr><tr><td align="left" balign="left">StorageLive(_373)<br/>_373 = ((_369 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_375)<br/>_375 = _373<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _375)</td></tr></table>>];
    bb185__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">185</td></tr><tr><td align="left" balign="left">StorageDead(_375)<br/>StorageDead(_373)<br/>StorageDead(_368)<br/>StorageDead(_367)<br/>StorageDead(_366)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb186__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">186</td></tr><tr><td align="left" balign="left">StorageDead(_368)<br/>StorageDead(_367)<br/></td></tr><tr><td align="left">_365 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _366)</td></tr></table>>];
    bb187__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">187</td></tr><tr><td align="left" balign="left">StorageDead(_366)<br/>_377 = discriminant(_365)<br/></td></tr><tr><td align="left">switchInt(move _377)</td></tr></table>>];
    bb188__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">188</td></tr><tr><td align="left" balign="left">StorageLive(_381)<br/>_381 = ((_365 as Continue).0: i64)<br/>_364 = _381<br/>StorageDead(_381)<br/>(((*_1).4: state::perp_market::InsuranceClaim).0: i64) = move _364<br/>StorageDead(_364)<br/>StorageDead(_369)<br/>StorageDead(_365)<br/>StorageLive(_382)<br/>_382 = _5<br/>(((*_1).4: state::perp_market::InsuranceClaim).4: i64) = move _382<br/>StorageDead(_382)<br/>_99 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb189__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">189</td></tr><tr><td align="left" balign="left">StorageLive(_378)<br/>_378 = ((_365 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_380)<br/>_380 = _378<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _380)</td></tr></table>>];
    bb190__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">190</td></tr><tr><td align="left" balign="left">StorageDead(_380)<br/>StorageDead(_378)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb191__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">191</td></tr><tr><td align="left" balign="left">StorageDead(_353)<br/>_99 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb192__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">192</td></tr><tr><td align="left" balign="left">StorageDead(_352)<br/>StorageDead(_294)<br/>StorageDead(_211)<br/>StorageDead(_197)<br/>StorageDead(_127)<br/>StorageDead(_100)<br/>StorageDead(_99)<br/>StorageLive(_383)<br/>StorageLive(_384)<br/>StorageLive(_385)<br/>StorageLive(_386)<br/>StorageLive(_387)<br/>_387 = &amp;((*_1).2: state::perp_market::PoolBalance)<br/></td></tr><tr><td align="left">_386 = &lt;PoolBalance as SpotBalance&gt;::balance(move _387)</td></tr></table>>];
    bb193__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">193</td></tr><tr><td align="left" balign="left">StorageDead(_387)<br/>StorageLive(_388)<br/>_388 = &amp;(*_2)<br/>StorageLive(_389)<br/>StorageLive(_390)<br/>StorageLive(_391)<br/>_391 = &amp;((*_1).2: state::perp_market::PoolBalance)<br/></td></tr><tr><td align="left">_390 = &lt;PoolBalance as SpotBalance&gt;::balance_type(move _391)</td></tr></table>>];
    bb194__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">194</td></tr><tr><td align="left" balign="left">_389 = &amp;(*_390)<br/>StorageDead(_391)<br/></td></tr><tr><td align="left">_385 = get_token_amount(move _386, move _388, move _389)</td></tr></table>>];
    bb195__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">195</td></tr><tr><td align="left" balign="left">StorageDead(_389)<br/>StorageDead(_388)<br/>StorageDead(_386)<br/></td></tr><tr><td align="left">_384 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _385)</td></tr></table>>];
    bb196__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">196</td></tr><tr><td align="left" balign="left">StorageDead(_385)<br/>_392 = discriminant(_384)<br/></td></tr><tr><td align="left">switchInt(move _392)</td></tr></table>>];
    bb197__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">197</td></tr><tr><td align="left" balign="left">StorageLive(_396)<br/>_396 = ((_384 as Continue).0: u128)<br/>_383 = _396<br/>StorageDead(_396)<br/>StorageDead(_390)<br/>StorageDead(_384)<br/>StorageLive(_397)<br/>StorageLive(_398)<br/>StorageLive(_399)<br/>_399 = _4<br/>_398 = Gt(move _399, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _398)</td></tr></table>>];
    bb198__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">198</td></tr><tr><td align="left" balign="left">StorageLive(_393)<br/>_393 = ((_384 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_395)<br/>_395 = _393<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _395)</td></tr></table>>];
    bb199__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">199</td></tr><tr><td align="left" balign="left">StorageDead(_395)<br/>StorageDead(_393)<br/>StorageDead(_390)<br/>StorageDead(_384)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb200__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">200</td></tr><tr><td align="left" balign="left">StorageDead(_399)<br/>StorageLive(_400)<br/>_400 = _4<br/>StorageLive(_401)<br/>StorageLive(_402)<br/>StorageLive(_403)<br/>StorageLive(_404)<br/>_404 = _383<br/></td></tr><tr><td align="left">_403 = &lt;u128 as Cast&gt;::cast::&lt;i128&gt;(move _404)</td></tr></table>>];
    bb201__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">201</td></tr><tr><td align="left" balign="left">StorageDead(_399)<br/>StorageLive(_410)<br/>StorageLive(_411)<br/>StorageLive(_412)<br/>StorageLive(_413)<br/>_413 = &amp;(*_3)<br/>StorageLive(_414)<br/>_414 = &amp;(*_2)<br/></td></tr><tr><td align="left">_412 = SpotPosition::get_signed_token_amount(move _413, move _414)</td></tr></table>>];
    bb202__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">202</td></tr><tr><td align="left" balign="left">StorageDead(_404)<br/></td></tr><tr><td align="left">_402 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _403)</td></tr></table>>];
    bb203__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">203</td></tr><tr><td align="left" balign="left">StorageDead(_403)<br/>_405 = discriminant(_402)<br/></td></tr><tr><td align="left">switchInt(move _405)</td></tr></table>>];
    bb204__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">204</td></tr><tr><td align="left" balign="left">StorageLive(_409)<br/>_409 = ((_402 as Continue).0: i128)<br/>_401 = _409<br/>StorageDead(_409)<br/></td></tr><tr><td align="left">_397 = std::cmp::min::&lt;i128&gt;(move _400, move _401)</td></tr></table>>];
    bb205__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">205</td></tr><tr><td align="left" balign="left">StorageLive(_406)<br/>_406 = ((_402 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_408)<br/>_408 = _406<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _408)</td></tr></table>>];
    bb206__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">206</td></tr><tr><td align="left" balign="left">StorageDead(_408)<br/>StorageDead(_406)<br/>StorageDead(_401)<br/>StorageDead(_400)<br/>StorageDead(_402)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb207__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">207</td></tr><tr><td align="left" balign="left">StorageDead(_401)<br/>StorageDead(_400)<br/>StorageDead(_402)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb208__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">208</td></tr><tr><td align="left" balign="left">StorageDead(_414)<br/>StorageDead(_413)<br/></td></tr><tr><td align="left">_411 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _412)</td></tr></table>>];
    bb209__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">209</td></tr><tr><td align="left" balign="left">StorageDead(_412)<br/>_415 = discriminant(_411)<br/></td></tr><tr><td align="left">switchInt(move _415)</td></tr></table>>];
    bb210__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">210</td></tr><tr><td align="left" balign="left">StorageLive(_419)<br/>_419 = ((_411 as Continue).0: i128)<br/>_410 = _419<br/>StorageDead(_419)<br/>StorageDead(_411)<br/>StorageLive(_420)<br/>StorageLive(_421)<br/>StorageLive(_422)<br/>StorageLive(_423)<br/>StorageLive(_424)<br/>StorageLive(_425)<br/>StorageLive(_426)<br/>StorageLive(_427)<br/>_427 = &amp;(*_2)<br/>StorageLive(_428)<br/>_428 = _410<br/></td></tr><tr><td align="left">_426 = get_max_withdraw_for_market_with_token_amount(move _427, move _428, const false)</td></tr></table>>];
    bb211__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">211</td></tr><tr><td align="left" balign="left">StorageLive(_416)<br/>_416 = ((_411 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_418)<br/>_418 = _416<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _418)</td></tr></table>>];
    bb212__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">212</td></tr><tr><td align="left" balign="left">StorageDead(_418)<br/>StorageDead(_416)<br/>StorageDead(_411)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb213__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">213</td></tr><tr><td align="left" balign="left">StorageDead(_428)<br/>StorageDead(_427)<br/></td></tr><tr><td align="left">_425 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _426)</td></tr></table>>];
    bb214__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">214</td></tr><tr><td align="left" balign="left">StorageDead(_426)<br/>_429 = discriminant(_425)<br/></td></tr><tr><td align="left">switchInt(move _429)</td></tr></table>>];
    bb215__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">215</td></tr><tr><td align="left" balign="left">StorageLive(_433)<br/>_433 = ((_425 as Continue).0: u128)<br/>_424 = _433<br/>StorageDead(_433)<br/></td></tr><tr><td align="left">_423 = &lt;u128 as Cast&gt;::cast::&lt;i128&gt;(move _424)</td></tr></table>>];
    bb216__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">216</td></tr><tr><td align="left" balign="left">StorageLive(_430)<br/>_430 = ((_425 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_432)<br/>_432 = _430<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _432)</td></tr></table>>];
    bb217__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">217</td></tr><tr><td align="left" balign="left">StorageDead(_432)<br/>StorageDead(_430)<br/>StorageDead(_424)<br/>StorageDead(_423)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb218__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">218</td></tr><tr><td align="left" balign="left">StorageDead(_424)<br/></td></tr><tr><td align="left">_422 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _423)</td></tr></table>>];
    bb219__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">219</td></tr><tr><td align="left" balign="left">StorageDead(_423)<br/>_434 = discriminant(_422)<br/></td></tr><tr><td align="left">switchInt(move _434)</td></tr></table>>];
    bb220__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">220</td></tr><tr><td align="left" balign="left">StorageLive(_438)<br/>_438 = ((_422 as Continue).0: i128)<br/>_421 = _438<br/>StorageDead(_438)<br/>_439 = Eq(_421, const i128::MIN)<br/></td></tr><tr><td align="left">assert(!move _439, &quot;attempt to negate `{}`, which would overflow&quot;, _421)</td></tr></table>>];
    bb221__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">221</td></tr><tr><td align="left" balign="left">StorageLive(_435)<br/>_435 = ((_422 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_437)<br/>_437 = _435<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _437)</td></tr></table>>];
    bb222__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">222</td></tr><tr><td align="left" balign="left">StorageDead(_437)<br/>StorageDead(_435)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb223__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">223</td></tr><tr><td align="left" balign="left">_420 = Neg(move _421)<br/>StorageDead(_421)<br/>StorageDead(_425)<br/>StorageDead(_422)<br/>StorageLive(_440)<br/>_440 = _420<br/>StorageLive(_441)<br/>_441 = _4<br/></td></tr><tr><td align="left">_397 = &lt;i128 as Ord&gt;::max(move _440, move _441)</td></tr></table>>];
    bb224__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">224</td></tr><tr><td align="left" balign="left">StorageDead(_441)<br/>StorageDead(_440)<br/>StorageDead(_420)<br/>StorageDead(_410)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb225__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">225</td></tr><tr><td align="left" balign="left">StorageDead(_398)<br/>StorageLive(_442)<br/>StorageLive(_443)<br/>StorageLive(_444)<br/>_444 = _28<br/>_443 = Gt(move _444, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _443)</td></tr></table>>];
    bb226__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">226</td></tr><tr><td align="left" balign="left">StorageDead(_444)<br/>StorageLive(_445)<br/>StorageLive(_446)<br/>_446 = _397<br/>_445 = Lt(move _446, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _445)</td></tr></table>>];
    bb227__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">227</td></tr><tr><td align="left" balign="left">StorageDead(_446)<br/>StorageLive(_447)<br/>StorageLive(_448)<br/>StorageLive(_449)<br/>StorageLive(_450)<br/>_450 = _397<br/>StorageLive(_451)<br/>_451 = _28<br/></td></tr><tr><td align="left">_449 = &lt;i128 as SafeMath&gt;::safe_div(move _450, move _451)</td></tr></table>>];
    bb228__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">228</td></tr><tr><td align="left" balign="left">StorageDead(_451)<br/>StorageDead(_450)<br/></td></tr><tr><td align="left">_448 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _449)</td></tr></table>>];
    bb229__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">229</td></tr><tr><td align="left" balign="left">StorageDead(_449)<br/>_452 = discriminant(_448)<br/></td></tr><tr><td align="left">switchInt(move _452)</td></tr></table>>];
    bb230__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">230</td></tr><tr><td align="left" balign="left">StorageLive(_456)<br/>_456 = ((_448 as Continue).0: i128)<br/>_447 = _456<br/>StorageDead(_456)<br/>StorageDead(_448)<br/>StorageLive(_457)<br/>StorageLive(_458)<br/>StorageLive(_459)<br/>StorageLive(_460)<br/>StorageLive(_461)<br/>_461 = _447<br/></td></tr><tr><td align="left">_460 = core::num::&lt;impl i128&gt;::unsigned_abs(move _461)</td></tr></table>>];
    bb231__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">231</td></tr><tr><td align="left" balign="left">StorageLive(_453)<br/>_453 = ((_448 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_455)<br/>_455 = _453<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _455)</td></tr></table>>];
    bb232__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">232</td></tr><tr><td align="left" balign="left">StorageDead(_455)<br/>StorageDead(_453)<br/>StorageDead(_448)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb233__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">233</td></tr><tr><td align="left" balign="left">StorageDead(_461)<br/>StorageLive(_462)<br/>StorageLive(_463)<br/>_519 = const _<br/>_463 = &amp;(*_519)<br/>_462 = &amp;(*_463)<br/>StorageLive(_465)<br/>_465 = &amp;mut (*_2)<br/>StorageLive(_466)<br/>StorageLive(_467)<br/>StorageLive(_468)<br/>_468 = &amp;mut (((*_1).1: state::perp_market::AMM).4: state::perp_market::PoolBalance)<br/>_467 = &amp;mut (*_468)<br/>_466 = move _467 as &amp;mut dyn state::spot_market::SpotBalance (PointerCoercion(Unsize))<br/>StorageDead(_467)<br/></td></tr><tr><td align="left">_459 = update_spot_balances(move _460, move _462, move _465, move _466, const false)</td></tr></table>>];
    bb234__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">234</td></tr><tr><td align="left" balign="left">StorageDead(_466)<br/>StorageDead(_465)<br/>StorageDead(_462)<br/>StorageDead(_460)<br/></td></tr><tr><td align="left">_458 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _459)</td></tr></table>>];
    bb235__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">235</td></tr><tr><td align="left" balign="left">StorageDead(_459)<br/>_469 = discriminant(_458)<br/></td></tr><tr><td align="left">switchInt(move _469)</td></tr></table>>];
    bb236__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">236</td></tr><tr><td align="left" balign="left">StorageLive(_473)<br/>_473 = ((_458 as Continue).0: ())<br/>_457 = _473<br/>StorageDead(_473)<br/>StorageDead(_468)<br/>StorageDead(_463)<br/>StorageDead(_458)<br/>StorageDead(_457)<br/>_442 = _447<br/>StorageDead(_447)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb237__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">237</td></tr><tr><td align="left" balign="left">StorageLive(_470)<br/>_470 = ((_458 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_472)<br/>_472 = _470<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _472)</td></tr></table>>];
    bb238__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">238</td></tr><tr><td align="left" balign="left">StorageDead(_472)<br/>StorageDead(_470)<br/>StorageDead(_468)<br/>StorageDead(_463)<br/>StorageDead(_458)<br/>StorageDead(_457)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb239__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">239</td></tr><tr><td align="left" balign="left">StorageDead(_446)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb240__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">240</td></tr><tr><td align="left" balign="left">StorageDead(_444)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb241__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">241</td></tr><tr><td align="left" balign="left">_442 = const 0_i128<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb242__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">242</td></tr><tr><td align="left" balign="left">StorageDead(_445)<br/>StorageDead(_443)<br/>StorageLive(_474)<br/>StorageLive(_475)<br/>StorageLive(_476)<br/>StorageLive(_477)<br/>StorageLive(_478)<br/>_478 = _397<br/>StorageLive(_479)<br/>_479 = _442<br/></td></tr><tr><td align="left">_477 = &lt;i128 as SafeMath&gt;::safe_sub(move _478, move _479)</td></tr></table>>];
    bb243__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">243</td></tr><tr><td align="left" balign="left">StorageDead(_479)<br/>StorageDead(_478)<br/></td></tr><tr><td align="left">_476 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _477)</td></tr></table>>];
    bb244__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">244</td></tr><tr><td align="left" balign="left">StorageDead(_477)<br/>_480 = discriminant(_476)<br/></td></tr><tr><td align="left">switchInt(move _480)</td></tr></table>>];
    bb245__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">245</td></tr><tr><td align="left" balign="left">StorageLive(_484)<br/>_484 = ((_476 as Continue).0: i128)<br/>_475 = _484<br/>StorageDead(_484)<br/>_485 = Eq(_475, const i128::MIN)<br/></td></tr><tr><td align="left">assert(!move _485, &quot;attempt to negate `{}`, which would overflow&quot;, _475)</td></tr></table>>];
    bb246__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">246</td></tr><tr><td align="left" balign="left">StorageLive(_481)<br/>_481 = ((_476 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_483)<br/>_483 = _481<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _483)</td></tr></table>>];
    bb247__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">247</td></tr><tr><td align="left" balign="left">StorageDead(_483)<br/>StorageDead(_481)<br/>StorageDead(_475)<br/>StorageDead(_476)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb248__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">248</td></tr><tr><td align="left" balign="left">_474 = Neg(move _475)<br/>StorageDead(_475)<br/>StorageDead(_476)<br/>StorageLive(_486)<br/>StorageLive(_487)<br/>StorageLive(_488)<br/>StorageLive(_489)<br/>StorageLive(_490)<br/>_490 = _474<br/></td></tr><tr><td align="left">_489 = core::num::&lt;impl i128&gt;::unsigned_abs(move _490)</td></tr></table>>];
    bb249__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">249</td></tr><tr><td align="left" balign="left">StorageDead(_490)<br/>StorageLive(_491)<br/>StorageLive(_492)<br/>StorageLive(_493)<br/>_493 = _474<br/>_492 = Ge(move _493, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _492)</td></tr></table>>];
    bb250__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">250</td></tr><tr><td align="left" balign="left">StorageDead(_493)<br/>StorageLive(_494)<br/>_517 = const _<br/>_494 = &amp;(*_517)<br/>_491 = &amp;(*_494)<br/>StorageDead(_494)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb251__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">251</td></tr><tr><td align="left" balign="left">StorageDead(_493)<br/>StorageLive(_496)<br/>_518 = const _<br/>_496 = &amp;(*_518)<br/>_491 = &amp;(*_496)<br/>StorageDead(_496)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb252__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">252</td></tr><tr><td align="left" balign="left">StorageDead(_492)<br/>StorageLive(_498)<br/>_498 = &amp;mut (*_2)<br/>StorageLive(_499)<br/>StorageLive(_500)<br/>StorageLive(_501)<br/>_501 = &amp;mut ((*_1).2: state::perp_market::PoolBalance)<br/>_500 = &amp;mut (*_501)<br/>_499 = move _500 as &amp;mut dyn state::spot_market::SpotBalance (PointerCoercion(Unsize))<br/>StorageDead(_500)<br/></td></tr><tr><td align="left">_488 = update_spot_balances(move _489, move _491, move _498, move _499, const false)</td></tr></table>>];
    bb253__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">253</td></tr><tr><td align="left" balign="left">StorageDead(_499)<br/>StorageDead(_498)<br/>StorageDead(_491)<br/>StorageDead(_489)<br/></td></tr><tr><td align="left">_487 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _488)</td></tr></table>>];
    bb254__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">254</td></tr><tr><td align="left" balign="left">StorageDead(_488)<br/>_502 = discriminant(_487)<br/></td></tr><tr><td align="left">switchInt(move _502)</td></tr></table>>];
    bb255__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">255</td></tr><tr><td align="left" balign="left">StorageLive(_506)<br/>_506 = ((_487 as Continue).0: ())<br/>_486 = _506<br/>StorageDead(_506)<br/>StorageDead(_501)<br/>StorageDead(_487)<br/>StorageDead(_486)<br/>StorageLive(_507)<br/>StorageLive(_508)<br/>StorageLive(_509)<br/>StorageLive(_510)<br/>_510 = &amp;(*_2)<br/></td></tr><tr><td align="left">_509 = validate_spot_balances(move _510)</td></tr></table>>];
    bb256__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">256</td></tr><tr><td align="left" balign="left">StorageLive(_503)<br/>_503 = ((_487 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_505)<br/>_505 = _503<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _505)</td></tr></table>>];
    bb257__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">257</td></tr><tr><td align="left" balign="left">StorageDead(_505)<br/>StorageDead(_503)<br/>StorageDead(_501)<br/>StorageDead(_487)<br/>StorageDead(_486)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb258__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">258</td></tr><tr><td align="left" balign="left">StorageDead(_510)<br/></td></tr><tr><td align="left">_508 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _509)</td></tr></table>>];
    bb259__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">259</td></tr><tr><td align="left" balign="left">StorageDead(_509)<br/>_511 = discriminant(_508)<br/></td></tr><tr><td align="left">switchInt(move _511)</td></tr></table>>];
    bb260__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">260</td></tr><tr><td align="left" balign="left">StorageLive(_515)<br/>_515 = ((_508 as Continue).0: i64)<br/>_507 = _515<br/>StorageDead(_515)<br/>StorageDead(_508)<br/>StorageLive(_516)<br/>_516 = _397<br/>_0 = std::result::Result::&lt;i128, error::ErrorCode&gt;::Ok(move _516)<br/>StorageDead(_516)<br/>StorageDead(_507)<br/>StorageDead(_474)<br/>StorageDead(_442)<br/>StorageDead(_397)<br/>StorageDead(_383)<br/>StorageDead(_29)<br/>StorageDead(_28)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb261__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">261</td></tr><tr><td align="left" balign="left">StorageLive(_512)<br/>_512 = ((_508 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_514)<br/>_514 = _512<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _514)</td></tr></table>>];
    bb262__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">262</td></tr><tr><td align="left" balign="left">StorageDead(_514)<br/>StorageDead(_512)<br/>StorageDead(_508)<br/>StorageDead(_507)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb263__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">263</td></tr><tr><td align="left" balign="left">StorageDead(_474)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb264__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">264</td></tr><tr><td align="left" balign="left">StorageDead(_447)<br/>StorageDead(_445)<br/>StorageDead(_443)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb265__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">265</td></tr><tr><td align="left" balign="left">StorageDead(_442)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb266__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">266</td></tr><tr><td align="left" balign="left">StorageDead(_421)<br/>StorageDead(_425)<br/>StorageDead(_422)<br/>StorageDead(_420)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb267__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">267</td></tr><tr><td align="left" balign="left">StorageDead(_410)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb268__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">268</td></tr><tr><td align="left" balign="left">StorageDead(_398)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb269__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">269</td></tr><tr><td align="left" balign="left">StorageDead(_397)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb270__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">270</td></tr><tr><td align="left" balign="left">StorageDead(_383)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb271__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">271</td></tr><tr><td align="left" balign="left">StorageDead(_364)<br/>StorageDead(_369)<br/>StorageDead(_365)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb272__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">272</td></tr><tr><td align="left" balign="left">StorageDead(_352)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb273__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">273</td></tr><tr><td align="left" balign="left">StorageDead(_310)<br/>StorageDead(_307)<br/>StorageDead(_306)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb274__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">274</td></tr><tr><td align="left" balign="left">StorageDead(_294)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb275__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">275</td></tr><tr><td align="left" balign="left">StorageDead(_216)<br/>StorageDead(_212)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb276__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">276</td></tr><tr><td align="left" balign="left">StorageDead(_211)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb277__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">277</td></tr><tr><td align="left" balign="left">StorageDead(_197)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb278__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">278</td></tr><tr><td align="left" balign="left">StorageDead(_177)<br/>StorageDead(_174)<br/>StorageDead(_173)<br/>StorageDead(_171)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb279__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">279</td></tr><tr><td align="left" balign="left">StorageDead(_159)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb280__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">280</td></tr><tr><td align="left" balign="left">StorageDead(_145)<br/>StorageDead(_142)<br/>StorageDead(_141)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb281__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">281</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb282__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">282</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>StorageDead(_102)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb283__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">283</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>StorageDead(_104)<br/>StorageDead(_101)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb284__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">284</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>StorageDead(_99)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb285__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">285</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>StorageDead(_65)<br/>StorageDead(_64)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb286__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">286</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb287__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">287</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb288__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">288</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_33)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb289__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">289</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb290__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">290</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_10)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb291__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">291</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb292__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">292</td></tr><tr><td align="left">return</td></tr></table>>];
    bb293__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">293 (cleanup)</td></tr><tr><td align="left">drop(_268)</td></tr></table>>];
    bb294__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">294 (cleanup)</td></tr><tr><td align="left">drop(_249)</td></tr></table>>];
    bb295__0_92 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">295 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_92 -> bb1__0_92 [label="return"];
    bb1__0_92 -> bb2__0_92 [label="return"];
    bb2__0_92 -> bb3__0_92 [label="return"];
    bb3__0_92 -> bb4__0_92 [label="return"];
    bb4__0_92 -> bb5__0_92 [label="0"];
    bb4__0_92 -> bb7__0_92 [label="1"];
    bb4__0_92 -> bb6__0_92 [label="otherwise"];
    bb5__0_92 -> bb9__0_92 [label="return"];
    bb7__0_92 -> bb8__0_92 [label="return"];
    bb8__0_92 -> bb290__0_92 [label=""];
    bb9__0_92 -> bb10__0_92 [label="return"];
    bb10__0_92 -> bb11__0_92 [label="0"];
    bb10__0_92 -> bb12__0_92 [label="1"];
    bb10__0_92 -> bb6__0_92 [label="otherwise"];
    bb11__0_92 -> bb14__0_92 [label="return"];
    bb12__0_92 -> bb13__0_92 [label="return"];
    bb13__0_92 -> bb290__0_92 [label=""];
    bb14__0_92 -> bb15__0_92 [label="return"];
    bb15__0_92 -> bb16__0_92 [label="0"];
    bb15__0_92 -> bb17__0_92 [label="1"];
    bb15__0_92 -> bb6__0_92 [label="otherwise"];
    bb16__0_92 -> bb19__0_92 [label="return"];
    bb17__0_92 -> bb18__0_92 [label="return"];
    bb18__0_92 -> bb287__0_92 [label=""];
    bb19__0_92 -> bb20__0_92 [label="return"];
    bb20__0_92 -> bb21__0_92 [label="0"];
    bb20__0_92 -> bb22__0_92 [label="1"];
    bb20__0_92 -> bb6__0_92 [label="otherwise"];
    bb21__0_92 -> bb24__0_92 [label="return"];
    bb22__0_92 -> bb23__0_92 [label="return"];
    bb23__0_92 -> bb287__0_92 [label=""];
    bb24__0_92 -> bb25__0_92 [label="return"];
    bb25__0_92 -> bb26__0_92 [label="0"];
    bb25__0_92 -> bb27__0_92 [label="1"];
    bb25__0_92 -> bb6__0_92 [label="otherwise"];
    bb26__0_92 -> bb29__0_92 [label="return"];
    bb27__0_92 -> bb28__0_92 [label="return"];
    bb28__0_92 -> bb286__0_92 [label=""];
    bb29__0_92 -> bb30__0_92 [label="return"];
    bb30__0_92 -> bb31__0_92 [label="0"];
    bb30__0_92 -> bb32__0_92 [label="1"];
    bb30__0_92 -> bb6__0_92 [label="otherwise"];
    bb31__0_92 -> bb35__0_92 [label="0"];
    bb31__0_92 -> bb34__0_92 [label="otherwise"];
    bb32__0_92 -> bb33__0_92 [label="return"];
    bb33__0_92 -> bb286__0_92 [label=""];
    bb34__0_92 -> bb36__0_92 [label="return"];
    bb35__0_92 -> bb51__0_92 [label=""];
    bb36__0_92 -> bb37__0_92 [label="return"];
    bb37__0_92 -> bb38__0_92 [label="return"];
    bb38__0_92 -> bb39__0_92 [label="0"];
    bb38__0_92 -> bb40__0_92 [label="1"];
    bb38__0_92 -> bb6__0_92 [label="otherwise"];
    bb39__0_92 -> bb43__0_92 [label="0"];
    bb39__0_92 -> bb42__0_92 [label="otherwise"];
    bb40__0_92 -> bb41__0_92 [label="return"];
    bb41__0_92 -> bb285__0_92 [label=""];
    bb42__0_92 -> bb44__0_92 [label="return"];
    bb43__0_92 -> bb50__0_92 [label=""];
    bb44__0_92 -> bb45__0_92 [label="return"];
    bb45__0_92 -> bb46__0_92 [label="return"];
    bb46__0_92 -> bb47__0_92 [label="0"];
    bb46__0_92 -> bb48__0_92 [label="1"];
    bb46__0_92 -> bb6__0_92 [label="otherwise"];
    bb47__0_92 -> bb50__0_92 [label=""];
    bb48__0_92 -> bb49__0_92 [label="return"];
    bb49__0_92 -> bb285__0_92 [label=""];
    bb50__0_92 -> bb51__0_92 [label=""];
    bb51__0_92 -> bb52__0_92 [label="return"];
    bb52__0_92 -> bb53__0_92 [label="return"];
    bb53__0_92 -> bb54__0_92 [label="0"];
    bb53__0_92 -> bb55__0_92 [label="1"];
    bb53__0_92 -> bb6__0_92 [label="otherwise"];
    bb54__0_92 -> bb57__0_92 [label="return"];
    bb55__0_92 -> bb56__0_92 [label="return"];
    bb56__0_92 -> bb282__0_92 [label=""];
    bb57__0_92 -> bb58__0_92 [label="return"];
    bb58__0_92 -> bb59__0_92 [label="0"];
    bb58__0_92 -> bb60__0_92 [label="1"];
    bb58__0_92 -> bb6__0_92 [label="otherwise"];
    bb59__0_92 -> bb62__0_92 [label="return"];
    bb60__0_92 -> bb61__0_92 [label="return"];
    bb61__0_92 -> bb282__0_92 [label=""];
    bb62__0_92 -> bb63__0_92 [label="return"];
    bb63__0_92 -> bb64__0_92 [label="0"];
    bb63__0_92 -> bb65__0_92 [label="1"];
    bb63__0_92 -> bb6__0_92 [label="otherwise"];
    bb64__0_92 -> bb67__0_92 [label="return"];
    bb65__0_92 -> bb66__0_92 [label="return"];
    bb66__0_92 -> bb283__0_92 [label=""];
    bb67__0_92 -> bb68__0_92 [label="return"];
    bb68__0_92 -> bb69__0_92 [label="return"];
    bb69__0_92 -> bb70__0_92 [label="return"];
    bb70__0_92 -> bb71__0_92 [label="0"];
    bb70__0_92 -> bb72__0_92 [label="1"];
    bb70__0_92 -> bb6__0_92 [label="otherwise"];
    bb71__0_92 -> bb75__0_92 [label="0"];
    bb71__0_92 -> bb74__0_92 [label="otherwise"];
    bb72__0_92 -> bb73__0_92 [label="return"];
    bb73__0_92 -> bb281__0_92 [label=""];
    bb74__0_92 -> bb76__0_92 [label="return"];
    bb75__0_92 -> bb102__0_92 [label=""];
    bb76__0_92 -> bb77__0_92 [label="return"];
    bb77__0_92 -> bb78__0_92 [label="return"];
    bb78__0_92 -> bb79__0_92 [label="return"];
    bb79__0_92 -> bb80__0_92 [label="0"];
    bb79__0_92 -> bb81__0_92 [label="1"];
    bb79__0_92 -> bb6__0_92 [label="otherwise"];
    bb80__0_92 -> bb83__0_92 [label="return"];
    bb81__0_92 -> bb82__0_92 [label="return"];
    bb82__0_92 -> bb280__0_92 [label=""];
    bb83__0_92 -> bb84__0_92 [label="return"];
    bb84__0_92 -> bb85__0_92 [label="0"];
    bb84__0_92 -> bb86__0_92 [label="1"];
    bb84__0_92 -> bb6__0_92 [label="otherwise"];
    bb85__0_92 -> bb88__0_92 [label="return"];
    bb86__0_92 -> bb87__0_92 [label="return"];
    bb87__0_92 -> bb279__0_92 [label=""];
    bb88__0_92 -> bb100__0_92 [label="0"];
    bb88__0_92 -> bb89__0_92 [label="otherwise"];
    bb89__0_92 -> bb90__0_92 [label="return"];
    bb90__0_92 -> bb91__0_92 [label="return"];
    bb91__0_92 -> bb92__0_92 [label="0"];
    bb91__0_92 -> bb93__0_92 [label="1"];
    bb91__0_92 -> bb6__0_92 [label="otherwise"];
    bb92__0_92 -> bb95__0_92 [label="return"];
    bb93__0_92 -> bb94__0_92 [label="return"];
    bb94__0_92 -> bb278__0_92 [label=""];
    bb95__0_92 -> bb96__0_92 [label="return"];
    bb96__0_92 -> bb97__0_92 [label="0"];
    bb96__0_92 -> bb98__0_92 [label="1"];
    bb96__0_92 -> bb6__0_92 [label="otherwise"];
    bb97__0_92 -> bb101__0_92 [label=""];
    bb98__0_92 -> bb99__0_92 [label="return"];
    bb99__0_92 -> bb278__0_92 [label=""];
    bb100__0_92 -> bb101__0_92 [label=""];
    bb101__0_92 -> bb102__0_92 [label=""];
    bb102__0_92 -> bb103__0_92 [label="return"];
    bb103__0_92 -> bb104__0_92 [label="return"];
    bb104__0_92 -> bb105__0_92 [label="return"];
    bb105__0_92 -> bb106__0_92 [label="return"];
    bb106__0_92 -> bb107__0_92 [label="0"];
    bb106__0_92 -> bb108__0_92 [label="1"];
    bb106__0_92 -> bb6__0_92 [label="otherwise"];
    bb107__0_92 -> bb110__0_92 [label="return"];
    bb108__0_92 -> bb109__0_92 [label="return"];
    bb109__0_92 -> bb277__0_92 [label=""];
    bb110__0_92 -> bb111__0_92 [label="return"];
    bb111__0_92 -> bb112__0_92 [label="0"];
    bb111__0_92 -> bb113__0_92 [label="1"];
    bb111__0_92 -> bb6__0_92 [label="otherwise"];
    bb112__0_92 -> bb115__0_92 [label="return"];
    bb113__0_92 -> bb114__0_92 [label="return"];
    bb114__0_92 -> bb275__0_92 [label=""];
    bb115__0_92 -> bb116__0_92 [label="return"];
    bb116__0_92 -> bb117__0_92 [label="0"];
    bb116__0_92 -> bb118__0_92 [label="1"];
    bb116__0_92 -> bb6__0_92 [label="otherwise"];
    bb117__0_92 -> bb121__0_92 [label="0"];
    bb117__0_92 -> bb120__0_92 [label="otherwise"];
    bb118__0_92 -> bb119__0_92 [label="return"];
    bb119__0_92 -> bb275__0_92 [label=""];
    bb120__0_92 -> bb125__0_92 [label="0"];
    bb120__0_92 -> bb122__0_92 [label="otherwise"];
    bb121__0_92 -> bb146__0_92 [label=""];
    bb122__0_92 -> bb124__0_92 [label="0"];
    bb122__0_92 -> bb123__0_92 [label="otherwise"];
    bb123__0_92 -> bb141__0_92 [label=""];
    bb124__0_92 -> bb126__0_92 [label=""];
    bb125__0_92 -> bb126__0_92 [label=""];
    bb126__0_92 -> bb127__0_92 [label="return"];
    bb127__0_92 -> bb128__0_92 [label="return"];
    bb128__0_92 -> bb129__0_92 [label="return"];
    bb129__0_92 -> bb130__0_92 [label="return"];
    bb129__0_92 -> bb294__0_92 [label="unwind"];
    bb130__0_92 -> bb131__0_92 [label="return"];
    bb130__0_92 -> bb294__0_92 [label="unwind"];
    bb131__0_92 -> bb132__0_92 [label="return"];
    bb131__0_92 -> bb295__0_92 [label="unwind"];
    bb132__0_92 -> bb133__0_92 [label="return"];
    bb133__0_92 -> bb134__0_92 [label="return"];
    bb134__0_92 -> bb135__0_92 [label="return"];
    bb135__0_92 -> bb136__0_92 [label="return"];
    bb136__0_92 -> bb137__0_92 [label="return"];
    bb137__0_92 -> bb138__0_92 [label="return"];
    bb137__0_92 -> bb293__0_92 [label="unwind"];
    bb138__0_92 -> bb139__0_92 [label="return"];
    bb138__0_92 -> bb293__0_92 [label="unwind"];
    bb139__0_92 -> bb140__0_92 [label="return"];
    bb139__0_92 -> bb295__0_92 [label="unwind"];
    bb140__0_92 -> bb141__0_92 [label=""];
    bb141__0_92 -> bb142__0_92 [label="return"];
    bb142__0_92 -> bb143__0_92 [label="0"];
    bb142__0_92 -> bb144__0_92 [label="1"];
    bb142__0_92 -> bb6__0_92 [label="otherwise"];
    bb143__0_92 -> bb146__0_92 [label=""];
    bb144__0_92 -> bb145__0_92 [label="return"];
    bb145__0_92 -> bb276__0_92 [label=""];
    bb146__0_92 -> bb147__0_92 [label="return"];
    bb147__0_92 -> bb148__0_92 [label="return"];
    bb148__0_92 -> bb149__0_92 [label="0"];
    bb148__0_92 -> bb150__0_92 [label="1"];
    bb148__0_92 -> bb6__0_92 [label="otherwise"];
    bb149__0_92 -> bb152__0_92 [label="return"];
    bb150__0_92 -> bb151__0_92 [label="return"];
    bb151__0_92 -> bb274__0_92 [label=""];
    bb152__0_92 -> bb167__0_92 [label="255"];
    bb152__0_92 -> bb153__0_92 [label="0"];
    bb152__0_92 -> bb154__0_92 [label="1"];
    bb152__0_92 -> bb6__0_92 [label="otherwise"];
    bb153__0_92 -> bb174__0_92 [label=""];
    bb154__0_92 -> bb155__0_92 [label="return"];
    bb155__0_92 -> bb156__0_92 [label="return"];
    bb156__0_92 -> bb157__0_92 [label="return"];
    bb157__0_92 -> bb158__0_92 [label="0"];
    bb157__0_92 -> bb159__0_92 [label="1"];
    bb157__0_92 -> bb6__0_92 [label="otherwise"];
    bb158__0_92 -> bb161__0_92 [label="return"];
    bb159__0_92 -> bb160__0_92 [label="return"];
    bb160__0_92 -> bb273__0_92 [label=""];
    bb161__0_92 -> bb162__0_92 [label="return"];
    bb162__0_92 -> bb163__0_92 [label="return"];
    bb163__0_92 -> bb164__0_92 [label="0"];
    bb163__0_92 -> bb165__0_92 [label="1"];
    bb163__0_92 -> bb6__0_92 [label="otherwise"];
    bb164__0_92 -> bb174__0_92 [label=""];
    bb165__0_92 -> bb166__0_92 [label="return"];
    bb166__0_92 -> bb273__0_92 [label=""];
    bb167__0_92 -> bb168__0_92 [label="return"];
    bb168__0_92 -> bb169__0_92 [label="return"];
    bb169__0_92 -> bb170__0_92 [label="return"];
    bb170__0_92 -> bb171__0_92 [label="0"];
    bb170__0_92 -> bb172__0_92 [label="1"];
    bb170__0_92 -> bb6__0_92 [label="otherwise"];
    bb171__0_92 -> bb174__0_92 [label=""];
    bb172__0_92 -> bb173__0_92 [label="return"];
    bb173__0_92 -> bb273__0_92 [label=""];
    bb174__0_92 -> bb191__0_92 [label="0"];
    bb174__0_92 -> bb175__0_92 [label="otherwise"];
    bb175__0_92 -> bb176__0_92 [label="return"];
    bb176__0_92 -> bb177__0_92 [label="return"];
    bb177__0_92 -> bb178__0_92 [label="0"];
    bb177__0_92 -> bb179__0_92 [label="1"];
    bb177__0_92 -> bb6__0_92 [label="otherwise"];
    bb178__0_92 -> bb181__0_92 [label="return"];
    bb179__0_92 -> bb180__0_92 [label="return"];
    bb180__0_92 -> bb272__0_92 [label=""];
    bb181__0_92 -> bb182__0_92 [label="return"];
    bb182__0_92 -> bb183__0_92 [label="0"];
    bb182__0_92 -> bb184__0_92 [label="1"];
    bb182__0_92 -> bb6__0_92 [label="otherwise"];
    bb183__0_92 -> bb186__0_92 [label="return"];
    bb184__0_92 -> bb185__0_92 [label="return"];
    bb185__0_92 -> bb271__0_92 [label=""];
    bb186__0_92 -> bb187__0_92 [label="return"];
    bb187__0_92 -> bb188__0_92 [label="0"];
    bb187__0_92 -> bb189__0_92 [label="1"];
    bb187__0_92 -> bb6__0_92 [label="otherwise"];
    bb188__0_92 -> bb192__0_92 [label=""];
    bb189__0_92 -> bb190__0_92 [label="return"];
    bb190__0_92 -> bb271__0_92 [label=""];
    bb191__0_92 -> bb192__0_92 [label=""];
    bb192__0_92 -> bb193__0_92 [label="return"];
    bb193__0_92 -> bb194__0_92 [label="return"];
    bb194__0_92 -> bb195__0_92 [label="return"];
    bb195__0_92 -> bb196__0_92 [label="return"];
    bb196__0_92 -> bb197__0_92 [label="0"];
    bb196__0_92 -> bb198__0_92 [label="1"];
    bb196__0_92 -> bb6__0_92 [label="otherwise"];
    bb197__0_92 -> bb201__0_92 [label="0"];
    bb197__0_92 -> bb200__0_92 [label="otherwise"];
    bb198__0_92 -> bb199__0_92 [label="return"];
    bb199__0_92 -> bb270__0_92 [label=""];
    bb200__0_92 -> bb202__0_92 [label="return"];
    bb201__0_92 -> bb208__0_92 [label="return"];
    bb202__0_92 -> bb203__0_92 [label="return"];
    bb203__0_92 -> bb204__0_92 [label="0"];
    bb203__0_92 -> bb205__0_92 [label="1"];
    bb203__0_92 -> bb6__0_92 [label="otherwise"];
    bb204__0_92 -> bb207__0_92 [label="return"];
    bb205__0_92 -> bb206__0_92 [label="return"];
    bb206__0_92 -> bb268__0_92 [label=""];
    bb207__0_92 -> bb225__0_92 [label=""];
    bb208__0_92 -> bb209__0_92 [label="return"];
    bb209__0_92 -> bb210__0_92 [label="0"];
    bb209__0_92 -> bb211__0_92 [label="1"];
    bb209__0_92 -> bb6__0_92 [label="otherwise"];
    bb210__0_92 -> bb213__0_92 [label="return"];
    bb211__0_92 -> bb212__0_92 [label="return"];
    bb212__0_92 -> bb267__0_92 [label=""];
    bb213__0_92 -> bb214__0_92 [label="return"];
    bb214__0_92 -> bb215__0_92 [label="0"];
    bb214__0_92 -> bb216__0_92 [label="1"];
    bb214__0_92 -> bb6__0_92 [label="otherwise"];
    bb215__0_92 -> bb218__0_92 [label="return"];
    bb216__0_92 -> bb217__0_92 [label="return"];
    bb217__0_92 -> bb266__0_92 [label=""];
    bb218__0_92 -> bb219__0_92 [label="return"];
    bb219__0_92 -> bb220__0_92 [label="0"];
    bb219__0_92 -> bb221__0_92 [label="1"];
    bb219__0_92 -> bb6__0_92 [label="otherwise"];
    bb220__0_92 -> bb223__0_92 [label="success"];
    bb221__0_92 -> bb222__0_92 [label="return"];
    bb222__0_92 -> bb266__0_92 [label=""];
    bb223__0_92 -> bb224__0_92 [label="return"];
    bb224__0_92 -> bb225__0_92 [label=""];
    bb225__0_92 -> bb240__0_92 [label="0"];
    bb225__0_92 -> bb226__0_92 [label="otherwise"];
    bb226__0_92 -> bb239__0_92 [label="0"];
    bb226__0_92 -> bb227__0_92 [label="otherwise"];
    bb227__0_92 -> bb228__0_92 [label="return"];
    bb228__0_92 -> bb229__0_92 [label="return"];
    bb229__0_92 -> bb230__0_92 [label="0"];
    bb229__0_92 -> bb231__0_92 [label="1"];
    bb229__0_92 -> bb6__0_92 [label="otherwise"];
    bb230__0_92 -> bb233__0_92 [label="return"];
    bb231__0_92 -> bb232__0_92 [label="return"];
    bb232__0_92 -> bb264__0_92 [label=""];
    bb233__0_92 -> bb234__0_92 [label="return"];
    bb234__0_92 -> bb235__0_92 [label="return"];
    bb235__0_92 -> bb236__0_92 [label="0"];
    bb235__0_92 -> bb237__0_92 [label="1"];
    bb235__0_92 -> bb6__0_92 [label="otherwise"];
    bb236__0_92 -> bb242__0_92 [label=""];
    bb237__0_92 -> bb238__0_92 [label="return"];
    bb238__0_92 -> bb264__0_92 [label=""];
    bb239__0_92 -> bb241__0_92 [label=""];
    bb240__0_92 -> bb241__0_92 [label=""];
    bb241__0_92 -> bb242__0_92 [label=""];
    bb242__0_92 -> bb243__0_92 [label="return"];
    bb243__0_92 -> bb244__0_92 [label="return"];
    bb244__0_92 -> bb245__0_92 [label="0"];
    bb244__0_92 -> bb246__0_92 [label="1"];
    bb244__0_92 -> bb6__0_92 [label="otherwise"];
    bb245__0_92 -> bb248__0_92 [label="success"];
    bb246__0_92 -> bb247__0_92 [label="return"];
    bb247__0_92 -> bb263__0_92 [label=""];
    bb248__0_92 -> bb249__0_92 [label="return"];
    bb249__0_92 -> bb251__0_92 [label="0"];
    bb249__0_92 -> bb250__0_92 [label="otherwise"];
    bb250__0_92 -> bb252__0_92 [label=""];
    bb251__0_92 -> bb252__0_92 [label=""];
    bb252__0_92 -> bb253__0_92 [label="return"];
    bb253__0_92 -> bb254__0_92 [label="return"];
    bb254__0_92 -> bb255__0_92 [label="0"];
    bb254__0_92 -> bb256__0_92 [label="1"];
    bb254__0_92 -> bb6__0_92 [label="otherwise"];
    bb255__0_92 -> bb258__0_92 [label="return"];
    bb256__0_92 -> bb257__0_92 [label="return"];
    bb257__0_92 -> bb263__0_92 [label=""];
    bb258__0_92 -> bb259__0_92 [label="return"];
    bb259__0_92 -> bb260__0_92 [label="0"];
    bb259__0_92 -> bb261__0_92 [label="1"];
    bb259__0_92 -> bb6__0_92 [label="otherwise"];
    bb260__0_92 -> bb292__0_92 [label=""];
    bb261__0_92 -> bb262__0_92 [label="return"];
    bb262__0_92 -> bb263__0_92 [label=""];
    bb263__0_92 -> bb265__0_92 [label=""];
    bb264__0_92 -> bb265__0_92 [label=""];
    bb265__0_92 -> bb269__0_92 [label=""];
    bb266__0_92 -> bb267__0_92 [label=""];
    bb267__0_92 -> bb268__0_92 [label=""];
    bb268__0_92 -> bb269__0_92 [label=""];
    bb269__0_92 -> bb270__0_92 [label=""];
    bb270__0_92 -> bb289__0_92 [label=""];
    bb271__0_92 -> bb272__0_92 [label=""];
    bb272__0_92 -> bb274__0_92 [label=""];
    bb273__0_92 -> bb274__0_92 [label=""];
    bb274__0_92 -> bb276__0_92 [label=""];
    bb275__0_92 -> bb276__0_92 [label=""];
    bb276__0_92 -> bb277__0_92 [label=""];
    bb277__0_92 -> bb281__0_92 [label=""];
    bb278__0_92 -> bb279__0_92 [label=""];
    bb279__0_92 -> bb280__0_92 [label=""];
    bb280__0_92 -> bb281__0_92 [label=""];
    bb281__0_92 -> bb284__0_92 [label=""];
    bb282__0_92 -> bb283__0_92 [label=""];
    bb283__0_92 -> bb284__0_92 [label=""];
    bb284__0_92 -> bb289__0_92 [label=""];
    bb285__0_92 -> bb289__0_92 [label=""];
    bb286__0_92 -> bb288__0_92 [label=""];
    bb287__0_92 -> bb288__0_92 [label=""];
    bb288__0_92 -> bb289__0_92 [label=""];
    bb289__0_92 -> bb291__0_92 [label=""];
    bb290__0_92 -> bb291__0_92 [label=""];
    bb291__0_92 -> bb292__0_92 [label=""];
    bb293__0_92 -> bb295__0_92 [label="return"];
    bb294__0_92 -> bb295__0_92 [label="return"];
}
