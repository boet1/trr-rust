// MIR for `settle_pnl_mode::<impl at programs/drift/src/state/settle_pnl_mode.rs:15:1: 15:19>::result` before PreCodegen

fn settle_pnl_mode::<impl at programs/drift/src/state/settle_pnl_mode.rs:15:1: 15:19>::result(_1: settle_pnl_mode::SettlePnlMode, _2: error::ErrorCode, _3: u16, _4: &str) -> std::result::Result<(), error::ErrorCode> {
    debug self => _1;
    debug error_code => _2;
    debug market_index => _3;
    debug msg => _4;
    let mut _0: std::result::Result<(), error::ErrorCode>;
    let _5: &std::panic::Location<'_>;
    let _6: ();
    let mut _7: &str;
    let _8: ();
    let mut _9: &str;
    let _10: &str;
    let mut _11: &std::string::String;
    let _12: &std::string::String;
    let _13: std::string::String;
    let mut _15: std::fmt::Arguments<'_>;
    let mut _16: &[&str];
    let mut _17: &[&str; 4];
    let _18: &[&str; 4];
    let _19: [&str; 4];
    let mut _20: &[core::fmt::rt::Argument<'_>];
    let mut _21: &[core::fmt::rt::Argument<'_>; 4];
    let _22: &[core::fmt::rt::Argument<'_>; 4];
    let _23: [core::fmt::rt::Argument<'_>; 4];
    let mut _24: core::fmt::rt::Argument<'_>;
    let mut _25: &error::ErrorCode;
    let _26: &error::ErrorCode;
    let mut _27: core::fmt::rt::Argument<'_>;
    let mut _28: &u16;
    let _29: &u16;
    let mut _30: core::fmt::rt::Argument<'_>;
    let mut _31: &&str;
    let _32: &&str;
    let _33: &str;
    let mut _34: &std::panic::Location<'_>;
    let mut _35: core::fmt::rt::Argument<'_>;
    let mut _36: &u32;
    let _37: &u32;
    let _38: u32;
    let mut _39: &std::panic::Location<'_>;
    let mut _40: isize;
    let mut _41: error::ErrorCode;
    let mut _42: ();
    scope 1 {
        debug caller => _5;
        let _14: std::string::String;
        let mut _43: &[&str; 4];
        scope 2 {
            debug res => _14;
        }
    }

    bb0: {
        StorageLive(_5);
        _5 = Location::<'_>::caller() -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageLive(_6);
        StorageLive(_7);
        _7 = &(*_4);
        _6 = solana_program::log::sol_log(move _7) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_7);
        StorageDead(_6);
        StorageLive(_8);
        StorageLive(_9);
        StorageLive(_10);
        StorageLive(_11);
        StorageLive(_12);
        StorageLive(_13);
        StorageLive(_14);
        StorageLive(_15);
        StorageLive(_16);
        StorageLive(_17);
        StorageLive(_18);
        _43 = const _;
        _18 = &(*_43);
        _17 = &(*_18);
        _16 = move _17 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_17);
        StorageLive(_20);
        StorageLive(_21);
        StorageLive(_22);
        StorageLive(_23);
        StorageLive(_24);
        StorageLive(_25);
        StorageLive(_26);
        _26 = &_2;
        _25 = &(*_26);
        _24 = core::fmt::rt::Argument::<'_>::new_debug::<error::ErrorCode>(move _25) -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageDead(_25);
        StorageLive(_27);
        StorageLive(_28);
        StorageLive(_29);
        _29 = &_3;
        _28 = &(*_29);
        _27 = core::fmt::rt::Argument::<'_>::new_display::<u16>(move _28) -> [return: bb4, unwind continue];
    }

    bb4: {
        StorageDead(_28);
        StorageLive(_30);
        StorageLive(_31);
        StorageLive(_32);
        StorageLive(_33);
        StorageLive(_34);
        _34 = &(*_5);
        _33 = Location::<'_>::file(move _34) -> [return: bb5, unwind continue];
    }

    bb5: {
        StorageDead(_34);
        _32 = &_33;
        _31 = &(*_32);
        _30 = core::fmt::rt::Argument::<'_>::new_display::<&str>(move _31) -> [return: bb6, unwind continue];
    }

    bb6: {
        StorageDead(_31);
        StorageLive(_35);
        StorageLive(_36);
        StorageLive(_37);
        StorageLive(_38);
        StorageLive(_39);
        _39 = &(*_5);
        _38 = Location::<'_>::line(move _39) -> [return: bb7, unwind continue];
    }

    bb7: {
        StorageDead(_39);
        _37 = &_38;
        _36 = &(*_37);
        _35 = core::fmt::rt::Argument::<'_>::new_display::<u32>(move _36) -> [return: bb8, unwind continue];
    }

    bb8: {
        StorageDead(_36);
        _23 = [move _24, move _27, move _30, move _35];
        StorageDead(_35);
        StorageDead(_30);
        StorageDead(_27);
        StorageDead(_24);
        _22 = &_23;
        _21 = &(*_22);
        _20 = move _21 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_21);
        _15 = Arguments::<'_>::new_v1(move _16, move _20) -> [return: bb9, unwind continue];
    }

    bb9: {
        StorageDead(_20);
        StorageDead(_16);
        _14 = format(move _15) -> [return: bb10, unwind continue];
    }

    bb10: {
        StorageDead(_15);
        StorageDead(_38);
        StorageDead(_37);
        StorageDead(_33);
        StorageDead(_32);
        StorageDead(_29);
        StorageDead(_26);
        StorageDead(_23);
        StorageDead(_22);
        StorageDead(_18);
        _13 = move _14;
        StorageDead(_14);
        _12 = &_13;
        _11 = &(*_12);
        _10 = <String as Deref>::deref(move _11) -> [return: bb11, unwind: bb18];
    }

    bb11: {
        _9 = &(*_10);
        StorageDead(_11);
        _8 = solana_program::log::sol_log(move _9) -> [return: bb12, unwind: bb18];
    }

    bb12: {
        StorageDead(_9);
        drop(_13) -> [return: bb13, unwind: bb19];
    }

    bb13: {
        StorageDead(_13);
        StorageDead(_12);
        StorageDead(_10);
        StorageDead(_8);
        _40 = discriminant(_1);
        switchInt(move _40) -> [0: bb16, 1: bb14, otherwise: bb15];
    }

    bb14: {
        StorageLive(_42);
        _42 = ();
        _0 = std::result::Result::<(), error::ErrorCode>::Ok(move _42);
        StorageDead(_42);
        goto -> bb17;
    }

    bb15: {
        unreachable;
    }

    bb16: {
        StorageLive(_41);
        _41 = _2;
        _0 = std::result::Result::<(), error::ErrorCode>::Err(move _41);
        StorageDead(_41);
        goto -> bb17;
    }

    bb17: {
        StorageDead(_5);
        return;
    }

    bb18 (cleanup): {
        drop(_13) -> [return: bb19, unwind terminate(cleanup)];
    }

    bb19 (cleanup): {
        resume;
    }
}
