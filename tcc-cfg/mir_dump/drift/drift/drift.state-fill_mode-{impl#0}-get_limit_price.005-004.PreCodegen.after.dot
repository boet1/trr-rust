digraph Mir_0_2910 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn FillMode::get_limit_price(_1: &amp;ReErased state::fill_mode::FillMode, _2: &amp;ReErased state::user::Order, _3: std::option::Option&lt;i64&gt;, _4: u64, _5: u64, _6: bool) -&gt; std::result::Result&lt;std::option::Option&lt;u64&gt;, error::ErrorCode&gt;<br align="left"/>let mut _7: isize;<br align="left"/>let mut _8: &amp;ReErased state::user::Order;<br align="left"/>let mut _9: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _10: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _11: u64;<br align="left"/>let mut _12: u64;<br align="left"/>let mut _13: bool;<br align="left"/>let mut _14: std::option::Option&lt;state::protected_maker_mode_config::ProtectedMakerParams&gt;;<br align="left"/>let _15: &amp;ReErased u8;<br align="left"/>let _16: u64;<br align="left"/>let mut _17: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _18: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _19: u64;<br align="left"/>let mut _20: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _21: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _22: u64;<br align="left"/>let mut _23: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _24: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _25: u64;<br align="left"/>let mut _26: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _27: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _28: u8;<br align="left"/>let mut _29: isize;<br align="left"/>let _30: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _31: !;<br align="left"/>let mut _32: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _33: u64;<br align="left"/>let mut _34: u64;<br align="left"/>let mut _35: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _36: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _37: u8;<br align="left"/>let mut _38: &amp;ReErased u8;<br align="left"/>let mut _39: &amp;ReErased u8;<br align="left"/>let mut _40: &amp;ReErased u8;<br align="left"/>let _41: &amp;ReErased u8;<br align="left"/>let _42: u8;<br align="left"/>let mut _43: isize;<br align="left"/>let _44: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _45: !;<br align="left"/>let mut _46: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _47: u64;<br align="left"/>let mut _48: isize;<br align="left"/>let _49: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _50: !;<br align="left"/>let mut _51: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _52: u64;<br align="left"/>let mut _53: isize;<br align="left"/>let _54: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _55: !;<br align="left"/>let mut _56: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _57: u64;<br align="left"/>let mut _58: isize;<br align="left"/>let _59: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _60: !;<br align="left"/>let mut _61: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _62: u64;<br align="left"/>let mut _63: bool;<br align="left"/>let mut _64: &amp;ReErased state::user::Order;<br align="left"/>let mut _65: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _66: &amp;ReErased state::user::Order;<br align="left"/>let mut _67: u64;<br align="left"/>let mut _68: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _69: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _70: u64;<br align="left"/>let mut _71: u64;<br align="left"/>let mut _72: isize;<br align="left"/>let _73: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _74: !;<br align="left"/>let mut _75: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _76: u64;<br align="left"/>let mut _77: u64;<br align="left"/>let mut _78: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _79: bool;<br align="left"/>let mut _80: &amp;ReErased state::user::Order;<br align="left"/>let mut _81: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _82: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _83: u64;<br align="left"/>let mut _84: u64;<br align="left"/>let mut _85: bool;<br align="left"/>let mut _86: std::option::Option&lt;state::protected_maker_mode_config::ProtectedMakerParams&gt;;<br align="left"/>let mut _87: &amp;ReErased u8;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug order =&gt; _2;<br align="left"/>debug valid_oracle_price =&gt; _3;<br align="left"/>debug slot =&gt; _4;<br align="left"/>debug tick_size =&gt; _5;<br align="left"/>debug is_prediction_market =&gt; _6;<br align="left"/>debug auction_duration_percentage =&gt; _15;<br align="left"/>debug auction_duration =&gt; _16;<br align="left"/>debug residual =&gt; _30;<br align="left"/>debug val =&gt; _33;<br align="left"/>debug residual =&gt; _44;<br align="left"/>debug val =&gt; _47;<br align="left"/>debug residual =&gt; _49;<br align="left"/>debug val =&gt; _52;<br align="left"/>debug residual =&gt; _54;<br align="left"/>debug val =&gt; _57;<br align="left"/>debug residual =&gt; _59;<br align="left"/>debug val =&gt; _62;<br align="left"/>debug residual =&gt; _73;<br align="left"/>debug val =&gt; _76;<br align="left"/>>;
    bb0__0_2910 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_7 = discriminant((*_1))<br/></td></tr><tr><td align="left">switchInt(move _7)</td></tr></table>>];
    bb1__0_2910 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_15)<br/>_15 = &amp;(((*_1) as PlaceAndTake).1: u8)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>_28 = ((*_2).22: u8)<br/></td></tr><tr><td align="left">_27 = &lt;u8 as Cast&gt;::cast::&lt;u64&gt;(move _28)</td></tr></table>>];
    bb2__0_2910 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb3__0_2910 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/>_8 = &amp;(*_2)<br/>StorageLive(_9)<br/>_9 = _3<br/>StorageLive(_10)<br/>_10 = Option::&lt;u64&gt;::None<br/>StorageLive(_11)<br/>_11 = _4<br/>StorageLive(_12)<br/>_12 = _5<br/>StorageLive(_13)<br/>_13 = _6<br/>StorageLive(_14)<br/>_14 = Option::&lt;ProtectedMakerParams&gt;::None<br/></td></tr><tr><td align="left">_0 = Order::get_limit_price(move _8, move _9, move _10, move _11, move _12, move _13, move _14)</td></tr></table>>];
    bb4__0_2910 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb5__0_2910 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/></td></tr><tr><td align="left">_26 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _27)</td></tr></table>>];
    bb6__0_2910 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>_29 = discriminant(_26)<br/></td></tr><tr><td align="left">switchInt(move _29)</td></tr></table>>];
    bb7__0_2910 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_33)<br/>_33 = ((_26 as Continue).0: u64)<br/>_25 = _33<br/>StorageDead(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>_39 = &amp;(*_15)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>_87 = const _<br/>_41 = &amp;(*_87)<br/>_40 = &amp;(*_41)<br/></td></tr><tr><td align="left">_38 = &lt;&amp;u8 as Ord&gt;::min(move _39, move _40)</td></tr></table>>];
    bb8__0_2910 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_30)<br/>_30 = ((_26 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_32)<br/>_32 = _30<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Option&lt;u64&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _32)</td></tr></table>>];
    bb9__0_2910 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_30)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_22)<br/>StorageDead(_21)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_2910 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">_37 = (*_38)<br/>StorageDead(_40)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">_36 = &lt;u8 as Cast&gt;::cast::&lt;u64&gt;(move _37)</td></tr></table>>];
    bb11__0_2910 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/></td></tr><tr><td align="left">_35 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _36)</td></tr></table>>];
    bb12__0_2910 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>_43 = discriminant(_35)<br/></td></tr><tr><td align="left">switchInt(move _43)</td></tr></table>>];
    bb13__0_2910 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>_47 = ((_35 as Continue).0: u64)<br/>_34 = _47<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">_24 = &lt;u64 as SafeMath&gt;::safe_mul(move _25, move _34)</td></tr></table>>];
    bb14__0_2910 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_44)<br/>_44 = ((_35 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_46)<br/>_46 = _44<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Option&lt;u64&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _46)</td></tr></table>>];
    bb15__0_2910 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_44)<br/>StorageDead(_34)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_2910 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">_23 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _24)</td></tr></table>>];
    bb17__0_2910 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>_48 = discriminant(_23)<br/></td></tr><tr><td align="left">switchInt(move _48)</td></tr></table>>];
    bb18__0_2910 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_52)<br/>_52 = ((_23 as Continue).0: u64)<br/>_22 = _52<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">_21 = &lt;u64 as SafeMath&gt;::safe_div(move _22, const 100_u64)</td></tr></table>>];
    bb19__0_2910 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_49)<br/>_49 = ((_23 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_51)<br/>_51 = _49<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Option&lt;u64&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _51)</td></tr></table>>];
    bb20__0_2910 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_2910 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/></td></tr><tr><td align="left">_20 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _21)</td></tr></table>>];
    bb22__0_2910 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>_53 = discriminant(_20)<br/></td></tr><tr><td align="left">switchInt(move _53)</td></tr></table>>];
    bb23__0_2910 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_57)<br/>_57 = ((_20 as Continue).0: u64)<br/>_19 = _57<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">_18 = &lt;u64 as Cast&gt;::cast::&lt;u64&gt;(move _19)</td></tr></table>>];
    bb24__0_2910 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_54)<br/>_54 = ((_20 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_56)<br/>_56 = _54<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Option&lt;u64&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _56)</td></tr></table>>];
    bb25__0_2910 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_2910 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/></td></tr><tr><td align="left">_17 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _18)</td></tr></table>>];
    bb27__0_2910 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>_58 = discriminant(_17)<br/></td></tr><tr><td align="left">switchInt(move _58)</td></tr></table>>];
    bb28__0_2910 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_62)<br/>_62 = ((_17 as Continue).0: u64)<br/>_16 = _62<br/>StorageDead(_62)<br/>StorageDead(_41)<br/>StorageDead(_38)<br/>StorageDead(_35)<br/>StorageDead(_26)<br/>StorageDead(_23)<br/>StorageDead(_20)<br/>StorageDead(_17)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>_64 = &amp;(*_2)<br/></td></tr><tr><td align="left">_63 = Order::has_auction(move _64)</td></tr></table>>];
    bb29__0_2910 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_59)<br/>_59 = ((_17 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_61)<br/>_61 = _59<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Option&lt;u64&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _61)</td></tr></table>>];
    bb30__0_2910 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_59)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_2910 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left">switchInt(move _63)</td></tr></table>>];
    bb32__0_2910 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>_66 = &amp;(*_2)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>_70 = ((*_2).0: u64)<br/>StorageLive(_71)<br/>_71 = _16<br/></td></tr><tr><td align="left">_69 = &lt;u64 as SafeMath&gt;::safe_add(move _70, move _71)</td></tr></table>>];
    bb33__0_2910 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageDead(_70)<br/></td></tr><tr><td align="left">_68 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _69)</td></tr></table>>];
    bb34__0_2910 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>_72 = discriminant(_68)<br/></td></tr><tr><td align="left">switchInt(move _72)</td></tr></table>>];
    bb35__0_2910 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_76)<br/>_76 = ((_68 as Continue).0: u64)<br/>_67 = _76<br/>StorageDead(_76)<br/>StorageLive(_77)<br/>_77 = _5<br/>StorageLive(_78)<br/>_78 = _3<br/>StorageLive(_79)<br/>_79 = _6<br/></td></tr><tr><td align="left">_65 = calculate_auction_price(move _66, move _67, move _77, move _78, move _79)</td></tr></table>>];
    bb36__0_2910 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageLive(_73)<br/>_73 = ((_68 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_75)<br/>_75 = _73<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Option&lt;u64&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _75)</td></tr></table>>];
    bb37__0_2910 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_73)<br/>StorageDead(_67)<br/>StorageDead(_66)<br/>StorageDead(_65)<br/>StorageDead(_68)<br/>StorageDead(_63)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_2910 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageDead(_78)<br/>StorageDead(_77)<br/>StorageDead(_67)<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">_0 = std::result::Result::&lt;u64, error::ErrorCode&gt;::map::&lt;Option&lt;u64&gt;, fn(u64) -&gt; Option&lt;u64&gt; {Option::&lt;u64&gt;::Some}&gt;(move _65, Option::&lt;u64&gt;::Some)</td></tr></table>>];
    bb39__0_2910 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageDead(_68)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_2910 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageLive(_80)<br/>_80 = &amp;(*_2)<br/>StorageLive(_81)<br/>_81 = _3<br/>StorageLive(_82)<br/>_82 = Option::&lt;u64&gt;::None<br/>StorageLive(_83)<br/>_83 = _4<br/>StorageLive(_84)<br/>_84 = _5<br/>StorageLive(_85)<br/>_85 = _6<br/>StorageLive(_86)<br/>_86 = Option::&lt;ProtectedMakerParams&gt;::None<br/></td></tr><tr><td align="left">_0 = Order::get_limit_price(move _80, move _81, move _82, move _83, move _84, move _85, move _86)</td></tr></table>>];
    bb41__0_2910 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>StorageDead(_85)<br/>StorageDead(_84)<br/>StorageDead(_83)<br/>StorageDead(_82)<br/>StorageDead(_81)<br/>StorageDead(_80)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_2910 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_2910 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_2910 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_2910 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_38)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_2910 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_23)<br/>StorageDead(_20)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_2910 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_2910 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2910 -> bb3__0_2910 [label="0"];
    bb0__0_2910 -> bb3__0_2910 [label="1"];
    bb0__0_2910 -> bb1__0_2910 [label="2"];
    bb0__0_2910 -> bb3__0_2910 [label="3"];
    bb0__0_2910 -> bb2__0_2910 [label="otherwise"];
    bb1__0_2910 -> bb5__0_2910 [label="return"];
    bb3__0_2910 -> bb4__0_2910 [label="return"];
    bb4__0_2910 -> bb48__0_2910 [label=""];
    bb5__0_2910 -> bb6__0_2910 [label="return"];
    bb6__0_2910 -> bb7__0_2910 [label="0"];
    bb6__0_2910 -> bb8__0_2910 [label="1"];
    bb6__0_2910 -> bb2__0_2910 [label="otherwise"];
    bb7__0_2910 -> bb10__0_2910 [label="return"];
    bb8__0_2910 -> bb9__0_2910 [label="return"];
    bb9__0_2910 -> bb46__0_2910 [label=""];
    bb10__0_2910 -> bb11__0_2910 [label="return"];
    bb11__0_2910 -> bb12__0_2910 [label="return"];
    bb12__0_2910 -> bb13__0_2910 [label="0"];
    bb12__0_2910 -> bb14__0_2910 [label="1"];
    bb12__0_2910 -> bb2__0_2910 [label="otherwise"];
    bb13__0_2910 -> bb16__0_2910 [label="return"];
    bb14__0_2910 -> bb15__0_2910 [label="return"];
    bb15__0_2910 -> bb43__0_2910 [label=""];
    bb16__0_2910 -> bb17__0_2910 [label="return"];
    bb17__0_2910 -> bb18__0_2910 [label="0"];
    bb17__0_2910 -> bb19__0_2910 [label="1"];
    bb17__0_2910 -> bb2__0_2910 [label="otherwise"];
    bb18__0_2910 -> bb21__0_2910 [label="return"];
    bb19__0_2910 -> bb20__0_2910 [label="return"];
    bb20__0_2910 -> bb43__0_2910 [label=""];
    bb21__0_2910 -> bb22__0_2910 [label="return"];
    bb22__0_2910 -> bb23__0_2910 [label="0"];
    bb22__0_2910 -> bb24__0_2910 [label="1"];
    bb22__0_2910 -> bb2__0_2910 [label="otherwise"];
    bb23__0_2910 -> bb26__0_2910 [label="return"];
    bb24__0_2910 -> bb25__0_2910 [label="return"];
    bb25__0_2910 -> bb44__0_2910 [label=""];
    bb26__0_2910 -> bb27__0_2910 [label="return"];
    bb27__0_2910 -> bb28__0_2910 [label="0"];
    bb27__0_2910 -> bb29__0_2910 [label="1"];
    bb27__0_2910 -> bb2__0_2910 [label="otherwise"];
    bb28__0_2910 -> bb31__0_2910 [label="return"];
    bb29__0_2910 -> bb30__0_2910 [label="return"];
    bb30__0_2910 -> bb45__0_2910 [label=""];
    bb31__0_2910 -> bb40__0_2910 [label="0"];
    bb31__0_2910 -> bb32__0_2910 [label="otherwise"];
    bb32__0_2910 -> bb33__0_2910 [label="return"];
    bb33__0_2910 -> bb34__0_2910 [label="return"];
    bb34__0_2910 -> bb35__0_2910 [label="0"];
    bb34__0_2910 -> bb36__0_2910 [label="1"];
    bb34__0_2910 -> bb2__0_2910 [label="otherwise"];
    bb35__0_2910 -> bb38__0_2910 [label="return"];
    bb36__0_2910 -> bb37__0_2910 [label="return"];
    bb37__0_2910 -> bb47__0_2910 [label=""];
    bb38__0_2910 -> bb39__0_2910 [label="return"];
    bb39__0_2910 -> bb42__0_2910 [label=""];
    bb40__0_2910 -> bb41__0_2910 [label="return"];
    bb41__0_2910 -> bb42__0_2910 [label=""];
    bb42__0_2910 -> bb48__0_2910 [label=""];
    bb43__0_2910 -> bb44__0_2910 [label=""];
    bb44__0_2910 -> bb45__0_2910 [label=""];
    bb45__0_2910 -> bb46__0_2910 [label=""];
    bb46__0_2910 -> bb47__0_2910 [label=""];
    bb47__0_2910 -> bb48__0_2910 [label=""];
}
