digraph Mir_0_1679 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn instructions::user::handle_initialize_user(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::user::InitializeUser&lt;ReErased&gt;&gt;, _2: u16, _3: [u8; 32_usize]) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _4: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _5: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _6: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _7: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _8: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _9: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _10: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _11: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _12: error::ErrorCode;<br align="left"/>let mut _13: isize;<br align="left"/>let _14: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _15: !;<br align="left"/>let mut _16: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _17: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _18: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _19: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _20: &amp;ReErased mut state::user::User;<br align="left"/>let mut _21: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _22: u16;<br align="left"/>let mut _23: &amp;ReErased mut state::user::User;<br align="left"/>let mut _24: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _25: [u8; 32_usize];<br align="left"/>let mut _26: &amp;ReErased mut state::user::User;<br align="left"/>let mut _27: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _28: &amp;ReErased mut state::user::User;<br align="left"/>let mut _29: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _30: &amp;ReErased mut state::user::User;<br align="left"/>let mut _31: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _32: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _33: std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _34: std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _35: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _36: std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _37: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;;<br align="left"/>let mut _38: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _39: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _40: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _41: Closure(DefId(0:11665 ~ drift[d311]::instructions::user::handle_initialize_user::{closure#0}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _42: isize;<br align="left"/>let _43: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _44: !;<br align="left"/>let mut _45: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _46: std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _47: u16;<br align="left"/>let mut _48: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u16&gt;;<br align="left"/>let mut _49: std::result::Result&lt;u16, error::ErrorCode&gt;;<br align="left"/>let mut _50: u16;<br align="left"/>let mut _51: &amp;ReErased state::user::UserStats;<br align="left"/>let mut _52: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _53: isize;<br align="left"/>let _54: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _55: !;<br align="left"/>let mut _56: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _57: u16;<br align="left"/>let mut _58: &amp;ReErased mut state::user::UserStats;<br align="left"/>let mut _59: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let _60: ();<br align="left"/>let mut _61: bool;<br align="left"/>let mut _62: u16;<br align="left"/>let mut _63: &amp;ReErased state::user::UserStats;<br align="left"/>let mut _64: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let _65: std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let _66: std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;&gt;;<br align="left"/>let mut _67: (std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;&gt;, std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;&gt;);<br align="left"/>let mut _68: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;&gt;, std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;&gt;)&gt;;<br align="left"/>let mut _69: std::result::Result&lt;(std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;&gt;, std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;&gt;), error::ErrorCode&gt;;<br align="left"/>let mut _70: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _71: isize;<br align="left"/>let _72: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _73: !;<br align="left"/>let mut _74: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _75: (std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;&gt;, std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;&gt;);<br align="left"/>let _76: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _77: (std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;&gt;, std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;&gt;);<br align="left"/>let mut _78: std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _79: std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;&gt;;<br align="left"/>let mut _80: isize;<br align="left"/>let mut _81: isize;<br align="left"/>let _82: anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _83: anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let _84: std::cell::Ref&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _85: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _86: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _87: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::user::User&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _88: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _89: Closure(DefId(0:11666 ~ drift[d311]::instructions::user::handle_initialize_user::{closure#1}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _90: isize;<br align="left"/>let _91: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _92: !;<br align="left"/>let mut _93: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _94: std::cell::Ref&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _95: std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _96: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;;<br align="left"/>let mut _97: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _98: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _99: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _100: Closure(DefId(0:11667 ~ drift[d311]::instructions::user::handle_initialize_user::{closure#2}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _101: isize;<br align="left"/>let _102: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _103: !;<br align="left"/>let mut _104: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _105: std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let _106: ();<br align="left"/>let mut _107: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _108: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _109: bool;<br align="left"/>let mut _110: u16;<br align="left"/>let mut _111: &amp;ReErased state::user::User;<br align="left"/>let mut _112: &amp;ReErased std::cell::Ref&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _113: ();<br align="left"/>let _114: error::ErrorCode;<br align="left"/>let _115: ();<br align="left"/>let mut _116: &amp;ReErased str;<br align="left"/>let _117: &amp;ReErased str;<br align="left"/>let mut _118: &amp;ReErased std::string::String;<br align="left"/>let _119: &amp;ReErased std::string::String;<br align="left"/>let _120: std::string::String;<br align="left"/>let _121: std::string::String;<br align="left"/>let mut _122: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _123: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _124: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _125: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _126: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _127: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _128: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _129: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _130: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _131: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _132: &amp;ReErased error::ErrorCode;<br align="left"/>let _133: &amp;ReErased error::ErrorCode;<br align="left"/>let mut _134: error::ErrorCode;<br align="left"/>let mut _135: isize;<br align="left"/>let _136: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _137: !;<br align="left"/>let mut _138: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _139: ();<br align="left"/>let _140: ();<br align="left"/>let mut _141: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _142: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _143: bool;<br align="left"/>let mut _144: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _145: &amp;ReErased state::user::User;<br align="left"/>let mut _146: &amp;ReErased std::cell::Ref&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _147: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _148: &amp;ReErased state::user::UserStats;<br align="left"/>let mut _149: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _150: ();<br align="left"/>let _151: error::ErrorCode;<br align="left"/>let _152: ();<br align="left"/>let mut _153: &amp;ReErased str;<br align="left"/>let _154: &amp;ReErased str;<br align="left"/>let mut _155: &amp;ReErased std::string::String;<br align="left"/>let _156: &amp;ReErased std::string::String;<br align="left"/>let _157: std::string::String;<br align="left"/>let _158: std::string::String;<br align="left"/>let mut _159: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _160: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _161: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _162: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _163: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _164: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _165: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _166: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _167: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _168: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _169: &amp;ReErased error::ErrorCode;<br align="left"/>let _170: &amp;ReErased error::ErrorCode;<br align="left"/>let mut _171: error::ErrorCode;<br align="left"/>let mut _172: isize;<br align="left"/>let _173: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _174: !;<br align="left"/>let mut _175: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _176: ();<br align="left"/>let mut _177: u8;<br align="left"/>let mut _178: u8;<br align="left"/>let mut _179: (u8, bool);<br align="left"/>let mut _180: &amp;ReErased mut state::user::UserStats;<br align="left"/>let mut _181: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _182: u8;<br align="left"/>let mut _183: u8;<br align="left"/>let mut _184: (u8, bool);<br align="left"/>let mut _185: &amp;ReErased mut state::user::UserStats;<br align="left"/>let mut _186: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _187: &amp;ReErased state::user::User;<br align="left"/>let mut _188: &amp;ReErased std::cell::Ref&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _189: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _190: &amp;ReErased mut state::user::UserStats;<br align="left"/>let mut _191: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let _192: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _193: &amp;ReErased state::state::State;<br align="left"/>let mut _194: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _195: ();<br align="left"/>let mut _196: bool;<br align="left"/>let mut _197: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _198: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _199: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _200: anchor_lang::prelude::Pubkey;<br align="left"/>let _201: ();<br align="left"/>let mut _202: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _203: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _204: anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;;<br align="left"/>let mut _205: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;&gt;;<br align="left"/>let mut _206: std::result::Result&lt;anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _207: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _208: isize;<br align="left"/>let _209: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _210: !;<br align="left"/>let mut _211: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _212: anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;;<br align="left"/>let mut _213: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _214: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _215: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _216: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _217: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _218: isize;<br align="left"/>let _219: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _220: !;<br align="left"/>let mut _221: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _222: ();<br align="left"/>let _223: ();<br align="left"/>let mut _224: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _225: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _226: bool;<br align="left"/>let mut _227: u16;<br align="left"/>let mut _228: u16;<br align="left"/>let mut _229: &amp;ReErased state::user::UserStats;<br align="left"/>let mut _230: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _231: ();<br align="left"/>let _232: error::ErrorCode;<br align="left"/>let _233: ();<br align="left"/>let mut _234: &amp;ReErased str;<br align="left"/>let _235: &amp;ReErased str;<br align="left"/>let mut _236: &amp;ReErased std::string::String;<br align="left"/>let _237: &amp;ReErased std::string::String;<br align="left"/>let _238: std::string::String;<br align="left"/>let _239: std::string::String;<br align="left"/>let mut _240: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _241: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _242: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _243: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _244: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _245: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _246: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _247: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _248: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _249: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _250: &amp;ReErased error::ErrorCode;<br align="left"/>let _251: &amp;ReErased error::ErrorCode;<br align="left"/>let _252: ();<br align="left"/>let mut _253: &amp;ReErased str;<br align="left"/>let _254: &amp;ReErased str;<br align="left"/>let mut _255: &amp;ReErased std::string::String;<br align="left"/>let _256: &amp;ReErased std::string::String;<br align="left"/>let _257: std::string::String;<br align="left"/>let _258: std::string::String;<br align="left"/>let mut _259: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _260: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _261: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _262: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _263: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _264: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _265: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _266: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _267: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _268: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _269: &amp;ReErased u16;<br align="left"/>let _270: &amp;ReErased u16;<br align="left"/>let mut _271: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _272: &amp;ReErased u16;<br align="left"/>let _273: &amp;ReErased u16;<br align="left"/>let _274: &amp;ReErased state::user::UserStats;<br align="left"/>let mut _275: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _276: error::ErrorCode;<br align="left"/>let mut _277: isize;<br align="left"/>let _278: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _279: !;<br align="left"/>let mut _280: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _281: ();<br align="left"/>let mut _282: u16;<br align="left"/>let mut _283: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u16&gt;;<br align="left"/>let mut _284: std::result::Result&lt;u16, error::ErrorCode&gt;;<br align="left"/>let mut _285: u16;<br align="left"/>let mut _286: &amp;ReErased state::user::UserStats;<br align="left"/>let mut _287: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _288: isize;<br align="left"/>let _289: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _290: !;<br align="left"/>let mut _291: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _292: u16;<br align="left"/>let mut _293: &amp;ReErased mut state::user::UserStats;<br align="left"/>let mut _294: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let _295: &amp;ReErased mut std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let _296: ();<br align="left"/>let mut _297: u64;<br align="left"/>let mut _298: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _299: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _300: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _301: u64;<br align="left"/>let mut _302: &amp;ReErased state::state::State;<br align="left"/>let mut _303: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _304: Closure(DefId(0:11668 ~ drift[d311]::instructions::user::handle_initialize_user::{closure#3}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn(()) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _305: isize;<br align="left"/>let _306: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _307: !;<br align="left"/>let mut _308: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _309: u64;<br align="left"/>let mut _310: &amp;ReErased mut state::state::State;<br align="left"/>let mut _311: &amp;ReErased mut anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _312: u64;<br align="left"/>let mut _313: &amp;ReErased state::state::State;<br align="left"/>let _314: &amp;ReErased state::state::State;<br align="left"/>let mut _315: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _316: ();<br align="left"/>let mut _317: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _318: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _319: bool;<br align="left"/>let mut _320: u64;<br align="left"/>let mut _321: bool;<br align="left"/>let mut _322: u64;<br align="left"/>let mut _323: &amp;ReErased state::state::State;<br align="left"/>let mut _324: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _325: u64;<br align="left"/>let mut _326: ();<br align="left"/>let _327: error::ErrorCode;<br align="left"/>let _328: ();<br align="left"/>let mut _329: &amp;ReErased str;<br align="left"/>let _330: &amp;ReErased str;<br align="left"/>let mut _331: &amp;ReErased std::string::String;<br align="left"/>let _332: &amp;ReErased std::string::String;<br align="left"/>let _333: std::string::String;<br align="left"/>let _334: std::string::String;<br align="left"/>let mut _335: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _336: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _337: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _338: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _339: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _340: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _341: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _342: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _343: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _344: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _345: &amp;ReErased error::ErrorCode;<br align="left"/>let _346: &amp;ReErased error::ErrorCode;<br align="left"/>let mut _347: error::ErrorCode;<br align="left"/>let mut _348: isize;<br align="left"/>let _349: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _350: !;<br align="left"/>let mut _351: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _352: ();<br align="left"/>let _353: i64;<br align="left"/>let mut _354: anchor_lang::prelude::Clock;<br align="left"/>let mut _355: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _356: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _357: isize;<br align="left"/>let _358: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _359: !;<br align="left"/>let mut _360: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _361: anchor_lang::prelude::Clock;<br align="left"/>let mut _362: u32;<br align="left"/>let mut _363: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _364: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _365: i64;<br align="left"/>let mut _366: isize;<br align="left"/>let _367: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _368: !;<br align="left"/>let mut _369: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _370: u32;<br align="left"/>let mut _371: &amp;ReErased mut state::user::User;<br align="left"/>let mut _372: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _373: ();<br align="left"/>let _374: ();<br align="left"/>let mut _375: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let mut _376: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let _377: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let _378: [&amp;ReErased [u8]; 1_usize];<br align="left"/>let mut _379: &amp;ReErased [u8];<br align="left"/>let _380: &amp;ReErased [u8];<br align="left"/>let mut _381: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _382: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _383: std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _384: &amp;ReErased state::events::NewUserRecord;<br align="left"/>let _385: &amp;ReErased state::events::NewUserRecord;<br align="left"/>let _386: state::events::NewUserRecord;<br align="left"/>let mut _387: i64;<br align="left"/>let mut _388: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _389: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _390: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _391: u16;<br align="left"/>let mut _392: [u8; 32_usize];<br align="left"/>let mut _393: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _394: &amp;ReErased state::user::UserStats;<br align="left"/>let mut _395: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let _396: ();<br align="left"/>let mut _397: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _398: u64;<br align="left"/>let mut _399: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _400: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _401: &amp;ReErased state::state::State;<br align="left"/>let _402: &amp;ReErased state::state::State;<br align="left"/>let mut _403: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _404: isize;<br align="left"/>let _405: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _406: !;<br align="left"/>let mut _407: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _408: u64;<br align="left"/>let _409: ();<br align="left"/>let mut _410: bool;<br align="left"/>let mut _411: u64;<br align="left"/>let _412: u64;<br align="left"/>let mut _413: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, u64&gt;;<br align="left"/>let mut _414: std::result::Result&lt;u64, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _415: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _416: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _417: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _418: isize;<br align="left"/>let _419: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _420: !;<br align="left"/>let mut _421: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _422: u64;<br align="left"/>let _423: ();<br align="left"/>let mut _424: bool;<br align="left"/>let mut _425: u64;<br align="left"/>let mut _426: u64;<br align="left"/>let mut _427: !;<br align="left"/>let _428: ();<br align="left"/>let mut _429: &amp;ReErased str;<br align="left"/>let _430: &amp;ReErased str;<br align="left"/>let mut _431: &amp;ReErased std::string::String;<br align="left"/>let _432: &amp;ReErased std::string::String;<br align="left"/>let _433: std::string::String;<br align="left"/>let _434: std::string::String;<br align="left"/>let mut _435: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _436: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _437: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _438: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _439: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _440: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _441: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _442: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _443: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _444: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _445: &amp;ReErased u64;<br align="left"/>let _446: &amp;ReErased u64;<br align="left"/>let mut _447: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _448: &amp;ReErased u64;<br align="left"/>let _449: &amp;ReErased u64;<br align="left"/>let mut _450: anchor_lang::error::Error;<br align="left"/>let mut _451: error::ErrorCode;<br align="left"/>let _452: ();<br align="left"/>let mut _453: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, ()&gt;;<br align="left"/>let mut _454: std::result::Result&lt;(), anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _455: &amp;ReErased solana_program::instruction::Instruction;<br align="left"/>let _456: &amp;ReErased solana_program::instruction::Instruction;<br align="left"/>let _457: solana_program::instruction::Instruction;<br align="left"/>let mut _458: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _459: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _460: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _461: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _462: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _463: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _464: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _465: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _466: u64;<br align="left"/>let mut _467: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _468: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;; 3_usize];<br align="left"/>let _469: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;; 3_usize];<br align="left"/>let _470: [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;; 3_usize];<br align="left"/>let mut _471: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _472: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _473: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _474: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _475: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _476: &amp;ReErased anchor_lang::prelude::Program&lt;ReErased, anchor_lang::system_program::System&gt;;<br align="left"/>let mut _477: isize;<br align="left"/>let _478: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _479: !;<br align="left"/>let mut _480: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _481: ();<br align="left"/>let mut _482: ();<br align="left"/>let mut _483: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _484: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _485: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _486: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _487: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _488: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _489: &amp;ReErased mut instructions::user::InitializeUser&lt;ReErased&gt;;<br align="left"/>let mut _490: &amp;ReErased mut instructions::user::InitializeUser&lt;ReErased&gt;;<br align="left"/>let mut _491: &amp;ReErased mut instructions::user::InitializeUser&lt;ReErased&gt;;<br align="left"/>let mut _492: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _493: &amp;ReErased mut instructions::user::InitializeUser&lt;ReErased&gt;;<br align="left"/>let mut _494: &amp;ReErased mut instructions::user::InitializeUser&lt;ReErased&gt;;<br align="left"/>let mut _495: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _496: &amp;ReErased mut instructions::user::InitializeUser&lt;ReErased&gt;;<br align="left"/>let mut _497: &amp;ReErased mut instructions::user::InitializeUser&lt;ReErased&gt;;<br align="left"/>let mut _498: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _499: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _500: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _501: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _502: &amp;ReErased mut instructions::user::InitializeUser&lt;ReErased&gt;;<br align="left"/>let mut _503: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _504: &amp;ReErased mut instructions::user::InitializeUser&lt;ReErased&gt;;<br align="left"/>let mut _505: &amp;ReErased mut instructions::user::InitializeUser&lt;ReErased&gt;;<br align="left"/>let mut _506: &amp;ReErased mut instructions::user::InitializeUser&lt;ReErased&gt;;<br align="left"/>let mut _507: &amp;ReErased mut instructions::user::InitializeUser&lt;ReErased&gt;;<br align="left"/>let mut _508: &amp;ReErased mut instructions::user::InitializeUser&lt;ReErased&gt;;<br align="left"/>let mut _509: &amp;ReErased mut instructions::user::InitializeUser&lt;ReErased&gt;;<br align="left"/>let mut _510: bool;<br align="left"/>let mut _511: isize;<br align="left"/>let mut _512: isize;<br align="left"/>let mut _513: isize;<br align="left"/>let mut _514: isize;<br align="left"/>let mut _515: isize;<br align="left"/>let mut _516: isize;<br align="left"/>let mut _517: isize;<br align="left"/>let mut _518: isize;<br align="left"/>let mut _519: isize;<br align="left"/>let mut _520: isize;<br align="left"/>let mut _521: isize;<br align="left"/>let mut _522: isize;<br align="left"/>let mut _523: isize;<br align="left"/>let mut _524: isize;<br align="left"/>let mut _525: isize;<br align="left"/>let mut _526: isize;<br align="left"/>let mut _527: isize;<br align="left"/>let mut _528: isize;<br align="left"/>let mut _529: isize;<br align="left"/>let mut _530: isize;<br align="left"/>let mut _531: isize;<br align="left"/>let mut _532: isize;<br align="left"/>let mut _533: isize;<br align="left"/>let mut _534: isize;<br align="left"/>let mut _535: isize;<br align="left"/>let mut _536: isize;<br align="left"/>let mut _537: isize;<br align="left"/>let mut _538: isize;<br align="left"/>let mut _539: isize;<br align="left"/>let mut _540: isize;<br align="left"/>let mut _541: isize;<br align="left"/>let mut _542: isize;<br align="left"/>let mut _543: isize;<br align="left"/>let mut _544: isize;<br align="left"/>let mut _545: isize;<br align="left"/>let mut _546: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _547: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _548: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _549: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _550: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _551: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug sub_account_id =&gt; _2;<br align="left"/>debug name =&gt; _3;<br align="left"/>debug user_key =&gt; _4;<br align="left"/>debug user =&gt; _6;<br align="left"/>debug residual =&gt; _14;<br align="left"/>debug val =&gt; _17;<br align="left"/>debug remaining_accounts_iter =&gt; _32;<br align="left"/>debug user_stats =&gt; _36;<br align="left"/>debug residual =&gt; _43;<br align="left"/>debug val =&gt; _46;<br align="left"/>debug residual =&gt; _54;<br align="left"/>debug val =&gt; _57;<br align="left"/>debug referrer =&gt; _65;<br align="left"/>debug referrer_stats =&gt; _66;<br align="left"/>debug residual =&gt; _72;<br align="left"/>debug val =&gt; _75;<br align="left"/>debug referrer =&gt; _76;<br align="left"/>debug referrer =&gt; _82;<br align="left"/>debug referrer_stats =&gt; _83;<br align="left"/>debug referrer =&gt; _84;<br align="left"/>debug residual =&gt; _91;<br align="left"/>debug val =&gt; _94;<br align="left"/>debug referrer_stats =&gt; _95;<br align="left"/>debug residual =&gt; _102;<br align="left"/>debug val =&gt; _105;<br align="left"/>debug error_code =&gt; _114;<br align="left"/>debug res =&gt; _121;<br align="left"/>debug residual =&gt; _136;<br align="left"/>debug val =&gt; _139;<br align="left"/>debug error_code =&gt; _151;<br align="left"/>debug res =&gt; _158;<br align="left"/>debug residual =&gt; _173;<br align="left"/>debug val =&gt; _176;<br align="left"/>debug whitelist_mint =&gt; _192;<br align="left"/>debug residual =&gt; _209;<br align="left"/>debug val =&gt; _212;<br align="left"/>debug residual =&gt; _219;<br align="left"/>debug val =&gt; _222;<br align="left"/>debug error_code =&gt; _232;<br align="left"/>debug res =&gt; _239;<br align="left"/>debug res =&gt; _258;<br align="left"/>debug residual =&gt; _278;<br align="left"/>debug val =&gt; _281;<br align="left"/>debug residual =&gt; _289;<br align="left"/>debug val =&gt; _292;<br align="left"/>debug state =&gt; _295;<br align="left"/>debug residual =&gt; _306;<br align="left"/>debug val =&gt; _309;<br align="left"/>debug max_number_of_sub_accounts =&gt; _312;<br align="left"/>debug error_code =&gt; _327;<br align="left"/>debug res =&gt; _334;<br align="left"/>debug residual =&gt; _349;<br align="left"/>debug val =&gt; _352;<br align="left"/>debug now_ts =&gt; _353;<br align="left"/>debug residual =&gt; _358;<br align="left"/>debug val =&gt; _361;<br align="left"/>debug residual =&gt; _367;<br align="left"/>debug val =&gt; _370;<br align="left"/>debug init_fee =&gt; _398;<br align="left"/>debug residual =&gt; _405;<br align="left"/>debug val =&gt; _408;<br align="left"/>debug payer_lamports =&gt; _412;<br align="left"/>debug residual =&gt; _419;<br align="left"/>debug val =&gt; _422;<br align="left"/>debug res =&gt; _434;<br align="left"/>debug residual =&gt; _478;<br align="left"/>debug val =&gt; _481;<br align="left"/>>;
    bb0__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_510 = const false<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_489 = deref_copy (_1.1: &amp;mut instructions::user::InitializeUser&lt;'_&gt;)<br/>_5 = &amp;((*_489).0: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_4 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt; as anchor_lang::Key&gt;::key(move _5)</td></tr></table>>];
    bb1__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_490 = deref_copy (_1.1: &amp;mut instructions::user::InitializeUser&lt;'_&gt;)<br/>_10 = &amp;((*_490).0: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_9 = anchor_lang::prelude::AccountLoader::&lt;'_, User&gt;::load_init(move _10)</td></tr></table>>];
    bb2__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = error::ErrorCode::UnableToLoadAccountLoader<br/>_11 = std::result::Result::&lt;RefMut&lt;'_, User&gt;, error::ErrorCode&gt;::Err(move _12)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">_8 = std::result::Result::&lt;RefMut&lt;'_, User&gt;, anchor_lang::error::Error&gt;::or::&lt;error::ErrorCode&gt;(move _9, move _11)</td></tr></table>>];
    bb3__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = &lt;std::result::Result&lt;RefMut&lt;'_, User&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _8)</td></tr></table>>];
    bb4__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_13 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _13)</td></tr></table>>];
    bb5__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>_17 = move ((_7 as Continue).0: std::cell::RefMut&lt;'_, state::user::User&gt;)<br/>_510 = const true<br/>_6 = move _17<br/>StorageDead(_17)<br/>_513 = discriminant(_7)<br/>StorageDead(_7)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_491 = deref_copy (_1.1: &amp;mut instructions::user::InitializeUser&lt;'_&gt;)<br/>_19 = &amp;((*_491).3: anchor_lang::prelude::Signer&lt;'_&gt;)<br/></td></tr><tr><td align="left">_18 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::Key&gt;::key(move _19)</td></tr></table>>];
    bb6__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb7__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = ((_7 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_16)<br/>_16 = _14<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _16)</td></tr></table>>];
    bb8__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_14)<br/>_511 = discriminant(_7)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_21 = &amp;mut _6<br/></td></tr><tr><td align="left">_20 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _21)</td></tr></table>>];
    bb10__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>((*_20).0: anchor_lang::prelude::Pubkey) = move _18<br/>StorageDead(_18)<br/>StorageDead(_20)<br/>StorageLive(_22)<br/>_22 = _2<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_24 = &amp;mut _6<br/></td></tr><tr><td align="left">_23 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _24)</td></tr></table>>];
    bb11__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>((*_23).18: u16) = move _22<br/>StorageDead(_22)<br/>StorageDead(_23)<br/>StorageLive(_25)<br/>_25 = _3<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_27 = &amp;mut _6<br/></td></tr><tr><td align="left">_26 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _27)</td></tr></table>>];
    bb12__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>((*_26).2: [u8; 32]) = move _25<br/>StorageDead(_25)<br/>StorageDead(_26)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_29 = &amp;mut _6<br/></td></tr><tr><td align="left">_28 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _29)</td></tr></table>>];
    bb13__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>((*_28).15: u32) = const 1_u32<br/>StorageDead(_28)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>_31 = &amp;mut _6<br/></td></tr><tr><td align="left">_30 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _31)</td></tr></table>>];
    bb14__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>((*_30).17: u16) = const 1_u16<br/>StorageDead(_30)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>_492 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_35 = &amp;(*_492)<br/></td></tr><tr><td align="left">_34 = core::slice::&lt;impl [anchor_lang::prelude::AccountInfo&lt;'_&gt;]&gt;::iter(move _35)</td></tr></table>>];
    bb15__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/></td></tr><tr><td align="left">_33 = &lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as Iterator&gt;::peekable(move _34)</td></tr></table>>];
    bb16__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>_32 = &amp;mut _33<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_493 = deref_copy (_1.1: &amp;mut instructions::user::InitializeUser&lt;'_&gt;)<br/>_40 = &amp;((*_493).1: anchor_lang::prelude::AccountLoader&lt;'_, state::user::UserStats&gt;)<br/></td></tr><tr><td align="left">_39 = anchor_lang::prelude::AccountLoader::&lt;'_, UserStats&gt;::load_mut(move _40)</td></tr></table>>];
    bb17__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageLive(_41)<br/>_41 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_38 = std::result::Result::&lt;RefMut&lt;'_, UserStats&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _39, move _41)</td></tr></table>>];
    bb18__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">_37 = &lt;std::result::Result&lt;RefMut&lt;'_, UserStats&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _38)</td></tr></table>>];
    bb19__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>_42 = discriminant(_37)<br/></td></tr><tr><td align="left">switchInt(move _42)</td></tr></table>>];
    bb20__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_46)<br/>_46 = move ((_37 as Continue).0: std::cell::RefMut&lt;'_, state::user::UserStats&gt;)<br/>_36 = move _46<br/>StorageDead(_46)<br/>_517 = discriminant(_37)<br/>StorageDead(_37)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>_52 = &amp;_36<br/></td></tr><tr><td align="left">_51 = &lt;RefMut&lt;'_, UserStats&gt; as Deref&gt;::deref(move _52)</td></tr></table>>];
    bb21__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_43)<br/>_43 = ((_37 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_45)<br/>_45 = _43<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _45)</td></tr></table>>];
    bb22__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_43)<br/>_515 = discriminant(_37)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>_50 = ((*_51).11: u16)<br/></td></tr><tr><td align="left">_49 = &lt;u16 as SafeMath&gt;::safe_add(move _50, const 1_u16)</td></tr></table>>];
    bb24__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/></td></tr><tr><td align="left">_48 = &lt;std::result::Result&lt;u16, error::ErrorCode&gt; as Try&gt;::branch(move _49)</td></tr></table>>];
    bb25__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>_53 = discriminant(_48)<br/></td></tr><tr><td align="left">switchInt(move _53)</td></tr></table>>];
    bb26__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_57)<br/>_57 = ((_48 as Continue).0: u16)<br/>_47 = _57<br/>StorageDead(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>_59 = &amp;mut _36<br/></td></tr><tr><td align="left">_58 = &lt;RefMut&lt;'_, UserStats&gt; as DerefMut&gt;::deref_mut(move _59)</td></tr></table>>];
    bb27__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_54)<br/>_54 = ((_48 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_56)<br/>_56 = _54<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _56)</td></tr></table>>];
    bb28__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_54)<br/>StorageDead(_47)<br/>StorageDead(_51)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>((*_58).11: u16) = move _47<br/>StorageDead(_47)<br/>StorageDead(_58)<br/>StorageDead(_51)<br/>StorageDead(_48)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>_64 = &amp;_36<br/></td></tr><tr><td align="left">_63 = &lt;RefMut&lt;'_, UserStats&gt; as Deref&gt;::deref(move _64)</td></tr></table>>];
    bb30__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>_62 = ((*_63).12: u16)<br/>_61 = Eq(move _62, const 0_u16)<br/></td></tr><tr><td align="left">switchInt(move _61)</td></tr></table>>];
    bb31__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_62)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>_70 = &amp;mut (*_32)<br/></td></tr><tr><td align="left">_69 = get_referrer_and_referrer_stats(move _70)</td></tr></table>>];
    bb32__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/></td></tr><tr><td align="left">_68 = &lt;std::result::Result&lt;(Option&lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt;&gt;, Option&lt;anchor_lang::prelude::AccountLoader&lt;'_, UserStats&gt;&gt;), error::ErrorCode&gt; as Try&gt;::branch(move _69)</td></tr></table>>];
    bb33__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>_71 = discriminant(_68)<br/></td></tr><tr><td align="left">switchInt(move _71)</td></tr></table>>];
    bb34__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_75)<br/>_75 = move ((_68 as Continue).0: (std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;&gt;, std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;'_, state::user::UserStats&gt;&gt;))<br/>_67 = move _75<br/>StorageDead(_75)<br/>StorageLive(_65)<br/>_65 = move (_67.0: std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;&gt;)<br/>StorageLive(_66)<br/>_66 = move (_67.1: std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;'_, state::user::UserStats&gt;&gt;)<br/>StorageDead(_68)<br/>StorageDead(_67)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>_78 = move _65<br/>StorageLive(_79)<br/>_79 = move _66<br/>_77 = (move _78, move _79)<br/>StorageDead(_79)<br/>StorageDead(_78)<br/>_81 = discriminant((_77.0: std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;&gt;))<br/></td></tr><tr><td align="left">switchInt(move _81)</td></tr></table>>];
    bb35__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_72)<br/>_72 = ((_68 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_74)<br/>_74 = _72<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _74)</td></tr></table>>];
    bb36__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageDead(_72)<br/>StorageDead(_68)<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left">_76 = &lt;anchor_lang::prelude::Pubkey as Default&gt;::default()</td></tr></table>>];
    bb38__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">_80 = discriminant((_77.1: std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;'_, state::user::UserStats&gt;&gt;))<br/></td></tr><tr><td align="left">switchInt(move _80)</td></tr></table>>];
    bb39__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_82)<br/>_82 = move (((_77.0: std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;&gt;) as Some).0: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/>StorageLive(_83)<br/>_83 = move (((_77.1: std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;'_, state::user::UserStats&gt;&gt;) as Some).0: anchor_lang::prelude::AccountLoader&lt;'_, state::user::UserStats&gt;)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>_88 = &amp;_82<br/></td></tr><tr><td align="left">_87 = anchor_lang::prelude::AccountLoader::&lt;'_, User&gt;::load(move _88)</td></tr></table>>];
    bb40__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>StorageLive(_89)<br/>_89 = {closure@programs/drift/src/macros.rs:70:40: 70:43}<br/></td></tr><tr><td align="left">_86 = std::result::Result::&lt;Ref&lt;'_, User&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:70:40: 70:43}&gt;(move _87, move _89)</td></tr></table>>];
    bb41__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>StorageDead(_87)<br/></td></tr><tr><td align="left">_85 = &lt;std::result::Result&lt;Ref&lt;'_, User&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _86)</td></tr></table>>];
    bb42__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>_90 = discriminant(_85)<br/></td></tr><tr><td align="left">switchInt(move _90)</td></tr></table>>];
    bb43__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageLive(_94)<br/>_94 = move ((_85 as Continue).0: std::cell::Ref&lt;'_, state::user::User&gt;)<br/>_84 = move _94<br/>StorageDead(_94)<br/>_521 = discriminant(_85)<br/>StorageDead(_85)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>_99 = &amp;_83<br/></td></tr><tr><td align="left">_98 = anchor_lang::prelude::AccountLoader::&lt;'_, UserStats&gt;::load_mut(move _99)</td></tr></table>>];
    bb44__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_91)<br/>_91 = ((_85 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_93)<br/>_93 = _91<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _93)</td></tr></table>>];
    bb45__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageDead(_91)<br/>_519 = discriminant(_85)<br/>StorageDead(_85)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/>StorageLive(_100)<br/>_100 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_97 = std::result::Result::&lt;RefMut&lt;'_, UserStats&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _98, move _100)</td></tr></table>>];
    bb47__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>StorageDead(_98)<br/></td></tr><tr><td align="left">_96 = &lt;std::result::Result&lt;RefMut&lt;'_, UserStats&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _97)</td></tr></table>>];
    bb48__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>_101 = discriminant(_96)<br/></td></tr><tr><td align="left">switchInt(move _101)</td></tr></table>>];
    bb49__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageLive(_105)<br/>_105 = move ((_96 as Continue).0: std::cell::RefMut&lt;'_, state::user::UserStats&gt;)<br/>_95 = move _105<br/>StorageDead(_105)<br/>_525 = discriminant(_96)<br/>StorageDead(_96)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>_112 = &amp;_84<br/></td></tr><tr><td align="left">_111 = &lt;Ref&lt;'_, User&gt; as Deref&gt;::deref(move _112)</td></tr></table>>];
    bb50__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageLive(_102)<br/>_102 = ((_96 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_104)<br/>_104 = _102<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _104)</td></tr></table>>];
    bb51__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/>StorageDead(_102)<br/>_523 = discriminant(_96)<br/>StorageDead(_96)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb52__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>_110 = ((*_111).18: u16)<br/>_109 = Eq(move _110, const 0_u16)<br/></td></tr><tr><td align="left">switchInt(move _109)</td></tr></table>>];
    bb53__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/>StorageDead(_110)<br/>StorageLive(_113)<br/>_113 = ()<br/>_108 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _113)<br/>StorageDead(_113)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/>StorageDead(_110)<br/>StorageLive(_114)<br/>_114 = error::ErrorCode::InvalidReferrer<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>_488 = const _<br/>_125 = &amp;(*_488)<br/>_124 = &amp;(*_125)<br/>_123 = move _124 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_124)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>_133 = &amp;_114<br/>_132 = &amp;(*_133)<br/></td></tr><tr><td align="left">_131 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _132)</td></tr></table>>];
    bb55__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_132)<br/>_130 = [move _131]<br/>StorageDead(_131)<br/>_129 = &amp;_130<br/>_128 = &amp;(*_129)<br/>_127 = move _128 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_128)<br/></td></tr><tr><td align="left">_122 = Arguments::&lt;'_&gt;::new_v1(move _123, move _127)</td></tr></table>>];
    bb56__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/>StorageDead(_123)<br/></td></tr><tr><td align="left">_121 = format(move _122)</td></tr></table>>];
    bb57__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/>StorageDead(_133)<br/>StorageDead(_130)<br/>StorageDead(_129)<br/>StorageDead(_125)<br/>_120 = move _121<br/>StorageDead(_121)<br/>_119 = &amp;_120<br/>_118 = &amp;(*_119)<br/></td></tr><tr><td align="left">_117 = &lt;String as Deref&gt;::deref(move _118)</td></tr></table>>];
    bb58__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">_116 = &amp;(*_117)<br/>StorageDead(_118)<br/></td></tr><tr><td align="left">_115 = solana_program::log::sol_log(move _116)</td></tr></table>>];
    bb59__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_116)<br/></td></tr><tr><td align="left">drop(_120)</td></tr></table>>];
    bb60__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/>StorageDead(_119)<br/>StorageDead(_117)<br/>StorageDead(_115)<br/>StorageLive(_134)<br/>_134 = _114<br/>_108 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _134)<br/>StorageDead(_134)<br/>StorageDead(_114)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb61__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/></td></tr><tr><td align="left">_107 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _108)</td></tr></table>>];
    bb62__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/>_135 = discriminant(_107)<br/></td></tr><tr><td align="left">switchInt(move _135)</td></tr></table>>];
    bb63__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageLive(_139)<br/>_139 = ((_107 as Continue).0: ())<br/>_106 = _139<br/>StorageDead(_139)<br/>StorageDead(_107)<br/>StorageDead(_106)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>_146 = &amp;_84<br/></td></tr><tr><td align="left">_145 = &lt;Ref&lt;'_, User&gt; as Deref&gt;::deref(move _146)</td></tr></table>>];
    bb64__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageLive(_136)<br/>_136 = ((_107 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_138)<br/>_138 = _136<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _138)</td></tr></table>>];
    bb65__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/>StorageDead(_136)<br/>StorageDead(_107)<br/>StorageDead(_106)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb66__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_146)<br/>_144 = &amp;((*_145).0: anchor_lang::prelude::Pubkey)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>_149 = &amp;_95<br/></td></tr><tr><td align="left">_148 = &lt;RefMut&lt;'_, UserStats&gt; as Deref&gt;::deref(move _149)</td></tr></table>>];
    bb67__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_149)<br/>_147 = &amp;((*_148).0: anchor_lang::prelude::Pubkey)<br/></td></tr><tr><td align="left">_143 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _144, move _147)</td></tr></table>>];
    bb68__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left">switchInt(move _143)</td></tr></table>>];
    bb69__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_148)<br/>StorageDead(_147)<br/>StorageDead(_145)<br/>StorageDead(_144)<br/>StorageLive(_150)<br/>_150 = ()<br/>_142 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _150)<br/>StorageDead(_150)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb70__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_148)<br/>StorageDead(_147)<br/>StorageDead(_145)<br/>StorageDead(_144)<br/>StorageLive(_151)<br/>_151 = error::ErrorCode::ReferrerAndReferrerStatsAuthorityUnequal<br/>StorageLive(_152)<br/>StorageLive(_153)<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>StorageLive(_161)<br/>StorageLive(_162)<br/>_487 = const _<br/>_162 = &amp;(*_487)<br/>_161 = &amp;(*_162)<br/>_160 = move _161 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_161)<br/>StorageLive(_164)<br/>StorageLive(_165)<br/>StorageLive(_166)<br/>StorageLive(_167)<br/>StorageLive(_168)<br/>StorageLive(_169)<br/>StorageLive(_170)<br/>_170 = &amp;_151<br/>_169 = &amp;(*_170)<br/></td></tr><tr><td align="left">_168 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _169)</td></tr></table>>];
    bb71__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_169)<br/>_167 = [move _168]<br/>StorageDead(_168)<br/>_166 = &amp;_167<br/>_165 = &amp;(*_166)<br/>_164 = move _165 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_165)<br/></td></tr><tr><td align="left">_159 = Arguments::&lt;'_&gt;::new_v1(move _160, move _164)</td></tr></table>>];
    bb72__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_164)<br/>StorageDead(_160)<br/></td></tr><tr><td align="left">_158 = format(move _159)</td></tr></table>>];
    bb73__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_159)<br/>StorageDead(_170)<br/>StorageDead(_167)<br/>StorageDead(_166)<br/>StorageDead(_162)<br/>_157 = move _158<br/>StorageDead(_158)<br/>_156 = &amp;_157<br/>_155 = &amp;(*_156)<br/></td></tr><tr><td align="left">_154 = &lt;String as Deref&gt;::deref(move _155)</td></tr></table>>];
    bb74__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">_153 = &amp;(*_154)<br/>StorageDead(_155)<br/></td></tr><tr><td align="left">_152 = solana_program::log::sol_log(move _153)</td></tr></table>>];
    bb75__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_153)<br/></td></tr><tr><td align="left">drop(_157)</td></tr></table>>];
    bb76__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_157)<br/>StorageDead(_156)<br/>StorageDead(_154)<br/>StorageDead(_152)<br/>StorageLive(_171)<br/>_171 = _151<br/>_142 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _171)<br/>StorageDead(_171)<br/>StorageDead(_151)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb77__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_143)<br/></td></tr><tr><td align="left">_141 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _142)</td></tr></table>>];
    bb78__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_142)<br/>_172 = discriminant(_141)<br/></td></tr><tr><td align="left">switchInt(move _172)</td></tr></table>>];
    bb79__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageLive(_176)<br/>_176 = ((_141 as Continue).0: ())<br/>_140 = _176<br/>StorageDead(_176)<br/>StorageDead(_141)<br/>StorageDead(_140)<br/>StorageLive(_177)<br/>StorageLive(_178)<br/>_179 = CheckedAdd(const _, const 0_u8)<br/></td></tr><tr><td align="left">assert(!move (_179.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, const _, const 0_u8)</td></tr></table>>];
    bb80__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageLive(_173)<br/>_173 = ((_141 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_175)<br/>_175 = _173<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _175)</td></tr></table>>];
    bb81__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_175)<br/>StorageDead(_173)<br/>StorageDead(_141)<br/>StorageDead(_140)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb82__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">_178 = move (_179.0: u8)<br/>_177 = move _178 as u8 (IntToInt)<br/>StorageDead(_178)<br/>StorageLive(_180)<br/>StorageLive(_181)<br/>_181 = &amp;mut _95<br/></td></tr><tr><td align="left">_180 = &lt;RefMut&lt;'_, UserStats&gt; as DerefMut&gt;::deref_mut(move _181)</td></tr></table>>];
    bb83__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_181)<br/>((*_180).13: u8) = BitOr(((*_180).13: u8), move _177)<br/>StorageDead(_177)<br/>StorageDead(_180)<br/>StorageLive(_182)<br/>StorageLive(_183)<br/>_184 = CheckedAdd(const _, const 0_u8)<br/></td></tr><tr><td align="left">assert(!move (_184.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, const _, const 0_u8)</td></tr></table>>];
    bb84__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">_183 = move (_184.0: u8)<br/>_182 = move _183 as u8 (IntToInt)<br/>StorageDead(_183)<br/>StorageLive(_185)<br/>StorageLive(_186)<br/>_186 = &amp;mut _36<br/></td></tr><tr><td align="left">_185 = &lt;RefMut&lt;'_, UserStats&gt; as DerefMut&gt;::deref_mut(move _186)</td></tr></table>>];
    bb85__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_186)<br/>((*_185).13: u8) = BitOr(((*_185).13: u8), move _182)<br/>StorageDead(_182)<br/>StorageDead(_185)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>_188 = &amp;_84<br/></td></tr><tr><td align="left">_187 = &lt;Ref&lt;'_, User&gt; as Deref&gt;::deref(move _188)</td></tr></table>>];
    bb86__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_188)<br/>_76 = ((*_187).0: anchor_lang::prelude::Pubkey)<br/></td></tr><tr><td align="left">drop(_95)</td></tr></table>>];
    bb87__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/></td></tr><tr><td align="left">drop(_84)</td></tr></table>>];
    bb88__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>StorageDead(_187)<br/>StorageDead(_83)<br/>StorageDead(_82)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb89__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>StorageLive(_189)<br/>_189 = _76<br/>StorageLive(_190)<br/>StorageLive(_191)<br/>_191 = &amp;mut _36<br/></td></tr><tr><td align="left">_190 = &lt;RefMut&lt;'_, UserStats&gt; as DerefMut&gt;::deref_mut(move _191)</td></tr></table>>];
    bb90__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_191)<br/>((*_190).1: anchor_lang::prelude::Pubkey) = move _189<br/>StorageDead(_189)<br/>StorageDead(_190)<br/>_60 = const ()<br/>StorageDead(_76)<br/>StorageDead(_66)<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb91__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_62)<br/>_60 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb92__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_60)<br/>StorageLive(_192)<br/>StorageLive(_193)<br/>StorageLive(_194)<br/>_494 = deref_copy (_1.1: &amp;mut instructions::user::InitializeUser&lt;'_&gt;)<br/>_495 = deref_copy ((*_494).2: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_546 = (((_495.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_194 = &amp;(*_546)<br/></td></tr><tr><td align="left">_193 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _194)</td></tr></table>>];
    bb93__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_194)<br/>_192 = &amp;((*_193).1: anchor_lang::prelude::Pubkey)<br/>StorageLive(_195)<br/>StorageLive(_196)<br/>StorageLive(_197)<br/>_197 = &amp;(*_192)<br/>StorageLive(_198)<br/>StorageLive(_199)<br/>StorageLive(_200)<br/></td></tr><tr><td align="left">_200 = &lt;anchor_lang::prelude::Pubkey as Default&gt;::default()</td></tr></table>>];
    bb94__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">_199 = &amp;_200<br/>_198 = &amp;(*_199)<br/></td></tr><tr><td align="left">_196 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _197, move _198)</td></tr></table>>];
    bb95__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left">switchInt(move _196)</td></tr></table>>];
    bb96__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_198)<br/>StorageDead(_197)<br/>StorageDead(_200)<br/>StorageDead(_199)<br/>_195 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb97__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_198)<br/>StorageDead(_197)<br/>StorageDead(_200)<br/>StorageDead(_199)<br/>StorageLive(_201)<br/>StorageLive(_202)<br/>StorageLive(_203)<br/>StorageLive(_204)<br/>StorageLive(_205)<br/>StorageLive(_206)<br/>StorageLive(_207)<br/>_207 = &amp;mut (*_32)<br/></td></tr><tr><td align="left">_206 = get_whitelist_token(move _207)</td></tr></table>>];
    bb98__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_207)<br/></td></tr><tr><td align="left">_205 = &lt;std::result::Result&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _206)</td></tr></table>>];
    bb99__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageDead(_206)<br/>_208 = discriminant(_205)<br/></td></tr><tr><td align="left">switchInt(move _208)</td></tr></table>>];
    bb100__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageLive(_212)<br/>_212 = move ((_205 as Continue).0: anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;)<br/>_204 = move _212<br/>StorageDead(_212)<br/>StorageLive(_213)<br/>_213 = &amp;(*_192)<br/>StorageLive(_214)<br/>StorageLive(_215)<br/>StorageLive(_216)<br/>StorageLive(_217)<br/>_496 = deref_copy (_1.1: &amp;mut instructions::user::InitializeUser&lt;'_&gt;)<br/>_217 = &amp;((*_496).3: anchor_lang::prelude::Signer&lt;'_&gt;)<br/></td></tr><tr><td align="left">_216 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::Key&gt;::key(move _217)</td></tr></table>>];
    bb101__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageLive(_209)<br/>_209 = ((_205 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_211)<br/>_211 = _209<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _211)</td></tr></table>>];
    bb102__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_211)<br/>StorageDead(_209)<br/>StorageDead(_204)<br/>StorageDead(_203)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb103__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_217)<br/>_215 = &amp;_216<br/>_214 = &amp;(*_215)<br/></td></tr><tr><td align="left">_203 = validate_whitelist_token(move _204, move _213, move _214)</td></tr></table>>];
    bb104__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_214)<br/>StorageDead(_213)<br/>StorageDead(_204)<br/></td></tr><tr><td align="left">_202 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _203)</td></tr></table>>];
    bb105__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_203)<br/>_218 = discriminant(_202)<br/></td></tr><tr><td align="left">switchInt(move _218)</td></tr></table>>];
    bb106__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageLive(_222)<br/>_222 = ((_202 as Continue).0: ())<br/>_201 = _222<br/>StorageDead(_222)<br/>StorageDead(_216)<br/>StorageDead(_215)<br/>StorageDead(_205)<br/>StorageDead(_202)<br/>StorageDead(_201)<br/>_195 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb107__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageLive(_219)<br/>_219 = ((_202 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_221)<br/>_221 = _219<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _221)</td></tr></table>>];
    bb108__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageDead(_221)<br/>StorageDead(_219)<br/>StorageDead(_216)<br/>StorageDead(_215)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb109__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageDead(_196)<br/>StorageDead(_195)<br/>StorageLive(_223)<br/>StorageLive(_224)<br/>StorageLive(_225)<br/>StorageLive(_226)<br/>StorageLive(_227)<br/>_227 = _2<br/>StorageLive(_228)<br/>StorageLive(_229)<br/>StorageLive(_230)<br/>_230 = &amp;_36<br/></td></tr><tr><td align="left">_229 = &lt;RefMut&lt;'_, UserStats&gt; as Deref&gt;::deref(move _230)</td></tr></table>>];
    bb110__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_230)<br/>_228 = ((*_229).12: u16)<br/>_226 = Eq(move _227, move _228)<br/></td></tr><tr><td align="left">switchInt(move _226)</td></tr></table>>];
    bb111__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_229)<br/>StorageDead(_228)<br/>StorageDead(_227)<br/>StorageLive(_231)<br/>_231 = ()<br/>_225 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _231)<br/>StorageDead(_231)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb112__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageDead(_229)<br/>StorageDead(_228)<br/>StorageDead(_227)<br/>StorageLive(_232)<br/>_232 = error::ErrorCode::InvalidUserSubAccountId<br/>StorageLive(_233)<br/>StorageLive(_234)<br/>StorageLive(_235)<br/>StorageLive(_236)<br/>StorageLive(_237)<br/>StorageLive(_238)<br/>StorageLive(_239)<br/>StorageLive(_240)<br/>StorageLive(_241)<br/>StorageLive(_242)<br/>StorageLive(_243)<br/>_486 = const _<br/>_243 = &amp;(*_486)<br/>_242 = &amp;(*_243)<br/>_241 = move _242 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_242)<br/>StorageLive(_245)<br/>StorageLive(_246)<br/>StorageLive(_247)<br/>StorageLive(_248)<br/>StorageLive(_249)<br/>StorageLive(_250)<br/>StorageLive(_251)<br/>_251 = &amp;_232<br/>_250 = &amp;(*_251)<br/></td></tr><tr><td align="left">_249 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _250)</td></tr></table>>];
    bb113__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageDead(_250)<br/>_248 = [move _249]<br/>StorageDead(_249)<br/>_247 = &amp;_248<br/>_246 = &amp;(*_247)<br/>_245 = move _246 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_246)<br/></td></tr><tr><td align="left">_240 = Arguments::&lt;'_&gt;::new_v1(move _241, move _245)</td></tr></table>>];
    bb114__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageDead(_245)<br/>StorageDead(_241)<br/></td></tr><tr><td align="left">_239 = format(move _240)</td></tr></table>>];
    bb115__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageDead(_240)<br/>StorageDead(_251)<br/>StorageDead(_248)<br/>StorageDead(_247)<br/>StorageDead(_243)<br/>_238 = move _239<br/>StorageDead(_239)<br/>_237 = &amp;_238<br/>_236 = &amp;(*_237)<br/></td></tr><tr><td align="left">_235 = &lt;String as Deref&gt;::deref(move _236)</td></tr></table>>];
    bb116__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">_234 = &amp;(*_235)<br/>StorageDead(_236)<br/></td></tr><tr><td align="left">_233 = solana_program::log::sol_log(move _234)</td></tr></table>>];
    bb117__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageDead(_234)<br/></td></tr><tr><td align="left">drop(_238)</td></tr></table>>];
    bb118__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageDead(_238)<br/>StorageDead(_237)<br/>StorageDead(_235)<br/>StorageDead(_233)<br/>StorageLive(_252)<br/>StorageLive(_253)<br/>StorageLive(_254)<br/>StorageLive(_255)<br/>StorageLive(_256)<br/>StorageLive(_257)<br/>StorageLive(_258)<br/>StorageLive(_259)<br/>StorageLive(_260)<br/>StorageLive(_261)<br/>StorageLive(_262)<br/>_485 = const _<br/>_262 = &amp;(*_485)<br/>_261 = &amp;(*_262)<br/>_260 = move _261 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_261)<br/>StorageLive(_264)<br/>StorageLive(_265)<br/>StorageLive(_266)<br/>StorageLive(_267)<br/>StorageLive(_268)<br/>StorageLive(_269)<br/>StorageLive(_270)<br/>_270 = &amp;_2<br/>_269 = &amp;(*_270)<br/></td></tr><tr><td align="left">_268 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _269)</td></tr></table>>];
    bb119__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageDead(_269)<br/>StorageLive(_271)<br/>StorageLive(_272)<br/>StorageLive(_273)<br/>StorageLive(_274)<br/>StorageLive(_275)<br/>_275 = &amp;_36<br/></td></tr><tr><td align="left">_274 = &lt;RefMut&lt;'_, UserStats&gt; as Deref&gt;::deref(move _275)</td></tr></table>>];
    bb120__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageDead(_275)<br/>_273 = &amp;((*_274).12: u16)<br/>_272 = &amp;(*_273)<br/></td></tr><tr><td align="left">_271 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _272)</td></tr></table>>];
    bb121__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageDead(_272)<br/>_267 = [move _268, move _271]<br/>StorageDead(_271)<br/>StorageDead(_268)<br/>_266 = &amp;_267<br/>_265 = &amp;(*_266)<br/>_264 = move _265 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_265)<br/></td></tr><tr><td align="left">_259 = Arguments::&lt;'_&gt;::new_v1(move _260, move _264)</td></tr></table>>];
    bb122__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageDead(_264)<br/>StorageDead(_260)<br/></td></tr><tr><td align="left">_258 = format(move _259)</td></tr></table>>];
    bb123__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageDead(_259)<br/>StorageDead(_274)<br/>StorageDead(_273)<br/>StorageDead(_270)<br/>StorageDead(_267)<br/>StorageDead(_266)<br/>StorageDead(_262)<br/>_257 = move _258<br/>StorageDead(_258)<br/>_256 = &amp;_257<br/>_255 = &amp;(*_256)<br/></td></tr><tr><td align="left">_254 = &lt;String as Deref&gt;::deref(move _255)</td></tr></table>>];
    bb124__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">_253 = &amp;(*_254)<br/>StorageDead(_255)<br/></td></tr><tr><td align="left">_252 = solana_program::log::sol_log(move _253)</td></tr></table>>];
    bb125__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageDead(_253)<br/></td></tr><tr><td align="left">drop(_257)</td></tr></table>>];
    bb126__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageDead(_257)<br/>StorageDead(_256)<br/>StorageDead(_254)<br/>StorageDead(_252)<br/>StorageLive(_276)<br/>_276 = _232<br/>_225 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _276)<br/>StorageDead(_276)<br/>StorageDead(_232)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb127__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageDead(_226)<br/></td></tr><tr><td align="left">_224 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _225)</td></tr></table>>];
    bb128__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageDead(_225)<br/>_277 = discriminant(_224)<br/></td></tr><tr><td align="left">switchInt(move _277)</td></tr></table>>];
    bb129__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">StorageLive(_281)<br/>_281 = ((_224 as Continue).0: ())<br/>_223 = _281<br/>StorageDead(_281)<br/>StorageDead(_224)<br/>StorageDead(_223)<br/>StorageLive(_282)<br/>StorageLive(_283)<br/>StorageLive(_284)<br/>StorageLive(_285)<br/>StorageLive(_286)<br/>StorageLive(_287)<br/>_287 = &amp;_36<br/></td></tr><tr><td align="left">_286 = &lt;RefMut&lt;'_, UserStats&gt; as Deref&gt;::deref(move _287)</td></tr></table>>];
    bb130__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageLive(_278)<br/>_278 = ((_224 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_280)<br/>_280 = _278<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _280)</td></tr></table>>];
    bb131__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageDead(_280)<br/>StorageDead(_278)<br/>StorageDead(_224)<br/>StorageDead(_223)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb132__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageDead(_287)<br/>_285 = ((*_286).12: u16)<br/></td></tr><tr><td align="left">_284 = &lt;u16 as SafeMath&gt;::safe_add(move _285, const 1_u16)</td></tr></table>>];
    bb133__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageDead(_285)<br/></td></tr><tr><td align="left">_283 = &lt;std::result::Result&lt;u16, error::ErrorCode&gt; as Try&gt;::branch(move _284)</td></tr></table>>];
    bb134__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageDead(_284)<br/>_288 = discriminant(_283)<br/></td></tr><tr><td align="left">switchInt(move _288)</td></tr></table>>];
    bb135__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageLive(_292)<br/>_292 = ((_283 as Continue).0: u16)<br/>_282 = _292<br/>StorageDead(_292)<br/>StorageLive(_293)<br/>StorageLive(_294)<br/>_294 = &amp;mut _36<br/></td></tr><tr><td align="left">_293 = &lt;RefMut&lt;'_, UserStats&gt; as DerefMut&gt;::deref_mut(move _294)</td></tr></table>>];
    bb136__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageLive(_289)<br/>_289 = ((_283 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_291)<br/>_291 = _289<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _291)</td></tr></table>>];
    bb137__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">StorageDead(_291)<br/>StorageDead(_289)<br/>StorageDead(_282)<br/>StorageDead(_286)<br/>StorageDead(_283)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb138__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">StorageDead(_294)<br/>((*_293).12: u16) = move _282<br/>StorageDead(_282)<br/>StorageDead(_293)<br/>StorageDead(_286)<br/>StorageDead(_283)<br/>StorageLive(_295)<br/>_497 = deref_copy (_1.1: &amp;mut instructions::user::InitializeUser&lt;'_&gt;)<br/>_295 = &amp;mut ((*_497).2: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>StorageLive(_296)<br/>StorageLive(_297)<br/>StorageLive(_298)<br/>StorageLive(_299)<br/>StorageLive(_300)<br/>StorageLive(_301)<br/>StorageLive(_302)<br/>StorageLive(_303)<br/>_498 = deref_copy (*_295)<br/>_547 = (((_498.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_303 = &amp;(*_547)<br/></td></tr><tr><td align="left">_302 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _303)</td></tr></table>>];
    bb139__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">StorageDead(_303)<br/>_301 = ((*_302).9: u64)<br/></td></tr><tr><td align="left">_300 = core::num::&lt;impl u64&gt;::checked_add(move _301, const 1_u64)</td></tr></table>>];
    bb140__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">StorageDead(_301)<br/>StorageLive(_304)<br/>_304 = {closure@programs/drift/src/error.rs:658:9: 658:11}<br/></td></tr><tr><td align="left">_299 = Option::&lt;u64&gt;::ok_or_else::&lt;error::ErrorCode, {closure@programs/drift/src/error.rs:658:9: 658:11}&gt;(move _300, move _304)</td></tr></table>>];
    bb141__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">StorageDead(_304)<br/>StorageDead(_300)<br/></td></tr><tr><td align="left">_298 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _299)</td></tr></table>>];
    bb142__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageDead(_299)<br/>_305 = discriminant(_298)<br/></td></tr><tr><td align="left">switchInt(move _305)</td></tr></table>>];
    bb143__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageLive(_309)<br/>_309 = ((_298 as Continue).0: u64)<br/>_297 = _309<br/>StorageDead(_309)<br/>StorageLive(_310)<br/>StorageLive(_311)<br/>_499 = deref_copy (*_295)<br/>_548 = (((_499.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_311 = &amp;mut (*_548)<br/></td></tr><tr><td align="left">_310 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as DerefMut&gt;::deref_mut(move _311)</td></tr></table>>];
    bb144__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">StorageLive(_306)<br/>_306 = ((_298 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_308)<br/>_308 = _306<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _308)</td></tr></table>>];
    bb145__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageDead(_308)<br/>StorageDead(_306)<br/>StorageDead(_297)<br/>StorageDead(_302)<br/>StorageDead(_298)<br/>StorageDead(_296)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb146__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">StorageDead(_311)<br/>((*_310).9: u64) = move _297<br/>_296 = const ()<br/>StorageDead(_297)<br/>StorageDead(_310)<br/>StorageDead(_302)<br/>StorageDead(_298)<br/>StorageDead(_296)<br/>StorageLive(_312)<br/>StorageLive(_313)<br/>StorageLive(_314)<br/>StorageLive(_315)<br/>_500 = deref_copy (*_295)<br/>_549 = (((_500.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_315 = &amp;(*_549)<br/></td></tr><tr><td align="left">_314 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _315)</td></tr></table>>];
    bb147__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left" balign="left">_313 = &amp;(*_314)<br/>StorageDead(_315)<br/></td></tr><tr><td align="left">_312 = state::state::State::max_number_of_sub_accounts(move _313)</td></tr></table>>];
    bb148__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left" balign="left">StorageDead(_313)<br/>StorageDead(_314)<br/>StorageLive(_316)<br/>StorageLive(_317)<br/>StorageLive(_318)<br/>StorageLive(_319)<br/>StorageLive(_320)<br/>_320 = _312<br/>_319 = Eq(move _320, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _319)</td></tr></table>>];
    bb149__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">149</td></tr><tr><td align="left" balign="left">StorageDead(_320)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb150__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">150</td></tr><tr><td align="left" balign="left">StorageDead(_320)<br/>StorageLive(_321)<br/>StorageLive(_322)<br/>StorageLive(_323)<br/>StorageLive(_324)<br/>_501 = deref_copy (*_295)<br/>_550 = (((_501.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_324 = &amp;(*_550)<br/></td></tr><tr><td align="left">_323 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _324)</td></tr></table>>];
    bb151__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">151</td></tr><tr><td align="left" balign="left">StorageDead(_324)<br/>_322 = ((*_323).9: u64)<br/>StorageLive(_325)<br/>_325 = _312<br/>_321 = Le(move _322, move _325)<br/></td></tr><tr><td align="left">switchInt(move _321)</td></tr></table>>];
    bb152__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">152</td></tr><tr><td align="left" balign="left">StorageDead(_325)<br/>StorageDead(_323)<br/>StorageDead(_322)<br/>StorageLive(_326)<br/>_326 = ()<br/>_318 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _326)<br/>StorageDead(_326)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb153__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">153</td></tr><tr><td align="left" balign="left">StorageDead(_325)<br/>StorageDead(_323)<br/>StorageDead(_322)<br/>StorageLive(_327)<br/>_327 = error::ErrorCode::MaxNumberOfUsers<br/>StorageLive(_328)<br/>StorageLive(_329)<br/>StorageLive(_330)<br/>StorageLive(_331)<br/>StorageLive(_332)<br/>StorageLive(_333)<br/>StorageLive(_334)<br/>StorageLive(_335)<br/>StorageLive(_336)<br/>StorageLive(_337)<br/>StorageLive(_338)<br/>_484 = const _<br/>_338 = &amp;(*_484)<br/>_337 = &amp;(*_338)<br/>_336 = move _337 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_337)<br/>StorageLive(_340)<br/>StorageLive(_341)<br/>StorageLive(_342)<br/>StorageLive(_343)<br/>StorageLive(_344)<br/>StorageLive(_345)<br/>StorageLive(_346)<br/>_346 = &amp;_327<br/>_345 = &amp;(*_346)<br/></td></tr><tr><td align="left">_344 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _345)</td></tr></table>>];
    bb154__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">154</td></tr><tr><td align="left" balign="left">StorageDead(_345)<br/>_343 = [move _344]<br/>StorageDead(_344)<br/>_342 = &amp;_343<br/>_341 = &amp;(*_342)<br/>_340 = move _341 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_341)<br/></td></tr><tr><td align="left">_335 = Arguments::&lt;'_&gt;::new_v1(move _336, move _340)</td></tr></table>>];
    bb155__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">155</td></tr><tr><td align="left" balign="left">StorageDead(_340)<br/>StorageDead(_336)<br/></td></tr><tr><td align="left">_334 = format(move _335)</td></tr></table>>];
    bb156__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">156</td></tr><tr><td align="left" balign="left">StorageDead(_335)<br/>StorageDead(_346)<br/>StorageDead(_343)<br/>StorageDead(_342)<br/>StorageDead(_338)<br/>_333 = move _334<br/>StorageDead(_334)<br/>_332 = &amp;_333<br/>_331 = &amp;(*_332)<br/></td></tr><tr><td align="left">_330 = &lt;String as Deref&gt;::deref(move _331)</td></tr></table>>];
    bb157__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">157</td></tr><tr><td align="left" balign="left">_329 = &amp;(*_330)<br/>StorageDead(_331)<br/></td></tr><tr><td align="left">_328 = solana_program::log::sol_log(move _329)</td></tr></table>>];
    bb158__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">158</td></tr><tr><td align="left" balign="left">StorageDead(_329)<br/></td></tr><tr><td align="left">drop(_333)</td></tr></table>>];
    bb159__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">159</td></tr><tr><td align="left" balign="left">StorageDead(_333)<br/>StorageDead(_332)<br/>StorageDead(_330)<br/>StorageDead(_328)<br/>StorageLive(_347)<br/>_347 = _327<br/>_318 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _347)<br/>StorageDead(_347)<br/>StorageDead(_327)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb160__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">160</td></tr><tr><td align="left" balign="left">StorageDead(_321)<br/>StorageDead(_319)<br/></td></tr><tr><td align="left">_317 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _318)</td></tr></table>>];
    bb161__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">161</td></tr><tr><td align="left" balign="left">StorageDead(_318)<br/>_348 = discriminant(_317)<br/></td></tr><tr><td align="left">switchInt(move _348)</td></tr></table>>];
    bb162__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">162</td></tr><tr><td align="left" balign="left">StorageLive(_352)<br/>_352 = ((_317 as Continue).0: ())<br/>_316 = _352<br/>StorageDead(_352)<br/>StorageDead(_317)<br/>StorageDead(_316)<br/>StorageLive(_353)<br/>StorageLive(_354)<br/>StorageLive(_355)<br/>StorageLive(_356)<br/></td></tr><tr><td align="left">_356 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb163__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">163</td></tr><tr><td align="left" balign="left">StorageLive(_349)<br/>_349 = ((_317 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_351)<br/>_351 = _349<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _351)</td></tr></table>>];
    bb164__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">164</td></tr><tr><td align="left" balign="left">StorageDead(_351)<br/>StorageDead(_349)<br/>StorageDead(_317)<br/>StorageDead(_316)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb165__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">165</td></tr><tr><td align="left">_355 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _356)</td></tr></table>>];
    bb166__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">166</td></tr><tr><td align="left" balign="left">StorageDead(_356)<br/>_357 = discriminant(_355)<br/></td></tr><tr><td align="left">switchInt(move _357)</td></tr></table>>];
    bb167__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">167</td></tr><tr><td align="left" balign="left">StorageLive(_361)<br/>_361 = move ((_355 as Continue).0: anchor_lang::prelude::Clock)<br/>_354 = move _361<br/>StorageDead(_361)<br/>_353 = (_354.4: i64)<br/>_527 = discriminant(_355)<br/>StorageDead(_355)<br/>StorageDead(_354)<br/>StorageLive(_362)<br/>StorageLive(_363)<br/>StorageLive(_364)<br/>StorageLive(_365)<br/>_365 = _353<br/></td></tr><tr><td align="left">_364 = &lt;i64 as Cast&gt;::cast::&lt;u32&gt;(move _365)</td></tr></table>>];
    bb168__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">168</td></tr><tr><td align="left" balign="left">StorageLive(_358)<br/>_358 = move ((_355 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_360)<br/>_360 = move _358<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _360)</td></tr></table>>];
    bb169__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">169</td></tr><tr><td align="left" balign="left">StorageDead(_360)<br/>StorageDead(_358)<br/>_537 = discriminant(_355)<br/>StorageDead(_355)<br/>StorageDead(_354)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb170__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">170</td></tr><tr><td align="left" balign="left">StorageDead(_365)<br/></td></tr><tr><td align="left">_363 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _364)</td></tr></table>>];
    bb171__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">171</td></tr><tr><td align="left" balign="left">StorageDead(_364)<br/>_366 = discriminant(_363)<br/></td></tr><tr><td align="left">switchInt(move _366)</td></tr></table>>];
    bb172__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">172</td></tr><tr><td align="left" balign="left">StorageLive(_370)<br/>_370 = ((_363 as Continue).0: u32)<br/>_362 = _370<br/>StorageDead(_370)<br/>StorageLive(_371)<br/>StorageLive(_372)<br/>_372 = &amp;mut _6<br/></td></tr><tr><td align="left">_371 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _372)</td></tr></table>>];
    bb173__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">173</td></tr><tr><td align="left" balign="left">StorageLive(_367)<br/>_367 = ((_363 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_369)<br/>_369 = _367<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _369)</td></tr></table>>];
    bb174__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">174</td></tr><tr><td align="left" balign="left">StorageDead(_369)<br/>StorageDead(_367)<br/>StorageDead(_362)<br/>StorageDead(_363)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb175__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">175</td></tr><tr><td align="left" balign="left">StorageDead(_372)<br/>((*_371).29: u32) = move _362<br/>StorageDead(_362)<br/>StorageDead(_371)<br/>StorageDead(_363)<br/>StorageLive(_373)<br/>StorageLive(_374)<br/>StorageLive(_375)<br/>StorageLive(_376)<br/>StorageLive(_377)<br/>StorageLive(_378)<br/>StorageLive(_379)<br/>StorageLive(_380)<br/>StorageLive(_381)<br/>StorageLive(_382)<br/>StorageLive(_383)<br/>StorageLive(_384)<br/>StorageLive(_385)<br/>StorageLive(_386)<br/>StorageLive(_387)<br/>_387 = _353<br/>StorageLive(_388)<br/>StorageLive(_389)<br/>_502 = deref_copy (_1.1: &amp;mut instructions::user::InitializeUser&lt;'_&gt;)<br/>_389 = &amp;((*_502).3: anchor_lang::prelude::Signer&lt;'_&gt;)<br/></td></tr><tr><td align="left">_388 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::Key&gt;::key(move _389)</td></tr></table>>];
    bb176__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">176</td></tr><tr><td align="left" balign="left">StorageDead(_389)<br/>StorageLive(_390)<br/>_390 = _4<br/>StorageLive(_391)<br/>_391 = _2<br/>StorageLive(_392)<br/>_392 = _3<br/>StorageLive(_393)<br/>StorageLive(_394)<br/>StorageLive(_395)<br/>_395 = &amp;_36<br/></td></tr><tr><td align="left">_394 = &lt;RefMut&lt;'_, UserStats&gt; as Deref&gt;::deref(move _395)</td></tr></table>>];
    bb177__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">177</td></tr><tr><td align="left" balign="left">StorageDead(_395)<br/>_393 = ((*_394).1: anchor_lang::prelude::Pubkey)<br/>_386 = NewUserRecord { ts: move _387, user_authority: move _388, user: move _390, sub_account_id: move _391, name: move _392, referrer: move _393 }<br/>StorageDead(_393)<br/>StorageDead(_392)<br/>StorageDead(_391)<br/>StorageDead(_390)<br/>StorageDead(_388)<br/>StorageDead(_387)<br/>_385 = &amp;_386<br/>_384 = &amp;(*_385)<br/></td></tr><tr><td align="left">_383 = &lt;NewUserRecord as anchor_lang::Event&gt;::data(move _384)</td></tr></table>>];
    bb178__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">178</td></tr><tr><td align="left" balign="left">StorageDead(_384)<br/>_382 = &amp;_383<br/>_381 = &amp;(*_382)<br/></td></tr><tr><td align="left">_380 = &lt;Vec&lt;u8&gt; as Deref&gt;::deref(move _381)</td></tr></table>>];
    bb179__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">179</td></tr><tr><td align="left" balign="left">_379 = &amp;(*_380)<br/>StorageDead(_381)<br/>_378 = [move _379]<br/>StorageDead(_379)<br/>_377 = &amp;_378<br/>_376 = &amp;(*_377)<br/>_375 = move _376 as &amp;[&amp;[u8]] (PointerCoercion(Unsize))<br/>StorageDead(_376)<br/></td></tr><tr><td align="left">_374 = solana_program::log::sol_log_data(move _375)</td></tr></table>>];
    bb180__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">180</td></tr><tr><td align="left" balign="left">StorageDead(_375)<br/></td></tr><tr><td align="left">drop(_383)</td></tr></table>>];
    bb181__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">181</td></tr><tr><td align="left" balign="left">StorageDead(_394)<br/>StorageDead(_386)<br/>StorageDead(_385)<br/>StorageDead(_383)<br/>StorageDead(_382)<br/>StorageDead(_380)<br/>StorageDead(_378)<br/>StorageDead(_377)<br/>StorageDead(_374)<br/>_373 = const ()<br/>StorageDead(_373)<br/>StorageLive(_396)<br/>StorageLive(_397)<br/>_510 = const false<br/>_397 = move _6<br/></td></tr><tr><td align="left">_396 = std::mem::drop::&lt;RefMut&lt;'_, User&gt;&gt;(move _397)</td></tr></table>>];
    bb182__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">182</td></tr><tr><td align="left" balign="left">StorageDead(_397)<br/>StorageDead(_396)<br/>StorageLive(_398)<br/>StorageLive(_399)<br/>StorageLive(_400)<br/>StorageLive(_401)<br/>StorageLive(_402)<br/>StorageLive(_403)<br/>_503 = deref_copy (*_295)<br/>_551 = (((_503.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_403 = &amp;(*_551)<br/></td></tr><tr><td align="left">_402 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _403)</td></tr></table>>];
    bb183__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">183</td></tr><tr><td align="left" balign="left">_401 = &amp;(*_402)<br/>StorageDead(_403)<br/></td></tr><tr><td align="left">_400 = state::state::State::get_init_user_fee(move _401)</td></tr></table>>];
    bb184__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">184</td></tr><tr><td align="left" balign="left">StorageDead(_401)<br/></td></tr><tr><td align="left">_399 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _400)</td></tr></table>>];
    bb185__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">185</td></tr><tr><td align="left" balign="left">StorageDead(_400)<br/>_404 = discriminant(_399)<br/></td></tr><tr><td align="left">switchInt(move _404)</td></tr></table>>];
    bb186__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">186</td></tr><tr><td align="left" balign="left">StorageLive(_408)<br/>_408 = ((_399 as Continue).0: u64)<br/>_398 = _408<br/>StorageDead(_408)<br/>StorageDead(_402)<br/>StorageDead(_399)<br/>StorageLive(_409)<br/>StorageLive(_410)<br/>StorageLive(_411)<br/>_411 = _398<br/>_410 = Gt(move _411, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _410)</td></tr></table>>];
    bb187__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">187</td></tr><tr><td align="left" balign="left">StorageLive(_405)<br/>_405 = ((_399 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_407)<br/>_407 = _405<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _407)</td></tr></table>>];
    bb188__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">188</td></tr><tr><td align="left" balign="left">StorageDead(_407)<br/>StorageDead(_405)<br/>StorageDead(_402)<br/>StorageDead(_399)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb189__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">189</td></tr><tr><td align="left" balign="left">StorageDead(_411)<br/>StorageLive(_412)<br/>StorageLive(_413)<br/>StorageLive(_414)<br/>StorageLive(_415)<br/>StorageLive(_416)<br/>StorageLive(_417)<br/>_504 = deref_copy (_1.1: &amp;mut instructions::user::InitializeUser&lt;'_&gt;)<br/>_417 = &amp;((*_504).4: anchor_lang::prelude::Signer&lt;'_&gt;)<br/></td></tr><tr><td align="left">_416 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::ToAccountInfo&lt;'_&gt;&gt;::to_account_info(move _417)</td></tr></table>>];
    bb190__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">190</td></tr><tr><td align="left" balign="left">StorageDead(_411)<br/>_409 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb191__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">191</td></tr><tr><td align="left" balign="left">_415 = &amp;_416<br/>StorageDead(_417)<br/></td></tr><tr><td align="left">_414 = anchor_lang::prelude::AccountInfo::&lt;'_&gt;::try_lamports(move _415)</td></tr></table>>];
    bb192__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">192</td></tr><tr><td align="left" balign="left">StorageDead(_415)<br/></td></tr><tr><td align="left">_413 = &lt;std::result::Result&lt;u64, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _414)</td></tr></table>>];
    bb193__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">193</td></tr><tr><td align="left" balign="left">StorageDead(_414)<br/>_418 = discriminant(_413)<br/></td></tr><tr><td align="left">switchInt(move _418)</td></tr></table>>];
    bb194__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">194</td></tr><tr><td align="left" balign="left">StorageLive(_422)<br/>_422 = ((_413 as Continue).0: u64)<br/>_412 = _422<br/>StorageDead(_422)<br/>_529 = discriminant(_413)<br/></td></tr><tr><td align="left">drop(_416)</td></tr></table>>];
    bb195__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">195</td></tr><tr><td align="left" balign="left">StorageLive(_419)<br/>_419 = move ((_413 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_421)<br/>_421 = move _419<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _421)</td></tr></table>>];
    bb196__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">196</td></tr><tr><td align="left" balign="left">StorageDead(_421)<br/>StorageDead(_419)<br/>_535 = discriminant(_413)<br/></td></tr><tr><td align="left">drop(_416)</td></tr></table>>];
    bb197__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">197</td></tr><tr><td align="left" balign="left">StorageDead(_416)<br/>StorageDead(_413)<br/>StorageLive(_423)<br/>StorageLive(_424)<br/>StorageLive(_425)<br/>_425 = _412<br/>StorageLive(_426)<br/>_426 = _398<br/>_424 = Lt(move _425, move _426)<br/></td></tr><tr><td align="left">switchInt(move _424)</td></tr></table>>];
    bb198__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">198</td></tr><tr><td align="left" balign="left">StorageDead(_426)<br/>StorageDead(_425)<br/>StorageLive(_428)<br/>StorageLive(_429)<br/>StorageLive(_430)<br/>StorageLive(_431)<br/>StorageLive(_432)<br/>StorageLive(_433)<br/>StorageLive(_434)<br/>StorageLive(_435)<br/>StorageLive(_436)<br/>StorageLive(_437)<br/>StorageLive(_438)<br/>_483 = const _<br/>_438 = &amp;(*_483)<br/>_437 = &amp;(*_438)<br/>_436 = move _437 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_437)<br/>StorageLive(_440)<br/>StorageLive(_441)<br/>StorageLive(_442)<br/>StorageLive(_443)<br/>StorageLive(_444)<br/>StorageLive(_445)<br/>StorageLive(_446)<br/>_446 = &amp;_412<br/>_445 = &amp;(*_446)<br/></td></tr><tr><td align="left">_444 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _445)</td></tr></table>>];
    bb199__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">199</td></tr><tr><td align="left" balign="left">StorageDead(_445)<br/>StorageLive(_447)<br/>StorageLive(_448)<br/>StorageLive(_449)<br/>_449 = &amp;_398<br/>_448 = &amp;(*_449)<br/></td></tr><tr><td align="left">_447 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _448)</td></tr></table>>];
    bb200__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">200</td></tr><tr><td align="left" balign="left">StorageDead(_448)<br/>_443 = [move _444, move _447]<br/>StorageDead(_447)<br/>StorageDead(_444)<br/>_442 = &amp;_443<br/>_441 = &amp;(*_442)<br/>_440 = move _441 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_441)<br/></td></tr><tr><td align="left">_435 = Arguments::&lt;'_&gt;::new_v1(move _436, move _440)</td></tr></table>>];
    bb201__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">201</td></tr><tr><td align="left" balign="left">StorageDead(_440)<br/>StorageDead(_436)<br/></td></tr><tr><td align="left">_434 = format(move _435)</td></tr></table>>];
    bb202__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">202</td></tr><tr><td align="left" balign="left">StorageDead(_435)<br/>StorageDead(_449)<br/>StorageDead(_446)<br/>StorageDead(_443)<br/>StorageDead(_442)<br/>StorageDead(_438)<br/>_433 = move _434<br/>StorageDead(_434)<br/>_432 = &amp;_433<br/>_431 = &amp;(*_432)<br/></td></tr><tr><td align="left">_430 = &lt;String as Deref&gt;::deref(move _431)</td></tr></table>>];
    bb203__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">203</td></tr><tr><td align="left" balign="left">_429 = &amp;(*_430)<br/>StorageDead(_431)<br/></td></tr><tr><td align="left">_428 = solana_program::log::sol_log(move _429)</td></tr></table>>];
    bb204__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">204</td></tr><tr><td align="left" balign="left">StorageDead(_429)<br/></td></tr><tr><td align="left">drop(_433)</td></tr></table>>];
    bb205__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">205</td></tr><tr><td align="left" balign="left">StorageDead(_433)<br/>StorageDead(_432)<br/>StorageDead(_430)<br/>StorageDead(_428)<br/>StorageLive(_450)<br/>StorageLive(_451)<br/>_451 = error::ErrorCode::CantPayUserInitFee<br/></td></tr><tr><td align="left">_450 = &lt;error::ErrorCode as Into&lt;anchor_lang::error::Error&gt;&gt;::into(move _451)</td></tr></table>>];
    bb206__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">206</td></tr><tr><td align="left" balign="left">StorageDead(_451)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _450)<br/>StorageDead(_450)<br/>StorageDead(_424)<br/>StorageDead(_423)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb207__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">207</td></tr><tr><td align="left" balign="left">StorageDead(_426)<br/>StorageDead(_425)<br/>_423 = const ()<br/>StorageDead(_424)<br/>StorageDead(_423)<br/>StorageLive(_452)<br/>StorageLive(_453)<br/>StorageLive(_454)<br/>StorageLive(_455)<br/>StorageLive(_456)<br/>StorageLive(_457)<br/>StorageLive(_458)<br/>StorageLive(_459)<br/>StorageLive(_460)<br/>StorageLive(_461)<br/>_505 = deref_copy (_1.1: &amp;mut instructions::user::InitializeUser&lt;'_&gt;)<br/>_461 = &amp;((*_505).4: anchor_lang::prelude::Signer&lt;'_&gt;)<br/></td></tr><tr><td align="left">_460 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::Key&gt;::key(move _461)</td></tr></table>>];
    bb208__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">208</td></tr><tr><td align="left" balign="left">StorageDead(_461)<br/>_459 = &amp;_460<br/>_458 = &amp;(*_459)<br/>StorageLive(_462)<br/>StorageLive(_463)<br/>StorageLive(_464)<br/>StorageLive(_465)<br/>_506 = deref_copy (_1.1: &amp;mut instructions::user::InitializeUser&lt;'_&gt;)<br/>_465 = &amp;((*_506).0: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_464 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt; as anchor_lang::Key&gt;::key(move _465)</td></tr></table>>];
    bb209__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">209</td></tr><tr><td align="left" balign="left">StorageDead(_465)<br/>_463 = &amp;_464<br/>_462 = &amp;(*_463)<br/>StorageLive(_466)<br/>_466 = _398<br/></td></tr><tr><td align="left">_457 = solana_program::system_instruction::transfer(move _458, move _462, move _466)</td></tr></table>>];
    bb210__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">210</td></tr><tr><td align="left" balign="left">StorageDead(_466)<br/>StorageDead(_462)<br/>StorageDead(_458)<br/>_456 = &amp;_457<br/>_455 = &amp;(*_456)<br/>StorageLive(_467)<br/>StorageLive(_468)<br/>StorageLive(_469)<br/>StorageLive(_470)<br/>StorageLive(_471)<br/>StorageLive(_472)<br/>_507 = deref_copy (_1.1: &amp;mut instructions::user::InitializeUser&lt;'_&gt;)<br/>_472 = &amp;((*_507).4: anchor_lang::prelude::Signer&lt;'_&gt;)<br/></td></tr><tr><td align="left">_471 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::ToAccountInfo&lt;'_&gt;&gt;::to_account_info(move _472)</td></tr></table>>];
    bb211__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">211</td></tr><tr><td align="left" balign="left">StorageDead(_472)<br/>StorageLive(_473)<br/>StorageLive(_474)<br/>_508 = deref_copy (_1.1: &amp;mut instructions::user::InitializeUser&lt;'_&gt;)<br/>_474 = &amp;((*_508).0: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_473 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt; as anchor_lang::ToAccountInfo&lt;'_&gt;&gt;::to_account_info(move _474)</td></tr></table>>];
    bb212__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">212</td></tr><tr><td align="left" balign="left">StorageDead(_474)<br/>StorageLive(_475)<br/>StorageLive(_476)<br/>_509 = deref_copy (_1.1: &amp;mut instructions::user::InitializeUser&lt;'_&gt;)<br/>_476 = &amp;((*_509).6: anchor_lang::prelude::Program&lt;'_, anchor_lang::system_program::System&gt;)<br/></td></tr><tr><td align="left">_475 = &lt;anchor_lang::prelude::Program&lt;'_, anchor_lang::system_program::System&gt; as anchor_lang::ToAccountInfo&lt;'_&gt;&gt;::to_account_info(move _476)</td></tr></table>>];
    bb213__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">213</td></tr><tr><td align="left" balign="left">StorageDead(_476)<br/>_470 = [move _471, move _473, move _475]<br/>StorageDead(_475)<br/>StorageDead(_473)<br/>StorageDead(_471)<br/>_469 = &amp;_470<br/>_468 = &amp;(*_469)<br/>_467 = move _468 as &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_468)<br/></td></tr><tr><td align="left">_454 = invoke(move _455, move _467)</td></tr></table>>];
    bb214__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">214</td></tr><tr><td align="left" balign="left">StorageDead(_467)<br/>StorageDead(_455)<br/></td></tr><tr><td align="left">_453 = &lt;std::result::Result&lt;(), anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _454)</td></tr></table>>];
    bb215__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">215</td></tr><tr><td align="left" balign="left">StorageDead(_454)<br/>_477 = discriminant(_453)<br/></td></tr><tr><td align="left">switchInt(move _477)</td></tr></table>>];
    bb216__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">216</td></tr><tr><td align="left" balign="left">StorageLive(_481)<br/>_481 = ((_453 as Continue).0: ())<br/>_452 = _481<br/>StorageDead(_481)<br/>_531 = discriminant(_453)<br/></td></tr><tr><td align="left">drop(_470)</td></tr></table>>];
    bb217__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">217</td></tr><tr><td align="left" balign="left">StorageLive(_478)<br/>_478 = move ((_453 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_480)<br/>_480 = move _478<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _480)</td></tr></table>>];
    bb218__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">218</td></tr><tr><td align="left" balign="left">StorageDead(_480)<br/>StorageDead(_478)<br/>_533 = discriminant(_453)<br/></td></tr><tr><td align="left">drop(_470)</td></tr></table>>];
    bb219__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">219</td></tr><tr><td align="left" balign="left">StorageDead(_470)<br/>StorageDead(_469)<br/></td></tr><tr><td align="left">drop(_457)</td></tr></table>>];
    bb220__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">220</td></tr><tr><td align="left" balign="left">StorageDead(_464)<br/>StorageDead(_463)<br/>StorageDead(_460)<br/>StorageDead(_459)<br/>StorageDead(_457)<br/>StorageDead(_456)<br/>StorageDead(_453)<br/>StorageDead(_452)<br/>_409 = const ()<br/>StorageDead(_412)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb221__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">221</td></tr><tr><td align="left" balign="left">StorageDead(_410)<br/>StorageDead(_409)<br/>StorageLive(_482)<br/>_482 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _482)<br/>StorageDead(_482)<br/>StorageDead(_398)<br/>StorageDead(_353)<br/>StorageDead(_312)<br/>StorageDead(_295)<br/>StorageDead(_193)<br/>StorageDead(_192)<br/></td></tr><tr><td align="left">drop(_36)</td></tr></table>>];
    bb222__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">222</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_33)<br/>StorageDead(_32)<br/>_510 = const false<br/>StorageDead(_6)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb223__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">223</td></tr><tr><td align="left" balign="left">StorageDead(_470)<br/>StorageDead(_469)<br/></td></tr><tr><td align="left">drop(_457)</td></tr></table>>];
    bb224__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">224</td></tr><tr><td align="left" balign="left">StorageDead(_464)<br/>StorageDead(_463)<br/>StorageDead(_460)<br/>StorageDead(_459)<br/>StorageDead(_457)<br/>StorageDead(_456)<br/>StorageDead(_453)<br/>StorageDead(_452)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb225__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">225</td></tr><tr><td align="left" balign="left">StorageDead(_416)<br/>StorageDead(_413)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb226__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">226</td></tr><tr><td align="left" balign="left">StorageDead(_412)<br/>StorageDead(_410)<br/>StorageDead(_409)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb227__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">227</td></tr><tr><td align="left" balign="left">StorageDead(_398)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb228__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">228</td></tr><tr><td align="left" balign="left">StorageDead(_353)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb229__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">229</td></tr><tr><td align="left" balign="left">StorageDead(_312)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb230__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">230</td></tr><tr><td align="left" balign="left">StorageDead(_295)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb231__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">231</td></tr><tr><td align="left" balign="left">StorageDead(_205)<br/>StorageDead(_202)<br/>StorageDead(_201)<br/>StorageDead(_196)<br/>StorageDead(_195)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb232__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">232</td></tr><tr><td align="left" balign="left">StorageDead(_193)<br/>StorageDead(_192)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb233__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">233</td></tr><tr><td align="left">drop(_95)</td></tr></table>>];
    bb234__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">234</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/></td></tr><tr><td align="left">drop(_84)</td></tr></table>>];
    bb235__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">235</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>StorageDead(_83)<br/>StorageDead(_82)<br/>StorageDead(_77)<br/>StorageDead(_76)<br/>StorageDead(_66)<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb236__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">236</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb237__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">237</td></tr><tr><td align="left">drop(_36)</td></tr></table>>];
    bb238__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">238</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_33)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">switchInt(_510)</td></tr></table>>];
    bb239__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">239</td></tr><tr><td align="left" balign="left">_510 = const false<br/>StorageDead(_6)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb240__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">240</td></tr><tr><td align="left">return</td></tr></table>>];
    bb241__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">241 (cleanup)</td></tr><tr><td align="left">drop(_470)</td></tr></table>>];
    bb242__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">242 (cleanup)</td></tr><tr><td align="left">drop(_473)</td></tr></table>>];
    bb243__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">243 (cleanup)</td></tr><tr><td align="left">drop(_471)</td></tr></table>>];
    bb244__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">244 (cleanup)</td></tr><tr><td align="left">drop(_457)</td></tr></table>>];
    bb245__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">245 (cleanup)</td></tr><tr><td align="left">drop(_433)</td></tr></table>>];
    bb246__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">246 (cleanup)</td></tr><tr><td align="left">drop(_416)</td></tr></table>>];
    bb247__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">247 (cleanup)</td></tr><tr><td align="left">drop(_383)</td></tr></table>>];
    bb248__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">248 (cleanup)</td></tr><tr><td align="left">drop(_333)</td></tr></table>>];
    bb249__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">249 (cleanup)</td></tr><tr><td align="left">drop(_257)</td></tr></table>>];
    bb250__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">250 (cleanup)</td></tr><tr><td align="left">drop(_238)</td></tr></table>>];
    bb251__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">251 (cleanup)</td></tr><tr><td align="left">drop(_157)</td></tr></table>>];
    bb252__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">252 (cleanup)</td></tr><tr><td align="left">drop(_120)</td></tr></table>>];
    bb253__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">253 (cleanup)</td></tr><tr><td align="left">drop(_95)</td></tr></table>>];
    bb254__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">254 (cleanup)</td></tr><tr><td align="left">drop(_84)</td></tr></table>>];
    bb255__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">255 (cleanup)</td></tr><tr><td align="left">drop(_36)</td></tr></table>>];
    bb256__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">256 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb257__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">257</td></tr><tr><td align="left">drop(_6)</td></tr></table>>];
    bb258__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">258 (cleanup)</td></tr><tr><td align="left" balign="left">_539 = discriminant(_453)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb259__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">259 (cleanup)</td></tr><tr><td align="left" balign="left">_540 = discriminant(_413)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb260__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">260 (cleanup)</td></tr><tr><td align="left" balign="left">_541 = discriminant(_355)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb261__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">261 (cleanup)</td></tr><tr><td align="left" balign="left">_542 = discriminant(_96)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb262__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">262 (cleanup)</td></tr><tr><td align="left" balign="left">_543 = discriminant(_85)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb263__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">263 (cleanup)</td></tr><tr><td align="left" balign="left">_544 = discriminant(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb264__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">264 (cleanup)</td></tr><tr><td align="left">drop(_6)</td></tr></table>>];
    bb265__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">265 (cleanup)</td></tr><tr><td align="left">switchInt(_510)</td></tr></table>>];
    bb266__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">266 (cleanup)</td></tr><tr><td align="left" balign="left">_545 = discriminant(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb267__0_1679 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">267</td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_1679 -> bb1__0_1679 [label="return"];
    bb1__0_1679 -> bb2__0_1679 [label="return"];
    bb2__0_1679 -> bb3__0_1679 [label="return"];
    bb2__0_1679 -> bb256__0_1679 [label="unwind"];
    bb3__0_1679 -> bb4__0_1679 [label="return"];
    bb3__0_1679 -> bb256__0_1679 [label="unwind"];
    bb4__0_1679 -> bb5__0_1679 [label="0"];
    bb4__0_1679 -> bb7__0_1679 [label="1"];
    bb4__0_1679 -> bb6__0_1679 [label="otherwise"];
    bb5__0_1679 -> bb9__0_1679 [label="return"];
    bb5__0_1679 -> bb265__0_1679 [label="unwind"];
    bb7__0_1679 -> bb8__0_1679 [label="return"];
    bb7__0_1679 -> bb266__0_1679 [label="unwind"];
    bb8__0_1679 -> bb239__0_1679 [label=""];
    bb9__0_1679 -> bb10__0_1679 [label="return"];
    bb9__0_1679 -> bb265__0_1679 [label="unwind"];
    bb10__0_1679 -> bb11__0_1679 [label="return"];
    bb10__0_1679 -> bb265__0_1679 [label="unwind"];
    bb11__0_1679 -> bb12__0_1679 [label="return"];
    bb11__0_1679 -> bb265__0_1679 [label="unwind"];
    bb12__0_1679 -> bb13__0_1679 [label="return"];
    bb12__0_1679 -> bb265__0_1679 [label="unwind"];
    bb13__0_1679 -> bb14__0_1679 [label="return"];
    bb13__0_1679 -> bb265__0_1679 [label="unwind"];
    bb14__0_1679 -> bb15__0_1679 [label="return"];
    bb14__0_1679 -> bb265__0_1679 [label="unwind"];
    bb15__0_1679 -> bb16__0_1679 [label="return"];
    bb15__0_1679 -> bb265__0_1679 [label="unwind"];
    bb16__0_1679 -> bb17__0_1679 [label="return"];
    bb16__0_1679 -> bb265__0_1679 [label="unwind"];
    bb17__0_1679 -> bb18__0_1679 [label="return"];
    bb17__0_1679 -> bb265__0_1679 [label="unwind"];
    bb18__0_1679 -> bb19__0_1679 [label="return"];
    bb18__0_1679 -> bb265__0_1679 [label="unwind"];
    bb19__0_1679 -> bb20__0_1679 [label="0"];
    bb19__0_1679 -> bb21__0_1679 [label="1"];
    bb19__0_1679 -> bb6__0_1679 [label="otherwise"];
    bb20__0_1679 -> bb23__0_1679 [label="return"];
    bb20__0_1679 -> bb255__0_1679 [label="unwind"];
    bb21__0_1679 -> bb22__0_1679 [label="return"];
    bb21__0_1679 -> bb263__0_1679 [label="unwind"];
    bb22__0_1679 -> bb238__0_1679 [label=""];
    bb23__0_1679 -> bb24__0_1679 [label="return"];
    bb23__0_1679 -> bb255__0_1679 [label="unwind"];
    bb24__0_1679 -> bb25__0_1679 [label="return"];
    bb24__0_1679 -> bb255__0_1679 [label="unwind"];
    bb25__0_1679 -> bb26__0_1679 [label="0"];
    bb25__0_1679 -> bb27__0_1679 [label="1"];
    bb25__0_1679 -> bb6__0_1679 [label="otherwise"];
    bb26__0_1679 -> bb29__0_1679 [label="return"];
    bb26__0_1679 -> bb255__0_1679 [label="unwind"];
    bb27__0_1679 -> bb28__0_1679 [label="return"];
    bb27__0_1679 -> bb255__0_1679 [label="unwind"];
    bb28__0_1679 -> bb237__0_1679 [label=""];
    bb29__0_1679 -> bb30__0_1679 [label="return"];
    bb29__0_1679 -> bb255__0_1679 [label="unwind"];
    bb30__0_1679 -> bb91__0_1679 [label="0"];
    bb30__0_1679 -> bb31__0_1679 [label="otherwise"];
    bb31__0_1679 -> bb32__0_1679 [label="return"];
    bb31__0_1679 -> bb255__0_1679 [label="unwind"];
    bb32__0_1679 -> bb33__0_1679 [label="return"];
    bb32__0_1679 -> bb255__0_1679 [label="unwind"];
    bb33__0_1679 -> bb34__0_1679 [label="0"];
    bb33__0_1679 -> bb35__0_1679 [label="1"];
    bb33__0_1679 -> bb6__0_1679 [label="otherwise"];
    bb34__0_1679 -> bb38__0_1679 [label="1"];
    bb34__0_1679 -> bb37__0_1679 [label="otherwise"];
    bb35__0_1679 -> bb36__0_1679 [label="return"];
    bb35__0_1679 -> bb255__0_1679 [label="unwind"];
    bb36__0_1679 -> bb236__0_1679 [label=""];
    bb37__0_1679 -> bb267__0_1679 [label="return"];
    bb37__0_1679 -> bb255__0_1679 [label="unwind"];
    bb38__0_1679 -> bb39__0_1679 [label="1"];
    bb38__0_1679 -> bb37__0_1679 [label="otherwise"];
    bb39__0_1679 -> bb40__0_1679 [label="return"];
    bb39__0_1679 -> bb255__0_1679 [label="unwind"];
    bb40__0_1679 -> bb41__0_1679 [label="return"];
    bb40__0_1679 -> bb255__0_1679 [label="unwind"];
    bb41__0_1679 -> bb42__0_1679 [label="return"];
    bb41__0_1679 -> bb255__0_1679 [label="unwind"];
    bb42__0_1679 -> bb43__0_1679 [label="0"];
    bb42__0_1679 -> bb44__0_1679 [label="1"];
    bb42__0_1679 -> bb6__0_1679 [label="otherwise"];
    bb43__0_1679 -> bb46__0_1679 [label="return"];
    bb43__0_1679 -> bb254__0_1679 [label="unwind"];
    bb44__0_1679 -> bb45__0_1679 [label="return"];
    bb44__0_1679 -> bb262__0_1679 [label="unwind"];
    bb45__0_1679 -> bb235__0_1679 [label=""];
    bb46__0_1679 -> bb47__0_1679 [label="return"];
    bb46__0_1679 -> bb254__0_1679 [label="unwind"];
    bb47__0_1679 -> bb48__0_1679 [label="return"];
    bb47__0_1679 -> bb254__0_1679 [label="unwind"];
    bb48__0_1679 -> bb49__0_1679 [label="0"];
    bb48__0_1679 -> bb50__0_1679 [label="1"];
    bb48__0_1679 -> bb6__0_1679 [label="otherwise"];
    bb49__0_1679 -> bb52__0_1679 [label="return"];
    bb49__0_1679 -> bb253__0_1679 [label="unwind"];
    bb50__0_1679 -> bb51__0_1679 [label="return"];
    bb50__0_1679 -> bb261__0_1679 [label="unwind"];
    bb51__0_1679 -> bb234__0_1679 [label=""];
    bb52__0_1679 -> bb54__0_1679 [label="0"];
    bb52__0_1679 -> bb53__0_1679 [label="otherwise"];
    bb53__0_1679 -> bb61__0_1679 [label=""];
    bb54__0_1679 -> bb55__0_1679 [label="return"];
    bb54__0_1679 -> bb253__0_1679 [label="unwind"];
    bb55__0_1679 -> bb56__0_1679 [label="return"];
    bb55__0_1679 -> bb253__0_1679 [label="unwind"];
    bb56__0_1679 -> bb57__0_1679 [label="return"];
    bb56__0_1679 -> bb253__0_1679 [label="unwind"];
    bb57__0_1679 -> bb58__0_1679 [label="return"];
    bb57__0_1679 -> bb252__0_1679 [label="unwind"];
    bb58__0_1679 -> bb59__0_1679 [label="return"];
    bb58__0_1679 -> bb252__0_1679 [label="unwind"];
    bb59__0_1679 -> bb60__0_1679 [label="return"];
    bb59__0_1679 -> bb253__0_1679 [label="unwind"];
    bb60__0_1679 -> bb61__0_1679 [label=""];
    bb61__0_1679 -> bb62__0_1679 [label="return"];
    bb61__0_1679 -> bb253__0_1679 [label="unwind"];
    bb62__0_1679 -> bb63__0_1679 [label="0"];
    bb62__0_1679 -> bb64__0_1679 [label="1"];
    bb62__0_1679 -> bb6__0_1679 [label="otherwise"];
    bb63__0_1679 -> bb66__0_1679 [label="return"];
    bb63__0_1679 -> bb253__0_1679 [label="unwind"];
    bb64__0_1679 -> bb65__0_1679 [label="return"];
    bb64__0_1679 -> bb253__0_1679 [label="unwind"];
    bb65__0_1679 -> bb233__0_1679 [label=""];
    bb66__0_1679 -> bb67__0_1679 [label="return"];
    bb66__0_1679 -> bb253__0_1679 [label="unwind"];
    bb67__0_1679 -> bb68__0_1679 [label="return"];
    bb67__0_1679 -> bb253__0_1679 [label="unwind"];
    bb68__0_1679 -> bb70__0_1679 [label="0"];
    bb68__0_1679 -> bb69__0_1679 [label="otherwise"];
    bb69__0_1679 -> bb77__0_1679 [label=""];
    bb70__0_1679 -> bb71__0_1679 [label="return"];
    bb70__0_1679 -> bb253__0_1679 [label="unwind"];
    bb71__0_1679 -> bb72__0_1679 [label="return"];
    bb71__0_1679 -> bb253__0_1679 [label="unwind"];
    bb72__0_1679 -> bb73__0_1679 [label="return"];
    bb72__0_1679 -> bb253__0_1679 [label="unwind"];
    bb73__0_1679 -> bb74__0_1679 [label="return"];
    bb73__0_1679 -> bb251__0_1679 [label="unwind"];
    bb74__0_1679 -> bb75__0_1679 [label="return"];
    bb74__0_1679 -> bb251__0_1679 [label="unwind"];
    bb75__0_1679 -> bb76__0_1679 [label="return"];
    bb75__0_1679 -> bb253__0_1679 [label="unwind"];
    bb76__0_1679 -> bb77__0_1679 [label=""];
    bb77__0_1679 -> bb78__0_1679 [label="return"];
    bb77__0_1679 -> bb253__0_1679 [label="unwind"];
    bb78__0_1679 -> bb79__0_1679 [label="0"];
    bb78__0_1679 -> bb80__0_1679 [label="1"];
    bb78__0_1679 -> bb6__0_1679 [label="otherwise"];
    bb79__0_1679 -> bb82__0_1679 [label="success"];
    bb79__0_1679 -> bb253__0_1679 [label="unwind"];
    bb80__0_1679 -> bb81__0_1679 [label="return"];
    bb80__0_1679 -> bb253__0_1679 [label="unwind"];
    bb81__0_1679 -> bb233__0_1679 [label=""];
    bb82__0_1679 -> bb83__0_1679 [label="return"];
    bb82__0_1679 -> bb253__0_1679 [label="unwind"];
    bb83__0_1679 -> bb84__0_1679 [label="success"];
    bb83__0_1679 -> bb253__0_1679 [label="unwind"];
    bb84__0_1679 -> bb85__0_1679 [label="return"];
    bb84__0_1679 -> bb253__0_1679 [label="unwind"];
    bb85__0_1679 -> bb86__0_1679 [label="return"];
    bb85__0_1679 -> bb253__0_1679 [label="unwind"];
    bb86__0_1679 -> bb87__0_1679 [label="return"];
    bb86__0_1679 -> bb254__0_1679 [label="unwind"];
    bb87__0_1679 -> bb88__0_1679 [label="return"];
    bb87__0_1679 -> bb255__0_1679 [label="unwind"];
    bb88__0_1679 -> bb89__0_1679 [label=""];
    bb89__0_1679 -> bb90__0_1679 [label="return"];
    bb89__0_1679 -> bb255__0_1679 [label="unwind"];
    bb90__0_1679 -> bb92__0_1679 [label=""];
    bb91__0_1679 -> bb92__0_1679 [label=""];
    bb92__0_1679 -> bb93__0_1679 [label="return"];
    bb92__0_1679 -> bb255__0_1679 [label="unwind"];
    bb93__0_1679 -> bb94__0_1679 [label="return"];
    bb93__0_1679 -> bb255__0_1679 [label="unwind"];
    bb94__0_1679 -> bb95__0_1679 [label="return"];
    bb94__0_1679 -> bb255__0_1679 [label="unwind"];
    bb95__0_1679 -> bb97__0_1679 [label="0"];
    bb95__0_1679 -> bb96__0_1679 [label="otherwise"];
    bb96__0_1679 -> bb109__0_1679 [label=""];
    bb97__0_1679 -> bb98__0_1679 [label="return"];
    bb97__0_1679 -> bb255__0_1679 [label="unwind"];
    bb98__0_1679 -> bb99__0_1679 [label="return"];
    bb98__0_1679 -> bb255__0_1679 [label="unwind"];
    bb99__0_1679 -> bb100__0_1679 [label="0"];
    bb99__0_1679 -> bb101__0_1679 [label="1"];
    bb99__0_1679 -> bb6__0_1679 [label="otherwise"];
    bb100__0_1679 -> bb103__0_1679 [label="return"];
    bb100__0_1679 -> bb255__0_1679 [label="unwind"];
    bb101__0_1679 -> bb102__0_1679 [label="return"];
    bb101__0_1679 -> bb255__0_1679 [label="unwind"];
    bb102__0_1679 -> bb231__0_1679 [label=""];
    bb103__0_1679 -> bb104__0_1679 [label="return"];
    bb103__0_1679 -> bb255__0_1679 [label="unwind"];
    bb104__0_1679 -> bb105__0_1679 [label="return"];
    bb104__0_1679 -> bb255__0_1679 [label="unwind"];
    bb105__0_1679 -> bb106__0_1679 [label="0"];
    bb105__0_1679 -> bb107__0_1679 [label="1"];
    bb105__0_1679 -> bb6__0_1679 [label="otherwise"];
    bb106__0_1679 -> bb109__0_1679 [label=""];
    bb107__0_1679 -> bb108__0_1679 [label="return"];
    bb107__0_1679 -> bb255__0_1679 [label="unwind"];
    bb108__0_1679 -> bb231__0_1679 [label=""];
    bb109__0_1679 -> bb110__0_1679 [label="return"];
    bb109__0_1679 -> bb255__0_1679 [label="unwind"];
    bb110__0_1679 -> bb112__0_1679 [label="0"];
    bb110__0_1679 -> bb111__0_1679 [label="otherwise"];
    bb111__0_1679 -> bb127__0_1679 [label=""];
    bb112__0_1679 -> bb113__0_1679 [label="return"];
    bb112__0_1679 -> bb255__0_1679 [label="unwind"];
    bb113__0_1679 -> bb114__0_1679 [label="return"];
    bb113__0_1679 -> bb255__0_1679 [label="unwind"];
    bb114__0_1679 -> bb115__0_1679 [label="return"];
    bb114__0_1679 -> bb255__0_1679 [label="unwind"];
    bb115__0_1679 -> bb116__0_1679 [label="return"];
    bb115__0_1679 -> bb250__0_1679 [label="unwind"];
    bb116__0_1679 -> bb117__0_1679 [label="return"];
    bb116__0_1679 -> bb250__0_1679 [label="unwind"];
    bb117__0_1679 -> bb118__0_1679 [label="return"];
    bb117__0_1679 -> bb255__0_1679 [label="unwind"];
    bb118__0_1679 -> bb119__0_1679 [label="return"];
    bb118__0_1679 -> bb255__0_1679 [label="unwind"];
    bb119__0_1679 -> bb120__0_1679 [label="return"];
    bb119__0_1679 -> bb255__0_1679 [label="unwind"];
    bb120__0_1679 -> bb121__0_1679 [label="return"];
    bb120__0_1679 -> bb255__0_1679 [label="unwind"];
    bb121__0_1679 -> bb122__0_1679 [label="return"];
    bb121__0_1679 -> bb255__0_1679 [label="unwind"];
    bb122__0_1679 -> bb123__0_1679 [label="return"];
    bb122__0_1679 -> bb255__0_1679 [label="unwind"];
    bb123__0_1679 -> bb124__0_1679 [label="return"];
    bb123__0_1679 -> bb249__0_1679 [label="unwind"];
    bb124__0_1679 -> bb125__0_1679 [label="return"];
    bb124__0_1679 -> bb249__0_1679 [label="unwind"];
    bb125__0_1679 -> bb126__0_1679 [label="return"];
    bb125__0_1679 -> bb255__0_1679 [label="unwind"];
    bb126__0_1679 -> bb127__0_1679 [label=""];
    bb127__0_1679 -> bb128__0_1679 [label="return"];
    bb127__0_1679 -> bb255__0_1679 [label="unwind"];
    bb128__0_1679 -> bb129__0_1679 [label="0"];
    bb128__0_1679 -> bb130__0_1679 [label="1"];
    bb128__0_1679 -> bb6__0_1679 [label="otherwise"];
    bb129__0_1679 -> bb132__0_1679 [label="return"];
    bb129__0_1679 -> bb255__0_1679 [label="unwind"];
    bb130__0_1679 -> bb131__0_1679 [label="return"];
    bb130__0_1679 -> bb255__0_1679 [label="unwind"];
    bb131__0_1679 -> bb232__0_1679 [label=""];
    bb132__0_1679 -> bb133__0_1679 [label="return"];
    bb132__0_1679 -> bb255__0_1679 [label="unwind"];
    bb133__0_1679 -> bb134__0_1679 [label="return"];
    bb133__0_1679 -> bb255__0_1679 [label="unwind"];
    bb134__0_1679 -> bb135__0_1679 [label="0"];
    bb134__0_1679 -> bb136__0_1679 [label="1"];
    bb134__0_1679 -> bb6__0_1679 [label="otherwise"];
    bb135__0_1679 -> bb138__0_1679 [label="return"];
    bb135__0_1679 -> bb255__0_1679 [label="unwind"];
    bb136__0_1679 -> bb137__0_1679 [label="return"];
    bb136__0_1679 -> bb255__0_1679 [label="unwind"];
    bb137__0_1679 -> bb232__0_1679 [label=""];
    bb138__0_1679 -> bb139__0_1679 [label="return"];
    bb138__0_1679 -> bb255__0_1679 [label="unwind"];
    bb139__0_1679 -> bb140__0_1679 [label="return"];
    bb139__0_1679 -> bb255__0_1679 [label="unwind"];
    bb140__0_1679 -> bb141__0_1679 [label="return"];
    bb140__0_1679 -> bb255__0_1679 [label="unwind"];
    bb141__0_1679 -> bb142__0_1679 [label="return"];
    bb141__0_1679 -> bb255__0_1679 [label="unwind"];
    bb142__0_1679 -> bb143__0_1679 [label="0"];
    bb142__0_1679 -> bb144__0_1679 [label="1"];
    bb142__0_1679 -> bb6__0_1679 [label="otherwise"];
    bb143__0_1679 -> bb146__0_1679 [label="return"];
    bb143__0_1679 -> bb255__0_1679 [label="unwind"];
    bb144__0_1679 -> bb145__0_1679 [label="return"];
    bb144__0_1679 -> bb255__0_1679 [label="unwind"];
    bb145__0_1679 -> bb230__0_1679 [label=""];
    bb146__0_1679 -> bb147__0_1679 [label="return"];
    bb146__0_1679 -> bb255__0_1679 [label="unwind"];
    bb147__0_1679 -> bb148__0_1679 [label="return"];
    bb147__0_1679 -> bb255__0_1679 [label="unwind"];
    bb148__0_1679 -> bb150__0_1679 [label="0"];
    bb148__0_1679 -> bb149__0_1679 [label="otherwise"];
    bb149__0_1679 -> bb152__0_1679 [label=""];
    bb150__0_1679 -> bb151__0_1679 [label="return"];
    bb150__0_1679 -> bb255__0_1679 [label="unwind"];
    bb151__0_1679 -> bb153__0_1679 [label="0"];
    bb151__0_1679 -> bb152__0_1679 [label="otherwise"];
    bb152__0_1679 -> bb160__0_1679 [label=""];
    bb153__0_1679 -> bb154__0_1679 [label="return"];
    bb153__0_1679 -> bb255__0_1679 [label="unwind"];
    bb154__0_1679 -> bb155__0_1679 [label="return"];
    bb154__0_1679 -> bb255__0_1679 [label="unwind"];
    bb155__0_1679 -> bb156__0_1679 [label="return"];
    bb155__0_1679 -> bb255__0_1679 [label="unwind"];
    bb156__0_1679 -> bb157__0_1679 [label="return"];
    bb156__0_1679 -> bb248__0_1679 [label="unwind"];
    bb157__0_1679 -> bb158__0_1679 [label="return"];
    bb157__0_1679 -> bb248__0_1679 [label="unwind"];
    bb158__0_1679 -> bb159__0_1679 [label="return"];
    bb158__0_1679 -> bb255__0_1679 [label="unwind"];
    bb159__0_1679 -> bb160__0_1679 [label=""];
    bb160__0_1679 -> bb161__0_1679 [label="return"];
    bb160__0_1679 -> bb255__0_1679 [label="unwind"];
    bb161__0_1679 -> bb162__0_1679 [label="0"];
    bb161__0_1679 -> bb163__0_1679 [label="1"];
    bb161__0_1679 -> bb6__0_1679 [label="otherwise"];
    bb162__0_1679 -> bb165__0_1679 [label="return"];
    bb162__0_1679 -> bb255__0_1679 [label="unwind"];
    bb163__0_1679 -> bb164__0_1679 [label="return"];
    bb163__0_1679 -> bb255__0_1679 [label="unwind"];
    bb164__0_1679 -> bb229__0_1679 [label=""];
    bb165__0_1679 -> bb166__0_1679 [label="return"];
    bb165__0_1679 -> bb255__0_1679 [label="unwind"];
    bb166__0_1679 -> bb167__0_1679 [label="0"];
    bb166__0_1679 -> bb168__0_1679 [label="1"];
    bb166__0_1679 -> bb6__0_1679 [label="otherwise"];
    bb167__0_1679 -> bb170__0_1679 [label="return"];
    bb167__0_1679 -> bb255__0_1679 [label="unwind"];
    bb168__0_1679 -> bb169__0_1679 [label="return"];
    bb168__0_1679 -> bb260__0_1679 [label="unwind"];
    bb169__0_1679 -> bb228__0_1679 [label=""];
    bb170__0_1679 -> bb171__0_1679 [label="return"];
    bb170__0_1679 -> bb255__0_1679 [label="unwind"];
    bb171__0_1679 -> bb172__0_1679 [label="0"];
    bb171__0_1679 -> bb173__0_1679 [label="1"];
    bb171__0_1679 -> bb6__0_1679 [label="otherwise"];
    bb172__0_1679 -> bb175__0_1679 [label="return"];
    bb172__0_1679 -> bb255__0_1679 [label="unwind"];
    bb173__0_1679 -> bb174__0_1679 [label="return"];
    bb173__0_1679 -> bb255__0_1679 [label="unwind"];
    bb174__0_1679 -> bb228__0_1679 [label=""];
    bb175__0_1679 -> bb176__0_1679 [label="return"];
    bb175__0_1679 -> bb255__0_1679 [label="unwind"];
    bb176__0_1679 -> bb177__0_1679 [label="return"];
    bb176__0_1679 -> bb255__0_1679 [label="unwind"];
    bb177__0_1679 -> bb178__0_1679 [label="return"];
    bb177__0_1679 -> bb255__0_1679 [label="unwind"];
    bb178__0_1679 -> bb179__0_1679 [label="return"];
    bb178__0_1679 -> bb247__0_1679 [label="unwind"];
    bb179__0_1679 -> bb180__0_1679 [label="return"];
    bb179__0_1679 -> bb247__0_1679 [label="unwind"];
    bb180__0_1679 -> bb181__0_1679 [label="return"];
    bb180__0_1679 -> bb255__0_1679 [label="unwind"];
    bb181__0_1679 -> bb182__0_1679 [label="return"];
    bb181__0_1679 -> bb255__0_1679 [label="unwind"];
    bb182__0_1679 -> bb183__0_1679 [label="return"];
    bb182__0_1679 -> bb255__0_1679 [label="unwind"];
    bb183__0_1679 -> bb184__0_1679 [label="return"];
    bb183__0_1679 -> bb255__0_1679 [label="unwind"];
    bb184__0_1679 -> bb185__0_1679 [label="return"];
    bb184__0_1679 -> bb255__0_1679 [label="unwind"];
    bb185__0_1679 -> bb186__0_1679 [label="0"];
    bb185__0_1679 -> bb187__0_1679 [label="1"];
    bb185__0_1679 -> bb6__0_1679 [label="otherwise"];
    bb186__0_1679 -> bb190__0_1679 [label="0"];
    bb186__0_1679 -> bb189__0_1679 [label="otherwise"];
    bb187__0_1679 -> bb188__0_1679 [label="return"];
    bb187__0_1679 -> bb255__0_1679 [label="unwind"];
    bb188__0_1679 -> bb227__0_1679 [label=""];
    bb189__0_1679 -> bb191__0_1679 [label="return"];
    bb189__0_1679 -> bb255__0_1679 [label="unwind"];
    bb190__0_1679 -> bb221__0_1679 [label=""];
    bb191__0_1679 -> bb192__0_1679 [label="return"];
    bb191__0_1679 -> bb246__0_1679 [label="unwind"];
    bb192__0_1679 -> bb193__0_1679 [label="return"];
    bb192__0_1679 -> bb246__0_1679 [label="unwind"];
    bb193__0_1679 -> bb194__0_1679 [label="0"];
    bb193__0_1679 -> bb195__0_1679 [label="1"];
    bb193__0_1679 -> bb6__0_1679 [label="otherwise"];
    bb194__0_1679 -> bb197__0_1679 [label="return"];
    bb194__0_1679 -> bb255__0_1679 [label="unwind"];
    bb195__0_1679 -> bb196__0_1679 [label="return"];
    bb195__0_1679 -> bb259__0_1679 [label="unwind"];
    bb196__0_1679 -> bb225__0_1679 [label="return"];
    bb196__0_1679 -> bb255__0_1679 [label="unwind"];
    bb197__0_1679 -> bb207__0_1679 [label="0"];
    bb197__0_1679 -> bb198__0_1679 [label="otherwise"];
    bb198__0_1679 -> bb199__0_1679 [label="return"];
    bb198__0_1679 -> bb255__0_1679 [label="unwind"];
    bb199__0_1679 -> bb200__0_1679 [label="return"];
    bb199__0_1679 -> bb255__0_1679 [label="unwind"];
    bb200__0_1679 -> bb201__0_1679 [label="return"];
    bb200__0_1679 -> bb255__0_1679 [label="unwind"];
    bb201__0_1679 -> bb202__0_1679 [label="return"];
    bb201__0_1679 -> bb255__0_1679 [label="unwind"];
    bb202__0_1679 -> bb203__0_1679 [label="return"];
    bb202__0_1679 -> bb245__0_1679 [label="unwind"];
    bb203__0_1679 -> bb204__0_1679 [label="return"];
    bb203__0_1679 -> bb245__0_1679 [label="unwind"];
    bb204__0_1679 -> bb205__0_1679 [label="return"];
    bb204__0_1679 -> bb255__0_1679 [label="unwind"];
    bb205__0_1679 -> bb206__0_1679 [label="return"];
    bb205__0_1679 -> bb255__0_1679 [label="unwind"];
    bb206__0_1679 -> bb226__0_1679 [label=""];
    bb207__0_1679 -> bb208__0_1679 [label="return"];
    bb207__0_1679 -> bb255__0_1679 [label="unwind"];
    bb208__0_1679 -> bb209__0_1679 [label="return"];
    bb208__0_1679 -> bb255__0_1679 [label="unwind"];
    bb209__0_1679 -> bb210__0_1679 [label="return"];
    bb209__0_1679 -> bb255__0_1679 [label="unwind"];
    bb210__0_1679 -> bb211__0_1679 [label="return"];
    bb210__0_1679 -> bb244__0_1679 [label="unwind"];
    bb211__0_1679 -> bb212__0_1679 [label="return"];
    bb211__0_1679 -> bb243__0_1679 [label="unwind"];
    bb212__0_1679 -> bb213__0_1679 [label="return"];
    bb212__0_1679 -> bb242__0_1679 [label="unwind"];
    bb213__0_1679 -> bb214__0_1679 [label="return"];
    bb213__0_1679 -> bb241__0_1679 [label="unwind"];
    bb214__0_1679 -> bb215__0_1679 [label="return"];
    bb214__0_1679 -> bb241__0_1679 [label="unwind"];
    bb215__0_1679 -> bb216__0_1679 [label="0"];
    bb215__0_1679 -> bb217__0_1679 [label="1"];
    bb215__0_1679 -> bb6__0_1679 [label="otherwise"];
    bb216__0_1679 -> bb219__0_1679 [label="return"];
    bb216__0_1679 -> bb244__0_1679 [label="unwind"];
    bb217__0_1679 -> bb218__0_1679 [label="return"];
    bb217__0_1679 -> bb258__0_1679 [label="unwind"];
    bb218__0_1679 -> bb223__0_1679 [label="return"];
    bb218__0_1679 -> bb244__0_1679 [label="unwind"];
    bb219__0_1679 -> bb220__0_1679 [label="return"];
    bb219__0_1679 -> bb255__0_1679 [label="unwind"];
    bb220__0_1679 -> bb221__0_1679 [label=""];
    bb221__0_1679 -> bb222__0_1679 [label="return"];
    bb221__0_1679 -> bb265__0_1679 [label="unwind"];
    bb222__0_1679 -> bb240__0_1679 [label=""];
    bb223__0_1679 -> bb224__0_1679 [label="return"];
    bb223__0_1679 -> bb255__0_1679 [label="unwind"];
    bb224__0_1679 -> bb226__0_1679 [label=""];
    bb225__0_1679 -> bb226__0_1679 [label=""];
    bb226__0_1679 -> bb227__0_1679 [label=""];
    bb227__0_1679 -> bb228__0_1679 [label=""];
    bb228__0_1679 -> bb229__0_1679 [label=""];
    bb229__0_1679 -> bb230__0_1679 [label=""];
    bb230__0_1679 -> bb232__0_1679 [label=""];
    bb231__0_1679 -> bb232__0_1679 [label=""];
    bb232__0_1679 -> bb237__0_1679 [label=""];
    bb233__0_1679 -> bb234__0_1679 [label="return"];
    bb233__0_1679 -> bb254__0_1679 [label="unwind"];
    bb234__0_1679 -> bb235__0_1679 [label="return"];
    bb234__0_1679 -> bb255__0_1679 [label="unwind"];
    bb235__0_1679 -> bb236__0_1679 [label=""];
    bb236__0_1679 -> bb237__0_1679 [label=""];
    bb237__0_1679 -> bb238__0_1679 [label="return"];
    bb237__0_1679 -> bb265__0_1679 [label="unwind"];
    bb238__0_1679 -> bb239__0_1679 [label="0"];
    bb238__0_1679 -> bb257__0_1679 [label="otherwise"];
    bb239__0_1679 -> bb240__0_1679 [label=""];
    bb241__0_1679 -> bb244__0_1679 [label="return"];
    bb242__0_1679 -> bb243__0_1679 [label="return"];
    bb243__0_1679 -> bb244__0_1679 [label="return"];
    bb244__0_1679 -> bb255__0_1679 [label="return"];
    bb245__0_1679 -> bb255__0_1679 [label="return"];
    bb246__0_1679 -> bb255__0_1679 [label="return"];
    bb247__0_1679 -> bb255__0_1679 [label="return"];
    bb248__0_1679 -> bb255__0_1679 [label="return"];
    bb249__0_1679 -> bb255__0_1679 [label="return"];
    bb250__0_1679 -> bb255__0_1679 [label="return"];
    bb251__0_1679 -> bb253__0_1679 [label="return"];
    bb252__0_1679 -> bb253__0_1679 [label="return"];
    bb253__0_1679 -> bb254__0_1679 [label="return"];
    bb254__0_1679 -> bb255__0_1679 [label="return"];
    bb255__0_1679 -> bb265__0_1679 [label="return"];
    bb257__0_1679 -> bb239__0_1679 [label="return"];
    bb257__0_1679 -> bb256__0_1679 [label="unwind"];
    bb258__0_1679 -> bb241__0_1679 [label=""];
    bb259__0_1679 -> bb246__0_1679 [label=""];
    bb260__0_1679 -> bb255__0_1679 [label=""];
    bb261__0_1679 -> bb254__0_1679 [label=""];
    bb262__0_1679 -> bb255__0_1679 [label=""];
    bb263__0_1679 -> bb265__0_1679 [label=""];
    bb264__0_1679 -> bb256__0_1679 [label="return"];
    bb265__0_1679 -> bb256__0_1679 [label="0"];
    bb265__0_1679 -> bb264__0_1679 [label="otherwise"];
    bb266__0_1679 -> bb256__0_1679 [label=""];
    bb267__0_1679 -> bb89__0_1679 [label=""];
}
