digraph Mir_0_3840 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn AMM::get_oracle_twap(_1: &amp;ReErased state::perp_market::AMM, _2: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, _3: u64) -&gt; std::result::Result&lt;std::option::Option&lt;i64&gt;, error::ErrorCode&gt;<br align="left"/>let mut _4: isize;<br align="left"/>let mut _5: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _6: i64;<br align="left"/>let mut _7: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _8: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _9: &amp;ReErased state::perp_market::AMM;<br align="left"/>let mut _10: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _11: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let _12: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let _13: state::oracle::OracleSource;<br align="left"/>let mut _14: isize;<br align="left"/>let _15: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _16: !;<br align="left"/>let mut _17: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _18: i64;<br align="left"/>let mut _19: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _20: i64;<br align="left"/>let mut _21: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _22: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _23: &amp;ReErased state::perp_market::AMM;<br align="left"/>let mut _24: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _25: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let _26: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let _27: state::oracle::OracleSource;<br align="left"/>let mut _28: isize;<br align="left"/>let _29: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _30: !;<br align="left"/>let mut _31: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _32: i64;<br align="left"/>let mut _33: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _34: i64;<br align="left"/>let mut _35: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _36: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _37: &amp;ReErased state::perp_market::AMM;<br align="left"/>let mut _38: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _39: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let _40: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let _41: state::oracle::OracleSource;<br align="left"/>let mut _42: isize;<br align="left"/>let _43: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _44: !;<br align="left"/>let mut _45: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _46: i64;<br align="left"/>let mut _47: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _48: i64;<br align="left"/>let mut _49: state::oracle::OraclePriceData;<br align="left"/>let mut _50: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _51: std::result::Result&lt;state::oracle::OraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _52: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _53: u64;<br align="left"/>let mut _54: isize;<br align="left"/>let _55: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _56: !;<br align="left"/>let mut _57: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _58: state::oracle::OraclePriceData;<br align="left"/>let mut _59: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _60: i64;<br align="left"/>let mut _61: state::oracle::OraclePriceData;<br align="left"/>let mut _62: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _63: std::result::Result&lt;state::oracle::OraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _64: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _65: u64;<br align="left"/>let mut _66: isize;<br align="left"/>let _67: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _68: !;<br align="left"/>let mut _69: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _70: state::oracle::OraclePriceData;<br align="left"/>let _71: ();<br align="left"/>let mut _72: &amp;ReErased str;<br align="left"/>let _73: &amp;ReErased str;<br align="left"/>let mut _74: error::ErrorCode;<br align="left"/>let mut _75: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _76: i64;<br align="left"/>let mut _77: state::oracle::OraclePriceData;<br align="left"/>let mut _78: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _79: std::result::Result&lt;state::oracle::OraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _80: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _81: u64;<br align="left"/>let mut _82: isize;<br align="left"/>let _83: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _84: !;<br align="left"/>let mut _85: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _86: state::oracle::OraclePriceData;<br align="left"/>let mut _87: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _88: i64;<br align="left"/>let mut _89: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _90: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _91: &amp;ReErased state::perp_market::AMM;<br align="left"/>let mut _92: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _93: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let _94: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let _95: state::oracle::OracleSource;<br align="left"/>let mut _96: isize;<br align="left"/>let _97: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _98: !;<br align="left"/>let mut _99: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _100: i64;<br align="left"/>let mut _101: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _102: i64;<br align="left"/>let mut _103: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _104: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _105: &amp;ReErased state::perp_market::AMM;<br align="left"/>let mut _106: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _107: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let _108: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let _109: state::oracle::OracleSource;<br align="left"/>let mut _110: isize;<br align="left"/>let _111: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _112: !;<br align="left"/>let mut _113: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _114: i64;<br align="left"/>let mut _115: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _116: i64;<br align="left"/>let mut _117: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _118: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _119: &amp;ReErased state::perp_market::AMM;<br align="left"/>let mut _120: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _121: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let _122: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let _123: state::oracle::OracleSource;<br align="left"/>let mut _124: isize;<br align="left"/>let _125: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _126: !;<br align="left"/>let mut _127: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _128: i64;<br align="left"/>let mut _129: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _130: i64;<br align="left"/>let mut _131: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _132: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _133: &amp;ReErased state::perp_market::AMM;<br align="left"/>let mut _134: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _135: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let _136: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let _137: state::oracle::OracleSource;<br align="left"/>let mut _138: isize;<br align="left"/>let _139: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _140: !;<br align="left"/>let mut _141: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _142: i64;<br align="left"/>let mut _143: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _144: i64;<br align="left"/>let mut _145: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _146: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _147: &amp;ReErased state::perp_market::AMM;<br align="left"/>let mut _148: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _149: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let _150: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let _151: state::oracle::OracleSource;<br align="left"/>let mut _152: isize;<br align="left"/>let _153: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _154: !;<br align="left"/>let mut _155: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _156: i64;<br align="left"/>let mut _157: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _158: i64;<br align="left"/>let mut _159: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _160: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _161: &amp;ReErased state::perp_market::AMM;<br align="left"/>let mut _162: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _163: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let _164: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let _165: state::oracle::OracleSource;<br align="left"/>let mut _166: isize;<br align="left"/>let _167: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _168: !;<br align="left"/>let mut _169: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _170: i64;<br align="left"/>let mut _171: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _172: i64;<br align="left"/>let mut _173: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _174: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _175: &amp;ReErased state::perp_market::AMM;<br align="left"/>let mut _176: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _177: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let _178: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let _179: state::oracle::OracleSource;<br align="left"/>let mut _180: isize;<br align="left"/>let _181: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _182: !;<br align="left"/>let mut _183: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _184: i64;<br align="left"/>let mut _185: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let mut _186: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let mut _187: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let mut _188: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let mut _189: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let mut _190: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let mut _191: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let mut _192: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let mut _193: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let mut _194: &amp;ReErased state::oracle::OracleSource;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug price_oracle =&gt; _2;<br align="left"/>debug slot =&gt; _3;<br align="left"/>debug residual =&gt; _15;<br align="left"/>debug val =&gt; _18;<br align="left"/>debug residual =&gt; _29;<br align="left"/>debug val =&gt; _32;<br align="left"/>debug residual =&gt; _43;<br align="left"/>debug val =&gt; _46;<br align="left"/>debug residual =&gt; _55;<br align="left"/>debug val =&gt; _58;<br align="left"/>debug residual =&gt; _67;<br align="left"/>debug val =&gt; _70;<br align="left"/>debug residual =&gt; _83;<br align="left"/>debug val =&gt; _86;<br align="left"/>debug residual =&gt; _97;<br align="left"/>debug val =&gt; _100;<br align="left"/>debug residual =&gt; _111;<br align="left"/>debug val =&gt; _114;<br align="left"/>debug residual =&gt; _125;<br align="left"/>debug val =&gt; _128;<br align="left"/>debug residual =&gt; _139;<br align="left"/>debug val =&gt; _142;<br align="left"/>debug residual =&gt; _153;<br align="left"/>debug val =&gt; _156;<br align="left"/>debug residual =&gt; _167;<br align="left"/>debug val =&gt; _170;<br align="left"/>debug residual =&gt; _181;<br align="left"/>debug val =&gt; _184;<br align="left"/>>;
    bb0__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_4 = discriminant(((*_1).72: state::oracle::OracleSource))<br/></td></tr><tr><td align="left">switchInt(move _4)</td></tr></table>>];
    bb1__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_171)<br/>StorageLive(_172)<br/>StorageLive(_173)<br/>StorageLive(_174)<br/>StorageLive(_175)<br/>_175 = &amp;(*_1)<br/>StorageLive(_176)<br/>_176 = &amp;(*_2)<br/>StorageLive(_177)<br/>StorageLive(_178)<br/>_185 = const _<br/>_178 = &amp;(*_185)<br/>_177 = &amp;(*_178)<br/></td></tr><tr><td align="left">_174 = AMM::get_pyth_twap(move _175, move _176, move _177)</td></tr></table>>];
    bb2__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb3__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = &amp;(*_1)<br/>StorageLive(_10)<br/>_10 = &amp;(*_2)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_194 = const _<br/>_12 = &amp;(*_194)<br/>_11 = &amp;(*_12)<br/></td></tr><tr><td align="left">_8 = AMM::get_pyth_twap(move _9, move _10, move _11)</td></tr></table>>];
    bb4__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _8)</td></tr></table>>];
    bb5__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_14 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _14)</td></tr></table>>];
    bb6__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_18)<br/>_18 = ((_7 as Continue).0: i64)<br/>_6 = _18<br/>StorageDead(_18)<br/>_5 = Option::&lt;i64&gt;::Some(move _6)<br/>StorageDead(_6)<br/>_0 = std::result::Result::&lt;Option&lt;i64&gt;, error::ErrorCode&gt;::Ok(move _5)<br/>StorageDead(_5)<br/>StorageDead(_12)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_15)<br/>_15 = ((_7 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_17)<br/>_17 = _15<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Option&lt;i64&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _17)</td></tr></table>>];
    bb8__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_15)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageDead(_12)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>_23 = &amp;(*_1)<br/>StorageLive(_24)<br/>_24 = &amp;(*_2)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_193 = const _<br/>_26 = &amp;(*_193)<br/>_25 = &amp;(*_26)<br/></td></tr><tr><td align="left">_22 = AMM::get_pyth_twap(move _23, move _24, move _25)</td></tr></table>>];
    bb10__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">_21 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _22)</td></tr></table>>];
    bb11__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>_28 = discriminant(_21)<br/></td></tr><tr><td align="left">switchInt(move _28)</td></tr></table>>];
    bb12__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_32)<br/>_32 = ((_21 as Continue).0: i64)<br/>_20 = _32<br/>StorageDead(_32)<br/>_19 = Option::&lt;i64&gt;::Some(move _20)<br/>StorageDead(_20)<br/>_0 = std::result::Result::&lt;Option&lt;i64&gt;, error::ErrorCode&gt;::Ok(move _19)<br/>StorageDead(_26)<br/>StorageDead(_21)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_29)<br/>_29 = ((_21 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_31)<br/>_31 = _29<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Option&lt;i64&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _31)</td></tr></table>>];
    bb14__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_29)<br/>StorageDead(_20)<br/>StorageDead(_26)<br/>StorageDead(_21)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>_37 = &amp;(*_1)<br/>StorageLive(_38)<br/>_38 = &amp;(*_2)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_192 = const _<br/>_40 = &amp;(*_192)<br/>_39 = &amp;(*_40)<br/></td></tr><tr><td align="left">_36 = AMM::get_pyth_twap(move _37, move _38, move _39)</td></tr></table>>];
    bb16__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_38)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">_35 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _36)</td></tr></table>>];
    bb17__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>_42 = discriminant(_35)<br/></td></tr><tr><td align="left">switchInt(move _42)</td></tr></table>>];
    bb18__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_46)<br/>_46 = ((_35 as Continue).0: i64)<br/>_34 = _46<br/>StorageDead(_46)<br/>_33 = Option::&lt;i64&gt;::Some(move _34)<br/>StorageDead(_34)<br/>_0 = std::result::Result::&lt;Option&lt;i64&gt;, error::ErrorCode&gt;::Ok(move _33)<br/>StorageDead(_40)<br/>StorageDead(_35)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_43)<br/>_43 = ((_35 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_45)<br/>_45 = _43<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Option&lt;i64&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _45)</td></tr></table>>];
    bb20__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_43)<br/>StorageDead(_34)<br/>StorageDead(_40)<br/>StorageDead(_35)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>_52 = &amp;(*_2)<br/>StorageLive(_53)<br/>_53 = _3<br/></td></tr><tr><td align="left">_51 = get_switchboard_price(move _52, move _53)</td></tr></table>>];
    bb22__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">_50 = &lt;std::result::Result&lt;OraclePriceData, error::ErrorCode&gt; as Try&gt;::branch(move _51)</td></tr></table>>];
    bb23__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>_54 = discriminant(_50)<br/></td></tr><tr><td align="left">switchInt(move _54)</td></tr></table>>];
    bb24__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_58)<br/>_58 = ((_50 as Continue).0: state::oracle::OraclePriceData)<br/>_49 = _58<br/>StorageDead(_58)<br/>_48 = (_49.0: i64)<br/>_47 = Option::&lt;i64&gt;::Some(move _48)<br/>StorageDead(_48)<br/>_0 = std::result::Result::&lt;Option&lt;i64&gt;, error::ErrorCode&gt;::Ok(move _47)<br/>StorageDead(_50)<br/>StorageDead(_49)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_55)<br/>_55 = ((_50 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_57)<br/>_57 = _55<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Option&lt;i64&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _57)</td></tr></table>>];
    bb26__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_55)<br/>StorageDead(_48)<br/>StorageDead(_50)<br/>StorageDead(_49)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>_64 = &amp;(*_2)<br/>StorageLive(_65)<br/>_65 = _3<br/></td></tr><tr><td align="left">_63 = get_sb_on_demand_price(move _64, move _65)</td></tr></table>>];
    bb28__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageDead(_64)<br/></td></tr><tr><td align="left">_62 = &lt;std::result::Result&lt;OraclePriceData, error::ErrorCode&gt; as Try&gt;::branch(move _63)</td></tr></table>>];
    bb29__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>_66 = discriminant(_62)<br/></td></tr><tr><td align="left">switchInt(move _66)</td></tr></table>>];
    bb30__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_70)<br/>_70 = ((_62 as Continue).0: state::oracle::OraclePriceData)<br/>_61 = _70<br/>StorageDead(_70)<br/>_60 = (_61.0: i64)<br/>_59 = Option::&lt;i64&gt;::Some(move _60)<br/>StorageDead(_60)<br/>_0 = std::result::Result::&lt;Option&lt;i64&gt;, error::ErrorCode&gt;::Ok(move _59)<br/>StorageDead(_59)<br/>StorageDead(_62)<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_67)<br/>_67 = ((_62 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_69)<br/>_69 = _67<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Option&lt;i64&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _69)</td></tr></table>>];
    bb32__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageDead(_67)<br/>StorageDead(_60)<br/>StorageDead(_59)<br/>StorageDead(_62)<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>_73 = const &quot;Can't get oracle twap for quote asset&quot;<br/>_72 = &amp;(*_73)<br/></td></tr><tr><td align="left">_71 = solana_program::log::sol_log(move _72)</td></tr></table>>];
    bb34__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_73)<br/>StorageDead(_71)<br/>StorageLive(_74)<br/>_74 = error::ErrorCode::DefaultError<br/>_0 = std::result::Result::&lt;Option&lt;i64&gt;, error::ErrorCode&gt;::Err(move _74)<br/>StorageDead(_74)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>_80 = &amp;(*_2)<br/>StorageLive(_81)<br/>_81 = _3<br/></td></tr><tr><td align="left">_79 = get_prelaunch_price(move _80, move _81)</td></tr></table>>];
    bb36__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>StorageDead(_80)<br/></td></tr><tr><td align="left">_78 = &lt;std::result::Result&lt;OraclePriceData, error::ErrorCode&gt; as Try&gt;::branch(move _79)</td></tr></table>>];
    bb37__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>_82 = discriminant(_78)<br/></td></tr><tr><td align="left">switchInt(move _82)</td></tr></table>>];
    bb38__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_86)<br/>_86 = ((_78 as Continue).0: state::oracle::OraclePriceData)<br/>_77 = _86<br/>StorageDead(_86)<br/>_76 = (_77.0: i64)<br/>_75 = Option::&lt;i64&gt;::Some(move _76)<br/>StorageDead(_76)<br/>_0 = std::result::Result::&lt;Option&lt;i64&gt;, error::ErrorCode&gt;::Ok(move _75)<br/>StorageDead(_78)<br/>StorageDead(_77)<br/>StorageDead(_75)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_83)<br/>_83 = ((_78 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_85)<br/>_85 = _83<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Option&lt;i64&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _85)</td></tr></table>>];
    bb40__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>StorageDead(_83)<br/>StorageDead(_76)<br/>StorageDead(_78)<br/>StorageDead(_77)<br/>StorageDead(_75)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>_91 = &amp;(*_1)<br/>StorageLive(_92)<br/>_92 = &amp;(*_2)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>_191 = const _<br/>_94 = &amp;(*_191)<br/>_93 = &amp;(*_94)<br/></td></tr><tr><td align="left">_90 = AMM::get_pyth_twap(move _91, move _92, move _93)</td></tr></table>>];
    bb42__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageDead(_92)<br/>StorageDead(_91)<br/></td></tr><tr><td align="left">_89 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _90)</td></tr></table>>];
    bb43__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>_96 = discriminant(_89)<br/></td></tr><tr><td align="left">switchInt(move _96)</td></tr></table>>];
    bb44__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_100)<br/>_100 = ((_89 as Continue).0: i64)<br/>_88 = _100<br/>StorageDead(_100)<br/>_87 = Option::&lt;i64&gt;::Some(move _88)<br/>StorageDead(_88)<br/>_0 = std::result::Result::&lt;Option&lt;i64&gt;, error::ErrorCode&gt;::Ok(move _87)<br/>StorageDead(_94)<br/>StorageDead(_89)<br/>StorageDead(_87)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageLive(_97)<br/>_97 = ((_89 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_99)<br/>_99 = _97<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Option&lt;i64&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _99)</td></tr></table>>];
    bb46__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/>StorageDead(_97)<br/>StorageDead(_88)<br/>StorageDead(_94)<br/>StorageDead(_89)<br/>StorageDead(_87)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>_105 = &amp;(*_1)<br/>StorageLive(_106)<br/>_106 = &amp;(*_2)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>_190 = const _<br/>_108 = &amp;(*_190)<br/>_107 = &amp;(*_108)<br/></td></tr><tr><td align="left">_104 = AMM::get_pyth_twap(move _105, move _106, move _107)</td></tr></table>>];
    bb48__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>StorageDead(_106)<br/>StorageDead(_105)<br/></td></tr><tr><td align="left">_103 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _104)</td></tr></table>>];
    bb49__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/>_110 = discriminant(_103)<br/></td></tr><tr><td align="left">switchInt(move _110)</td></tr></table>>];
    bb50__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageLive(_114)<br/>_114 = ((_103 as Continue).0: i64)<br/>_102 = _114<br/>StorageDead(_114)<br/>_101 = Option::&lt;i64&gt;::Some(move _102)<br/>StorageDead(_102)<br/>_0 = std::result::Result::&lt;Option&lt;i64&gt;, error::ErrorCode&gt;::Ok(move _101)<br/>StorageDead(_108)<br/>StorageDead(_103)<br/>StorageDead(_101)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb51__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageLive(_111)<br/>_111 = ((_103 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_113)<br/>_113 = _111<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Option&lt;i64&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _113)</td></tr></table>>];
    bb52__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_113)<br/>StorageDead(_111)<br/>StorageDead(_102)<br/>StorageDead(_108)<br/>StorageDead(_103)<br/>StorageDead(_101)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>_119 = &amp;(*_1)<br/>StorageLive(_120)<br/>_120 = &amp;(*_2)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>_189 = const _<br/>_122 = &amp;(*_189)<br/>_121 = &amp;(*_122)<br/></td></tr><tr><td align="left">_118 = AMM::get_pyth_twap(move _119, move _120, move _121)</td></tr></table>>];
    bb54__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_121)<br/>StorageDead(_120)<br/>StorageDead(_119)<br/></td></tr><tr><td align="left">_117 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _118)</td></tr></table>>];
    bb55__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>_124 = discriminant(_117)<br/></td></tr><tr><td align="left">switchInt(move _124)</td></tr></table>>];
    bb56__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageLive(_128)<br/>_128 = ((_117 as Continue).0: i64)<br/>_116 = _128<br/>StorageDead(_128)<br/>_115 = Option::&lt;i64&gt;::Some(move _116)<br/>StorageDead(_116)<br/>_0 = std::result::Result::&lt;Option&lt;i64&gt;, error::ErrorCode&gt;::Ok(move _115)<br/>StorageDead(_122)<br/>StorageDead(_117)<br/>StorageDead(_115)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb57__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageLive(_125)<br/>_125 = ((_117 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_127)<br/>_127 = _125<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Option&lt;i64&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _127)</td></tr></table>>];
    bb58__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/>StorageDead(_125)<br/>StorageDead(_116)<br/>StorageDead(_122)<br/>StorageDead(_117)<br/>StorageDead(_115)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageLive(_129)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>_133 = &amp;(*_1)<br/>StorageLive(_134)<br/>_134 = &amp;(*_2)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>_188 = const _<br/>_136 = &amp;(*_188)<br/>_135 = &amp;(*_136)<br/></td></tr><tr><td align="left">_132 = AMM::get_pyth_twap(move _133, move _134, move _135)</td></tr></table>>];
    bb60__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_135)<br/>StorageDead(_134)<br/>StorageDead(_133)<br/></td></tr><tr><td align="left">_131 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _132)</td></tr></table>>];
    bb61__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_132)<br/>_138 = discriminant(_131)<br/></td></tr><tr><td align="left">switchInt(move _138)</td></tr></table>>];
    bb62__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageLive(_142)<br/>_142 = ((_131 as Continue).0: i64)<br/>_130 = _142<br/>StorageDead(_142)<br/>_129 = Option::&lt;i64&gt;::Some(move _130)<br/>StorageDead(_130)<br/>_0 = std::result::Result::&lt;Option&lt;i64&gt;, error::ErrorCode&gt;::Ok(move _129)<br/>StorageDead(_136)<br/>StorageDead(_131)<br/>StorageDead(_129)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb63__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageLive(_139)<br/>_139 = ((_131 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_141)<br/>_141 = _139<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Option&lt;i64&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _141)</td></tr></table>>];
    bb64__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_141)<br/>StorageDead(_139)<br/>StorageDead(_130)<br/>StorageDead(_136)<br/>StorageDead(_131)<br/>StorageDead(_129)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb65__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageLive(_143)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>_147 = &amp;(*_1)<br/>StorageLive(_148)<br/>_148 = &amp;(*_2)<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>_187 = const _<br/>_150 = &amp;(*_187)<br/>_149 = &amp;(*_150)<br/></td></tr><tr><td align="left">_146 = AMM::get_pyth_twap(move _147, move _148, move _149)</td></tr></table>>];
    bb66__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_149)<br/>StorageDead(_148)<br/>StorageDead(_147)<br/></td></tr><tr><td align="left">_145 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _146)</td></tr></table>>];
    bb67__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_146)<br/>_152 = discriminant(_145)<br/></td></tr><tr><td align="left">switchInt(move _152)</td></tr></table>>];
    bb68__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageLive(_156)<br/>_156 = ((_145 as Continue).0: i64)<br/>_144 = _156<br/>StorageDead(_156)<br/>_143 = Option::&lt;i64&gt;::Some(move _144)<br/>StorageDead(_144)<br/>_0 = std::result::Result::&lt;Option&lt;i64&gt;, error::ErrorCode&gt;::Ok(move _143)<br/>StorageDead(_150)<br/>StorageDead(_145)<br/>StorageDead(_143)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb69__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageLive(_153)<br/>_153 = ((_145 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_155)<br/>_155 = _153<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Option&lt;i64&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _155)</td></tr></table>>];
    bb70__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_155)<br/>StorageDead(_153)<br/>StorageDead(_144)<br/>StorageDead(_150)<br/>StorageDead(_145)<br/>StorageDead(_143)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb71__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageLive(_157)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>StorageLive(_161)<br/>_161 = &amp;(*_1)<br/>StorageLive(_162)<br/>_162 = &amp;(*_2)<br/>StorageLive(_163)<br/>StorageLive(_164)<br/>_186 = const _<br/>_164 = &amp;(*_186)<br/>_163 = &amp;(*_164)<br/></td></tr><tr><td align="left">_160 = AMM::get_pyth_twap(move _161, move _162, move _163)</td></tr></table>>];
    bb72__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_163)<br/>StorageDead(_162)<br/>StorageDead(_161)<br/></td></tr><tr><td align="left">_159 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _160)</td></tr></table>>];
    bb73__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_160)<br/>_166 = discriminant(_159)<br/></td></tr><tr><td align="left">switchInt(move _166)</td></tr></table>>];
    bb74__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageLive(_170)<br/>_170 = ((_159 as Continue).0: i64)<br/>_158 = _170<br/>StorageDead(_170)<br/>_157 = Option::&lt;i64&gt;::Some(move _158)<br/>StorageDead(_158)<br/>_0 = std::result::Result::&lt;Option&lt;i64&gt;, error::ErrorCode&gt;::Ok(move _157)<br/>StorageDead(_164)<br/>StorageDead(_159)<br/>StorageDead(_157)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb75__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageLive(_167)<br/>_167 = ((_159 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_169)<br/>_169 = _167<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Option&lt;i64&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _169)</td></tr></table>>];
    bb76__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_169)<br/>StorageDead(_167)<br/>StorageDead(_158)<br/>StorageDead(_164)<br/>StorageDead(_159)<br/>StorageDead(_157)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb77__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_177)<br/>StorageDead(_176)<br/>StorageDead(_175)<br/></td></tr><tr><td align="left">_173 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _174)</td></tr></table>>];
    bb78__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_174)<br/>_180 = discriminant(_173)<br/></td></tr><tr><td align="left">switchInt(move _180)</td></tr></table>>];
    bb79__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageLive(_184)<br/>_184 = ((_173 as Continue).0: i64)<br/>_172 = _184<br/>StorageDead(_184)<br/>_171 = Option::&lt;i64&gt;::Some(move _172)<br/>StorageDead(_172)<br/>_0 = std::result::Result::&lt;Option&lt;i64&gt;, error::ErrorCode&gt;::Ok(move _171)<br/>StorageDead(_178)<br/>StorageDead(_173)<br/>StorageDead(_171)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb80__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageLive(_181)<br/>_181 = ((_173 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_183)<br/>_183 = _181<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Option&lt;i64&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _183)</td></tr></table>>];
    bb81__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_183)<br/>StorageDead(_181)<br/>StorageDead(_172)<br/>StorageDead(_178)<br/>StorageDead(_173)<br/>StorageDead(_171)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb82__0_3840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_3840 -> bb3__0_3840 [label="0"];
    bb0__0_3840 -> bb21__0_3840 [label="1"];
    bb0__0_3840 -> bb33__0_3840 [label="2"];
    bb0__0_3840 -> bb9__0_3840 [label="3"];
    bb0__0_3840 -> bb15__0_3840 [label="4"];
    bb0__0_3840 -> bb3__0_3840 [label="5"];
    bb0__0_3840 -> bb35__0_3840 [label="6"];
    bb0__0_3840 -> bb41__0_3840 [label="7"];
    bb0__0_3840 -> bb47__0_3840 [label="8"];
    bb0__0_3840 -> bb53__0_3840 [label="9"];
    bb0__0_3840 -> bb41__0_3840 [label="10"];
    bb0__0_3840 -> bb27__0_3840 [label="11"];
    bb0__0_3840 -> bb59__0_3840 [label="12"];
    bb0__0_3840 -> bb65__0_3840 [label="13"];
    bb0__0_3840 -> bb71__0_3840 [label="14"];
    bb0__0_3840 -> bb1__0_3840 [label="15"];
    bb0__0_3840 -> bb2__0_3840 [label="otherwise"];
    bb1__0_3840 -> bb77__0_3840 [label="return"];
    bb3__0_3840 -> bb4__0_3840 [label="return"];
    bb4__0_3840 -> bb5__0_3840 [label="return"];
    bb5__0_3840 -> bb6__0_3840 [label="0"];
    bb5__0_3840 -> bb7__0_3840 [label="1"];
    bb5__0_3840 -> bb2__0_3840 [label="otherwise"];
    bb6__0_3840 -> bb82__0_3840 [label=""];
    bb7__0_3840 -> bb8__0_3840 [label="return"];
    bb8__0_3840 -> bb82__0_3840 [label=""];
    bb9__0_3840 -> bb10__0_3840 [label="return"];
    bb10__0_3840 -> bb11__0_3840 [label="return"];
    bb11__0_3840 -> bb12__0_3840 [label="0"];
    bb11__0_3840 -> bb13__0_3840 [label="1"];
    bb11__0_3840 -> bb2__0_3840 [label="otherwise"];
    bb12__0_3840 -> bb82__0_3840 [label=""];
    bb13__0_3840 -> bb14__0_3840 [label="return"];
    bb14__0_3840 -> bb82__0_3840 [label=""];
    bb15__0_3840 -> bb16__0_3840 [label="return"];
    bb16__0_3840 -> bb17__0_3840 [label="return"];
    bb17__0_3840 -> bb18__0_3840 [label="0"];
    bb17__0_3840 -> bb19__0_3840 [label="1"];
    bb17__0_3840 -> bb2__0_3840 [label="otherwise"];
    bb18__0_3840 -> bb82__0_3840 [label=""];
    bb19__0_3840 -> bb20__0_3840 [label="return"];
    bb20__0_3840 -> bb82__0_3840 [label=""];
    bb21__0_3840 -> bb22__0_3840 [label="return"];
    bb22__0_3840 -> bb23__0_3840 [label="return"];
    bb23__0_3840 -> bb24__0_3840 [label="0"];
    bb23__0_3840 -> bb25__0_3840 [label="1"];
    bb23__0_3840 -> bb2__0_3840 [label="otherwise"];
    bb24__0_3840 -> bb82__0_3840 [label=""];
    bb25__0_3840 -> bb26__0_3840 [label="return"];
    bb26__0_3840 -> bb82__0_3840 [label=""];
    bb27__0_3840 -> bb28__0_3840 [label="return"];
    bb28__0_3840 -> bb29__0_3840 [label="return"];
    bb29__0_3840 -> bb30__0_3840 [label="0"];
    bb29__0_3840 -> bb31__0_3840 [label="1"];
    bb29__0_3840 -> bb2__0_3840 [label="otherwise"];
    bb30__0_3840 -> bb82__0_3840 [label=""];
    bb31__0_3840 -> bb32__0_3840 [label="return"];
    bb32__0_3840 -> bb82__0_3840 [label=""];
    bb33__0_3840 -> bb34__0_3840 [label="return"];
    bb34__0_3840 -> bb82__0_3840 [label=""];
    bb35__0_3840 -> bb36__0_3840 [label="return"];
    bb36__0_3840 -> bb37__0_3840 [label="return"];
    bb37__0_3840 -> bb38__0_3840 [label="0"];
    bb37__0_3840 -> bb39__0_3840 [label="1"];
    bb37__0_3840 -> bb2__0_3840 [label="otherwise"];
    bb38__0_3840 -> bb82__0_3840 [label=""];
    bb39__0_3840 -> bb40__0_3840 [label="return"];
    bb40__0_3840 -> bb82__0_3840 [label=""];
    bb41__0_3840 -> bb42__0_3840 [label="return"];
    bb42__0_3840 -> bb43__0_3840 [label="return"];
    bb43__0_3840 -> bb44__0_3840 [label="0"];
    bb43__0_3840 -> bb45__0_3840 [label="1"];
    bb43__0_3840 -> bb2__0_3840 [label="otherwise"];
    bb44__0_3840 -> bb82__0_3840 [label=""];
    bb45__0_3840 -> bb46__0_3840 [label="return"];
    bb46__0_3840 -> bb82__0_3840 [label=""];
    bb47__0_3840 -> bb48__0_3840 [label="return"];
    bb48__0_3840 -> bb49__0_3840 [label="return"];
    bb49__0_3840 -> bb50__0_3840 [label="0"];
    bb49__0_3840 -> bb51__0_3840 [label="1"];
    bb49__0_3840 -> bb2__0_3840 [label="otherwise"];
    bb50__0_3840 -> bb82__0_3840 [label=""];
    bb51__0_3840 -> bb52__0_3840 [label="return"];
    bb52__0_3840 -> bb82__0_3840 [label=""];
    bb53__0_3840 -> bb54__0_3840 [label="return"];
    bb54__0_3840 -> bb55__0_3840 [label="return"];
    bb55__0_3840 -> bb56__0_3840 [label="0"];
    bb55__0_3840 -> bb57__0_3840 [label="1"];
    bb55__0_3840 -> bb2__0_3840 [label="otherwise"];
    bb56__0_3840 -> bb82__0_3840 [label=""];
    bb57__0_3840 -> bb58__0_3840 [label="return"];
    bb58__0_3840 -> bb82__0_3840 [label=""];
    bb59__0_3840 -> bb60__0_3840 [label="return"];
    bb60__0_3840 -> bb61__0_3840 [label="return"];
    bb61__0_3840 -> bb62__0_3840 [label="0"];
    bb61__0_3840 -> bb63__0_3840 [label="1"];
    bb61__0_3840 -> bb2__0_3840 [label="otherwise"];
    bb62__0_3840 -> bb82__0_3840 [label=""];
    bb63__0_3840 -> bb64__0_3840 [label="return"];
    bb64__0_3840 -> bb82__0_3840 [label=""];
    bb65__0_3840 -> bb66__0_3840 [label="return"];
    bb66__0_3840 -> bb67__0_3840 [label="return"];
    bb67__0_3840 -> bb68__0_3840 [label="0"];
    bb67__0_3840 -> bb69__0_3840 [label="1"];
    bb67__0_3840 -> bb2__0_3840 [label="otherwise"];
    bb68__0_3840 -> bb82__0_3840 [label=""];
    bb69__0_3840 -> bb70__0_3840 [label="return"];
    bb70__0_3840 -> bb82__0_3840 [label=""];
    bb71__0_3840 -> bb72__0_3840 [label="return"];
    bb72__0_3840 -> bb73__0_3840 [label="return"];
    bb73__0_3840 -> bb74__0_3840 [label="0"];
    bb73__0_3840 -> bb75__0_3840 [label="1"];
    bb73__0_3840 -> bb2__0_3840 [label="otherwise"];
    bb74__0_3840 -> bb82__0_3840 [label=""];
    bb75__0_3840 -> bb76__0_3840 [label="return"];
    bb76__0_3840 -> bb82__0_3840 [label=""];
    bb77__0_3840 -> bb78__0_3840 [label="return"];
    bb78__0_3840 -> bb79__0_3840 [label="0"];
    bb78__0_3840 -> bb80__0_3840 [label="1"];
    bb78__0_3840 -> bb2__0_3840 [label="otherwise"];
    bb79__0_3840 -> bb82__0_3840 [label=""];
    bb80__0_3840 -> bb81__0_3840 [label="return"];
    bb81__0_3840 -> bb82__0_3840 [label=""];
}
