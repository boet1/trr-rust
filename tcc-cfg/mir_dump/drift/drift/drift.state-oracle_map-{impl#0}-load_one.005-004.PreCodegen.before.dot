digraph Mir_0_3604 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn OracleMap::&lt;'a&gt;::load_one(_1: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, _2: u64, _3: std::option::Option&lt;state::state::OracleGuardRails&gt;) -&gt; std::result::Result&lt;state::oracle_map::OracleMap&lt;ReErased&gt;, error::ErrorCode&gt;<br align="left"/>let mut _4: std::collections::BTreeMap&lt;anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, std::alloc::Global&gt;;<br align="left"/>let _5: ();<br align="left"/>let mut _6: bool;<br align="left"/>let mut _7: &amp;ReErased [anchor_lang::prelude::Pubkey];<br align="left"/>let mut _8: &amp;ReErased [anchor_lang::prelude::Pubkey; 4_usize];<br align="left"/>let _9: [anchor_lang::prelude::Pubkey; 4_usize];<br align="left"/>let mut _10: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _11: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _12: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _13: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _14: std::option::Option&lt;anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _15: &amp;ReErased mut std::collections::BTreeMap&lt;anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _16: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _17: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _18: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _19: bool;<br align="left"/>let mut _20: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _21: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _22: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _23: anchor_lang::prelude::Pubkey;<br align="left"/>let _24: std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _25: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;&gt;;<br align="left"/>let mut _26: std::result::Result&lt;std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _27: std::result::Result&lt;std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _28: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _29: Closure(DefId(0:3606 ~ drift[d311]::state::oracle_map::{impl#0}::load_one::{closure#0}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::prelude::ProgramError,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _30: isize;<br align="left"/>let _31: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _32: !;<br align="left"/>let mut _33: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _34: std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let _35: &amp;ReErased [u8; 8_usize];<br align="left"/>let _36: usize;<br align="left"/>let _37: &amp;ReErased [u8];<br align="left"/>let _38: &amp;ReErased [u8];<br align="left"/>let mut _39: &amp;ReErased [u8];<br align="left"/>let _40: &amp;ReErased &amp;ReErased mut [u8];<br align="left"/>let mut _41: &amp;ReErased std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _42: std::ops::Range&lt;usize&gt;;<br align="left"/>let mut _43: usize;<br align="left"/>let mut _44: usize;<br align="left"/>let mut _45: usize;<br align="left"/>let mut _46: (usize, bool);<br align="left"/>let mut _47: &amp;ReErased [u8];<br align="left"/>let _48: ();<br align="left"/>let mut _49: bool;<br align="left"/>let mut _50: &amp;ReErased &amp;ReErased [u8; 8_usize];<br align="left"/>let mut _51: &amp;ReErased &amp;ReErased [u8; 8_usize];<br align="left"/>let _52: &amp;ReErased [u8; 8_usize];<br align="left"/>let _53: [u8; 8_usize];<br align="left"/>let _54: usize;<br align="left"/>let mut _55: bool;<br align="left"/>let mut _56: usize;<br align="left"/>let mut _57: &amp;ReErased [u8];<br align="left"/>let _58: &amp;ReErased &amp;ReErased mut [u8];<br align="left"/>let mut _59: &amp;ReErased std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _60: usize;<br align="left"/>let mut _61: !;<br align="left"/>let _62: ();<br align="left"/>let mut _63: &amp;ReErased str;<br align="left"/>let _64: &amp;ReErased str;<br align="left"/>let mut _65: error::ErrorCode;<br align="left"/>let mut _66: bool;<br align="left"/>let mut _67: &amp;ReErased &amp;ReErased [u8; 8_usize];<br align="left"/>let mut _68: &amp;ReErased &amp;ReErased [u8; 8_usize];<br align="left"/>let _69: &amp;ReErased [u8; 8_usize];<br align="left"/>let _70: [u8; 8_usize];<br align="left"/>let _71: usize;<br align="left"/>let mut _72: bool;<br align="left"/>let mut _73: usize;<br align="left"/>let mut _74: &amp;ReErased [u8];<br align="left"/>let _75: &amp;ReErased &amp;ReErased mut [u8];<br align="left"/>let mut _76: &amp;ReErased std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _77: usize;<br align="left"/>let mut _78: !;<br align="left"/>let _79: ();<br align="left"/>let mut _80: &amp;ReErased str;<br align="left"/>let _81: &amp;ReErased str;<br align="left"/>let mut _82: error::ErrorCode;<br align="left"/>let mut _83: !;<br align="left"/>let _84: ();<br align="left"/>let mut _85: &amp;ReErased str;<br align="left"/>let _86: &amp;ReErased str;<br align="left"/>let mut _87: error::ErrorCode;<br align="left"/>let _88: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _89: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _90: std::option::Option&lt;anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _91: &amp;ReErased mut std::collections::BTreeMap&lt;anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _92: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _93: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _94: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _95: bool;<br align="left"/>let mut _96: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _97: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _98: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _99: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _100: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _101: !;<br align="left"/>let mut _102: error::ErrorCode;<br align="left"/>let _103: state::state::OracleGuardRails;<br align="left"/>let mut _104: isize;<br align="left"/>let _105: state::state::OracleGuardRails;<br align="left"/>let mut _106: state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _107: std::collections::BTreeMap&lt;anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _108: std::collections::BTreeMap&lt;(anchor_lang::prelude::Pubkey, state::oracle::OracleSource), state::oracle::OraclePriceData, std::alloc::Global&gt;;<br align="left"/>let mut _109: std::collections::BTreeMap&lt;(anchor_lang::prelude::Pubkey, state::oracle::OracleSource), math::oracle::OracleValidity, std::alloc::Global&gt;;<br align="left"/>let mut _110: u64;<br align="left"/>let mut _111: state::state::OracleGuardRails;<br align="left"/>let mut _112: state::oracle::OraclePriceData;<br align="left"/>let mut _113: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _114: &amp;ReErased [anchor_lang::prelude::Pubkey; 4_usize];<br align="left"/>let mut _115: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _116: &amp;ReErased mut [u8];<br align="left"/>let mut _117: &amp;ReErased mut [u8];<br align="left"/>let mut _118: &amp;ReErased mut [u8];<br align="left"/>let mut _119: bool;<br align="left"/>let mut _120: isize;<br align="left"/>let mut _121: isize;<br align="left"/>let mut _122: isize;<br align="left"/>let mut _123: isize;<br align="left"/>let mut _124: isize;<br align="left"/>debug account_info =&gt; _1;<br align="left"/>debug slot =&gt; _2;<br align="left"/>debug oracle_guard_rails =&gt; _3;<br align="left"/>debug oracles =&gt; _4;<br align="left"/>debug pubkey =&gt; _12;<br align="left"/>debug data =&gt; _24;<br align="left"/>debug residual =&gt; _31;<br align="left"/>debug val =&gt; _34;<br align="left"/>debug account_discriminator =&gt; _35;<br align="left"/>debug offset =&gt; _36;<br align="left"/>debug slice =&gt; _37;<br align="left"/>debug expected_data_len =&gt; _54;<br align="left"/>debug expected_data_len =&gt; _71;<br align="left"/>debug pubkey =&gt; _88;<br align="left"/>debug ogr =&gt; _103;<br align="left"/>debug o =&gt; _105;<br align="left"/>>;
    bb0__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_119 = const false<br/>StorageLive(_4)<br/>_119 = const true<br/></td></tr><tr><td align="left">_4 = BTreeMap::&lt;anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;::new()</td></tr></table>>];
    bb1__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_114 = const _<br/>_8 = &amp;(*_114)<br/>_7 = move _8 as &amp;[anchor_lang::prelude::Pubkey] (PointerCoercion(Unsize))<br/>StorageDead(_8)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = &amp;((*_1).3: &amp;anchor_lang::prelude::Pubkey)<br/>_115 = deref_copy (*_11)<br/>_10 = &amp;(*_115)<br/></td></tr><tr><td align="left">_6 = core::slice::&lt;impl [anchor_lang::prelude::Pubkey]&gt;::contains(move _7, move _10)</td></tr></table>>];
    bb2__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left">switchInt(move _6)</td></tr></table>>];
    bb3__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_10)<br/>StorageDead(_7)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>_13 = &amp;(*_1)<br/></td></tr><tr><td align="left">_12 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::Key&gt;::key(move _13)</td></tr></table>>];
    bb4__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = &amp;mut _4<br/>StorageLive(_16)<br/>_16 = _12<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = &amp;(*_1)<br/></td></tr><tr><td align="left">_17 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as Clone&gt;::clone(move _18)</td></tr></table>>];
    bb5__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/></td></tr><tr><td align="left">_14 = BTreeMap::&lt;anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;::insert(move _15, move _16, move _17)</td></tr></table>>];
    bb6__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">drop(_14)</td></tr></table>>];
    bb7__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>_5 = const ()<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_10)<br/>StorageDead(_7)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_20 = &amp;((*_1).3: &amp;anchor_lang::prelude::Pubkey)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/></td></tr><tr><td align="left">_23 = id()</td></tr></table>>];
    bb9__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">_22 = &amp;_23<br/>_21 = &amp;_22<br/></td></tr><tr><td align="left">_19 = &lt;&amp;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _20, move _21)</td></tr></table>>];
    bb10__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left">switchInt(move _19)</td></tr></table>>];
    bb11__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_22)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>_28 = &amp;(*_1)<br/></td></tr><tr><td align="left">_27 = anchor_lang::prelude::AccountInfo::&lt;'_&gt;::try_borrow_data(move _28)</td></tr></table>>];
    bb12__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageLive(_29)<br/>_29 = {closure@programs/drift/src/state/oracle_map.rs:265:63: 265:66}<br/></td></tr><tr><td align="left">_26 = std::result::Result::&lt;Ref&lt;'_, &amp;mut [u8]&gt;, anchor_lang::prelude::ProgramError&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/state/oracle_map.rs:265:63: 265:66}&gt;(move _27, move _29)</td></tr></table>>];
    bb13__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">_25 = &lt;std::result::Result&lt;Ref&lt;'_, &amp;mut [u8]&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _26)</td></tr></table>>];
    bb14__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>_30 = discriminant(_25)<br/></td></tr><tr><td align="left">switchInt(move _30)</td></tr></table>>];
    bb15__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_34)<br/>_34 = move ((_25 as Continue).0: std::cell::Ref&lt;'_, &amp;mut [u8]&gt;)<br/>_24 = move _34<br/>StorageDead(_34)<br/>_122 = discriminant(_25)<br/>StorageDead(_25)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>_36 = const 0_usize<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>_41 = &amp;_24<br/></td></tr><tr><td align="left">_40 = &lt;Ref&lt;'_, &amp;mut [u8]&gt; as Deref&gt;::deref(move _41)</td></tr></table>>];
    bb16__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb17__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_31)<br/>_31 = ((_25 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_33)<br/>_33 = _31<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;OracleMap&lt;'_&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _33)</td></tr></table>>];
    bb18__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_31)<br/>_120 = discriminant(_25)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">_116 = deref_copy (*_40)<br/>_39 = &amp;(*_116)<br/>StorageDead(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>_43 = _36<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>_45 = _36<br/>_46 = CheckedAdd(_45, const 8_usize)<br/></td></tr><tr><td align="left">assert(!move (_46.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, move _45, const 8_usize)</td></tr></table>>];
    bb20__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">_44 = move (_46.0: usize)<br/>StorageDead(_45)<br/>_42 = std::ops::Range::&lt;usize&gt; { start: move _43, end: move _44 }<br/>StorageDead(_44)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">_38 = &lt;[u8] as Index&lt;std::ops::Range&lt;usize&gt;&gt;&gt;::index(move _39, move _42)</td></tr></table>>];
    bb21__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_39)<br/>_37 = &amp;(*_38)<br/>StorageLive(_47)<br/>_47 = &amp;(*_37)<br/></td></tr><tr><td align="left">_35 = OracleMap::&lt;'a&gt;::load_one::as_array::&lt;u8&gt;(move _47)</td></tr></table>>];
    bb22__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_40)<br/>StorageDead(_38)<br/>StorageDead(_37)<br/>StorageDead(_36)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>_50 = &amp;_35<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/></td></tr><tr><td align="left">_53 = &lt;PrelaunchOracle as anchor_lang::Discriminator&gt;::discriminator()</td></tr></table>>];
    bb23__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">_52 = &amp;_53<br/>_51 = &amp;_52<br/></td></tr><tr><td align="left">_49 = &lt;&amp;[u8; 8] as PartialEq&gt;::eq(move _50, move _51)</td></tr></table>>];
    bb24__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left">switchInt(move _49)</td></tr></table>>];
    bb25__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_52)<br/>StorageDead(_51)<br/>StorageDead(_50)<br/>StorageLive(_54)<br/>_54 = const _<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>_59 = &amp;_24<br/></td></tr><tr><td align="left">_58 = &lt;Ref&lt;'_, &amp;mut [u8]&gt; as Deref&gt;::deref(move _59)</td></tr></table>>];
    bb26__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">_117 = deref_copy (*_58)<br/>_57 = &amp;(*_117)<br/>StorageDead(_59)<br/></td></tr><tr><td align="left">_56 = core::slice::&lt;impl [u8]&gt;::len(move _57)</td></tr></table>>];
    bb27__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageLive(_60)<br/>_60 = _54<br/>_55 = Lt(move _56, move _60)<br/></td></tr><tr><td align="left">switchInt(move _55)</td></tr></table>>];
    bb28__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageDead(_58)<br/>StorageDead(_56)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>_64 = const &quot;Unexpected account data len loading oracle&quot;<br/>_63 = &amp;(*_64)<br/></td></tr><tr><td align="left">_62 = solana_program::log::sol_log(move _63)</td></tr></table>>];
    bb29__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_64)<br/>StorageDead(_62)<br/>StorageLive(_65)<br/>_65 = error::ErrorCode::UnableToLoadOracle<br/>_0 = std::result::Result::&lt;OracleMap&lt;'_&gt;, error::ErrorCode&gt;::Err(move _65)<br/>StorageDead(_65)<br/>StorageDead(_55)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageDead(_58)<br/>StorageDead(_56)<br/>_48 = const ()<br/>StorageDead(_55)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_52)<br/>StorageDead(_51)<br/>StorageDead(_50)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>_67 = &amp;_35<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/></td></tr><tr><td align="left">_70 = &lt;PythLazerOracle as anchor_lang::Discriminator&gt;::discriminator()</td></tr></table>>];
    bb32__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">_69 = &amp;_70<br/>_68 = &amp;_69<br/></td></tr><tr><td align="left">_66 = &lt;&amp;[u8; 8] as PartialEq&gt;::eq(move _67, move _68)</td></tr></table>>];
    bb33__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left">switchInt(move _66)</td></tr></table>>];
    bb34__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_69)<br/>StorageDead(_68)<br/>StorageDead(_67)<br/>StorageLive(_71)<br/>_71 = const _<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>_76 = &amp;_24<br/></td></tr><tr><td align="left">_75 = &lt;Ref&lt;'_, &amp;mut [u8]&gt; as Deref&gt;::deref(move _76)</td></tr></table>>];
    bb35__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">_118 = deref_copy (*_75)<br/>_74 = &amp;(*_118)<br/>StorageDead(_76)<br/></td></tr><tr><td align="left">_73 = core::slice::&lt;impl [u8]&gt;::len(move _74)</td></tr></table>>];
    bb36__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageLive(_77)<br/>_77 = _71<br/>_72 = Lt(move _73, move _77)<br/></td></tr><tr><td align="left">switchInt(move _72)</td></tr></table>>];
    bb37__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>StorageDead(_75)<br/>StorageDead(_73)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>_81 = const &quot;Unexpected account data len loading oracle&quot;<br/>_80 = &amp;(*_81)<br/></td></tr><tr><td align="left">_79 = solana_program::log::sol_log(move _80)</td></tr></table>>];
    bb38__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>StorageDead(_81)<br/>StorageDead(_79)<br/>StorageLive(_82)<br/>_82 = error::ErrorCode::UnableToLoadOracle<br/>_0 = std::result::Result::&lt;OracleMap&lt;'_&gt;, error::ErrorCode&gt;::Err(move _82)<br/>StorageDead(_82)<br/>StorageDead(_72)<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>StorageDead(_75)<br/>StorageDead(_73)<br/>_48 = const ()<br/>StorageDead(_72)<br/>StorageDead(_71)<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_69)<br/>StorageDead(_68)<br/>StorageDead(_67)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>_86 = const &quot;Unexpected account discriminator&quot;<br/>_85 = &amp;(*_86)<br/></td></tr><tr><td align="left">_84 = solana_program::log::sol_log(move _85)</td></tr></table>>];
    bb41__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>StorageDead(_86)<br/>StorageDead(_84)<br/>StorageLive(_87)<br/>_87 = error::ErrorCode::UnableToLoadOracle<br/>_0 = std::result::Result::&lt;OracleMap&lt;'_&gt;, error::ErrorCode&gt;::Err(move _87)<br/>StorageDead(_87)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_48)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>_89 = &amp;(*_1)<br/></td></tr><tr><td align="left">_88 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::Key&gt;::key(move _89)</td></tr></table>>];
    bb43__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>_91 = &amp;mut _4<br/>StorageLive(_92)<br/>_92 = _88<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>_94 = &amp;(*_1)<br/></td></tr><tr><td align="left">_93 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as Clone&gt;::clone(move _94)</td></tr></table>>];
    bb44__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/></td></tr><tr><td align="left">_90 = BTreeMap::&lt;anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;::insert(move _91, move _92, move _93)</td></tr></table>>];
    bb45__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageDead(_92)<br/>StorageDead(_91)<br/></td></tr><tr><td align="left">drop(_90)</td></tr></table>>];
    bb46__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>_5 = const ()<br/>StorageDead(_88)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">drop(_24)</td></tr></table>>];
    bb47__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_22)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>_98 = &amp;(*_1)<br/></td></tr><tr><td align="left">_97 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::Key&gt;::key(move _98)</td></tr></table>>];
    bb49__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">_96 = &amp;_97<br/>StorageDead(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/></td></tr><tr><td align="left">_100 = &lt;anchor_lang::prelude::Pubkey as Default&gt;::default()</td></tr></table>>];
    bb50__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">_99 = &amp;_100<br/></td></tr><tr><td align="left">_95 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _96, move _99)</td></tr></table>>];
    bb51__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left">switchInt(move _95)</td></tr></table>>];
    bb52__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>StorageDead(_99)<br/>StorageDead(_97)<br/>StorageDead(_96)<br/>StorageLive(_102)<br/>_102 = error::ErrorCode::InvalidOracle<br/>_0 = std::result::Result::&lt;OracleMap&lt;'_&gt;, error::ErrorCode&gt;::Err(move _102)<br/>StorageDead(_102)<br/>StorageDead(_95)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>StorageDead(_99)<br/>StorageDead(_97)<br/>StorageDead(_96)<br/>_5 = const ()<br/>StorageDead(_95)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb55__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_5)<br/>StorageLive(_103)<br/>_104 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _104)</td></tr></table>>];
    bb56__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageLive(_105)<br/>_105 = ((_3 as Some).0: state::state::OracleGuardRails)<br/>_103 = _105<br/>StorageDead(_105)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb57__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left">_103 = &lt;state::state::OracleGuardRails as Default&gt;::default()</td></tr></table>>];
    bb58__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageLive(_106)<br/>StorageLive(_107)<br/>_119 = const false<br/>_107 = move _4<br/>StorageLive(_108)<br/></td></tr><tr><td align="left">_108 = BTreeMap::&lt;(anchor_lang::prelude::Pubkey, state::oracle::OracleSource), OraclePriceData&gt;::new()</td></tr></table>>];
    bb59__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageLive(_109)<br/></td></tr><tr><td align="left">_109 = BTreeMap::&lt;(anchor_lang::prelude::Pubkey, state::oracle::OracleSource), OracleValidity&gt;::new()</td></tr></table>>];
    bb60__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageLive(_110)<br/>_110 = _2<br/>StorageLive(_111)<br/>_111 = _103<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>_113 = Option::&lt;u64&gt;::None<br/>_112 = OraclePriceData { price: const _, confidence: const 1_u64, delay: const 0_i64, has_sufficient_number_of_data_points: const true, sequence_id: move _113 }<br/>StorageDead(_113)<br/>_106 = OracleMap::&lt;'_&gt; { oracles: move _107, price_data: move _108, validity: move _109, slot: move _110, oracle_guard_rails: move _111, quote_asset_price_data: move _112 }<br/>StorageDead(_112)<br/>StorageDead(_111)<br/>StorageDead(_110)<br/>StorageDead(_109)<br/>StorageDead(_108)<br/>StorageDead(_107)<br/>_0 = std::result::Result::&lt;OracleMap&lt;'_&gt;, error::ErrorCode&gt;::Ok(move _106)<br/>StorageDead(_106)<br/>StorageDead(_103)<br/>_119 = const false<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb61__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_48)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">drop(_24)</td></tr></table>>];
    bb63__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb64__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">drop(_4)</td></tr></table>>];
    bb65__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">_119 = const false<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb66__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left">return</td></tr></table>>];
    bb67__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">67 (cleanup)</td></tr><tr><td align="left">drop(_108)</td></tr></table>>];
    bb68__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">68 (cleanup)</td></tr><tr><td align="left">drop(_107)</td></tr></table>>];
    bb69__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">69 (cleanup)</td></tr><tr><td align="left">drop(_24)</td></tr></table>>];
    bb70__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">70 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb71__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">71 (cleanup)</td></tr><tr><td align="left" balign="left">_124 = discriminant(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb72__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">72 (cleanup)</td></tr><tr><td align="left">drop(_4)</td></tr></table>>];
    bb73__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">73 (cleanup)</td></tr><tr><td align="left">switchInt(_119)</td></tr></table>>];
    bb74__0_3604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_3604 -> bb1__0_3604 [label="return"];
    bb1__0_3604 -> bb2__0_3604 [label="return"];
    bb1__0_3604 -> bb73__0_3604 [label="unwind"];
    bb2__0_3604 -> bb8__0_3604 [label="0"];
    bb2__0_3604 -> bb3__0_3604 [label="otherwise"];
    bb3__0_3604 -> bb4__0_3604 [label="return"];
    bb3__0_3604 -> bb73__0_3604 [label="unwind"];
    bb4__0_3604 -> bb5__0_3604 [label="return"];
    bb4__0_3604 -> bb73__0_3604 [label="unwind"];
    bb5__0_3604 -> bb6__0_3604 [label="return"];
    bb5__0_3604 -> bb73__0_3604 [label="unwind"];
    bb6__0_3604 -> bb7__0_3604 [label="return"];
    bb6__0_3604 -> bb73__0_3604 [label="unwind"];
    bb7__0_3604 -> bb55__0_3604 [label=""];
    bb8__0_3604 -> bb9__0_3604 [label="return"];
    bb8__0_3604 -> bb73__0_3604 [label="unwind"];
    bb9__0_3604 -> bb10__0_3604 [label="return"];
    bb9__0_3604 -> bb73__0_3604 [label="unwind"];
    bb10__0_3604 -> bb48__0_3604 [label="0"];
    bb10__0_3604 -> bb11__0_3604 [label="otherwise"];
    bb11__0_3604 -> bb12__0_3604 [label="return"];
    bb11__0_3604 -> bb73__0_3604 [label="unwind"];
    bb12__0_3604 -> bb13__0_3604 [label="return"];
    bb12__0_3604 -> bb73__0_3604 [label="unwind"];
    bb13__0_3604 -> bb14__0_3604 [label="return"];
    bb13__0_3604 -> bb73__0_3604 [label="unwind"];
    bb14__0_3604 -> bb15__0_3604 [label="0"];
    bb14__0_3604 -> bb17__0_3604 [label="1"];
    bb14__0_3604 -> bb16__0_3604 [label="otherwise"];
    bb15__0_3604 -> bb19__0_3604 [label="return"];
    bb15__0_3604 -> bb69__0_3604 [label="unwind"];
    bb17__0_3604 -> bb18__0_3604 [label="return"];
    bb17__0_3604 -> bb71__0_3604 [label="unwind"];
    bb18__0_3604 -> bb63__0_3604 [label=""];
    bb19__0_3604 -> bb20__0_3604 [label="success"];
    bb19__0_3604 -> bb69__0_3604 [label="unwind"];
    bb20__0_3604 -> bb21__0_3604 [label="return"];
    bb20__0_3604 -> bb69__0_3604 [label="unwind"];
    bb21__0_3604 -> bb22__0_3604 [label="return"];
    bb21__0_3604 -> bb69__0_3604 [label="unwind"];
    bb22__0_3604 -> bb23__0_3604 [label="return"];
    bb22__0_3604 -> bb69__0_3604 [label="unwind"];
    bb23__0_3604 -> bb24__0_3604 [label="return"];
    bb23__0_3604 -> bb69__0_3604 [label="unwind"];
    bb24__0_3604 -> bb31__0_3604 [label="0"];
    bb24__0_3604 -> bb25__0_3604 [label="otherwise"];
    bb25__0_3604 -> bb26__0_3604 [label="return"];
    bb25__0_3604 -> bb69__0_3604 [label="unwind"];
    bb26__0_3604 -> bb27__0_3604 [label="return"];
    bb26__0_3604 -> bb69__0_3604 [label="unwind"];
    bb27__0_3604 -> bb30__0_3604 [label="0"];
    bb27__0_3604 -> bb28__0_3604 [label="otherwise"];
    bb28__0_3604 -> bb29__0_3604 [label="return"];
    bb28__0_3604 -> bb69__0_3604 [label="unwind"];
    bb29__0_3604 -> bb62__0_3604 [label=""];
    bb30__0_3604 -> bb42__0_3604 [label=""];
    bb31__0_3604 -> bb32__0_3604 [label="return"];
    bb31__0_3604 -> bb69__0_3604 [label="unwind"];
    bb32__0_3604 -> bb33__0_3604 [label="return"];
    bb32__0_3604 -> bb69__0_3604 [label="unwind"];
    bb33__0_3604 -> bb40__0_3604 [label="0"];
    bb33__0_3604 -> bb34__0_3604 [label="otherwise"];
    bb34__0_3604 -> bb35__0_3604 [label="return"];
    bb34__0_3604 -> bb69__0_3604 [label="unwind"];
    bb35__0_3604 -> bb36__0_3604 [label="return"];
    bb35__0_3604 -> bb69__0_3604 [label="unwind"];
    bb36__0_3604 -> bb39__0_3604 [label="0"];
    bb36__0_3604 -> bb37__0_3604 [label="otherwise"];
    bb37__0_3604 -> bb38__0_3604 [label="return"];
    bb37__0_3604 -> bb69__0_3604 [label="unwind"];
    bb38__0_3604 -> bb61__0_3604 [label=""];
    bb39__0_3604 -> bb42__0_3604 [label=""];
    bb40__0_3604 -> bb41__0_3604 [label="return"];
    bb40__0_3604 -> bb69__0_3604 [label="unwind"];
    bb41__0_3604 -> bb61__0_3604 [label=""];
    bb42__0_3604 -> bb43__0_3604 [label="return"];
    bb42__0_3604 -> bb69__0_3604 [label="unwind"];
    bb43__0_3604 -> bb44__0_3604 [label="return"];
    bb43__0_3604 -> bb69__0_3604 [label="unwind"];
    bb44__0_3604 -> bb45__0_3604 [label="return"];
    bb44__0_3604 -> bb69__0_3604 [label="unwind"];
    bb45__0_3604 -> bb46__0_3604 [label="return"];
    bb45__0_3604 -> bb69__0_3604 [label="unwind"];
    bb46__0_3604 -> bb47__0_3604 [label="return"];
    bb46__0_3604 -> bb73__0_3604 [label="unwind"];
    bb47__0_3604 -> bb54__0_3604 [label=""];
    bb48__0_3604 -> bb49__0_3604 [label="return"];
    bb48__0_3604 -> bb73__0_3604 [label="unwind"];
    bb49__0_3604 -> bb50__0_3604 [label="return"];
    bb49__0_3604 -> bb73__0_3604 [label="unwind"];
    bb50__0_3604 -> bb51__0_3604 [label="return"];
    bb50__0_3604 -> bb73__0_3604 [label="unwind"];
    bb51__0_3604 -> bb53__0_3604 [label="0"];
    bb51__0_3604 -> bb52__0_3604 [label="otherwise"];
    bb52__0_3604 -> bb64__0_3604 [label=""];
    bb53__0_3604 -> bb54__0_3604 [label=""];
    bb54__0_3604 -> bb55__0_3604 [label=""];
    bb55__0_3604 -> bb56__0_3604 [label="1"];
    bb55__0_3604 -> bb57__0_3604 [label="otherwise"];
    bb56__0_3604 -> bb58__0_3604 [label=""];
    bb57__0_3604 -> bb74__0_3604 [label="return"];
    bb57__0_3604 -> bb73__0_3604 [label="unwind"];
    bb58__0_3604 -> bb59__0_3604 [label="return"];
    bb58__0_3604 -> bb68__0_3604 [label="unwind"];
    bb59__0_3604 -> bb60__0_3604 [label="return"];
    bb59__0_3604 -> bb67__0_3604 [label="unwind"];
    bb60__0_3604 -> bb66__0_3604 [label=""];
    bb61__0_3604 -> bb62__0_3604 [label=""];
    bb62__0_3604 -> bb63__0_3604 [label="return"];
    bb62__0_3604 -> bb73__0_3604 [label="unwind"];
    bb63__0_3604 -> bb64__0_3604 [label=""];
    bb64__0_3604 -> bb65__0_3604 [label="return"];
    bb64__0_3604 -> bb70__0_3604 [label="unwind"];
    bb65__0_3604 -> bb66__0_3604 [label=""];
    bb67__0_3604 -> bb68__0_3604 [label="return"];
    bb68__0_3604 -> bb73__0_3604 [label="return"];
    bb69__0_3604 -> bb73__0_3604 [label="return"];
    bb71__0_3604 -> bb73__0_3604 [label=""];
    bb72__0_3604 -> bb70__0_3604 [label="return"];
    bb73__0_3604 -> bb70__0_3604 [label="0"];
    bb73__0_3604 -> bb72__0_3604 [label="otherwise"];
    bb74__0_3604 -> bb58__0_3604 [label=""];
}
