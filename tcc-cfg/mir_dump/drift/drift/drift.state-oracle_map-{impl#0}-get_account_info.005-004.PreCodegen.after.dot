digraph Mir_0_3596 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn OracleMap::&lt;'a&gt;::get_account_info(_1: &amp;ReErased state::oracle_map::OracleMap&lt;ReErased&gt;, _2: &amp;ReErased anchor_lang::prelude::Pubkey) -&gt; std::result::Result&lt;anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, error::ErrorCode&gt;<br align="left"/>let mut _3: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _4: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _5: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _6: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _7: std::result::Result&lt;&amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _8: std::option::Option&lt;&amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _9: &amp;ReErased std::collections::BTreeMap&lt;anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _10: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _11: error::ErrorCode;<br align="left"/>let mut _12: isize;<br align="left"/>let _13: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _14: !;<br align="left"/>let mut _15: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _16: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug pubkey =&gt; _2;<br align="left"/>debug residual =&gt; _13;<br align="left"/>debug val =&gt; _16;<br align="left"/>>;
    bb0__0_3596 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = &amp;((*_1).0: std::collections::BTreeMap&lt;anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;)<br/>StorageLive(_10)<br/>_10 = &amp;(*_2)<br/></td></tr><tr><td align="left">_8 = BTreeMap::&lt;anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;::get::&lt;anchor_lang::prelude::Pubkey&gt;(move _9, move _10)</td></tr></table>>];
    bb1__0_3596 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_9)<br/>StorageLive(_11)<br/>_11 = error::ErrorCode::OracleNotFound<br/></td></tr><tr><td align="left">_7 = Option::&lt;&amp;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;::ok_or::&lt;error::ErrorCode&gt;(move _8, move _11)</td></tr></table>>];
    bb2__0_3596 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">_6 = &lt;std::result::Result&lt;&amp;anchor_lang::prelude::AccountInfo&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _7)</td></tr></table>>];
    bb3__0_3596 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>_12 = discriminant(_6)<br/></td></tr><tr><td align="left">switchInt(move _12)</td></tr></table>>];
    bb4__0_3596 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_16)<br/>_16 = ((_6 as Continue).0: &amp;anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_5 = _16<br/>StorageDead(_16)<br/>_4 = &amp;(*_5)<br/></td></tr><tr><td align="left">_3 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as Clone&gt;::clone(move _4)</td></tr></table>>];
    bb5__0_3596 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_3596 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = ((_6 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_15)<br/>_15 = _13<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _15)</td></tr></table>>];
    bb7__0_3596 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_13)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_3596 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>_0 = std::result::Result::&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;, error::ErrorCode&gt;::Ok(move _3)<br/>StorageDead(_3)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_3596 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_3596 -> bb1__0_3596 [label="return"];
    bb1__0_3596 -> bb2__0_3596 [label="return"];
    bb2__0_3596 -> bb3__0_3596 [label="return"];
    bb3__0_3596 -> bb4__0_3596 [label="0"];
    bb3__0_3596 -> bb6__0_3596 [label="1"];
    bb3__0_3596 -> bb5__0_3596 [label="otherwise"];
    bb4__0_3596 -> bb8__0_3596 [label="return"];
    bb6__0_3596 -> bb7__0_3596 [label="return"];
    bb7__0_3596 -> bb9__0_3596 [label=""];
    bb8__0_3596 -> bb9__0_3596 [label=""];
}
