digraph Mir_0_9326 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn view_amm_liquidity(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::keeper::UpdateAMM&lt;ReErased&gt;&gt;, _2: std::vec::Vec&lt;u16, std::alloc::Global&gt;) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _5: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _6: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _7: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _8: isize;<br align="left"/>let _9: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _10: !;<br align="left"/>let mut _11: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _12: ();<br align="left"/>let _13: ();<br align="left"/>let mut _14: bool;<br align="left"/>let mut _15: usize;<br align="left"/>let mut _16: &amp;ReErased std::vec::Vec&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _17: !;<br align="left"/>let _18: ();<br align="left"/>let mut _19: &amp;ReErased str;<br align="left"/>let _20: &amp;ReErased str;<br align="left"/>let mut _21: anchor_lang::error::Error;<br align="left"/>let mut _22: error::ErrorCode;<br align="left"/>let _23: anchor_lang::prelude::Clock;<br align="left"/>let mut _24: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _25: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _26: isize;<br align="left"/>let _27: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _28: !;<br align="left"/>let mut _29: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _30: anchor_lang::prelude::Clock;<br align="left"/>let _31: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let _32: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _33: std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _34: std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _35: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let _36: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _37: state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _38: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::oracle_map::OracleMap&lt;ReErased&gt;&gt;;<br align="left"/>let mut _39: std::result::Result&lt;state::oracle_map::OracleMap&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _40: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _41: u64;<br align="left"/>let mut _42: std::option::Option&lt;state::state::OracleGuardRails&gt;;<br align="left"/>let mut _43: isize;<br align="left"/>let _44: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _45: !;<br align="left"/>let mut _46: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _47: state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let _48: &amp;ReErased mut state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _49: state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _50: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::perp_market_map::PerpMarketMap&lt;ReErased&gt;&gt;;<br align="left"/>let mut _51: std::result::Result&lt;state::perp_market_map::PerpMarketMap&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _52: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _53: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _54: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _55: std::vec::Vec&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _56: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _57: isize;<br align="left"/>let _58: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _59: !;<br align="left"/>let mut _60: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _61: state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _62: bool;<br align="left"/>let mut _63: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _64: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _65: &amp;ReErased mut state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _66: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _67: &amp;ReErased state::state::State;<br align="left"/>let _68: &amp;ReErased state::state::State;<br align="left"/>let mut _69: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _70: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let _71: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let mut _72: isize;<br align="left"/>let _73: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _74: !;<br align="left"/>let mut _75: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _76: bool;<br align="left"/>let _77: ();<br align="left"/>let mut _78: std::collections::btree_map::IterMut&lt;ReErased, u16, anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _79: std::collections::btree_map::IterMut&lt;ReErased, u16, anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _80: &amp;ReErased mut std::collections::BTreeMap&lt;u16, anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _81: std::collections::btree_map::IterMut&lt;ReErased, u16, anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _82: ();<br align="left"/>let _83: ();<br align="left"/>let mut _84: std::option::Option&lt;(&amp;ReErased u16, &amp;ReErased mut anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;)&gt;;<br align="left"/>let mut _85: &amp;ReErased mut std::collections::btree_map::IterMut&lt;ReErased, u16, anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _86: &amp;ReErased mut std::collections::btree_map::IterMut&lt;ReErased, u16, anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _87: isize;<br align="left"/>let mut _88: !;<br align="left"/>let _89: &amp;ReErased u16;<br align="left"/>let _90: &amp;ReErased mut anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _91: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _92: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _93: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _94: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _95: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _96: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _97: Closure(DefId(0:9329 ~ drift[d311]::instructions::keeper::view_amm_liquidity::{closure#0}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _98: isize;<br align="left"/>let _99: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _100: !;<br align="left"/>let mut _101: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _102: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _103: &amp;ReErased &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _104: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _105: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _106: std::result::Result&lt;&amp;ReErased state::oracle::OraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _107: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _108: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _109: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _110: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _111: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _112: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _113: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _114: isize;<br align="left"/>let _115: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _116: !;<br align="left"/>let mut _117: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _118: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _119: u64;<br align="left"/>let mut _120: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _121: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _122: &amp;ReErased state::perp_market::AMM;<br align="left"/>let _123: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _124: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _125: isize;<br align="left"/>let _126: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _127: !;<br align="left"/>let mut _128: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _129: u64;<br align="left"/>let _130: u64;<br align="left"/>let _131: u64;<br align="left"/>let mut _132: (u64, u64);<br align="left"/>let mut _133: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (u64, u64)&gt;;<br align="left"/>let mut _134: std::result::Result&lt;(u64, u64), error::ErrorCode&gt;;<br align="left"/>let mut _135: &amp;ReErased state::perp_market::AMM;<br align="left"/>let _136: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _137: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _138: u64;<br align="left"/>let mut _139: isize;<br align="left"/>let _140: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _141: !;<br align="left"/>let mut _142: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _143: (u64, u64);<br align="left"/>let _144: ();<br align="left"/>let _145: ();<br align="left"/>let mut _146: &amp;ReErased str;<br align="left"/>let _147: &amp;ReErased str;<br align="left"/>let mut _148: &amp;ReErased std::string::String;<br align="left"/>let _149: &amp;ReErased std::string::String;<br align="left"/>let _150: std::string::String;<br align="left"/>let _151: std::string::String;<br align="left"/>let mut _152: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _153: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _154: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _155: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _156: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _157: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _158: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _159: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _160: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _161: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _162: &amp;ReErased u64;<br align="left"/>let _163: &amp;ReErased u64;<br align="left"/>let _164: ();<br align="left"/>let mut _165: &amp;ReErased str;<br align="left"/>let _166: &amp;ReErased str;<br align="left"/>let mut _167: &amp;ReErased std::string::String;<br align="left"/>let _168: &amp;ReErased std::string::String;<br align="left"/>let _169: std::string::String;<br align="left"/>let _170: std::string::String;<br align="left"/>let mut _171: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _172: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _173: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _174: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _175: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _176: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _177: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _178: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _179: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _180: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _181: &amp;ReErased u64;<br align="left"/>let _182: &amp;ReErased u64;<br align="left"/>let _183: ();<br align="left"/>let mut _184: &amp;ReErased str;<br align="left"/>let _185: &amp;ReErased str;<br align="left"/>let mut _186: &amp;ReErased std::string::String;<br align="left"/>let _187: &amp;ReErased std::string::String;<br align="left"/>let _188: std::string::String;<br align="left"/>let _189: std::string::String;<br align="left"/>let mut _190: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _191: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _192: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _193: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _194: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _195: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _196: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _197: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _198: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _199: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _200: &amp;ReErased i64;<br align="left"/>let _201: &amp;ReErased i64;<br align="left"/>let mut _202: ();<br align="left"/>let mut _203: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _204: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _205: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _206: &amp;ReErased mut instructions::keeper::UpdateAMM&lt;ReErased&gt;;<br align="left"/>let mut _207: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _208: &amp;ReErased mut instructions::keeper::UpdateAMM&lt;ReErased&gt;;<br align="left"/>let mut _209: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _210: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _211: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _212: bool;<br align="left"/>let mut _213: isize;<br align="left"/>let mut _214: isize;<br align="left"/>let mut _215: isize;<br align="left"/>let mut _216: isize;<br align="left"/>let mut _217: isize;<br align="left"/>let mut _218: isize;<br align="left"/>let mut _219: isize;<br align="left"/>let mut _220: isize;<br align="left"/>let mut _221: isize;<br align="left"/>let mut _222: isize;<br align="left"/>let mut _223: isize;<br align="left"/>let mut _224: isize;<br align="left"/>let mut _225: isize;<br align="left"/>let mut _226: isize;<br align="left"/>let mut _227: isize;<br align="left"/>let mut _228: isize;<br align="left"/>let mut _229: isize;<br align="left"/>let mut _230: isize;<br align="left"/>let mut _231: isize;<br align="left"/>let mut _232: isize;<br align="left"/>let mut _233: isize;<br align="left"/>let mut _234: isize;<br align="left"/>let mut _235: isize;<br align="left"/>let mut _236: isize;<br align="left"/>let mut _237: isize;<br align="left"/>let mut _238: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _239: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug market_indexes =&gt; _2;<br align="left"/>debug residual =&gt; _9;<br align="left"/>debug val =&gt; _12;<br align="left"/>debug clock =&gt; _23;<br align="left"/>debug residual =&gt; _27;<br align="left"/>debug val =&gt; _30;<br align="left"/>debug state =&gt; _31;<br align="left"/>debug remaining_accounts_iter =&gt; _32;<br align="left"/>debug oracle_map =&gt; _36;<br align="left"/>debug residual =&gt; _44;<br align="left"/>debug val =&gt; _47;<br align="left"/>debug market_map =&gt; _48;<br align="left"/>debug residual =&gt; _58;<br align="left"/>debug val =&gt; _61;<br align="left"/>debug residual =&gt; _73;<br align="left"/>debug val =&gt; _76;<br align="left"/>debug iter =&gt; _81;<br align="left"/>debug _key =&gt; _89;<br align="left"/>debug market_account_loader =&gt; _90;<br align="left"/>debug market =&gt; _91;<br align="left"/>debug residual =&gt; _99;<br align="left"/>debug val =&gt; _102;<br align="left"/>debug oracle_price_data =&gt; _103;<br align="left"/>debug residual =&gt; _115;<br align="left"/>debug val =&gt; _118;<br align="left"/>debug reserve_price =&gt; _119;<br align="left"/>debug residual =&gt; _126;<br align="left"/>debug val =&gt; _129;<br align="left"/>debug bid =&gt; _130;<br align="left"/>debug ask =&gt; _131;<br align="left"/>debug residual =&gt; _140;<br align="left"/>debug val =&gt; _143;<br align="left"/>debug res =&gt; _151;<br align="left"/>debug res =&gt; _170;<br align="left"/>debug res =&gt; _189;<br align="left"/>>;
    bb0__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_212 = const false<br/>_212 = const true<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_206 = deref_copy (_1.1: &amp;mut instructions::keeper::UpdateAMM&lt;'_&gt;)<br/>_7 = &amp;((*_206).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_207 = deref_copy (*_7)<br/>_238 = (((_207.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_6 = &amp;(*_238)<br/></td></tr><tr><td align="left">_5 = constraints::exchange_not_paused(move _6)</td></tr></table>>];
    bb1__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb2__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_8 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb3__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_4 as Continue).0: ())<br/>_3 = _12<br/>StorageDead(_12)<br/>_213 = discriminant(_4)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_16 = &amp;_2<br/></td></tr><tr><td align="left">_15 = Vec::&lt;u16&gt;::len(move _16)</td></tr></table>>];
    bb4__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>_9 = move ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_11)<br/>_11 = move _9<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _11)</td></tr></table>>];
    bb6__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_9)<br/>_231 = discriminant(_4)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>_14 = Gt(move _15, const 5_usize)<br/></td></tr><tr><td align="left">switchInt(move _14)</td></tr></table>>];
    bb8__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_20 = const &quot;Too many markets passed, max 5&quot;<br/>_19 = &amp;(*_20)<br/></td></tr><tr><td align="left">_18 = solana_program::log::sol_log(move _19)</td></tr></table>>];
    bb9__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_20)<br/>StorageDead(_18)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_22 = error::ErrorCode::DefaultError<br/></td></tr><tr><td align="left">_21 = &lt;error::ErrorCode as Into&lt;anchor_lang::error::Error&gt;&gt;::into(move _22)</td></tr></table>>];
    bb10__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _21)<br/>StorageDead(_21)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb11__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>_13 = const ()<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/></td></tr><tr><td align="left">_25 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb12__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left">_24 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _25)</td></tr></table>>];
    bb13__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>_26 = discriminant(_24)<br/></td></tr><tr><td align="left">switchInt(move _26)</td></tr></table>>];
    bb14__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_30)<br/>_30 = move ((_24 as Continue).0: anchor_lang::prelude::Clock)<br/>_23 = move _30<br/>StorageDead(_30)<br/>_215 = discriminant(_24)<br/>StorageDead(_24)<br/>StorageLive(_31)<br/>_208 = deref_copy (_1.1: &amp;mut instructions::keeper::UpdateAMM&lt;'_&gt;)<br/>_31 = &amp;((*_208).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>_209 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_35 = &amp;(*_209)<br/></td></tr><tr><td align="left">_34 = core::slice::&lt;impl [anchor_lang::prelude::AccountInfo&lt;'_&gt;]&gt;::iter(move _35)</td></tr></table>>];
    bb15__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_27)<br/>_27 = move ((_24 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_29)<br/>_29 = move _27<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _29)</td></tr></table>>];
    bb16__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_27)<br/>_229 = discriminant(_24)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/></td></tr><tr><td align="left">_33 = &lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as Iterator&gt;::peekable(move _34)</td></tr></table>>];
    bb18__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>_32 = &amp;mut _33<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_40 = &amp;mut (*_32)<br/>StorageLive(_41)<br/>_41 = (_23.0: u64)<br/>StorageLive(_42)<br/>_42 = Option::&lt;state::state::OracleGuardRails&gt;::None<br/></td></tr><tr><td align="left">_39 = OracleMap::&lt;'_&gt;::load(move _40, move _41, move _42)</td></tr></table>>];
    bb19__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_41)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">_38 = &lt;std::result::Result&lt;OracleMap&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _39)</td></tr></table>>];
    bb20__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>_43 = discriminant(_38)<br/></td></tr><tr><td align="left">switchInt(move _43)</td></tr></table>>];
    bb21__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>_47 = move ((_38 as Continue).0: state::oracle_map::OracleMap&lt;'_&gt;)<br/>_37 = move _47<br/>StorageDead(_47)<br/>_36 = &amp;mut _37<br/>_219 = discriminant(_38)<br/>StorageDead(_38)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>_212 = const false<br/>_55 = move _2<br/></td></tr><tr><td align="left">_54 = get_market_set_from_list(move _55)</td></tr></table>>];
    bb22__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_44)<br/>_44 = ((_38 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_46)<br/>_46 = _44<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _46)</td></tr></table>>];
    bb23__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_44)<br/>_217 = discriminant(_38)<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>_53 = &amp;_54<br/>_52 = &amp;(*_53)<br/>StorageLive(_56)<br/>_56 = &amp;mut (*_32)<br/></td></tr><tr><td align="left">_51 = PerpMarketMap::&lt;'_&gt;::load(move _52, move _56)</td></tr></table>>];
    bb25__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">_50 = &lt;std::result::Result&lt;PerpMarketMap&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _51)</td></tr></table>>];
    bb26__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>_57 = discriminant(_50)<br/></td></tr><tr><td align="left">switchInt(move _57)</td></tr></table>>];
    bb27__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_61)<br/>_61 = move ((_50 as Continue).0: state::perp_market_map::PerpMarketMap&lt;'_&gt;)<br/>_49 = move _61<br/>StorageDead(_61)<br/>_48 = &amp;mut _49<br/>_223 = discriminant(_50)<br/></td></tr><tr><td align="left">drop(_54)</td></tr></table>>];
    bb28__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_58)<br/>_58 = ((_50 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_60)<br/>_60 = _58<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _60)</td></tr></table>>];
    bb29__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageDead(_58)<br/>_221 = discriminant(_50)<br/></td></tr><tr><td align="left">drop(_54)</td></tr></table>>];
    bb30__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_53)<br/>StorageDead(_50)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>_65 = &amp;mut (*_48)<br/>StorageLive(_66)<br/>_66 = &amp;mut (*_36)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>_210 = deref_copy (*_31)<br/>_239 = (((_210.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_69 = &amp;(*_239)<br/></td></tr><tr><td align="left">_68 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _69)</td></tr></table>>];
    bb31__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">_67 = &amp;(*_68)<br/>StorageDead(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>_71 = &amp;_23<br/>_70 = &amp;(*_71)<br/></td></tr><tr><td align="left">_64 = controller::repeg::update_amms(move _65, move _66, move _67, move _70)</td></tr></table>>];
    bb32__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_67)<br/>StorageDead(_66)<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">_63 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _64)</td></tr></table>>];
    bb33__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>_72 = discriminant(_63)<br/></td></tr><tr><td align="left">switchInt(move _72)</td></tr></table>>];
    bb34__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_76)<br/>_76 = ((_63 as Continue).0: bool)<br/>_62 = _76<br/>StorageDead(_76)<br/>StorageDead(_71)<br/>StorageDead(_68)<br/>StorageDead(_63)<br/>StorageDead(_62)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>_80 = &amp;mut ((*_48).0: std::collections::BTreeMap&lt;u16, anchor_lang::prelude::AccountLoader&lt;'_, state::perp_market::PerpMarket&gt;&gt;)<br/></td></tr><tr><td align="left">_79 = BTreeMap::&lt;u16, anchor_lang::prelude::AccountLoader&lt;'_, PerpMarket&gt;&gt;::iter_mut(move _80)</td></tr></table>>];
    bb35__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_73)<br/>_73 = ((_63 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_75)<br/>_75 = _73<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _75)</td></tr></table>>];
    bb36__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_73)<br/>StorageDead(_71)<br/>StorageDead(_68)<br/>StorageDead(_63)<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/></td></tr><tr><td align="left">_78 = &lt;std::collections::btree_map::IterMut&lt;'_, u16, anchor_lang::prelude::AccountLoader&lt;'_, PerpMarket&gt;&gt; as IntoIterator&gt;::into_iter(move _79)</td></tr></table>>];
    bb38__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageLive(_81)<br/>_81 = move _78<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>_86 = &amp;mut _81<br/>_85 = &amp;mut (*_86)<br/></td></tr><tr><td align="left">_84 = &lt;std::collections::btree_map::IterMut&lt;'_, u16, anchor_lang::prelude::AccountLoader&lt;'_, PerpMarket&gt;&gt; as Iterator&gt;::next(move _85)</td></tr></table>>];
    bb40__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>_87 = discriminant(_84)<br/></td></tr><tr><td align="left">switchInt(move _87)</td></tr></table>>];
    bb41__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageLive(_89)<br/>_89 = (((_84 as Some).0: (&amp;u16, &amp;mut anchor_lang::prelude::AccountLoader&lt;'_, state::perp_market::PerpMarket&gt;)).0: &amp;u16)<br/>StorageLive(_90)<br/>_90 = move (((_84 as Some).0: (&amp;u16, &amp;mut anchor_lang::prelude::AccountLoader&lt;'_, state::perp_market::PerpMarket&gt;)).1: &amp;mut anchor_lang::prelude::AccountLoader&lt;'_, state::perp_market::PerpMarket&gt;)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>_96 = &amp;(*_90)<br/></td></tr><tr><td align="left">_95 = anchor_lang::prelude::AccountLoader::&lt;'_, PerpMarket&gt;::load_mut(move _96)</td></tr></table>>];
    bb42__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">_77 = const ()<br/>StorageDead(_86)<br/>StorageDead(_84)<br/>StorageDead(_83)<br/>StorageDead(_81)<br/>StorageDead(_78)<br/>StorageDead(_77)<br/>StorageLive(_202)<br/>_202 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _202)<br/>StorageDead(_202)<br/></td></tr><tr><td align="left">drop(_49)</td></tr></table>>];
    bb43__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>StorageLive(_97)<br/>_97 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_94 = std::result::Result::&lt;RefMut&lt;'_, PerpMarket&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _95, move _97)</td></tr></table>>];
    bb44__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>StorageDead(_95)<br/></td></tr><tr><td align="left">_93 = &lt;std::result::Result&lt;RefMut&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _94)</td></tr></table>>];
    bb45__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/>_98 = discriminant(_93)<br/></td></tr><tr><td align="left">switchInt(move _98)</td></tr></table>>];
    bb46__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageLive(_102)<br/>_102 = move ((_93 as Continue).0: std::cell::RefMut&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_92 = move _102<br/>StorageDead(_102)<br/>_91 = &amp;mut _92<br/>_227 = discriminant(_93)<br/>StorageDead(_93)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>_107 = &amp;mut (*_36)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>_113 = &amp;(*_91)<br/></td></tr><tr><td align="left">_112 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _113)</td></tr></table>>];
    bb47__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageLive(_99)<br/>_99 = ((_93 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_101)<br/>_101 = _99<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _101)</td></tr></table>>];
    bb48__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/>StorageDead(_99)<br/>_225 = discriminant(_93)<br/>StorageDead(_93)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">_111 = &amp;(*_112)<br/>StorageDead(_113)<br/></td></tr><tr><td align="left">_110 = PerpMarket::oracle_id(move _111)</td></tr></table>>];
    bb50__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/>_109 = &amp;_110<br/>_108 = &amp;(*_109)<br/></td></tr><tr><td align="left">_106 = OracleMap::&lt;'_&gt;::get_price_data(move _107, move _108)</td></tr></table>>];
    bb51__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/>StorageDead(_107)<br/></td></tr><tr><td align="left">_105 = &lt;std::result::Result&lt;&amp;OraclePriceData, error::ErrorCode&gt; as Try&gt;::branch(move _106)</td></tr></table>>];
    bb52__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/>_114 = discriminant(_105)<br/></td></tr><tr><td align="left">switchInt(move _114)</td></tr></table>>];
    bb53__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageLive(_118)<br/>_118 = ((_105 as Continue).0: &amp;state::oracle::OraclePriceData)<br/>_104 = _118<br/>StorageDead(_118)<br/>_103 = &amp;_104<br/>StorageDead(_112)<br/>StorageDead(_110)<br/>StorageDead(_109)<br/>StorageDead(_105)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>_124 = &amp;(*_91)<br/></td></tr><tr><td align="left">_123 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _124)</td></tr></table>>];
    bb54__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageLive(_115)<br/>_115 = ((_105 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_117)<br/>_117 = _115<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _117)</td></tr></table>>];
    bb55__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/>StorageDead(_115)<br/>StorageDead(_112)<br/>StorageDead(_110)<br/>StorageDead(_109)<br/>StorageDead(_105)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb56__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_124)<br/>_122 = &amp;((*_123).1: state::perp_market::AMM)<br/></td></tr><tr><td align="left">_121 = AMM::reserve_price(move _122)</td></tr></table>>];
    bb57__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/></td></tr><tr><td align="left">_120 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _121)</td></tr></table>>];
    bb58__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_121)<br/>_125 = discriminant(_120)<br/></td></tr><tr><td align="left">switchInt(move _125)</td></tr></table>>];
    bb59__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageLive(_129)<br/>_129 = ((_120 as Continue).0: u64)<br/>_119 = _129<br/>StorageDead(_129)<br/>StorageDead(_123)<br/>StorageDead(_120)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>_137 = &amp;(*_91)<br/></td></tr><tr><td align="left">_136 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _137)</td></tr></table>>];
    bb60__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageLive(_126)<br/>_126 = ((_120 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_128)<br/>_128 = _126<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _128)</td></tr></table>>];
    bb61__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>StorageDead(_126)<br/>StorageDead(_123)<br/>StorageDead(_120)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_137)<br/>_135 = &amp;((*_136).1: state::perp_market::AMM)<br/>StorageLive(_138)<br/>_138 = _119<br/></td></tr><tr><td align="left">_134 = AMM::bid_ask_price(move _135, move _138)</td></tr></table>>];
    bb63__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/>StorageDead(_135)<br/></td></tr><tr><td align="left">_133 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as Try&gt;::branch(move _134)</td></tr></table>>];
    bb64__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_134)<br/>_139 = discriminant(_133)<br/></td></tr><tr><td align="left">switchInt(move _139)</td></tr></table>>];
    bb65__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageLive(_143)<br/>_143 = ((_133 as Continue).0: (u64, u64))<br/>_132 = _143<br/>StorageDead(_143)<br/>StorageLive(_130)<br/>_130 = (_132.0: u64)<br/>StorageLive(_131)<br/>_131 = (_132.1: u64)<br/>StorageDead(_136)<br/>StorageDead(_133)<br/>StorageDead(_132)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>StorageLive(_152)<br/>StorageLive(_153)<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>_205 = const _<br/>_155 = &amp;(*_205)<br/>_154 = &amp;(*_155)<br/>_153 = move _154 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_154)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>StorageLive(_161)<br/>StorageLive(_162)<br/>StorageLive(_163)<br/>_163 = &amp;_130<br/>_162 = &amp;(*_163)<br/></td></tr><tr><td align="left">_161 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _162)</td></tr></table>>];
    bb66__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageLive(_140)<br/>_140 = ((_133 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_142)<br/>_142 = _140<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _142)</td></tr></table>>];
    bb67__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_142)<br/>StorageDead(_140)<br/>StorageDead(_136)<br/>StorageDead(_133)<br/>StorageDead(_132)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_162)<br/>_160 = [move _161]<br/>StorageDead(_161)<br/>_159 = &amp;_160<br/>_158 = &amp;(*_159)<br/>_157 = move _158 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_158)<br/></td></tr><tr><td align="left">_152 = Arguments::&lt;'_&gt;::new_v1(move _153, move _157)</td></tr></table>>];
    bb69__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_157)<br/>StorageDead(_153)<br/></td></tr><tr><td align="left">_151 = format(move _152)</td></tr></table>>];
    bb70__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_152)<br/>StorageDead(_163)<br/>StorageDead(_160)<br/>StorageDead(_159)<br/>StorageDead(_155)<br/>_150 = move _151<br/>StorageDead(_151)<br/>_149 = &amp;_150<br/>_148 = &amp;(*_149)<br/></td></tr><tr><td align="left">_147 = &lt;String as Deref&gt;::deref(move _148)</td></tr></table>>];
    bb71__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">_146 = &amp;(*_147)<br/>StorageDead(_148)<br/></td></tr><tr><td align="left">_145 = solana_program::log::sol_log(move _146)</td></tr></table>>];
    bb72__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_146)<br/></td></tr><tr><td align="left">drop(_150)</td></tr></table>>];
    bb73__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_150)<br/>StorageDead(_149)<br/>StorageDead(_147)<br/>StorageDead(_145)<br/>StorageLive(_164)<br/>StorageLive(_165)<br/>StorageLive(_166)<br/>StorageLive(_167)<br/>StorageLive(_168)<br/>StorageLive(_169)<br/>StorageLive(_170)<br/>StorageLive(_171)<br/>StorageLive(_172)<br/>StorageLive(_173)<br/>StorageLive(_174)<br/>_204 = const _<br/>_174 = &amp;(*_204)<br/>_173 = &amp;(*_174)<br/>_172 = move _173 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_173)<br/>StorageLive(_176)<br/>StorageLive(_177)<br/>StorageLive(_178)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>StorageLive(_181)<br/>StorageLive(_182)<br/>_182 = &amp;_131<br/>_181 = &amp;(*_182)<br/></td></tr><tr><td align="left">_180 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _181)</td></tr></table>>];
    bb74__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_181)<br/>_179 = [move _180]<br/>StorageDead(_180)<br/>_178 = &amp;_179<br/>_177 = &amp;(*_178)<br/>_176 = move _177 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_177)<br/></td></tr><tr><td align="left">_171 = Arguments::&lt;'_&gt;::new_v1(move _172, move _176)</td></tr></table>>];
    bb75__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_176)<br/>StorageDead(_172)<br/></td></tr><tr><td align="left">_170 = format(move _171)</td></tr></table>>];
    bb76__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_171)<br/>StorageDead(_182)<br/>StorageDead(_179)<br/>StorageDead(_178)<br/>StorageDead(_174)<br/>_169 = move _170<br/>StorageDead(_170)<br/>_168 = &amp;_169<br/>_167 = &amp;(*_168)<br/></td></tr><tr><td align="left">_166 = &lt;String as Deref&gt;::deref(move _167)</td></tr></table>>];
    bb77__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">_165 = &amp;(*_166)<br/>StorageDead(_167)<br/></td></tr><tr><td align="left">_164 = solana_program::log::sol_log(move _165)</td></tr></table>>];
    bb78__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_165)<br/></td></tr><tr><td align="left">drop(_169)</td></tr></table>>];
    bb79__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_169)<br/>StorageDead(_168)<br/>StorageDead(_166)<br/>StorageDead(_164)<br/>StorageLive(_183)<br/>StorageLive(_184)<br/>StorageLive(_185)<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>StorageLive(_189)<br/>StorageLive(_190)<br/>StorageLive(_191)<br/>StorageLive(_192)<br/>StorageLive(_193)<br/>_203 = const _<br/>_193 = &amp;(*_203)<br/>_192 = &amp;(*_193)<br/>_191 = move _192 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_192)<br/>StorageLive(_195)<br/>StorageLive(_196)<br/>StorageLive(_197)<br/>StorageLive(_198)<br/>StorageLive(_199)<br/>StorageLive(_200)<br/>StorageLive(_201)<br/>_211 = deref_copy (*_103)<br/>_201 = &amp;((*_211).0: i64)<br/>_200 = &amp;(*_201)<br/></td></tr><tr><td align="left">_199 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i64&gt;(move _200)</td></tr></table>>];
    bb80__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_200)<br/>_198 = [move _199]<br/>StorageDead(_199)<br/>_197 = &amp;_198<br/>_196 = &amp;(*_197)<br/>_195 = move _196 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_196)<br/></td></tr><tr><td align="left">_190 = Arguments::&lt;'_&gt;::new_v1(move _191, move _195)</td></tr></table>>];
    bb81__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_195)<br/>StorageDead(_191)<br/></td></tr><tr><td align="left">_189 = format(move _190)</td></tr></table>>];
    bb82__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_190)<br/>StorageDead(_201)<br/>StorageDead(_198)<br/>StorageDead(_197)<br/>StorageDead(_193)<br/>_188 = move _189<br/>StorageDead(_189)<br/>_187 = &amp;_188<br/>_186 = &amp;(*_187)<br/></td></tr><tr><td align="left">_185 = &lt;String as Deref&gt;::deref(move _186)</td></tr></table>>];
    bb83__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">_184 = &amp;(*_185)<br/>StorageDead(_186)<br/></td></tr><tr><td align="left">_183 = solana_program::log::sol_log(move _184)</td></tr></table>>];
    bb84__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_184)<br/></td></tr><tr><td align="left">drop(_188)</td></tr></table>>];
    bb85__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_188)<br/>StorageDead(_187)<br/>StorageDead(_185)<br/>StorageDead(_183)<br/>_144 = const ()<br/>StorageDead(_144)<br/>_83 = const ()<br/>StorageDead(_131)<br/>StorageDead(_130)<br/>StorageDead(_119)<br/>StorageDead(_104)<br/>StorageDead(_103)<br/></td></tr><tr><td align="left">drop(_92)</td></tr></table>>];
    bb86__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>StorageDead(_91)<br/>StorageDead(_90)<br/>StorageDead(_89)<br/>StorageDead(_86)<br/>StorageDead(_84)<br/>StorageDead(_83)<br/>_82 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb87__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">drop(_37)</td></tr></table>>];
    bb88__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_36)<br/>StorageDead(_33)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb89__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb90__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/>StorageDead(_103)<br/></td></tr><tr><td align="left">drop(_92)</td></tr></table>>];
    bb91__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>StorageDead(_91)<br/>StorageDead(_90)<br/>StorageDead(_89)<br/>StorageDead(_86)<br/>StorageDead(_84)<br/>StorageDead(_83)<br/>StorageDead(_81)<br/>StorageDead(_78)<br/>StorageDead(_77)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb92__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left">drop(_49)</td></tr></table>>];
    bb93__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_53)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb94__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">drop(_37)</td></tr></table>>];
    bb95__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_36)<br/>StorageDead(_33)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb96__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb97__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left">return</td></tr></table>>];
    bb98__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">98 (cleanup)</td></tr><tr><td align="left">drop(_188)</td></tr></table>>];
    bb99__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">99 (cleanup)</td></tr><tr><td align="left">drop(_169)</td></tr></table>>];
    bb100__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">100 (cleanup)</td></tr><tr><td align="left">drop(_150)</td></tr></table>>];
    bb101__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">101 (cleanup)</td></tr><tr><td align="left">drop(_92)</td></tr></table>>];
    bb102__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">102 (cleanup)</td></tr><tr><td align="left">drop(_49)</td></tr></table>>];
    bb103__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">103 (cleanup)</td></tr><tr><td align="left">drop(_54)</td></tr></table>>];
    bb104__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">104 (cleanup)</td></tr><tr><td align="left">drop(_37)</td></tr></table>>];
    bb105__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">105 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb106__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left">drop(_2)</td></tr></table>>];
    bb107__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left">switchInt(_212)</td></tr></table>>];
    bb108__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">108 (cleanup)</td></tr><tr><td align="left" balign="left">_233 = discriminant(_93)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb109__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">109 (cleanup)</td></tr><tr><td align="left" balign="left">_234 = discriminant(_50)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb110__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">110 (cleanup)</td></tr><tr><td align="left" balign="left">_235 = discriminant(_38)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb111__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">111 (cleanup)</td></tr><tr><td align="left" balign="left">_236 = discriminant(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb112__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">112 (cleanup)</td></tr><tr><td align="left" balign="left">_237 = discriminant(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb113__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">113 (cleanup)</td></tr><tr><td align="left">drop(_2)</td></tr></table>>];
    bb114__0_9326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">114 (cleanup)</td></tr><tr><td align="left">switchInt(_212)</td></tr></table>>];
    bb0__0_9326 -> bb1__0_9326 [label="return"];
    bb0__0_9326 -> bb114__0_9326 [label="unwind"];
    bb1__0_9326 -> bb2__0_9326 [label="return"];
    bb1__0_9326 -> bb114__0_9326 [label="unwind"];
    bb2__0_9326 -> bb3__0_9326 [label="0"];
    bb2__0_9326 -> bb5__0_9326 [label="1"];
    bb2__0_9326 -> bb4__0_9326 [label="otherwise"];
    bb3__0_9326 -> bb7__0_9326 [label="return"];
    bb3__0_9326 -> bb114__0_9326 [label="unwind"];
    bb5__0_9326 -> bb6__0_9326 [label="return"];
    bb5__0_9326 -> bb112__0_9326 [label="unwind"];
    bb6__0_9326 -> bb107__0_9326 [label=""];
    bb7__0_9326 -> bb11__0_9326 [label="0"];
    bb7__0_9326 -> bb8__0_9326 [label="otherwise"];
    bb8__0_9326 -> bb9__0_9326 [label="return"];
    bb8__0_9326 -> bb114__0_9326 [label="unwind"];
    bb9__0_9326 -> bb10__0_9326 [label="return"];
    bb9__0_9326 -> bb114__0_9326 [label="unwind"];
    bb10__0_9326 -> bb107__0_9326 [label=""];
    bb11__0_9326 -> bb12__0_9326 [label="return"];
    bb11__0_9326 -> bb114__0_9326 [label="unwind"];
    bb12__0_9326 -> bb13__0_9326 [label="return"];
    bb12__0_9326 -> bb114__0_9326 [label="unwind"];
    bb13__0_9326 -> bb14__0_9326 [label="0"];
    bb13__0_9326 -> bb15__0_9326 [label="1"];
    bb13__0_9326 -> bb4__0_9326 [label="otherwise"];
    bb14__0_9326 -> bb17__0_9326 [label="return"];
    bb14__0_9326 -> bb114__0_9326 [label="unwind"];
    bb15__0_9326 -> bb16__0_9326 [label="return"];
    bb15__0_9326 -> bb111__0_9326 [label="unwind"];
    bb16__0_9326 -> bb96__0_9326 [label=""];
    bb17__0_9326 -> bb18__0_9326 [label="return"];
    bb17__0_9326 -> bb114__0_9326 [label="unwind"];
    bb18__0_9326 -> bb19__0_9326 [label="return"];
    bb18__0_9326 -> bb114__0_9326 [label="unwind"];
    bb19__0_9326 -> bb20__0_9326 [label="return"];
    bb19__0_9326 -> bb114__0_9326 [label="unwind"];
    bb20__0_9326 -> bb21__0_9326 [label="0"];
    bb20__0_9326 -> bb22__0_9326 [label="1"];
    bb20__0_9326 -> bb4__0_9326 [label="otherwise"];
    bb21__0_9326 -> bb24__0_9326 [label="return"];
    bb21__0_9326 -> bb104__0_9326 [label="unwind"];
    bb22__0_9326 -> bb23__0_9326 [label="return"];
    bb22__0_9326 -> bb110__0_9326 [label="unwind"];
    bb23__0_9326 -> bb95__0_9326 [label=""];
    bb24__0_9326 -> bb25__0_9326 [label="return"];
    bb24__0_9326 -> bb103__0_9326 [label="unwind"];
    bb25__0_9326 -> bb26__0_9326 [label="return"];
    bb25__0_9326 -> bb103__0_9326 [label="unwind"];
    bb26__0_9326 -> bb27__0_9326 [label="0"];
    bb26__0_9326 -> bb28__0_9326 [label="1"];
    bb26__0_9326 -> bb4__0_9326 [label="otherwise"];
    bb27__0_9326 -> bb30__0_9326 [label="return"];
    bb27__0_9326 -> bb102__0_9326 [label="unwind"];
    bb28__0_9326 -> bb29__0_9326 [label="return"];
    bb28__0_9326 -> bb109__0_9326 [label="unwind"];
    bb29__0_9326 -> bb93__0_9326 [label="return"];
    bb29__0_9326 -> bb104__0_9326 [label="unwind"];
    bb30__0_9326 -> bb31__0_9326 [label="return"];
    bb30__0_9326 -> bb102__0_9326 [label="unwind"];
    bb31__0_9326 -> bb32__0_9326 [label="return"];
    bb31__0_9326 -> bb102__0_9326 [label="unwind"];
    bb32__0_9326 -> bb33__0_9326 [label="return"];
    bb32__0_9326 -> bb102__0_9326 [label="unwind"];
    bb33__0_9326 -> bb34__0_9326 [label="0"];
    bb33__0_9326 -> bb35__0_9326 [label="1"];
    bb33__0_9326 -> bb4__0_9326 [label="otherwise"];
    bb34__0_9326 -> bb37__0_9326 [label="return"];
    bb34__0_9326 -> bb102__0_9326 [label="unwind"];
    bb35__0_9326 -> bb36__0_9326 [label="return"];
    bb35__0_9326 -> bb102__0_9326 [label="unwind"];
    bb36__0_9326 -> bb92__0_9326 [label=""];
    bb37__0_9326 -> bb38__0_9326 [label="return"];
    bb37__0_9326 -> bb102__0_9326 [label="unwind"];
    bb38__0_9326 -> bb39__0_9326 [label=""];
    bb39__0_9326 -> bb40__0_9326 [label="return"];
    bb39__0_9326 -> bb102__0_9326 [label="unwind"];
    bb40__0_9326 -> bb42__0_9326 [label="0"];
    bb40__0_9326 -> bb41__0_9326 [label="1"];
    bb40__0_9326 -> bb4__0_9326 [label="otherwise"];
    bb41__0_9326 -> bb43__0_9326 [label="return"];
    bb41__0_9326 -> bb102__0_9326 [label="unwind"];
    bb42__0_9326 -> bb87__0_9326 [label="return"];
    bb42__0_9326 -> bb104__0_9326 [label="unwind"];
    bb43__0_9326 -> bb44__0_9326 [label="return"];
    bb43__0_9326 -> bb102__0_9326 [label="unwind"];
    bb44__0_9326 -> bb45__0_9326 [label="return"];
    bb44__0_9326 -> bb102__0_9326 [label="unwind"];
    bb45__0_9326 -> bb46__0_9326 [label="0"];
    bb45__0_9326 -> bb47__0_9326 [label="1"];
    bb45__0_9326 -> bb4__0_9326 [label="otherwise"];
    bb46__0_9326 -> bb49__0_9326 [label="return"];
    bb46__0_9326 -> bb101__0_9326 [label="unwind"];
    bb47__0_9326 -> bb48__0_9326 [label="return"];
    bb47__0_9326 -> bb108__0_9326 [label="unwind"];
    bb48__0_9326 -> bb91__0_9326 [label=""];
    bb49__0_9326 -> bb50__0_9326 [label="return"];
    bb49__0_9326 -> bb101__0_9326 [label="unwind"];
    bb50__0_9326 -> bb51__0_9326 [label="return"];
    bb50__0_9326 -> bb101__0_9326 [label="unwind"];
    bb51__0_9326 -> bb52__0_9326 [label="return"];
    bb51__0_9326 -> bb101__0_9326 [label="unwind"];
    bb52__0_9326 -> bb53__0_9326 [label="0"];
    bb52__0_9326 -> bb54__0_9326 [label="1"];
    bb52__0_9326 -> bb4__0_9326 [label="otherwise"];
    bb53__0_9326 -> bb56__0_9326 [label="return"];
    bb53__0_9326 -> bb101__0_9326 [label="unwind"];
    bb54__0_9326 -> bb55__0_9326 [label="return"];
    bb54__0_9326 -> bb101__0_9326 [label="unwind"];
    bb55__0_9326 -> bb90__0_9326 [label=""];
    bb56__0_9326 -> bb57__0_9326 [label="return"];
    bb56__0_9326 -> bb101__0_9326 [label="unwind"];
    bb57__0_9326 -> bb58__0_9326 [label="return"];
    bb57__0_9326 -> bb101__0_9326 [label="unwind"];
    bb58__0_9326 -> bb59__0_9326 [label="0"];
    bb58__0_9326 -> bb60__0_9326 [label="1"];
    bb58__0_9326 -> bb4__0_9326 [label="otherwise"];
    bb59__0_9326 -> bb62__0_9326 [label="return"];
    bb59__0_9326 -> bb101__0_9326 [label="unwind"];
    bb60__0_9326 -> bb61__0_9326 [label="return"];
    bb60__0_9326 -> bb101__0_9326 [label="unwind"];
    bb61__0_9326 -> bb89__0_9326 [label=""];
    bb62__0_9326 -> bb63__0_9326 [label="return"];
    bb62__0_9326 -> bb101__0_9326 [label="unwind"];
    bb63__0_9326 -> bb64__0_9326 [label="return"];
    bb63__0_9326 -> bb101__0_9326 [label="unwind"];
    bb64__0_9326 -> bb65__0_9326 [label="0"];
    bb64__0_9326 -> bb66__0_9326 [label="1"];
    bb64__0_9326 -> bb4__0_9326 [label="otherwise"];
    bb65__0_9326 -> bb68__0_9326 [label="return"];
    bb65__0_9326 -> bb101__0_9326 [label="unwind"];
    bb66__0_9326 -> bb67__0_9326 [label="return"];
    bb66__0_9326 -> bb101__0_9326 [label="unwind"];
    bb67__0_9326 -> bb89__0_9326 [label=""];
    bb68__0_9326 -> bb69__0_9326 [label="return"];
    bb68__0_9326 -> bb101__0_9326 [label="unwind"];
    bb69__0_9326 -> bb70__0_9326 [label="return"];
    bb69__0_9326 -> bb101__0_9326 [label="unwind"];
    bb70__0_9326 -> bb71__0_9326 [label="return"];
    bb70__0_9326 -> bb100__0_9326 [label="unwind"];
    bb71__0_9326 -> bb72__0_9326 [label="return"];
    bb71__0_9326 -> bb100__0_9326 [label="unwind"];
    bb72__0_9326 -> bb73__0_9326 [label="return"];
    bb72__0_9326 -> bb101__0_9326 [label="unwind"];
    bb73__0_9326 -> bb74__0_9326 [label="return"];
    bb73__0_9326 -> bb101__0_9326 [label="unwind"];
    bb74__0_9326 -> bb75__0_9326 [label="return"];
    bb74__0_9326 -> bb101__0_9326 [label="unwind"];
    bb75__0_9326 -> bb76__0_9326 [label="return"];
    bb75__0_9326 -> bb101__0_9326 [label="unwind"];
    bb76__0_9326 -> bb77__0_9326 [label="return"];
    bb76__0_9326 -> bb99__0_9326 [label="unwind"];
    bb77__0_9326 -> bb78__0_9326 [label="return"];
    bb77__0_9326 -> bb99__0_9326 [label="unwind"];
    bb78__0_9326 -> bb79__0_9326 [label="return"];
    bb78__0_9326 -> bb101__0_9326 [label="unwind"];
    bb79__0_9326 -> bb80__0_9326 [label="return"];
    bb79__0_9326 -> bb101__0_9326 [label="unwind"];
    bb80__0_9326 -> bb81__0_9326 [label="return"];
    bb80__0_9326 -> bb101__0_9326 [label="unwind"];
    bb81__0_9326 -> bb82__0_9326 [label="return"];
    bb81__0_9326 -> bb101__0_9326 [label="unwind"];
    bb82__0_9326 -> bb83__0_9326 [label="return"];
    bb82__0_9326 -> bb98__0_9326 [label="unwind"];
    bb83__0_9326 -> bb84__0_9326 [label="return"];
    bb83__0_9326 -> bb98__0_9326 [label="unwind"];
    bb84__0_9326 -> bb85__0_9326 [label="return"];
    bb84__0_9326 -> bb101__0_9326 [label="unwind"];
    bb85__0_9326 -> bb86__0_9326 [label="return"];
    bb85__0_9326 -> bb102__0_9326 [label="unwind"];
    bb86__0_9326 -> bb39__0_9326 [label=""];
    bb87__0_9326 -> bb88__0_9326 [label="return"];
    bb87__0_9326 -> bb114__0_9326 [label="unwind"];
    bb88__0_9326 -> bb97__0_9326 [label=""];
    bb89__0_9326 -> bb90__0_9326 [label=""];
    bb90__0_9326 -> bb91__0_9326 [label="return"];
    bb90__0_9326 -> bb102__0_9326 [label="unwind"];
    bb91__0_9326 -> bb92__0_9326 [label=""];
    bb92__0_9326 -> bb94__0_9326 [label="return"];
    bb92__0_9326 -> bb104__0_9326 [label="unwind"];
    bb93__0_9326 -> bb94__0_9326 [label=""];
    bb94__0_9326 -> bb95__0_9326 [label="return"];
    bb94__0_9326 -> bb114__0_9326 [label="unwind"];
    bb95__0_9326 -> bb96__0_9326 [label=""];
    bb96__0_9326 -> bb107__0_9326 [label=""];
    bb98__0_9326 -> bb101__0_9326 [label="return"];
    bb99__0_9326 -> bb101__0_9326 [label="return"];
    bb100__0_9326 -> bb101__0_9326 [label="return"];
    bb101__0_9326 -> bb102__0_9326 [label="return"];
    bb102__0_9326 -> bb104__0_9326 [label="return"];
    bb103__0_9326 -> bb104__0_9326 [label="return"];
    bb104__0_9326 -> bb114__0_9326 [label="return"];
    bb106__0_9326 -> bb97__0_9326 [label="return"];
    bb106__0_9326 -> bb105__0_9326 [label="unwind"];
    bb107__0_9326 -> bb97__0_9326 [label="0"];
    bb107__0_9326 -> bb106__0_9326 [label="otherwise"];
    bb108__0_9326 -> bb102__0_9326 [label=""];
    bb109__0_9326 -> bb103__0_9326 [label=""];
    bb110__0_9326 -> bb114__0_9326 [label=""];
    bb111__0_9326 -> bb114__0_9326 [label=""];
    bb112__0_9326 -> bb114__0_9326 [label=""];
    bb113__0_9326 -> bb105__0_9326 [label="return"];
    bb114__0_9326 -> bb105__0_9326 [label="0"];
    bb114__0_9326 -> bb113__0_9326 [label="otherwise"];
}
