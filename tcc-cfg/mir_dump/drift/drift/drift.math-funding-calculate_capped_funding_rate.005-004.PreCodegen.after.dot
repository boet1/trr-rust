digraph Mir_0_2303 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_capped_funding_rate(_1: &amp;ReErased state::perp_market::PerpMarket, _2: i128, _3: i128) -&gt; std::result::Result&lt;(i128, i128), error::ErrorCode&gt;<br align="left"/>let _4: u128;<br align="left"/>let mut _5: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _6: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _7: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _8: isize;<br align="left"/>let _9: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _10: !;<br align="left"/>let mut _11: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _12: u128;<br align="left"/>let _13: i128;<br align="left"/>let mut _14: i128;<br align="left"/>let mut _15: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _16: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _17: i128;<br align="left"/>let mut _18: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _19: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _20: u128;<br align="left"/>let mut _21: isize;<br align="left"/>let _22: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _23: !;<br align="left"/>let mut _24: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _25: i128;<br align="left"/>let mut _26: isize;<br align="left"/>let _27: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _28: !;<br align="left"/>let mut _29: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _30: i128;<br align="left"/>let mut _31: bool;<br align="left"/>let _32: i128;<br align="left"/>let mut _33: i128;<br align="left"/>let mut _34: i128;<br align="left"/>let _35: i128;<br align="left"/>let mut _36: bool;<br align="left"/>let mut _37: i128;<br align="left"/>let mut _38: i128;<br align="left"/>let _39: i128;<br align="left"/>let mut _40: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _41: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _42: i128;<br align="left"/>let mut _43: i128;<br align="left"/>let mut _44: bool;<br align="left"/>let mut _45: i128;<br align="left"/>let mut _46: isize;<br align="left"/>let _47: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _48: !;<br align="left"/>let mut _49: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _50: i128;<br align="left"/>let _51: i128;<br align="left"/>let mut _52: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _53: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _54: i128;<br align="left"/>let mut _55: i128;<br align="left"/>let mut _56: i128;<br align="left"/>let mut _57: isize;<br align="left"/>let _58: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _59: !;<br align="left"/>let mut _60: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _61: i128;<br align="left"/>let mut _62: bool;<br align="left"/>let mut _63: i128;<br align="left"/>let mut _64: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _65: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _66: i128;<br align="left"/>let mut _67: i128;<br align="left"/>let mut _68: isize;<br align="left"/>let _69: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _70: !;<br align="left"/>let mut _71: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _72: i128;<br align="left"/>let mut _73: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _74: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _75: i128;<br align="left"/>let mut _76: i128;<br align="left"/>let mut _77: isize;<br align="left"/>let _78: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _79: !;<br align="left"/>let mut _80: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _81: i128;<br align="left"/>let mut _82: (i128, i128);<br align="left"/>let mut _83: i128;<br align="left"/>let mut _84: i128;<br align="left"/>debug market =&gt; _1;<br align="left"/>debug uncapped_funding_pnl =&gt; _2;<br align="left"/>debug funding_rate =&gt; _3;<br align="left"/>debug fee_pool =&gt; _4;<br align="left"/>debug residual =&gt; _9;<br align="left"/>debug val =&gt; _12;<br align="left"/>debug funding_rate_pnl_limit =&gt; _13;<br align="left"/>debug residual =&gt; _22;<br align="left"/>debug val =&gt; _25;<br align="left"/>debug residual =&gt; _27;<br align="left"/>debug val =&gt; _30;<br align="left"/>debug capped_funding_pnl =&gt; _32;<br align="left"/>debug capped_funding_rate =&gt; _35;<br align="left"/>debug funding_payment_from_users =&gt; _39;<br align="left"/>debug residual =&gt; _47;<br align="left"/>debug val =&gt; _50;<br align="left"/>debug funding_rate_pnl_limit =&gt; _51;<br align="left"/>debug residual =&gt; _58;<br align="left"/>debug val =&gt; _61;<br align="left"/>debug residual =&gt; _69;<br align="left"/>debug val =&gt; _72;<br align="left"/>debug residual =&gt; _78;<br align="left"/>debug val =&gt; _81;<br align="left"/>>;
    bb0__0_2303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = &amp;(*_1)<br/></td></tr><tr><td align="left">_6 = calculate_fee_pool(move _7)</td></tr></table>>];
    bb1__0_2303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/></td></tr><tr><td align="left">_5 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _6)</td></tr></table>>];
    bb2__0_2303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_8 = discriminant(_5)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb3__0_2303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_5 as Continue).0: u128)<br/>_4 = _12<br/>StorageDead(_12)<br/>StorageDead(_5)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_20 = _4<br/></td></tr><tr><td align="left">_19 = &lt;u128 as Cast&gt;::cast::&lt;i128&gt;(move _20)</td></tr></table>>];
    bb4__0_2303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_2303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>_9 = ((_5 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_11)<br/>_11 = _9<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i128, i128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _11)</td></tr></table>>];
    bb6__0_2303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_9)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_2303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/></td></tr><tr><td align="left">_18 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _19)</td></tr></table>>];
    bb8__0_2303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>_21 = discriminant(_18)<br/></td></tr><tr><td align="left">switchInt(move _21)</td></tr></table>>];
    bb9__0_2303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_25)<br/>_25 = ((_18 as Continue).0: i128)<br/>_17 = _25<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">_16 = &lt;i128 as SafeMath&gt;::safe_div(move _17, const 3_i128)</td></tr></table>>];
    bb10__0_2303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_22)<br/>_22 = ((_18 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_24)<br/>_24 = _22<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i128, i128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _24)</td></tr></table>>];
    bb11__0_2303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_22)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_2303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/></td></tr><tr><td align="left">_15 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _16)</td></tr></table>>];
    bb13__0_2303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>_26 = discriminant(_15)<br/></td></tr><tr><td align="left">switchInt(move _26)</td></tr></table>>];
    bb14__0_2303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_30)<br/>_30 = ((_15 as Continue).0: i128)<br/>_14 = _30<br/>StorageDead(_30)<br/>_31 = Eq(_14, const i128::MIN)<br/></td></tr><tr><td align="left">assert(!move _31, &quot;attempt to negate `{}`, which would overflow&quot;, _14)</td></tr></table>>];
    bb15__0_2303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_27)<br/>_27 = ((_15 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_29)<br/>_29 = _27<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i128, i128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _29)</td></tr></table>>];
    bb16__0_2303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_2303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">_13 = Neg(move _14)<br/>StorageDead(_14)<br/>StorageDead(_18)<br/>StorageDead(_15)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>_33 = _2<br/>StorageLive(_34)<br/>_34 = _13<br/></td></tr><tr><td align="left">_32 = std::cmp::max::&lt;i128&gt;(move _33, move _34)</td></tr></table>>];
    bb18__0_2303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_33)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>_37 = _2<br/>StorageLive(_38)<br/>_38 = _13<br/>_36 = Lt(move _37, move _38)<br/></td></tr><tr><td align="left">switchInt(move _36)</td></tr></table>>];
    bb19__0_2303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_37)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>_42 = _3<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>_45 = _3<br/>_44 = Gt(move _45, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _44)</td></tr></table>>];
    bb20__0_2303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>_43 = (((*_1).1: state::perp_market::AMM).13: i128)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_2303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>_43 = (((*_1).1: state::perp_market::AMM).14: i128)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_2303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/></td></tr><tr><td align="left">_41 = calculate_funding_payment_in_quote_precision(move _42, move _43)</td></tr></table>>];
    bb23__0_2303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">_40 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _41)</td></tr></table>>];
    bb24__0_2303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>_46 = discriminant(_40)<br/></td></tr><tr><td align="left">switchInt(move _46)</td></tr></table>>];
    bb25__0_2303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_50)<br/>_50 = ((_40 as Continue).0: i128)<br/>_39 = _50<br/>StorageDead(_50)<br/>StorageDead(_40)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>_54 = _13<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>_56 = _39<br/></td></tr><tr><td align="left">_55 = core::num::&lt;impl i128&gt;::abs(move _56)</td></tr></table>>];
    bb26__0_2303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>_47 = ((_40 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_49)<br/>_49 = _47<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i128, i128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _49)</td></tr></table>>];
    bb27__0_2303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_47)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_2303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/></td></tr><tr><td align="left">_53 = &lt;i128 as SafeMath&gt;::safe_sub(move _54, move _55)</td></tr></table>>];
    bb29__0_2303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">_52 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _53)</td></tr></table>>];
    bb30__0_2303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>_57 = discriminant(_52)<br/></td></tr><tr><td align="left">switchInt(move _57)</td></tr></table>>];
    bb31__0_2303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_61)<br/>_61 = ((_52 as Continue).0: i128)<br/>_51 = _61<br/>StorageDead(_61)<br/>StorageDead(_52)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>_63 = _3<br/>_62 = Lt(move _63, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _62)</td></tr></table>>];
    bb32__0_2303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_58)<br/>_58 = ((_52 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_60)<br/>_60 = _58<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i128, i128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _60)</td></tr></table>>];
    bb33__0_2303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageDead(_58)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_2303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>_66 = _51<br/>StorageLive(_67)<br/>_67 = (((*_1).1: state::perp_market::AMM).13: i128)<br/></td></tr><tr><td align="left">_65 = calculate_funding_rate_from_pnl_limit(move _66, move _67)</td></tr></table>>];
    bb35__0_2303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>_75 = _51<br/>StorageLive(_76)<br/>_76 = (((*_1).1: state::perp_market::AMM).14: i128)<br/></td></tr><tr><td align="left">_74 = calculate_funding_rate_from_pnl_limit(move _75, move _76)</td></tr></table>>];
    bb36__0_2303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">_64 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _65)</td></tr></table>>];
    bb37__0_2303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>_68 = discriminant(_64)<br/></td></tr><tr><td align="left">switchInt(move _68)</td></tr></table>>];
    bb38__0_2303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_72)<br/>_72 = ((_64 as Continue).0: i128)<br/>_35 = _72<br/>StorageDead(_72)<br/>StorageDead(_64)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_2303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_69)<br/>_69 = ((_64 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_71)<br/>_71 = _69<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i128, i128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _71)</td></tr></table>>];
    bb40__0_2303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageDead(_69)<br/>StorageDead(_64)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_2303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>StorageDead(_75)<br/></td></tr><tr><td align="left">_73 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _74)</td></tr></table>>];
    bb42__0_2303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>_77 = discriminant(_73)<br/></td></tr><tr><td align="left">switchInt(move _77)</td></tr></table>>];
    bb43__0_2303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageLive(_81)<br/>_81 = ((_73 as Continue).0: i128)<br/>_35 = _81<br/>StorageDead(_81)<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_2303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_78)<br/>_78 = ((_73 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_80)<br/>_80 = _78<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i128, i128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _80)</td></tr></table>>];
    bb45__0_2303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>StorageDead(_78)<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_2303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageDead(_51)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_2303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_37)<br/>_35 = _3<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_2303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>_83 = _35<br/>StorageLive(_84)<br/>_84 = _32<br/>_82 = (move _83, move _84)<br/>StorageDead(_84)<br/>StorageDead(_83)<br/>_0 = std::result::Result::&lt;(i128, i128), error::ErrorCode&gt;::Ok(move _82)<br/>StorageDead(_82)<br/>StorageDead(_35)<br/>StorageDead(_32)<br/>StorageDead(_13)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_2303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_2303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb51__0_2303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_36)<br/>StorageDead(_35)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb52__0_2303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_18)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_2303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_2303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb55__0_2303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2303 -> bb1__0_2303 [label="return"];
    bb1__0_2303 -> bb2__0_2303 [label="return"];
    bb2__0_2303 -> bb3__0_2303 [label="0"];
    bb2__0_2303 -> bb5__0_2303 [label="1"];
    bb2__0_2303 -> bb4__0_2303 [label="otherwise"];
    bb3__0_2303 -> bb7__0_2303 [label="return"];
    bb5__0_2303 -> bb6__0_2303 [label="return"];
    bb6__0_2303 -> bb54__0_2303 [label=""];
    bb7__0_2303 -> bb8__0_2303 [label="return"];
    bb8__0_2303 -> bb9__0_2303 [label="0"];
    bb8__0_2303 -> bb10__0_2303 [label="1"];
    bb8__0_2303 -> bb4__0_2303 [label="otherwise"];
    bb9__0_2303 -> bb12__0_2303 [label="return"];
    bb10__0_2303 -> bb11__0_2303 [label="return"];
    bb11__0_2303 -> bb52__0_2303 [label=""];
    bb12__0_2303 -> bb13__0_2303 [label="return"];
    bb13__0_2303 -> bb14__0_2303 [label="0"];
    bb13__0_2303 -> bb15__0_2303 [label="1"];
    bb13__0_2303 -> bb4__0_2303 [label="otherwise"];
    bb14__0_2303 -> bb17__0_2303 [label="success"];
    bb15__0_2303 -> bb16__0_2303 [label="return"];
    bb16__0_2303 -> bb52__0_2303 [label=""];
    bb17__0_2303 -> bb18__0_2303 [label="return"];
    bb18__0_2303 -> bb47__0_2303 [label="0"];
    bb18__0_2303 -> bb19__0_2303 [label="otherwise"];
    bb19__0_2303 -> bb21__0_2303 [label="0"];
    bb19__0_2303 -> bb20__0_2303 [label="otherwise"];
    bb20__0_2303 -> bb22__0_2303 [label=""];
    bb21__0_2303 -> bb22__0_2303 [label=""];
    bb22__0_2303 -> bb23__0_2303 [label="return"];
    bb23__0_2303 -> bb24__0_2303 [label="return"];
    bb24__0_2303 -> bb25__0_2303 [label="0"];
    bb24__0_2303 -> bb26__0_2303 [label="1"];
    bb24__0_2303 -> bb4__0_2303 [label="otherwise"];
    bb25__0_2303 -> bb28__0_2303 [label="return"];
    bb26__0_2303 -> bb27__0_2303 [label="return"];
    bb27__0_2303 -> bb51__0_2303 [label=""];
    bb28__0_2303 -> bb29__0_2303 [label="return"];
    bb29__0_2303 -> bb30__0_2303 [label="return"];
    bb30__0_2303 -> bb31__0_2303 [label="0"];
    bb30__0_2303 -> bb32__0_2303 [label="1"];
    bb30__0_2303 -> bb4__0_2303 [label="otherwise"];
    bb31__0_2303 -> bb35__0_2303 [label="0"];
    bb31__0_2303 -> bb34__0_2303 [label="otherwise"];
    bb32__0_2303 -> bb33__0_2303 [label="return"];
    bb33__0_2303 -> bb50__0_2303 [label=""];
    bb34__0_2303 -> bb36__0_2303 [label="return"];
    bb35__0_2303 -> bb41__0_2303 [label="return"];
    bb36__0_2303 -> bb37__0_2303 [label="return"];
    bb37__0_2303 -> bb38__0_2303 [label="0"];
    bb37__0_2303 -> bb39__0_2303 [label="1"];
    bb37__0_2303 -> bb4__0_2303 [label="otherwise"];
    bb38__0_2303 -> bb46__0_2303 [label=""];
    bb39__0_2303 -> bb40__0_2303 [label="return"];
    bb40__0_2303 -> bb49__0_2303 [label=""];
    bb41__0_2303 -> bb42__0_2303 [label="return"];
    bb42__0_2303 -> bb43__0_2303 [label="0"];
    bb42__0_2303 -> bb44__0_2303 [label="1"];
    bb42__0_2303 -> bb4__0_2303 [label="otherwise"];
    bb43__0_2303 -> bb46__0_2303 [label=""];
    bb44__0_2303 -> bb45__0_2303 [label="return"];
    bb45__0_2303 -> bb49__0_2303 [label=""];
    bb46__0_2303 -> bb48__0_2303 [label=""];
    bb47__0_2303 -> bb48__0_2303 [label=""];
    bb48__0_2303 -> bb55__0_2303 [label=""];
    bb49__0_2303 -> bb50__0_2303 [label=""];
    bb50__0_2303 -> bb51__0_2303 [label=""];
    bb51__0_2303 -> bb53__0_2303 [label=""];
    bb52__0_2303 -> bb53__0_2303 [label=""];
    bb53__0_2303 -> bb54__0_2303 [label=""];
    bb54__0_2303 -> bb55__0_2303 [label=""];
}
