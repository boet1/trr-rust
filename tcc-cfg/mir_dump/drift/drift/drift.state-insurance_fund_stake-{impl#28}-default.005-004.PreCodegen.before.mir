// MIR for `insurance_fund_stake::<impl at programs/drift/src/state/insurance_fund_stake.rs:94:10: 94:17>::default` before PreCodegen

fn insurance_fund_stake::<impl at programs/drift/src/state/insurance_fund_stake.rs:94:10: 94:17>::default() -> ProtocolIfSharesTransferConfig {
    let mut _0: state::insurance_fund_stake::ProtocolIfSharesTransferConfig;
    let mut _1: [anchor_lang::prelude::Pubkey; 4];
    let mut _2: u128;
    let mut _3: u128;
    let mut _4: i64;
    let mut _5: [u128; 8];

    bb0: {
        StorageLive(_1);
        _1 = <[anchor_lang::prelude::Pubkey; 4] as Default>::default() -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageLive(_2);
        _2 = <u128 as Default>::default() -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageLive(_3);
        _3 = <u128 as Default>::default() -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageLive(_4);
        _4 = <i64 as Default>::default() -> [return: bb4, unwind continue];
    }

    bb4: {
        StorageLive(_5);
        _5 = <[u128; 8] as Default>::default() -> [return: bb5, unwind continue];
    }

    bb5: {
        _0 = ProtocolIfSharesTransferConfig { whitelisted_signers: move _1, max_transfer_per_epoch: move _2, current_epoch_transfer: move _3, next_epoch_ts: move _4, padding: move _5 };
        StorageDead(_5);
        StorageDead(_4);
        StorageDead(_3);
        StorageDead(_2);
        StorageDead(_1);
        return;
    }
}
