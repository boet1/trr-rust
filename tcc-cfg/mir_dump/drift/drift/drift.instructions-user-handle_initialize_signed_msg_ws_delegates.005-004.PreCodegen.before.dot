digraph Mir_0_1694 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn instructions::user::handle_initialize_signed_msg_ws_delegates(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::user::InitializeSignedMsgWsDelegates&lt;ReErased&gt;&gt;, _2: std::vec::Vec&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: &amp;ReErased mut std::vec::Vec&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _5: &amp;ReErased mut state::signed_msg_user::SignedMsgWsDelegates;<br align="left"/>let mut _6: &amp;ReErased mut anchor_lang::prelude::Account&lt;ReErased, state::signed_msg_user::SignedMsgWsDelegates&gt;;<br align="left"/>let mut _7: std::vec::Vec&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _8: ();<br align="left"/>let mut _9: &amp;ReErased mut instructions::user::InitializeSignedMsgWsDelegates&lt;ReErased&gt;;<br align="left"/>let mut _10: bool;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug delegates =&gt; _2;<br align="left"/>>;
    bb0__0_1694 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_10 = const false<br/>_10 = const true<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_9 = deref_copy (_1.1: &amp;mut instructions::user::InitializeSignedMsgWsDelegates&lt;'_&gt;)<br/>_6 = &amp;mut ((*_9).0: anchor_lang::prelude::Account&lt;'_, state::signed_msg_user::SignedMsgWsDelegates&gt;)<br/></td></tr><tr><td align="left">_5 = &lt;anchor_lang::prelude::Account&lt;'_, SignedMsgWsDelegates&gt; as DerefMut&gt;::deref_mut(move _6)</td></tr></table>>];
    bb1__0_1694 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_4 = &amp;mut ((*_5).0: std::vec::Vec&lt;anchor_lang::prelude::Pubkey&gt;)<br/>StorageLive(_7)<br/>_10 = const false<br/>_7 = move _2<br/></td></tr><tr><td align="left">_3 = &lt;Vec&lt;anchor_lang::prelude::Pubkey&gt; as Extend&lt;anchor_lang::prelude::Pubkey&gt;&gt;::extend::&lt;Vec&lt;anchor_lang::prelude::Pubkey&gt;&gt;(move _4, move _7)</td></tr></table>>];
    bb2__0_1694 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_5)<br/>StorageDead(_3)<br/>StorageLive(_8)<br/>_8 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _8)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb3__0_1694 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">3 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb4__0_1694 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">4 (cleanup)</td></tr><tr><td align="left">drop(_2)</td></tr></table>>];
    bb5__0_1694 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">5 (cleanup)</td></tr><tr><td align="left">switchInt(_10)</td></tr></table>>];
    bb0__0_1694 -> bb1__0_1694 [label="return"];
    bb0__0_1694 -> bb5__0_1694 [label="unwind"];
    bb1__0_1694 -> bb2__0_1694 [label="return"];
    bb1__0_1694 -> bb5__0_1694 [label="unwind"];
    bb4__0_1694 -> bb3__0_1694 [label="return"];
    bb5__0_1694 -> bb3__0_1694 [label="0"];
    bb5__0_1694 -> bb4__0_1694 [label="otherwise"];
}
