// MIR for `send_from_program_vault` after PreCodegen

fn send_from_program_vault(_1: &anchor_lang::prelude::Interface<'_, TokenInterface>, _2: &anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>, _3: &anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>, _4: &anchor_lang::prelude::AccountInfo<'_>, _5: u8, _6: u64, _7: &Option<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint>>, _8: Option<&mut Peekable<std::slice::Iter<'_, anchor_lang::prelude::AccountInfo<'_>>>>) -> std::result::Result<(), anchor_lang::error::Error> {
    debug token_program => _1;
    debug from => _2;
    debug to => _3;
    debug authority => _4;
    debug nonce => _5;
    debug amount => _6;
    debug mint => _7;
    debug remaining_accounts => _8;
    let mut _0: std::result::Result<(), anchor_lang::error::Error>;
    let _9: [&[u8]; 2];
    let mut _10: &u8;
    let _11: &u8;
    let _13: [&[&[u8]]; 1];
    let mut _14: &[&[u8]];
    let _15: &[&[u8]];
    let mut _16: &[&[u8]; 2];
    let mut _17: std::ops::RangeFull;
    let mut _18: isize;
    let mut _20: isize;
    let mut _22: &anchor_lang::prelude::Interface<'_, anchor_spl::token_interface::TokenInterface>;
    let mut _23: &anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>;
    let mut _24: &anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>;
    let mut _25: &anchor_lang::prelude::AccountInfo<'_>;
    let mut _26: u64;
    let mut _27: &anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint>;
    let mut _28: &mut std::iter::Peekable<std::slice::Iter<'_, anchor_lang::prelude::AccountInfo<'_>>>;
    let mut _29: &[&[&[u8]]];
    let mut _30: &[&[&[u8]]; 1];
    let mut _32: &anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint>;
    let _33: ();
    let mut _34: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, anchor_lang::error::Error>>;
    let mut _35: std::result::Result<(), anchor_lang::error::Error>;
    let mut _36: &anchor_lang::prelude::AccountInfo<'_>;
    let _37: &anchor_lang::prelude::AccountInfo<'_>;
    let mut _38: isize;
    let mut _40: !;
    let mut _41: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>;
    let mut _44: anchor_lang::prelude::AccountInfo<'_>;
    let mut _45: &anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>;
    let mut _46: anchor_lang::prelude::AccountInfo<'_>;
    let mut _47: anchor_lang::prelude::AccountInfo<'_>;
    let mut _48: &anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>;
    let mut _49: anchor_lang::prelude::AccountInfo<'_>;
    let mut _50: &anchor_lang::prelude::AccountInfo<'_>;
    let mut _52: &anchor_lang::prelude::Interface<'_, anchor_spl::token_interface::TokenInterface>;
    let mut _54: anchor_lang::prelude::AccountInfo<'_>;
    let mut _55: anchor_spl::token_2022::TransferChecked<'_>;
    let mut _56: &[&[&[u8]]];
    let mut _57: &[&[&[u8]]; 1];
    let mut _58: anchor_lang::context::CpiContext<'_, '_, '_, '_, anchor_spl::token_2022::TransferChecked<'_>>;
    let mut _59: u64;
    let mut _60: u8;
    let mut _61: &anchor_spl::token_2022::spl_token_2022::state::Mint;
    let mut _62: &anchor_spl::token_interface::Mint;
    let _63: &anchor_spl::token_interface::Mint;
    let mut _64: &anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint>;
    let mut _66: anchor_lang::prelude::AccountInfo<'_>;
    let mut _67: &anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>;
    let mut _68: anchor_lang::prelude::AccountInfo<'_>;
    let mut _69: &anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>;
    let mut _70: anchor_lang::prelude::AccountInfo<'_>;
    let mut _71: &anchor_lang::prelude::AccountInfo<'_>;
    let mut _73: &anchor_lang::prelude::Interface<'_, anchor_spl::token_interface::TokenInterface>;
    let mut _75: anchor_lang::prelude::AccountInfo<'_>;
    let mut _76: anchor_spl::token_2022::Transfer<'_>;
    let mut _77: &[&[&[u8]]];
    let mut _78: &[&[&[u8]]; 1];
    let mut _79: anchor_lang::context::CpiContext<'_, '_, '_, '_, anchor_spl::token_2022::Transfer<'_>>;
    let mut _80: u64;
    let mut _81: bool;
    let mut _82: bool;
    let mut _83: bool;
    let mut _84: bool;
    let mut _85: isize;
    let mut _86: isize;
    let mut _87: isize;
    let mut _88: isize;
    let mut _89: isize;
    scope 1 {
        debug signature_seeds => _9;
        let _12: &[&[&[u8]]; 1];
        scope 2 {
            debug signers => _12;
            let _65: anchor_spl::token_2022::Transfer<'_>;
            scope 3 {
                debug mint => _19;
                let _19: &anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint>;
                let _31: anchor_lang::prelude::AccountInfo<'_>;
                scope 4 {
                    debug remaining_accounts => _21;
                    let _21: &mut std::iter::Peekable<std::slice::Iter<'_, anchor_lang::prelude::AccountInfo<'_>>>;
                }
                scope 5 {
                    debug mint_account_info => _31;
                    let _39: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>;
                    let _42: ();
                    let _43: anchor_spl::token_2022::TransferChecked<'_>;
                    scope 6 {
                        debug residual => _39;
                        scope 7 {
                        }
                    }
                    scope 8 {
                        debug val => _42;
                        scope 9 {
                        }
                    }
                    scope 10 {
                        debug cpi_accounts => _43;
                        let _51: anchor_lang::prelude::AccountInfo<'_>;
                        scope 11 {
                            debug cpi_program => _51;
                            let _53: anchor_lang::context::CpiContext<'_, '_, '_, '_, anchor_spl::token_2022::TransferChecked<'_>>;
                            scope 12 {
                                debug cpi_context => _53;
                            }
                        }
                    }
                }
            }
            scope 13 {
                debug cpi_accounts => _65;
                let _72: anchor_lang::prelude::AccountInfo<'_>;
                scope 14 {
                    debug cpi_program => _72;
                    let _74: anchor_lang::context::CpiContext<'_, '_, '_, '_, anchor_spl::token_2022::Transfer<'_>>;
                    scope 15 {
                        debug cpi_context => _74;
                        scope 16 {
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _84 = const false;
        _83 = const false;
        _82 = const false;
        _81 = const false;
        StorageLive(_9);
        StorageLive(_10);
        StorageLive(_11);
        _11 = &_5;
        _10 = &(*_11);
        _9 = get_signer_seeds(move _10) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_10);
        StorageDead(_11);
        StorageLive(_12);
        StorageLive(_13);
        StorageLive(_14);
        StorageLive(_15);
        StorageLive(_16);
        _16 = &_9;
        StorageLive(_17);
        _17 = RangeFull;
        _15 = <[&[u8]; 2] as Index<RangeFull>>::index(move _16, move _17) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_17);
        StorageDead(_16);
        _14 = &(*_15);
        _13 = [move _14];
        StorageDead(_14);
        _12 = &_13;
        _18 = discriminant((*_7));
        switchInt(move _18) -> [1: bb3, otherwise: bb23];
    }

    bb3: {
        StorageLive(_19);
        _19 = &(((*_7) as Some).0: anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint>);
        _20 = discriminant(_8);
        switchInt(move _20) -> [1: bb4, otherwise: bb6];
    }

    bb4: {
        StorageLive(_21);
        _21 = move ((_8 as Some).0: &mut std::iter::Peekable<std::slice::Iter<'_, anchor_lang::prelude::AccountInfo<'_>>>);
        StorageLive(_22);
        _22 = &(*_1);
        StorageLive(_23);
        _23 = &(*_2);
        StorageLive(_24);
        _24 = &(*_3);
        StorageLive(_25);
        _25 = &(*_4);
        StorageLive(_26);
        _26 = _6;
        StorageLive(_27);
        _27 = &(*_19);
        StorageLive(_28);
        _28 = &mut (*_21);
        StorageLive(_29);
        StorageLive(_30);
        _30 = &(*_12);
        _29 = move _30 as &[&[&[u8]]] (PointerCoercion(Unsize));
        StorageDead(_30);
        _0 = transfer_checked_with_transfer_hook(move _22, move _23, move _24, move _25, move _26, move _27, move _28, move _29) -> [return: bb5, unwind continue];
    }

    bb5: {
        StorageDead(_29);
        StorageDead(_28);
        StorageDead(_27);
        StorageDead(_26);
        StorageDead(_25);
        StorageDead(_24);
        StorageDead(_23);
        StorageDead(_22);
        StorageDead(_21);
        goto -> bb22;
    }

    bb6: {
        StorageLive(_31);
        StorageLive(_32);
        _32 = &(*_19);
        _84 = const true;
        _31 = <anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint> as anchor_lang::ToAccountInfo<'_>>::to_account_info(move _32) -> [return: bb7, unwind continue];
    }

    bb7: {
        StorageDead(_32);
        StorageLive(_33);
        StorageLive(_34);
        StorageLive(_35);
        StorageLive(_36);
        StorageLive(_37);
        _37 = &_31;
        _36 = &(*_37);
        _35 = validate_mint_fee(move _36) -> [return: bb8, unwind: bb47];
    }

    bb8: {
        StorageDead(_36);
        _34 = <std::result::Result<(), anchor_lang::error::Error> as Try>::branch(move _35) -> [return: bb9, unwind: bb47];
    }

    bb9: {
        StorageDead(_35);
        _38 = discriminant(_34);
        switchInt(move _38) -> [0: bb10, 1: bb12, otherwise: bb11];
    }

    bb10: {
        StorageLive(_42);
        _42 = ((_34 as Continue).0: ());
        _33 = _42;
        StorageDead(_42);
        _85 = discriminant(_34);
        StorageDead(_37);
        StorageDead(_34);
        StorageDead(_33);
        StorageLive(_43);
        StorageLive(_44);
        StorageLive(_45);
        _45 = &(*_2);
        _44 = <anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount> as anchor_lang::ToAccountInfo<'_>>::to_account_info(move _45) -> [return: bb14, unwind: bb47];
    }

    bb11: {
        unreachable;
    }

    bb12: {
        StorageLive(_39);
        _39 = move ((_34 as Break).0: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>);
        StorageLive(_41);
        _41 = move _39;
        _0 = <std::result::Result<(), anchor_lang::error::Error> as FromResidual<std::result::Result<Infallible, anchor_lang::error::Error>>>::from_residual(move _41) -> [return: bb13, unwind: bb45];
    }

    bb13: {
        StorageDead(_41);
        StorageDead(_39);
        _87 = discriminant(_34);
        StorageDead(_37);
        StorageDead(_34);
        StorageDead(_33);
        drop(_31) -> [return: bb31, unwind: bb38];
    }

    bb14: {
        StorageDead(_45);
        StorageLive(_46);
        _84 = const false;
        _46 = move _31;
        StorageLive(_47);
        StorageLive(_48);
        _48 = &(*_3);
        _47 = <anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount> as anchor_lang::ToAccountInfo<'_>>::to_account_info(move _48) -> [return: bb15, unwind: bb36];
    }

    bb15: {
        StorageDead(_48);
        StorageLive(_49);
        StorageLive(_50);
        _50 = &(*_4);
        _49 = <anchor_lang::prelude::AccountInfo<'_> as anchor_lang::ToAccountInfo<'_>>::to_account_info(move _50) -> [return: bb16, unwind: bb35];
    }

    bb16: {
        StorageDead(_50);
        _83 = const true;
        _43 = anchor_spl::token_2022::TransferChecked::<'_> { from: move _44, mint: move _46, to: move _47, authority: move _49 };
        StorageDead(_49);
        StorageDead(_47);
        StorageDead(_46);
        StorageDead(_44);
        StorageLive(_51);
        StorageLive(_52);
        _52 = &(*_1);
        _51 = <anchor_lang::prelude::Interface<'_, TokenInterface> as anchor_lang::ToAccountInfo<'_>>::to_account_info(move _52) -> [return: bb17, unwind: bb44];
    }

    bb17: {
        StorageDead(_52);
        StorageLive(_53);
        StorageLive(_54);
        _54 = move _51;
        StorageLive(_55);
        _83 = const false;
        _55 = move _43;
        StorageLive(_56);
        StorageLive(_57);
        _57 = &(*_12);
        _56 = move _57 as &[&[&[u8]]] (PointerCoercion(Unsize));
        StorageDead(_57);
        _53 = anchor_lang::context::CpiContext::<'_, '_, '_, '_, anchor_spl::token_2022::TransferChecked<'_>>::new_with_signer(move _54, move _55, move _56) -> [return: bb18, unwind: bb44];
    }

    bb18: {
        StorageDead(_56);
        StorageDead(_55);
        StorageDead(_54);
        StorageLive(_58);
        _82 = const true;
        _58 = move _53;
        StorageLive(_59);
        _59 = _6;
        StorageLive(_60);
        StorageLive(_61);
        StorageLive(_62);
        StorageLive(_63);
        StorageLive(_64);
        _64 = &(*_19);
        _63 = <anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint> as Deref>::deref(move _64) -> [return: bb19, unwind: bb42];
    }

    bb19: {
        _62 = &(*_63);
        _61 = <anchor_spl::token_interface::Mint as Deref>::deref(move _62) -> [return: bb20, unwind: bb42];
    }

    bb20: {
        StorageDead(_64);
        StorageDead(_62);
        _60 = ((*_61).2: u8);
        _82 = const false;
        _0 = anchor_spl::token_2022::transfer_checked(move _58, move _59, move _60) -> [return: bb21, unwind: bb42];
    }

    bb21: {
        StorageDead(_60);
        StorageDead(_59);
        _82 = const false;
        StorageDead(_58);
        StorageDead(_53);
        StorageDead(_51);
        _83 = const false;
        StorageDead(_43);
        _84 = const false;
        StorageDead(_31);
        StorageDead(_63);
        StorageDead(_61);
        goto -> bb22;
    }

    bb22: {
        StorageDead(_19);
        goto -> bb30;
    }

    bb23: {
        StorageLive(_65);
        StorageLive(_66);
        StorageLive(_67);
        _67 = &(*_2);
        _66 = <anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount> as anchor_lang::ToAccountInfo<'_>>::to_account_info(move _67) -> [return: bb24, unwind continue];
    }

    bb24: {
        StorageDead(_67);
        StorageLive(_68);
        StorageLive(_69);
        _69 = &(*_3);
        _68 = <anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount> as anchor_lang::ToAccountInfo<'_>>::to_account_info(move _69) -> [return: bb25, unwind: bb34];
    }

    bb25: {
        StorageDead(_69);
        StorageLive(_70);
        StorageLive(_71);
        _71 = &(*_4);
        _70 = <anchor_lang::prelude::AccountInfo<'_> as anchor_lang::ToAccountInfo<'_>>::to_account_info(move _71) -> [return: bb26, unwind: bb33];
    }

    bb26: {
        StorageDead(_71);
        _81 = const true;
        _65 = anchor_spl::token_2022::Transfer::<'_> { from: move _66, to: move _68, authority: move _70 };
        StorageDead(_70);
        StorageDead(_68);
        StorageDead(_66);
        StorageLive(_72);
        StorageLive(_73);
        _73 = &(*_1);
        _72 = <anchor_lang::prelude::Interface<'_, TokenInterface> as anchor_lang::ToAccountInfo<'_>>::to_account_info(move _73) -> [return: bb27, unwind: bb40];
    }

    bb27: {
        StorageDead(_73);
        StorageLive(_74);
        StorageLive(_75);
        _75 = move _72;
        StorageLive(_76);
        _81 = const false;
        _76 = move _65;
        StorageLive(_77);
        StorageLive(_78);
        _78 = &(*_12);
        _77 = move _78 as &[&[&[u8]]] (PointerCoercion(Unsize));
        StorageDead(_78);
        _74 = anchor_lang::context::CpiContext::<'_, '_, '_, '_, anchor_spl::token_2022::Transfer<'_>>::new_with_signer(move _75, move _76, move _77) -> [return: bb28, unwind: bb40];
    }

    bb28: {
        StorageDead(_77);
        StorageDead(_76);
        StorageDead(_75);
        StorageLive(_79);
        _79 = move _74;
        StorageLive(_80);
        _80 = _6;
        _0 = anchor_spl::token_2022::transfer(move _79, move _80) -> [return: bb29, unwind: bb40];
    }

    bb29: {
        StorageDead(_80);
        StorageDead(_79);
        StorageDead(_74);
        StorageDead(_72);
        _81 = const false;
        StorageDead(_65);
        goto -> bb30;
    }

    bb30: {
        StorageDead(_15);
        StorageDead(_13);
        StorageDead(_12);
        StorageDead(_9);
        goto -> bb32;
    }

    bb31: {
        _84 = const false;
        StorageDead(_31);
        StorageDead(_19);
        StorageDead(_15);
        StorageDead(_13);
        StorageDead(_12);
        StorageDead(_9);
        goto -> bb32;
    }

    bb32: {
        return;
    }

    bb33 (cleanup): {
        drop(_68) -> [return: bb34, unwind terminate(cleanup)];
    }

    bb34 (cleanup): {
        drop(_66) -> [return: bb38, unwind terminate(cleanup)];
    }

    bb35 (cleanup): {
        drop(_47) -> [return: bb36, unwind terminate(cleanup)];
    }

    bb36 (cleanup): {
        drop(_46) -> [return: bb37, unwind terminate(cleanup)];
    }

    bb37 (cleanup): {
        drop(_44) -> [return: bb47, unwind terminate(cleanup)];
    }

    bb38 (cleanup): {
        resume;
    }

    bb39 (cleanup): {
        drop(_65) -> [return: bb38, unwind terminate(cleanup)];
    }

    bb40 (cleanup): {
        switchInt(_81) -> [0: bb38, otherwise: bb39];
    }

    bb41 (cleanup): {
        drop(_58) -> [return: bb44, unwind terminate(cleanup)];
    }

    bb42 (cleanup): {
        switchInt(_82) -> [0: bb44, otherwise: bb41];
    }

    bb43 (cleanup): {
        drop(_43) -> [return: bb47, unwind terminate(cleanup)];
    }

    bb44 (cleanup): {
        switchInt(_83) -> [0: bb47, otherwise: bb43];
    }

    bb45 (cleanup): {
        _89 = discriminant(_34);
        goto -> bb47;
    }

    bb46 (cleanup): {
        drop(_31) -> [return: bb38, unwind terminate(cleanup)];
    }

    bb47 (cleanup): {
        switchInt(_84) -> [0: bb38, otherwise: bb46];
    }
}
