digraph Mir_0_4561 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn validate_post_only_order(_1: &amp;ReErased state::user::Order, _2: &amp;ReErased state::perp_market::PerpMarket, _3: std::option::Option&lt;i64&gt;, _4: u64) -&gt; std::result::Result&lt;(), error::ErrorCode&gt;<br align="left"/>let _5: ();<br align="left"/>let mut _6: bool;<br align="left"/>let mut _7: &amp;ReErased state::user::Order;<br align="left"/>let mut _8: !;<br align="left"/>let mut _9: ();<br align="left"/>let _10: ();<br align="left"/>let mut _11: bool;<br align="left"/>let mut _12: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _13: state::paused_operations::PerpOperation;<br align="left"/>let mut _14: !;<br align="left"/>let mut _15: ();<br align="left"/>let _16: u64;<br align="left"/>let mut _17: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _18: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _19: &amp;ReErased state::user::Order;<br align="left"/>let mut _20: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _21: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _22: u64;<br align="left"/>let mut _23: u64;<br align="left"/>let mut _24: bool;<br align="left"/>let mut _25: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _26: std::option::Option&lt;state::protected_maker_mode_config::ProtectedMakerParams&gt;;<br align="left"/>let mut _27: isize;<br align="left"/>let _28: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _29: !;<br align="left"/>let mut _30: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _31: u64;<br align="left"/>let _32: u64;<br align="left"/>let mut _33: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _34: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _35: &amp;ReErased state::user::Order;<br align="left"/>let mut _36: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _37: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _38: u64;<br align="left"/>let mut _39: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _40: isize;<br align="left"/>let _41: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _42: !;<br align="left"/>let mut _43: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _44: u64;<br align="left"/>let _45: ();<br align="left"/>let mut _46: bool;<br align="left"/>let mut _47: u64;<br align="left"/>let _48: ();<br align="left"/>let mut _49: &amp;ReErased str;<br align="left"/>let _50: &amp;ReErased str;<br align="left"/>let mut _51: &amp;ReErased std::string::String;<br align="left"/>let _52: &amp;ReErased std::string::String;<br align="left"/>let _53: std::string::String;<br align="left"/>let _54: std::string::String;<br align="left"/>let mut _55: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _56: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _57: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _58: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _59: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _60: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _61: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _62: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _63: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _64: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _65: &amp;ReErased u64;<br align="left"/>let _66: &amp;ReErased u64;<br align="left"/>let _67: ();<br align="left"/>let mut _68: bool;<br align="left"/>let mut _69: u64;<br align="left"/>let mut _70: u64;<br align="left"/>let _71: ();<br align="left"/>let mut _72: &amp;ReErased str;<br align="left"/>let _73: &amp;ReErased str;<br align="left"/>let mut _74: &amp;ReErased std::string::String;<br align="left"/>let _75: &amp;ReErased std::string::String;<br align="left"/>let _76: std::string::String;<br align="left"/>let _77: std::string::String;<br align="left"/>let mut _78: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _79: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _80: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _81: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _82: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _83: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _84: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _85: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _86: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _87: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _88: &amp;ReErased u64;<br align="left"/>let _89: &amp;ReErased u64;<br align="left"/>let mut _90: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _91: &amp;ReErased u64;<br align="left"/>let _92: &amp;ReErased u64;<br align="left"/>let mut _93: bool;<br align="left"/>let _94: ();<br align="left"/>let mut _95: isize;<br align="left"/>let _96: i64;<br align="left"/>let mut _97: bool;<br align="left"/>let mut _98: i64;<br align="left"/>let mut _99: i64;<br align="left"/>let mut _100: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _101: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _102: u64;<br align="left"/>let mut _103: isize;<br align="left"/>let _104: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _105: !;<br align="left"/>let mut _106: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _107: i64;<br align="left"/>let mut _108: bool;<br align="left"/>let mut _109: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let mut _110: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let _111: controller::position::PositionDirection;<br align="left"/>let mut _112: bool;<br align="left"/>let mut _113: i64;<br align="left"/>let mut _114: i64;<br align="left"/>let mut _115: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _116: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _117: u64;<br align="left"/>let mut _118: isize;<br align="left"/>let _119: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _120: !;<br align="left"/>let mut _121: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _122: i64;<br align="left"/>let mut _123: bool;<br align="left"/>let mut _124: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let mut _125: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let _126: controller::position::PositionDirection;<br align="left"/>let mut _127: bool;<br align="left"/>let mut _128: !;<br align="left"/>let mut _129: error::ErrorCode;<br align="left"/>let mut _130: ();<br align="left"/>let mut _131: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let mut _132: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let mut _133: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _134: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>debug order =&gt; _1;<br align="left"/>debug market =&gt; _2;<br align="left"/>debug valid_oracle_price =&gt; _3;<br align="left"/>debug slot =&gt; _4;<br align="left"/>debug limit_price =&gt; _16;<br align="left"/>debug residual =&gt; _28;<br align="left"/>debug val =&gt; _31;<br align="left"/>debug base_asset_amount_market_can_fill =&gt; _32;<br align="left"/>debug residual =&gt; _41;<br align="left"/>debug val =&gt; _44;<br align="left"/>debug res =&gt; _54;<br align="left"/>debug res =&gt; _77;<br align="left"/>debug invalid =&gt; _93;<br align="left"/>debug valid_oracle_price =&gt; _96;<br align="left"/>debug residual =&gt; _104;<br align="left"/>debug val =&gt; _107;<br align="left"/>debug residual =&gt; _119;<br align="left"/>debug val =&gt; _122;<br align="left"/>>;
    bb0__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = &amp;(*_1)<br/></td></tr><tr><td align="left">_6 = Order::is_jit_maker(move _7)</td></tr></table>>];
    bb1__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">switchInt(move _6)</td></tr></table>>];
    bb2__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageLive(_9)<br/>_9 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _9)<br/>StorageDead(_9)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb3__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>_5 = const ()<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = &amp;(*_2)<br/>StorageLive(_13)<br/>_13 = PerpOperation::AmmFill<br/></td></tr><tr><td align="left">_11 = PerpMarket::is_operation_paused(move _12, move _13)</td></tr></table>>];
    bb4__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">switchInt(move _11)</td></tr></table>>];
    bb5__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_12)<br/>StorageLive(_15)<br/>_15 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _15)<br/>StorageDead(_15)<br/>StorageDead(_11)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb6__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_12)<br/>_10 = const ()<br/>StorageDead(_11)<br/>StorageDead(_10)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_19 = &amp;(*_1)<br/>StorageLive(_20)<br/>_20 = _3<br/>StorageLive(_21)<br/>_21 = Option::&lt;u64&gt;::None<br/>StorageLive(_22)<br/>_22 = _4<br/>StorageLive(_23)<br/>_23 = (((*_2).1: state::perp_market::AMM).53: u64)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>_25 = &amp;(*_2)<br/></td></tr><tr><td align="left">_24 = PerpMarket::is_prediction_market(move _25)</td></tr></table>>];
    bb7__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageLive(_26)<br/>_26 = Option::&lt;ProtectedMakerParams&gt;::None<br/></td></tr><tr><td align="left">_18 = Order::force_get_limit_price(move _19, move _20, move _21, move _22, move _23, move _24, move _26)</td></tr></table>>];
    bb8__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">_17 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _18)</td></tr></table>>];
    bb9__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>_27 = discriminant(_17)<br/></td></tr><tr><td align="left">switchInt(move _27)</td></tr></table>>];
    bb10__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_31)<br/>_31 = ((_17 as Continue).0: u64)<br/>_16 = _31<br/>StorageDead(_31)<br/>StorageDead(_17)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>_35 = &amp;(*_1)<br/>StorageLive(_36)<br/>_36 = &amp;(*_2)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>_38 = _16<br/>_37 = Option::&lt;u64&gt;::Some(move _38)<br/>StorageDead(_38)<br/>StorageLive(_39)<br/>_39 = Option::&lt;i64&gt;::None<br/></td></tr><tr><td align="left">_34 = calculate_base_asset_amount_to_fill_up_to_limit_price(move _35, move _36, move _37, move _39)</td></tr></table>>];
    bb11__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb12__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_28)<br/>_28 = ((_17 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_30)<br/>_30 = _28<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _30)</td></tr></table>>];
    bb13__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_28)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_37)<br/>StorageDead(_36)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">_33 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _34)</td></tr></table>>];
    bb15__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>_40 = discriminant(_33)<br/></td></tr><tr><td align="left">switchInt(move _40)</td></tr></table>>];
    bb16__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_44)<br/>_44 = ((_33 as Continue).0: u64)<br/>_32 = _44<br/>StorageDead(_44)<br/>StorageDead(_33)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>_47 = _32<br/>_46 = Ne(move _47, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _46)</td></tr></table>>];
    bb17__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_41)<br/>_41 = ((_33 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_43)<br/>_43 = _41<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _43)</td></tr></table>>];
    bb18__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_41)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>_134 = const _<br/>_58 = &amp;(*_134)<br/>_57 = &amp;(*_58)<br/>_56 = move _57 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_57)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>_66 = &amp;_32<br/>_65 = &amp;(*_66)<br/></td></tr><tr><td align="left">_64 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _65)</td></tr></table>>];
    bb20__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>_45 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>_63 = [move _64]<br/>StorageDead(_64)<br/>_62 = &amp;_63<br/>_61 = &amp;(*_62)<br/>_60 = move _61 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">_55 = Arguments::&lt;'_&gt;::new_v1(move _56, move _60)</td></tr></table>>];
    bb22__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageDead(_56)<br/></td></tr><tr><td align="left">_54 = format(move _55)</td></tr></table>>];
    bb23__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_66)<br/>StorageDead(_63)<br/>StorageDead(_62)<br/>StorageDead(_58)<br/>_53 = move _54<br/>StorageDead(_54)<br/>_52 = &amp;_53<br/>_51 = &amp;(*_52)<br/></td></tr><tr><td align="left">_50 = &lt;String as Deref&gt;::deref(move _51)</td></tr></table>>];
    bb24__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">_49 = &amp;(*_50)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">_48 = solana_program::log::sol_log(move _49)</td></tr></table>>];
    bb25__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/></td></tr><tr><td align="left">drop(_53)</td></tr></table>>];
    bb26__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_52)<br/>StorageDead(_50)<br/>StorageDead(_48)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>_69 = (((*_2).1: state::perp_market::AMM).47: u64)<br/>StorageLive(_70)<br/>_70 = _4<br/>_68 = Ne(move _69, move _70)<br/></td></tr><tr><td align="left">switchInt(move _68)</td></tr></table>>];
    bb27__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_69)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>_133 = const _<br/>_81 = &amp;(*_133)<br/>_80 = &amp;(*_81)<br/>_79 = move _80 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_80)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>_89 = &amp;(((*_2).1: state::perp_market::AMM).47: u64)<br/>_88 = &amp;(*_89)<br/></td></tr><tr><td align="left">_87 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _88)</td></tr></table>>];
    bb28__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>_92 = &amp;_4<br/>_91 = &amp;(*_92)<br/></td></tr><tr><td align="left">_90 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _91)</td></tr></table>>];
    bb29__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/>_86 = [move _87, move _90]<br/>StorageDead(_90)<br/>StorageDead(_87)<br/>_85 = &amp;_86<br/>_84 = &amp;(*_85)<br/>_83 = move _84 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_84)<br/></td></tr><tr><td align="left">_78 = Arguments::&lt;'_&gt;::new_v1(move _79, move _83)</td></tr></table>>];
    bb30__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>StorageDead(_79)<br/></td></tr><tr><td align="left">_77 = format(move _78)</td></tr></table>>];
    bb31__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>StorageDead(_92)<br/>StorageDead(_89)<br/>StorageDead(_86)<br/>StorageDead(_85)<br/>StorageDead(_81)<br/>_76 = move _77<br/>StorageDead(_77)<br/>_75 = &amp;_76<br/>_74 = &amp;(*_75)<br/></td></tr><tr><td align="left">_73 = &lt;String as Deref&gt;::deref(move _74)</td></tr></table>>];
    bb32__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">_72 = &amp;(*_73)<br/>StorageDead(_74)<br/></td></tr><tr><td align="left">_71 = solana_program::log::sol_log(move _72)</td></tr></table>>];
    bb33__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/></td></tr><tr><td align="left">drop(_76)</td></tr></table>>];
    bb34__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>StorageDead(_75)<br/>StorageDead(_73)<br/>StorageDead(_71)<br/>_67 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_69)<br/>_67 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>StorageDead(_67)<br/>StorageLive(_93)<br/>_93 = const true<br/>StorageLive(_94)<br/>_95 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _95)</td></tr></table>>];
    bb37__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_96)<br/>_96 = ((_3 as Some).0: i64)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>_98 = _96<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>_102 = _16<br/></td></tr><tr><td align="left">_101 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _102)</td></tr></table>>];
    bb38__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/></td></tr><tr><td align="left">_100 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _101)</td></tr></table>>];
    bb39__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/>_103 = discriminant(_100)<br/></td></tr><tr><td align="left">switchInt(move _103)</td></tr></table>>];
    bb40__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageLive(_107)<br/>_107 = ((_100 as Continue).0: i64)<br/>_99 = _107<br/>StorageDead(_107)<br/>_97 = Gt(move _98, move _99)<br/></td></tr><tr><td align="left">switchInt(move _97)</td></tr></table>>];
    bb41__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageLive(_104)<br/>_104 = ((_100 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_106)<br/>_106 = _104<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _106)</td></tr></table>>];
    bb42__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/>StorageDead(_104)<br/>StorageDead(_100)<br/>StorageDead(_99)<br/>StorageDead(_98)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>StorageDead(_99)<br/>StorageDead(_98)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>_109 = &amp;((*_1).17: controller::position::PositionDirection)<br/>StorageLive(_110)<br/>_132 = const _<br/>_110 = &amp;(*_132)<br/></td></tr><tr><td align="left">_108 = &lt;controller::position::PositionDirection as PartialEq&gt;::eq(move _109, move _110)</td></tr></table>>];
    bb44__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>StorageDead(_99)<br/>StorageDead(_98)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left">switchInt(move _108)</td></tr></table>>];
    bb46__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/>StorageDead(_109)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/>StorageDead(_109)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageLive(_112)<br/>StorageLive(_113)<br/>_113 = _96<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>_117 = _16<br/></td></tr><tr><td align="left">_116 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _117)</td></tr></table>>];
    bb49__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/></td></tr><tr><td align="left">_115 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _116)</td></tr></table>>];
    bb50__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_116)<br/>_118 = discriminant(_115)<br/></td></tr><tr><td align="left">switchInt(move _118)</td></tr></table>>];
    bb51__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageLive(_122)<br/>_122 = ((_115 as Continue).0: i64)<br/>_114 = _122<br/>StorageDead(_122)<br/>_112 = Lt(move _113, move _114)<br/></td></tr><tr><td align="left">switchInt(move _112)</td></tr></table>>];
    bb52__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageLive(_119)<br/>_119 = ((_115 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_121)<br/>_121 = _119<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _121)</td></tr></table>>];
    bb53__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_121)<br/>StorageDead(_119)<br/>StorageDead(_115)<br/>StorageDead(_114)<br/>StorageDead(_113)<br/>StorageDead(_112)<br/>StorageDead(_108)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_115)<br/>StorageDead(_114)<br/>StorageDead(_113)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>_124 = &amp;((*_1).17: controller::position::PositionDirection)<br/>StorageLive(_125)<br/>_131 = const _<br/>_125 = &amp;(*_131)<br/></td></tr><tr><td align="left">_123 = &lt;controller::position::PositionDirection as PartialEq&gt;::eq(move _124, move _125)</td></tr></table>>];
    bb55__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_115)<br/>StorageDead(_114)<br/>StorageDead(_113)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb56__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left">switchInt(move _123)</td></tr></table>>];
    bb57__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/>StorageDead(_124)<br/>_93 = const false<br/>_94 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb58__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/>StorageDead(_124)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">_94 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb60__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/>StorageDead(_112)<br/>StorageDead(_108)<br/>StorageDead(_97)<br/>StorageDead(_96)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb61__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">_94 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/>StorageLive(_127)<br/>_127 = _93<br/></td></tr><tr><td align="left">switchInt(move _127)</td></tr></table>>];
    bb63__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageLive(_129)<br/>_129 = error::ErrorCode::PlacePostOnlyLimitFailure<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _129)<br/>StorageDead(_129)<br/>StorageDead(_127)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb64__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">_45 = const ()<br/>StorageDead(_127)<br/>StorageDead(_93)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb65__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_45)<br/>StorageLive(_130)<br/>_130 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _130)<br/>StorageDead(_130)<br/>StorageDead(_32)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb66__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>StorageDead(_96)<br/>StorageDead(_94)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb67__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageDead(_46)<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb69__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb70__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left">return</td></tr></table>>];
    bb71__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">71 (cleanup)</td></tr><tr><td align="left">drop(_76)</td></tr></table>>];
    bb72__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">72 (cleanup)</td></tr><tr><td align="left">drop(_53)</td></tr></table>>];
    bb73__0_4561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">73 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_4561 -> bb1__0_4561 [label="return"];
    bb1__0_4561 -> bb3__0_4561 [label="0"];
    bb1__0_4561 -> bb2__0_4561 [label="otherwise"];
    bb2__0_4561 -> bb70__0_4561 [label=""];
    bb3__0_4561 -> bb4__0_4561 [label="return"];
    bb4__0_4561 -> bb6__0_4561 [label="0"];
    bb4__0_4561 -> bb5__0_4561 [label="otherwise"];
    bb5__0_4561 -> bb70__0_4561 [label=""];
    bb6__0_4561 -> bb7__0_4561 [label="return"];
    bb7__0_4561 -> bb8__0_4561 [label="return"];
    bb8__0_4561 -> bb9__0_4561 [label="return"];
    bb9__0_4561 -> bb10__0_4561 [label="0"];
    bb9__0_4561 -> bb12__0_4561 [label="1"];
    bb9__0_4561 -> bb11__0_4561 [label="otherwise"];
    bb10__0_4561 -> bb14__0_4561 [label="return"];
    bb12__0_4561 -> bb13__0_4561 [label="return"];
    bb13__0_4561 -> bb69__0_4561 [label=""];
    bb14__0_4561 -> bb15__0_4561 [label="return"];
    bb15__0_4561 -> bb16__0_4561 [label="0"];
    bb15__0_4561 -> bb17__0_4561 [label="1"];
    bb15__0_4561 -> bb11__0_4561 [label="otherwise"];
    bb16__0_4561 -> bb20__0_4561 [label="0"];
    bb16__0_4561 -> bb19__0_4561 [label="otherwise"];
    bb17__0_4561 -> bb18__0_4561 [label="return"];
    bb18__0_4561 -> bb68__0_4561 [label=""];
    bb19__0_4561 -> bb21__0_4561 [label="return"];
    bb20__0_4561 -> bb65__0_4561 [label=""];
    bb21__0_4561 -> bb22__0_4561 [label="return"];
    bb22__0_4561 -> bb23__0_4561 [label="return"];
    bb23__0_4561 -> bb24__0_4561 [label="return"];
    bb23__0_4561 -> bb72__0_4561 [label="unwind"];
    bb24__0_4561 -> bb25__0_4561 [label="return"];
    bb24__0_4561 -> bb72__0_4561 [label="unwind"];
    bb25__0_4561 -> bb26__0_4561 [label="return"];
    bb25__0_4561 -> bb73__0_4561 [label="unwind"];
    bb26__0_4561 -> bb35__0_4561 [label="0"];
    bb26__0_4561 -> bb27__0_4561 [label="otherwise"];
    bb27__0_4561 -> bb28__0_4561 [label="return"];
    bb28__0_4561 -> bb29__0_4561 [label="return"];
    bb29__0_4561 -> bb30__0_4561 [label="return"];
    bb30__0_4561 -> bb31__0_4561 [label="return"];
    bb31__0_4561 -> bb32__0_4561 [label="return"];
    bb31__0_4561 -> bb71__0_4561 [label="unwind"];
    bb32__0_4561 -> bb33__0_4561 [label="return"];
    bb32__0_4561 -> bb71__0_4561 [label="unwind"];
    bb33__0_4561 -> bb34__0_4561 [label="return"];
    bb33__0_4561 -> bb73__0_4561 [label="unwind"];
    bb34__0_4561 -> bb36__0_4561 [label=""];
    bb35__0_4561 -> bb36__0_4561 [label=""];
    bb36__0_4561 -> bb37__0_4561 [label="1"];
    bb36__0_4561 -> bb61__0_4561 [label="otherwise"];
    bb37__0_4561 -> bb38__0_4561 [label="return"];
    bb38__0_4561 -> bb39__0_4561 [label="return"];
    bb39__0_4561 -> bb40__0_4561 [label="0"];
    bb39__0_4561 -> bb41__0_4561 [label="1"];
    bb39__0_4561 -> bb11__0_4561 [label="otherwise"];
    bb40__0_4561 -> bb44__0_4561 [label="0"];
    bb40__0_4561 -> bb43__0_4561 [label="otherwise"];
    bb41__0_4561 -> bb42__0_4561 [label="return"];
    bb42__0_4561 -> bb66__0_4561 [label=""];
    bb43__0_4561 -> bb45__0_4561 [label="return"];
    bb44__0_4561 -> bb48__0_4561 [label=""];
    bb45__0_4561 -> bb47__0_4561 [label="0"];
    bb45__0_4561 -> bb46__0_4561 [label="otherwise"];
    bb46__0_4561 -> bb57__0_4561 [label=""];
    bb47__0_4561 -> bb48__0_4561 [label=""];
    bb48__0_4561 -> bb49__0_4561 [label="return"];
    bb49__0_4561 -> bb50__0_4561 [label="return"];
    bb50__0_4561 -> bb51__0_4561 [label="0"];
    bb50__0_4561 -> bb52__0_4561 [label="1"];
    bb50__0_4561 -> bb11__0_4561 [label="otherwise"];
    bb51__0_4561 -> bb55__0_4561 [label="0"];
    bb51__0_4561 -> bb54__0_4561 [label="otherwise"];
    bb52__0_4561 -> bb53__0_4561 [label="return"];
    bb53__0_4561 -> bb66__0_4561 [label=""];
    bb54__0_4561 -> bb56__0_4561 [label="return"];
    bb55__0_4561 -> bb59__0_4561 [label=""];
    bb56__0_4561 -> bb58__0_4561 [label="0"];
    bb56__0_4561 -> bb57__0_4561 [label="otherwise"];
    bb57__0_4561 -> bb60__0_4561 [label=""];
    bb58__0_4561 -> bb59__0_4561 [label=""];
    bb59__0_4561 -> bb60__0_4561 [label=""];
    bb60__0_4561 -> bb62__0_4561 [label=""];
    bb61__0_4561 -> bb62__0_4561 [label=""];
    bb62__0_4561 -> bb64__0_4561 [label="0"];
    bb62__0_4561 -> bb63__0_4561 [label="otherwise"];
    bb63__0_4561 -> bb67__0_4561 [label=""];
    bb64__0_4561 -> bb65__0_4561 [label=""];
    bb65__0_4561 -> bb70__0_4561 [label=""];
    bb66__0_4561 -> bb67__0_4561 [label=""];
    bb67__0_4561 -> bb68__0_4561 [label=""];
    bb68__0_4561 -> bb69__0_4561 [label=""];
    bb69__0_4561 -> bb70__0_4561 [label=""];
    bb71__0_4561 -> bb73__0_4561 [label="return"];
    bb72__0_4561 -> bb73__0_4561 [label="return"];
}
