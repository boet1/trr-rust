digraph Mir_0_3812 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn PerpMarket::get_last_funding_basis(_1: &amp;ReErased state::perp_market::PerpMarket, _2: i64, _3: i64) -&gt; std::result::Result&lt;i64, error::ErrorCode&gt;<br align="left"/>let mut _4: bool;<br align="left"/>let mut _5: i64;<br align="left"/>let _6: i128;<br align="left"/>let mut _7: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _8: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _9: i128;<br align="left"/>let mut _10: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _11: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _12: i128;<br align="left"/>let mut _13: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _14: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _15: i128;<br align="left"/>let mut _16: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _17: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _18: i64;<br align="left"/>let mut _19: isize;<br align="left"/>let _20: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _21: !;<br align="left"/>let mut _22: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _23: i128;<br align="left"/>let mut _24: isize;<br align="left"/>let _25: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _26: !;<br align="left"/>let mut _27: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _28: i128;<br align="left"/>let mut _29: i128;<br align="left"/>let mut _30: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _31: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _32: i64;<br align="left"/>let mut _33: isize;<br align="left"/>let _34: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _35: !;<br align="left"/>let mut _36: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _37: i128;<br align="left"/>let mut _38: isize;<br align="left"/>let _39: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _40: !;<br align="left"/>let mut _41: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _42: i128;<br align="left"/>let mut _43: isize;<br align="left"/>let _44: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _45: !;<br align="left"/>let mut _46: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _47: i128;<br align="left"/>let _48: i128;<br align="left"/>let mut _49: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _50: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _51: i128;<br align="left"/>let mut _52: i128;<br align="left"/>let mut _53: isize;<br align="left"/>let _54: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _55: !;<br align="left"/>let mut _56: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _57: i128;<br align="left"/>let _58: i64;<br align="left"/>let mut _59: i64;<br align="left"/>let mut _60: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _61: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _62: i64;<br align="left"/>let mut _63: i64;<br align="left"/>let mut _64: isize;<br align="left"/>let _65: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _66: !;<br align="left"/>let mut _67: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _68: i64;<br align="left"/>let mut _69: i64;<br align="left"/>let _70: i128;<br align="left"/>let mut _71: i128;<br align="left"/>let mut _72: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _73: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _74: i128;<br align="left"/>let mut _75: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _76: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _77: i128;<br align="left"/>let mut _78: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _79: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _80: i128;<br align="left"/>let mut _81: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _82: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _83: i128;<br align="left"/>let mut _84: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _85: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _86: i64;<br align="left"/>let mut _87: isize;<br align="left"/>let _88: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _89: !;<br align="left"/>let mut _90: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _91: i128;<br align="left"/>let mut _92: i128;<br align="left"/>let mut _93: isize;<br align="left"/>let _94: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _95: !;<br align="left"/>let mut _96: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _97: i128;<br align="left"/>let mut _98: isize;<br align="left"/>let _99: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _100: !;<br align="left"/>let mut _101: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _102: i128;<br align="left"/>let mut _103: i128;<br align="left"/>let mut _104: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _105: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _106: i64;<br align="left"/>let mut _107: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _108: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _109: i64;<br align="left"/>let mut _110: i64;<br align="left"/>let mut _111: isize;<br align="left"/>let _112: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _113: !;<br align="left"/>let mut _114: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _115: i64;<br align="left"/>let mut _116: isize;<br align="left"/>let _117: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _118: !;<br align="left"/>let mut _119: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _120: i128;<br align="left"/>let mut _121: isize;<br align="left"/>let _122: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _123: !;<br align="left"/>let mut _124: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _125: i128;<br align="left"/>let mut _126: i128;<br align="left"/>let mut _127: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _128: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _129: i64;<br align="left"/>let mut _130: isize;<br align="left"/>let _131: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _132: !;<br align="left"/>let mut _133: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _134: i128;<br align="left"/>let mut _135: isize;<br align="left"/>let _136: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _137: !;<br align="left"/>let mut _138: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _139: i128;<br align="left"/>let mut _140: bool;<br align="left"/>let mut _141: bool;<br align="left"/>let mut _142: bool;<br align="left"/>let mut _143: bool;<br align="left"/>let mut _144: i128;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug oracle_price =&gt; _2;<br align="left"/>debug now =&gt; _3;<br align="left"/>debug last_funding_rate =&gt; _6;<br align="left"/>debug residual =&gt; _20;<br align="left"/>debug val =&gt; _23;<br align="left"/>debug residual =&gt; _25;<br align="left"/>debug val =&gt; _28;<br align="left"/>debug residual =&gt; _34;<br align="left"/>debug val =&gt; _37;<br align="left"/>debug residual =&gt; _39;<br align="left"/>debug val =&gt; _42;<br align="left"/>debug residual =&gt; _44;<br align="left"/>debug val =&gt; _47;<br align="left"/>debug last_funding_rate_pre_adj =&gt; _48;<br align="left"/>debug residual =&gt; _54;<br align="left"/>debug val =&gt; _57;<br align="left"/>debug time_left_until_funding_update =&gt; _58;<br align="left"/>debug residual =&gt; _65;<br align="left"/>debug val =&gt; _68;<br align="left"/>debug last_funding_basis =&gt; _70;<br align="left"/>debug residual =&gt; _88;<br align="left"/>debug val =&gt; _91;<br align="left"/>debug residual =&gt; _94;<br align="left"/>debug val =&gt; _97;<br align="left"/>debug residual =&gt; _99;<br align="left"/>debug val =&gt; _102;<br align="left"/>debug residual =&gt; _112;<br align="left"/>debug val =&gt; _115;<br align="left"/>debug residual =&gt; _117;<br align="left"/>debug val =&gt; _120;<br align="left"/>debug residual =&gt; _122;<br align="left"/>debug val =&gt; _125;<br align="left"/>debug residual =&gt; _131;<br align="left"/>debug val =&gt; _134;<br align="left"/>debug residual =&gt; _136;<br align="left"/>debug val =&gt; _139;<br align="left"/>>;
    bb0__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = (((*_1).1: state::perp_market::AMM).85: i64)<br/>_4 = Gt(move _5, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _4)</td></tr></table>>];
    bb1__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = (((*_1).1: state::perp_market::AMM).24: i64)<br/></td></tr><tr><td align="left">_17 = &lt;i64 as Cast&gt;::cast::&lt;i128&gt;(move _18)</td></tr></table>>];
    bb2__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/></td></tr><tr><td align="left">_16 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _17)</td></tr></table>>];
    bb3__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>_19 = discriminant(_16)<br/></td></tr><tr><td align="left">switchInt(move _19)</td></tr></table>>];
    bb4__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_23)<br/>_23 = ((_16 as Continue).0: i128)<br/>_15 = _23<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">_14 = &lt;i128 as SafeMath&gt;::safe_mul(move _15, const _)</td></tr></table>>];
    bb5__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_20)<br/>_20 = ((_16 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_22)<br/>_22 = _20<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _22)</td></tr></table>>];
    bb7__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_20)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/></td></tr><tr><td align="left">_13 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _14)</td></tr></table>>];
    bb9__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>_24 = discriminant(_13)<br/></td></tr><tr><td align="left">switchInt(move _24)</td></tr></table>>];
    bb10__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_28)<br/>_28 = ((_13 as Continue).0: i128)<br/>_12 = _28<br/>StorageDead(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>_32 = (((*_1).1: state::perp_market::AMM).85: i64)<br/></td></tr><tr><td align="left">_31 = &lt;i64 as Cast&gt;::cast::&lt;i128&gt;(move _32)</td></tr></table>>];
    bb11__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_25)<br/>_25 = ((_13 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_27)<br/>_27 = _25<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _27)</td></tr></table>>];
    bb12__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/></td></tr><tr><td align="left">_30 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _31)</td></tr></table>>];
    bb14__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>_33 = discriminant(_30)<br/></td></tr><tr><td align="left">switchInt(move _33)</td></tr></table>>];
    bb15__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_37)<br/>_37 = ((_30 as Continue).0: i128)<br/>_29 = _37<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">_11 = &lt;i128 as SafeMath&gt;::safe_div(move _12, move _29)</td></tr></table>>];
    bb16__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_34)<br/>_34 = ((_30 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_36)<br/>_36 = _34<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _36)</td></tr></table>>];
    bb17__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_34)<br/>StorageDead(_29)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">_10 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _11)</td></tr></table>>];
    bb19__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>_38 = discriminant(_10)<br/></td></tr><tr><td align="left">switchInt(move _38)</td></tr></table>>];
    bb20__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_42)<br/>_42 = ((_10 as Continue).0: i128)<br/>_9 = _42<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">_8 = &lt;i128 as SafeMath&gt;::safe_mul(move _9, const 24_i128)</td></tr></table>>];
    bb21__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_39)<br/>_39 = ((_10 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_41)<br/>_41 = _39<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _41)</td></tr></table>>];
    bb22__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _8)</td></tr></table>>];
    bb24__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_43 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _43)</td></tr></table>>];
    bb25__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>_47 = ((_7 as Continue).0: i128)<br/>_6 = _47<br/>StorageDead(_47)<br/>StorageDead(_30)<br/>StorageDead(_16)<br/>StorageDead(_13)<br/>StorageDead(_10)<br/>StorageDead(_7)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>_51 = _6<br/>StorageLive(_52)<br/>_52 = const _ as i128 (IntToInt)<br/></td></tr><tr><td align="left">_50 = &lt;i128 as SafeMath&gt;::safe_sub(move _51, move _52)</td></tr></table>>];
    bb26__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_44)<br/>_44 = ((_7 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_46)<br/>_46 = _44<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _46)</td></tr></table>>];
    bb27__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">_49 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _50)</td></tr></table>>];
    bb29__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>_53 = discriminant(_49)<br/></td></tr><tr><td align="left">switchInt(move _53)</td></tr></table>>];
    bb30__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_57)<br/>_57 = ((_49 as Continue).0: i128)<br/>_48 = _57<br/>StorageDead(_57)<br/>StorageDead(_49)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>_62 = _3<br/>StorageLive(_63)<br/>_63 = (((*_1).1: state::perp_market::AMM).50: i64)<br/></td></tr><tr><td align="left">_61 = &lt;i64 as SafeMath&gt;::safe_sub(move _62, move _63)</td></tr></table>>];
    bb31__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_54)<br/>_54 = ((_49 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_56)<br/>_56 = _54<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _56)</td></tr></table>>];
    bb32__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_54)<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">_60 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _61)</td></tr></table>>];
    bb34__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>_64 = discriminant(_60)<br/></td></tr><tr><td align="left">switchInt(move _64)</td></tr></table>>];
    bb35__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_68)<br/>_68 = ((_60 as Continue).0: i64)<br/>_59 = _68<br/>StorageDead(_68)<br/>StorageLive(_69)<br/>_69 = (((*_1).1: state::perp_market::AMM).51: i64)<br/></td></tr><tr><td align="left">_58 = &lt;i64 as Ord&gt;::min(move _59, move _69)</td></tr></table>>];
    bb36__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageLive(_65)<br/>_65 = ((_60 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_67)<br/>_67 = _65<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _67)</td></tr></table>>];
    bb37__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>StorageDead(_65)<br/>StorageDead(_59)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageDead(_59)<br/>StorageDead(_60)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>_86 = _2<br/></td></tr><tr><td align="left">_85 = &lt;i64 as Cast&gt;::cast::&lt;i128&gt;(move _86)</td></tr></table>>];
    bb39__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/></td></tr><tr><td align="left">_84 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _85)</td></tr></table>>];
    bb40__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>_87 = discriminant(_84)<br/></td></tr><tr><td align="left">switchInt(move _87)</td></tr></table>>];
    bb41__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageLive(_91)<br/>_91 = ((_84 as Continue).0: i128)<br/>_83 = _91<br/>StorageDead(_91)<br/>StorageLive(_92)<br/>_92 = _48<br/></td></tr><tr><td align="left">_82 = &lt;i128 as SafeMath&gt;::safe_mul(move _83, move _92)</td></tr></table>>];
    bb42__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageLive(_88)<br/>_88 = ((_84 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_90)<br/>_90 = _88<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _90)</td></tr></table>>];
    bb43__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>StorageDead(_88)<br/>StorageDead(_83)<br/>StorageDead(_82)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>StorageDead(_83)<br/></td></tr><tr><td align="left">_81 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _82)</td></tr></table>>];
    bb45__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>_93 = discriminant(_81)<br/></td></tr><tr><td align="left">switchInt(move _93)</td></tr></table>>];
    bb46__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageLive(_97)<br/>_97 = ((_81 as Continue).0: i128)<br/>_80 = _97<br/>StorageDead(_97)<br/></td></tr><tr><td align="left">_79 = &lt;i128 as SafeMath&gt;::safe_div(move _80, const _)</td></tr></table>>];
    bb47__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageLive(_94)<br/>_94 = ((_81 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_96)<br/>_96 = _94<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _96)</td></tr></table>>];
    bb48__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>StorageDead(_94)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/></td></tr><tr><td align="left">_78 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _79)</td></tr></table>>];
    bb50__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>_98 = discriminant(_78)<br/></td></tr><tr><td align="left">switchInt(move _98)</td></tr></table>>];
    bb51__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageLive(_102)<br/>_102 = ((_78 as Continue).0: i128)<br/>_77 = _102<br/>StorageDead(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>_109 = (((*_1).1: state::perp_market::AMM).51: i64)<br/>StorageLive(_110)<br/>_110 = _58<br/></td></tr><tr><td align="left">_108 = &lt;i64 as SafeMath&gt;::safe_sub(move _109, move _110)</td></tr></table>>];
    bb52__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageLive(_99)<br/>_99 = ((_78 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_101)<br/>_101 = _99<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _101)</td></tr></table>>];
    bb53__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/>StorageDead(_99)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/>StorageDead(_109)<br/></td></tr><tr><td align="left">_107 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _108)</td></tr></table>>];
    bb55__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/>_111 = discriminant(_107)<br/></td></tr><tr><td align="left">switchInt(move _111)</td></tr></table>>];
    bb56__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageLive(_115)<br/>_115 = ((_107 as Continue).0: i64)<br/>_106 = _115<br/>StorageDead(_115)<br/></td></tr><tr><td align="left">_105 = &lt;i64 as Cast&gt;::cast::&lt;i128&gt;(move _106)</td></tr></table>>];
    bb57__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageLive(_112)<br/>_112 = ((_107 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_114)<br/>_114 = _112<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _114)</td></tr></table>>];
    bb58__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/>StorageDead(_112)<br/>StorageDead(_106)<br/>StorageDead(_105)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/></td></tr><tr><td align="left">_104 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _105)</td></tr></table>>];
    bb60__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/>_116 = discriminant(_104)<br/></td></tr><tr><td align="left">switchInt(move _116)</td></tr></table>>];
    bb61__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageLive(_120)<br/>_120 = ((_104 as Continue).0: i128)<br/>_103 = _120<br/>StorageDead(_120)<br/></td></tr><tr><td align="left">_76 = &lt;i128 as SafeMath&gt;::safe_mul(move _77, move _103)</td></tr></table>>];
    bb62__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageLive(_117)<br/>_117 = ((_104 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_119)<br/>_119 = _117<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _119)</td></tr></table>>];
    bb63__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/>StorageDead(_117)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb64__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>StorageDead(_77)<br/></td></tr><tr><td align="left">_75 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _76)</td></tr></table>>];
    bb65__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>_121 = discriminant(_75)<br/></td></tr><tr><td align="left">switchInt(move _121)</td></tr></table>>];
    bb66__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageLive(_125)<br/>_125 = ((_75 as Continue).0: i128)<br/>_74 = _125<br/>StorageDead(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>_129 = (((*_1).1: state::perp_market::AMM).51: i64)<br/></td></tr><tr><td align="left">_128 = &lt;i64 as Cast&gt;::cast::&lt;i128&gt;(move _129)</td></tr></table>>];
    bb67__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageLive(_122)<br/>_122 = ((_75 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_124)<br/>_124 = _122<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _124)</td></tr></table>>];
    bb68__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_124)<br/>StorageDead(_122)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb69__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_129)<br/></td></tr><tr><td align="left">_127 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _128)</td></tr></table>>];
    bb70__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>_130 = discriminant(_127)<br/></td></tr><tr><td align="left">switchInt(move _130)</td></tr></table>>];
    bb71__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageLive(_134)<br/>_134 = ((_127 as Continue).0: i128)<br/>_126 = _134<br/>StorageDead(_134)<br/></td></tr><tr><td align="left">_73 = &lt;i128 as SafeMath&gt;::safe_div(move _74, move _126)</td></tr></table>>];
    bb72__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageLive(_131)<br/>_131 = ((_127 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_133)<br/>_133 = _131<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _133)</td></tr></table>>];
    bb73__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/>StorageDead(_131)<br/>StorageDead(_126)<br/>StorageDead(_74)<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb74__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/>StorageDead(_74)<br/></td></tr><tr><td align="left">_72 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _73)</td></tr></table>>];
    bb75__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>_135 = discriminant(_72)<br/></td></tr><tr><td align="left">switchInt(move _135)</td></tr></table>>];
    bb76__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageLive(_139)<br/>_139 = ((_72 as Continue).0: i128)<br/>_71 = _139<br/>StorageDead(_139)<br/>_140 = Eq(const _, const 0_i128)<br/></td></tr><tr><td align="left">assert(!move _140, &quot;attempt to divide `{}` by zero&quot;, _71)</td></tr></table>>];
    bb77__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageLive(_136)<br/>_136 = ((_72 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_138)<br/>_138 = _136<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _138)</td></tr></table>>];
    bb78__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/>StorageDead(_136)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb79__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">_141 = Eq(const _, const -1_i128)<br/>_142 = Eq(_71, const i128::MIN)<br/>_143 = BitAnd(move _141, move _142)<br/></td></tr><tr><td align="left">assert(!move _143, &quot;attempt to compute `{} / {}`, which would overflow&quot;, _71, const _)</td></tr></table>>];
    bb80__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">_70 = Div(move _71, const _)<br/>StorageDead(_71)<br/>StorageDead(_127)<br/>StorageDead(_107)<br/>StorageDead(_104)<br/>StorageDead(_84)<br/>StorageDead(_81)<br/>StorageDead(_78)<br/>StorageDead(_75)<br/>StorageDead(_72)<br/>StorageLive(_144)<br/>_144 = _70<br/></td></tr><tr><td align="left">_0 = &lt;i128 as Cast&gt;::cast::&lt;i64&gt;(move _144)</td></tr></table>>];
    bb81__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_144)<br/>StorageDead(_70)<br/>StorageDead(_58)<br/>StorageDead(_48)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb82__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_0 = std::result::Result::&lt;i64, error::ErrorCode&gt;::Ok(const 0_i64)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb83__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb84__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageDead(_127)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb85__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>StorageDead(_77)<br/>StorageDead(_76)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb86__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageDead(_73)<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb87__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>StorageDead(_104)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb88__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>StorageDead(_79)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb89__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>StorageDead(_76)<br/>StorageDead(_74)<br/>StorageDead(_73)<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb90__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>StorageDead(_81)<br/>StorageDead(_78)<br/>StorageDead(_75)<br/>StorageDead(_72)<br/>StorageDead(_70)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb91__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb92__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb93__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb94__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb95__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb96__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_13)<br/>StorageDead(_10)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb97__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb98__0_3812 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_3812 -> bb82__0_3812 [label="0"];
    bb0__0_3812 -> bb1__0_3812 [label="otherwise"];
    bb1__0_3812 -> bb2__0_3812 [label="return"];
    bb2__0_3812 -> bb3__0_3812 [label="return"];
    bb3__0_3812 -> bb4__0_3812 [label="0"];
    bb3__0_3812 -> bb6__0_3812 [label="1"];
    bb3__0_3812 -> bb5__0_3812 [label="otherwise"];
    bb4__0_3812 -> bb8__0_3812 [label="return"];
    bb6__0_3812 -> bb7__0_3812 [label="return"];
    bb7__0_3812 -> bb95__0_3812 [label=""];
    bb8__0_3812 -> bb9__0_3812 [label="return"];
    bb9__0_3812 -> bb10__0_3812 [label="0"];
    bb9__0_3812 -> bb11__0_3812 [label="1"];
    bb9__0_3812 -> bb5__0_3812 [label="otherwise"];
    bb10__0_3812 -> bb13__0_3812 [label="return"];
    bb11__0_3812 -> bb12__0_3812 [label="return"];
    bb12__0_3812 -> bb95__0_3812 [label=""];
    bb13__0_3812 -> bb14__0_3812 [label="return"];
    bb14__0_3812 -> bb15__0_3812 [label="0"];
    bb14__0_3812 -> bb16__0_3812 [label="1"];
    bb14__0_3812 -> bb5__0_3812 [label="otherwise"];
    bb15__0_3812 -> bb18__0_3812 [label="return"];
    bb16__0_3812 -> bb17__0_3812 [label="return"];
    bb17__0_3812 -> bb93__0_3812 [label=""];
    bb18__0_3812 -> bb19__0_3812 [label="return"];
    bb19__0_3812 -> bb20__0_3812 [label="0"];
    bb19__0_3812 -> bb21__0_3812 [label="1"];
    bb19__0_3812 -> bb5__0_3812 [label="otherwise"];
    bb20__0_3812 -> bb23__0_3812 [label="return"];
    bb21__0_3812 -> bb22__0_3812 [label="return"];
    bb22__0_3812 -> bb93__0_3812 [label=""];
    bb23__0_3812 -> bb24__0_3812 [label="return"];
    bb24__0_3812 -> bb25__0_3812 [label="0"];
    bb24__0_3812 -> bb26__0_3812 [label="1"];
    bb24__0_3812 -> bb5__0_3812 [label="otherwise"];
    bb25__0_3812 -> bb28__0_3812 [label="return"];
    bb26__0_3812 -> bb27__0_3812 [label="return"];
    bb27__0_3812 -> bb94__0_3812 [label=""];
    bb28__0_3812 -> bb29__0_3812 [label="return"];
    bb29__0_3812 -> bb30__0_3812 [label="0"];
    bb29__0_3812 -> bb31__0_3812 [label="1"];
    bb29__0_3812 -> bb5__0_3812 [label="otherwise"];
    bb30__0_3812 -> bb33__0_3812 [label="return"];
    bb31__0_3812 -> bb32__0_3812 [label="return"];
    bb32__0_3812 -> bb92__0_3812 [label=""];
    bb33__0_3812 -> bb34__0_3812 [label="return"];
    bb34__0_3812 -> bb35__0_3812 [label="0"];
    bb34__0_3812 -> bb36__0_3812 [label="1"];
    bb34__0_3812 -> bb5__0_3812 [label="otherwise"];
    bb35__0_3812 -> bb38__0_3812 [label="return"];
    bb36__0_3812 -> bb37__0_3812 [label="return"];
    bb37__0_3812 -> bb91__0_3812 [label=""];
    bb38__0_3812 -> bb39__0_3812 [label="return"];
    bb39__0_3812 -> bb40__0_3812 [label="return"];
    bb40__0_3812 -> bb41__0_3812 [label="0"];
    bb40__0_3812 -> bb42__0_3812 [label="1"];
    bb40__0_3812 -> bb5__0_3812 [label="otherwise"];
    bb41__0_3812 -> bb44__0_3812 [label="return"];
    bb42__0_3812 -> bb43__0_3812 [label="return"];
    bb43__0_3812 -> bb88__0_3812 [label=""];
    bb44__0_3812 -> bb45__0_3812 [label="return"];
    bb45__0_3812 -> bb46__0_3812 [label="0"];
    bb45__0_3812 -> bb47__0_3812 [label="1"];
    bb45__0_3812 -> bb5__0_3812 [label="otherwise"];
    bb46__0_3812 -> bb49__0_3812 [label="return"];
    bb47__0_3812 -> bb48__0_3812 [label="return"];
    bb48__0_3812 -> bb88__0_3812 [label=""];
    bb49__0_3812 -> bb50__0_3812 [label="return"];
    bb50__0_3812 -> bb51__0_3812 [label="0"];
    bb50__0_3812 -> bb52__0_3812 [label="1"];
    bb50__0_3812 -> bb5__0_3812 [label="otherwise"];
    bb51__0_3812 -> bb54__0_3812 [label="return"];
    bb52__0_3812 -> bb53__0_3812 [label="return"];
    bb53__0_3812 -> bb89__0_3812 [label=""];
    bb54__0_3812 -> bb55__0_3812 [label="return"];
    bb55__0_3812 -> bb56__0_3812 [label="0"];
    bb55__0_3812 -> bb57__0_3812 [label="1"];
    bb55__0_3812 -> bb5__0_3812 [label="otherwise"];
    bb56__0_3812 -> bb59__0_3812 [label="return"];
    bb57__0_3812 -> bb58__0_3812 [label="return"];
    bb58__0_3812 -> bb85__0_3812 [label=""];
    bb59__0_3812 -> bb60__0_3812 [label="return"];
    bb60__0_3812 -> bb61__0_3812 [label="0"];
    bb60__0_3812 -> bb62__0_3812 [label="1"];
    bb60__0_3812 -> bb5__0_3812 [label="otherwise"];
    bb61__0_3812 -> bb64__0_3812 [label="return"];
    bb62__0_3812 -> bb63__0_3812 [label="return"];
    bb63__0_3812 -> bb85__0_3812 [label=""];
    bb64__0_3812 -> bb65__0_3812 [label="return"];
    bb65__0_3812 -> bb66__0_3812 [label="0"];
    bb65__0_3812 -> bb67__0_3812 [label="1"];
    bb65__0_3812 -> bb5__0_3812 [label="otherwise"];
    bb66__0_3812 -> bb69__0_3812 [label="return"];
    bb67__0_3812 -> bb68__0_3812 [label="return"];
    bb68__0_3812 -> bb86__0_3812 [label=""];
    bb69__0_3812 -> bb70__0_3812 [label="return"];
    bb70__0_3812 -> bb71__0_3812 [label="0"];
    bb70__0_3812 -> bb72__0_3812 [label="1"];
    bb70__0_3812 -> bb5__0_3812 [label="otherwise"];
    bb71__0_3812 -> bb74__0_3812 [label="return"];
    bb72__0_3812 -> bb73__0_3812 [label="return"];
    bb73__0_3812 -> bb84__0_3812 [label=""];
    bb74__0_3812 -> bb75__0_3812 [label="return"];
    bb75__0_3812 -> bb76__0_3812 [label="0"];
    bb75__0_3812 -> bb77__0_3812 [label="1"];
    bb75__0_3812 -> bb5__0_3812 [label="otherwise"];
    bb76__0_3812 -> bb79__0_3812 [label="success"];
    bb77__0_3812 -> bb78__0_3812 [label="return"];
    bb78__0_3812 -> bb84__0_3812 [label=""];
    bb79__0_3812 -> bb80__0_3812 [label="success"];
    bb80__0_3812 -> bb81__0_3812 [label="return"];
    bb81__0_3812 -> bb83__0_3812 [label=""];
    bb82__0_3812 -> bb83__0_3812 [label=""];
    bb83__0_3812 -> bb98__0_3812 [label=""];
    bb84__0_3812 -> bb87__0_3812 [label=""];
    bb85__0_3812 -> bb86__0_3812 [label=""];
    bb86__0_3812 -> bb87__0_3812 [label=""];
    bb87__0_3812 -> bb90__0_3812 [label=""];
    bb88__0_3812 -> bb89__0_3812 [label=""];
    bb89__0_3812 -> bb90__0_3812 [label=""];
    bb90__0_3812 -> bb91__0_3812 [label=""];
    bb91__0_3812 -> bb92__0_3812 [label=""];
    bb92__0_3812 -> bb97__0_3812 [label=""];
    bb93__0_3812 -> bb94__0_3812 [label=""];
    bb94__0_3812 -> bb96__0_3812 [label=""];
    bb95__0_3812 -> bb96__0_3812 [label=""];
    bb96__0_3812 -> bb97__0_3812 [label=""];
    bb97__0_3812 -> bb98__0_3812 [label=""];
}
