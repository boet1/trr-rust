// MIR for `instructions::pyth_lazer_oracle::<impl at programs/drift/src/instructions/pyth_lazer_oracle.rs:125:10: 125:18>::fmt` after PreCodegen

fn instructions::pyth_lazer_oracle::<impl at programs/drift/src/instructions/pyth_lazer_oracle.rs:125:10: 125:18>::fmt(_1: &UpdatePythLazerOracleBumps, _2: &mut Formatter<'_>) -> std::result::Result<(), std::fmt::Error> {
    debug self => _1;
    debug f => _2;
    let mut _0: std::result::Result<(), std::fmt::Error>;
    let mut _3: &mut std::fmt::Formatter<'_>;
    let mut _4: &str;
    let _5: &str;

    bb0: {
        StorageLive(_3);
        _3 = &mut (*_2);
        StorageLive(_4);
        StorageLive(_5);
        _5 = const "UpdatePythLazerOracleBumps";
        _4 = &(*_5);
        _0 = Formatter::<'_>::write_str(move _3, move _4) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_4);
        StorageDead(_3);
        StorageDead(_5);
        return;
    }
}
