digraph Mir_0_532 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn get_referrer(_1: &amp;ReErased std::option::Option&lt;(anchor_lang::prelude::Pubkey, anchor_lang::prelude::Pubkey)&gt;, _2: &amp;ReErased state::user_map::UserMap&lt;ReErased&gt;, _3: &amp;ReErased state::user_map::UserStatsMap&lt;ReErased&gt;, _4: std::option::Option&lt;&amp;ReErased state::user::User&gt;) -&gt; std::result::Result&lt;(std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;, std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;), error::ErrorCode&gt;<br align="left"/>let _5: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _6: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _7: &amp;ReErased (anchor_lang::prelude::Pubkey, anchor_lang::prelude::Pubkey);<br align="left"/>let mut _8: isize;<br align="left"/>let _9: &amp;ReErased (anchor_lang::prelude::Pubkey, anchor_lang::prelude::Pubkey);<br align="left"/>let mut _10: !;<br align="left"/>let mut _11: (std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;, std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;);<br align="left"/>let mut _12: std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _13: std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;;<br align="left"/>let _14: ();<br align="left"/>let mut _15: isize;<br align="left"/>let _16: &amp;ReErased state::user::User;<br align="left"/>let mut _17: bool;<br align="left"/>let mut _18: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _19: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _20: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _21: !;<br align="left"/>let mut _22: (std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;, std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;);<br align="left"/>let mut _23: std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _24: std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;;<br align="left"/>let _25: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _26: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _27: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _28: &amp;ReErased state::user_map::UserMap&lt;ReErased&gt;;<br align="left"/>let mut _29: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _30: isize;<br align="left"/>let _31: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _32: !;<br align="left"/>let mut _33: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _34: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _35: std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _36: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;;<br align="left"/>let mut _37: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _38: &amp;ReErased state::user_map::UserStatsMap&lt;ReErased&gt;;<br align="left"/>let mut _39: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _40: isize;<br align="left"/>let _41: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _42: !;<br align="left"/>let mut _43: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _44: std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _45: (std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;, std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;);<br align="left"/>let mut _46: std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _47: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _48: std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;;<br align="left"/>let mut _49: std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _50: isize;<br align="left"/>let mut _51: isize;<br align="left"/>let mut _52: isize;<br align="left"/>let mut _53: isize;<br align="left"/>let mut _54: isize;<br align="left"/>let mut _55: isize;<br align="left"/>let mut _56: isize;<br align="left"/>let mut _57: isize;<br align="left"/>let mut _58: isize;<br align="left"/>let mut _59: isize;<br align="left"/>debug referrer_info =&gt; _1;<br align="left"/>debug makers_and_referrer =&gt; _2;<br align="left"/>debug makers_and_referrer_stats =&gt; _3;<br align="left"/>debug maker =&gt; _4;<br align="left"/>debug referrer_authority_key =&gt; _5;<br align="left"/>debug referrer_user_key =&gt; _6;<br align="left"/>debug referrer_keys =&gt; _9;<br align="left"/>debug maker =&gt; _16;<br align="left"/>debug referrer =&gt; _25;<br align="left"/>debug residual =&gt; _31;<br align="left"/>debug val =&gt; _34;<br align="left"/>debug referrer_stats =&gt; _35;<br align="left"/>debug residual =&gt; _41;<br align="left"/>debug val =&gt; _44;<br align="left"/>>;
    bb0__0_532 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_7)<br/>_8 = discriminant((*_1))<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb1__0_532 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = Option::&lt;RefMut&lt;'_, User&gt;&gt;::None<br/>StorageLive(_13)<br/>_13 = Option::&lt;RefMut&lt;'_, UserStats&gt;&gt;::None<br/>_11 = (move _12, move _13)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>_0 = std::result::Result::&lt;(Option&lt;RefMut&lt;'_, User&gt;&gt;, Option&lt;RefMut&lt;'_, UserStats&gt;&gt;), error::ErrorCode&gt;::Ok(move _11)<br/>StorageDead(_11)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb2__0_532 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb3__0_532 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>_9 = &amp;(((*_1) as Some).0: (anchor_lang::prelude::Pubkey, anchor_lang::prelude::Pubkey))<br/>_7 = _9<br/>StorageDead(_9)<br/>StorageLive(_5)<br/>_5 = &amp;((*_7).0: anchor_lang::prelude::Pubkey)<br/>StorageLive(_6)<br/>_6 = &amp;((*_7).1: anchor_lang::prelude::Pubkey)<br/>StorageDead(_7)<br/>StorageLive(_14)<br/>_15 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _15)</td></tr></table>>];
    bb4__0_532 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">_14 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb5__0_532 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_16)<br/>_16 = ((_4 as Some).0: &amp;state::user::User)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_19 = &amp;((*_16).0: anchor_lang::prelude::Pubkey)<br/>_18 = &amp;_19<br/>StorageLive(_20)<br/>_20 = &amp;_5<br/></td></tr><tr><td align="left">_17 = &lt;&amp;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _18, move _20)</td></tr></table>>];
    bb6__0_532 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left">switchInt(move _17)</td></tr></table>>];
    bb7__0_532 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>_23 = Option::&lt;RefMut&lt;'_, User&gt;&gt;::None<br/>StorageLive(_24)<br/>_24 = Option::&lt;RefMut&lt;'_, UserStats&gt;&gt;::None<br/>_22 = (move _23, move _24)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/>_0 = std::result::Result::&lt;(Option&lt;RefMut&lt;'_, User&gt;&gt;, Option&lt;RefMut&lt;'_, UserStats&gt;&gt;), error::ErrorCode&gt;::Ok(move _22)<br/>StorageDead(_22)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_532 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/>_14 = const ()<br/>StorageDead(_17)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_532 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>_28 = &amp;(*_2)<br/>StorageLive(_29)<br/>_29 = &amp;(*_6)<br/></td></tr><tr><td align="left">_27 = UserMap::&lt;'_&gt;::get_ref_mut(move _28, move _29)</td></tr></table>>];
    bb10__0_532 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">_26 = &lt;std::result::Result&lt;RefMut&lt;'_, User&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _27)</td></tr></table>>];
    bb11__0_532 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>_30 = discriminant(_26)<br/></td></tr><tr><td align="left">switchInt(move _30)</td></tr></table>>];
    bb12__0_532 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_34)<br/>_34 = move ((_26 as Continue).0: std::cell::RefMut&lt;'_, state::user::User&gt;)<br/>_25 = move _34<br/>StorageDead(_34)<br/>_52 = discriminant(_26)<br/>StorageDead(_26)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>_38 = &amp;(*_3)<br/>StorageLive(_39)<br/>_39 = &amp;(*_5)<br/></td></tr><tr><td align="left">_37 = UserStatsMap::&lt;'_&gt;::get_ref_mut(move _38, move _39)</td></tr></table>>];
    bb13__0_532 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_31)<br/>_31 = ((_26 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_33)<br/>_33 = _31<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(Option&lt;RefMut&lt;'_, User&gt;&gt;, Option&lt;RefMut&lt;'_, UserStats&gt;&gt;), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _33)</td></tr></table>>];
    bb14__0_532 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_31)<br/>_50 = discriminant(_26)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_532 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">_36 = &lt;std::result::Result&lt;RefMut&lt;'_, UserStats&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _37)</td></tr></table>>];
    bb16__0_532 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>_40 = discriminant(_36)<br/></td></tr><tr><td align="left">switchInt(move _40)</td></tr></table>>];
    bb17__0_532 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_44)<br/>_44 = move ((_36 as Continue).0: std::cell::RefMut&lt;'_, state::user::UserStats&gt;)<br/>_35 = move _44<br/>StorageDead(_44)<br/>_56 = discriminant(_36)<br/>StorageDead(_36)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>_47 = move _25<br/>_46 = Option::&lt;RefMut&lt;'_, User&gt;&gt;::Some(move _47)<br/>StorageDead(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>_49 = move _35<br/>_48 = Option::&lt;RefMut&lt;'_, UserStats&gt;&gt;::Some(move _49)<br/>StorageDead(_49)<br/>_45 = (move _46, move _48)<br/>StorageDead(_48)<br/>StorageDead(_46)<br/>_0 = std::result::Result::&lt;(Option&lt;RefMut&lt;'_, User&gt;&gt;, Option&lt;RefMut&lt;'_, UserStats&gt;&gt;), error::ErrorCode&gt;::Ok(move _45)<br/>StorageDead(_45)<br/>StorageDead(_35)<br/>StorageDead(_25)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_532 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_41)<br/>_41 = ((_36 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_43)<br/>_43 = _41<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(Option&lt;RefMut&lt;'_, User&gt;&gt;, Option&lt;RefMut&lt;'_, UserStats&gt;&gt;), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _43)</td></tr></table>>];
    bb19__0_532 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_41)<br/>_54 = discriminant(_36)<br/>StorageDead(_36)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">drop(_25)</td></tr></table>>];
    bb20__0_532 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_532 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_532 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left">return</td></tr></table>>];
    bb23__0_532 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">23 (cleanup)</td></tr><tr><td align="left">drop(_25)</td></tr></table>>];
    bb24__0_532 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">24 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb25__0_532 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">25 (cleanup)</td></tr><tr><td align="left" balign="left">_58 = discriminant(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_532 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">26 (cleanup)</td></tr><tr><td align="left" balign="left">_59 = discriminant(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_532 -> bb1__0_532 [label="0"];
    bb0__0_532 -> bb3__0_532 [label="1"];
    bb0__0_532 -> bb2__0_532 [label="otherwise"];
    bb1__0_532 -> bb22__0_532 [label=""];
    bb3__0_532 -> bb5__0_532 [label="1"];
    bb3__0_532 -> bb4__0_532 [label="otherwise"];
    bb4__0_532 -> bb9__0_532 [label=""];
    bb5__0_532 -> bb6__0_532 [label="return"];
    bb6__0_532 -> bb8__0_532 [label="0"];
    bb6__0_532 -> bb7__0_532 [label="otherwise"];
    bb7__0_532 -> bb21__0_532 [label=""];
    bb8__0_532 -> bb9__0_532 [label=""];
    bb9__0_532 -> bb10__0_532 [label="return"];
    bb10__0_532 -> bb11__0_532 [label="return"];
    bb10__0_532 -> bb24__0_532 [label="unwind"];
    bb11__0_532 -> bb12__0_532 [label="0"];
    bb11__0_532 -> bb13__0_532 [label="1"];
    bb11__0_532 -> bb2__0_532 [label="otherwise"];
    bb12__0_532 -> bb15__0_532 [label="return"];
    bb12__0_532 -> bb23__0_532 [label="unwind"];
    bb13__0_532 -> bb14__0_532 [label="return"];
    bb13__0_532 -> bb26__0_532 [label="unwind"];
    bb14__0_532 -> bb20__0_532 [label=""];
    bb15__0_532 -> bb16__0_532 [label="return"];
    bb15__0_532 -> bb23__0_532 [label="unwind"];
    bb16__0_532 -> bb17__0_532 [label="0"];
    bb16__0_532 -> bb18__0_532 [label="1"];
    bb16__0_532 -> bb2__0_532 [label="otherwise"];
    bb17__0_532 -> bb22__0_532 [label=""];
    bb18__0_532 -> bb19__0_532 [label="return"];
    bb18__0_532 -> bb25__0_532 [label="unwind"];
    bb19__0_532 -> bb20__0_532 [label="return"];
    bb19__0_532 -> bb24__0_532 [label="unwind"];
    bb20__0_532 -> bb21__0_532 [label=""];
    bb21__0_532 -> bb22__0_532 [label=""];
    bb23__0_532 -> bb24__0_532 [label="return"];
    bb25__0_532 -> bb23__0_532 [label=""];
    bb26__0_532 -> bb24__0_532 [label=""];
}
