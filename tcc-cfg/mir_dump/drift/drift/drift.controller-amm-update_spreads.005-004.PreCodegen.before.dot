digraph Mir_0_86 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn update_spreads(_1: &amp;ReErased mut state::perp_market::PerpMarket, _2: u64, _3: std::option::Option&lt;u64&gt;) -&gt; std::result::Result&lt;(u32, u32), error::ErrorCode&gt;<br align="left"/>let _4: i64;<br align="left"/>let mut _5: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _6: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _7: state::perp_market::AMM;<br align="left"/>let mut _8: isize;<br align="left"/>let _9: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _10: !;<br align="left"/>let mut _11: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _12: i64;<br align="left"/>let _13: i32;<br align="left"/>let mut _14: bool;<br align="left"/>let mut _15: i64;<br align="left"/>let _16: i128;<br align="left"/>let mut _17: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _18: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _19: i128;<br align="left"/>let mut _20: u128;<br align="left"/>let mut _21: u128;<br align="left"/>let mut _22: u128;<br align="left"/>let mut _23: isize;<br align="left"/>let _24: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _25: !;<br align="left"/>let mut _26: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _27: i128;<br align="left"/>let _28: i128;<br align="left"/>let mut _29: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _30: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _31: i128;<br align="left"/>let mut _32: i128;<br align="left"/>let mut _33: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _34: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _35: i64;<br align="left"/>let mut _36: i64;<br align="left"/>let mut _37: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _38: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _39: state::perp_market::AMM;<br align="left"/>let mut _40: isize;<br align="left"/>let _41: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _42: !;<br align="left"/>let mut _43: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _44: i64;<br align="left"/>let mut _45: isize;<br align="left"/>let _46: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _47: !;<br align="left"/>let mut _48: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _49: i128;<br align="left"/>let mut _50: isize;<br align="left"/>let _51: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _52: !;<br align="left"/>let mut _53: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _54: i128;<br align="left"/>let mut _55: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i32&gt;;<br align="left"/>let mut _56: std::result::Result&lt;i32, error::ErrorCode&gt;;<br align="left"/>let mut _57: u64;<br align="left"/>let mut _58: i64;<br align="left"/>let mut _59: i128;<br align="left"/>let mut _60: u64;<br align="left"/>let mut _61: i64;<br align="left"/>let mut _62: u64;<br align="left"/>let mut _63: i64;<br align="left"/>let mut _64: u64;<br align="left"/>let mut _65: i64;<br align="left"/>let mut _66: isize;<br align="left"/>let _67: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _68: !;<br align="left"/>let mut _69: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _70: i32;<br align="left"/>let mut _71: u32;<br align="left"/>let mut _72: u32;<br align="left"/>let mut _73: (u32, u32);<br align="left"/>let mut _74: bool;<br align="left"/>let mut _75: u8;<br align="left"/>let mut _76: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (u32, u32)&gt;;<br align="left"/>let mut _77: std::result::Result&lt;(u32, u32), error::ErrorCode&gt;;<br align="left"/>let mut _78: u32;<br align="left"/>let mut _79: i64;<br align="left"/>let mut _80: u64;<br align="left"/>let mut _81: u32;<br align="left"/>let mut _82: u128;<br align="left"/>let mut _83: u128;<br align="left"/>let mut _84: u128;<br align="left"/>let mut _85: i128;<br align="left"/>let mut _86: u64;<br align="left"/>let mut _87: i128;<br align="left"/>let mut _88: i64;<br align="left"/>let mut _89: u128;<br align="left"/>let mut _90: u128;<br align="left"/>let mut _91: u128;<br align="left"/>let mut _92: u64;<br align="left"/>let mut _93: u64;<br align="left"/>let mut _94: u64;<br align="left"/>let mut _95: u64;<br align="left"/>let mut _96: u64;<br align="left"/>let mut _97: i8;<br align="left"/>let mut _98: isize;<br align="left"/>let _99: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _100: !;<br align="left"/>let mut _101: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _102: (u32, u32);<br align="left"/>let _103: u32;<br align="left"/>let mut _104: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _105: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _106: u32;<br align="left"/>let mut _107: isize;<br align="left"/>let _108: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _109: !;<br align="left"/>let mut _110: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _111: u32;<br align="left"/>let mut _112: u32;<br align="left"/>let mut _113: u32;<br align="left"/>let _114: ();<br align="left"/>let mut _115: bool;<br align="left"/>let mut _116: i8;<br align="left"/>let _117: u32;<br align="left"/>let mut _118: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _119: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _120: u8;<br align="left"/>let mut _121: i8;<br align="left"/>let mut _122: isize;<br align="left"/>let _123: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _124: !;<br align="left"/>let mut _125: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _126: u32;<br align="left"/>let mut _127: u32;<br align="left"/>let mut _128: u32;<br align="left"/>let mut _129: u32;<br align="left"/>let mut _130: u32;<br align="left"/>let mut _131: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _132: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _133: u32;<br align="left"/>let mut _134: u32;<br align="left"/>let mut _135: u32;<br align="left"/>let mut _136: isize;<br align="left"/>let _137: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _138: !;<br align="left"/>let mut _139: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _140: u32;<br align="left"/>let mut _141: u32;<br align="left"/>let mut _142: u32;<br align="left"/>let mut _143: u32;<br align="left"/>let mut _144: u32;<br align="left"/>let mut _145: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _146: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _147: u32;<br align="left"/>let mut _148: u32;<br align="left"/>let mut _149: u32;<br align="left"/>let mut _150: isize;<br align="left"/>let _151: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _152: !;<br align="left"/>let mut _153: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _154: u32;<br align="left"/>let mut _155: bool;<br align="left"/>let mut _156: i8;<br align="left"/>let _157: u32;<br align="left"/>let mut _158: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _159: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _160: i8;<br align="left"/>let mut _161: isize;<br align="left"/>let _162: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _163: !;<br align="left"/>let mut _164: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _165: u32;<br align="left"/>let mut _166: u32;<br align="left"/>let mut _167: u32;<br align="left"/>let mut _168: u32;<br align="left"/>let mut _169: u32;<br align="left"/>let mut _170: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _171: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _172: u32;<br align="left"/>let mut _173: u32;<br align="left"/>let mut _174: u32;<br align="left"/>let mut _175: isize;<br align="left"/>let _176: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _177: !;<br align="left"/>let mut _178: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _179: u32;<br align="left"/>let mut _180: u32;<br align="left"/>let mut _181: u32;<br align="left"/>let mut _182: u32;<br align="left"/>let mut _183: u32;<br align="left"/>let mut _184: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _185: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _186: u32;<br align="left"/>let mut _187: u32;<br align="left"/>let mut _188: u32;<br align="left"/>let mut _189: isize;<br align="left"/>let _190: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _191: !;<br align="left"/>let mut _192: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _193: u32;<br align="left"/>let mut _194: u32;<br align="left"/>let mut _195: u32;<br align="left"/>let _196: bool;<br align="left"/>let _197: bool;<br align="left"/>let mut _198: i32;<br align="left"/>let mut _199: i32;<br align="left"/>let mut _200: i32;<br align="left"/>let mut _201: i32;<br align="left"/>let mut _202: bool;<br align="left"/>let mut _203: u8;<br align="left"/>let _204: ();<br align="left"/>let mut _205: bool;<br align="left"/>let _206: u64;<br align="left"/>let mut _207: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _208: Closure(DefId(0:87 ~ drift[d311]::controller::amm::update_spreads::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((u64,)) -&gt; u64, []), (&amp;ReErased &amp;ReErased mut state::perp_market::PerpMarket,)]);<br align="left"/>let mut _209: &amp;ReErased &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let _210: i32;<br align="left"/>let _211: i128;<br align="left"/>let mut _212: i128;<br align="left"/>let mut _213: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _214: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _215: i32;<br align="left"/>let mut _216: isize;<br align="left"/>let _217: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _218: !;<br align="left"/>let mut _219: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _220: i128;<br align="left"/>let mut _221: i128;<br align="left"/>let mut _222: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _223: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _224: i32;<br align="left"/>let mut _225: isize;<br align="left"/>let _226: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _227: !;<br align="left"/>let mut _228: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _229: i128;<br align="left"/>let _230: i32;<br align="left"/>let mut _231: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i32&gt;;<br align="left"/>let mut _232: std::result::Result&lt;i32, error::ErrorCode&gt;;<br align="left"/>let mut _233: i128;<br align="left"/>let mut _234: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _235: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _236: i128;<br align="left"/>let mut _237: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _238: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _239: i128;<br align="left"/>let mut _240: i128;<br align="left"/>let mut _241: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _242: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _243: i128;<br align="left"/>let mut _244: i128;<br align="left"/>let mut _245: isize;<br align="left"/>let _246: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _247: !;<br align="left"/>let mut _248: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _249: i128;<br align="left"/>let mut _250: i128;<br align="left"/>let mut _251: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _252: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _253: i128;<br align="left"/>let mut _254: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _255: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _256: u64;<br align="left"/>let mut _257: isize;<br align="left"/>let _258: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _259: !;<br align="left"/>let mut _260: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _261: i128;<br align="left"/>let mut _262: isize;<br align="left"/>let _263: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _264: !;<br align="left"/>let mut _265: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _266: i128;<br align="left"/>let mut _267: isize;<br align="left"/>let _268: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _269: !;<br align="left"/>let mut _270: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _271: i128;<br align="left"/>let mut _272: isize;<br align="left"/>let _273: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _274: !;<br align="left"/>let mut _275: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _276: i128;<br align="left"/>let mut _277: isize;<br align="left"/>let _278: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _279: !;<br align="left"/>let mut _280: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _281: i32;<br align="left"/>let mut _282: i32;<br align="left"/>let mut _283: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i32&gt;;<br align="left"/>let mut _284: std::result::Result&lt;i32, error::ErrorCode&gt;;<br align="left"/>let mut _285: i128;<br align="left"/>let mut _286: i128;<br align="left"/>let mut _287: isize;<br align="left"/>let _288: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _289: !;<br align="left"/>let mut _290: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _291: i32;<br align="left"/>let mut _292: i32;<br align="left"/>let mut _293: i32;<br align="left"/>let mut _294: i32;<br align="left"/>let mut _295: i32;<br align="left"/>let mut _296: bool;<br align="left"/>let mut _297: i32;<br align="left"/>let mut _298: i32;<br align="left"/>let mut _299: i32;<br align="left"/>let mut _300: (i32, bool);<br align="left"/>let mut _301: i32;<br align="left"/>let mut _302: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i32&gt;;<br align="left"/>let mut _303: std::result::Result&lt;i32, error::ErrorCode&gt;;<br align="left"/>let mut _304: i32;<br align="left"/>let mut _305: i32;<br align="left"/>let mut _306: isize;<br align="left"/>let _307: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _308: !;<br align="left"/>let mut _309: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _310: i32;<br align="left"/>let mut _311: bool;<br align="left"/>let mut _312: i32;<br align="left"/>let mut _313: u32;<br align="left"/>let mut _314: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _315: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _316: u32;<br align="left"/>let mut _317: u32;<br align="left"/>let mut _318: i32;<br align="left"/>let mut _319: isize;<br align="left"/>let _320: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _321: !;<br align="left"/>let mut _322: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _323: u32;<br align="left"/>let mut _324: u32;<br align="left"/>let mut _325: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _326: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _327: u32;<br align="left"/>let mut _328: u32;<br align="left"/>let mut _329: i32;<br align="left"/>let mut _330: isize;<br align="left"/>let _331: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _332: !;<br align="left"/>let mut _333: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _334: u32;<br align="left"/>let mut _335: u32;<br align="left"/>let mut _336: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _337: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _338: u32;<br align="left"/>let mut _339: u32;<br align="left"/>let mut _340: i32;<br align="left"/>let mut _341: isize;<br align="left"/>let _342: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _343: !;<br align="left"/>let mut _344: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _345: u32;<br align="left"/>let mut _346: u32;<br align="left"/>let mut _347: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _348: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _349: u32;<br align="left"/>let mut _350: u32;<br align="left"/>let mut _351: i32;<br align="left"/>let mut _352: isize;<br align="left"/>let _353: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _354: !;<br align="left"/>let mut _355: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _356: u32;<br align="left"/>let mut _357: i32;<br align="left"/>let _358: ();<br align="left"/>let mut _359: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _360: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _361: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _362: isize;<br align="left"/>let _363: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _364: !;<br align="left"/>let mut _365: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _366: ();<br align="left"/>let mut _367: (u32, u32);<br align="left"/>let mut _368: u32;<br align="left"/>let mut _369: u32;<br align="left"/>debug market =&gt; _1;<br align="left"/>debug reserve_price =&gt; _2;<br align="left"/>debug slot =&gt; _3;<br align="left"/>debug max_ref_offset =&gt; _4;<br align="left"/>debug residual =&gt; _9;<br align="left"/>debug val =&gt; _12;<br align="left"/>debug reference_price_offset =&gt; _13;<br align="left"/>debug liquidity_ratio =&gt; _16;<br align="left"/>debug residual =&gt; _24;<br align="left"/>debug val =&gt; _27;<br align="left"/>debug signed_liquidity_ratio =&gt; _28;<br align="left"/>debug residual =&gt; _41;<br align="left"/>debug val =&gt; _44;<br align="left"/>debug residual =&gt; _46;<br align="left"/>debug val =&gt; _49;<br align="left"/>debug residual =&gt; _51;<br align="left"/>debug val =&gt; _54;<br align="left"/>debug residual =&gt; _67;<br align="left"/>debug val =&gt; _70;<br align="left"/>debug long_spread =&gt; _71;<br align="left"/>debug short_spread =&gt; _72;<br align="left"/>debug residual =&gt; _99;<br align="left"/>debug val =&gt; _102;<br align="left"/>debug half_base_spread =&gt; _103;<br align="left"/>debug residual =&gt; _108;<br align="left"/>debug val =&gt; _111;<br align="left"/>debug adjustment =&gt; _117;<br align="left"/>debug residual =&gt; _123;<br align="left"/>debug val =&gt; _126;<br align="left"/>debug residual =&gt; _137;<br align="left"/>debug val =&gt; _140;<br align="left"/>debug residual =&gt; _151;<br align="left"/>debug val =&gt; _154;<br align="left"/>debug adjustment =&gt; _157;<br align="left"/>debug residual =&gt; _162;<br align="left"/>debug val =&gt; _165;<br align="left"/>debug residual =&gt; _176;<br align="left"/>debug val =&gt; _179;<br align="left"/>debug residual =&gt; _190;<br align="left"/>debug val =&gt; _193;<br align="left"/>debug do_reference_price_smooth =&gt; _196;<br align="left"/>debug sign_changed =&gt; _197;<br align="left"/>debug slots_passed =&gt; _206;<br align="left"/>debug reference_price_delta =&gt; _210;<br align="left"/>debug full_offset_delta =&gt; _211;<br align="left"/>debug residual =&gt; _217;<br align="left"/>debug val =&gt; _220;<br align="left"/>debug residual =&gt; _226;<br align="left"/>debug val =&gt; _229;<br align="left"/>debug raw =&gt; _230;<br align="left"/>debug residual =&gt; _246;<br align="left"/>debug val =&gt; _249;<br align="left"/>debug residual =&gt; _258;<br align="left"/>debug val =&gt; _261;<br align="left"/>debug residual =&gt; _263;<br align="left"/>debug val =&gt; _266;<br align="left"/>debug residual =&gt; _268;<br align="left"/>debug val =&gt; _271;<br align="left"/>debug residual =&gt; _273;<br align="left"/>debug val =&gt; _276;<br align="left"/>debug residual =&gt; _278;<br align="left"/>debug val =&gt; _281;<br align="left"/>debug residual =&gt; _288;<br align="left"/>debug val =&gt; _291;<br align="left"/>debug residual =&gt; _307;<br align="left"/>debug val =&gt; _310;<br align="left"/>debug residual =&gt; _320;<br align="left"/>debug val =&gt; _323;<br align="left"/>debug residual =&gt; _331;<br align="left"/>debug val =&gt; _334;<br align="left"/>debug residual =&gt; _342;<br align="left"/>debug val =&gt; _345;<br align="left"/>debug residual =&gt; _353;<br align="left"/>debug val =&gt; _356;<br align="left"/>debug residual =&gt; _363;<br align="left"/>debug val =&gt; _366;<br align="left"/>>;
    bb0__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = ((*_1).1: state::perp_market::AMM)<br/></td></tr><tr><td align="left">_6 = AMM::get_max_reference_price_offset(move _7)</td></tr></table>>];
    bb1__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/></td></tr><tr><td align="left">_5 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _6)</td></tr></table>>];
    bb2__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_8 = discriminant(_5)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb3__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_5 as Continue).0: i64)<br/>_4 = _12<br/>StorageDead(_12)<br/>StorageDead(_5)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = _4<br/>_14 = Gt(move _15, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _14)</td></tr></table>>];
    bb4__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>_9 = ((_5 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_11)<br/>_11 = _9<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u32, u32), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _11)</td></tr></table>>];
    bb6__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_9)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_19 = (((*_1).1: state::perp_market::AMM).15: i128)<br/>StorageLive(_20)<br/>_20 = (((*_1).1: state::perp_market::AMM).5: u128)<br/>StorageLive(_21)<br/>_21 = (((*_1).1: state::perp_market::AMM).8: u128)<br/>StorageLive(_22)<br/>_22 = (((*_1).1: state::perp_market::AMM).9: u128)<br/></td></tr><tr><td align="left">_18 = calculate_inventory_liquidity_ratio(move _19, move _20, move _21, move _22)</td></tr></table>>];
    bb8__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>_13 = const 0_i32<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">_17 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _18)</td></tr></table>>];
    bb10__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>_23 = discriminant(_17)<br/></td></tr><tr><td align="left">switchInt(move _23)</td></tr></table>>];
    bb11__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_27)<br/>_27 = ((_17 as Continue).0: i128)<br/>_16 = _27<br/>StorageDead(_27)<br/>StorageDead(_17)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>_31 = _16<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>_39 = ((*_1).1: state::perp_market::AMM)<br/></td></tr><tr><td align="left">_38 = AMM::get_protocol_owned_position(move _39)</td></tr></table>>];
    bb12__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_24)<br/>_24 = ((_17 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_26)<br/>_26 = _24<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u32, u32), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _26)</td></tr></table>>];
    bb13__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_24)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/></td></tr><tr><td align="left">_37 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _38)</td></tr></table>>];
    bb15__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>_40 = discriminant(_37)<br/></td></tr><tr><td align="left">switchInt(move _40)</td></tr></table>>];
    bb16__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_44)<br/>_44 = ((_37 as Continue).0: i64)<br/>_36 = _44<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">_35 = core::num::&lt;impl i64&gt;::signum(move _36)</td></tr></table>>];
    bb17__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_41)<br/>_41 = ((_37 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_43)<br/>_43 = _41<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u32, u32), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _43)</td></tr></table>>];
    bb18__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_41)<br/>StorageDead(_36)<br/>StorageDead(_35)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/></td></tr><tr><td align="left">_34 = &lt;i64 as Cast&gt;::cast::&lt;i128&gt;(move _35)</td></tr></table>>];
    bb20__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/></td></tr><tr><td align="left">_33 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _34)</td></tr></table>>];
    bb21__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>_45 = discriminant(_33)<br/></td></tr><tr><td align="left">switchInt(move _45)</td></tr></table>>];
    bb22__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_49)<br/>_49 = ((_33 as Continue).0: i128)<br/>_32 = _49<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">_30 = &lt;i128 as SafeMath&gt;::safe_mul(move _31, move _32)</td></tr></table>>];
    bb23__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_46)<br/>_46 = ((_33 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_48)<br/>_48 = _46<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u32, u32), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _48)</td></tr></table>>];
    bb24__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">_29 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _30)</td></tr></table>>];
    bb26__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>_50 = discriminant(_29)<br/></td></tr><tr><td align="left">switchInt(move _50)</td></tr></table>>];
    bb27__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_54)<br/>_54 = ((_29 as Continue).0: i128)<br/>_28 = _54<br/>StorageDead(_54)<br/>StorageDead(_37)<br/>StorageDead(_33)<br/>StorageDead(_29)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>_57 = _2<br/>StorageLive(_58)<br/>_58 = (((*_1).1: state::perp_market::AMM).27: i64)<br/>StorageLive(_59)<br/>_59 = _28<br/>StorageLive(_60)<br/>_60 = (((*_1).1: state::perp_market::AMM).54: u64)<br/>StorageLive(_61)<br/>_61 = ((((*_1).1: state::perp_market::AMM).1: state::oracle::HistoricalOracleData).4: i64)<br/>StorageLive(_62)<br/>_62 = (((*_1).1: state::perp_market::AMM).46: u64)<br/>StorageLive(_63)<br/>_63 = ((((*_1).1: state::perp_market::AMM).1: state::oracle::HistoricalOracleData).3: i64)<br/>StorageLive(_64)<br/>_64 = (((*_1).1: state::perp_market::AMM).45: u64)<br/>StorageLive(_65)<br/>_65 = _4<br/></td></tr><tr><td align="left">_56 = calculate_reference_price_offset(move _57, move _58, move _59, move _60, move _61, move _62, move _63, move _64, move _65)</td></tr></table>>];
    bb28__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_51)<br/>_51 = ((_29 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_53)<br/>_53 = _51<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u32, u32), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _53)</td></tr></table>>];
    bb29__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageDead(_64)<br/>StorageDead(_63)<br/>StorageDead(_62)<br/>StorageDead(_61)<br/>StorageDead(_60)<br/>StorageDead(_59)<br/>StorageDead(_58)<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">_55 = &lt;std::result::Result&lt;i32, error::ErrorCode&gt; as Try&gt;::branch(move _56)</td></tr></table>>];
    bb31__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>_66 = discriminant(_55)<br/></td></tr><tr><td align="left">switchInt(move _66)</td></tr></table>>];
    bb32__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_70)<br/>_70 = ((_55 as Continue).0: i32)<br/>_13 = _70<br/>StorageDead(_70)<br/>StorageDead(_28)<br/>StorageDead(_16)<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageLive(_67)<br/>_67 = ((_55 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_69)<br/>_69 = _67<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u32, u32), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _69)</td></tr></table>>];
    bb34__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageDead(_67)<br/>StorageDead(_28)<br/>StorageDead(_16)<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>_75 = (((*_1).1: state::perp_market::AMM).70: u8)<br/>_74 = Gt(move _75, const 0_u8)<br/></td></tr><tr><td align="left">switchInt(move _74)</td></tr></table>>];
    bb36__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>_78 = (((*_1).1: state::perp_market::AMM).63: u32)<br/>StorageLive(_79)<br/>_79 = (((*_1).1: state::perp_market::AMM).42: i64)<br/>StorageLive(_80)<br/>_80 = (((*_1).1: state::perp_market::AMM).48: u64)<br/>StorageLive(_81)<br/>_81 = (((*_1).1: state::perp_market::AMM).64: u32)<br/>StorageLive(_82)<br/>_82 = (((*_1).1: state::perp_market::AMM).6: u128)<br/>StorageLive(_83)<br/>_83 = (((*_1).1: state::perp_market::AMM).12: u128)<br/>StorageLive(_84)<br/>_84 = (((*_1).1: state::perp_market::AMM).11: u128)<br/>StorageLive(_85)<br/>_85 = (((*_1).1: state::perp_market::AMM).15: i128)<br/>StorageLive(_86)<br/>_86 = _2<br/>StorageLive(_87)<br/>_87 = (((*_1).1: state::perp_market::AMM).31: i128)<br/>StorageLive(_88)<br/>_88 = (((*_1).1: state::perp_market::AMM).49: i64)<br/>StorageLive(_89)<br/>_89 = (((*_1).1: state::perp_market::AMM).5: u128)<br/>StorageLive(_90)<br/>_90 = (((*_1).1: state::perp_market::AMM).8: u128)<br/>StorageLive(_91)<br/>_91 = (((*_1).1: state::perp_market::AMM).9: u128)<br/>StorageLive(_92)<br/>_92 = (((*_1).1: state::perp_market::AMM).60: u64)<br/>StorageLive(_93)<br/>_93 = (((*_1).1: state::perp_market::AMM).61: u64)<br/>StorageLive(_94)<br/>_94 = (((*_1).1: state::perp_market::AMM).57: u64)<br/>StorageLive(_95)<br/>_95 = (((*_1).1: state::perp_market::AMM).58: u64)<br/>StorageLive(_96)<br/>_96 = (((*_1).1: state::perp_market::AMM).56: u64)<br/>StorageLive(_97)<br/>_97 = (((*_1).1: state::perp_market::AMM).83: i8)<br/></td></tr><tr><td align="left">_77 = calculate_spread(move _78, move _79, move _80, move _81, move _82, move _83, move _84, move _85, move _86, move _87, move _88, move _89, move _90, move _91, move _92, move _93, move _94, move _95, move _96, move _97)</td></tr></table>>];
    bb37__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>StorageDead(_96)<br/>StorageDead(_95)<br/>StorageDead(_94)<br/>StorageDead(_93)<br/>StorageDead(_92)<br/>StorageDead(_91)<br/>StorageDead(_90)<br/>StorageDead(_89)<br/>StorageDead(_88)<br/>StorageDead(_87)<br/>StorageDead(_86)<br/>StorageDead(_85)<br/>StorageDead(_84)<br/>StorageDead(_83)<br/>StorageDead(_82)<br/>StorageDead(_81)<br/>StorageDead(_80)<br/>StorageDead(_79)<br/>StorageDead(_78)<br/></td></tr><tr><td align="left">_76 = &lt;std::result::Result&lt;(u32, u32), error::ErrorCode&gt; as Try&gt;::branch(move _77)</td></tr></table>>];
    bb38__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>_98 = discriminant(_76)<br/></td></tr><tr><td align="left">switchInt(move _98)</td></tr></table>>];
    bb39__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_102)<br/>_102 = ((_76 as Continue).0: (u32, u32))<br/>_73 = _102<br/>StorageDead(_102)<br/>StorageDead(_76)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageLive(_99)<br/>_99 = ((_76 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_101)<br/>_101 = _99<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u32, u32), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _101)</td></tr></table>>];
    bb41__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/>StorageDead(_99)<br/>StorageDead(_76)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>_106 = (((*_1).1: state::perp_market::AMM).63: u32)<br/></td></tr><tr><td align="left">_105 = &lt;u32 as SafeMath&gt;::safe_div(move _106, const 2_u32)</td></tr></table>>];
    bb43__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/></td></tr><tr><td align="left">_104 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _105)</td></tr></table>>];
    bb44__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/>_107 = discriminant(_104)<br/></td></tr><tr><td align="left">switchInt(move _107)</td></tr></table>>];
    bb45__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageLive(_111)<br/>_111 = ((_104 as Continue).0: u32)<br/>_103 = _111<br/>StorageDead(_111)<br/>StorageDead(_104)<br/>StorageLive(_112)<br/>_112 = _103<br/>StorageLive(_113)<br/>_113 = _103<br/>_73 = (move _112, move _113)<br/>StorageDead(_113)<br/>StorageDead(_112)<br/>StorageDead(_103)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageLive(_108)<br/>_108 = ((_104 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_110)<br/>_110 = _108<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u32, u32), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _110)</td></tr></table>>];
    bb47__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/>StorageDead(_108)<br/>StorageDead(_104)<br/>StorageDead(_103)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageLive(_71)<br/>_71 = (_73.0: u32)<br/>StorageLive(_72)<br/>_72 = (_73.1: u32)<br/>StorageDead(_73)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>_116 = (((*_1).1: state::perp_market::AMM).77: i8)<br/>_115 = Lt(move _116, const 0_i8)<br/></td></tr><tr><td align="left">switchInt(move _115)</td></tr></table>>];
    bb49__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>_121 = (((*_1).1: state::perp_market::AMM).77: i8)<br/></td></tr><tr><td align="left">_120 = core::num::&lt;impl i8&gt;::unsigned_abs(move _121)</td></tr></table>>];
    bb50__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_121)<br/></td></tr><tr><td align="left">_119 = &lt;u8 as Cast&gt;::cast::&lt;u32&gt;(move _120)</td></tr></table>>];
    bb51__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/></td></tr><tr><td align="left">_118 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _119)</td></tr></table>>];
    bb52__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/>_122 = discriminant(_118)<br/></td></tr><tr><td align="left">switchInt(move _122)</td></tr></table>>];
    bb53__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageLive(_126)<br/>_126 = ((_118 as Continue).0: u32)<br/>_117 = _126<br/>StorageDead(_126)<br/>StorageDead(_118)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>_129 = _71<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>_134 = _71<br/>StorageLive(_135)<br/>_135 = _117<br/></td></tr><tr><td align="left">_133 = core::num::&lt;impl u32&gt;::saturating_mul(move _134, move _135)</td></tr></table>>];
    bb54__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageLive(_123)<br/>_123 = ((_118 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_125)<br/>_125 = _123<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u32, u32), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _125)</td></tr></table>>];
    bb55__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/>StorageDead(_123)<br/>StorageDead(_118)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb56__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_135)<br/>StorageDead(_134)<br/></td></tr><tr><td align="left">_132 = &lt;u32 as SafeMath&gt;::safe_div(move _133, const 100_u32)</td></tr></table>>];
    bb57__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/></td></tr><tr><td align="left">_131 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _132)</td></tr></table>>];
    bb58__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_132)<br/>_136 = discriminant(_131)<br/></td></tr><tr><td align="left">switchInt(move _136)</td></tr></table>>];
    bb59__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageLive(_140)<br/>_140 = ((_131 as Continue).0: u32)<br/>_130 = _140<br/>StorageDead(_140)<br/></td></tr><tr><td align="left">_128 = core::num::&lt;impl u32&gt;::saturating_sub(move _129, move _130)</td></tr></table>>];
    bb60__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageLive(_137)<br/>_137 = ((_131 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_139)<br/>_139 = _137<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u32, u32), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _139)</td></tr></table>>];
    bb61__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_139)<br/>StorageDead(_137)<br/>StorageDead(_130)<br/>StorageDead(_129)<br/>StorageDead(_128)<br/>StorageDead(_127)<br/>StorageDead(_131)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_130)<br/>StorageDead(_129)<br/></td></tr><tr><td align="left">_127 = &lt;u32 as Ord&gt;::max(move _128, const 1_u32)</td></tr></table>>];
    bb63__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>_71 = move _127<br/>StorageDead(_127)<br/>StorageDead(_131)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>_143 = _72<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>_148 = _72<br/>StorageLive(_149)<br/>_149 = _117<br/></td></tr><tr><td align="left">_147 = core::num::&lt;impl u32&gt;::saturating_mul(move _148, move _149)</td></tr></table>>];
    bb64__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_149)<br/>StorageDead(_148)<br/></td></tr><tr><td align="left">_146 = &lt;u32 as SafeMath&gt;::safe_div(move _147, const 100_u32)</td></tr></table>>];
    bb65__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_147)<br/></td></tr><tr><td align="left">_145 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _146)</td></tr></table>>];
    bb66__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_146)<br/>_150 = discriminant(_145)<br/></td></tr><tr><td align="left">switchInt(move _150)</td></tr></table>>];
    bb67__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageLive(_154)<br/>_154 = ((_145 as Continue).0: u32)<br/>_144 = _154<br/>StorageDead(_154)<br/></td></tr><tr><td align="left">_142 = core::num::&lt;impl u32&gt;::saturating_sub(move _143, move _144)</td></tr></table>>];
    bb68__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageLive(_151)<br/>_151 = ((_145 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_153)<br/>_153 = _151<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u32, u32), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _153)</td></tr></table>>];
    bb69__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_153)<br/>StorageDead(_151)<br/>StorageDead(_144)<br/>StorageDead(_143)<br/>StorageDead(_142)<br/>StorageDead(_141)<br/>StorageDead(_145)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb70__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_144)<br/>StorageDead(_143)<br/></td></tr><tr><td align="left">_141 = &lt;u32 as Ord&gt;::max(move _142, const 1_u32)</td></tr></table>>];
    bb71__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_142)<br/>_72 = move _141<br/>StorageDead(_141)<br/>StorageDead(_145)<br/>_114 = const ()<br/>StorageDead(_117)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb72__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_116)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>_156 = (((*_1).1: state::perp_market::AMM).77: i8)<br/>_155 = Gt(move _156, const 0_i8)<br/></td></tr><tr><td align="left">switchInt(move _155)</td></tr></table>>];
    bb73__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_156)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>_160 = (((*_1).1: state::perp_market::AMM).77: i8)<br/></td></tr><tr><td align="left">_159 = &lt;i8 as Cast&gt;::cast::&lt;u32&gt;(move _160)</td></tr></table>>];
    bb74__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_160)<br/></td></tr><tr><td align="left">_158 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _159)</td></tr></table>>];
    bb75__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_159)<br/>_161 = discriminant(_158)<br/></td></tr><tr><td align="left">switchInt(move _161)</td></tr></table>>];
    bb76__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageLive(_165)<br/>_165 = ((_158 as Continue).0: u32)<br/>_157 = _165<br/>StorageDead(_165)<br/>StorageDead(_158)<br/>StorageLive(_166)<br/>StorageLive(_167)<br/>StorageLive(_168)<br/>_168 = _71<br/>StorageLive(_169)<br/>StorageLive(_170)<br/>StorageLive(_171)<br/>StorageLive(_172)<br/>StorageLive(_173)<br/>_173 = _71<br/>StorageLive(_174)<br/>_174 = _157<br/></td></tr><tr><td align="left">_172 = core::num::&lt;impl u32&gt;::saturating_mul(move _173, move _174)</td></tr></table>>];
    bb77__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageLive(_162)<br/>_162 = ((_158 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_164)<br/>_164 = _162<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u32, u32), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _164)</td></tr></table>>];
    bb78__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_164)<br/>StorageDead(_162)<br/>StorageDead(_158)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb79__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_174)<br/>StorageDead(_173)<br/></td></tr><tr><td align="left">_171 = &lt;u32 as SafeMath&gt;::safe_div_ceil(move _172, const 100_u32)</td></tr></table>>];
    bb80__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_172)<br/></td></tr><tr><td align="left">_170 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _171)</td></tr></table>>];
    bb81__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_171)<br/>_175 = discriminant(_170)<br/></td></tr><tr><td align="left">switchInt(move _175)</td></tr></table>>];
    bb82__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageLive(_179)<br/>_179 = ((_170 as Continue).0: u32)<br/>_169 = _179<br/>StorageDead(_179)<br/></td></tr><tr><td align="left">_167 = core::num::&lt;impl u32&gt;::saturating_add(move _168, move _169)</td></tr></table>>];
    bb83__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageLive(_176)<br/>_176 = ((_170 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_178)<br/>_178 = _176<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u32, u32), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _178)</td></tr></table>>];
    bb84__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_178)<br/>StorageDead(_176)<br/>StorageDead(_169)<br/>StorageDead(_168)<br/>StorageDead(_167)<br/>StorageDead(_166)<br/>StorageDead(_170)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb85__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_169)<br/>StorageDead(_168)<br/></td></tr><tr><td align="left">_166 = &lt;u32 as Ord&gt;::max(move _167, const 1_u32)</td></tr></table>>];
    bb86__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_167)<br/>_71 = move _166<br/>StorageDead(_166)<br/>StorageDead(_170)<br/>StorageLive(_180)<br/>StorageLive(_181)<br/>StorageLive(_182)<br/>_182 = _72<br/>StorageLive(_183)<br/>StorageLive(_184)<br/>StorageLive(_185)<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>_187 = _72<br/>StorageLive(_188)<br/>_188 = _157<br/></td></tr><tr><td align="left">_186 = core::num::&lt;impl u32&gt;::saturating_mul(move _187, move _188)</td></tr></table>>];
    bb87__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_188)<br/>StorageDead(_187)<br/></td></tr><tr><td align="left">_185 = &lt;u32 as SafeMath&gt;::safe_div_ceil(move _186, const 100_u32)</td></tr></table>>];
    bb88__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_186)<br/></td></tr><tr><td align="left">_184 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _185)</td></tr></table>>];
    bb89__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_185)<br/>_189 = discriminant(_184)<br/></td></tr><tr><td align="left">switchInt(move _189)</td></tr></table>>];
    bb90__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageLive(_193)<br/>_193 = ((_184 as Continue).0: u32)<br/>_183 = _193<br/>StorageDead(_193)<br/></td></tr><tr><td align="left">_181 = core::num::&lt;impl u32&gt;::saturating_add(move _182, move _183)</td></tr></table>>];
    bb91__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageLive(_190)<br/>_190 = ((_184 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_192)<br/>_192 = _190<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u32, u32), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _192)</td></tr></table>>];
    bb92__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_192)<br/>StorageDead(_190)<br/>StorageDead(_183)<br/>StorageDead(_182)<br/>StorageDead(_181)<br/>StorageDead(_180)<br/>StorageDead(_184)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb93__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_183)<br/>StorageDead(_182)<br/></td></tr><tr><td align="left">_180 = &lt;u32 as Ord&gt;::max(move _181, const 1_u32)</td></tr></table>>];
    bb94__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_181)<br/>_72 = move _180<br/>StorageDead(_180)<br/>StorageDead(_184)<br/>_114 = const ()<br/>StorageDead(_157)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb95__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_156)<br/>_114 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb96__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_155)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb97__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_115)<br/>StorageDead(_114)<br/>StorageLive(_194)<br/>_194 = _71<br/>(((*_1).1: state::perp_market::AMM).65: u32) = move _194<br/>StorageDead(_194)<br/>StorageLive(_195)<br/>_195 = _72<br/>(((*_1).1: state::perp_market::AMM).66: u32) = move _195<br/>StorageDead(_195)<br/>StorageLive(_196)<br/>StorageLive(_197)<br/>StorageLive(_198)<br/>StorageLive(_199)<br/>_199 = _13<br/></td></tr><tr><td align="left">_198 = core::num::&lt;impl i32&gt;::signum(move _199)</td></tr></table>>];
    bb98__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_199)<br/>StorageLive(_200)<br/>StorageLive(_201)<br/>_201 = (((*_1).1: state::perp_market::AMM).82: i32)<br/></td></tr><tr><td align="left">_200 = core::num::&lt;impl i32&gt;::signum(move _201)</td></tr></table>>];
    bb99__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageDead(_201)<br/>_197 = Ne(move _198, move _200)<br/>StorageDead(_200)<br/>StorageDead(_198)<br/>StorageLive(_202)<br/>_202 = _197<br/></td></tr><tr><td align="left">switchInt(move _202)</td></tr></table>>];
    bb100__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageLive(_203)<br/>_203 = (((*_1).1: state::perp_market::AMM).70: u8)<br/>_196 = Gt(move _203, const 100_u8)<br/>StorageDead(_203)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb101__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">_196 = const false<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb102__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_202)<br/>StorageDead(_197)<br/>StorageLive(_204)<br/>StorageLive(_205)<br/>_205 = _196<br/></td></tr><tr><td align="left">switchInt(move _205)</td></tr></table>>];
    bb103__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageLive(_206)<br/>StorageLive(_207)<br/>_207 = _3<br/>StorageLive(_208)<br/>StorageLive(_209)<br/>_209 = &amp;_1<br/>_208 = {closure@programs/drift/src/controller/amm.rs:273:43: 273:46} { market: move _209 }<br/>StorageDead(_209)<br/></td></tr><tr><td align="left">_206 = Option::&lt;u64&gt;::map_or::&lt;u64, {closure@programs/drift/src/controller/amm.rs:273:43: 273:46}&gt;(move _207, const 0_u64, move _208)</td></tr></table>>];
    bb104__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_208)<br/>StorageDead(_207)<br/>StorageLive(_210)<br/>StorageLive(_211)<br/>StorageLive(_212)<br/>StorageLive(_213)<br/>StorageLive(_214)<br/>StorageLive(_215)<br/>_215 = _13<br/></td></tr><tr><td align="left">_214 = &lt;i32 as Cast&gt;::cast::&lt;i128&gt;(move _215)</td></tr></table>>];
    bb105__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_215)<br/></td></tr><tr><td align="left">_213 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _214)</td></tr></table>>];
    bb106__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_214)<br/>_216 = discriminant(_213)<br/></td></tr><tr><td align="left">switchInt(move _216)</td></tr></table>>];
    bb107__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageLive(_220)<br/>_220 = ((_213 as Continue).0: i128)<br/>_212 = _220<br/>StorageDead(_220)<br/>StorageLive(_221)<br/>StorageLive(_222)<br/>StorageLive(_223)<br/>StorageLive(_224)<br/>_224 = (((*_1).1: state::perp_market::AMM).82: i32)<br/></td></tr><tr><td align="left">_223 = &lt;i32 as Cast&gt;::cast::&lt;i128&gt;(move _224)</td></tr></table>>];
    bb108__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageLive(_217)<br/>_217 = ((_213 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_219)<br/>_219 = _217<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u32, u32), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _219)</td></tr></table>>];
    bb109__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageDead(_219)<br/>StorageDead(_217)<br/>StorageDead(_212)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb110__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_224)<br/></td></tr><tr><td align="left">_222 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _223)</td></tr></table>>];
    bb111__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_223)<br/>_225 = discriminant(_222)<br/></td></tr><tr><td align="left">switchInt(move _225)</td></tr></table>>];
    bb112__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageLive(_229)<br/>_229 = ((_222 as Continue).0: i128)<br/>_221 = _229<br/>StorageDead(_229)<br/></td></tr><tr><td align="left">_211 = core::num::&lt;impl i128&gt;::saturating_sub(move _212, move _221)</td></tr></table>>];
    bb113__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageLive(_226)<br/>_226 = ((_222 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_228)<br/>_228 = _226<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u32, u32), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _228)</td></tr></table>>];
    bb114__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageDead(_228)<br/>StorageDead(_226)<br/>StorageDead(_221)<br/>StorageDead(_212)<br/>StorageDead(_222)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb115__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageDead(_221)<br/>StorageDead(_212)<br/>StorageDead(_222)<br/>StorageDead(_213)<br/>StorageLive(_230)<br/>StorageLive(_231)<br/>StorageLive(_232)<br/>StorageLive(_233)<br/>StorageLive(_234)<br/>StorageLive(_235)<br/>StorageLive(_236)<br/>StorageLive(_237)<br/>StorageLive(_238)<br/>StorageLive(_239)<br/>StorageLive(_240)<br/>StorageLive(_241)<br/>StorageLive(_242)<br/>StorageLive(_243)<br/>StorageLive(_244)<br/>_244 = _211<br/></td></tr><tr><td align="left">_243 = core::num::&lt;impl i128&gt;::abs(move _244)</td></tr></table>>];
    bb116__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_244)<br/></td></tr><tr><td align="left">_242 = &lt;i128 as Cast&gt;::cast::&lt;i128&gt;(move _243)</td></tr></table>>];
    bb117__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageDead(_243)<br/></td></tr><tr><td align="left">_241 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _242)</td></tr></table>>];
    bb118__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageDead(_242)<br/>_245 = discriminant(_241)<br/></td></tr><tr><td align="left">switchInt(move _245)</td></tr></table>>];
    bb119__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageLive(_249)<br/>_249 = ((_241 as Continue).0: i128)<br/>_240 = _249<br/>StorageDead(_249)<br/>StorageLive(_250)<br/>StorageLive(_251)<br/>StorageLive(_252)<br/>StorageLive(_253)<br/>StorageLive(_254)<br/>StorageLive(_255)<br/>StorageLive(_256)<br/>_256 = _206<br/></td></tr><tr><td align="left">_255 = &lt;u64 as Cast&gt;::cast::&lt;i128&gt;(move _256)</td></tr></table>>];
    bb120__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageLive(_246)<br/>_246 = ((_241 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_248)<br/>_248 = _246<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u32, u32), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _248)</td></tr></table>>];
    bb121__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageDead(_248)<br/>StorageDead(_246)<br/>StorageDead(_240)<br/>StorageDead(_239)<br/>StorageDead(_238)<br/>StorageDead(_236)<br/>StorageDead(_235)<br/>StorageDead(_233)<br/>StorageDead(_232)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb122__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageDead(_256)<br/></td></tr><tr><td align="left">_254 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _255)</td></tr></table>>];
    bb123__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageDead(_255)<br/>_257 = discriminant(_254)<br/></td></tr><tr><td align="left">switchInt(move _257)</td></tr></table>>];
    bb124__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageLive(_261)<br/>_261 = ((_254 as Continue).0: i128)<br/>_253 = _261<br/>StorageDead(_261)<br/></td></tr><tr><td align="left">_252 = &lt;i128 as SafeMath&gt;::safe_mul(move _253, const 1000_i128)</td></tr></table>>];
    bb125__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageLive(_258)<br/>_258 = ((_254 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_260)<br/>_260 = _258<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u32, u32), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _260)</td></tr></table>>];
    bb126__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageDead(_260)<br/>StorageDead(_258)<br/>StorageDead(_253)<br/>StorageDead(_252)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb127__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageDead(_253)<br/></td></tr><tr><td align="left">_251 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _252)</td></tr></table>>];
    bb128__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageDead(_252)<br/>_262 = discriminant(_251)<br/></td></tr><tr><td align="left">switchInt(move _262)</td></tr></table>>];
    bb129__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">StorageLive(_266)<br/>_266 = ((_251 as Continue).0: i128)<br/>_250 = _266<br/>StorageDead(_266)<br/></td></tr><tr><td align="left">_239 = &lt;i128 as Ord&gt;::min(move _240, move _250)</td></tr></table>>];
    bb130__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageLive(_263)<br/>_263 = ((_251 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_265)<br/>_265 = _263<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u32, u32), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _265)</td></tr></table>>];
    bb131__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageDead(_265)<br/>StorageDead(_263)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb132__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageDead(_250)<br/>StorageDead(_240)<br/></td></tr><tr><td align="left">_238 = &lt;i128 as Cast&gt;::cast::&lt;i128&gt;(move _239)</td></tr></table>>];
    bb133__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageDead(_239)<br/></td></tr><tr><td align="left">_237 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _238)</td></tr></table>>];
    bb134__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageDead(_238)<br/>_267 = discriminant(_237)<br/></td></tr><tr><td align="left">switchInt(move _267)</td></tr></table>>];
    bb135__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageLive(_271)<br/>_271 = ((_237 as Continue).0: i128)<br/>_236 = _271<br/>StorageDead(_271)<br/></td></tr><tr><td align="left">_235 = &lt;i128 as SafeMath&gt;::safe_div(move _236, const 10_i128)</td></tr></table>>];
    bb136__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageLive(_268)<br/>_268 = ((_237 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_270)<br/>_270 = _268<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u32, u32), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _270)</td></tr></table>>];
    bb137__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">StorageDead(_270)<br/>StorageDead(_268)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb138__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">StorageDead(_236)<br/></td></tr><tr><td align="left">_234 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _235)</td></tr></table>>];
    bb139__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">StorageDead(_235)<br/>_272 = discriminant(_234)<br/></td></tr><tr><td align="left">switchInt(move _272)</td></tr></table>>];
    bb140__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">StorageLive(_276)<br/>_276 = ((_234 as Continue).0: i128)<br/>_233 = _276<br/>StorageDead(_276)<br/></td></tr><tr><td align="left">_232 = &lt;i128 as Cast&gt;::cast::&lt;i32&gt;(move _233)</td></tr></table>>];
    bb141__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">StorageLive(_273)<br/>_273 = ((_234 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_275)<br/>_275 = _273<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u32, u32), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _275)</td></tr></table>>];
    bb142__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageDead(_275)<br/>StorageDead(_273)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb143__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageDead(_233)<br/></td></tr><tr><td align="left">_231 = &lt;std::result::Result&lt;i32, error::ErrorCode&gt; as Try&gt;::branch(move _232)</td></tr></table>>];
    bb144__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">StorageDead(_232)<br/>_277 = discriminant(_231)<br/></td></tr><tr><td align="left">switchInt(move _277)</td></tr></table>>];
    bb145__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageLive(_281)<br/>_281 = ((_231 as Continue).0: i32)<br/>_230 = _281<br/>StorageDead(_281)<br/>StorageDead(_254)<br/>StorageDead(_251)<br/>StorageDead(_241)<br/>StorageDead(_237)<br/>StorageDead(_234)<br/>StorageDead(_231)<br/>StorageLive(_282)<br/>StorageLive(_283)<br/>StorageLive(_284)<br/>StorageLive(_285)<br/>StorageLive(_286)<br/>_286 = _211<br/></td></tr><tr><td align="left">_285 = core::num::&lt;impl i128&gt;::signum(move _286)</td></tr></table>>];
    bb146__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">StorageLive(_278)<br/>_278 = ((_231 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_280)<br/>_280 = _278<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u32, u32), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _280)</td></tr></table>>];
    bb147__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left" balign="left">StorageDead(_280)<br/>StorageDead(_278)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb148__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left" balign="left">StorageDead(_286)<br/></td></tr><tr><td align="left">_284 = &lt;i128 as Cast&gt;::cast::&lt;i32&gt;(move _285)</td></tr></table>>];
    bb149__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">149</td></tr><tr><td align="left" balign="left">StorageDead(_285)<br/></td></tr><tr><td align="left">_283 = &lt;std::result::Result&lt;i32, error::ErrorCode&gt; as Try&gt;::branch(move _284)</td></tr></table>>];
    bb150__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">150</td></tr><tr><td align="left" balign="left">StorageDead(_284)<br/>_287 = discriminant(_283)<br/></td></tr><tr><td align="left">switchInt(move _287)</td></tr></table>>];
    bb151__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">151</td></tr><tr><td align="left" balign="left">StorageLive(_291)<br/>_291 = ((_283 as Continue).0: i32)<br/>_282 = _291<br/>StorageDead(_291)<br/>StorageLive(_292)<br/>StorageLive(_293)<br/>StorageLive(_294)<br/>_294 = _230<br/></td></tr><tr><td align="left">_293 = &lt;i32 as Ord&gt;::max(move _294, const 10_i32)</td></tr></table>>];
    bb152__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">152</td></tr><tr><td align="left" balign="left">StorageLive(_288)<br/>_288 = ((_283 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_290)<br/>_290 = _288<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u32, u32), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _290)</td></tr></table>>];
    bb153__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">153</td></tr><tr><td align="left" balign="left">StorageDead(_290)<br/>StorageDead(_288)<br/>StorageDead(_282)<br/>StorageDead(_230)<br/>StorageDead(_211)<br/>StorageDead(_283)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb154__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">154</td></tr><tr><td align="left" balign="left">StorageDead(_294)<br/>StorageLive(_295)<br/>StorageLive(_296)<br/>StorageLive(_297)<br/>_297 = (((*_1).1: state::perp_market::AMM).82: i32)<br/>_296 = Ne(move _297, const 0_i32)<br/></td></tr><tr><td align="left">switchInt(move _296)</td></tr></table>>];
    bb155__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">155</td></tr><tr><td align="left" balign="left">StorageDead(_297)<br/>StorageLive(_298)<br/>_298 = (((*_1).1: state::perp_market::AMM).82: i32)<br/></td></tr><tr><td align="left">_295 = core::num::&lt;impl i32&gt;::abs(move _298)</td></tr></table>>];
    bb156__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">156</td></tr><tr><td align="left" balign="left">StorageDead(_298)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb157__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">157</td></tr><tr><td align="left" balign="left">StorageDead(_297)<br/>StorageLive(_299)<br/>_299 = _13<br/></td></tr><tr><td align="left">_295 = core::num::&lt;impl i32&gt;::abs(move _299)</td></tr></table>>];
    bb158__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">158</td></tr><tr><td align="left" balign="left">StorageDead(_299)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb159__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">159</td></tr><tr><td align="left" balign="left">StorageDead(_296)<br/></td></tr><tr><td align="left">_292 = &lt;i32 as Ord&gt;::min(move _293, move _295)</td></tr></table>>];
    bb160__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">160</td></tr><tr><td align="left" balign="left">StorageDead(_295)<br/>StorageDead(_293)<br/>_300 = CheckedMul(_282, _292)<br/></td></tr><tr><td align="left">assert(!move (_300.1: bool), &quot;attempt to compute `{} * {}`, which would overflow&quot;, move _282, move _292)</td></tr></table>>];
    bb161__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">161</td></tr><tr><td align="left" balign="left">_210 = move (_300.0: i32)<br/>StorageDead(_292)<br/>StorageDead(_282)<br/>StorageDead(_230)<br/>StorageDead(_211)<br/>StorageDead(_283)<br/>StorageLive(_301)<br/>StorageLive(_302)<br/>StorageLive(_303)<br/>StorageLive(_304)<br/>_304 = (((*_1).1: state::perp_market::AMM).82: i32)<br/>StorageLive(_305)<br/>_305 = _210<br/></td></tr><tr><td align="left">_303 = &lt;i32 as SafeMath&gt;::safe_add(move _304, move _305)</td></tr></table>>];
    bb162__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">162</td></tr><tr><td align="left" balign="left">StorageDead(_305)<br/>StorageDead(_304)<br/></td></tr><tr><td align="left">_302 = &lt;std::result::Result&lt;i32, error::ErrorCode&gt; as Try&gt;::branch(move _303)</td></tr></table>>];
    bb163__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">163</td></tr><tr><td align="left" balign="left">StorageDead(_303)<br/>_306 = discriminant(_302)<br/></td></tr><tr><td align="left">switchInt(move _306)</td></tr></table>>];
    bb164__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">164</td></tr><tr><td align="left" balign="left">StorageLive(_310)<br/>_310 = ((_302 as Continue).0: i32)<br/>_301 = _310<br/>StorageDead(_310)<br/>(((*_1).1: state::perp_market::AMM).82: i32) = move _301<br/>StorageDead(_301)<br/>StorageDead(_302)<br/>StorageLive(_311)<br/>StorageLive(_312)<br/>_312 = _210<br/>_311 = Lt(move _312, const 0_i32)<br/></td></tr><tr><td align="left">switchInt(move _311)</td></tr></table>>];
    bb165__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">165</td></tr><tr><td align="left" balign="left">StorageLive(_307)<br/>_307 = ((_302 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_309)<br/>_309 = _307<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u32, u32), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _309)</td></tr></table>>];
    bb166__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">166</td></tr><tr><td align="left" balign="left">StorageDead(_309)<br/>StorageDead(_307)<br/>StorageDead(_301)<br/>StorageDead(_302)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb167__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">167</td></tr><tr><td align="left" balign="left">StorageDead(_312)<br/>StorageLive(_313)<br/>StorageLive(_314)<br/>StorageLive(_315)<br/>StorageLive(_316)<br/>_316 = (((*_1).1: state::perp_market::AMM).65: u32)<br/>StorageLive(_317)<br/>StorageLive(_318)<br/>_318 = _210<br/></td></tr><tr><td align="left">_317 = core::num::&lt;impl i32&gt;::unsigned_abs(move _318)</td></tr></table>>];
    bb168__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">168</td></tr><tr><td align="left" balign="left">StorageDead(_312)<br/>StorageLive(_335)<br/>StorageLive(_336)<br/>StorageLive(_337)<br/>StorageLive(_338)<br/>_338 = (((*_1).1: state::perp_market::AMM).66: u32)<br/>StorageLive(_339)<br/>StorageLive(_340)<br/>_340 = _210<br/></td></tr><tr><td align="left">_339 = core::num::&lt;impl i32&gt;::unsigned_abs(move _340)</td></tr></table>>];
    bb169__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">169</td></tr><tr><td align="left" balign="left">StorageDead(_318)<br/></td></tr><tr><td align="left">_315 = &lt;u32 as SafeMath&gt;::safe_add(move _316, move _317)</td></tr></table>>];
    bb170__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">170</td></tr><tr><td align="left" balign="left">StorageDead(_317)<br/>StorageDead(_316)<br/></td></tr><tr><td align="left">_314 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _315)</td></tr></table>>];
    bb171__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">171</td></tr><tr><td align="left" balign="left">StorageDead(_315)<br/>_319 = discriminant(_314)<br/></td></tr><tr><td align="left">switchInt(move _319)</td></tr></table>>];
    bb172__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">172</td></tr><tr><td align="left" balign="left">StorageLive(_323)<br/>_323 = ((_314 as Continue).0: u32)<br/>_313 = _323<br/>StorageDead(_323)<br/>(((*_1).1: state::perp_market::AMM).65: u32) = move _313<br/>StorageDead(_313)<br/>StorageDead(_314)<br/>StorageLive(_324)<br/>StorageLive(_325)<br/>StorageLive(_326)<br/>StorageLive(_327)<br/>_327 = (((*_1).1: state::perp_market::AMM).66: u32)<br/>StorageLive(_328)<br/>StorageLive(_329)<br/>_329 = (((*_1).1: state::perp_market::AMM).82: i32)<br/></td></tr><tr><td align="left">_328 = core::num::&lt;impl i32&gt;::unsigned_abs(move _329)</td></tr></table>>];
    bb173__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">173</td></tr><tr><td align="left" balign="left">StorageLive(_320)<br/>_320 = ((_314 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_322)<br/>_322 = _320<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u32, u32), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _322)</td></tr></table>>];
    bb174__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">174</td></tr><tr><td align="left" balign="left">StorageDead(_322)<br/>StorageDead(_320)<br/>StorageDead(_313)<br/>StorageDead(_314)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb175__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">175</td></tr><tr><td align="left" balign="left">StorageDead(_329)<br/></td></tr><tr><td align="left">_326 = &lt;u32 as SafeMath&gt;::safe_add(move _327, move _328)</td></tr></table>>];
    bb176__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">176</td></tr><tr><td align="left" balign="left">StorageDead(_328)<br/>StorageDead(_327)<br/></td></tr><tr><td align="left">_325 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _326)</td></tr></table>>];
    bb177__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">177</td></tr><tr><td align="left" balign="left">StorageDead(_326)<br/>_330 = discriminant(_325)<br/></td></tr><tr><td align="left">switchInt(move _330)</td></tr></table>>];
    bb178__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">178</td></tr><tr><td align="left" balign="left">StorageLive(_334)<br/>_334 = ((_325 as Continue).0: u32)<br/>_324 = _334<br/>StorageDead(_334)<br/>(((*_1).1: state::perp_market::AMM).66: u32) = move _324<br/>StorageDead(_324)<br/>StorageDead(_325)<br/>_204 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb179__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">179</td></tr><tr><td align="left" balign="left">StorageLive(_331)<br/>_331 = ((_325 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_333)<br/>_333 = _331<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u32, u32), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _333)</td></tr></table>>];
    bb180__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">180</td></tr><tr><td align="left" balign="left">StorageDead(_333)<br/>StorageDead(_331)<br/>StorageDead(_324)<br/>StorageDead(_325)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb181__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">181</td></tr><tr><td align="left" balign="left">StorageDead(_340)<br/></td></tr><tr><td align="left">_337 = &lt;u32 as SafeMath&gt;::safe_add(move _338, move _339)</td></tr></table>>];
    bb182__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">182</td></tr><tr><td align="left" balign="left">StorageDead(_339)<br/>StorageDead(_338)<br/></td></tr><tr><td align="left">_336 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _337)</td></tr></table>>];
    bb183__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">183</td></tr><tr><td align="left" balign="left">StorageDead(_337)<br/>_341 = discriminant(_336)<br/></td></tr><tr><td align="left">switchInt(move _341)</td></tr></table>>];
    bb184__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">184</td></tr><tr><td align="left" balign="left">StorageLive(_345)<br/>_345 = ((_336 as Continue).0: u32)<br/>_335 = _345<br/>StorageDead(_345)<br/>(((*_1).1: state::perp_market::AMM).66: u32) = move _335<br/>StorageDead(_335)<br/>StorageDead(_336)<br/>StorageLive(_346)<br/>StorageLive(_347)<br/>StorageLive(_348)<br/>StorageLive(_349)<br/>_349 = (((*_1).1: state::perp_market::AMM).65: u32)<br/>StorageLive(_350)<br/>StorageLive(_351)<br/>_351 = (((*_1).1: state::perp_market::AMM).82: i32)<br/></td></tr><tr><td align="left">_350 = core::num::&lt;impl i32&gt;::unsigned_abs(move _351)</td></tr></table>>];
    bb185__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">185</td></tr><tr><td align="left" balign="left">StorageLive(_342)<br/>_342 = ((_336 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_344)<br/>_344 = _342<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u32, u32), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _344)</td></tr></table>>];
    bb186__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">186</td></tr><tr><td align="left" balign="left">StorageDead(_344)<br/>StorageDead(_342)<br/>StorageDead(_335)<br/>StorageDead(_336)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb187__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">187</td></tr><tr><td align="left" balign="left">StorageDead(_351)<br/></td></tr><tr><td align="left">_348 = &lt;u32 as SafeMath&gt;::safe_add(move _349, move _350)</td></tr></table>>];
    bb188__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">188</td></tr><tr><td align="left" balign="left">StorageDead(_350)<br/>StorageDead(_349)<br/></td></tr><tr><td align="left">_347 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _348)</td></tr></table>>];
    bb189__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">189</td></tr><tr><td align="left" balign="left">StorageDead(_348)<br/>_352 = discriminant(_347)<br/></td></tr><tr><td align="left">switchInt(move _352)</td></tr></table>>];
    bb190__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">190</td></tr><tr><td align="left" balign="left">StorageLive(_356)<br/>_356 = ((_347 as Continue).0: u32)<br/>_346 = _356<br/>StorageDead(_356)<br/>(((*_1).1: state::perp_market::AMM).65: u32) = move _346<br/>StorageDead(_346)<br/>StorageDead(_347)<br/>_204 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb191__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">191</td></tr><tr><td align="left" balign="left">StorageLive(_353)<br/>_353 = ((_347 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_355)<br/>_355 = _353<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u32, u32), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _355)</td></tr></table>>];
    bb192__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">192</td></tr><tr><td align="left" balign="left">StorageDead(_355)<br/>StorageDead(_353)<br/>StorageDead(_346)<br/>StorageDead(_347)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb193__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">193</td></tr><tr><td align="left" balign="left">StorageDead(_311)<br/>StorageDead(_210)<br/>StorageDead(_206)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb194__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">194</td></tr><tr><td align="left" balign="left">StorageLive(_357)<br/>_357 = _13<br/>(((*_1).1: state::perp_market::AMM).82: i32) = move _357<br/>StorageDead(_357)<br/>_204 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb195__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">195</td></tr><tr><td align="left" balign="left">StorageDead(_205)<br/>StorageDead(_204)<br/>StorageLive(_358)<br/>StorageLive(_359)<br/>StorageLive(_360)<br/>StorageLive(_361)<br/>_361 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_360 = update_spread_reserves(move _361)</td></tr></table>>];
    bb196__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">196</td></tr><tr><td align="left" balign="left">StorageDead(_361)<br/></td></tr><tr><td align="left">_359 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _360)</td></tr></table>>];
    bb197__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">197</td></tr><tr><td align="left" balign="left">StorageDead(_360)<br/>_362 = discriminant(_359)<br/></td></tr><tr><td align="left">switchInt(move _362)</td></tr></table>>];
    bb198__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">198</td></tr><tr><td align="left" balign="left">StorageLive(_366)<br/>_366 = ((_359 as Continue).0: ())<br/>_358 = _366<br/>StorageDead(_366)<br/>StorageDead(_359)<br/>StorageDead(_358)<br/>StorageLive(_367)<br/>StorageLive(_368)<br/>_368 = _71<br/>StorageLive(_369)<br/>_369 = _72<br/>_367 = (move _368, move _369)<br/>StorageDead(_369)<br/>StorageDead(_368)<br/>_0 = std::result::Result::&lt;(u32, u32), error::ErrorCode&gt;::Ok(move _367)<br/>StorageDead(_367)<br/>StorageDead(_196)<br/>StorageDead(_72)<br/>StorageDead(_71)<br/>StorageDead(_13)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb199__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">199</td></tr><tr><td align="left" balign="left">StorageLive(_363)<br/>_363 = ((_359 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_365)<br/>_365 = _363<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u32, u32), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _365)</td></tr></table>>];
    bb200__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">200</td></tr><tr><td align="left" balign="left">StorageDead(_365)<br/>StorageDead(_363)<br/>StorageDead(_359)<br/>StorageDead(_358)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb201__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">201</td></tr><tr><td align="left" balign="left">StorageDead(_311)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb202__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">202</td></tr><tr><td align="left" balign="left">StorageDead(_250)<br/>StorageDead(_240)<br/>StorageDead(_239)<br/>StorageDead(_238)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb203__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">203</td></tr><tr><td align="left" balign="left">StorageDead(_236)<br/>StorageDead(_235)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb204__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">204</td></tr><tr><td align="left" balign="left">StorageDead(_233)<br/>StorageDead(_232)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb205__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">205</td></tr><tr><td align="left" balign="left">StorageDead(_254)<br/>StorageDead(_251)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb206__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">206</td></tr><tr><td align="left" balign="left">StorageDead(_241)<br/>StorageDead(_237)<br/>StorageDead(_234)<br/>StorageDead(_231)<br/>StorageDead(_230)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb207__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">207</td></tr><tr><td align="left" balign="left">StorageDead(_213)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb208__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">208</td></tr><tr><td align="left" balign="left">StorageDead(_211)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb209__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">209</td></tr><tr><td align="left" balign="left">StorageDead(_210)<br/>StorageDead(_206)<br/>StorageDead(_205)<br/>StorageDead(_204)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb210__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">210</td></tr><tr><td align="left" balign="left">StorageDead(_196)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb211__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">211</td></tr><tr><td align="left" balign="left">StorageDead(_157)<br/>StorageDead(_155)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb212__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">212</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb213__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">213</td></tr><tr><td align="left" balign="left">StorageDead(_115)<br/>StorageDead(_114)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb214__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">214</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb215__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">215</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb216__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">216</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb217__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">217</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_33)<br/>StorageDead(_29)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb218__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">218</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb219__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">219</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb220__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">220</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb221__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">221</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb222__0_86 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">222</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_86 -> bb1__0_86 [label="return"];
    bb1__0_86 -> bb2__0_86 [label="return"];
    bb2__0_86 -> bb3__0_86 [label="0"];
    bb2__0_86 -> bb5__0_86 [label="1"];
    bb2__0_86 -> bb4__0_86 [label="otherwise"];
    bb3__0_86 -> bb8__0_86 [label="0"];
    bb3__0_86 -> bb7__0_86 [label="otherwise"];
    bb5__0_86 -> bb6__0_86 [label="return"];
    bb6__0_86 -> bb221__0_86 [label=""];
    bb7__0_86 -> bb9__0_86 [label="return"];
    bb8__0_86 -> bb35__0_86 [label=""];
    bb9__0_86 -> bb10__0_86 [label="return"];
    bb10__0_86 -> bb11__0_86 [label="0"];
    bb10__0_86 -> bb12__0_86 [label="1"];
    bb10__0_86 -> bb4__0_86 [label="otherwise"];
    bb11__0_86 -> bb14__0_86 [label="return"];
    bb12__0_86 -> bb13__0_86 [label="return"];
    bb13__0_86 -> bb218__0_86 [label=""];
    bb14__0_86 -> bb15__0_86 [label="return"];
    bb15__0_86 -> bb16__0_86 [label="0"];
    bb15__0_86 -> bb17__0_86 [label="1"];
    bb15__0_86 -> bb4__0_86 [label="otherwise"];
    bb16__0_86 -> bb19__0_86 [label="return"];
    bb17__0_86 -> bb18__0_86 [label="return"];
    bb18__0_86 -> bb216__0_86 [label=""];
    bb19__0_86 -> bb20__0_86 [label="return"];
    bb20__0_86 -> bb21__0_86 [label="return"];
    bb21__0_86 -> bb22__0_86 [label="0"];
    bb21__0_86 -> bb23__0_86 [label="1"];
    bb21__0_86 -> bb4__0_86 [label="otherwise"];
    bb22__0_86 -> bb25__0_86 [label="return"];
    bb23__0_86 -> bb24__0_86 [label="return"];
    bb24__0_86 -> bb216__0_86 [label=""];
    bb25__0_86 -> bb26__0_86 [label="return"];
    bb26__0_86 -> bb27__0_86 [label="0"];
    bb26__0_86 -> bb28__0_86 [label="1"];
    bb26__0_86 -> bb4__0_86 [label="otherwise"];
    bb27__0_86 -> bb30__0_86 [label="return"];
    bb28__0_86 -> bb29__0_86 [label="return"];
    bb29__0_86 -> bb217__0_86 [label=""];
    bb30__0_86 -> bb31__0_86 [label="return"];
    bb31__0_86 -> bb32__0_86 [label="0"];
    bb31__0_86 -> bb33__0_86 [label="1"];
    bb31__0_86 -> bb4__0_86 [label="otherwise"];
    bb32__0_86 -> bb35__0_86 [label=""];
    bb33__0_86 -> bb34__0_86 [label="return"];
    bb34__0_86 -> bb219__0_86 [label=""];
    bb35__0_86 -> bb42__0_86 [label="0"];
    bb35__0_86 -> bb36__0_86 [label="otherwise"];
    bb36__0_86 -> bb37__0_86 [label="return"];
    bb37__0_86 -> bb38__0_86 [label="return"];
    bb38__0_86 -> bb39__0_86 [label="0"];
    bb38__0_86 -> bb40__0_86 [label="1"];
    bb38__0_86 -> bb4__0_86 [label="otherwise"];
    bb39__0_86 -> bb48__0_86 [label=""];
    bb40__0_86 -> bb41__0_86 [label="return"];
    bb41__0_86 -> bb215__0_86 [label=""];
    bb42__0_86 -> bb43__0_86 [label="return"];
    bb43__0_86 -> bb44__0_86 [label="return"];
    bb44__0_86 -> bb45__0_86 [label="0"];
    bb44__0_86 -> bb46__0_86 [label="1"];
    bb44__0_86 -> bb4__0_86 [label="otherwise"];
    bb45__0_86 -> bb48__0_86 [label=""];
    bb46__0_86 -> bb47__0_86 [label="return"];
    bb47__0_86 -> bb215__0_86 [label=""];
    bb48__0_86 -> bb72__0_86 [label="0"];
    bb48__0_86 -> bb49__0_86 [label="otherwise"];
    bb49__0_86 -> bb50__0_86 [label="return"];
    bb50__0_86 -> bb51__0_86 [label="return"];
    bb51__0_86 -> bb52__0_86 [label="return"];
    bb52__0_86 -> bb53__0_86 [label="0"];
    bb52__0_86 -> bb54__0_86 [label="1"];
    bb52__0_86 -> bb4__0_86 [label="otherwise"];
    bb53__0_86 -> bb56__0_86 [label="return"];
    bb54__0_86 -> bb55__0_86 [label="return"];
    bb55__0_86 -> bb212__0_86 [label=""];
    bb56__0_86 -> bb57__0_86 [label="return"];
    bb57__0_86 -> bb58__0_86 [label="return"];
    bb58__0_86 -> bb59__0_86 [label="0"];
    bb58__0_86 -> bb60__0_86 [label="1"];
    bb58__0_86 -> bb4__0_86 [label="otherwise"];
    bb59__0_86 -> bb62__0_86 [label="return"];
    bb60__0_86 -> bb61__0_86 [label="return"];
    bb61__0_86 -> bb212__0_86 [label=""];
    bb62__0_86 -> bb63__0_86 [label="return"];
    bb63__0_86 -> bb64__0_86 [label="return"];
    bb64__0_86 -> bb65__0_86 [label="return"];
    bb65__0_86 -> bb66__0_86 [label="return"];
    bb66__0_86 -> bb67__0_86 [label="0"];
    bb66__0_86 -> bb68__0_86 [label="1"];
    bb66__0_86 -> bb4__0_86 [label="otherwise"];
    bb67__0_86 -> bb70__0_86 [label="return"];
    bb68__0_86 -> bb69__0_86 [label="return"];
    bb69__0_86 -> bb212__0_86 [label=""];
    bb70__0_86 -> bb71__0_86 [label="return"];
    bb71__0_86 -> bb97__0_86 [label=""];
    bb72__0_86 -> bb95__0_86 [label="0"];
    bb72__0_86 -> bb73__0_86 [label="otherwise"];
    bb73__0_86 -> bb74__0_86 [label="return"];
    bb74__0_86 -> bb75__0_86 [label="return"];
    bb75__0_86 -> bb76__0_86 [label="0"];
    bb75__0_86 -> bb77__0_86 [label="1"];
    bb75__0_86 -> bb4__0_86 [label="otherwise"];
    bb76__0_86 -> bb79__0_86 [label="return"];
    bb77__0_86 -> bb78__0_86 [label="return"];
    bb78__0_86 -> bb211__0_86 [label=""];
    bb79__0_86 -> bb80__0_86 [label="return"];
    bb80__0_86 -> bb81__0_86 [label="return"];
    bb81__0_86 -> bb82__0_86 [label="0"];
    bb81__0_86 -> bb83__0_86 [label="1"];
    bb81__0_86 -> bb4__0_86 [label="otherwise"];
    bb82__0_86 -> bb85__0_86 [label="return"];
    bb83__0_86 -> bb84__0_86 [label="return"];
    bb84__0_86 -> bb211__0_86 [label=""];
    bb85__0_86 -> bb86__0_86 [label="return"];
    bb86__0_86 -> bb87__0_86 [label="return"];
    bb87__0_86 -> bb88__0_86 [label="return"];
    bb88__0_86 -> bb89__0_86 [label="return"];
    bb89__0_86 -> bb90__0_86 [label="0"];
    bb89__0_86 -> bb91__0_86 [label="1"];
    bb89__0_86 -> bb4__0_86 [label="otherwise"];
    bb90__0_86 -> bb93__0_86 [label="return"];
    bb91__0_86 -> bb92__0_86 [label="return"];
    bb92__0_86 -> bb211__0_86 [label=""];
    bb93__0_86 -> bb94__0_86 [label="return"];
    bb94__0_86 -> bb96__0_86 [label=""];
    bb95__0_86 -> bb96__0_86 [label=""];
    bb96__0_86 -> bb97__0_86 [label=""];
    bb97__0_86 -> bb98__0_86 [label="return"];
    bb98__0_86 -> bb99__0_86 [label="return"];
    bb99__0_86 -> bb101__0_86 [label="0"];
    bb99__0_86 -> bb100__0_86 [label="otherwise"];
    bb100__0_86 -> bb102__0_86 [label=""];
    bb101__0_86 -> bb102__0_86 [label=""];
    bb102__0_86 -> bb194__0_86 [label="0"];
    bb102__0_86 -> bb103__0_86 [label="otherwise"];
    bb103__0_86 -> bb104__0_86 [label="return"];
    bb104__0_86 -> bb105__0_86 [label="return"];
    bb105__0_86 -> bb106__0_86 [label="return"];
    bb106__0_86 -> bb107__0_86 [label="0"];
    bb106__0_86 -> bb108__0_86 [label="1"];
    bb106__0_86 -> bb4__0_86 [label="otherwise"];
    bb107__0_86 -> bb110__0_86 [label="return"];
    bb108__0_86 -> bb109__0_86 [label="return"];
    bb109__0_86 -> bb207__0_86 [label=""];
    bb110__0_86 -> bb111__0_86 [label="return"];
    bb111__0_86 -> bb112__0_86 [label="0"];
    bb111__0_86 -> bb113__0_86 [label="1"];
    bb111__0_86 -> bb4__0_86 [label="otherwise"];
    bb112__0_86 -> bb115__0_86 [label="return"];
    bb113__0_86 -> bb114__0_86 [label="return"];
    bb114__0_86 -> bb207__0_86 [label=""];
    bb115__0_86 -> bb116__0_86 [label="return"];
    bb116__0_86 -> bb117__0_86 [label="return"];
    bb117__0_86 -> bb118__0_86 [label="return"];
    bb118__0_86 -> bb119__0_86 [label="0"];
    bb118__0_86 -> bb120__0_86 [label="1"];
    bb118__0_86 -> bb4__0_86 [label="otherwise"];
    bb119__0_86 -> bb122__0_86 [label="return"];
    bb120__0_86 -> bb121__0_86 [label="return"];
    bb121__0_86 -> bb206__0_86 [label=""];
    bb122__0_86 -> bb123__0_86 [label="return"];
    bb123__0_86 -> bb124__0_86 [label="0"];
    bb123__0_86 -> bb125__0_86 [label="1"];
    bb123__0_86 -> bb4__0_86 [label="otherwise"];
    bb124__0_86 -> bb127__0_86 [label="return"];
    bb125__0_86 -> bb126__0_86 [label="return"];
    bb126__0_86 -> bb202__0_86 [label=""];
    bb127__0_86 -> bb128__0_86 [label="return"];
    bb128__0_86 -> bb129__0_86 [label="0"];
    bb128__0_86 -> bb130__0_86 [label="1"];
    bb128__0_86 -> bb4__0_86 [label="otherwise"];
    bb129__0_86 -> bb132__0_86 [label="return"];
    bb130__0_86 -> bb131__0_86 [label="return"];
    bb131__0_86 -> bb202__0_86 [label=""];
    bb132__0_86 -> bb133__0_86 [label="return"];
    bb133__0_86 -> bb134__0_86 [label="return"];
    bb134__0_86 -> bb135__0_86 [label="0"];
    bb134__0_86 -> bb136__0_86 [label="1"];
    bb134__0_86 -> bb4__0_86 [label="otherwise"];
    bb135__0_86 -> bb138__0_86 [label="return"];
    bb136__0_86 -> bb137__0_86 [label="return"];
    bb137__0_86 -> bb203__0_86 [label=""];
    bb138__0_86 -> bb139__0_86 [label="return"];
    bb139__0_86 -> bb140__0_86 [label="0"];
    bb139__0_86 -> bb141__0_86 [label="1"];
    bb139__0_86 -> bb4__0_86 [label="otherwise"];
    bb140__0_86 -> bb143__0_86 [label="return"];
    bb141__0_86 -> bb142__0_86 [label="return"];
    bb142__0_86 -> bb204__0_86 [label=""];
    bb143__0_86 -> bb144__0_86 [label="return"];
    bb144__0_86 -> bb145__0_86 [label="0"];
    bb144__0_86 -> bb146__0_86 [label="1"];
    bb144__0_86 -> bb4__0_86 [label="otherwise"];
    bb145__0_86 -> bb148__0_86 [label="return"];
    bb146__0_86 -> bb147__0_86 [label="return"];
    bb147__0_86 -> bb205__0_86 [label=""];
    bb148__0_86 -> bb149__0_86 [label="return"];
    bb149__0_86 -> bb150__0_86 [label="return"];
    bb150__0_86 -> bb151__0_86 [label="0"];
    bb150__0_86 -> bb152__0_86 [label="1"];
    bb150__0_86 -> bb4__0_86 [label="otherwise"];
    bb151__0_86 -> bb154__0_86 [label="return"];
    bb152__0_86 -> bb153__0_86 [label="return"];
    bb153__0_86 -> bb209__0_86 [label=""];
    bb154__0_86 -> bb157__0_86 [label="0"];
    bb154__0_86 -> bb155__0_86 [label="otherwise"];
    bb155__0_86 -> bb156__0_86 [label="return"];
    bb156__0_86 -> bb159__0_86 [label=""];
    bb157__0_86 -> bb158__0_86 [label="return"];
    bb158__0_86 -> bb159__0_86 [label=""];
    bb159__0_86 -> bb160__0_86 [label="return"];
    bb160__0_86 -> bb161__0_86 [label="success"];
    bb161__0_86 -> bb162__0_86 [label="return"];
    bb162__0_86 -> bb163__0_86 [label="return"];
    bb163__0_86 -> bb164__0_86 [label="0"];
    bb163__0_86 -> bb165__0_86 [label="1"];
    bb163__0_86 -> bb4__0_86 [label="otherwise"];
    bb164__0_86 -> bb168__0_86 [label="0"];
    bb164__0_86 -> bb167__0_86 [label="otherwise"];
    bb165__0_86 -> bb166__0_86 [label="return"];
    bb166__0_86 -> bb209__0_86 [label=""];
    bb167__0_86 -> bb169__0_86 [label="return"];
    bb168__0_86 -> bb181__0_86 [label="return"];
    bb169__0_86 -> bb170__0_86 [label="return"];
    bb170__0_86 -> bb171__0_86 [label="return"];
    bb171__0_86 -> bb172__0_86 [label="0"];
    bb171__0_86 -> bb173__0_86 [label="1"];
    bb171__0_86 -> bb4__0_86 [label="otherwise"];
    bb172__0_86 -> bb175__0_86 [label="return"];
    bb173__0_86 -> bb174__0_86 [label="return"];
    bb174__0_86 -> bb201__0_86 [label=""];
    bb175__0_86 -> bb176__0_86 [label="return"];
    bb176__0_86 -> bb177__0_86 [label="return"];
    bb177__0_86 -> bb178__0_86 [label="0"];
    bb177__0_86 -> bb179__0_86 [label="1"];
    bb177__0_86 -> bb4__0_86 [label="otherwise"];
    bb178__0_86 -> bb193__0_86 [label=""];
    bb179__0_86 -> bb180__0_86 [label="return"];
    bb180__0_86 -> bb201__0_86 [label=""];
    bb181__0_86 -> bb182__0_86 [label="return"];
    bb182__0_86 -> bb183__0_86 [label="return"];
    bb183__0_86 -> bb184__0_86 [label="0"];
    bb183__0_86 -> bb185__0_86 [label="1"];
    bb183__0_86 -> bb4__0_86 [label="otherwise"];
    bb184__0_86 -> bb187__0_86 [label="return"];
    bb185__0_86 -> bb186__0_86 [label="return"];
    bb186__0_86 -> bb201__0_86 [label=""];
    bb187__0_86 -> bb188__0_86 [label="return"];
    bb188__0_86 -> bb189__0_86 [label="return"];
    bb189__0_86 -> bb190__0_86 [label="0"];
    bb189__0_86 -> bb191__0_86 [label="1"];
    bb189__0_86 -> bb4__0_86 [label="otherwise"];
    bb190__0_86 -> bb193__0_86 [label=""];
    bb191__0_86 -> bb192__0_86 [label="return"];
    bb192__0_86 -> bb201__0_86 [label=""];
    bb193__0_86 -> bb195__0_86 [label=""];
    bb194__0_86 -> bb195__0_86 [label=""];
    bb195__0_86 -> bb196__0_86 [label="return"];
    bb196__0_86 -> bb197__0_86 [label="return"];
    bb197__0_86 -> bb198__0_86 [label="0"];
    bb197__0_86 -> bb199__0_86 [label="1"];
    bb197__0_86 -> bb4__0_86 [label="otherwise"];
    bb198__0_86 -> bb222__0_86 [label=""];
    bb199__0_86 -> bb200__0_86 [label="return"];
    bb200__0_86 -> bb210__0_86 [label=""];
    bb201__0_86 -> bb209__0_86 [label=""];
    bb202__0_86 -> bb203__0_86 [label=""];
    bb203__0_86 -> bb204__0_86 [label=""];
    bb204__0_86 -> bb205__0_86 [label=""];
    bb205__0_86 -> bb206__0_86 [label=""];
    bb206__0_86 -> bb208__0_86 [label=""];
    bb207__0_86 -> bb208__0_86 [label=""];
    bb208__0_86 -> bb209__0_86 [label=""];
    bb209__0_86 -> bb210__0_86 [label=""];
    bb210__0_86 -> bb214__0_86 [label=""];
    bb211__0_86 -> bb213__0_86 [label=""];
    bb212__0_86 -> bb213__0_86 [label=""];
    bb213__0_86 -> bb214__0_86 [label=""];
    bb214__0_86 -> bb220__0_86 [label=""];
    bb215__0_86 -> bb220__0_86 [label=""];
    bb216__0_86 -> bb217__0_86 [label=""];
    bb217__0_86 -> bb218__0_86 [label=""];
    bb218__0_86 -> bb219__0_86 [label=""];
    bb219__0_86 -> bb220__0_86 [label=""];
    bb220__0_86 -> bb221__0_86 [label=""];
    bb221__0_86 -> bb222__0_86 [label=""];
}
