digraph Mir_0_2606 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn math::orders::order_satisfies_trigger_condition(_1: &amp;ReErased state::user::Order, _2: u64) -&gt; std::result::Result&lt;bool, error::ErrorCode&gt;<br align="left"/>let mut _3: isize;<br align="left"/>let mut _4: bool;<br align="left"/>let mut _5: u64;<br align="left"/>let mut _6: u64;<br align="left"/>let mut _7: bool;<br align="left"/>let mut _8: u64;<br align="left"/>let mut _9: u64;<br align="left"/>let mut _10: error::ErrorCode;<br align="left"/>let mut _11: &amp;ReErased Closure(DefId(0:15129 ~ drift[d311]::math::orders::order_satisfies_trigger_condition::{closure#0}), [i8, Binder(extern &quot;RustCall&quot; fn(()) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let _12: Closure(DefId(0:15129 ~ drift[d311]::math::orders::order_satisfies_trigger_condition::{closure#0}), [i8, Binder(extern &quot;RustCall&quot; fn(()) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _13: ();<br align="left"/>let mut _14: &amp;ReErased Closure(DefId(0:15129 ~ drift[d311]::math::orders::order_satisfies_trigger_condition::{closure#0}), [i8, Binder(extern &quot;RustCall&quot; fn(()) -&gt; error::ErrorCode, []), ()]);<br align="left"/>debug order =&gt; _1;<br align="left"/>debug oracle_price =&gt; _2;<br align="left"/>>;
    bb0__0_2606 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_3 = discriminant(((*_1).21: state::user::OrderTriggerCondition))<br/></td></tr><tr><td align="left">switchInt(move _3)</td></tr></table>>];
    bb1__0_2606 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>StorageLive(_11)<br/>_14 = const _<br/>_11 = &amp;(*_14)<br/>StorageLive(_13)<br/>_13 = ()<br/></td></tr><tr><td align="left">_10 = &lt;{closure@programs/drift/src/error.rs:647:9: 647:11} as Fn&lt;()&gt;&gt;::call(move _11, move _13)</td></tr></table>>];
    bb2__0_2606 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = _2<br/>StorageLive(_6)<br/>_6 = ((*_1).5: u64)<br/>_4 = Gt(move _5, move _6)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>_0 = std::result::Result::&lt;bool, error::ErrorCode&gt;::Ok(move _4)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb3__0_2606 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = _2<br/>StorageLive(_9)<br/>_9 = ((*_1).5: u64)<br/>_7 = Lt(move _8, move _9)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/>_0 = std::result::Result::&lt;bool, error::ErrorCode&gt;::Ok(move _7)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb4__0_2606 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_11)<br/>_0 = std::result::Result::&lt;bool, error::ErrorCode&gt;::Err(move _10)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb5__0_2606 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2606 -> bb2__0_2606 [label="0"];
    bb0__0_2606 -> bb3__0_2606 [label="1"];
    bb0__0_2606 -> bb1__0_2606 [label="otherwise"];
    bb1__0_2606 -> bb4__0_2606 [label="return"];
    bb2__0_2606 -> bb5__0_2606 [label=""];
    bb3__0_2606 -> bb5__0_2606 [label=""];
    bb4__0_2606 -> bb5__0_2606 [label=""];
}
