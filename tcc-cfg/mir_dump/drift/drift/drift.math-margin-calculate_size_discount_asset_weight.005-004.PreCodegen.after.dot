digraph Mir_0_2460 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_size_discount_asset_weight(_1: u128, _2: u32, _3: u32) -&gt; std::result::Result&lt;u32, error::ErrorCode&gt;<br align="left"/>let _4: ();<br align="left"/>let mut _5: bool;<br align="left"/>let mut _6: u32;<br align="left"/>let mut _7: !;<br align="left"/>let mut _8: u32;<br align="left"/>let _9: u128;<br align="left"/>let mut _10: &amp;ReErased u128;<br align="left"/>let _11: u128;<br align="left"/>let mut _12: u128;<br align="left"/>let mut _13: u128;<br align="left"/>let mut _14: (u128, bool);<br align="left"/>let mut _15: (u128, bool);<br align="left"/>let _16: u128;<br align="left"/>let mut _17: u128;<br align="left"/>let mut _18: bool;<br align="left"/>let mut _19: (u128, bool);<br align="left"/>let _20: u32;<br align="left"/>let mut _21: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _22: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _23: u128;<br align="left"/>let mut _24: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _25: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _26: u128;<br align="left"/>let mut _27: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _28: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _29: u128;<br align="left"/>let mut _30: isize;<br align="left"/>let _31: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _32: !;<br align="left"/>let mut _33: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _34: u128;<br align="left"/>let mut _35: u128;<br align="left"/>let mut _36: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _37: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _38: u128;<br align="left"/>let mut _39: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _40: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _41: u128;<br align="left"/>let mut _42: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _43: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _44: u128;<br align="left"/>let mut _45: u128;<br align="left"/>let mut _46: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _47: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _48: u32;<br align="left"/>let mut _49: isize;<br align="left"/>let _50: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _51: !;<br align="left"/>let mut _52: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _53: u128;<br align="left"/>let mut _54: isize;<br align="left"/>let _55: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _56: !;<br align="left"/>let mut _57: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _58: u128;<br align="left"/>let mut _59: isize;<br align="left"/>let _60: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _61: !;<br align="left"/>let mut _62: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _63: u128;<br align="left"/>let mut _64: isize;<br align="left"/>let _65: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _66: !;<br align="left"/>let mut _67: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _68: u128;<br align="left"/>let mut _69: isize;<br align="left"/>let _70: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _71: !;<br align="left"/>let mut _72: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _73: u128;<br align="left"/>let mut _74: isize;<br align="left"/>let _75: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _76: !;<br align="left"/>let mut _77: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _78: u32;<br align="left"/>let _79: u32;<br align="left"/>let mut _80: u32;<br align="left"/>let mut _81: u32;<br align="left"/>let mut _82: u32;<br align="left"/>debug size =&gt; _1;<br align="left"/>debug imf_factor =&gt; _2;<br align="left"/>debug asset_weight =&gt; _3;<br align="left"/>debug size_sqrt =&gt; _9;<br align="left"/>debug imf_numerator =&gt; _16;<br align="left"/>debug size_discount_asset_weight =&gt; _20;<br align="left"/>debug residual =&gt; _31;<br align="left"/>debug val =&gt; _34;<br align="left"/>debug residual =&gt; _50;<br align="left"/>debug val =&gt; _53;<br align="left"/>debug residual =&gt; _55;<br align="left"/>debug val =&gt; _58;<br align="left"/>debug residual =&gt; _60;<br align="left"/>debug val =&gt; _63;<br align="left"/>debug residual =&gt; _65;<br align="left"/>debug val =&gt; _68;<br align="left"/>debug residual =&gt; _70;<br align="left"/>debug val =&gt; _73;<br align="left"/>debug residual =&gt; _75;<br align="left"/>debug val =&gt; _78;<br align="left"/>debug min_asset_weight =&gt; _79;<br align="left"/>>;
    bb0__0_2460 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = _2<br/>_5 = Eq(move _6, const 0_u32)<br/></td></tr><tr><td align="left">switchInt(move _5)</td></tr></table>>];
    bb1__0_2460 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageLive(_8)<br/>_8 = _3<br/>_0 = std::result::Result::&lt;u32, error::ErrorCode&gt;::Ok(move _8)<br/>StorageDead(_8)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb2__0_2460 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_4 = const ()<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>_13 = _1<br/>_14 = CheckedMul(_13, const 10_u128)<br/></td></tr><tr><td align="left">assert(!move (_14.1: bool), &quot;attempt to compute `{} * {}`, which would overflow&quot;, move _13, const 10_u128)</td></tr></table>>];
    bb3__0_2460 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">_12 = move (_14.0: u128)<br/>StorageDead(_13)<br/>_15 = CheckedAdd(_12, const 1_u128)<br/></td></tr><tr><td align="left">assert(!move (_15.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, move _12, const 1_u128)</td></tr></table>>];
    bb4__0_2460 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">_11 = move (_15.0: u128)<br/>_10 = &amp;_11<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">_9 = &lt;u128 as Roots&gt;::nth_root(move _10, const 2_u32)</td></tr></table>>];
    bb5__0_2460 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_11)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_18 = Eq(const 10_u128, const 0_u128)<br/></td></tr><tr><td align="left">assert(!move _18, &quot;attempt to divide `{}` by zero&quot;, const _)</td></tr></table>>];
    bb6__0_2460 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">_17 = Div(const _, const 10_u128)<br/>_19 = CheckedAdd(const _, _17)<br/></td></tr><tr><td align="left">assert(!move (_19.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, const _, move _17)</td></tr></table>>];
    bb7__0_2460 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">_16 = move (_19.0: u128)<br/>StorageDead(_17)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_29 = _16<br/></td></tr><tr><td align="left">_28 = &lt;u128 as SafeMath&gt;::safe_mul(move _29, const _)</td></tr></table>>];
    bb8__0_2460 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/></td></tr><tr><td align="left">_27 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _28)</td></tr></table>>];
    bb9__0_2460 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>_30 = discriminant(_27)<br/></td></tr><tr><td align="left">switchInt(move _30)</td></tr></table>>];
    bb10__0_2460 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_34)<br/>_34 = ((_27 as Continue).0: u128)<br/>_26 = _34<br/>StorageDead(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>_44 = _9<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>_48 = _2<br/></td></tr><tr><td align="left">_47 = &lt;u32 as Cast&gt;::cast::&lt;u128&gt;(move _48)</td></tr></table>>];
    bb11__0_2460 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb12__0_2460 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_31)<br/>_31 = ((_27 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_33)<br/>_33 = _31<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _33)</td></tr></table>>];
    bb13__0_2460 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_31)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_2460 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/></td></tr><tr><td align="left">_46 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _47)</td></tr></table>>];
    bb15__0_2460 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>_49 = discriminant(_46)<br/></td></tr><tr><td align="left">switchInt(move _49)</td></tr></table>>];
    bb16__0_2460 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_53)<br/>_53 = ((_46 as Continue).0: u128)<br/>_45 = _53<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">_43 = &lt;u128 as SafeMath&gt;::safe_mul(move _44, move _45)</td></tr></table>>];
    bb17__0_2460 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_50)<br/>_50 = ((_46 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_52)<br/>_52 = _50<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _52)</td></tr></table>>];
    bb18__0_2460 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_50)<br/>StorageDead(_45)<br/>StorageDead(_44)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_2460 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">_42 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _43)</td></tr></table>>];
    bb20__0_2460 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>_54 = discriminant(_42)<br/></td></tr><tr><td align="left">switchInt(move _54)</td></tr></table>>];
    bb21__0_2460 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_58)<br/>_58 = ((_42 as Continue).0: u128)<br/>_41 = _58<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">_40 = &lt;u128 as SafeMath&gt;::safe_div(move _41, const 100000_u128)</td></tr></table>>];
    bb22__0_2460 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_55)<br/>_55 = ((_42 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_57)<br/>_57 = _55<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _57)</td></tr></table>>];
    bb23__0_2460 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_2460 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/></td></tr><tr><td align="left">_39 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _40)</td></tr></table>>];
    bb25__0_2460 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>_59 = discriminant(_39)<br/></td></tr><tr><td align="left">switchInt(move _59)</td></tr></table>>];
    bb26__0_2460 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_63)<br/>_63 = ((_39 as Continue).0: u128)<br/>_38 = _63<br/>StorageDead(_63)<br/></td></tr><tr><td align="left">_37 = &lt;u128 as SafeMath&gt;::safe_add(const _, move _38)</td></tr></table>>];
    bb27__0_2460 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_60)<br/>_60 = ((_39 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_62)<br/>_62 = _60<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _62)</td></tr></table>>];
    bb28__0_2460 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_2460 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/></td></tr><tr><td align="left">_36 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _37)</td></tr></table>>];
    bb30__0_2460 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>_64 = discriminant(_36)<br/></td></tr><tr><td align="left">switchInt(move _64)</td></tr></table>>];
    bb31__0_2460 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_68)<br/>_68 = ((_36 as Continue).0: u128)<br/>_35 = _68<br/>StorageDead(_68)<br/></td></tr><tr><td align="left">_25 = &lt;u128 as SafeMath&gt;::safe_div(move _26, move _35)</td></tr></table>>];
    bb32__0_2460 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_65)<br/>_65 = ((_36 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_67)<br/>_67 = _65<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _67)</td></tr></table>>];
    bb33__0_2460 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_2460 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">_24 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _25)</td></tr></table>>];
    bb35__0_2460 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>_69 = discriminant(_24)<br/></td></tr><tr><td align="left">switchInt(move _69)</td></tr></table>>];
    bb36__0_2460 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageLive(_73)<br/>_73 = ((_24 as Continue).0: u128)<br/>_23 = _73<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">_22 = &lt;u128 as Cast&gt;::cast::&lt;u32&gt;(move _23)</td></tr></table>>];
    bb37__0_2460 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_70)<br/>_70 = ((_24 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_72)<br/>_72 = _70<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _72)</td></tr></table>>];
    bb38__0_2460 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_70)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_2460 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/></td></tr><tr><td align="left">_21 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _22)</td></tr></table>>];
    bb40__0_2460 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>_74 = discriminant(_21)<br/></td></tr><tr><td align="left">switchInt(move _74)</td></tr></table>>];
    bb41__0_2460 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageLive(_78)<br/>_78 = ((_21 as Continue).0: u32)<br/>_20 = _78<br/>StorageDead(_78)<br/>StorageDead(_46)<br/>StorageDead(_42)<br/>StorageDead(_39)<br/>StorageDead(_36)<br/>StorageDead(_27)<br/>StorageDead(_24)<br/>StorageDead(_21)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>_80 = _3<br/>StorageLive(_81)<br/>_81 = _20<br/></td></tr><tr><td align="left">_79 = std::cmp::min::&lt;u32&gt;(move _80, move _81)</td></tr></table>>];
    bb42__0_2460 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageLive(_75)<br/>_75 = ((_21 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_77)<br/>_77 = _75<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _77)</td></tr></table>>];
    bb43__0_2460 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>StorageDead(_75)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_2460 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>StorageDead(_80)<br/>StorageLive(_82)<br/>_82 = _79<br/>_0 = std::result::Result::&lt;u32, error::ErrorCode&gt;::Ok(move _82)<br/>StorageDead(_82)<br/>StorageDead(_79)<br/>StorageDead(_20)<br/>StorageDead(_16)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_2460 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_2460 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_2460 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_2460 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_2460 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_42)<br/>StorageDead(_39)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_2460 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_24)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/>StorageDead(_16)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb51__0_2460 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2460 -> bb2__0_2460 [label="0"];
    bb0__0_2460 -> bb1__0_2460 [label="otherwise"];
    bb1__0_2460 -> bb51__0_2460 [label=""];
    bb2__0_2460 -> bb3__0_2460 [label="success"];
    bb3__0_2460 -> bb4__0_2460 [label="success"];
    bb4__0_2460 -> bb5__0_2460 [label="return"];
    bb5__0_2460 -> bb6__0_2460 [label="success"];
    bb6__0_2460 -> bb7__0_2460 [label="success"];
    bb7__0_2460 -> bb8__0_2460 [label="return"];
    bb8__0_2460 -> bb9__0_2460 [label="return"];
    bb9__0_2460 -> bb10__0_2460 [label="0"];
    bb9__0_2460 -> bb12__0_2460 [label="1"];
    bb9__0_2460 -> bb11__0_2460 [label="otherwise"];
    bb10__0_2460 -> bb14__0_2460 [label="return"];
    bb12__0_2460 -> bb13__0_2460 [label="return"];
    bb13__0_2460 -> bb50__0_2460 [label=""];
    bb14__0_2460 -> bb15__0_2460 [label="return"];
    bb15__0_2460 -> bb16__0_2460 [label="0"];
    bb15__0_2460 -> bb17__0_2460 [label="1"];
    bb15__0_2460 -> bb11__0_2460 [label="otherwise"];
    bb16__0_2460 -> bb19__0_2460 [label="return"];
    bb17__0_2460 -> bb18__0_2460 [label="return"];
    bb18__0_2460 -> bb45__0_2460 [label=""];
    bb19__0_2460 -> bb20__0_2460 [label="return"];
    bb20__0_2460 -> bb21__0_2460 [label="0"];
    bb20__0_2460 -> bb22__0_2460 [label="1"];
    bb20__0_2460 -> bb11__0_2460 [label="otherwise"];
    bb21__0_2460 -> bb24__0_2460 [label="return"];
    bb22__0_2460 -> bb23__0_2460 [label="return"];
    bb23__0_2460 -> bb45__0_2460 [label=""];
    bb24__0_2460 -> bb25__0_2460 [label="return"];
    bb25__0_2460 -> bb26__0_2460 [label="0"];
    bb25__0_2460 -> bb27__0_2460 [label="1"];
    bb25__0_2460 -> bb11__0_2460 [label="otherwise"];
    bb26__0_2460 -> bb29__0_2460 [label="return"];
    bb27__0_2460 -> bb28__0_2460 [label="return"];
    bb28__0_2460 -> bb46__0_2460 [label=""];
    bb29__0_2460 -> bb30__0_2460 [label="return"];
    bb30__0_2460 -> bb31__0_2460 [label="0"];
    bb30__0_2460 -> bb32__0_2460 [label="1"];
    bb30__0_2460 -> bb11__0_2460 [label="otherwise"];
    bb31__0_2460 -> bb34__0_2460 [label="return"];
    bb32__0_2460 -> bb33__0_2460 [label="return"];
    bb33__0_2460 -> bb47__0_2460 [label=""];
    bb34__0_2460 -> bb35__0_2460 [label="return"];
    bb35__0_2460 -> bb36__0_2460 [label="0"];
    bb35__0_2460 -> bb37__0_2460 [label="1"];
    bb35__0_2460 -> bb11__0_2460 [label="otherwise"];
    bb36__0_2460 -> bb39__0_2460 [label="return"];
    bb37__0_2460 -> bb38__0_2460 [label="return"];
    bb38__0_2460 -> bb48__0_2460 [label=""];
    bb39__0_2460 -> bb40__0_2460 [label="return"];
    bb40__0_2460 -> bb41__0_2460 [label="0"];
    bb40__0_2460 -> bb42__0_2460 [label="1"];
    bb40__0_2460 -> bb11__0_2460 [label="otherwise"];
    bb41__0_2460 -> bb44__0_2460 [label="return"];
    bb42__0_2460 -> bb43__0_2460 [label="return"];
    bb43__0_2460 -> bb49__0_2460 [label=""];
    bb44__0_2460 -> bb51__0_2460 [label=""];
    bb45__0_2460 -> bb46__0_2460 [label=""];
    bb46__0_2460 -> bb47__0_2460 [label=""];
    bb47__0_2460 -> bb48__0_2460 [label=""];
    bb48__0_2460 -> bb49__0_2460 [label=""];
    bb49__0_2460 -> bb50__0_2460 [label=""];
    bb50__0_2460 -> bb51__0_2460 [label=""];
}
