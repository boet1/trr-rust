digraph Mir_0_7792 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;admin::InitializeOpenbookV2FulfillmentConfig&lt;'info&gt; as anchor_lang::AccountsExit&lt;'info&gt;&gt;::exit(_1: &amp;ReErased instructions::admin::InitializeOpenbookV2FulfillmentConfig&lt;ReErased&gt;, _2: &amp;ReErased anchor_lang::prelude::Pubkey) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _5: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _6: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _7: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let _8: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _9: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _10: Closure(DefId(0:7793 ~ drift[d311]::instructions::admin::{impl#236}::exit::{closure#0}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _11: isize;<br align="left"/>let _12: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _13: !;<br align="left"/>let mut _14: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _15: ();<br align="left"/>let _16: ();<br align="left"/>let mut _17: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _18: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _19: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _20: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::fulfillment_params::openbook_v2::OpenbookV2FulfillmentConfig&gt;;<br align="left"/>let _21: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::fulfillment_params::openbook_v2::OpenbookV2FulfillmentConfig&gt;;<br align="left"/>let mut _22: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _23: Closure(DefId(0:7794 ~ drift[d311]::instructions::admin::{impl#236}::exit::{closure#1}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _24: isize;<br align="left"/>let _25: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _26: !;<br align="left"/>let mut _27: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _28: ();<br align="left"/>let _29: ();<br align="left"/>let mut _30: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _31: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _32: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _33: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let _34: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _35: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _36: Closure(DefId(0:7795 ~ drift[d311]::instructions::admin::{impl#236}::exit::{closure#2}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _37: isize;<br align="left"/>let _38: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _39: !;<br align="left"/>let mut _40: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _41: ();<br align="left"/>let mut _42: ();<br align="left"/>let mut _43: isize;<br align="left"/>let mut _44: isize;<br align="left"/>let mut _45: isize;<br align="left"/>let mut _46: isize;<br align="left"/>let mut _47: isize;<br align="left"/>let mut _48: isize;<br align="left"/>let mut _49: isize;<br align="left"/>let mut _50: isize;<br align="left"/>let mut _51: isize;<br align="left"/>let mut _52: isize;<br align="left"/>let mut _53: isize;<br align="left"/>let mut _54: isize;<br align="left"/>let mut _55: isize;<br align="left"/>let mut _56: isize;<br align="left"/>let mut _57: isize;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug program_id =&gt; _2;<br align="left"/>debug residual =&gt; _12;<br align="left"/>debug val =&gt; _15;<br align="left"/>debug residual =&gt; _25;<br align="left"/>debug val =&gt; _28;<br align="left"/>debug residual =&gt; _38;<br align="left"/>debug val =&gt; _41;<br align="left"/>>;
    bb0__0_7792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = &amp;((*_1).2: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_7 = &amp;(*_8)<br/>StorageLive(_9)<br/>_9 = &amp;(*_2)<br/></td></tr><tr><td align="left">_6 = &lt;Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt; as anchor_lang::AccountsExit&lt;'_&gt;&gt;::exit(move _7, move _9)</td></tr></table>>];
    bb1__0_7792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_7)<br/>StorageLive(_10)<br/>_10 = {closure@programs/drift/src/instructions/admin.rs:5536:10: 5536:18}<br/></td></tr><tr><td align="left">_5 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/admin.rs:5536:10: 5536:18}&gt;(move _6, move _10)</td></tr></table>>];
    bb2__0_7792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb3__0_7792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_11 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _11)</td></tr></table>>];
    bb4__0_7792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_15)<br/>_15 = ((_4 as Continue).0: ())<br/>_3 = _15<br/>StorageDead(_15)<br/>_43 = discriminant(_4)<br/>StorageDead(_8)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_21 = &amp;((*_1).6: anchor_lang::prelude::AccountLoader&lt;'_, state::fulfillment_params::openbook_v2::OpenbookV2FulfillmentConfig&gt;)<br/>_20 = &amp;(*_21)<br/>StorageLive(_22)<br/>_22 = &amp;(*_2)<br/></td></tr><tr><td align="left">_19 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, OpenbookV2FulfillmentConfig&gt; as anchor_lang::AccountsExit&lt;'_&gt;&gt;::exit(move _20, move _22)</td></tr></table>>];
    bb5__0_7792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_7792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = move ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_14)<br/>_14 = move _12<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _14)</td></tr></table>>];
    bb7__0_7792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_12)<br/>_53 = discriminant(_4)<br/>StorageDead(_8)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_7792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_20)<br/>StorageLive(_23)<br/>_23 = {closure@programs/drift/src/instructions/admin.rs:5536:10: 5536:18}<br/></td></tr><tr><td align="left">_18 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/admin.rs:5536:10: 5536:18}&gt;(move _19, move _23)</td></tr></table>>];
    bb9__0_7792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">_17 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _18)</td></tr></table>>];
    bb10__0_7792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>_24 = discriminant(_17)<br/></td></tr><tr><td align="left">switchInt(move _24)</td></tr></table>>];
    bb11__0_7792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_28)<br/>_28 = ((_17 as Continue).0: ())<br/>_16 = _28<br/>StorageDead(_28)<br/>_45 = discriminant(_17)<br/>StorageDead(_21)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>_34 = &amp;((*_1).7: anchor_lang::prelude::Signer&lt;'_&gt;)<br/>_33 = &amp;(*_34)<br/>StorageLive(_35)<br/>_35 = &amp;(*_2)<br/></td></tr><tr><td align="left">_32 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::AccountsExit&lt;'_&gt;&gt;::exit(move _33, move _35)</td></tr></table>>];
    bb12__0_7792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_25)<br/>_25 = move ((_17 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_27)<br/>_27 = move _25<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _27)</td></tr></table>>];
    bb13__0_7792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_25)<br/>_51 = discriminant(_17)<br/>StorageDead(_21)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_7792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_33)<br/>StorageLive(_36)<br/>_36 = {closure@programs/drift/src/instructions/admin.rs:5536:10: 5536:18}<br/></td></tr><tr><td align="left">_31 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/admin.rs:5536:10: 5536:18}&gt;(move _32, move _36)</td></tr></table>>];
    bb15__0_7792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">_30 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _31)</td></tr></table>>];
    bb16__0_7792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>_37 = discriminant(_30)<br/></td></tr><tr><td align="left">switchInt(move _37)</td></tr></table>>];
    bb17__0_7792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_41)<br/>_41 = ((_30 as Continue).0: ())<br/>_29 = _41<br/>StorageDead(_41)<br/>_47 = discriminant(_30)<br/>StorageDead(_34)<br/>StorageDead(_30)<br/>StorageDead(_29)<br/>StorageLive(_42)<br/>_42 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _42)<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_7792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_38)<br/>_38 = move ((_30 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_40)<br/>_40 = move _38<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _40)</td></tr></table>>];
    bb19__0_7792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageDead(_38)<br/>_49 = discriminant(_30)<br/>StorageDead(_34)<br/>StorageDead(_30)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_7792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left">return</td></tr></table>>];
    bb21__0_7792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">21 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb22__0_7792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">22 (cleanup)</td></tr><tr><td align="left" balign="left">_55 = discriminant(_30)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_7792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">23 (cleanup)</td></tr><tr><td align="left" balign="left">_56 = discriminant(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_7792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">24 (cleanup)</td></tr><tr><td align="left" balign="left">_57 = discriminant(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_7792 -> bb1__0_7792 [label="return"];
    bb1__0_7792 -> bb2__0_7792 [label="return"];
    bb1__0_7792 -> bb21__0_7792 [label="unwind"];
    bb2__0_7792 -> bb3__0_7792 [label="return"];
    bb2__0_7792 -> bb21__0_7792 [label="unwind"];
    bb3__0_7792 -> bb4__0_7792 [label="0"];
    bb3__0_7792 -> bb6__0_7792 [label="1"];
    bb3__0_7792 -> bb5__0_7792 [label="otherwise"];
    bb4__0_7792 -> bb8__0_7792 [label="return"];
    bb6__0_7792 -> bb7__0_7792 [label="return"];
    bb6__0_7792 -> bb24__0_7792 [label="unwind"];
    bb7__0_7792 -> bb20__0_7792 [label=""];
    bb8__0_7792 -> bb9__0_7792 [label="return"];
    bb8__0_7792 -> bb21__0_7792 [label="unwind"];
    bb9__0_7792 -> bb10__0_7792 [label="return"];
    bb9__0_7792 -> bb21__0_7792 [label="unwind"];
    bb10__0_7792 -> bb11__0_7792 [label="0"];
    bb10__0_7792 -> bb12__0_7792 [label="1"];
    bb10__0_7792 -> bb5__0_7792 [label="otherwise"];
    bb11__0_7792 -> bb14__0_7792 [label="return"];
    bb12__0_7792 -> bb13__0_7792 [label="return"];
    bb12__0_7792 -> bb23__0_7792 [label="unwind"];
    bb13__0_7792 -> bb20__0_7792 [label=""];
    bb14__0_7792 -> bb15__0_7792 [label="return"];
    bb14__0_7792 -> bb21__0_7792 [label="unwind"];
    bb15__0_7792 -> bb16__0_7792 [label="return"];
    bb15__0_7792 -> bb21__0_7792 [label="unwind"];
    bb16__0_7792 -> bb17__0_7792 [label="0"];
    bb16__0_7792 -> bb18__0_7792 [label="1"];
    bb16__0_7792 -> bb5__0_7792 [label="otherwise"];
    bb17__0_7792 -> bb20__0_7792 [label=""];
    bb18__0_7792 -> bb19__0_7792 [label="return"];
    bb18__0_7792 -> bb22__0_7792 [label="unwind"];
    bb19__0_7792 -> bb20__0_7792 [label=""];
    bb22__0_7792 -> bb21__0_7792 [label=""];
    bb23__0_7792 -> bb21__0_7792 [label=""];
    bb24__0_7792 -> bb21__0_7792 [label=""];
}
