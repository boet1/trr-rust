digraph Mir_0_18719 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;OrderBitFlag as PartialEq&gt;::eq(_1: &amp;ReErased state::user::OrderBitFlag, _2: &amp;ReErased state::user::OrderBitFlag) -&gt; bool<br align="left"/>let _3: isize;<br align="left"/>let mut _4: &amp;ReErased state::user::OrderBitFlag;<br align="left"/>let _5: isize;<br align="left"/>let mut _6: &amp;ReErased state::user::OrderBitFlag;<br align="left"/>let mut _7: isize;<br align="left"/>let mut _8: isize;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug other =&gt; _2;<br align="left"/>debug __self_tag =&gt; _3;<br align="left"/>debug __arg1_tag =&gt; _5;<br align="left"/>>;
    bb0__0_18719 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>_4 = &amp;(*_1)<br/>_3 = discriminant((*_4))<br/>StorageDead(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = &amp;(*_2)<br/>_5 = discriminant((*_6))<br/>StorageDead(_6)<br/>StorageLive(_7)<br/>_7 = _3<br/>StorageLive(_8)<br/>_8 = _5<br/>_0 = Eq(move _7, move _8)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/>StorageDead(_5)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
}
