digraph Mir_0_3019 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn OpenbookV2Context::&lt;'a, 'b&gt;::load_openbook_v2_market(_1: &amp;ReErased state::fulfillment_params::openbook_v2::OpenbookV2Context&lt;ReErased, ReErased&gt;) -&gt; std::result::Result&lt;openbook_v2_light::Market, error::ErrorCode&gt;<br align="left"/>let _2: std::cell::Ref&lt;ReErased, openbook_v2_light::Market&gt;;<br align="left"/>let mut _3: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, openbook_v2_light::Market&gt;&gt;;<br align="left"/>let mut _4: std::result::Result&lt;std::cell::Ref&lt;ReErased, openbook_v2_light::Market&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _5: std::result::Result&lt;std::cell::Ref&lt;ReErased, openbook_v2_light::Market&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _6: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _7: Closure(DefId(0:3020 ~ drift[d311]::state::fulfillment_params::openbook_v2::{impl#1}::load_openbook_v2_market::{closure#0}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _8: isize;<br align="left"/>let _9: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _10: !;<br align="left"/>let mut _11: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _12: std::cell::Ref&lt;ReErased, openbook_v2_light::Market&gt;;<br align="left"/>let mut _13: openbook_v2_light::Market;<br align="left"/>let mut _14: &amp;ReErased openbook_v2_light::Market;<br align="left"/>let mut _15: &amp;ReErased std::cell::Ref&lt;ReErased, openbook_v2_light::Market&gt;;<br align="left"/>let mut _16: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _17: isize;<br align="left"/>let mut _18: isize;<br align="left"/>let mut _19: isize;<br align="left"/>let mut _20: isize;<br align="left"/>let mut _21: isize;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug market =&gt; _2;<br align="left"/>debug residual =&gt; _9;<br align="left"/>debug val =&gt; _12;<br align="left"/>>;
    bb0__0_3019 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_16 = deref_copy ((*_1).1: &amp;anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_6 = &amp;(*_16)<br/></td></tr><tr><td align="left">_5 = load_ref::&lt;openbook_v2_light::Market&gt;(move _6)</td></tr></table>>];
    bb1__0_3019 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageLive(_7)<br/>_7 = {closure@programs/drift/src/state/fulfillment_params/openbook_v2.rs:66:55: 66:58}<br/></td></tr><tr><td align="left">_4 = std::result::Result::&lt;Ref&lt;'_, openbook_v2_light::Market&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/state/fulfillment_params/openbook_v2.rs:66:55: 66:58}&gt;(move _5, move _7)</td></tr></table>>];
    bb2__0_3019 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">_3 = &lt;std::result::Result&lt;Ref&lt;'_, openbook_v2_light::Market&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _4)</td></tr></table>>];
    bb3__0_3019 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>_8 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb4__0_3019 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = move ((_3 as Continue).0: std::cell::Ref&lt;'_, openbook_v2_light::Market&gt;)<br/>_2 = move _12<br/>StorageDead(_12)<br/>_19 = discriminant(_3)<br/>StorageDead(_3)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = &amp;_2<br/></td></tr><tr><td align="left">_14 = &lt;Ref&lt;'_, openbook_v2_light::Market&gt; as Deref&gt;::deref(move _15)</td></tr></table>>];
    bb5__0_3019 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_3019 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>_9 = ((_3 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_11)<br/>_11 = _9<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;openbook_v2_light::Market, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _11)</td></tr></table>>];
    bb7__0_3019 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_9)<br/>_17 = discriminant(_3)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_3019 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">_13 = (*_14)<br/>StorageDead(_15)<br/>_0 = std::result::Result::&lt;openbook_v2_light::Market, error::ErrorCode&gt;::Ok(move _13)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">drop(_2)</td></tr></table>>];
    bb9__0_3019 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_2)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_3019 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left">return</td></tr></table>>];
    bb11__0_3019 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">11 (cleanup)</td></tr><tr><td align="left">drop(_2)</td></tr></table>>];
    bb12__0_3019 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">12 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb13__0_3019 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">13 (cleanup)</td></tr><tr><td align="left" balign="left">_21 = discriminant(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_3019 -> bb1__0_3019 [label="return"];
    bb1__0_3019 -> bb2__0_3019 [label="return"];
    bb1__0_3019 -> bb12__0_3019 [label="unwind"];
    bb2__0_3019 -> bb3__0_3019 [label="return"];
    bb2__0_3019 -> bb12__0_3019 [label="unwind"];
    bb3__0_3019 -> bb4__0_3019 [label="0"];
    bb3__0_3019 -> bb6__0_3019 [label="1"];
    bb3__0_3019 -> bb5__0_3019 [label="otherwise"];
    bb4__0_3019 -> bb8__0_3019 [label="return"];
    bb4__0_3019 -> bb11__0_3019 [label="unwind"];
    bb6__0_3019 -> bb7__0_3019 [label="return"];
    bb6__0_3019 -> bb13__0_3019 [label="unwind"];
    bb7__0_3019 -> bb10__0_3019 [label=""];
    bb8__0_3019 -> bb9__0_3019 [label="return"];
    bb8__0_3019 -> bb12__0_3019 [label="unwind"];
    bb9__0_3019 -> bb10__0_3019 [label=""];
    bb11__0_3019 -> bb12__0_3019 [label="return"];
    bb13__0_3019 -> bb12__0_3019 [label=""];
}
