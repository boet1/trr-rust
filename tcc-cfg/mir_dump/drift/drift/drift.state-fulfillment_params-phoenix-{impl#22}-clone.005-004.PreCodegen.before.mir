// MIR for `phoenix::<impl at programs/drift/src/state/fulfillment_params/phoenix.rs:113:10: 113:15>::clone` before PreCodegen

fn phoenix::<impl at programs/drift/src/state/fulfillment_params/phoenix.rs:113:10: 113:15>::clone(_1: &PhoenixMarketContext<'_, '_>) -> PhoenixMarketContext<'_, '_> {
    debug self => _1;
    let mut _0: state::fulfillment_params::phoenix::PhoenixMarketContext<'_, '_>;
    let mut _2: &anchor_lang::prelude::AccountInfo<'_>;
    let _3: &anchor_lang::prelude::AccountInfo<'_>;
    let mut _4: &&anchor_lang::prelude::AccountInfo<'_>;
    let _5: &&anchor_lang::prelude::AccountInfo<'_>;
    let mut _6: phoenix::program::MarketHeader;
    let mut _7: &phoenix::program::MarketHeader;
    let _8: &phoenix::program::MarketHeader;

    bb0: {
        StorageLive(_2);
        StorageLive(_3);
        StorageLive(_4);
        StorageLive(_5);
        _5 = &((*_1).0: &anchor_lang::prelude::AccountInfo<'_>);
        _4 = &(*_5);
        _3 = <&anchor_lang::prelude::AccountInfo<'_> as Clone>::clone(move _4) -> [return: bb1, unwind continue];
    }

    bb1: {
        _2 = &(*_3);
        StorageDead(_4);
        StorageLive(_6);
        StorageLive(_7);
        StorageLive(_8);
        _8 = &((*_1).1: phoenix::program::MarketHeader);
        _7 = &(*_8);
        _6 = <MarketHeader as Clone>::clone(move _7) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_7);
        _0 = PhoenixMarketContext::<'_, '_> { phoenix_market: move _2, header: move _6 };
        StorageDead(_6);
        StorageDead(_2);
        StorageDead(_8);
        StorageDead(_5);
        StorageDead(_3);
        return;
    }
}
