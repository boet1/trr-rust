// MIR for `admin::handle_update_spot_market_fuel` after PreCodegen

fn admin::handle_update_spot_market_fuel(_1: anchor_lang::context::Context<'_, '_, '_, '_, admin::AdminUpdateSpotMarketFuel<'_>>, _2: Option<u8>, _3: Option<u8>, _4: Option<u8>, _5: Option<u8>, _6: Option<u8>) -> std::result::Result<(), anchor_lang::error::Error> {
    debug ctx => _1;
    debug fuel_boost_deposits => _2;
    debug fuel_boost_borrows => _3;
    debug fuel_boost_taker => _4;
    debug fuel_boost_maker => _5;
    debug fuel_boost_insurance => _6;
    let mut _0: std::result::Result<(), anchor_lang::error::Error>;
    let _7: &mut std::cell::RefMut<'_, state::spot_market::SpotMarket>;
    let mut _8: std::cell::RefMut<'_, state::spot_market::SpotMarket>;
    let mut _9: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::ErrorCode>, std::cell::RefMut<'_, state::spot_market::SpotMarket>>;
    let mut _10: std::result::Result<std::cell::RefMut<'_, state::spot_market::SpotMarket>, error::ErrorCode>;
    let mut _11: std::result::Result<std::cell::RefMut<'_, state::spot_market::SpotMarket>, anchor_lang::error::Error>;
    let mut _12: &anchor_lang::prelude::AccountLoader<'_, state::spot_market::SpotMarket>;
    let mut _13: {closure@programs/drift/src/macros.rs:58:44: 58:47};
    let mut _14: isize;
    let _15: std::result::Result<std::convert::Infallible, error::ErrorCode>;
    let mut _16: !;
    let mut _17: std::result::Result<std::convert::Infallible, error::ErrorCode>;
    let _18: std::cell::RefMut<'_, state::spot_market::SpotMarket>;
    let _19: ();
    let mut _20: &str;
    let _21: &str;
    let mut _22: &std::string::String;
    let _23: &std::string::String;
    let _24: std::string::String;
    let mut _26: std::fmt::Arguments<'_>;
    let mut _27: &[&str];
    let mut _28: &[&str; 1];
    let _29: &[&str; 1];
    let _30: [&str; 1];
    let mut _31: &[core::fmt::rt::Argument<'_>];
    let mut _32: &[core::fmt::rt::Argument<'_>; 1];
    let _33: &[core::fmt::rt::Argument<'_>; 1];
    let _34: [core::fmt::rt::Argument<'_>; 1];
    let mut _35: core::fmt::rt::Argument<'_>;
    let mut _36: &u16;
    let _37: &u16;
    let _38: &state::spot_market::SpotMarket;
    let mut _39: &std::cell::RefMut<'_, state::spot_market::SpotMarket>;
    let _40: ();
    let mut _41: isize;
    let _43: ();
    let mut _44: &str;
    let _45: &str;
    let mut _46: &std::string::String;
    let _47: &std::string::String;
    let _48: std::string::String;
    let mut _50: std::fmt::Arguments<'_>;
    let mut _51: &[&str];
    let mut _52: &[&str; 2];
    let _53: &[&str; 2];
    let _54: [&str; 2];
    let mut _55: &[core::fmt::rt::Argument<'_>];
    let mut _56: &[core::fmt::rt::Argument<'_>; 2];
    let _57: &[core::fmt::rt::Argument<'_>; 2];
    let _58: [core::fmt::rt::Argument<'_>; 2];
    let mut _59: core::fmt::rt::Argument<'_>;
    let mut _60: &u8;
    let _61: &u8;
    let _62: &state::spot_market::SpotMarket;
    let mut _63: &std::cell::RefMut<'_, state::spot_market::SpotMarket>;
    let mut _64: core::fmt::rt::Argument<'_>;
    let mut _65: &u8;
    let _66: &u8;
    let mut _67: u8;
    let mut _68: &mut state::spot_market::SpotMarket;
    let mut _69: &mut std::cell::RefMut<'_, state::spot_market::SpotMarket>;
    let _70: ();
    let mut _71: &str;
    let _72: &str;
    let _73: ();
    let mut _74: isize;
    let _76: ();
    let mut _77: &str;
    let _78: &str;
    let mut _79: &std::string::String;
    let _80: &std::string::String;
    let _81: std::string::String;
    let mut _83: std::fmt::Arguments<'_>;
    let mut _84: &[&str];
    let mut _85: &[&str; 2];
    let _86: &[&str; 2];
    let _87: [&str; 2];
    let mut _88: &[core::fmt::rt::Argument<'_>];
    let mut _89: &[core::fmt::rt::Argument<'_>; 2];
    let _90: &[core::fmt::rt::Argument<'_>; 2];
    let _91: [core::fmt::rt::Argument<'_>; 2];
    let mut _92: core::fmt::rt::Argument<'_>;
    let mut _93: &u8;
    let _94: &u8;
    let _95: &state::spot_market::SpotMarket;
    let mut _96: &std::cell::RefMut<'_, state::spot_market::SpotMarket>;
    let mut _97: core::fmt::rt::Argument<'_>;
    let mut _98: &u8;
    let _99: &u8;
    let mut _100: u8;
    let mut _101: &mut state::spot_market::SpotMarket;
    let mut _102: &mut std::cell::RefMut<'_, state::spot_market::SpotMarket>;
    let _103: ();
    let mut _104: &str;
    let _105: &str;
    let _106: ();
    let mut _107: isize;
    let _109: ();
    let mut _110: &str;
    let _111: &str;
    let mut _112: &std::string::String;
    let _113: &std::string::String;
    let _114: std::string::String;
    let mut _116: std::fmt::Arguments<'_>;
    let mut _117: &[&str];
    let mut _118: &[&str; 2];
    let _119: &[&str; 2];
    let _120: [&str; 2];
    let mut _121: &[core::fmt::rt::Argument<'_>];
    let mut _122: &[core::fmt::rt::Argument<'_>; 2];
    let _123: &[core::fmt::rt::Argument<'_>; 2];
    let _124: [core::fmt::rt::Argument<'_>; 2];
    let mut _125: core::fmt::rt::Argument<'_>;
    let mut _126: &u8;
    let _127: &u8;
    let _128: &state::spot_market::SpotMarket;
    let mut _129: &std::cell::RefMut<'_, state::spot_market::SpotMarket>;
    let mut _130: core::fmt::rt::Argument<'_>;
    let mut _131: &u8;
    let _132: &u8;
    let mut _133: u8;
    let mut _134: &mut state::spot_market::SpotMarket;
    let mut _135: &mut std::cell::RefMut<'_, state::spot_market::SpotMarket>;
    let _136: ();
    let mut _137: &str;
    let _138: &str;
    let _139: ();
    let mut _140: isize;
    let _142: ();
    let mut _143: &str;
    let _144: &str;
    let mut _145: &std::string::String;
    let _146: &std::string::String;
    let _147: std::string::String;
    let mut _149: std::fmt::Arguments<'_>;
    let mut _150: &[&str];
    let mut _151: &[&str; 2];
    let _152: &[&str; 2];
    let _153: [&str; 2];
    let mut _154: &[core::fmt::rt::Argument<'_>];
    let mut _155: &[core::fmt::rt::Argument<'_>; 2];
    let _156: &[core::fmt::rt::Argument<'_>; 2];
    let _157: [core::fmt::rt::Argument<'_>; 2];
    let mut _158: core::fmt::rt::Argument<'_>;
    let mut _159: &u8;
    let _160: &u8;
    let _161: &state::spot_market::SpotMarket;
    let mut _162: &std::cell::RefMut<'_, state::spot_market::SpotMarket>;
    let mut _163: core::fmt::rt::Argument<'_>;
    let mut _164: &u8;
    let _165: &u8;
    let mut _166: u8;
    let mut _167: &mut state::spot_market::SpotMarket;
    let mut _168: &mut std::cell::RefMut<'_, state::spot_market::SpotMarket>;
    let _169: ();
    let mut _170: &str;
    let _171: &str;
    let _172: ();
    let mut _173: isize;
    let _175: ();
    let mut _176: &str;
    let _177: &str;
    let mut _178: &std::string::String;
    let _179: &std::string::String;
    let _180: std::string::String;
    let mut _182: std::fmt::Arguments<'_>;
    let mut _183: &[&str];
    let mut _184: &[&str; 2];
    let _185: &[&str; 2];
    let _186: [&str; 2];
    let mut _187: &[core::fmt::rt::Argument<'_>];
    let mut _188: &[core::fmt::rt::Argument<'_>; 2];
    let _189: &[core::fmt::rt::Argument<'_>; 2];
    let _190: [core::fmt::rt::Argument<'_>; 2];
    let mut _191: core::fmt::rt::Argument<'_>;
    let mut _192: &u8;
    let _193: &u8;
    let _194: &state::spot_market::SpotMarket;
    let mut _195: &std::cell::RefMut<'_, state::spot_market::SpotMarket>;
    let mut _196: core::fmt::rt::Argument<'_>;
    let mut _197: &u8;
    let _198: &u8;
    let mut _199: u8;
    let mut _200: &mut state::spot_market::SpotMarket;
    let mut _201: &mut std::cell::RefMut<'_, state::spot_market::SpotMarket>;
    let _202: ();
    let mut _203: &str;
    let _204: &str;
    let mut _205: ();
    let mut _212: &mut instructions::admin::AdminUpdateSpotMarketFuel<'_>;
    let mut _213: isize;
    let mut _214: isize;
    let mut _215: isize;
    let mut _216: isize;
    let mut _217: isize;
    scope 1 {
        debug spot_market => _7;
        let _25: std::string::String;
        let mut _211: &[&str; 1];
        scope 6 {
            debug res => _25;
        }
        scope 7 {
            debug fuel_boost_taker => _42;
            let _42: u8;
            let _49: std::string::String;
            let mut _210: &[&str; 2];
            scope 8 {
                debug res => _49;
            }
        }
        scope 9 {
            debug fuel_boost_maker => _75;
            let _75: u8;
            let _82: std::string::String;
            let mut _209: &[&str; 2];
            scope 10 {
                debug res => _82;
            }
        }
        scope 11 {
            debug fuel_boost_deposits => _108;
            let _108: u8;
            let _115: std::string::String;
            let mut _208: &[&str; 2];
            scope 12 {
                debug res => _115;
            }
        }
        scope 13 {
            debug fuel_boost_borrows => _141;
            let _141: u8;
            let _148: std::string::String;
            let mut _207: &[&str; 2];
            scope 14 {
                debug res => _148;
            }
        }
        scope 15 {
            debug fuel_boost_insurance => _174;
            let _174: u8;
            let _181: std::string::String;
            let mut _206: &[&str; 2];
            scope 16 {
                debug res => _181;
            }
        }
    }
    scope 2 {
        debug residual => _15;
        scope 3 {
        }
    }
    scope 4 {
        debug val => _18;
        scope 5 {
        }
    }

    bb0: {
        StorageLive(_7);
        StorageLive(_8);
        StorageLive(_9);
        StorageLive(_10);
        StorageLive(_11);
        StorageLive(_12);
        _212 = deref_copy (_1.1: &mut instructions::admin::AdminUpdateSpotMarketFuel<'_>);
        _12 = &((*_212).2: anchor_lang::prelude::AccountLoader<'_, state::spot_market::SpotMarket>);
        _11 = anchor_lang::prelude::AccountLoader::<'_, SpotMarket>::load_mut(move _12) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_12);
        StorageLive(_13);
        _13 = {closure@programs/drift/src/macros.rs:58:44: 58:47};
        _10 = std::result::Result::<RefMut<'_, SpotMarket>, anchor_lang::error::Error>::map_err::<error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}>(move _11, move _13) -> [return: bb2, unwind: bb89];
    }

    bb2: {
        StorageDead(_13);
        StorageDead(_11);
        _9 = <std::result::Result<RefMut<'_, SpotMarket>, error::ErrorCode> as Try>::branch(move _10) -> [return: bb3, unwind: bb89];
    }

    bb3: {
        StorageDead(_10);
        _14 = discriminant(_9);
        switchInt(move _14) -> [0: bb4, 1: bb6, otherwise: bb5];
    }

    bb4: {
        StorageLive(_18);
        _18 = move ((_9 as Continue).0: std::cell::RefMut<'_, state::spot_market::SpotMarket>);
        _8 = move _18;
        StorageDead(_18);
        _7 = &mut _8;
        _215 = discriminant(_9);
        StorageDead(_9);
        StorageLive(_19);
        StorageLive(_20);
        StorageLive(_21);
        StorageLive(_22);
        StorageLive(_23);
        StorageLive(_24);
        StorageLive(_25);
        StorageLive(_26);
        StorageLive(_27);
        StorageLive(_28);
        StorageLive(_29);
        _211 = const _;
        _29 = &(*_211);
        _28 = &(*_29);
        _27 = move _28 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_28);
        StorageLive(_31);
        StorageLive(_32);
        StorageLive(_33);
        StorageLive(_34);
        StorageLive(_35);
        StorageLive(_36);
        StorageLive(_37);
        StorageLive(_38);
        StorageLive(_39);
        _39 = &(*_7);
        _38 = <RefMut<'_, SpotMarket> as Deref>::deref(move _39) -> [return: bb8, unwind: bb88];
    }

    bb5: {
        unreachable;
    }

    bb6: {
        StorageLive(_15);
        _15 = ((_9 as Break).0: std::result::Result<std::convert::Infallible, error::ErrorCode>);
        StorageLive(_17);
        _17 = _15;
        _0 = <std::result::Result<(), anchor_lang::error::Error> as FromResidual<std::result::Result<Infallible, error::ErrorCode>>>::from_residual(move _17) -> [return: bb7, unwind: bb90];
    }

    bb7: {
        StorageDead(_17);
        StorageDead(_15);
        _213 = discriminant(_9);
        StorageDead(_9);
        StorageDead(_8);
        StorageDead(_7);
        goto -> bb81;
    }

    bb8: {
        StorageDead(_39);
        _37 = &((*_38).42: u16);
        _36 = &(*_37);
        _35 = core::fmt::rt::Argument::<'_>::new_display::<u16>(move _36) -> [return: bb9, unwind: bb88];
    }

    bb9: {
        StorageDead(_36);
        _34 = [move _35];
        StorageDead(_35);
        _33 = &_34;
        _32 = &(*_33);
        _31 = move _32 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_32);
        _26 = Arguments::<'_>::new_v1(move _27, move _31) -> [return: bb10, unwind: bb88];
    }

    bb10: {
        StorageDead(_31);
        StorageDead(_27);
        _25 = format(move _26) -> [return: bb11, unwind: bb88];
    }

    bb11: {
        StorageDead(_26);
        StorageDead(_38);
        StorageDead(_37);
        StorageDead(_34);
        StorageDead(_33);
        StorageDead(_29);
        _24 = move _25;
        StorageDead(_25);
        _23 = &_24;
        _22 = &(*_23);
        _21 = <String as Deref>::deref(move _22) -> [return: bb12, unwind: bb87];
    }

    bb12: {
        _20 = &(*_21);
        StorageDead(_22);
        _19 = solana_program::log::sol_log(move _20) -> [return: bb13, unwind: bb87];
    }

    bb13: {
        StorageDead(_20);
        drop(_24) -> [return: bb14, unwind: bb88];
    }

    bb14: {
        StorageDead(_24);
        StorageDead(_23);
        StorageDead(_21);
        StorageDead(_19);
        StorageLive(_40);
        _41 = discriminant(_4);
        switchInt(move _41) -> [1: bb15, otherwise: bb25];
    }

    bb15: {
        StorageLive(_42);
        _42 = ((_4 as Some).0: u8);
        StorageLive(_43);
        StorageLive(_44);
        StorageLive(_45);
        StorageLive(_46);
        StorageLive(_47);
        StorageLive(_48);
        StorageLive(_49);
        StorageLive(_50);
        StorageLive(_51);
        StorageLive(_52);
        StorageLive(_53);
        _210 = const _;
        _53 = &(*_210);
        _52 = &(*_53);
        _51 = move _52 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_52);
        StorageLive(_55);
        StorageLive(_56);
        StorageLive(_57);
        StorageLive(_58);
        StorageLive(_59);
        StorageLive(_60);
        StorageLive(_61);
        StorageLive(_62);
        StorageLive(_63);
        _63 = &(*_7);
        _62 = <RefMut<'_, SpotMarket> as Deref>::deref(move _63) -> [return: bb16, unwind: bb88];
    }

    bb16: {
        StorageDead(_63);
        _61 = &((*_62).58: u8);
        _60 = &(*_61);
        _59 = core::fmt::rt::Argument::<'_>::new_debug::<u8>(move _60) -> [return: bb17, unwind: bb88];
    }

    bb17: {
        StorageDead(_60);
        StorageLive(_64);
        StorageLive(_65);
        StorageLive(_66);
        _66 = &_42;
        _65 = &(*_66);
        _64 = core::fmt::rt::Argument::<'_>::new_debug::<u8>(move _65) -> [return: bb18, unwind: bb88];
    }

    bb18: {
        StorageDead(_65);
        _58 = [move _59, move _64];
        StorageDead(_64);
        StorageDead(_59);
        _57 = &_58;
        _56 = &(*_57);
        _55 = move _56 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_56);
        _50 = Arguments::<'_>::new_v1(move _51, move _55) -> [return: bb19, unwind: bb88];
    }

    bb19: {
        StorageDead(_55);
        StorageDead(_51);
        _49 = format(move _50) -> [return: bb20, unwind: bb88];
    }

    bb20: {
        StorageDead(_50);
        StorageDead(_66);
        StorageDead(_62);
        StorageDead(_61);
        StorageDead(_58);
        StorageDead(_57);
        StorageDead(_53);
        _48 = move _49;
        StorageDead(_49);
        _47 = &_48;
        _46 = &(*_47);
        _45 = <String as Deref>::deref(move _46) -> [return: bb21, unwind: bb86];
    }

    bb21: {
        _44 = &(*_45);
        StorageDead(_46);
        _43 = solana_program::log::sol_log(move _44) -> [return: bb22, unwind: bb86];
    }

    bb22: {
        StorageDead(_44);
        drop(_48) -> [return: bb23, unwind: bb88];
    }

    bb23: {
        StorageDead(_48);
        StorageDead(_47);
        StorageDead(_45);
        StorageDead(_43);
        StorageLive(_67);
        _67 = _42;
        StorageLive(_68);
        StorageLive(_69);
        _69 = &mut (*_7);
        _68 = <RefMut<'_, SpotMarket> as DerefMut>::deref_mut(move _69) -> [return: bb24, unwind: bb88];
    }

    bb24: {
        StorageDead(_69);
        ((*_68).58: u8) = move _67;
        StorageDead(_67);
        StorageDead(_68);
        _40 = const ();
        StorageDead(_42);
        goto -> bb27;
    }

    bb25: {
        StorageLive(_70);
        StorageLive(_71);
        StorageLive(_72);
        _72 = const "spot_market.fuel_boost_taker: unchanged";
        _71 = &(*_72);
        _70 = solana_program::log::sol_log(move _71) -> [return: bb26, unwind: bb88];
    }

    bb26: {
        StorageDead(_71);
        StorageDead(_72);
        StorageDead(_70);
        _40 = const ();
        goto -> bb27;
    }

    bb27: {
        StorageDead(_40);
        StorageLive(_73);
        _74 = discriminant(_5);
        switchInt(move _74) -> [1: bb28, otherwise: bb38];
    }

    bb28: {
        StorageLive(_75);
        _75 = ((_5 as Some).0: u8);
        StorageLive(_76);
        StorageLive(_77);
        StorageLive(_78);
        StorageLive(_79);
        StorageLive(_80);
        StorageLive(_81);
        StorageLive(_82);
        StorageLive(_83);
        StorageLive(_84);
        StorageLive(_85);
        StorageLive(_86);
        _209 = const _;
        _86 = &(*_209);
        _85 = &(*_86);
        _84 = move _85 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_85);
        StorageLive(_88);
        StorageLive(_89);
        StorageLive(_90);
        StorageLive(_91);
        StorageLive(_92);
        StorageLive(_93);
        StorageLive(_94);
        StorageLive(_95);
        StorageLive(_96);
        _96 = &(*_7);
        _95 = <RefMut<'_, SpotMarket> as Deref>::deref(move _96) -> [return: bb29, unwind: bb88];
    }

    bb29: {
        StorageDead(_96);
        _94 = &((*_95).59: u8);
        _93 = &(*_94);
        _92 = core::fmt::rt::Argument::<'_>::new_debug::<u8>(move _93) -> [return: bb30, unwind: bb88];
    }

    bb30: {
        StorageDead(_93);
        StorageLive(_97);
        StorageLive(_98);
        StorageLive(_99);
        _99 = &_75;
        _98 = &(*_99);
        _97 = core::fmt::rt::Argument::<'_>::new_debug::<u8>(move _98) -> [return: bb31, unwind: bb88];
    }

    bb31: {
        StorageDead(_98);
        _91 = [move _92, move _97];
        StorageDead(_97);
        StorageDead(_92);
        _90 = &_91;
        _89 = &(*_90);
        _88 = move _89 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_89);
        _83 = Arguments::<'_>::new_v1(move _84, move _88) -> [return: bb32, unwind: bb88];
    }

    bb32: {
        StorageDead(_88);
        StorageDead(_84);
        _82 = format(move _83) -> [return: bb33, unwind: bb88];
    }

    bb33: {
        StorageDead(_83);
        StorageDead(_99);
        StorageDead(_95);
        StorageDead(_94);
        StorageDead(_91);
        StorageDead(_90);
        StorageDead(_86);
        _81 = move _82;
        StorageDead(_82);
        _80 = &_81;
        _79 = &(*_80);
        _78 = <String as Deref>::deref(move _79) -> [return: bb34, unwind: bb85];
    }

    bb34: {
        _77 = &(*_78);
        StorageDead(_79);
        _76 = solana_program::log::sol_log(move _77) -> [return: bb35, unwind: bb85];
    }

    bb35: {
        StorageDead(_77);
        drop(_81) -> [return: bb36, unwind: bb88];
    }

    bb36: {
        StorageDead(_81);
        StorageDead(_80);
        StorageDead(_78);
        StorageDead(_76);
        StorageLive(_100);
        _100 = _75;
        StorageLive(_101);
        StorageLive(_102);
        _102 = &mut (*_7);
        _101 = <RefMut<'_, SpotMarket> as DerefMut>::deref_mut(move _102) -> [return: bb37, unwind: bb88];
    }

    bb37: {
        StorageDead(_102);
        ((*_101).59: u8) = move _100;
        StorageDead(_100);
        StorageDead(_101);
        _73 = const ();
        StorageDead(_75);
        goto -> bb40;
    }

    bb38: {
        StorageLive(_103);
        StorageLive(_104);
        StorageLive(_105);
        _105 = const "spot_market.fuel_boost_maker: unchanged";
        _104 = &(*_105);
        _103 = solana_program::log::sol_log(move _104) -> [return: bb39, unwind: bb88];
    }

    bb39: {
        StorageDead(_104);
        StorageDead(_105);
        StorageDead(_103);
        _73 = const ();
        goto -> bb40;
    }

    bb40: {
        StorageDead(_73);
        StorageLive(_106);
        _107 = discriminant(_2);
        switchInt(move _107) -> [1: bb41, otherwise: bb51];
    }

    bb41: {
        StorageLive(_108);
        _108 = ((_2 as Some).0: u8);
        StorageLive(_109);
        StorageLive(_110);
        StorageLive(_111);
        StorageLive(_112);
        StorageLive(_113);
        StorageLive(_114);
        StorageLive(_115);
        StorageLive(_116);
        StorageLive(_117);
        StorageLive(_118);
        StorageLive(_119);
        _208 = const _;
        _119 = &(*_208);
        _118 = &(*_119);
        _117 = move _118 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_118);
        StorageLive(_121);
        StorageLive(_122);
        StorageLive(_123);
        StorageLive(_124);
        StorageLive(_125);
        StorageLive(_126);
        StorageLive(_127);
        StorageLive(_128);
        StorageLive(_129);
        _129 = &(*_7);
        _128 = <RefMut<'_, SpotMarket> as Deref>::deref(move _129) -> [return: bb42, unwind: bb88];
    }

    bb42: {
        StorageDead(_129);
        _127 = &((*_128).56: u8);
        _126 = &(*_127);
        _125 = core::fmt::rt::Argument::<'_>::new_debug::<u8>(move _126) -> [return: bb43, unwind: bb88];
    }

    bb43: {
        StorageDead(_126);
        StorageLive(_130);
        StorageLive(_131);
        StorageLive(_132);
        _132 = &_108;
        _131 = &(*_132);
        _130 = core::fmt::rt::Argument::<'_>::new_debug::<u8>(move _131) -> [return: bb44, unwind: bb88];
    }

    bb44: {
        StorageDead(_131);
        _124 = [move _125, move _130];
        StorageDead(_130);
        StorageDead(_125);
        _123 = &_124;
        _122 = &(*_123);
        _121 = move _122 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_122);
        _116 = Arguments::<'_>::new_v1(move _117, move _121) -> [return: bb45, unwind: bb88];
    }

    bb45: {
        StorageDead(_121);
        StorageDead(_117);
        _115 = format(move _116) -> [return: bb46, unwind: bb88];
    }

    bb46: {
        StorageDead(_116);
        StorageDead(_132);
        StorageDead(_128);
        StorageDead(_127);
        StorageDead(_124);
        StorageDead(_123);
        StorageDead(_119);
        _114 = move _115;
        StorageDead(_115);
        _113 = &_114;
        _112 = &(*_113);
        _111 = <String as Deref>::deref(move _112) -> [return: bb47, unwind: bb84];
    }

    bb47: {
        _110 = &(*_111);
        StorageDead(_112);
        _109 = solana_program::log::sol_log(move _110) -> [return: bb48, unwind: bb84];
    }

    bb48: {
        StorageDead(_110);
        drop(_114) -> [return: bb49, unwind: bb88];
    }

    bb49: {
        StorageDead(_114);
        StorageDead(_113);
        StorageDead(_111);
        StorageDead(_109);
        StorageLive(_133);
        _133 = _108;
        StorageLive(_134);
        StorageLive(_135);
        _135 = &mut (*_7);
        _134 = <RefMut<'_, SpotMarket> as DerefMut>::deref_mut(move _135) -> [return: bb50, unwind: bb88];
    }

    bb50: {
        StorageDead(_135);
        ((*_134).56: u8) = move _133;
        StorageDead(_133);
        StorageDead(_134);
        _106 = const ();
        StorageDead(_108);
        goto -> bb53;
    }

    bb51: {
        StorageLive(_136);
        StorageLive(_137);
        StorageLive(_138);
        _138 = const "spot_market.fuel_boost_deposits: unchanged";
        _137 = &(*_138);
        _136 = solana_program::log::sol_log(move _137) -> [return: bb52, unwind: bb88];
    }

    bb52: {
        StorageDead(_137);
        StorageDead(_138);
        StorageDead(_136);
        _106 = const ();
        goto -> bb53;
    }

    bb53: {
        StorageDead(_106);
        StorageLive(_139);
        _140 = discriminant(_3);
        switchInt(move _140) -> [1: bb54, otherwise: bb64];
    }

    bb54: {
        StorageLive(_141);
        _141 = ((_3 as Some).0: u8);
        StorageLive(_142);
        StorageLive(_143);
        StorageLive(_144);
        StorageLive(_145);
        StorageLive(_146);
        StorageLive(_147);
        StorageLive(_148);
        StorageLive(_149);
        StorageLive(_150);
        StorageLive(_151);
        StorageLive(_152);
        _207 = const _;
        _152 = &(*_207);
        _151 = &(*_152);
        _150 = move _151 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_151);
        StorageLive(_154);
        StorageLive(_155);
        StorageLive(_156);
        StorageLive(_157);
        StorageLive(_158);
        StorageLive(_159);
        StorageLive(_160);
        StorageLive(_161);
        StorageLive(_162);
        _162 = &(*_7);
        _161 = <RefMut<'_, SpotMarket> as Deref>::deref(move _162) -> [return: bb55, unwind: bb88];
    }

    bb55: {
        StorageDead(_162);
        _160 = &((*_161).57: u8);
        _159 = &(*_160);
        _158 = core::fmt::rt::Argument::<'_>::new_debug::<u8>(move _159) -> [return: bb56, unwind: bb88];
    }

    bb56: {
        StorageDead(_159);
        StorageLive(_163);
        StorageLive(_164);
        StorageLive(_165);
        _165 = &_141;
        _164 = &(*_165);
        _163 = core::fmt::rt::Argument::<'_>::new_debug::<u8>(move _164) -> [return: bb57, unwind: bb88];
    }

    bb57: {
        StorageDead(_164);
        _157 = [move _158, move _163];
        StorageDead(_163);
        StorageDead(_158);
        _156 = &_157;
        _155 = &(*_156);
        _154 = move _155 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_155);
        _149 = Arguments::<'_>::new_v1(move _150, move _154) -> [return: bb58, unwind: bb88];
    }

    bb58: {
        StorageDead(_154);
        StorageDead(_150);
        _148 = format(move _149) -> [return: bb59, unwind: bb88];
    }

    bb59: {
        StorageDead(_149);
        StorageDead(_165);
        StorageDead(_161);
        StorageDead(_160);
        StorageDead(_157);
        StorageDead(_156);
        StorageDead(_152);
        _147 = move _148;
        StorageDead(_148);
        _146 = &_147;
        _145 = &(*_146);
        _144 = <String as Deref>::deref(move _145) -> [return: bb60, unwind: bb83];
    }

    bb60: {
        _143 = &(*_144);
        StorageDead(_145);
        _142 = solana_program::log::sol_log(move _143) -> [return: bb61, unwind: bb83];
    }

    bb61: {
        StorageDead(_143);
        drop(_147) -> [return: bb62, unwind: bb88];
    }

    bb62: {
        StorageDead(_147);
        StorageDead(_146);
        StorageDead(_144);
        StorageDead(_142);
        StorageLive(_166);
        _166 = _141;
        StorageLive(_167);
        StorageLive(_168);
        _168 = &mut (*_7);
        _167 = <RefMut<'_, SpotMarket> as DerefMut>::deref_mut(move _168) -> [return: bb63, unwind: bb88];
    }

    bb63: {
        StorageDead(_168);
        ((*_167).57: u8) = move _166;
        StorageDead(_166);
        StorageDead(_167);
        _139 = const ();
        StorageDead(_141);
        goto -> bb66;
    }

    bb64: {
        StorageLive(_169);
        StorageLive(_170);
        StorageLive(_171);
        _171 = const "spot_market.fuel_boost_borrows: unchanged";
        _170 = &(*_171);
        _169 = solana_program::log::sol_log(move _170) -> [return: bb65, unwind: bb88];
    }

    bb65: {
        StorageDead(_170);
        StorageDead(_171);
        StorageDead(_169);
        _139 = const ();
        goto -> bb66;
    }

    bb66: {
        StorageDead(_139);
        StorageLive(_172);
        _173 = discriminant(_6);
        switchInt(move _173) -> [1: bb67, otherwise: bb77];
    }

    bb67: {
        StorageLive(_174);
        _174 = ((_6 as Some).0: u8);
        StorageLive(_175);
        StorageLive(_176);
        StorageLive(_177);
        StorageLive(_178);
        StorageLive(_179);
        StorageLive(_180);
        StorageLive(_181);
        StorageLive(_182);
        StorageLive(_183);
        StorageLive(_184);
        StorageLive(_185);
        _206 = const _;
        _185 = &(*_206);
        _184 = &(*_185);
        _183 = move _184 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_184);
        StorageLive(_187);
        StorageLive(_188);
        StorageLive(_189);
        StorageLive(_190);
        StorageLive(_191);
        StorageLive(_192);
        StorageLive(_193);
        StorageLive(_194);
        StorageLive(_195);
        _195 = &(*_7);
        _194 = <RefMut<'_, SpotMarket> as Deref>::deref(move _195) -> [return: bb68, unwind: bb88];
    }

    bb68: {
        StorageDead(_195);
        _193 = &((*_194).60: u8);
        _192 = &(*_193);
        _191 = core::fmt::rt::Argument::<'_>::new_debug::<u8>(move _192) -> [return: bb69, unwind: bb88];
    }

    bb69: {
        StorageDead(_192);
        StorageLive(_196);
        StorageLive(_197);
        StorageLive(_198);
        _198 = &_174;
        _197 = &(*_198);
        _196 = core::fmt::rt::Argument::<'_>::new_debug::<u8>(move _197) -> [return: bb70, unwind: bb88];
    }

    bb70: {
        StorageDead(_197);
        _190 = [move _191, move _196];
        StorageDead(_196);
        StorageDead(_191);
        _189 = &_190;
        _188 = &(*_189);
        _187 = move _188 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_188);
        _182 = Arguments::<'_>::new_v1(move _183, move _187) -> [return: bb71, unwind: bb88];
    }

    bb71: {
        StorageDead(_187);
        StorageDead(_183);
        _181 = format(move _182) -> [return: bb72, unwind: bb88];
    }

    bb72: {
        StorageDead(_182);
        StorageDead(_198);
        StorageDead(_194);
        StorageDead(_193);
        StorageDead(_190);
        StorageDead(_189);
        StorageDead(_185);
        _180 = move _181;
        StorageDead(_181);
        _179 = &_180;
        _178 = &(*_179);
        _177 = <String as Deref>::deref(move _178) -> [return: bb73, unwind: bb82];
    }

    bb73: {
        _176 = &(*_177);
        StorageDead(_178);
        _175 = solana_program::log::sol_log(move _176) -> [return: bb74, unwind: bb82];
    }

    bb74: {
        StorageDead(_176);
        drop(_180) -> [return: bb75, unwind: bb88];
    }

    bb75: {
        StorageDead(_180);
        StorageDead(_179);
        StorageDead(_177);
        StorageDead(_175);
        StorageLive(_199);
        _199 = _174;
        StorageLive(_200);
        StorageLive(_201);
        _201 = &mut (*_7);
        _200 = <RefMut<'_, SpotMarket> as DerefMut>::deref_mut(move _201) -> [return: bb76, unwind: bb88];
    }

    bb76: {
        StorageDead(_201);
        ((*_200).60: u8) = move _199;
        StorageDead(_199);
        StorageDead(_200);
        _172 = const ();
        StorageDead(_174);
        goto -> bb79;
    }

    bb77: {
        StorageLive(_202);
        StorageLive(_203);
        StorageLive(_204);
        _204 = const "spot_market.fuel_boost_insurance: unchanged";
        _203 = &(*_204);
        _202 = solana_program::log::sol_log(move _203) -> [return: bb78, unwind: bb88];
    }

    bb78: {
        StorageDead(_203);
        StorageDead(_204);
        StorageDead(_202);
        _172 = const ();
        goto -> bb79;
    }

    bb79: {
        StorageDead(_172);
        StorageLive(_205);
        _205 = ();
        _0 = std::result::Result::<(), anchor_lang::error::Error>::Ok(move _205);
        StorageDead(_205);
        drop(_8) -> [return: bb80, unwind: bb89];
    }

    bb80: {
        StorageDead(_8);
        StorageDead(_7);
        goto -> bb81;
    }

    bb81: {
        return;
    }

    bb82 (cleanup): {
        drop(_180) -> [return: bb88, unwind terminate(cleanup)];
    }

    bb83 (cleanup): {
        drop(_147) -> [return: bb88, unwind terminate(cleanup)];
    }

    bb84 (cleanup): {
        drop(_114) -> [return: bb88, unwind terminate(cleanup)];
    }

    bb85 (cleanup): {
        drop(_81) -> [return: bb88, unwind terminate(cleanup)];
    }

    bb86 (cleanup): {
        drop(_48) -> [return: bb88, unwind terminate(cleanup)];
    }

    bb87 (cleanup): {
        drop(_24) -> [return: bb88, unwind terminate(cleanup)];
    }

    bb88 (cleanup): {
        drop(_8) -> [return: bb89, unwind terminate(cleanup)];
    }

    bb89 (cleanup): {
        resume;
    }

    bb90 (cleanup): {
        _217 = discriminant(_9);
        goto -> bb89;
    }
}
