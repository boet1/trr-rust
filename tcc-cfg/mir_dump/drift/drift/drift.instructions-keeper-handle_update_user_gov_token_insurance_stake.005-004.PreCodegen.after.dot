digraph Mir_0_1372 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn keeper::handle_update_user_gov_token_insurance_stake(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::keeper::UpdateUserGovTokenInsuranceStake&lt;ReErased&gt;&gt;) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _2: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let mut _3: std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;&gt;;<br align="left"/>let mut _5: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _6: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _7: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let mut _8: Closure(DefId(0:9333 ~ drift[d311]::instructions::keeper::handle_update_user_gov_token_insurance_stake::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _9: isize;<br align="left"/>let _10: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _11: !;<br align="left"/>let mut _12: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _13: std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let _14: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _15: std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _16: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;;<br align="left"/>let mut _17: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _18: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _19: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _20: Closure(DefId(0:9334 ~ drift[d311]::instructions::keeper::handle_update_user_gov_token_insurance_stake::{closure#1}), [i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _21: isize;<br align="left"/>let _22: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _23: !;<br align="left"/>let mut _24: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _25: std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let _26: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _27: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _28: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _29: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _30: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _31: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _32: Closure(DefId(0:9335 ~ drift[d311]::instructions::keeper::handle_update_user_gov_token_insurance_stake::{closure#2}), [i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _33: isize;<br align="left"/>let _34: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _35: !;<br align="left"/>let mut _36: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _37: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _38: ();<br align="left"/>let mut _39: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _40: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _41: bool;<br align="left"/>let mut _42: u16;<br align="left"/>let mut _43: &amp;ReErased state::insurance_fund_stake::InsuranceFundStake;<br align="left"/>let mut _44: &amp;ReErased std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let mut _45: ();<br align="left"/>let _46: error::ErrorCode;<br align="left"/>let _47: ();<br align="left"/>let mut _48: &amp;ReErased str;<br align="left"/>let _49: &amp;ReErased str;<br align="left"/>let mut _50: &amp;ReErased std::string::String;<br align="left"/>let _51: &amp;ReErased std::string::String;<br align="left"/>let _52: std::string::String;<br align="left"/>let _53: std::string::String;<br align="left"/>let mut _54: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _55: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _56: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _57: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _58: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _59: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _60: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _61: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _62: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _63: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _64: &amp;ReErased error::ErrorCode;<br align="left"/>let _65: &amp;ReErased error::ErrorCode;<br align="left"/>let _66: ();<br align="left"/>let mut _67: &amp;ReErased str;<br align="left"/>let _68: &amp;ReErased str;<br align="left"/>let mut _69: &amp;ReErased std::string::String;<br align="left"/>let _70: &amp;ReErased std::string::String;<br align="left"/>let _71: std::string::String;<br align="left"/>let _72: std::string::String;<br align="left"/>let mut _73: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _74: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _75: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _76: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _77: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _78: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _79: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _80: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _81: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _82: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _83: &amp;ReErased u16;<br align="left"/>let _84: &amp;ReErased u16;<br align="left"/>let _85: u16;<br align="left"/>let mut _86: error::ErrorCode;<br align="left"/>let mut _87: isize;<br align="left"/>let _88: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _89: !;<br align="left"/>let mut _90: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _91: ();<br align="left"/>let _92: ();<br align="left"/>let mut _93: bool;<br align="left"/>let mut _94: u16;<br align="left"/>let mut _95: &amp;ReErased state::insurance_fund_stake::InsuranceFundStake;<br align="left"/>let mut _96: &amp;ReErased std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let mut _97: bool;<br align="left"/>let mut _98: u16;<br align="left"/>let mut _99: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _100: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _101: anchor_lang::prelude::Clock;<br align="left"/>let mut _102: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _103: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _104: isize;<br align="left"/>let _105: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _106: !;<br align="left"/>let mut _107: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _108: anchor_lang::prelude::Clock;<br align="left"/>let _109: i64;<br align="left"/>let _110: ();<br align="left"/>let mut _111: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _112: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _113: u64;<br align="left"/>let mut _114: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _115: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _116: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _117: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _118: &amp;ReErased mut state::insurance_fund_stake::InsuranceFundStake;<br align="left"/>let mut _119: &amp;ReErased mut state::insurance_fund_stake::InsuranceFundStake;<br align="left"/>let mut _120: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let mut _121: &amp;ReErased mut state::user::UserStats;<br align="left"/>let mut _122: &amp;ReErased mut state::user::UserStats;<br align="left"/>let mut _123: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _124: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _125: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _126: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _127: i64;<br align="left"/>let mut _128: isize;<br align="left"/>let _129: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _130: !;<br align="left"/>let mut _131: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _132: ();<br align="left"/>let mut _133: ();<br align="left"/>let mut _134: &amp;ReErased u16;<br align="left"/>let mut _135: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _136: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _137: &amp;ReErased mut instructions::keeper::UpdateUserGovTokenInsuranceStake&lt;ReErased&gt;;<br align="left"/>let mut _138: &amp;ReErased mut instructions::keeper::UpdateUserGovTokenInsuranceStake&lt;ReErased&gt;;<br align="left"/>let mut _139: &amp;ReErased mut instructions::keeper::UpdateUserGovTokenInsuranceStake&lt;ReErased&gt;;<br align="left"/>let mut _140: &amp;ReErased mut instructions::keeper::UpdateUserGovTokenInsuranceStake&lt;ReErased&gt;;<br align="left"/>let mut _141: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _142: isize;<br align="left"/>let mut _143: isize;<br align="left"/>let mut _144: isize;<br align="left"/>let mut _145: isize;<br align="left"/>let mut _146: isize;<br align="left"/>let mut _147: isize;<br align="left"/>let mut _148: isize;<br align="left"/>let mut _149: isize;<br align="left"/>let mut _150: isize;<br align="left"/>let mut _151: isize;<br align="left"/>let mut _152: isize;<br align="left"/>let mut _153: isize;<br align="left"/>let mut _154: isize;<br align="left"/>let mut _155: isize;<br align="left"/>let mut _156: isize;<br align="left"/>let mut _157: isize;<br align="left"/>let mut _158: isize;<br align="left"/>let mut _159: isize;<br align="left"/>let mut _160: isize;<br align="left"/>let mut _161: isize;<br align="left"/>let mut _162: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug insurance_fund_stake =&gt; _2;<br align="left"/>debug residual =&gt; _10;<br align="left"/>debug val =&gt; _13;<br align="left"/>debug user_stats =&gt; _14;<br align="left"/>debug residual =&gt; _22;<br align="left"/>debug val =&gt; _25;<br align="left"/>debug spot_market =&gt; _26;<br align="left"/>debug residual =&gt; _34;<br align="left"/>debug val =&gt; _37;<br align="left"/>debug error_code =&gt; _46;<br align="left"/>debug res =&gt; _53;<br align="left"/>debug res =&gt; _72;<br align="left"/>debug residual =&gt; _88;<br align="left"/>debug val =&gt; _91;<br align="left"/>debug clock =&gt; _101;<br align="left"/>debug residual =&gt; _105;<br align="left"/>debug val =&gt; _108;<br align="left"/>debug now =&gt; _109;<br align="left"/>debug residual =&gt; _129;<br align="left"/>debug val =&gt; _132;<br align="left"/>>;
    bb0__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_137 = deref_copy (_1.1: &amp;mut instructions::keeper::UpdateUserGovTokenInsuranceStake&lt;'_&gt;)<br/>_7 = &amp;((*_137).2: anchor_lang::prelude::AccountLoader&lt;'_, state::insurance_fund_stake::InsuranceFundStake&gt;)<br/></td></tr><tr><td align="left">_6 = anchor_lang::prelude::AccountLoader::&lt;'_, InsuranceFundStake&gt;::load_mut(move _7)</td></tr></table>>];
    bb1__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageLive(_8)<br/>_8 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_5 = std::result::Result::&lt;RefMut&lt;'_, InsuranceFundStake&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _6, move _8)</td></tr></table>>];
    bb2__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;RefMut&lt;'_, InsuranceFundStake&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb3__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_9 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _9)</td></tr></table>>];
    bb4__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = move ((_4 as Continue).0: std::cell::RefMut&lt;'_, state::insurance_fund_stake::InsuranceFundStake&gt;)<br/>_3 = move _13<br/>StorageDead(_13)<br/>_2 = &amp;mut _3<br/>_144 = discriminant(_4)<br/>StorageDead(_4)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_138 = deref_copy (_1.1: &amp;mut instructions::keeper::UpdateUserGovTokenInsuranceStake&lt;'_&gt;)<br/>_19 = &amp;((*_138).3: anchor_lang::prelude::AccountLoader&lt;'_, state::user::UserStats&gt;)<br/></td></tr><tr><td align="left">_18 = anchor_lang::prelude::AccountLoader::&lt;'_, UserStats&gt;::load_mut(move _19)</td></tr></table>>];
    bb5__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>_10 = ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_12)<br/>_12 = _10<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _12)</td></tr></table>>];
    bb7__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_10)<br/>_142 = discriminant(_4)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageLive(_20)<br/>_20 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_17 = std::result::Result::&lt;RefMut&lt;'_, UserStats&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _18, move _20)</td></tr></table>>];
    bb9__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">_16 = &lt;std::result::Result&lt;RefMut&lt;'_, UserStats&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _17)</td></tr></table>>];
    bb10__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>_21 = discriminant(_16)<br/></td></tr><tr><td align="left">switchInt(move _21)</td></tr></table>>];
    bb11__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_25)<br/>_25 = move ((_16 as Continue).0: std::cell::RefMut&lt;'_, state::user::UserStats&gt;)<br/>_15 = move _25<br/>StorageDead(_25)<br/>_14 = &amp;mut _15<br/>_148 = discriminant(_16)<br/>StorageDead(_16)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>_139 = deref_copy (_1.1: &amp;mut instructions::keeper::UpdateUserGovTokenInsuranceStake&lt;'_&gt;)<br/>_31 = &amp;((*_139).1: anchor_lang::prelude::AccountLoader&lt;'_, state::spot_market::SpotMarket&gt;)<br/></td></tr><tr><td align="left">_30 = anchor_lang::prelude::AccountLoader::&lt;'_, SpotMarket&gt;::load_mut(move _31)</td></tr></table>>];
    bb12__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_22)<br/>_22 = ((_16 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_24)<br/>_24 = _22<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _24)</td></tr></table>>];
    bb13__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_22)<br/>_146 = discriminant(_16)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageLive(_32)<br/>_32 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_29 = std::result::Result::&lt;RefMut&lt;'_, SpotMarket&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _30, move _32)</td></tr></table>>];
    bb15__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">_28 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _29)</td></tr></table>>];
    bb16__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>_33 = discriminant(_28)<br/></td></tr><tr><td align="left">switchInt(move _33)</td></tr></table>>];
    bb17__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_37)<br/>_37 = move ((_28 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_27 = move _37<br/>StorageDead(_37)<br/>_26 = &amp;mut _27<br/>_152 = discriminant(_28)<br/>StorageDead(_28)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>_44 = &amp;(*_2)<br/></td></tr><tr><td align="left">_43 = &lt;RefMut&lt;'_, InsuranceFundStake&gt; as Deref&gt;::deref(move _44)</td></tr></table>>];
    bb18__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_34)<br/>_34 = ((_28 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_36)<br/>_36 = _34<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _36)</td></tr></table>>];
    bb19__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_34)<br/>_150 = discriminant(_28)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>_42 = ((*_43).8: u16)<br/>_41 = Eq(move _42, const _)<br/></td></tr><tr><td align="left">switchInt(move _41)</td></tr></table>>];
    bb21__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_42)<br/>StorageLive(_45)<br/>_45 = ()<br/>_40 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _45)<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_42)<br/>StorageLive(_46)<br/>_46 = error::ErrorCode::IncorrectSpotMarketAccountPassed<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>_136 = const _<br/>_57 = &amp;(*_136)<br/>_56 = &amp;(*_57)<br/>_55 = move _56 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_56)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>_65 = &amp;_46<br/>_64 = &amp;(*_65)<br/></td></tr><tr><td align="left">_63 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _64)</td></tr></table>>];
    bb23__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>_62 = [move _63]<br/>StorageDead(_63)<br/>_61 = &amp;_62<br/>_60 = &amp;(*_61)<br/>_59 = move _60 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">_54 = Arguments::&lt;'_&gt;::new_v1(move _55, move _59)</td></tr></table>>];
    bb24__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">_53 = format(move _54)</td></tr></table>>];
    bb25__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_65)<br/>StorageDead(_62)<br/>StorageDead(_61)<br/>StorageDead(_57)<br/>_52 = move _53<br/>StorageDead(_53)<br/>_51 = &amp;_52<br/>_50 = &amp;(*_51)<br/></td></tr><tr><td align="left">_49 = &lt;String as Deref&gt;::deref(move _50)</td></tr></table>>];
    bb26__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">_48 = &amp;(*_49)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">_47 = solana_program::log::sol_log(move _48)</td></tr></table>>];
    bb27__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/></td></tr><tr><td align="left">drop(_52)</td></tr></table>>];
    bb28__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_51)<br/>StorageDead(_49)<br/>StorageDead(_47)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>_135 = const _<br/>_76 = &amp;(*_135)<br/>_75 = &amp;(*_76)<br/>_74 = move _75 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_75)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>_134 = const _<br/>_84 = &amp;(*_134)<br/>_83 = &amp;(*_84)<br/></td></tr><tr><td align="left">_82 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _83)</td></tr></table>>];
    bb29__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>_81 = [move _82]<br/>StorageDead(_82)<br/>_80 = &amp;_81<br/>_79 = &amp;(*_80)<br/>_78 = move _79 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_79)<br/></td></tr><tr><td align="left">_73 = Arguments::&lt;'_&gt;::new_v1(move _74, move _78)</td></tr></table>>];
    bb30__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>StorageDead(_74)<br/></td></tr><tr><td align="left">_72 = format(move _73)</td></tr></table>>];
    bb31__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>StorageDead(_84)<br/>StorageDead(_81)<br/>StorageDead(_80)<br/>StorageDead(_76)<br/>_71 = move _72<br/>StorageDead(_72)<br/>_70 = &amp;_71<br/>_69 = &amp;(*_70)<br/></td></tr><tr><td align="left">_68 = &lt;String as Deref&gt;::deref(move _69)</td></tr></table>>];
    bb32__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">_67 = &amp;(*_68)<br/>StorageDead(_69)<br/></td></tr><tr><td align="left">_66 = solana_program::log::sol_log(move _67)</td></tr></table>>];
    bb33__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/></td></tr><tr><td align="left">drop(_71)</td></tr></table>>];
    bb34__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageDead(_70)<br/>StorageDead(_68)<br/>StorageDead(_66)<br/>StorageLive(_86)<br/>_86 = _46<br/>_40 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _86)<br/>StorageDead(_86)<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/></td></tr><tr><td align="left">_39 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _40)</td></tr></table>>];
    bb36__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>_87 = discriminant(_39)<br/></td></tr><tr><td align="left">switchInt(move _87)</td></tr></table>>];
    bb37__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_91)<br/>_91 = ((_39 as Continue).0: ())<br/>_38 = _91<br/>StorageDead(_91)<br/>StorageDead(_39)<br/>StorageDead(_38)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>_96 = &amp;(*_2)<br/></td></tr><tr><td align="left">_95 = &lt;RefMut&lt;'_, InsuranceFundStake&gt; as Deref&gt;::deref(move _96)</td></tr></table>>];
    bb38__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_88)<br/>_88 = ((_39 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_90)<br/>_90 = _88<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _90)</td></tr></table>>];
    bb39__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>StorageDead(_88)<br/>StorageDead(_39)<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>_94 = ((*_95).8: u16)<br/>_93 = Eq(move _94, const _)<br/></td></tr><tr><td align="left">switchInt(move _93)</td></tr></table>>];
    bb41__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/>StorageDead(_94)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>_100 = &amp;(*_26)<br/></td></tr><tr><td align="left">_99 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _100)</td></tr></table>>];
    bb42__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>_98 = ((*_99).42: u16)<br/>_97 = Eq(move _98, const _)<br/></td></tr><tr><td align="left">switchInt(move _97)</td></tr></table>>];
    bb43__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/>StorageDead(_98)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/></td></tr><tr><td align="left">_103 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb44__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left">_102 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _103)</td></tr></table>>];
    bb45__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>_104 = discriminant(_102)<br/></td></tr><tr><td align="left">switchInt(move _104)</td></tr></table>>];
    bb46__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageLive(_108)<br/>_108 = move ((_102 as Continue).0: anchor_lang::prelude::Clock)<br/>_101 = move _108<br/>StorageDead(_108)<br/>_154 = discriminant(_102)<br/>StorageDead(_102)<br/>StorageLive(_109)<br/>_109 = (_101.4: i64)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>_140 = deref_copy (_1.1: &amp;mut instructions::keeper::UpdateUserGovTokenInsuranceStake&lt;'_&gt;)<br/>_141 = deref_copy ((*_140).5: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_162 = (((_141.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_117 = &amp;(*_162)<br/></td></tr><tr><td align="left">_116 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _117)</td></tr></table>>];
    bb47__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageLive(_105)<br/>_105 = move ((_102 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_107)<br/>_107 = move _105<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _107)</td></tr></table>>];
    bb48__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>StorageDead(_105)<br/>_156 = discriminant(_102)<br/>StorageDead(_102)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">_115 = &amp;(*_116)<br/></td></tr><tr><td align="left">_114 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _115)</td></tr></table>>];
    bb50__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/>StorageDead(_115)<br/>_113 = ((*_114).2: u64)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>_120 = &amp;mut (*_2)<br/></td></tr><tr><td align="left">_119 = &lt;RefMut&lt;'_, InsuranceFundStake&gt; as DerefMut&gt;::deref_mut(move _120)</td></tr></table>>];
    bb51__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">_118 = &amp;mut (*_119)<br/>StorageDead(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>_123 = &amp;mut (*_14)<br/></td></tr><tr><td align="left">_122 = &lt;RefMut&lt;'_, UserStats&gt; as DerefMut&gt;::deref_mut(move _123)</td></tr></table>>];
    bb52__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">_121 = &amp;mut (*_122)<br/>StorageDead(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>_126 = &amp;mut (*_26)<br/></td></tr><tr><td align="left">_125 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _126)</td></tr></table>>];
    bb53__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">_124 = &amp;mut (*_125)<br/>StorageDead(_126)<br/>StorageLive(_127)<br/>_127 = _109<br/></td></tr><tr><td align="left">_112 = update_user_stats_if_stake_amount(const 0_i64, move _113, move _118, move _121, move _124, move _127)</td></tr></table>>];
    bb54__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/>StorageDead(_124)<br/>StorageDead(_121)<br/>StorageDead(_118)<br/>StorageDead(_113)<br/></td></tr><tr><td align="left">_111 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _112)</td></tr></table>>];
    bb55__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>_128 = discriminant(_111)<br/></td></tr><tr><td align="left">switchInt(move _128)</td></tr></table>>];
    bb56__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageLive(_132)<br/>_132 = ((_111 as Continue).0: ())<br/>_110 = _132<br/>StorageDead(_132)<br/>StorageDead(_125)<br/>StorageDead(_122)<br/>StorageDead(_119)<br/>StorageDead(_116)<br/>StorageDead(_114)<br/>StorageDead(_111)<br/>StorageDead(_110)<br/>_92 = const ()<br/>StorageDead(_109)<br/>StorageDead(_101)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb57__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageLive(_129)<br/>_129 = ((_111 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_131)<br/>_131 = _129<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _131)</td></tr></table>>];
    bb58__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_131)<br/>StorageDead(_129)<br/>StorageDead(_125)<br/>StorageDead(_122)<br/>StorageDead(_119)<br/>StorageDead(_116)<br/>StorageDead(_114)<br/>StorageDead(_111)<br/>StorageDead(_110)<br/>StorageDead(_109)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/>StorageDead(_98)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb60__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/>StorageDead(_94)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb61__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">_92 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>StorageDead(_93)<br/>StorageDead(_92)<br/>StorageLive(_133)<br/>_133 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _133)<br/>StorageDead(_133)<br/></td></tr><tr><td align="left">drop(_27)</td></tr></table>>];
    bb63__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">drop(_15)</td></tr></table>>];
    bb64__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb65__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb66__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/>StorageDead(_97)<br/>StorageDead(_93)<br/>StorageDead(_92)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb67__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left">drop(_27)</td></tr></table>>];
    bb68__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">drop(_15)</td></tr></table>>];
    bb69__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb70__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb71__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left">return</td></tr></table>>];
    bb72__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">72 (cleanup)</td></tr><tr><td align="left">drop(_71)</td></tr></table>>];
    bb73__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">73 (cleanup)</td></tr><tr><td align="left">drop(_52)</td></tr></table>>];
    bb74__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">74 (cleanup)</td></tr><tr><td align="left">drop(_27)</td></tr></table>>];
    bb75__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">75 (cleanup)</td></tr><tr><td align="left">drop(_15)</td></tr></table>>];
    bb76__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">76 (cleanup)</td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb77__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">77 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb78__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">78 (cleanup)</td></tr><tr><td align="left" balign="left">_158 = discriminant(_102)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb79__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">79 (cleanup)</td></tr><tr><td align="left" balign="left">_159 = discriminant(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb80__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">80 (cleanup)</td></tr><tr><td align="left" balign="left">_160 = discriminant(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb81__0_1372 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">81 (cleanup)</td></tr><tr><td align="left" balign="left">_161 = discriminant(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_1372 -> bb1__0_1372 [label="return"];
    bb1__0_1372 -> bb2__0_1372 [label="return"];
    bb1__0_1372 -> bb77__0_1372 [label="unwind"];
    bb2__0_1372 -> bb3__0_1372 [label="return"];
    bb2__0_1372 -> bb77__0_1372 [label="unwind"];
    bb3__0_1372 -> bb4__0_1372 [label="0"];
    bb3__0_1372 -> bb6__0_1372 [label="1"];
    bb3__0_1372 -> bb5__0_1372 [label="otherwise"];
    bb4__0_1372 -> bb8__0_1372 [label="return"];
    bb4__0_1372 -> bb76__0_1372 [label="unwind"];
    bb6__0_1372 -> bb7__0_1372 [label="return"];
    bb6__0_1372 -> bb81__0_1372 [label="unwind"];
    bb7__0_1372 -> bb70__0_1372 [label=""];
    bb8__0_1372 -> bb9__0_1372 [label="return"];
    bb8__0_1372 -> bb76__0_1372 [label="unwind"];
    bb9__0_1372 -> bb10__0_1372 [label="return"];
    bb9__0_1372 -> bb76__0_1372 [label="unwind"];
    bb10__0_1372 -> bb11__0_1372 [label="0"];
    bb10__0_1372 -> bb12__0_1372 [label="1"];
    bb10__0_1372 -> bb5__0_1372 [label="otherwise"];
    bb11__0_1372 -> bb14__0_1372 [label="return"];
    bb11__0_1372 -> bb75__0_1372 [label="unwind"];
    bb12__0_1372 -> bb13__0_1372 [label="return"];
    bb12__0_1372 -> bb80__0_1372 [label="unwind"];
    bb13__0_1372 -> bb69__0_1372 [label=""];
    bb14__0_1372 -> bb15__0_1372 [label="return"];
    bb14__0_1372 -> bb75__0_1372 [label="unwind"];
    bb15__0_1372 -> bb16__0_1372 [label="return"];
    bb15__0_1372 -> bb75__0_1372 [label="unwind"];
    bb16__0_1372 -> bb17__0_1372 [label="0"];
    bb16__0_1372 -> bb18__0_1372 [label="1"];
    bb16__0_1372 -> bb5__0_1372 [label="otherwise"];
    bb17__0_1372 -> bb20__0_1372 [label="return"];
    bb17__0_1372 -> bb74__0_1372 [label="unwind"];
    bb18__0_1372 -> bb19__0_1372 [label="return"];
    bb18__0_1372 -> bb79__0_1372 [label="unwind"];
    bb19__0_1372 -> bb68__0_1372 [label=""];
    bb20__0_1372 -> bb22__0_1372 [label="0"];
    bb20__0_1372 -> bb21__0_1372 [label="otherwise"];
    bb21__0_1372 -> bb35__0_1372 [label=""];
    bb22__0_1372 -> bb23__0_1372 [label="return"];
    bb22__0_1372 -> bb74__0_1372 [label="unwind"];
    bb23__0_1372 -> bb24__0_1372 [label="return"];
    bb23__0_1372 -> bb74__0_1372 [label="unwind"];
    bb24__0_1372 -> bb25__0_1372 [label="return"];
    bb24__0_1372 -> bb74__0_1372 [label="unwind"];
    bb25__0_1372 -> bb26__0_1372 [label="return"];
    bb25__0_1372 -> bb73__0_1372 [label="unwind"];
    bb26__0_1372 -> bb27__0_1372 [label="return"];
    bb26__0_1372 -> bb73__0_1372 [label="unwind"];
    bb27__0_1372 -> bb28__0_1372 [label="return"];
    bb27__0_1372 -> bb74__0_1372 [label="unwind"];
    bb28__0_1372 -> bb29__0_1372 [label="return"];
    bb28__0_1372 -> bb74__0_1372 [label="unwind"];
    bb29__0_1372 -> bb30__0_1372 [label="return"];
    bb29__0_1372 -> bb74__0_1372 [label="unwind"];
    bb30__0_1372 -> bb31__0_1372 [label="return"];
    bb30__0_1372 -> bb74__0_1372 [label="unwind"];
    bb31__0_1372 -> bb32__0_1372 [label="return"];
    bb31__0_1372 -> bb72__0_1372 [label="unwind"];
    bb32__0_1372 -> bb33__0_1372 [label="return"];
    bb32__0_1372 -> bb72__0_1372 [label="unwind"];
    bb33__0_1372 -> bb34__0_1372 [label="return"];
    bb33__0_1372 -> bb74__0_1372 [label="unwind"];
    bb34__0_1372 -> bb35__0_1372 [label=""];
    bb35__0_1372 -> bb36__0_1372 [label="return"];
    bb35__0_1372 -> bb74__0_1372 [label="unwind"];
    bb36__0_1372 -> bb37__0_1372 [label="0"];
    bb36__0_1372 -> bb38__0_1372 [label="1"];
    bb36__0_1372 -> bb5__0_1372 [label="otherwise"];
    bb37__0_1372 -> bb40__0_1372 [label="return"];
    bb37__0_1372 -> bb74__0_1372 [label="unwind"];
    bb38__0_1372 -> bb39__0_1372 [label="return"];
    bb38__0_1372 -> bb74__0_1372 [label="unwind"];
    bb39__0_1372 -> bb67__0_1372 [label=""];
    bb40__0_1372 -> bb60__0_1372 [label="0"];
    bb40__0_1372 -> bb41__0_1372 [label="otherwise"];
    bb41__0_1372 -> bb42__0_1372 [label="return"];
    bb41__0_1372 -> bb74__0_1372 [label="unwind"];
    bb42__0_1372 -> bb59__0_1372 [label="0"];
    bb42__0_1372 -> bb43__0_1372 [label="otherwise"];
    bb43__0_1372 -> bb44__0_1372 [label="return"];
    bb43__0_1372 -> bb74__0_1372 [label="unwind"];
    bb44__0_1372 -> bb45__0_1372 [label="return"];
    bb44__0_1372 -> bb74__0_1372 [label="unwind"];
    bb45__0_1372 -> bb46__0_1372 [label="0"];
    bb45__0_1372 -> bb47__0_1372 [label="1"];
    bb45__0_1372 -> bb5__0_1372 [label="otherwise"];
    bb46__0_1372 -> bb49__0_1372 [label="return"];
    bb46__0_1372 -> bb74__0_1372 [label="unwind"];
    bb47__0_1372 -> bb48__0_1372 [label="return"];
    bb47__0_1372 -> bb78__0_1372 [label="unwind"];
    bb48__0_1372 -> bb66__0_1372 [label=""];
    bb49__0_1372 -> bb50__0_1372 [label="return"];
    bb49__0_1372 -> bb74__0_1372 [label="unwind"];
    bb50__0_1372 -> bb51__0_1372 [label="return"];
    bb50__0_1372 -> bb74__0_1372 [label="unwind"];
    bb51__0_1372 -> bb52__0_1372 [label="return"];
    bb51__0_1372 -> bb74__0_1372 [label="unwind"];
    bb52__0_1372 -> bb53__0_1372 [label="return"];
    bb52__0_1372 -> bb74__0_1372 [label="unwind"];
    bb53__0_1372 -> bb54__0_1372 [label="return"];
    bb53__0_1372 -> bb74__0_1372 [label="unwind"];
    bb54__0_1372 -> bb55__0_1372 [label="return"];
    bb54__0_1372 -> bb74__0_1372 [label="unwind"];
    bb55__0_1372 -> bb56__0_1372 [label="0"];
    bb55__0_1372 -> bb57__0_1372 [label="1"];
    bb55__0_1372 -> bb5__0_1372 [label="otherwise"];
    bb56__0_1372 -> bb62__0_1372 [label=""];
    bb57__0_1372 -> bb58__0_1372 [label="return"];
    bb57__0_1372 -> bb74__0_1372 [label="unwind"];
    bb58__0_1372 -> bb66__0_1372 [label=""];
    bb59__0_1372 -> bb61__0_1372 [label=""];
    bb60__0_1372 -> bb61__0_1372 [label=""];
    bb61__0_1372 -> bb62__0_1372 [label=""];
    bb62__0_1372 -> bb63__0_1372 [label="return"];
    bb62__0_1372 -> bb75__0_1372 [label="unwind"];
    bb63__0_1372 -> bb64__0_1372 [label="return"];
    bb63__0_1372 -> bb76__0_1372 [label="unwind"];
    bb64__0_1372 -> bb65__0_1372 [label="return"];
    bb64__0_1372 -> bb77__0_1372 [label="unwind"];
    bb65__0_1372 -> bb71__0_1372 [label=""];
    bb66__0_1372 -> bb67__0_1372 [label=""];
    bb67__0_1372 -> bb68__0_1372 [label="return"];
    bb67__0_1372 -> bb75__0_1372 [label="unwind"];
    bb68__0_1372 -> bb69__0_1372 [label="return"];
    bb68__0_1372 -> bb76__0_1372 [label="unwind"];
    bb69__0_1372 -> bb70__0_1372 [label="return"];
    bb69__0_1372 -> bb77__0_1372 [label="unwind"];
    bb70__0_1372 -> bb71__0_1372 [label=""];
    bb72__0_1372 -> bb74__0_1372 [label="return"];
    bb73__0_1372 -> bb74__0_1372 [label="return"];
    bb74__0_1372 -> bb75__0_1372 [label="return"];
    bb75__0_1372 -> bb76__0_1372 [label="return"];
    bb76__0_1372 -> bb77__0_1372 [label="return"];
    bb78__0_1372 -> bb74__0_1372 [label=""];
    bb79__0_1372 -> bb75__0_1372 [label=""];
    bb80__0_1372 -> bb76__0_1372 [label=""];
    bb81__0_1372 -> bb77__0_1372 [label=""];
}
