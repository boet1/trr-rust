digraph Mir_0_2789 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn get_signed_token_amount::{closure#0}(_1: Closure(DefId(0:2789 ~ drift[d311]::math::spot_balance::get_signed_token_amount::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((i128,)) -&gt; i128, []), ()]), _2: i128) -&gt; i128<br align="left"/>let mut _3: i128;<br align="left"/>let mut _4: bool;<br align="left"/>debug token_amount =&gt; _2;<br align="left"/>>;
    bb0__0_2789 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>_3 = _2<br/>_4 = Eq(_3, const i128::MIN)<br/></td></tr><tr><td align="left">assert(!move _4, &quot;attempt to negate `{}`, which would overflow&quot;, _3)</td></tr></table>>];
    bb1__0_2789 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_0 = Neg(move _3)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2789 -> bb1__0_2789 [label="success"];
}
