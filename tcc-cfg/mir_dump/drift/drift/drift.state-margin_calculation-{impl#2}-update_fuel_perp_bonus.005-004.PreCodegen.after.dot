digraph Mir_0_3462 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn MarginCalculation::update_fuel_perp_bonus(_1: &amp;ReErased mut state::margin_calculation::MarginCalculation, _2: &amp;ReErased state::perp_market::PerpMarket, _3: &amp;ReErased state::user::PerpPosition, _4: u128, _5: i64) -&gt; std::result::Result&lt;(), error::ErrorCode&gt;<br align="left"/>let _6: ();<br align="left"/>let mut _7: bool;<br align="left"/>let mut _8: u8;<br align="left"/>let mut _9: !;<br align="left"/>let mut _10: ();<br align="left"/>let _11: u128;<br align="left"/>let mut _12: isize;<br align="left"/>let _13: u16;<br align="left"/>let _14: i64;<br align="left"/>let mut _15: bool;<br align="left"/>let mut _16: u16;<br align="left"/>let mut _17: u16;<br align="left"/>let mut _18: i128;<br align="left"/>let mut _19: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _20: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _21: i128;<br align="left"/>let mut _22: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _23: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _24: i128;<br align="left"/>let mut _25: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _26: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _27: i64;<br align="left"/>let mut _28: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _29: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _30: i64;<br align="left"/>let mut _31: i64;<br align="left"/>let mut _32: isize;<br align="left"/>let _33: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _34: !;<br align="left"/>let mut _35: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _36: i64;<br align="left"/>let mut _37: isize;<br align="left"/>let _38: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _39: !;<br align="left"/>let mut _40: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _41: i128;<br align="left"/>let mut _42: i128;<br align="left"/>let mut _43: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _44: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _45: i64;<br align="left"/>let mut _46: isize;<br align="left"/>let _47: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _48: !;<br align="left"/>let mut _49: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _50: i128;<br align="left"/>let mut _51: isize;<br align="left"/>let _52: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _53: !;<br align="left"/>let mut _54: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _55: i128;<br align="left"/>let mut _56: isize;<br align="left"/>let _57: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _58: !;<br align="left"/>let mut _59: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _60: i128;<br align="left"/>let _61: u64;<br align="left"/>let mut _62: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _63: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _64: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _65: i128;<br align="left"/>let mut _66: u128;<br align="left"/>let mut _67: i64;<br align="left"/>let mut _68: isize;<br align="left"/>let _69: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _70: !;<br align="left"/>let mut _71: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _72: u64;<br align="left"/>let mut _73: u32;<br align="left"/>let mut _74: u32;<br align="left"/>let mut _75: u32;<br align="left"/>let mut _76: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _77: u64;<br align="left"/>let mut _78: ();<br align="left"/>debug self =&gt; _1;<br align="left"/>debug perp_market =&gt; _2;<br align="left"/>debug perp_position =&gt; _3;<br align="left"/>debug base_asset_value =&gt; _4;<br align="left"/>debug oracle_price =&gt; _5;<br align="left"/>debug fuel_base_asset_value =&gt; _11;<br align="left"/>debug market_index =&gt; _13;<br align="left"/>debug perp_delta =&gt; _14;<br align="left"/>debug residual =&gt; _33;<br align="left"/>debug val =&gt; _36;<br align="left"/>debug residual =&gt; _38;<br align="left"/>debug val =&gt; _41;<br align="left"/>debug residual =&gt; _47;<br align="left"/>debug val =&gt; _50;<br align="left"/>debug residual =&gt; _52;<br align="left"/>debug val =&gt; _55;<br align="left"/>debug residual =&gt; _57;<br align="left"/>debug val =&gt; _60;<br align="left"/>debug perp_fuel_oi_bonus =&gt; _61;<br align="left"/>debug residual =&gt; _69;<br align="left"/>debug val =&gt; _72;<br align="left"/>>;
    bb0__0_3462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = ((*_2).28: u8)<br/>_7 = Eq(move _8, const 0_u8)<br/></td></tr><tr><td align="left">switchInt(move _7)</td></tr></table>>];
    bb1__0_3462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageLive(_10)<br/>_10 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _10)<br/>StorageDead(_10)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb2__0_3462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_6 = const ()<br/>StorageDead(_7)<br/>StorageDead(_6)<br/>StorageLive(_11)<br/>_12 = discriminant((((*_1).0: state::margin_calculation::MarginContext).7: std::option::Option&lt;(u16, i64)&gt;))<br/></td></tr><tr><td align="left">switchInt(move _12)</td></tr></table>>];
    bb3__0_3462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">_11 = _4<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb4__0_3462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = ((((((*_1).0: state::margin_calculation::MarginContext).7: std::option::Option&lt;(u16, i64)&gt;) as Some).0: (u16, i64)).0: u16)<br/>StorageLive(_14)<br/>_14 = ((((((*_1).0: state::margin_calculation::MarginContext).7: std::option::Option&lt;(u16, i64)&gt;) as Some).0: (u16, i64)).1: i64)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_16 = _13<br/>StorageLive(_17)<br/>_17 = ((*_2).21: u16)<br/>_15 = Eq(move _16, move _17)<br/></td></tr><tr><td align="left">switchInt(move _15)</td></tr></table>>];
    bb5__0_3462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_16)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>_30 = ((*_3).1: i64)<br/>StorageLive(_31)<br/>_31 = _14<br/></td></tr><tr><td align="left">_29 = &lt;i64 as SafeMath&gt;::safe_add(move _30, move _31)</td></tr></table>>];
    bb6__0_3462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">_28 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _29)</td></tr></table>>];
    bb7__0_3462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>_32 = discriminant(_28)<br/></td></tr><tr><td align="left">switchInt(move _32)</td></tr></table>>];
    bb8__0_3462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_36)<br/>_36 = ((_28 as Continue).0: i64)<br/>_27 = _36<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">_26 = &lt;i64 as Cast&gt;::cast::&lt;i128&gt;(move _27)</td></tr></table>>];
    bb9__0_3462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb10__0_3462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_33)<br/>_33 = ((_28 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_35)<br/>_35 = _33<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _35)</td></tr></table>>];
    bb11__0_3462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_33)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_3462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/></td></tr><tr><td align="left">_25 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _26)</td></tr></table>>];
    bb13__0_3462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>_37 = discriminant(_25)<br/></td></tr><tr><td align="left">switchInt(move _37)</td></tr></table>>];
    bb14__0_3462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_41)<br/>_41 = ((_25 as Continue).0: i128)<br/>_24 = _41<br/>StorageDead(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>_45 = _5<br/></td></tr><tr><td align="left">_44 = &lt;i64 as Cast&gt;::cast::&lt;i128&gt;(move _45)</td></tr></table>>];
    bb15__0_3462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_38)<br/>_38 = ((_25 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_40)<br/>_40 = _38<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _40)</td></tr></table>>];
    bb16__0_3462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_3462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/></td></tr><tr><td align="left">_43 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _44)</td></tr></table>>];
    bb18__0_3462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>_46 = discriminant(_43)<br/></td></tr><tr><td align="left">switchInt(move _46)</td></tr></table>>];
    bb19__0_3462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_50)<br/>_50 = ((_43 as Continue).0: i128)<br/>_42 = _50<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">_23 = &lt;i128 as SafeMath&gt;::safe_mul(move _24, move _42)</td></tr></table>>];
    bb20__0_3462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>_47 = ((_43 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_49)<br/>_49 = _47<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _49)</td></tr></table>>];
    bb21__0_3462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_47)<br/>StorageDead(_42)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_3462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">_22 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _23)</td></tr></table>>];
    bb23__0_3462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>_51 = discriminant(_22)<br/></td></tr><tr><td align="left">switchInt(move _51)</td></tr></table>>];
    bb24__0_3462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_55)<br/>_55 = ((_22 as Continue).0: i128)<br/>_21 = _55<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">_20 = &lt;i128 as SafeMath&gt;::safe_div(move _21, const _)</td></tr></table>>];
    bb25__0_3462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_52)<br/>_52 = ((_22 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_54)<br/>_54 = _52<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _54)</td></tr></table>>];
    bb26__0_3462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_3462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/></td></tr><tr><td align="left">_19 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _20)</td></tr></table>>];
    bb28__0_3462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>_56 = discriminant(_19)<br/></td></tr><tr><td align="left">switchInt(move _56)</td></tr></table>>];
    bb29__0_3462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_60)<br/>_60 = ((_19 as Continue).0: i128)<br/>_18 = _60<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">_11 = core::num::&lt;impl i128&gt;::unsigned_abs(move _18)</td></tr></table>>];
    bb30__0_3462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_57)<br/>_57 = ((_19 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_59)<br/>_59 = _57<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _59)</td></tr></table>>];
    bb31__0_3462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_3462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_43)<br/>StorageDead(_28)<br/>StorageDead(_25)<br/>StorageDead(_22)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_3462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_16)<br/>_11 = _4<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_3462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_3462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>_64 = &amp;(*_2)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>_66 = _11<br/>_65 = move _66 as i128 (IntToInt)<br/>StorageDead(_66)<br/>StorageLive(_67)<br/>_67 = (((*_1).0: state::margin_calculation::MarginContext).5: i64)<br/></td></tr><tr><td align="left">_63 = calculate_perp_fuel_bonus(move _64, move _65, move _67)</td></tr></table>>];
    bb36__0_3462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>StorageDead(_65)<br/>StorageDead(_64)<br/></td></tr><tr><td align="left">_62 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _63)</td></tr></table>>];
    bb37__0_3462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>_68 = discriminant(_62)<br/></td></tr><tr><td align="left">switchInt(move _68)</td></tr></table>>];
    bb38__0_3462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_72)<br/>_72 = ((_62 as Continue).0: u64)<br/>_61 = _72<br/>StorageDead(_72)<br/>StorageDead(_62)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>_74 = ((*_1).19: u32)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>_77 = _61<br/></td></tr><tr><td align="left">_76 = &lt;u64 as Cast&gt;::cast::&lt;u32&gt;(move _77)</td></tr></table>>];
    bb39__0_3462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_69)<br/>_69 = ((_62 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_71)<br/>_71 = _69<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _71)</td></tr></table>>];
    bb40__0_3462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageDead(_69)<br/>StorageDead(_62)<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_3462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/></td></tr><tr><td align="left">_75 = std::result::Result::&lt;u32, error::ErrorCode&gt;::unwrap_or(move _76, const _)</td></tr></table>>];
    bb42__0_3462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/></td></tr><tr><td align="left">_73 = core::num::&lt;impl u32&gt;::saturating_add(move _74, move _75)</td></tr></table>>];
    bb43__0_3462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_74)<br/>((*_1).19: u32) = move _73<br/>StorageDead(_73)<br/>StorageLive(_78)<br/>_78 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _78)<br/>StorageDead(_78)<br/>StorageDead(_61)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_3462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_3462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_3462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_23)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_3462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_25)<br/>StorageDead(_22)<br/>StorageDead(_19)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_3462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_3462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_3462 -> bb2__0_3462 [label="0"];
    bb0__0_3462 -> bb1__0_3462 [label="otherwise"];
    bb1__0_3462 -> bb49__0_3462 [label=""];
    bb2__0_3462 -> bb4__0_3462 [label="1"];
    bb2__0_3462 -> bb3__0_3462 [label="otherwise"];
    bb3__0_3462 -> bb35__0_3462 [label=""];
    bb4__0_3462 -> bb33__0_3462 [label="0"];
    bb4__0_3462 -> bb5__0_3462 [label="otherwise"];
    bb5__0_3462 -> bb6__0_3462 [label="return"];
    bb6__0_3462 -> bb7__0_3462 [label="return"];
    bb7__0_3462 -> bb8__0_3462 [label="0"];
    bb7__0_3462 -> bb10__0_3462 [label="1"];
    bb7__0_3462 -> bb9__0_3462 [label="otherwise"];
    bb8__0_3462 -> bb12__0_3462 [label="return"];
    bb10__0_3462 -> bb11__0_3462 [label="return"];
    bb11__0_3462 -> bb46__0_3462 [label=""];
    bb12__0_3462 -> bb13__0_3462 [label="return"];
    bb13__0_3462 -> bb14__0_3462 [label="0"];
    bb13__0_3462 -> bb15__0_3462 [label="1"];
    bb13__0_3462 -> bb9__0_3462 [label="otherwise"];
    bb14__0_3462 -> bb17__0_3462 [label="return"];
    bb15__0_3462 -> bb16__0_3462 [label="return"];
    bb16__0_3462 -> bb46__0_3462 [label=""];
    bb17__0_3462 -> bb18__0_3462 [label="return"];
    bb18__0_3462 -> bb19__0_3462 [label="0"];
    bb18__0_3462 -> bb20__0_3462 [label="1"];
    bb18__0_3462 -> bb9__0_3462 [label="otherwise"];
    bb19__0_3462 -> bb22__0_3462 [label="return"];
    bb20__0_3462 -> bb21__0_3462 [label="return"];
    bb21__0_3462 -> bb44__0_3462 [label=""];
    bb22__0_3462 -> bb23__0_3462 [label="return"];
    bb23__0_3462 -> bb24__0_3462 [label="0"];
    bb23__0_3462 -> bb25__0_3462 [label="1"];
    bb23__0_3462 -> bb9__0_3462 [label="otherwise"];
    bb24__0_3462 -> bb27__0_3462 [label="return"];
    bb25__0_3462 -> bb26__0_3462 [label="return"];
    bb26__0_3462 -> bb44__0_3462 [label=""];
    bb27__0_3462 -> bb28__0_3462 [label="return"];
    bb28__0_3462 -> bb29__0_3462 [label="0"];
    bb28__0_3462 -> bb30__0_3462 [label="1"];
    bb28__0_3462 -> bb9__0_3462 [label="otherwise"];
    bb29__0_3462 -> bb32__0_3462 [label="return"];
    bb30__0_3462 -> bb31__0_3462 [label="return"];
    bb31__0_3462 -> bb45__0_3462 [label=""];
    bb32__0_3462 -> bb34__0_3462 [label=""];
    bb33__0_3462 -> bb34__0_3462 [label=""];
    bb34__0_3462 -> bb35__0_3462 [label=""];
    bb35__0_3462 -> bb36__0_3462 [label="return"];
    bb36__0_3462 -> bb37__0_3462 [label="return"];
    bb37__0_3462 -> bb38__0_3462 [label="0"];
    bb37__0_3462 -> bb39__0_3462 [label="1"];
    bb37__0_3462 -> bb9__0_3462 [label="otherwise"];
    bb38__0_3462 -> bb41__0_3462 [label="return"];
    bb39__0_3462 -> bb40__0_3462 [label="return"];
    bb40__0_3462 -> bb48__0_3462 [label=""];
    bb41__0_3462 -> bb42__0_3462 [label="return"];
    bb42__0_3462 -> bb43__0_3462 [label="return"];
    bb43__0_3462 -> bb49__0_3462 [label=""];
    bb44__0_3462 -> bb45__0_3462 [label=""];
    bb45__0_3462 -> bb47__0_3462 [label=""];
    bb46__0_3462 -> bb47__0_3462 [label=""];
    bb47__0_3462 -> bb48__0_3462 [label=""];
    bb48__0_3462 -> bb49__0_3462 [label=""];
}
