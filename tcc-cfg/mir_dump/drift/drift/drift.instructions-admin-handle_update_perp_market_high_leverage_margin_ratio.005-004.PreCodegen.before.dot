digraph Mir_0_5559 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn admin::handle_update_perp_market_high_leverage_margin_ratio(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::admin::AdminUpdatePerpMarket&lt;ReErased&gt;&gt;, _2: u16, _3: u16) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _4: ();<br align="left"/>let mut _5: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _6: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _7: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _8: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _9: isize;<br align="left"/>let _10: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _11: !;<br align="left"/>let mut _12: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _13: ();<br align="left"/>let _14: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _15: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _16: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _17: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _18: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _19: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _20: Closure(DefId(0:5560 ~ drift[d311]::instructions::admin::handle_update_perp_market_high_leverage_margin_ratio::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _21: isize;<br align="left"/>let _22: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _23: !;<br align="left"/>let mut _24: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _25: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _26: ();<br align="left"/>let mut _27: &amp;ReErased str;<br align="left"/>let _28: &amp;ReErased str;<br align="left"/>let mut _29: &amp;ReErased std::string::String;<br align="left"/>let _30: &amp;ReErased std::string::String;<br align="left"/>let _31: std::string::String;<br align="left"/>let _32: std::string::String;<br align="left"/>let mut _33: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _34: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _35: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _36: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _37: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _38: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _39: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _40: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _41: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _42: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _43: &amp;ReErased u16;<br align="left"/>let _44: &amp;ReErased u16;<br align="left"/>let _45: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _46: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _47: ();<br align="left"/>let mut _48: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _49: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _50: u32;<br align="left"/>let mut _51: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _52: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _53: u32;<br align="left"/>let mut _54: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _55: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _56: u32;<br align="left"/>let mut _57: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _58: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _59: u16;<br align="left"/>let mut _60: isize;<br align="left"/>let _61: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _62: !;<br align="left"/>let mut _63: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _64: u32;<br align="left"/>let mut _65: u32;<br align="left"/>let mut _66: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _67: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _68: u16;<br align="left"/>let mut _69: isize;<br align="left"/>let _70: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _71: !;<br align="left"/>let mut _72: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _73: u32;<br align="left"/>let mut _74: u32;<br align="left"/>let mut _75: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _76: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _77: u32;<br align="left"/>let mut _78: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _79: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _80: isize;<br align="left"/>let _81: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _82: !;<br align="left"/>let mut _83: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _84: ();<br align="left"/>let _85: ();<br align="left"/>let mut _86: &amp;ReErased str;<br align="left"/>let _87: &amp;ReErased str;<br align="left"/>let mut _88: &amp;ReErased std::string::String;<br align="left"/>let _89: &amp;ReErased std::string::String;<br align="left"/>let _90: std::string::String;<br align="left"/>let _91: std::string::String;<br align="left"/>let mut _92: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _93: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _94: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _95: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _96: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _97: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _98: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _99: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _100: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _101: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _102: &amp;ReErased u16;<br align="left"/>let _103: &amp;ReErased u16;<br align="left"/>let _104: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _105: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _106: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _107: &amp;ReErased u16;<br align="left"/>let _108: &amp;ReErased u16;<br align="left"/>let _109: ();<br align="left"/>let mut _110: &amp;ReErased str;<br align="left"/>let _111: &amp;ReErased str;<br align="left"/>let mut _112: &amp;ReErased std::string::String;<br align="left"/>let _113: &amp;ReErased std::string::String;<br align="left"/>let _114: std::string::String;<br align="left"/>let _115: std::string::String;<br align="left"/>let mut _116: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _117: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _118: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _119: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _120: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _121: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _122: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _123: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _124: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _125: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _126: &amp;ReErased u16;<br align="left"/>let _127: &amp;ReErased u16;<br align="left"/>let _128: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _129: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _130: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _131: &amp;ReErased u16;<br align="left"/>let _132: &amp;ReErased u16;<br align="left"/>let mut _133: u16;<br align="left"/>let mut _134: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _135: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _136: u16;<br align="left"/>let mut _137: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _138: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _139: ();<br align="left"/>let mut _140: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _141: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _142: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _143: &amp;ReErased mut instructions::admin::AdminUpdatePerpMarket&lt;ReErased&gt;;<br align="left"/>let mut _144: &amp;ReErased mut instructions::admin::AdminUpdatePerpMarket&lt;ReErased&gt;;<br align="left"/>let mut _145: isize;<br align="left"/>let mut _146: isize;<br align="left"/>let mut _147: isize;<br align="left"/>let mut _148: isize;<br align="left"/>let mut _149: isize;<br align="left"/>let mut _150: isize;<br align="left"/>let mut _151: isize;<br align="left"/>let mut _152: isize;<br align="left"/>let mut _153: isize;<br align="left"/>let mut _154: isize;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug margin_ratio_initial =&gt; _2;<br align="left"/>debug margin_ratio_maintenance =&gt; _3;<br align="left"/>debug residual =&gt; _10;<br align="left"/>debug val =&gt; _13;<br align="left"/>debug perp_market =&gt; _14;<br align="left"/>debug residual =&gt; _22;<br align="left"/>debug val =&gt; _25;<br align="left"/>debug res =&gt; _32;<br align="left"/>debug residual =&gt; _61;<br align="left"/>debug val =&gt; _64;<br align="left"/>debug residual =&gt; _70;<br align="left"/>debug val =&gt; _73;<br align="left"/>debug residual =&gt; _81;<br align="left"/>debug val =&gt; _84;<br align="left"/>debug res =&gt; _91;<br align="left"/>debug res =&gt; _115;<br align="left"/>>;
    bb0__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_143 = deref_copy (_1.1: &amp;mut instructions::admin::AdminUpdatePerpMarket&lt;'_&gt;)<br/>_8 = &amp;((*_143).2: anchor_lang::prelude::AccountLoader&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_7 = &amp;(*_8)<br/></td></tr><tr><td align="left">_6 = constraints::perp_market_valid(move _7)</td></tr></table>>];
    bb1__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/></td></tr><tr><td align="left">_5 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _6)</td></tr></table>>];
    bb2__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_9 = discriminant(_5)<br/></td></tr><tr><td align="left">switchInt(move _9)</td></tr></table>>];
    bb3__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = ((_5 as Continue).0: ())<br/>_4 = _13<br/>StorageDead(_13)<br/>_145 = discriminant(_5)<br/>StorageDead(_8)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_144 = deref_copy (_1.1: &amp;mut instructions::admin::AdminUpdatePerpMarket&lt;'_&gt;)<br/>_19 = &amp;((*_144).2: anchor_lang::prelude::AccountLoader&lt;'_, state::perp_market::PerpMarket&gt;)<br/></td></tr><tr><td align="left">_18 = anchor_lang::prelude::AccountLoader::&lt;'_, PerpMarket&gt;::load_mut(move _19)</td></tr></table>>];
    bb4__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>_10 = move ((_5 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_12)<br/>_12 = move _10<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _12)</td></tr></table>>];
    bb6__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_10)<br/>_151 = discriminant(_5)<br/>StorageDead(_8)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageLive(_20)<br/>_20 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_17 = std::result::Result::&lt;RefMut&lt;'_, PerpMarket&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _18, move _20)</td></tr></table>>];
    bb8__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">_16 = &lt;std::result::Result&lt;RefMut&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _17)</td></tr></table>>];
    bb9__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>_21 = discriminant(_16)<br/></td></tr><tr><td align="left">switchInt(move _21)</td></tr></table>>];
    bb10__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_25)<br/>_25 = move ((_16 as Continue).0: std::cell::RefMut&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_15 = move _25<br/>StorageDead(_25)<br/>_14 = &amp;mut _15<br/>_149 = discriminant(_16)<br/>StorageDead(_16)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>_142 = const _<br/>_36 = &amp;(*_142)<br/>_35 = &amp;(*_36)<br/>_34 = move _35 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_35)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>_46 = &amp;(*_14)<br/></td></tr><tr><td align="left">_45 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _46)</td></tr></table>>];
    bb11__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_22)<br/>_22 = ((_16 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_24)<br/>_24 = _22<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _24)</td></tr></table>>];
    bb12__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_22)<br/>_147 = discriminant(_16)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>_44 = &amp;((*_45).21: u16)<br/>_43 = &amp;(*_44)<br/></td></tr><tr><td align="left">_42 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _43)</td></tr></table>>];
    bb14__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>_41 = [move _42]<br/>StorageDead(_42)<br/>_40 = &amp;_41<br/>_39 = &amp;(*_40)<br/>_38 = move _39 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">_33 = Arguments::&lt;'_&gt;::new_v1(move _34, move _38)</td></tr></table>>];
    bb15__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">_32 = format(move _33)</td></tr></table>>];
    bb16__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_45)<br/>StorageDead(_44)<br/>StorageDead(_41)<br/>StorageDead(_40)<br/>StorageDead(_36)<br/>_31 = move _32<br/>StorageDead(_32)<br/>_30 = &amp;_31<br/>_29 = &amp;(*_30)<br/></td></tr><tr><td align="left">_28 = &lt;String as Deref&gt;::deref(move _29)</td></tr></table>>];
    bb17__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">_27 = &amp;(*_28)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">_26 = solana_program::log::sol_log(move _27)</td></tr></table>>];
    bb18__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/></td></tr><tr><td align="left">drop(_31)</td></tr></table>>];
    bb19__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_30)<br/>StorageDead(_28)<br/>StorageDead(_26)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>_52 = &amp;(*_14)<br/></td></tr><tr><td align="left">_51 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _52)</td></tr></table>>];
    bb20__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>_50 = ((*_51).15: u32)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>_55 = &amp;(*_14)<br/></td></tr><tr><td align="left">_54 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _55)</td></tr></table>>];
    bb21__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>_53 = ((*_54).16: u32)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>_59 = _2<br/></td></tr><tr><td align="left">_58 = &lt;u16 as Cast&gt;::cast::&lt;u32&gt;(move _59)</td></tr></table>>];
    bb22__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/></td></tr><tr><td align="left">_57 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _58)</td></tr></table>>];
    bb23__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>_60 = discriminant(_57)<br/></td></tr><tr><td align="left">switchInt(move _60)</td></tr></table>>];
    bb24__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_64)<br/>_64 = ((_57 as Continue).0: u32)<br/>_56 = _64<br/>StorageDead(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>_68 = _3<br/></td></tr><tr><td align="left">_67 = &lt;u16 as Cast&gt;::cast::&lt;u32&gt;(move _68)</td></tr></table>>];
    bb25__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_61)<br/>_61 = ((_57 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_63)<br/>_63 = _61<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _63)</td></tr></table>>];
    bb26__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_61)<br/>StorageDead(_56)<br/>StorageDead(_53)<br/>StorageDead(_50)<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/></td></tr><tr><td align="left">_66 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _67)</td></tr></table>>];
    bb28__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>_69 = discriminant(_66)<br/></td></tr><tr><td align="left">switchInt(move _69)</td></tr></table>>];
    bb29__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_73)<br/>_73 = ((_66 as Continue).0: u32)<br/>_65 = _73<br/>StorageDead(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>_76 = &amp;(*_14)<br/></td></tr><tr><td align="left">_75 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _76)</td></tr></table>>];
    bb30__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_70)<br/>_70 = ((_66 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_72)<br/>_72 = _70<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _72)</td></tr></table>>];
    bb31__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_70)<br/>StorageDead(_65)<br/>StorageDead(_56)<br/>StorageDead(_53)<br/>StorageDead(_50)<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>_74 = ((*_75).13: u32)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>_79 = &amp;(*_14)<br/></td></tr><tr><td align="left">_78 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _79)</td></tr></table>>];
    bb33__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>_77 = (((*_78).1: state::perp_market::AMM).64: u32)<br/></td></tr><tr><td align="left">_49 = validate_margin(move _50, move _53, move _56, move _65, move _74, move _77)</td></tr></table>>];
    bb34__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>StorageDead(_74)<br/>StorageDead(_65)<br/>StorageDead(_56)<br/>StorageDead(_53)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">_48 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _49)</td></tr></table>>];
    bb35__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>_80 = discriminant(_48)<br/></td></tr><tr><td align="left">switchInt(move _80)</td></tr></table>>];
    bb36__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageLive(_84)<br/>_84 = ((_48 as Continue).0: ())<br/>_47 = _84<br/>StorageDead(_84)<br/>StorageDead(_78)<br/>StorageDead(_75)<br/>StorageDead(_66)<br/>StorageDead(_57)<br/>StorageDead(_54)<br/>StorageDead(_51)<br/>StorageDead(_48)<br/>StorageDead(_47)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>_141 = const _<br/>_95 = &amp;(*_141)<br/>_94 = &amp;(*_95)<br/>_93 = move _94 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_94)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>_105 = &amp;(*_14)<br/></td></tr><tr><td align="left">_104 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _105)</td></tr></table>>];
    bb37__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_81)<br/>_81 = ((_48 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_83)<br/>_83 = _81<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _83)</td></tr></table>>];
    bb38__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>StorageDead(_81)<br/>StorageDead(_78)<br/>StorageDead(_75)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/>_103 = &amp;((*_104).32: u16)<br/>_102 = &amp;(*_103)<br/></td></tr><tr><td align="left">_101 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;u16&gt;(move _102)</td></tr></table>>];
    bb40__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>_108 = &amp;_2<br/>_107 = &amp;(*_108)<br/></td></tr><tr><td align="left">_106 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;u16&gt;(move _107)</td></tr></table>>];
    bb41__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>_100 = [move _101, move _106]<br/>StorageDead(_106)<br/>StorageDead(_101)<br/>_99 = &amp;_100<br/>_98 = &amp;(*_99)<br/>_97 = move _98 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_98)<br/></td></tr><tr><td align="left">_92 = Arguments::&lt;'_&gt;::new_v1(move _93, move _97)</td></tr></table>>];
    bb42__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>StorageDead(_93)<br/></td></tr><tr><td align="left">_91 = format(move _92)</td></tr></table>>];
    bb43__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>StorageDead(_108)<br/>StorageDead(_104)<br/>StorageDead(_103)<br/>StorageDead(_100)<br/>StorageDead(_99)<br/>StorageDead(_95)<br/>_90 = move _91<br/>StorageDead(_91)<br/>_89 = &amp;_90<br/>_88 = &amp;(*_89)<br/></td></tr><tr><td align="left">_87 = &lt;String as Deref&gt;::deref(move _88)</td></tr></table>>];
    bb44__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">_86 = &amp;(*_87)<br/>StorageDead(_88)<br/></td></tr><tr><td align="left">_85 = solana_program::log::sol_log(move _86)</td></tr></table>>];
    bb45__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/></td></tr><tr><td align="left">drop(_90)</td></tr></table>>];
    bb46__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>StorageDead(_89)<br/>StorageDead(_87)<br/>StorageDead(_85)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>_140 = const _<br/>_119 = &amp;(*_140)<br/>_118 = &amp;(*_119)<br/>_117 = move _118 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_118)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>_129 = &amp;(*_14)<br/></td></tr><tr><td align="left">_128 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _129)</td></tr></table>>];
    bb47__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_129)<br/>_127 = &amp;((*_128).33: u16)<br/>_126 = &amp;(*_127)<br/></td></tr><tr><td align="left">_125 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;u16&gt;(move _126)</td></tr></table>>];
    bb48__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>_132 = &amp;_3<br/>_131 = &amp;(*_132)<br/></td></tr><tr><td align="left">_130 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;u16&gt;(move _131)</td></tr></table>>];
    bb49__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_131)<br/>_124 = [move _125, move _130]<br/>StorageDead(_130)<br/>StorageDead(_125)<br/>_123 = &amp;_124<br/>_122 = &amp;(*_123)<br/>_121 = move _122 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_122)<br/></td></tr><tr><td align="left">_116 = Arguments::&lt;'_&gt;::new_v1(move _117, move _121)</td></tr></table>>];
    bb50__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_121)<br/>StorageDead(_117)<br/></td></tr><tr><td align="left">_115 = format(move _116)</td></tr></table>>];
    bb51__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_116)<br/>StorageDead(_132)<br/>StorageDead(_128)<br/>StorageDead(_127)<br/>StorageDead(_124)<br/>StorageDead(_123)<br/>StorageDead(_119)<br/>_114 = move _115<br/>StorageDead(_115)<br/>_113 = &amp;_114<br/>_112 = &amp;(*_113)<br/></td></tr><tr><td align="left">_111 = &lt;String as Deref&gt;::deref(move _112)</td></tr></table>>];
    bb52__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">_110 = &amp;(*_111)<br/>StorageDead(_112)<br/></td></tr><tr><td align="left">_109 = solana_program::log::sol_log(move _110)</td></tr></table>>];
    bb53__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/></td></tr><tr><td align="left">drop(_114)</td></tr></table>>];
    bb54__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/>StorageDead(_113)<br/>StorageDead(_111)<br/>StorageDead(_109)<br/>StorageLive(_133)<br/>_133 = _2<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>_135 = &amp;mut (*_14)<br/></td></tr><tr><td align="left">_134 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _135)</td></tr></table>>];
    bb55__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_135)<br/>((*_134).32: u16) = move _133<br/>StorageDead(_133)<br/>StorageDead(_134)<br/>StorageLive(_136)<br/>_136 = _3<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>_138 = &amp;mut (*_14)<br/></td></tr><tr><td align="left">_137 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _138)</td></tr></table>>];
    bb56__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/>((*_137).33: u16) = move _136<br/>StorageDead(_136)<br/>StorageDead(_137)<br/>StorageLive(_139)<br/>_139 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _139)<br/>StorageDead(_139)<br/></td></tr><tr><td align="left">drop(_15)</td></tr></table>>];
    bb57__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb58__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_54)<br/>StorageDead(_51)<br/>StorageDead(_48)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">drop(_15)</td></tr></table>>];
    bb60__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb61__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left">return</td></tr></table>>];
    bb62__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">62 (cleanup)</td></tr><tr><td align="left">drop(_114)</td></tr></table>>];
    bb63__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">63 (cleanup)</td></tr><tr><td align="left">drop(_90)</td></tr></table>>];
    bb64__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">64 (cleanup)</td></tr><tr><td align="left">drop(_31)</td></tr></table>>];
    bb65__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">65 (cleanup)</td></tr><tr><td align="left">drop(_15)</td></tr></table>>];
    bb66__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">66 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb67__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">67 (cleanup)</td></tr><tr><td align="left" balign="left">_153 = discriminant(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_5559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">68 (cleanup)</td></tr><tr><td align="left" balign="left">_154 = discriminant(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_5559 -> bb1__0_5559 [label="return"];
    bb1__0_5559 -> bb2__0_5559 [label="return"];
    bb1__0_5559 -> bb66__0_5559 [label="unwind"];
    bb2__0_5559 -> bb3__0_5559 [label="0"];
    bb2__0_5559 -> bb5__0_5559 [label="1"];
    bb2__0_5559 -> bb4__0_5559 [label="otherwise"];
    bb3__0_5559 -> bb7__0_5559 [label="return"];
    bb5__0_5559 -> bb6__0_5559 [label="return"];
    bb5__0_5559 -> bb68__0_5559 [label="unwind"];
    bb6__0_5559 -> bb61__0_5559 [label=""];
    bb7__0_5559 -> bb8__0_5559 [label="return"];
    bb7__0_5559 -> bb66__0_5559 [label="unwind"];
    bb8__0_5559 -> bb9__0_5559 [label="return"];
    bb8__0_5559 -> bb66__0_5559 [label="unwind"];
    bb9__0_5559 -> bb10__0_5559 [label="0"];
    bb9__0_5559 -> bb11__0_5559 [label="1"];
    bb9__0_5559 -> bb4__0_5559 [label="otherwise"];
    bb10__0_5559 -> bb13__0_5559 [label="return"];
    bb10__0_5559 -> bb65__0_5559 [label="unwind"];
    bb11__0_5559 -> bb12__0_5559 [label="return"];
    bb11__0_5559 -> bb67__0_5559 [label="unwind"];
    bb12__0_5559 -> bb60__0_5559 [label=""];
    bb13__0_5559 -> bb14__0_5559 [label="return"];
    bb13__0_5559 -> bb65__0_5559 [label="unwind"];
    bb14__0_5559 -> bb15__0_5559 [label="return"];
    bb14__0_5559 -> bb65__0_5559 [label="unwind"];
    bb15__0_5559 -> bb16__0_5559 [label="return"];
    bb15__0_5559 -> bb65__0_5559 [label="unwind"];
    bb16__0_5559 -> bb17__0_5559 [label="return"];
    bb16__0_5559 -> bb64__0_5559 [label="unwind"];
    bb17__0_5559 -> bb18__0_5559 [label="return"];
    bb17__0_5559 -> bb64__0_5559 [label="unwind"];
    bb18__0_5559 -> bb19__0_5559 [label="return"];
    bb18__0_5559 -> bb65__0_5559 [label="unwind"];
    bb19__0_5559 -> bb20__0_5559 [label="return"];
    bb19__0_5559 -> bb65__0_5559 [label="unwind"];
    bb20__0_5559 -> bb21__0_5559 [label="return"];
    bb20__0_5559 -> bb65__0_5559 [label="unwind"];
    bb21__0_5559 -> bb22__0_5559 [label="return"];
    bb21__0_5559 -> bb65__0_5559 [label="unwind"];
    bb22__0_5559 -> bb23__0_5559 [label="return"];
    bb22__0_5559 -> bb65__0_5559 [label="unwind"];
    bb23__0_5559 -> bb24__0_5559 [label="0"];
    bb23__0_5559 -> bb25__0_5559 [label="1"];
    bb23__0_5559 -> bb4__0_5559 [label="otherwise"];
    bb24__0_5559 -> bb27__0_5559 [label="return"];
    bb24__0_5559 -> bb65__0_5559 [label="unwind"];
    bb25__0_5559 -> bb26__0_5559 [label="return"];
    bb25__0_5559 -> bb65__0_5559 [label="unwind"];
    bb26__0_5559 -> bb59__0_5559 [label=""];
    bb27__0_5559 -> bb28__0_5559 [label="return"];
    bb27__0_5559 -> bb65__0_5559 [label="unwind"];
    bb28__0_5559 -> bb29__0_5559 [label="0"];
    bb28__0_5559 -> bb30__0_5559 [label="1"];
    bb28__0_5559 -> bb4__0_5559 [label="otherwise"];
    bb29__0_5559 -> bb32__0_5559 [label="return"];
    bb29__0_5559 -> bb65__0_5559 [label="unwind"];
    bb30__0_5559 -> bb31__0_5559 [label="return"];
    bb30__0_5559 -> bb65__0_5559 [label="unwind"];
    bb31__0_5559 -> bb58__0_5559 [label=""];
    bb32__0_5559 -> bb33__0_5559 [label="return"];
    bb32__0_5559 -> bb65__0_5559 [label="unwind"];
    bb33__0_5559 -> bb34__0_5559 [label="return"];
    bb33__0_5559 -> bb65__0_5559 [label="unwind"];
    bb34__0_5559 -> bb35__0_5559 [label="return"];
    bb34__0_5559 -> bb65__0_5559 [label="unwind"];
    bb35__0_5559 -> bb36__0_5559 [label="0"];
    bb35__0_5559 -> bb37__0_5559 [label="1"];
    bb35__0_5559 -> bb4__0_5559 [label="otherwise"];
    bb36__0_5559 -> bb39__0_5559 [label="return"];
    bb36__0_5559 -> bb65__0_5559 [label="unwind"];
    bb37__0_5559 -> bb38__0_5559 [label="return"];
    bb37__0_5559 -> bb65__0_5559 [label="unwind"];
    bb38__0_5559 -> bb58__0_5559 [label=""];
    bb39__0_5559 -> bb40__0_5559 [label="return"];
    bb39__0_5559 -> bb65__0_5559 [label="unwind"];
    bb40__0_5559 -> bb41__0_5559 [label="return"];
    bb40__0_5559 -> bb65__0_5559 [label="unwind"];
    bb41__0_5559 -> bb42__0_5559 [label="return"];
    bb41__0_5559 -> bb65__0_5559 [label="unwind"];
    bb42__0_5559 -> bb43__0_5559 [label="return"];
    bb42__0_5559 -> bb65__0_5559 [label="unwind"];
    bb43__0_5559 -> bb44__0_5559 [label="return"];
    bb43__0_5559 -> bb63__0_5559 [label="unwind"];
    bb44__0_5559 -> bb45__0_5559 [label="return"];
    bb44__0_5559 -> bb63__0_5559 [label="unwind"];
    bb45__0_5559 -> bb46__0_5559 [label="return"];
    bb45__0_5559 -> bb65__0_5559 [label="unwind"];
    bb46__0_5559 -> bb47__0_5559 [label="return"];
    bb46__0_5559 -> bb65__0_5559 [label="unwind"];
    bb47__0_5559 -> bb48__0_5559 [label="return"];
    bb47__0_5559 -> bb65__0_5559 [label="unwind"];
    bb48__0_5559 -> bb49__0_5559 [label="return"];
    bb48__0_5559 -> bb65__0_5559 [label="unwind"];
    bb49__0_5559 -> bb50__0_5559 [label="return"];
    bb49__0_5559 -> bb65__0_5559 [label="unwind"];
    bb50__0_5559 -> bb51__0_5559 [label="return"];
    bb50__0_5559 -> bb65__0_5559 [label="unwind"];
    bb51__0_5559 -> bb52__0_5559 [label="return"];
    bb51__0_5559 -> bb62__0_5559 [label="unwind"];
    bb52__0_5559 -> bb53__0_5559 [label="return"];
    bb52__0_5559 -> bb62__0_5559 [label="unwind"];
    bb53__0_5559 -> bb54__0_5559 [label="return"];
    bb53__0_5559 -> bb65__0_5559 [label="unwind"];
    bb54__0_5559 -> bb55__0_5559 [label="return"];
    bb54__0_5559 -> bb65__0_5559 [label="unwind"];
    bb55__0_5559 -> bb56__0_5559 [label="return"];
    bb55__0_5559 -> bb65__0_5559 [label="unwind"];
    bb56__0_5559 -> bb57__0_5559 [label="return"];
    bb56__0_5559 -> bb66__0_5559 [label="unwind"];
    bb57__0_5559 -> bb61__0_5559 [label=""];
    bb58__0_5559 -> bb59__0_5559 [label=""];
    bb59__0_5559 -> bb60__0_5559 [label="return"];
    bb59__0_5559 -> bb66__0_5559 [label="unwind"];
    bb60__0_5559 -> bb61__0_5559 [label=""];
    bb62__0_5559 -> bb65__0_5559 [label="return"];
    bb63__0_5559 -> bb65__0_5559 [label="return"];
    bb64__0_5559 -> bb65__0_5559 [label="return"];
    bb65__0_5559 -> bb66__0_5559 [label="return"];
    bb67__0_5559 -> bb66__0_5559 [label=""];
    bb68__0_5559 -> bb66__0_5559 [label=""];
}
