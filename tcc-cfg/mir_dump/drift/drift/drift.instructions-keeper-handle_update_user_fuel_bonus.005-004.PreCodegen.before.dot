digraph Mir_0_9219 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn keeper::handle_update_user_fuel_bonus(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::keeper::UpdateUserFuelBonus&lt;ReErased&gt;&gt;) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _2: ();<br align="left"/>let mut _3: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _4: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _5: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _6: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _7: isize;<br align="left"/>let _8: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _9: !;<br align="left"/>let mut _10: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _11: ();<br align="left"/>let mut _12: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _13: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _14: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _15: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _16: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _17: Closure(DefId(0:9222 ~ drift[d311]::instructions::keeper::handle_update_user_fuel_bonus::{closure#0}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _18: isize;<br align="left"/>let _19: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _20: !;<br align="left"/>let mut _21: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _22: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _23: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _24: std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _25: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;;<br align="left"/>let mut _26: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _27: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _28: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _29: Closure(DefId(0:9223 ~ drift[d311]::instructions::keeper::handle_update_user_fuel_bonus::{closure#1}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _30: isize;<br align="left"/>let _31: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _32: !;<br align="left"/>let mut _33: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _34: std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let _35: anchor_lang::prelude::Clock;<br align="left"/>let mut _36: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _37: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _38: isize;<br align="left"/>let _39: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _40: !;<br align="left"/>let mut _41: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _42: anchor_lang::prelude::Clock;<br align="left"/>let _43: i64;<br align="left"/>let _44: state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _45: state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _46: state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _47: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let mut _48: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, instructions::optional_accounts::AccountMaps&lt;ReErased&gt;&gt;;<br align="left"/>let mut _49: std::result::Result&lt;instructions::optional_accounts::AccountMaps&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _50: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _51: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _52: std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _53: std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _54: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _55: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _56: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _57: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _58: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _59: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _60: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _61: u64;<br align="left"/>let mut _62: std::option::Option&lt;state::state::OracleGuardRails&gt;;<br align="left"/>let mut _63: isize;<br align="left"/>let _64: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _65: !;<br align="left"/>let mut _66: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _67: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let _68: state::margin_calculation::MarginCalculation;<br align="left"/>let mut _69: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::margin_calculation::MarginCalculation&gt;;<br align="left"/>let mut _70: std::result::Result&lt;state::margin_calculation::MarginCalculation, error::ErrorCode&gt;;<br align="left"/>let mut _71: &amp;ReErased state::user::User;<br align="left"/>let _72: &amp;ReErased state::user::User;<br align="left"/>let mut _73: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _74: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _75: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _76: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _77: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let _78: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _79: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _80: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _81: state::margin_calculation::MarginContext;<br align="left"/>let mut _82: state::margin_calculation::MarginContext;<br align="left"/>let mut _83: math::margin::MarginRequirementType;<br align="left"/>let mut _84: &amp;ReErased state::user::User;<br align="left"/>let _85: &amp;ReErased state::user::User;<br align="left"/>let mut _86: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _87: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _88: i64;<br align="left"/>let mut _89: isize;<br align="left"/>let _90: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _91: !;<br align="left"/>let mut _92: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _93: state::margin_calculation::MarginCalculation;<br align="left"/>let _94: ();<br align="left"/>let mut _95: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _96: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _97: &amp;ReErased mut state::user::UserStats;<br align="left"/>let mut _98: &amp;ReErased mut state::user::UserStats;<br align="left"/>let mut _99: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _100: &amp;ReErased mut state::user::User;<br align="left"/>let mut _101: &amp;ReErased mut state::user::User;<br align="left"/>let mut _102: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _103: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _104: u32;<br align="left"/>let mut _105: u32;<br align="left"/>let mut _106: u32;<br align="left"/>let mut _107: i64;<br align="left"/>let mut _108: isize;<br align="left"/>let _109: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _110: !;<br align="left"/>let mut _111: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _112: ();<br align="left"/>let mut _113: ();<br align="left"/>let mut _114: &amp;ReErased mut instructions::keeper::UpdateUserFuelBonus&lt;ReErased&gt;;<br align="left"/>let mut _115: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _116: &amp;ReErased mut instructions::keeper::UpdateUserFuelBonus&lt;ReErased&gt;;<br align="left"/>let mut _117: &amp;ReErased mut instructions::keeper::UpdateUserFuelBonus&lt;ReErased&gt;;<br align="left"/>let mut _118: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _119: isize;<br align="left"/>let mut _120: isize;<br align="left"/>let mut _121: isize;<br align="left"/>let mut _122: isize;<br align="left"/>let mut _123: isize;<br align="left"/>let mut _124: isize;<br align="left"/>let mut _125: isize;<br align="left"/>let mut _126: isize;<br align="left"/>let mut _127: isize;<br align="left"/>let mut _128: isize;<br align="left"/>let mut _129: isize;<br align="left"/>let mut _130: isize;<br align="left"/>let mut _131: isize;<br align="left"/>let mut _132: isize;<br align="left"/>let mut _133: isize;<br align="left"/>let mut _134: isize;<br align="left"/>let mut _135: isize;<br align="left"/>let mut _136: isize;<br align="left"/>let mut _137: isize;<br align="left"/>let mut _138: isize;<br align="left"/>let mut _139: isize;<br align="left"/>let mut _140: isize;<br align="left"/>let mut _141: isize;<br align="left"/>let mut _142: isize;<br align="left"/>let mut _143: isize;<br align="left"/>let mut _144: isize;<br align="left"/>let mut _145: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug residual =&gt; _8;<br align="left"/>debug val =&gt; _11;<br align="left"/>debug user =&gt; _12;<br align="left"/>debug residual =&gt; _19;<br align="left"/>debug val =&gt; _22;<br align="left"/>debug user_stats =&gt; _23;<br align="left"/>debug residual =&gt; _31;<br align="left"/>debug val =&gt; _34;<br align="left"/>debug clock =&gt; _35;<br align="left"/>debug residual =&gt; _39;<br align="left"/>debug val =&gt; _42;<br align="left"/>debug now =&gt; _43;<br align="left"/>debug perp_market_map =&gt; _44;<br align="left"/>debug spot_market_map =&gt; _45;<br align="left"/>debug oracle_map =&gt; _46;<br align="left"/>debug residual =&gt; _64;<br align="left"/>debug val =&gt; _67;<br align="left"/>debug user_margin_calculation =&gt; _68;<br align="left"/>debug residual =&gt; _90;<br align="left"/>debug val =&gt; _93;<br align="left"/>debug residual =&gt; _109;<br align="left"/>debug val =&gt; _112;<br align="left"/>>;
    bb0__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_114 = deref_copy (_1.1: &amp;mut instructions::keeper::UpdateUserFuelBonus&lt;'_&gt;)<br/>_6 = &amp;((*_114).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_115 = deref_copy (*_6)<br/>_145 = (((_115.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_5 = &amp;(*_145)<br/></td></tr><tr><td align="left">_4 = constraints::exchange_not_paused(move _5)</td></tr></table>>];
    bb1__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">_3 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _4)</td></tr></table>>];
    bb2__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>_7 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _7)</td></tr></table>>];
    bb3__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = ((_3 as Continue).0: ())<br/>_2 = _11<br/>StorageDead(_11)<br/>_119 = discriminant(_3)<br/>StorageDead(_6)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_116 = deref_copy (_1.1: &amp;mut instructions::keeper::UpdateUserFuelBonus&lt;'_&gt;)<br/>_16 = &amp;((*_116).2: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_15 = anchor_lang::prelude::AccountLoader::&lt;'_, User&gt;::load_mut(move _16)</td></tr></table>>];
    bb4__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/>_8 = move ((_3 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_10)<br/>_10 = move _8<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _10)</td></tr></table>>];
    bb6__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_8)<br/>_137 = discriminant(_3)<br/>StorageDead(_6)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageLive(_17)<br/>_17 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_14 = std::result::Result::&lt;RefMut&lt;'_, User&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _15, move _17)</td></tr></table>>];
    bb8__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">_13 = &lt;std::result::Result&lt;RefMut&lt;'_, User&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _14)</td></tr></table>>];
    bb9__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>_18 = discriminant(_13)<br/></td></tr><tr><td align="left">switchInt(move _18)</td></tr></table>>];
    bb10__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_22)<br/>_22 = move ((_13 as Continue).0: std::cell::RefMut&lt;'_, state::user::User&gt;)<br/>_12 = move _22<br/>StorageDead(_22)<br/>_123 = discriminant(_13)<br/>StorageDead(_13)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>_117 = deref_copy (_1.1: &amp;mut instructions::keeper::UpdateUserFuelBonus&lt;'_&gt;)<br/>_28 = &amp;((*_117).3: anchor_lang::prelude::AccountLoader&lt;'_, state::user::UserStats&gt;)<br/></td></tr><tr><td align="left">_27 = anchor_lang::prelude::AccountLoader::&lt;'_, UserStats&gt;::load_mut(move _28)</td></tr></table>>];
    bb11__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_19)<br/>_19 = ((_13 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_21)<br/>_21 = _19<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _21)</td></tr></table>>];
    bb12__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_19)<br/>_121 = discriminant(_13)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageLive(_29)<br/>_29 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_26 = std::result::Result::&lt;RefMut&lt;'_, UserStats&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _27, move _29)</td></tr></table>>];
    bb14__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">_25 = &lt;std::result::Result&lt;RefMut&lt;'_, UserStats&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _26)</td></tr></table>>];
    bb15__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>_30 = discriminant(_25)<br/></td></tr><tr><td align="left">switchInt(move _30)</td></tr></table>>];
    bb16__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_34)<br/>_34 = move ((_25 as Continue).0: std::cell::RefMut&lt;'_, state::user::UserStats&gt;)<br/>_24 = move _34<br/>StorageDead(_34)<br/>_23 = &amp;mut _24<br/>_127 = discriminant(_25)<br/>StorageDead(_25)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/></td></tr><tr><td align="left">_37 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb17__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_31)<br/>_31 = ((_25 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_33)<br/>_33 = _31<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _33)</td></tr></table>>];
    bb18__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_31)<br/>_125 = discriminant(_25)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left">_36 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _37)</td></tr></table>>];
    bb20__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>_38 = discriminant(_36)<br/></td></tr><tr><td align="left">switchInt(move _38)</td></tr></table>>];
    bb21__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_42)<br/>_42 = move ((_36 as Continue).0: anchor_lang::prelude::Clock)<br/>_35 = move _42<br/>StorageDead(_42)<br/>_129 = discriminant(_36)<br/>StorageDead(_36)<br/>StorageLive(_43)<br/>_43 = (_35.4: i64)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>_118 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_54 = &amp;(*_118)<br/></td></tr><tr><td align="left">_53 = core::slice::&lt;impl [anchor_lang::prelude::AccountInfo&lt;'_&gt;]&gt;::iter(move _54)</td></tr></table>>];
    bb22__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_39)<br/>_39 = move ((_36 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_41)<br/>_41 = move _39<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _41)</td></tr></table>>];
    bb23__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_39)<br/>_135 = discriminant(_36)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/></td></tr><tr><td align="left">_52 = &lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as Iterator&gt;::peekable(move _53)</td></tr></table>>];
    bb25__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>_51 = &amp;mut _52<br/>_50 = &amp;mut (*_51)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/></td></tr><tr><td align="left">_57 = BTreeSet::&lt;u16&gt;::new()</td></tr></table>>];
    bb26__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">_56 = &amp;_57<br/>_55 = &amp;(*_56)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/></td></tr><tr><td align="left">_60 = BTreeSet::&lt;u16&gt;::new()</td></tr></table>>];
    bb27__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">_59 = &amp;_60<br/>_58 = &amp;(*_59)<br/>StorageLive(_61)<br/>_61 = (_35.0: u64)<br/>StorageLive(_62)<br/>_62 = Option::&lt;state::state::OracleGuardRails&gt;::None<br/></td></tr><tr><td align="left">_49 = load_maps(move _50, move _55, move _58, move _61, move _62)</td></tr></table>>];
    bb28__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageDead(_61)<br/>StorageDead(_58)<br/>StorageDead(_55)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">_48 = &lt;std::result::Result&lt;AccountMaps&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _49)</td></tr></table>>];
    bb29__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>_63 = discriminant(_48)<br/></td></tr><tr><td align="left">switchInt(move _63)</td></tr></table>>];
    bb30__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_67)<br/>_67 = move ((_48 as Continue).0: instructions::optional_accounts::AccountMaps&lt;'_&gt;)<br/>_47 = move _67<br/>StorageDead(_67)<br/>StorageLive(_44)<br/>_44 = move (_47.0: state::perp_market_map::PerpMarketMap&lt;'_&gt;)<br/>StorageLive(_45)<br/>_45 = move (_47.1: state::spot_market_map::SpotMarketMap&lt;'_&gt;)<br/>StorageLive(_46)<br/>_46 = move (_47.2: state::oracle_map::OracleMap&lt;'_&gt;)<br/>_133 = discriminant(_48)<br/></td></tr><tr><td align="left">drop(_60)</td></tr></table>>];
    bb31__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_64)<br/>_64 = ((_48 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_66)<br/>_66 = _64<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _66)</td></tr></table>>];
    bb32__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageDead(_64)<br/>_131 = discriminant(_48)<br/></td></tr><tr><td align="left">drop(_60)</td></tr></table>>];
    bb33__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageDead(_59)<br/></td></tr><tr><td align="left">drop(_57)</td></tr></table>>];
    bb34__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_56)<br/>StorageDead(_52)<br/>StorageDead(_51)<br/>StorageDead(_48)<br/>StorageDead(_47)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>_74 = &amp;_12<br/>_73 = &amp;(*_74)<br/></td></tr><tr><td align="left">_72 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _73)</td></tr></table>>];
    bb35__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">_71 = &amp;(*_72)<br/>StorageDead(_73)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>_76 = &amp;_44<br/>_75 = &amp;(*_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>_78 = &amp;_45<br/>_77 = &amp;(*_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>_80 = &amp;mut _46<br/>_79 = &amp;mut (*_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>_83 = math::margin::MarginRequirementType::Initial<br/></td></tr><tr><td align="left">_82 = MarginContext::standard(move _83)</td></tr></table>>];
    bb36__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>_87 = &amp;_12<br/>_86 = &amp;(*_87)<br/></td></tr><tr><td align="left">_85 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _86)</td></tr></table>>];
    bb37__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">_84 = &amp;(*_85)<br/>StorageDead(_86)<br/>StorageLive(_88)<br/>_88 = _43<br/></td></tr><tr><td align="left">_81 = MarginContext::fuel_numerator(move _82, move _84, move _88)</td></tr></table>>];
    bb38__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>StorageDead(_84)<br/>StorageDead(_82)<br/></td></tr><tr><td align="left">_70 = math::margin::calculate_margin_requirement_and_total_collateral_and_liability_info(move _71, move _75, move _77, move _79, move _81)</td></tr></table>>];
    bb39__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>StorageDead(_79)<br/>StorageDead(_77)<br/>StorageDead(_75)<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">_69 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as Try&gt;::branch(move _70)</td></tr></table>>];
    bb40__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>_89 = discriminant(_69)<br/></td></tr><tr><td align="left">switchInt(move _89)</td></tr></table>>];
    bb41__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageLive(_93)<br/>_93 = ((_69 as Continue).0: state::margin_calculation::MarginCalculation)<br/>_68 = _93<br/>StorageDead(_93)<br/>StorageDead(_87)<br/>StorageDead(_85)<br/>StorageDead(_80)<br/>StorageDead(_78)<br/>StorageDead(_76)<br/>StorageDead(_74)<br/>StorageDead(_72)<br/>StorageDead(_69)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>_99 = &amp;mut (*_23)<br/></td></tr><tr><td align="left">_98 = &lt;RefMut&lt;'_, UserStats&gt; as DerefMut&gt;::deref_mut(move _99)</td></tr></table>>];
    bb42__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageLive(_90)<br/>_90 = ((_69 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_92)<br/>_92 = _90<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _92)</td></tr></table>>];
    bb43__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>StorageDead(_90)<br/>StorageDead(_87)<br/>StorageDead(_85)<br/>StorageDead(_80)<br/>StorageDead(_78)<br/>StorageDead(_76)<br/>StorageDead(_74)<br/>StorageDead(_72)<br/>StorageDead(_69)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">_97 = &amp;mut (*_98)<br/>StorageDead(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>_103 = &amp;mut _12<br/>_102 = &amp;mut (*_103)<br/></td></tr><tr><td align="left">_101 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _102)</td></tr></table>>];
    bb45__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">_100 = &amp;mut (*_101)<br/>StorageDead(_102)<br/>StorageLive(_104)<br/>_104 = (_68.17: u32)<br/>StorageLive(_105)<br/>_105 = (_68.18: u32)<br/>StorageLive(_106)<br/>_106 = (_68.19: u32)<br/>StorageLive(_107)<br/>_107 = _43<br/></td></tr><tr><td align="left">_96 = UserStats::update_fuel_bonus(move _97, move _100, move _104, move _105, move _106, move _107)</td></tr></table>>];
    bb46__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>StorageDead(_106)<br/>StorageDead(_105)<br/>StorageDead(_104)<br/>StorageDead(_100)<br/>StorageDead(_97)<br/></td></tr><tr><td align="left">_95 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _96)</td></tr></table>>];
    bb47__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>_108 = discriminant(_95)<br/></td></tr><tr><td align="left">switchInt(move _108)</td></tr></table>>];
    bb48__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageLive(_112)<br/>_112 = ((_95 as Continue).0: ())<br/>_94 = _112<br/>StorageDead(_112)<br/>StorageDead(_103)<br/>StorageDead(_101)<br/>StorageDead(_98)<br/>StorageDead(_95)<br/>StorageDead(_94)<br/>StorageLive(_113)<br/>_113 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _113)<br/>StorageDead(_113)<br/>StorageDead(_68)<br/></td></tr><tr><td align="left">drop(_46)</td></tr></table>>];
    bb49__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageLive(_109)<br/>_109 = ((_95 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_111)<br/>_111 = _109<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _111)</td></tr></table>>];
    bb50__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/>StorageDead(_109)<br/>StorageDead(_103)<br/>StorageDead(_101)<br/>StorageDead(_98)<br/>StorageDead(_95)<br/>StorageDead(_94)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb51__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/></td></tr><tr><td align="left">drop(_45)</td></tr></table>>];
    bb52__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/></td></tr><tr><td align="left">drop(_44)</td></tr></table>>];
    bb53__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_43)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">drop(_24)</td></tr></table>>];
    bb54__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">drop(_12)</td></tr></table>>];
    bb55__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb56__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/></td></tr><tr><td align="left">drop(_46)</td></tr></table>>];
    bb57__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/></td></tr><tr><td align="left">drop(_45)</td></tr></table>>];
    bb58__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/></td></tr><tr><td align="left">drop(_44)</td></tr></table>>];
    bb59__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb60__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageDead(_59)<br/></td></tr><tr><td align="left">drop(_57)</td></tr></table>>];
    bb61__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_56)<br/>StorageDead(_52)<br/>StorageDead(_51)<br/>StorageDead(_48)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb63__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/></td></tr><tr><td align="left">drop(_24)</td></tr></table>>];
    bb64__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">drop(_12)</td></tr></table>>];
    bb65__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb66__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left">return</td></tr></table>>];
    bb67__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">67 (cleanup)</td></tr><tr><td align="left">drop(_57)</td></tr></table>>];
    bb68__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">68 (cleanup)</td></tr><tr><td align="left">drop(_46)</td></tr></table>>];
    bb69__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">69 (cleanup)</td></tr><tr><td align="left">drop(_45)</td></tr></table>>];
    bb70__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">70 (cleanup)</td></tr><tr><td align="left">drop(_44)</td></tr></table>>];
    bb71__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">71 (cleanup)</td></tr><tr><td align="left">drop(_60)</td></tr></table>>];
    bb72__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">72 (cleanup)</td></tr><tr><td align="left">drop(_57)</td></tr></table>>];
    bb73__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">73 (cleanup)</td></tr><tr><td align="left">drop(_24)</td></tr></table>>];
    bb74__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">74 (cleanup)</td></tr><tr><td align="left">drop(_12)</td></tr></table>>];
    bb75__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">75 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb76__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">76 (cleanup)</td></tr><tr><td align="left" balign="left">_140 = discriminant(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb77__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">77 (cleanup)</td></tr><tr><td align="left" balign="left">_141 = discriminant(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb78__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">78 (cleanup)</td></tr><tr><td align="left" balign="left">_142 = discriminant(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb79__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">79 (cleanup)</td></tr><tr><td align="left" balign="left">_143 = discriminant(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb80__0_9219 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">80 (cleanup)</td></tr><tr><td align="left" balign="left">_144 = discriminant(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_9219 -> bb1__0_9219 [label="return"];
    bb1__0_9219 -> bb2__0_9219 [label="return"];
    bb1__0_9219 -> bb75__0_9219 [label="unwind"];
    bb2__0_9219 -> bb3__0_9219 [label="0"];
    bb2__0_9219 -> bb5__0_9219 [label="1"];
    bb2__0_9219 -> bb4__0_9219 [label="otherwise"];
    bb3__0_9219 -> bb7__0_9219 [label="return"];
    bb5__0_9219 -> bb6__0_9219 [label="return"];
    bb5__0_9219 -> bb80__0_9219 [label="unwind"];
    bb6__0_9219 -> bb66__0_9219 [label=""];
    bb7__0_9219 -> bb8__0_9219 [label="return"];
    bb7__0_9219 -> bb75__0_9219 [label="unwind"];
    bb8__0_9219 -> bb9__0_9219 [label="return"];
    bb8__0_9219 -> bb75__0_9219 [label="unwind"];
    bb9__0_9219 -> bb10__0_9219 [label="0"];
    bb9__0_9219 -> bb11__0_9219 [label="1"];
    bb9__0_9219 -> bb4__0_9219 [label="otherwise"];
    bb10__0_9219 -> bb13__0_9219 [label="return"];
    bb10__0_9219 -> bb74__0_9219 [label="unwind"];
    bb11__0_9219 -> bb12__0_9219 [label="return"];
    bb11__0_9219 -> bb79__0_9219 [label="unwind"];
    bb12__0_9219 -> bb65__0_9219 [label=""];
    bb13__0_9219 -> bb14__0_9219 [label="return"];
    bb13__0_9219 -> bb74__0_9219 [label="unwind"];
    bb14__0_9219 -> bb15__0_9219 [label="return"];
    bb14__0_9219 -> bb74__0_9219 [label="unwind"];
    bb15__0_9219 -> bb16__0_9219 [label="0"];
    bb15__0_9219 -> bb17__0_9219 [label="1"];
    bb15__0_9219 -> bb4__0_9219 [label="otherwise"];
    bb16__0_9219 -> bb19__0_9219 [label="return"];
    bb16__0_9219 -> bb73__0_9219 [label="unwind"];
    bb17__0_9219 -> bb18__0_9219 [label="return"];
    bb17__0_9219 -> bb78__0_9219 [label="unwind"];
    bb18__0_9219 -> bb64__0_9219 [label=""];
    bb19__0_9219 -> bb20__0_9219 [label="return"];
    bb19__0_9219 -> bb73__0_9219 [label="unwind"];
    bb20__0_9219 -> bb21__0_9219 [label="0"];
    bb20__0_9219 -> bb22__0_9219 [label="1"];
    bb20__0_9219 -> bb4__0_9219 [label="otherwise"];
    bb21__0_9219 -> bb24__0_9219 [label="return"];
    bb21__0_9219 -> bb73__0_9219 [label="unwind"];
    bb22__0_9219 -> bb23__0_9219 [label="return"];
    bb22__0_9219 -> bb77__0_9219 [label="unwind"];
    bb23__0_9219 -> bb63__0_9219 [label=""];
    bb24__0_9219 -> bb25__0_9219 [label="return"];
    bb24__0_9219 -> bb73__0_9219 [label="unwind"];
    bb25__0_9219 -> bb26__0_9219 [label="return"];
    bb25__0_9219 -> bb73__0_9219 [label="unwind"];
    bb26__0_9219 -> bb27__0_9219 [label="return"];
    bb26__0_9219 -> bb72__0_9219 [label="unwind"];
    bb27__0_9219 -> bb28__0_9219 [label="return"];
    bb27__0_9219 -> bb71__0_9219 [label="unwind"];
    bb28__0_9219 -> bb29__0_9219 [label="return"];
    bb28__0_9219 -> bb71__0_9219 [label="unwind"];
    bb29__0_9219 -> bb30__0_9219 [label="0"];
    bb29__0_9219 -> bb31__0_9219 [label="1"];
    bb29__0_9219 -> bb4__0_9219 [label="otherwise"];
    bb30__0_9219 -> bb33__0_9219 [label="return"];
    bb30__0_9219 -> bb67__0_9219 [label="unwind"];
    bb31__0_9219 -> bb32__0_9219 [label="return"];
    bb31__0_9219 -> bb76__0_9219 [label="unwind"];
    bb32__0_9219 -> bb60__0_9219 [label="return"];
    bb32__0_9219 -> bb72__0_9219 [label="unwind"];
    bb33__0_9219 -> bb34__0_9219 [label="return"];
    bb33__0_9219 -> bb68__0_9219 [label="unwind"];
    bb34__0_9219 -> bb35__0_9219 [label="return"];
    bb34__0_9219 -> bb68__0_9219 [label="unwind"];
    bb35__0_9219 -> bb36__0_9219 [label="return"];
    bb35__0_9219 -> bb68__0_9219 [label="unwind"];
    bb36__0_9219 -> bb37__0_9219 [label="return"];
    bb36__0_9219 -> bb68__0_9219 [label="unwind"];
    bb37__0_9219 -> bb38__0_9219 [label="return"];
    bb37__0_9219 -> bb68__0_9219 [label="unwind"];
    bb38__0_9219 -> bb39__0_9219 [label="return"];
    bb38__0_9219 -> bb68__0_9219 [label="unwind"];
    bb39__0_9219 -> bb40__0_9219 [label="return"];
    bb39__0_9219 -> bb68__0_9219 [label="unwind"];
    bb40__0_9219 -> bb41__0_9219 [label="0"];
    bb40__0_9219 -> bb42__0_9219 [label="1"];
    bb40__0_9219 -> bb4__0_9219 [label="otherwise"];
    bb41__0_9219 -> bb44__0_9219 [label="return"];
    bb41__0_9219 -> bb68__0_9219 [label="unwind"];
    bb42__0_9219 -> bb43__0_9219 [label="return"];
    bb42__0_9219 -> bb68__0_9219 [label="unwind"];
    bb43__0_9219 -> bb56__0_9219 [label=""];
    bb44__0_9219 -> bb45__0_9219 [label="return"];
    bb44__0_9219 -> bb68__0_9219 [label="unwind"];
    bb45__0_9219 -> bb46__0_9219 [label="return"];
    bb45__0_9219 -> bb68__0_9219 [label="unwind"];
    bb46__0_9219 -> bb47__0_9219 [label="return"];
    bb46__0_9219 -> bb68__0_9219 [label="unwind"];
    bb47__0_9219 -> bb48__0_9219 [label="0"];
    bb47__0_9219 -> bb49__0_9219 [label="1"];
    bb47__0_9219 -> bb4__0_9219 [label="otherwise"];
    bb48__0_9219 -> bb51__0_9219 [label="return"];
    bb48__0_9219 -> bb69__0_9219 [label="unwind"];
    bb49__0_9219 -> bb50__0_9219 [label="return"];
    bb49__0_9219 -> bb68__0_9219 [label="unwind"];
    bb50__0_9219 -> bb56__0_9219 [label=""];
    bb51__0_9219 -> bb52__0_9219 [label="return"];
    bb51__0_9219 -> bb70__0_9219 [label="unwind"];
    bb52__0_9219 -> bb53__0_9219 [label="return"];
    bb52__0_9219 -> bb73__0_9219 [label="unwind"];
    bb53__0_9219 -> bb54__0_9219 [label="return"];
    bb53__0_9219 -> bb74__0_9219 [label="unwind"];
    bb54__0_9219 -> bb55__0_9219 [label="return"];
    bb54__0_9219 -> bb75__0_9219 [label="unwind"];
    bb55__0_9219 -> bb66__0_9219 [label=""];
    bb56__0_9219 -> bb57__0_9219 [label="return"];
    bb56__0_9219 -> bb69__0_9219 [label="unwind"];
    bb57__0_9219 -> bb58__0_9219 [label="return"];
    bb57__0_9219 -> bb70__0_9219 [label="unwind"];
    bb58__0_9219 -> bb59__0_9219 [label="return"];
    bb58__0_9219 -> bb73__0_9219 [label="unwind"];
    bb59__0_9219 -> bb62__0_9219 [label=""];
    bb60__0_9219 -> bb61__0_9219 [label="return"];
    bb60__0_9219 -> bb73__0_9219 [label="unwind"];
    bb61__0_9219 -> bb62__0_9219 [label=""];
    bb62__0_9219 -> bb63__0_9219 [label=""];
    bb63__0_9219 -> bb64__0_9219 [label="return"];
    bb63__0_9219 -> bb74__0_9219 [label="unwind"];
    bb64__0_9219 -> bb65__0_9219 [label="return"];
    bb64__0_9219 -> bb75__0_9219 [label="unwind"];
    bb65__0_9219 -> bb66__0_9219 [label=""];
    bb67__0_9219 -> bb68__0_9219 [label="return"];
    bb68__0_9219 -> bb69__0_9219 [label="return"];
    bb69__0_9219 -> bb70__0_9219 [label="return"];
    bb70__0_9219 -> bb73__0_9219 [label="return"];
    bb71__0_9219 -> bb72__0_9219 [label="return"];
    bb72__0_9219 -> bb73__0_9219 [label="return"];
    bb73__0_9219 -> bb74__0_9219 [label="return"];
    bb74__0_9219 -> bb75__0_9219 [label="return"];
    bb76__0_9219 -> bb71__0_9219 [label=""];
    bb77__0_9219 -> bb73__0_9219 [label=""];
    bb78__0_9219 -> bb74__0_9219 [label=""];
    bb79__0_9219 -> bb75__0_9219 [label=""];
    bb80__0_9219 -> bb75__0_9219 [label=""];
}
