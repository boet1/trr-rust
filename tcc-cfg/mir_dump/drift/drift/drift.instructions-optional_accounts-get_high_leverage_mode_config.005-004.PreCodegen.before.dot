digraph Mir_0_1459 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn get_high_leverage_mode_config(_1: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;) -&gt; std::result::Result&lt;std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;&gt;, error::ErrorCode&gt;<br align="left"/>let _2: std::option::Option&lt;&amp;ReErased &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _3: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let _4: ();<br align="left"/>let mut _5: bool;<br align="left"/>let mut _6: &amp;ReErased std::option::Option&lt;&amp;ReErased &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _7: !;<br align="left"/>let mut _8: std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;&gt;;<br align="left"/>let _9: &amp;ReErased &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _10: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _11: std::result::Result&lt;&amp;ReErased &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _12: std::option::Option&lt;&amp;ReErased &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _13: isize;<br align="left"/>let _14: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _15: !;<br align="left"/>let mut _16: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _17: &amp;ReErased &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _18: std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _19: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;&gt;;<br align="left"/>let mut _20: std::result::Result&lt;std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _21: std::result::Result&lt;std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _22: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _23: Closure(DefId(0:1461 ~ drift[d311]::instructions::optional_accounts::get_high_leverage_mode_config::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::prelude::ProgramError,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _24: isize;<br align="left"/>let _25: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _26: !;<br align="left"/>let mut _27: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _28: std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let _29: ();<br align="left"/>let mut _30: bool;<br align="left"/>let mut _31: usize;<br align="left"/>let mut _32: &amp;ReErased [u8];<br align="left"/>let _33: &amp;ReErased &amp;ReErased mut [u8];<br align="left"/>let mut _34: &amp;ReErased std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _35: !;<br align="left"/>let mut _36: std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;&gt;;<br align="left"/>let _37: [u8; 8_usize];<br align="left"/>let _38: &amp;ReErased [u8; 8_usize];<br align="left"/>let _39: usize;<br align="left"/>let _40: &amp;ReErased [u8];<br align="left"/>let _41: &amp;ReErased [u8];<br align="left"/>let mut _42: &amp;ReErased [u8];<br align="left"/>let _43: &amp;ReErased &amp;ReErased mut [u8];<br align="left"/>let mut _44: &amp;ReErased std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _45: std::ops::Range&lt;usize&gt;;<br align="left"/>let mut _46: usize;<br align="left"/>let mut _47: usize;<br align="left"/>let mut _48: usize;<br align="left"/>let mut _49: (usize, bool);<br align="left"/>let mut _50: &amp;ReErased [u8];<br align="left"/>let _51: ();<br align="left"/>let mut _52: bool;<br align="left"/>let mut _53: &amp;ReErased &amp;ReErased [u8; 8_usize];<br align="left"/>let mut _54: &amp;ReErased &amp;ReErased [u8; 8_usize];<br align="left"/>let _55: &amp;ReErased [u8; 8_usize];<br align="left"/>let mut _56: !;<br align="left"/>let mut _57: std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;&gt;;<br align="left"/>let _58: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _59: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _60: std::result::Result&lt;&amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _61: std::option::Option&lt;&amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _62: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _63: isize;<br align="left"/>let _64: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _65: !;<br align="left"/>let mut _66: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _67: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _68: anchor_lang::prelude::AccountLoader&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;;<br align="left"/>let mut _69: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, anchor_lang::prelude::AccountLoader&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;&gt;;<br align="left"/>let mut _70: std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _71: std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _72: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _73: std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _74: error::ErrorCode;<br align="left"/>let mut _75: isize;<br align="left"/>let _76: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _77: !;<br align="left"/>let mut _78: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _79: anchor_lang::prelude::AccountLoader&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;;<br align="left"/>let mut _80: std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;&gt;;<br align="left"/>let mut _81: anchor_lang::prelude::AccountLoader&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;;<br align="left"/>let mut _82: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _83: &amp;ReErased mut [u8];<br align="left"/>let mut _84: &amp;ReErased mut [u8];<br align="left"/>let mut _85: isize;<br align="left"/>let mut _86: isize;<br align="left"/>let mut _87: isize;<br align="left"/>let mut _88: isize;<br align="left"/>let mut _89: isize;<br align="left"/>debug account_info_iter =&gt; _1;<br align="left"/>debug high_leverage_mode_config_account_info =&gt; _2;<br align="left"/>debug high_leverage_mode_config_account_info =&gt; _9;<br align="left"/>debug residual =&gt; _14;<br align="left"/>debug val =&gt; _17;<br align="left"/>debug data =&gt; _18;<br align="left"/>debug residual =&gt; _25;<br align="left"/>debug val =&gt; _28;<br align="left"/>debug high_leverage_mode_config_discriminator =&gt; _37;<br align="left"/>debug account_discriminator =&gt; _38;<br align="left"/>debug offset =&gt; _39;<br align="left"/>debug slice =&gt; _40;<br align="left"/>debug high_leverage_mode_config_account_info =&gt; _58;<br align="left"/>debug residual =&gt; _64;<br align="left"/>debug val =&gt; _67;<br align="left"/>debug high_leverage_mode_config =&gt; _68;<br align="left"/>debug residual =&gt; _76;<br align="left"/>debug val =&gt; _79;<br align="left"/>>;
    bb0__0_1459 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>_3 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_2 = Peekable::&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;::peek(move _3)</td></tr></table>>];
    bb1__0_1459 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = &amp;_2<br/></td></tr><tr><td align="left">_5 = Option::&lt;&amp;&amp;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;::is_none(move _6)</td></tr></table>>];
    bb2__0_1459 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left">switchInt(move _5)</td></tr></table>>];
    bb3__0_1459 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageLive(_8)<br/>_8 = Option::&lt;anchor_lang::prelude::AccountLoader&lt;'_, HighLeverageModeConfig&gt;&gt;::None<br/>_0 = std::result::Result::&lt;Option&lt;anchor_lang::prelude::AccountLoader&lt;'_, HighLeverageModeConfig&gt;&gt;, error::ErrorCode&gt;::Ok(move _8)<br/>StorageDead(_8)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb4__0_1459 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_4 = const ()<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = _2<br/></td></tr><tr><td align="left">_11 = &lt;Option&lt;&amp;&amp;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as SafeUnwrap&gt;::safe_unwrap(move _12)</td></tr></table>>];
    bb5__0_1459 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/></td></tr><tr><td align="left">_10 = &lt;std::result::Result&lt;&amp;&amp;anchor_lang::prelude::AccountInfo&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _11)</td></tr></table>>];
    bb6__0_1459 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>_13 = discriminant(_10)<br/></td></tr><tr><td align="left">switchInt(move _13)</td></tr></table>>];
    bb7__0_1459 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>_17 = ((_10 as Continue).0: &amp;&amp;anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_9 = _17<br/>StorageDead(_17)<br/>StorageDead(_10)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_82 = deref_copy (*_9)<br/>_22 = &amp;(*_82)<br/></td></tr><tr><td align="left">_21 = anchor_lang::prelude::AccountInfo::&lt;'_&gt;::try_borrow_data(move _22)</td></tr></table>>];
    bb8__0_1459 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb9__0_1459 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = ((_10 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_16)<br/>_16 = _14<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Option&lt;anchor_lang::prelude::AccountLoader&lt;'_, HighLeverageModeConfig&gt;&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _16)</td></tr></table>>];
    bb10__0_1459 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_14)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb11__0_1459 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageLive(_23)<br/>_23 = {closure@programs/drift/src/instructions/optional_accounts.rs:253:18: 253:21}<br/></td></tr><tr><td align="left">_20 = std::result::Result::&lt;Ref&lt;'_, &amp;mut [u8]&gt;, anchor_lang::prelude::ProgramError&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/instructions/optional_accounts.rs:253:18: 253:21}&gt;(move _21, move _23)</td></tr></table>>];
    bb12__0_1459 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">_19 = &lt;std::result::Result&lt;Ref&lt;'_, &amp;mut [u8]&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _20)</td></tr></table>>];
    bb13__0_1459 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>_24 = discriminant(_19)<br/></td></tr><tr><td align="left">switchInt(move _24)</td></tr></table>>];
    bb14__0_1459 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_28)<br/>_28 = move ((_19 as Continue).0: std::cell::Ref&lt;'_, &amp;mut [u8]&gt;)<br/>_18 = move _28<br/>StorageDead(_28)<br/>_87 = discriminant(_19)<br/>StorageDead(_19)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>_34 = &amp;_18<br/></td></tr><tr><td align="left">_33 = &lt;Ref&lt;'_, &amp;mut [u8]&gt; as Deref&gt;::deref(move _34)</td></tr></table>>];
    bb15__0_1459 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_25)<br/>_25 = ((_19 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_27)<br/>_27 = _25<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Option&lt;anchor_lang::prelude::AccountLoader&lt;'_, HighLeverageModeConfig&gt;&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _27)</td></tr></table>>];
    bb16__0_1459 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_25)<br/>_85 = discriminant(_19)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_1459 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">_83 = deref_copy (*_33)<br/>_32 = &amp;(*_83)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">_31 = core::slice::&lt;impl [u8]&gt;::len(move _32)</td></tr></table>>];
    bb18__0_1459 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>_30 = Lt(move _31, const _)<br/></td></tr><tr><td align="left">switchInt(move _30)</td></tr></table>>];
    bb19__0_1459 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_31)<br/>StorageLive(_36)<br/>_36 = Option::&lt;anchor_lang::prelude::AccountLoader&lt;'_, HighLeverageModeConfig&gt;&gt;::None<br/>_0 = std::result::Result::&lt;Option&lt;anchor_lang::prelude::AccountLoader&lt;'_, HighLeverageModeConfig&gt;&gt;, error::ErrorCode&gt;::Ok(move _36)<br/>StorageDead(_36)<br/>StorageDead(_30)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_1459 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_31)<br/>_29 = const ()<br/>StorageDead(_30)<br/>StorageDead(_29)<br/>StorageLive(_37)<br/></td></tr><tr><td align="left">_37 = &lt;HighLeverageModeConfig as anchor_lang::Discriminator&gt;::discriminator()</td></tr></table>>];
    bb21__0_1459 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_38)<br/>StorageLive(_39)<br/>_39 = const 0_usize<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>_44 = &amp;_18<br/></td></tr><tr><td align="left">_43 = &lt;Ref&lt;'_, &amp;mut [u8]&gt; as Deref&gt;::deref(move _44)</td></tr></table>>];
    bb22__0_1459 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">_84 = deref_copy (*_43)<br/>_42 = &amp;(*_84)<br/>StorageDead(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>_46 = _39<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>_48 = _39<br/>_49 = CheckedAdd(_48, const 8_usize)<br/></td></tr><tr><td align="left">assert(!move (_49.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, move _48, const 8_usize)</td></tr></table>>];
    bb23__0_1459 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">_47 = move (_49.0: usize)<br/>StorageDead(_48)<br/>_45 = std::ops::Range::&lt;usize&gt; { start: move _46, end: move _47 }<br/>StorageDead(_47)<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">_41 = &lt;[u8] as Index&lt;std::ops::Range&lt;usize&gt;&gt;&gt;::index(move _42, move _45)</td></tr></table>>];
    bb24__0_1459 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_42)<br/>_40 = &amp;(*_41)<br/>StorageLive(_50)<br/>_50 = &amp;(*_40)<br/></td></tr><tr><td align="left">_38 = get_high_leverage_mode_config::as_array::&lt;u8&gt;(move _50)</td></tr></table>>];
    bb25__0_1459 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageDead(_43)<br/>StorageDead(_41)<br/>StorageDead(_40)<br/>StorageDead(_39)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>_53 = &amp;_38<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>_55 = &amp;_37<br/>_54 = &amp;_55<br/></td></tr><tr><td align="left">_52 = &lt;&amp;[u8; 8] as PartialEq&gt;::ne(move _53, move _54)</td></tr></table>>];
    bb26__0_1459 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left">switchInt(move _52)</td></tr></table>>];
    bb27__0_1459 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_54)<br/>StorageDead(_53)<br/>StorageLive(_57)<br/>_57 = Option::&lt;anchor_lang::prelude::AccountLoader&lt;'_, HighLeverageModeConfig&gt;&gt;::None<br/>_0 = std::result::Result::&lt;Option&lt;anchor_lang::prelude::AccountLoader&lt;'_, HighLeverageModeConfig&gt;&gt;, error::ErrorCode&gt;::Ok(move _57)<br/>StorageDead(_57)<br/>StorageDead(_52)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_1459 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_54)<br/>StorageDead(_53)<br/>_51 = const ()<br/>StorageDead(_52)<br/>StorageDead(_51)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>_62 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_61 = &lt;Peekable&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt; as Iterator&gt;::next(move _62)</td></tr></table>>];
    bb29__0_1459 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/></td></tr><tr><td align="left">_60 = &lt;Option&lt;&amp;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as SafeUnwrap&gt;::safe_unwrap(move _61)</td></tr></table>>];
    bb30__0_1459 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/></td></tr><tr><td align="left">_59 = &lt;std::result::Result&lt;&amp;anchor_lang::prelude::AccountInfo&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _60)</td></tr></table>>];
    bb31__0_1459 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>_63 = discriminant(_59)<br/></td></tr><tr><td align="left">switchInt(move _63)</td></tr></table>>];
    bb32__0_1459 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_67)<br/>_67 = ((_59 as Continue).0: &amp;anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_58 = _67<br/>StorageDead(_67)<br/>StorageDead(_59)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>_72 = &amp;(*_58)<br/></td></tr><tr><td align="left">_71 = anchor_lang::prelude::AccountLoader::&lt;'_, HighLeverageModeConfig&gt;::try_from(move _72)</td></tr></table>>];
    bb33__0_1459 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageLive(_64)<br/>_64 = ((_59 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_66)<br/>_66 = _64<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Option&lt;anchor_lang::prelude::AccountLoader&lt;'_, HighLeverageModeConfig&gt;&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _66)</td></tr></table>>];
    bb34__0_1459 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageDead(_64)<br/>StorageDead(_59)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_1459 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>_74 = error::ErrorCode::CouldNotDeserializeHighLeverageModeConfig<br/>_73 = std::result::Result::&lt;anchor_lang::prelude::AccountLoader&lt;'_, HighLeverageModeConfig&gt;, error::ErrorCode&gt;::Err(move _74)<br/>StorageDead(_74)<br/></td></tr><tr><td align="left">_70 = std::result::Result::&lt;anchor_lang::prelude::AccountLoader&lt;'_, HighLeverageModeConfig&gt;, anchor_lang::error::Error&gt;::or::&lt;error::ErrorCode&gt;(move _71, move _73)</td></tr></table>>];
    bb36__0_1459 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">_69 = &lt;std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;'_, HighLeverageModeConfig&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _70)</td></tr></table>>];
    bb37__0_1459 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>_75 = discriminant(_69)<br/></td></tr><tr><td align="left">switchInt(move _75)</td></tr></table>>];
    bb38__0_1459 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_79)<br/>_79 = move ((_69 as Continue).0: anchor_lang::prelude::AccountLoader&lt;'_, state::high_leverage_mode_config::HighLeverageModeConfig&gt;)<br/>_68 = move _79<br/>StorageDead(_79)<br/>StorageDead(_69)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>_81 = move _68<br/>_80 = Option::&lt;anchor_lang::prelude::AccountLoader&lt;'_, HighLeverageModeConfig&gt;&gt;::Some(move _81)<br/>StorageDead(_81)<br/>_0 = std::result::Result::&lt;Option&lt;anchor_lang::prelude::AccountLoader&lt;'_, HighLeverageModeConfig&gt;&gt;, error::ErrorCode&gt;::Ok(move _80)<br/>StorageDead(_80)<br/>StorageDead(_68)<br/>StorageDead(_58)<br/>StorageDead(_38)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">drop(_18)</td></tr></table>>];
    bb39__0_1459 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_76)<br/>_76 = ((_69 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_78)<br/>_78 = _76<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Option&lt;anchor_lang::prelude::AccountLoader&lt;'_, HighLeverageModeConfig&gt;&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _78)</td></tr></table>>];
    bb40__0_1459 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>StorageDead(_76)<br/>StorageDead(_69)<br/>StorageDead(_68)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_1459 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_9)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_1459 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_1459 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_1459 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left">drop(_18)</td></tr></table>>];
    bb45__0_1459 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_1459 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_1459 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_1459 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left">return</td></tr></table>>];
    bb49__0_1459 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">49 (cleanup)</td></tr><tr><td align="left">drop(_18)</td></tr></table>>];
    bb50__0_1459 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">50 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb51__0_1459 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">51 (cleanup)</td></tr><tr><td align="left" balign="left">_89 = discriminant(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_1459 -> bb1__0_1459 [label="return"];
    bb1__0_1459 -> bb2__0_1459 [label="return"];
    bb2__0_1459 -> bb4__0_1459 [label="0"];
    bb2__0_1459 -> bb3__0_1459 [label="otherwise"];
    bb3__0_1459 -> bb47__0_1459 [label=""];
    bb4__0_1459 -> bb5__0_1459 [label="return"];
    bb5__0_1459 -> bb6__0_1459 [label="return"];
    bb6__0_1459 -> bb7__0_1459 [label="0"];
    bb6__0_1459 -> bb9__0_1459 [label="1"];
    bb6__0_1459 -> bb8__0_1459 [label="otherwise"];
    bb7__0_1459 -> bb11__0_1459 [label="return"];
    bb9__0_1459 -> bb10__0_1459 [label="return"];
    bb10__0_1459 -> bb46__0_1459 [label=""];
    bb11__0_1459 -> bb12__0_1459 [label="return"];
    bb11__0_1459 -> bb50__0_1459 [label="unwind"];
    bb12__0_1459 -> bb13__0_1459 [label="return"];
    bb12__0_1459 -> bb50__0_1459 [label="unwind"];
    bb13__0_1459 -> bb14__0_1459 [label="0"];
    bb13__0_1459 -> bb15__0_1459 [label="1"];
    bb13__0_1459 -> bb8__0_1459 [label="otherwise"];
    bb14__0_1459 -> bb17__0_1459 [label="return"];
    bb14__0_1459 -> bb49__0_1459 [label="unwind"];
    bb15__0_1459 -> bb16__0_1459 [label="return"];
    bb15__0_1459 -> bb51__0_1459 [label="unwind"];
    bb16__0_1459 -> bb45__0_1459 [label=""];
    bb17__0_1459 -> bb18__0_1459 [label="return"];
    bb17__0_1459 -> bb49__0_1459 [label="unwind"];
    bb18__0_1459 -> bb20__0_1459 [label="0"];
    bb18__0_1459 -> bb19__0_1459 [label="otherwise"];
    bb19__0_1459 -> bb44__0_1459 [label=""];
    bb20__0_1459 -> bb21__0_1459 [label="return"];
    bb20__0_1459 -> bb49__0_1459 [label="unwind"];
    bb21__0_1459 -> bb22__0_1459 [label="return"];
    bb21__0_1459 -> bb49__0_1459 [label="unwind"];
    bb22__0_1459 -> bb23__0_1459 [label="success"];
    bb22__0_1459 -> bb49__0_1459 [label="unwind"];
    bb23__0_1459 -> bb24__0_1459 [label="return"];
    bb23__0_1459 -> bb49__0_1459 [label="unwind"];
    bb24__0_1459 -> bb25__0_1459 [label="return"];
    bb24__0_1459 -> bb49__0_1459 [label="unwind"];
    bb25__0_1459 -> bb26__0_1459 [label="return"];
    bb25__0_1459 -> bb49__0_1459 [label="unwind"];
    bb26__0_1459 -> bb28__0_1459 [label="0"];
    bb26__0_1459 -> bb27__0_1459 [label="otherwise"];
    bb27__0_1459 -> bb43__0_1459 [label=""];
    bb28__0_1459 -> bb29__0_1459 [label="return"];
    bb28__0_1459 -> bb49__0_1459 [label="unwind"];
    bb29__0_1459 -> bb30__0_1459 [label="return"];
    bb29__0_1459 -> bb49__0_1459 [label="unwind"];
    bb30__0_1459 -> bb31__0_1459 [label="return"];
    bb30__0_1459 -> bb49__0_1459 [label="unwind"];
    bb31__0_1459 -> bb32__0_1459 [label="0"];
    bb31__0_1459 -> bb33__0_1459 [label="1"];
    bb31__0_1459 -> bb8__0_1459 [label="otherwise"];
    bb32__0_1459 -> bb35__0_1459 [label="return"];
    bb32__0_1459 -> bb49__0_1459 [label="unwind"];
    bb33__0_1459 -> bb34__0_1459 [label="return"];
    bb33__0_1459 -> bb49__0_1459 [label="unwind"];
    bb34__0_1459 -> bb42__0_1459 [label=""];
    bb35__0_1459 -> bb36__0_1459 [label="return"];
    bb35__0_1459 -> bb49__0_1459 [label="unwind"];
    bb36__0_1459 -> bb37__0_1459 [label="return"];
    bb36__0_1459 -> bb49__0_1459 [label="unwind"];
    bb37__0_1459 -> bb38__0_1459 [label="0"];
    bb37__0_1459 -> bb39__0_1459 [label="1"];
    bb37__0_1459 -> bb8__0_1459 [label="otherwise"];
    bb38__0_1459 -> bb41__0_1459 [label="return"];
    bb38__0_1459 -> bb50__0_1459 [label="unwind"];
    bb39__0_1459 -> bb40__0_1459 [label="return"];
    bb39__0_1459 -> bb49__0_1459 [label="unwind"];
    bb40__0_1459 -> bb42__0_1459 [label=""];
    bb41__0_1459 -> bb48__0_1459 [label=""];
    bb42__0_1459 -> bb43__0_1459 [label=""];
    bb43__0_1459 -> bb44__0_1459 [label=""];
    bb44__0_1459 -> bb45__0_1459 [label="return"];
    bb44__0_1459 -> bb50__0_1459 [label="unwind"];
    bb45__0_1459 -> bb46__0_1459 [label=""];
    bb46__0_1459 -> bb47__0_1459 [label=""];
    bb47__0_1459 -> bb48__0_1459 [label=""];
    bb49__0_1459 -> bb50__0_1459 [label="return"];
    bb51__0_1459 -> bb50__0_1459 [label=""];
}
