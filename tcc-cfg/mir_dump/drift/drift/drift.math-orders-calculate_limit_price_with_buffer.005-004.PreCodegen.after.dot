digraph Mir_0_2587 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_limit_price_with_buffer(_1: &amp;ReErased state::user::Order, _2: std::option::Option&lt;u64&gt;, _3: &amp;ReErased state::state::FeeTier, _4: i16) -&gt; std::result::Result&lt;std::option::Option&lt;u64&gt;, error::ErrorCode&gt;<br align="left"/>let mut _5: bool;<br align="left"/>let mut _6: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _7: isize;<br align="left"/>let _8: u64;<br align="left"/>let mut _9: u64;<br align="left"/>let mut _10: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _11: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _12: u64;<br align="left"/>let mut _13: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _14: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _15: u64;<br align="left"/>let mut _16: u64;<br align="left"/>let mut _17: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _18: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _19: u32;<br align="left"/>let mut _20: isize;<br align="left"/>let _21: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _22: !;<br align="left"/>let mut _23: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _24: u64;<br align="left"/>let mut _25: isize;<br align="left"/>let _26: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _27: !;<br align="left"/>let mut _28: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _29: u64;<br align="left"/>let mut _30: u64;<br align="left"/>let mut _31: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _32: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _33: u32;<br align="left"/>let mut _34: isize;<br align="left"/>let _35: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _36: !;<br align="left"/>let mut _37: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _38: u64;<br align="left"/>let mut _39: isize;<br align="left"/>let _40: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _41: !;<br align="left"/>let mut _42: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _43: u64;<br align="left"/>let _44: ();<br align="left"/>let mut _45: bool;<br align="left"/>let mut _46: i16;<br align="left"/>let _47: u64;<br align="left"/>let mut _48: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _49: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _50: u64;<br align="left"/>let mut _51: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _52: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _53: u64;<br align="left"/>let mut _54: u64;<br align="left"/>let mut _55: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _56: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _57: i16;<br align="left"/>let mut _58: i16;<br align="left"/>let mut _59: isize;<br align="left"/>let _60: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _61: !;<br align="left"/>let mut _62: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _63: u64;<br align="left"/>let mut _64: isize;<br align="left"/>let _65: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _66: !;<br align="left"/>let mut _67: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _68: u64;<br align="left"/>let mut _69: isize;<br align="left"/>let _70: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _71: !;<br align="left"/>let mut _72: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _73: u64;<br align="left"/>let mut _74: u64;<br align="left"/>let mut _75: u64;<br align="left"/>let mut _76: u64;<br align="left"/>let mut _77: bool;<br align="left"/>let mut _78: i16;<br align="left"/>let _79: u64;<br align="left"/>let mut _80: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _81: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _82: u64;<br align="left"/>let mut _83: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _84: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _85: u64;<br align="left"/>let mut _86: u64;<br align="left"/>let mut _87: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _88: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _89: i16;<br align="left"/>let mut _90: isize;<br align="left"/>let _91: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _92: !;<br align="left"/>let mut _93: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _94: u64;<br align="left"/>let mut _95: isize;<br align="left"/>let _96: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _97: !;<br align="left"/>let mut _98: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _99: u64;<br align="left"/>let mut _100: isize;<br align="left"/>let _101: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _102: !;<br align="left"/>let mut _103: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _104: u64;<br align="left"/>let mut _105: u64;<br align="left"/>let mut _106: u64;<br align="left"/>let mut _107: u64;<br align="left"/>let mut _108: isize;<br align="left"/>let mut _109: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _110: u64;<br align="left"/>let mut _111: u64;<br align="left"/>let mut _112: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _113: u64;<br align="left"/>let mut _114: u64;<br align="left"/>let mut _115: std::option::Option&lt;u64&gt;;<br align="left"/>debug order =&gt; _1;<br align="left"/>debug limit_price =&gt; _2;<br align="left"/>debug fee_tier =&gt; _3;<br align="left"/>debug fee_adjustment =&gt; _4;<br align="left"/>debug limit_price =&gt; _8;<br align="left"/>debug buffer =&gt; _9;<br align="left"/>debug residual =&gt; _21;<br align="left"/>debug val =&gt; _24;<br align="left"/>debug residual =&gt; _26;<br align="left"/>debug val =&gt; _29;<br align="left"/>debug residual =&gt; _35;<br align="left"/>debug val =&gt; _38;<br align="left"/>debug residual =&gt; _40;<br align="left"/>debug val =&gt; _43;<br align="left"/>debug buffer_adjustment =&gt; _47;<br align="left"/>debug residual =&gt; _60;<br align="left"/>debug val =&gt; _63;<br align="left"/>debug residual =&gt; _65;<br align="left"/>debug val =&gt; _68;<br align="left"/>debug residual =&gt; _70;<br align="left"/>debug val =&gt; _73;<br align="left"/>debug buffer_adjustment =&gt; _79;<br align="left"/>debug residual =&gt; _91;<br align="left"/>debug val =&gt; _94;<br align="left"/>debug residual =&gt; _96;<br align="left"/>debug val =&gt; _99;<br align="left"/>debug residual =&gt; _101;<br align="left"/>debug val =&gt; _104;<br align="left"/>>;
    bb0__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>_5 = ((*_1).19: bool)<br/></td></tr><tr><td align="left">switchInt(move _5)</td></tr></table>>];
    bb1__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_6)<br/>_6 = _2<br/>_0 = std::result::Result::&lt;Option&lt;u64&gt;, error::ErrorCode&gt;::Ok(move _6)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb2__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">_7 = discriminant(_2)<br/></td></tr><tr><td align="left">switchInt(move _7)</td></tr></table>>];
    bb3__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/>_8 = ((_2 as Some).0: u64)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = _8<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_19 = ((*_3).2: u32)<br/></td></tr><tr><td align="left">_18 = &lt;u32 as Cast&gt;::cast::&lt;u64&gt;(move _19)</td></tr></table>>];
    bb4__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/></td></tr><tr><td align="left">_17 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _18)</td></tr></table>>];
    bb5__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>_20 = discriminant(_17)<br/></td></tr><tr><td align="left">switchInt(move _20)</td></tr></table>>];
    bb6__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_24)<br/>_24 = ((_17 as Continue).0: u64)<br/>_16 = _24<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">_14 = &lt;u64 as SafeMath&gt;::safe_mul(move _15, move _16)</td></tr></table>>];
    bb7__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb8__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = ((_17 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_23)<br/>_23 = _21<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Option&lt;u64&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _23)</td></tr></table>>];
    bb9__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_21)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">_13 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _14)</td></tr></table>>];
    bb11__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>_25 = discriminant(_13)<br/></td></tr><tr><td align="left">switchInt(move _25)</td></tr></table>>];
    bb12__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_29)<br/>_29 = ((_13 as Continue).0: u64)<br/>_12 = _29<br/>StorageDead(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>_33 = ((*_3).3: u32)<br/></td></tr><tr><td align="left">_32 = &lt;u32 as Cast&gt;::cast::&lt;u64&gt;(move _33)</td></tr></table>>];
    bb13__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_26)<br/>_26 = ((_13 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_28)<br/>_28 = _26<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Option&lt;u64&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _28)</td></tr></table>>];
    bb14__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/></td></tr><tr><td align="left">_31 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _32)</td></tr></table>>];
    bb16__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>_34 = discriminant(_31)<br/></td></tr><tr><td align="left">switchInt(move _34)</td></tr></table>>];
    bb17__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_38)<br/>_38 = ((_31 as Continue).0: u64)<br/>_30 = _38<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">_11 = &lt;u64 as SafeMath&gt;::safe_div(move _12, move _30)</td></tr></table>>];
    bb18__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = ((_31 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_37)<br/>_37 = _35<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Option&lt;u64&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _37)</td></tr></table>>];
    bb19__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_35)<br/>StorageDead(_30)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">_10 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _11)</td></tr></table>>];
    bb21__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>_39 = discriminant(_10)<br/></td></tr><tr><td align="left">switchInt(move _39)</td></tr></table>>];
    bb22__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_43)<br/>_43 = ((_10 as Continue).0: u64)<br/>_9 = _43<br/>StorageDead(_43)<br/>StorageDead(_31)<br/>StorageDead(_17)<br/>StorageDead(_13)<br/>StorageDead(_10)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>_46 = _4<br/>_45 = Lt(move _46, const 0_i16)<br/></td></tr><tr><td align="left">switchInt(move _45)</td></tr></table>>];
    bb23__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_40)<br/>_40 = ((_10 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_42)<br/>_42 = _40<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Option&lt;u64&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _42)</td></tr></table>>];
    bb24__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>_53 = _9<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>_58 = _4<br/></td></tr><tr><td align="left">_57 = core::num::&lt;impl i16&gt;::abs(move _58)</td></tr></table>>];
    bb26__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>_78 = _4<br/>_77 = Gt(move _78, const 0_i16)<br/></td></tr><tr><td align="left">switchInt(move _77)</td></tr></table>>];
    bb27__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/></td></tr><tr><td align="left">_56 = &lt;i16 as Cast&gt;::cast::&lt;u64&gt;(move _57)</td></tr></table>>];
    bb28__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/></td></tr><tr><td align="left">_55 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _56)</td></tr></table>>];
    bb29__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>_59 = discriminant(_55)<br/></td></tr><tr><td align="left">switchInt(move _59)</td></tr></table>>];
    bb30__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_63)<br/>_63 = ((_55 as Continue).0: u64)<br/>_54 = _63<br/>StorageDead(_63)<br/></td></tr><tr><td align="left">_52 = &lt;u64 as SafeMath&gt;::safe_mul(move _53, move _54)</td></tr></table>>];
    bb31__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_60)<br/>_60 = ((_55 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_62)<br/>_62 = _60<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Option&lt;u64&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _62)</td></tr></table>>];
    bb32__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageDead(_60)<br/>StorageDead(_54)<br/>StorageDead(_53)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">_51 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _52)</td></tr></table>>];
    bb34__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>_64 = discriminant(_51)<br/></td></tr><tr><td align="left">switchInt(move _64)</td></tr></table>>];
    bb35__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_68)<br/>_68 = ((_51 as Continue).0: u64)<br/>_50 = _68<br/>StorageDead(_68)<br/></td></tr><tr><td align="left">_49 = &lt;u64 as SafeMath&gt;::safe_div(move _50, const _)</td></tr></table>>];
    bb36__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageLive(_65)<br/>_65 = ((_51 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_67)<br/>_67 = _65<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Option&lt;u64&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _67)</td></tr></table>>];
    bb37__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/></td></tr><tr><td align="left">_48 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _49)</td></tr></table>>];
    bb39__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>_69 = discriminant(_48)<br/></td></tr><tr><td align="left">switchInt(move _69)</td></tr></table>>];
    bb40__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageLive(_73)<br/>_73 = ((_48 as Continue).0: u64)<br/>_47 = _73<br/>StorageDead(_73)<br/>StorageDead(_55)<br/>StorageDead(_51)<br/>StorageDead(_48)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>_75 = _9<br/>StorageLive(_76)<br/>_76 = _47<br/></td></tr><tr><td align="left">_74 = core::num::&lt;impl u64&gt;::saturating_sub(move _75, move _76)</td></tr></table>>];
    bb41__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageLive(_70)<br/>_70 = ((_48 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_72)<br/>_72 = _70<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Option&lt;u64&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _72)</td></tr></table>>];
    bb42__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_70)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>StorageDead(_75)<br/>_9 = move _74<br/>StorageDead(_74)<br/>_44 = const ()<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>_85 = _9<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>_89 = _4<br/></td></tr><tr><td align="left">_88 = &lt;i16 as Cast&gt;::cast::&lt;u64&gt;(move _89)</td></tr></table>>];
    bb45__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>_44 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/></td></tr><tr><td align="left">_87 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _88)</td></tr></table>>];
    bb47__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>_90 = discriminant(_87)<br/></td></tr><tr><td align="left">switchInt(move _90)</td></tr></table>>];
    bb48__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageLive(_94)<br/>_94 = ((_87 as Continue).0: u64)<br/>_86 = _94<br/>StorageDead(_94)<br/></td></tr><tr><td align="left">_84 = &lt;u64 as SafeMath&gt;::safe_mul(move _85, move _86)</td></tr></table>>];
    bb49__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageLive(_91)<br/>_91 = ((_87 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_93)<br/>_93 = _91<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Option&lt;u64&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _93)</td></tr></table>>];
    bb50__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageDead(_91)<br/>StorageDead(_86)<br/>StorageDead(_85)<br/>StorageDead(_84)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb51__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>StorageDead(_85)<br/></td></tr><tr><td align="left">_83 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _84)</td></tr></table>>];
    bb52__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>_95 = discriminant(_83)<br/></td></tr><tr><td align="left">switchInt(move _95)</td></tr></table>>];
    bb53__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageLive(_99)<br/>_99 = ((_83 as Continue).0: u64)<br/>_82 = _99<br/>StorageDead(_99)<br/></td></tr><tr><td align="left">_81 = &lt;u64 as SafeMath&gt;::safe_div(move _82, const _)</td></tr></table>>];
    bb54__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageLive(_96)<br/>_96 = ((_83 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_98)<br/>_98 = _96<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Option&lt;u64&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _98)</td></tr></table>>];
    bb55__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>StorageDead(_96)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb56__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/></td></tr><tr><td align="left">_80 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _81)</td></tr></table>>];
    bb57__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>_100 = discriminant(_80)<br/></td></tr><tr><td align="left">switchInt(move _100)</td></tr></table>>];
    bb58__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageLive(_104)<br/>_104 = ((_80 as Continue).0: u64)<br/>_79 = _104<br/>StorageDead(_104)<br/>StorageDead(_87)<br/>StorageDead(_83)<br/>StorageDead(_80)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>_106 = _9<br/>StorageLive(_107)<br/>_107 = _79<br/></td></tr><tr><td align="left">_105 = core::num::&lt;impl u64&gt;::saturating_add(move _106, move _107)</td></tr></table>>];
    bb59__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageLive(_101)<br/>_101 = ((_80 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_103)<br/>_103 = _101<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Option&lt;u64&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _103)</td></tr></table>>];
    bb60__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>StorageDead(_101)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb61__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>StorageDead(_106)<br/>_9 = move _105<br/>StorageDead(_105)<br/>_44 = const ()<br/>StorageDead(_79)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb63__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_44)<br/>_108 = discriminant(((*_1).17: controller::position::PositionDirection))<br/></td></tr><tr><td align="left">switchInt(move _108)</td></tr></table>>];
    bb64__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageLive(_112)<br/>StorageLive(_113)<br/>_113 = _8<br/>StorageLive(_114)<br/>_114 = _9<br/></td></tr><tr><td align="left">_112 = &lt;u64 as SafeMath&gt;::safe_add(move _113, move _114)</td></tr></table>>];
    bb65__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageLive(_109)<br/>StorageLive(_110)<br/>_110 = _8<br/>StorageLive(_111)<br/>_111 = _9<br/></td></tr><tr><td align="left">_109 = &lt;u64 as SafeMath&gt;::safe_sub(move _110, move _111)</td></tr></table>>];
    bb66__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/>StorageDead(_110)<br/></td></tr><tr><td align="left">_0 = std::result::Result::&lt;u64, error::ErrorCode&gt;::map::&lt;Option&lt;u64&gt;, fn(u64) -&gt; Option&lt;u64&gt; {Option::&lt;u64&gt;::Some}&gt;(move _109, Option::&lt;u64&gt;::Some)</td></tr></table>>];
    bb67__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/>StorageDead(_113)<br/></td></tr><tr><td align="left">_0 = std::result::Result::&lt;u64, error::ErrorCode&gt;::map::&lt;Option&lt;u64&gt;, fn(u64) -&gt; Option&lt;u64&gt; {Option::&lt;u64&gt;::Some}&gt;(move _112, Option::&lt;u64&gt;::Some)</td></tr></table>>];
    bb69__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb70__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb71__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageLive(_115)<br/>_115 = Option::&lt;u64&gt;::None<br/>_0 = std::result::Result::&lt;Option&lt;u64&gt;, error::ErrorCode&gt;::Ok(move _115)<br/>StorageDead(_115)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb72__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb73__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>StorageDead(_81)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb74__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>StorageDead(_83)<br/>StorageDead(_80)<br/>StorageDead(_79)<br/>StorageDead(_77)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb75__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb76__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_51)<br/>StorageDead(_48)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb77__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb78__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb79__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb80__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_13)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb81__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_8)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb82__0_2587 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2587 -> bb1__0_2587 [label="0"];
    bb0__0_2587 -> bb2__0_2587 [label="otherwise"];
    bb1__0_2587 -> bb72__0_2587 [label=""];
    bb2__0_2587 -> bb3__0_2587 [label="1"];
    bb2__0_2587 -> bb71__0_2587 [label="otherwise"];
    bb3__0_2587 -> bb4__0_2587 [label="return"];
    bb4__0_2587 -> bb5__0_2587 [label="return"];
    bb5__0_2587 -> bb6__0_2587 [label="0"];
    bb5__0_2587 -> bb8__0_2587 [label="1"];
    bb5__0_2587 -> bb7__0_2587 [label="otherwise"];
    bb6__0_2587 -> bb10__0_2587 [label="return"];
    bb8__0_2587 -> bb9__0_2587 [label="return"];
    bb9__0_2587 -> bb79__0_2587 [label=""];
    bb10__0_2587 -> bb11__0_2587 [label="return"];
    bb11__0_2587 -> bb12__0_2587 [label="0"];
    bb11__0_2587 -> bb13__0_2587 [label="1"];
    bb11__0_2587 -> bb7__0_2587 [label="otherwise"];
    bb12__0_2587 -> bb15__0_2587 [label="return"];
    bb13__0_2587 -> bb14__0_2587 [label="return"];
    bb14__0_2587 -> bb79__0_2587 [label=""];
    bb15__0_2587 -> bb16__0_2587 [label="return"];
    bb16__0_2587 -> bb17__0_2587 [label="0"];
    bb16__0_2587 -> bb18__0_2587 [label="1"];
    bb16__0_2587 -> bb7__0_2587 [label="otherwise"];
    bb17__0_2587 -> bb20__0_2587 [label="return"];
    bb18__0_2587 -> bb19__0_2587 [label="return"];
    bb19__0_2587 -> bb78__0_2587 [label=""];
    bb20__0_2587 -> bb21__0_2587 [label="return"];
    bb21__0_2587 -> bb22__0_2587 [label="0"];
    bb21__0_2587 -> bb23__0_2587 [label="1"];
    bb21__0_2587 -> bb7__0_2587 [label="otherwise"];
    bb22__0_2587 -> bb26__0_2587 [label="0"];
    bb22__0_2587 -> bb25__0_2587 [label="otherwise"];
    bb23__0_2587 -> bb24__0_2587 [label="return"];
    bb24__0_2587 -> bb78__0_2587 [label=""];
    bb25__0_2587 -> bb27__0_2587 [label="return"];
    bb26__0_2587 -> bb45__0_2587 [label="0"];
    bb26__0_2587 -> bb44__0_2587 [label="otherwise"];
    bb27__0_2587 -> bb28__0_2587 [label="return"];
    bb28__0_2587 -> bb29__0_2587 [label="return"];
    bb29__0_2587 -> bb30__0_2587 [label="0"];
    bb29__0_2587 -> bb31__0_2587 [label="1"];
    bb29__0_2587 -> bb7__0_2587 [label="otherwise"];
    bb30__0_2587 -> bb33__0_2587 [label="return"];
    bb31__0_2587 -> bb32__0_2587 [label="return"];
    bb32__0_2587 -> bb75__0_2587 [label=""];
    bb33__0_2587 -> bb34__0_2587 [label="return"];
    bb34__0_2587 -> bb35__0_2587 [label="0"];
    bb34__0_2587 -> bb36__0_2587 [label="1"];
    bb34__0_2587 -> bb7__0_2587 [label="otherwise"];
    bb35__0_2587 -> bb38__0_2587 [label="return"];
    bb36__0_2587 -> bb37__0_2587 [label="return"];
    bb37__0_2587 -> bb75__0_2587 [label=""];
    bb38__0_2587 -> bb39__0_2587 [label="return"];
    bb39__0_2587 -> bb40__0_2587 [label="0"];
    bb39__0_2587 -> bb41__0_2587 [label="1"];
    bb39__0_2587 -> bb7__0_2587 [label="otherwise"];
    bb40__0_2587 -> bb43__0_2587 [label="return"];
    bb41__0_2587 -> bb42__0_2587 [label="return"];
    bb42__0_2587 -> bb76__0_2587 [label=""];
    bb43__0_2587 -> bb63__0_2587 [label=""];
    bb44__0_2587 -> bb46__0_2587 [label="return"];
    bb45__0_2587 -> bb62__0_2587 [label=""];
    bb46__0_2587 -> bb47__0_2587 [label="return"];
    bb47__0_2587 -> bb48__0_2587 [label="0"];
    bb47__0_2587 -> bb49__0_2587 [label="1"];
    bb47__0_2587 -> bb7__0_2587 [label="otherwise"];
    bb48__0_2587 -> bb51__0_2587 [label="return"];
    bb49__0_2587 -> bb50__0_2587 [label="return"];
    bb50__0_2587 -> bb73__0_2587 [label=""];
    bb51__0_2587 -> bb52__0_2587 [label="return"];
    bb52__0_2587 -> bb53__0_2587 [label="0"];
    bb52__0_2587 -> bb54__0_2587 [label="1"];
    bb52__0_2587 -> bb7__0_2587 [label="otherwise"];
    bb53__0_2587 -> bb56__0_2587 [label="return"];
    bb54__0_2587 -> bb55__0_2587 [label="return"];
    bb55__0_2587 -> bb73__0_2587 [label=""];
    bb56__0_2587 -> bb57__0_2587 [label="return"];
    bb57__0_2587 -> bb58__0_2587 [label="0"];
    bb57__0_2587 -> bb59__0_2587 [label="1"];
    bb57__0_2587 -> bb7__0_2587 [label="otherwise"];
    bb58__0_2587 -> bb61__0_2587 [label="return"];
    bb59__0_2587 -> bb60__0_2587 [label="return"];
    bb60__0_2587 -> bb74__0_2587 [label=""];
    bb61__0_2587 -> bb62__0_2587 [label=""];
    bb62__0_2587 -> bb63__0_2587 [label=""];
    bb63__0_2587 -> bb65__0_2587 [label="0"];
    bb63__0_2587 -> bb64__0_2587 [label="1"];
    bb63__0_2587 -> bb7__0_2587 [label="otherwise"];
    bb64__0_2587 -> bb68__0_2587 [label="return"];
    bb65__0_2587 -> bb66__0_2587 [label="return"];
    bb66__0_2587 -> bb67__0_2587 [label="return"];
    bb67__0_2587 -> bb70__0_2587 [label=""];
    bb68__0_2587 -> bb69__0_2587 [label="return"];
    bb69__0_2587 -> bb70__0_2587 [label=""];
    bb70__0_2587 -> bb72__0_2587 [label=""];
    bb71__0_2587 -> bb72__0_2587 [label=""];
    bb72__0_2587 -> bb82__0_2587 [label=""];
    bb73__0_2587 -> bb74__0_2587 [label=""];
    bb74__0_2587 -> bb77__0_2587 [label=""];
    bb75__0_2587 -> bb76__0_2587 [label=""];
    bb76__0_2587 -> bb77__0_2587 [label=""];
    bb77__0_2587 -> bb81__0_2587 [label=""];
    bb78__0_2587 -> bb80__0_2587 [label=""];
    bb79__0_2587 -> bb80__0_2587 [label=""];
    bb80__0_2587 -> bb81__0_2587 [label=""];
    bb81__0_2587 -> bb82__0_2587 [label=""];
}
