// MIR for `state::user::<impl at programs/drift/src/state/user.rs:1263:1: 1263:11>::add_bit_flag` before PreCodegen

fn state::user::<impl at programs/drift/src/state/user.rs:1263:1: 1263:11>::add_bit_flag(_1: &mut Order, _2: OrderBitFlag) -> () {
    debug self => _1;
    debug flag => _2;
    let mut _0: ();
    let mut _3: u8;
    let _4: state::user::OrderBitFlag;
    let mut _5: isize;
    let mut _6: u8;
    let mut _7: bool;
    let mut _8: bool;
    let mut _9: bool;

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        _4 = _2;
        _5 = discriminant(_4);
        _6 = _5 as u8 (IntToInt);
        _7 = Ge(_6, const 1_u8);
        _8 = Le(_6, const 8_u8);
        _9 = BitAnd(move _7, move _8);
        assume(move _9);
        _3 = move _5 as u8 (IntToInt);
        StorageDead(_4);
        ((*_1).24: u8) = BitOr(((*_1).24: u8), move _3);
        StorageDead(_3);
        _0 = const ();
        return;
    }
}
