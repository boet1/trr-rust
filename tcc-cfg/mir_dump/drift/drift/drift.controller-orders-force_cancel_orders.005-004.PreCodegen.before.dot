digraph Mir_0_548 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn controller::orders::force_cancel_orders(_1: &amp;ReErased state::state::State, _2: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;, _3: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;, _4: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;, _5: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;, _6: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;, _7: &amp;ReErased anchor_lang::prelude::Clock) -&gt; std::result::Result&lt;(), error::ErrorCode&gt;<br align="left"/>let _8: i64;<br align="left"/>let _9: u64;<br align="left"/>let _10: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _11: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _12: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _13: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _14: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _15: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _16: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _17: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _18: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _19: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _20: Closure(DefId(0:4716 ~ drift[d311]::controller::orders::force_cancel_orders::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _21: isize;<br align="left"/>let _22: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _23: !;<br align="left"/>let mut _24: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _25: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _26: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _27: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _28: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _29: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _30: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _31: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _32: Closure(DefId(0:4717 ~ drift[d311]::controller::orders::force_cancel_orders::{closure#1}), [i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _33: isize;<br align="left"/>let _34: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _35: !;<br align="left"/>let mut _36: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _37: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _38: ();<br align="left"/>let mut _39: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _40: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _41: bool;<br align="left"/>let mut _42: &amp;ReErased state::user::User;<br align="left"/>let _43: &amp;ReErased state::user::User;<br align="left"/>let mut _44: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _45: ();<br align="left"/>let _46: error::ErrorCode;<br align="left"/>let _47: ();<br align="left"/>let mut _48: &amp;ReErased str;<br align="left"/>let _49: &amp;ReErased str;<br align="left"/>let mut _50: &amp;ReErased std::string::String;<br align="left"/>let _51: &amp;ReErased std::string::String;<br align="left"/>let _52: std::string::String;<br align="left"/>let _53: std::string::String;<br align="left"/>let mut _54: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _55: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _56: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _57: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _58: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _59: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _60: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _61: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _62: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _63: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _64: &amp;ReErased error::ErrorCode;<br align="left"/>let _65: &amp;ReErased error::ErrorCode;<br align="left"/>let mut _66: error::ErrorCode;<br align="left"/>let mut _67: isize;<br align="left"/>let _68: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _69: !;<br align="left"/>let mut _70: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _71: ();<br align="left"/>let _72: ();<br align="left"/>let mut _73: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _74: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _75: bool;<br align="left"/>let mut _76: &amp;ReErased state::user::User;<br align="left"/>let _77: &amp;ReErased state::user::User;<br align="left"/>let mut _78: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _79: ();<br align="left"/>let _80: error::ErrorCode;<br align="left"/>let _81: ();<br align="left"/>let mut _82: &amp;ReErased str;<br align="left"/>let _83: &amp;ReErased str;<br align="left"/>let mut _84: &amp;ReErased std::string::String;<br align="left"/>let _85: &amp;ReErased std::string::String;<br align="left"/>let _86: std::string::String;<br align="left"/>let _87: std::string::String;<br align="left"/>let mut _88: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _89: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _90: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _91: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _92: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _93: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _94: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _95: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _96: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _97: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _98: &amp;ReErased error::ErrorCode;<br align="left"/>let _99: &amp;ReErased error::ErrorCode;<br align="left"/>let mut _100: error::ErrorCode;<br align="left"/>let mut _101: isize;<br align="left"/>let _102: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _103: !;<br align="left"/>let mut _104: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _105: ();<br align="left"/>let _106: state::margin_calculation::MarginCalculation;<br align="left"/>let mut _107: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::margin_calculation::MarginCalculation&gt;;<br align="left"/>let mut _108: std::result::Result&lt;state::margin_calculation::MarginCalculation, error::ErrorCode&gt;;<br align="left"/>let mut _109: &amp;ReErased state::user::User;<br align="left"/>let _110: &amp;ReErased state::user::User;<br align="left"/>let mut _111: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _112: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _113: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _114: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _115: state::margin_calculation::MarginContext;<br align="left"/>let mut _116: math::margin::MarginRequirementType;<br align="left"/>let mut _117: isize;<br align="left"/>let _118: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _119: !;<br align="left"/>let mut _120: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _121: state::margin_calculation::MarginCalculation;<br align="left"/>let _122: bool;<br align="left"/>let mut _123: &amp;ReErased state::margin_calculation::MarginCalculation;<br align="left"/>let _124: ();<br align="left"/>let mut _125: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _126: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _127: bool;<br align="left"/>let mut _128: ();<br align="left"/>let _129: error::ErrorCode;<br align="left"/>let _130: ();<br align="left"/>let mut _131: &amp;ReErased str;<br align="left"/>let _132: &amp;ReErased str;<br align="left"/>let mut _133: &amp;ReErased std::string::String;<br align="left"/>let _134: &amp;ReErased std::string::String;<br align="left"/>let _135: std::string::String;<br align="left"/>let _136: std::string::String;<br align="left"/>let mut _137: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _138: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _139: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _140: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _141: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _142: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _143: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _144: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _145: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _146: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _147: &amp;ReErased error::ErrorCode;<br align="left"/>let _148: &amp;ReErased error::ErrorCode;<br align="left"/>let mut _149: error::ErrorCode;<br align="left"/>let mut _150: isize;<br align="left"/>let _151: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _152: !;<br align="left"/>let mut _153: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _154: ();<br align="left"/>let mut _155: u64;<br align="left"/>let _156: ();<br align="left"/>let mut _157: std::ops::Range&lt;usize&gt;;<br align="left"/>let mut _158: std::ops::Range&lt;usize&gt;;<br align="left"/>let mut _159: usize;<br align="left"/>let mut _160: &amp;ReErased [state::user::Order];<br align="left"/>let mut _161: &amp;ReErased [state::user::Order; 32_usize];<br align="left"/>let _162: &amp;ReErased state::user::User;<br align="left"/>let mut _163: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _164: std::ops::Range&lt;usize&gt;;<br align="left"/>let mut _165: ();<br align="left"/>let _166: ();<br align="left"/>let mut _167: std::option::Option&lt;usize&gt;;<br align="left"/>let mut _168: &amp;ReErased mut std::ops::Range&lt;usize&gt;;<br align="left"/>let mut _169: &amp;ReErased mut std::ops::Range&lt;usize&gt;;<br align="left"/>let mut _170: isize;<br align="left"/>let mut _171: !;<br align="left"/>let _172: usize;<br align="left"/>let _173: ();<br align="left"/>let mut _174: bool;<br align="left"/>let mut _175: &amp;ReErased state::user::OrderStatus;<br align="left"/>let _176: &amp;ReErased state::user::User;<br align="left"/>let mut _177: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _178: usize;<br align="left"/>let mut _179: usize;<br align="left"/>let mut _180: bool;<br align="left"/>let mut _181: &amp;ReErased state::user::OrderStatus;<br align="left"/>let _182: state::user::OrderStatus;<br align="left"/>let mut _183: !;<br align="left"/>let _184: u16;<br align="left"/>let mut _185: &amp;ReErased state::user::User;<br align="left"/>let mut _186: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _187: usize;<br align="left"/>let mut _188: usize;<br align="left"/>let mut _189: bool;<br align="left"/>let _190: state::user::MarketType;<br align="left"/>let mut _191: &amp;ReErased state::user::User;<br align="left"/>let mut _192: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _193: usize;<br align="left"/>let mut _194: usize;<br align="left"/>let mut _195: bool;<br align="left"/>let _196: u64;<br align="left"/>let mut _197: isize;<br align="left"/>let _198: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _199: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _200: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _201: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _202: &amp;ReErased u16;<br align="left"/>let _203: &amp;ReErased u16;<br align="left"/>let mut _204: isize;<br align="left"/>let _205: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _206: !;<br align="left"/>let mut _207: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _208: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _209: i64;<br align="left"/>let mut _210: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _211: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _212: i128;<br align="left"/>let mut _213: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _214: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _215: &amp;ReErased state::user::SpotPosition;<br align="left"/>let _216: &amp;ReErased state::user::SpotPosition;<br align="left"/>let mut _217: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::user::SpotPosition&gt;;<br align="left"/>let mut _218: std::result::Result&lt;&amp;ReErased state::user::SpotPosition, error::ErrorCode&gt;;<br align="left"/>let mut _219: &amp;ReErased state::user::User;<br align="left"/>let _220: &amp;ReErased state::user::User;<br align="left"/>let mut _221: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _222: u16;<br align="left"/>let mut _223: isize;<br align="left"/>let _224: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _225: !;<br align="left"/>let mut _226: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _227: &amp;ReErased state::user::SpotPosition;<br align="left"/>let mut _228: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _229: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _230: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _231: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _232: isize;<br align="left"/>let _233: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _234: !;<br align="left"/>let mut _235: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _236: i128;<br align="left"/>let mut _237: isize;<br align="left"/>let _238: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _239: !;<br align="left"/>let mut _240: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _241: i64;<br align="left"/>let _242: bool;<br align="left"/>let mut _243: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _244: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _245: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let _246: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let _247: &amp;ReErased state::user::User;<br align="left"/>let mut _248: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _249: usize;<br align="left"/>let mut _250: usize;<br align="left"/>let mut _251: bool;<br align="left"/>let mut _252: u64;<br align="left"/>let mut _253: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _254: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _255: &amp;ReErased state::user::Order;<br align="left"/>let _256: &amp;ReErased state::user::User;<br align="left"/>let mut _257: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _258: usize;<br align="left"/>let mut _259: usize;<br align="left"/>let mut _260: bool;<br align="left"/>let mut _261: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _262: i64;<br align="left"/>let mut _263: isize;<br align="left"/>let _264: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _265: !;<br align="left"/>let mut _266: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _267: u64;<br align="left"/>let mut _268: i64;<br align="left"/>let mut _269: isize;<br align="left"/>let _270: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _271: !;<br align="left"/>let mut _272: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _273: bool;<br align="left"/>let _274: ();<br align="left"/>let mut _275: bool;<br align="left"/>let mut _276: !;<br align="left"/>let _277: i64;<br align="left"/>let mut _278: &amp;ReErased state::user::PerpPosition;<br align="left"/>let mut _279: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::user::PerpPosition&gt;;<br align="left"/>let mut _280: std::result::Result&lt;&amp;ReErased state::user::PerpPosition, error::ErrorCode&gt;;<br align="left"/>let mut _281: &amp;ReErased state::user::User;<br align="left"/>let _282: &amp;ReErased state::user::User;<br align="left"/>let mut _283: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _284: u16;<br align="left"/>let mut _285: isize;<br align="left"/>let _286: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _287: !;<br align="left"/>let mut _288: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _289: &amp;ReErased state::user::PerpPosition;<br align="left"/>let _290: bool;<br align="left"/>let mut _291: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _292: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _293: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let _294: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let _295: &amp;ReErased state::user::User;<br align="left"/>let mut _296: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _297: usize;<br align="left"/>let mut _298: usize;<br align="left"/>let mut _299: bool;<br align="left"/>let mut _300: u64;<br align="left"/>let mut _301: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _302: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _303: &amp;ReErased state::user::Order;<br align="left"/>let _304: &amp;ReErased state::user::User;<br align="left"/>let mut _305: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _306: usize;<br align="left"/>let mut _307: usize;<br align="left"/>let mut _308: bool;<br align="left"/>let mut _309: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _310: i64;<br align="left"/>let mut _311: isize;<br align="left"/>let _312: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _313: !;<br align="left"/>let mut _314: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _315: u64;<br align="left"/>let mut _316: i64;<br align="left"/>let mut _317: isize;<br align="left"/>let _318: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _319: !;<br align="left"/>let mut _320: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _321: bool;<br align="left"/>let _322: ();<br align="left"/>let mut _323: bool;<br align="left"/>let mut _324: !;<br align="left"/>let mut _325: u64;<br align="left"/>let mut _326: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _327: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _328: u64;<br align="left"/>let mut _329: u64;<br align="left"/>let mut _330: isize;<br align="left"/>let _331: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _332: !;<br align="left"/>let mut _333: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _334: u64;<br align="left"/>let _335: ();<br align="left"/>let mut _336: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _337: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _338: usize;<br align="left"/>let mut _339: &amp;ReErased mut state::user::User;<br align="left"/>let mut _340: &amp;ReErased mut state::user::User;<br align="left"/>let mut _341: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _342: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _343: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _344: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _345: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _346: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _347: i64;<br align="left"/>let mut _348: u64;<br align="left"/>let mut _349: state::events::OrderActionExplanation;<br align="left"/>let mut _350: std::option::Option&lt;&amp;ReErased anchor_lang::prelude::Pubkey&gt;;<br align="left"/>let mut _351: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _352: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _353: u64;<br align="left"/>let mut _354: isize;<br align="left"/>let _355: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _356: !;<br align="left"/>let mut _357: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _358: ();<br align="left"/>let _359: u64;<br align="left"/>let mut _360: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _361: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _362: &amp;ReErased mut state::user::User;<br align="left"/>let mut _363: &amp;ReErased mut state::user::User;<br align="left"/>let mut _364: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _365: std::option::Option&lt;&amp;ReErased mut state::user::User&gt;;<br align="left"/>let mut _366: &amp;ReErased mut state::user::User;<br align="left"/>let mut _367: &amp;ReErased mut state::user::User;<br align="left"/>let mut _368: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _369: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _370: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _371: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _372: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _373: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _374: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _375: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _376: isize;<br align="left"/>let _377: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _378: !;<br align="left"/>let mut _379: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _380: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _381: u64;<br align="left"/>let mut _382: u64;<br align="left"/>let mut _383: isize;<br align="left"/>let _384: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _385: !;<br align="left"/>let mut _386: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _387: u64;<br align="left"/>let _388: ();<br align="left"/>let mut _389: &amp;ReErased mut state::user::User;<br align="left"/>let mut _390: &amp;ReErased mut state::user::User;<br align="left"/>let mut _391: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _392: u64;<br align="left"/>let mut _393: ();<br align="left"/>let mut _394: &amp;ReErased state::user::OrderStatus;<br align="left"/>let mut _395: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _396: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _397: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _398: bool;<br align="left"/>let mut _399: isize;<br align="left"/>let mut _400: isize;<br align="left"/>let mut _401: isize;<br align="left"/>let mut _402: isize;<br align="left"/>let mut _403: isize;<br align="left"/>let mut _404: isize;<br align="left"/>let mut _405: isize;<br align="left"/>let mut _406: isize;<br align="left"/>let mut _407: isize;<br align="left"/>let mut _408: isize;<br align="left"/>let mut _409: isize;<br align="left"/>let mut _410: isize;<br align="left"/>let mut _411: isize;<br align="left"/>let mut _412: isize;<br align="left"/>let mut _413: isize;<br align="left"/>let mut _414: isize;<br align="left"/>let mut _415: isize;<br align="left"/>let mut _416: isize;<br align="left"/>let mut _417: isize;<br align="left"/>let mut _418: isize;<br align="left"/>debug state =&gt; _1;<br align="left"/>debug user_account_loader =&gt; _2;<br align="left"/>debug spot_market_map =&gt; _3;<br align="left"/>debug perp_market_map =&gt; _4;<br align="left"/>debug oracle_map =&gt; _5;<br align="left"/>debug filler =&gt; _6;<br align="left"/>debug clock =&gt; _7;<br align="left"/>debug now =&gt; _8;<br align="left"/>debug slot =&gt; _9;<br align="left"/>debug filler_key =&gt; _10;<br align="left"/>debug user_key =&gt; _12;<br align="left"/>debug user =&gt; _14;<br align="left"/>debug residual =&gt; _22;<br align="left"/>debug val =&gt; _25;<br align="left"/>debug filler =&gt; _26;<br align="left"/>debug residual =&gt; _34;<br align="left"/>debug val =&gt; _37;<br align="left"/>debug error_code =&gt; _46;<br align="left"/>debug res =&gt; _53;<br align="left"/>debug residual =&gt; _68;<br align="left"/>debug val =&gt; _71;<br align="left"/>debug error_code =&gt; _80;<br align="left"/>debug res =&gt; _87;<br align="left"/>debug residual =&gt; _102;<br align="left"/>debug val =&gt; _105;<br align="left"/>debug margin_calc =&gt; _106;<br align="left"/>debug residual =&gt; _118;<br align="left"/>debug val =&gt; _121;<br align="left"/>debug meets_initial_margin_requirement =&gt; _122;<br align="left"/>debug error_code =&gt; _129;<br align="left"/>debug res =&gt; _136;<br align="left"/>debug residual =&gt; _151;<br align="left"/>debug val =&gt; _154;<br align="left"/>debug total_fee =&gt; _155;<br align="left"/>debug iter =&gt; _164;<br align="left"/>debug order_index =&gt; _172;<br align="left"/>debug market_index =&gt; _184;<br align="left"/>debug market_type =&gt; _190;<br align="left"/>debug fee =&gt; _196;<br align="left"/>debug spot_market =&gt; _198;<br align="left"/>debug residual =&gt; _205;<br align="left"/>debug val =&gt; _208;<br align="left"/>debug token_amount =&gt; _209;<br align="left"/>debug residual =&gt; _224;<br align="left"/>debug val =&gt; _227;<br align="left"/>debug residual =&gt; _233;<br align="left"/>debug val =&gt; _236;<br align="left"/>debug residual =&gt; _238;<br align="left"/>debug val =&gt; _241;<br align="left"/>debug is_position_reducing =&gt; _242;<br align="left"/>debug residual =&gt; _264;<br align="left"/>debug val =&gt; _267;<br align="left"/>debug residual =&gt; _270;<br align="left"/>debug val =&gt; _273;<br align="left"/>debug base_asset_amount =&gt; _277;<br align="left"/>debug residual =&gt; _286;<br align="left"/>debug val =&gt; _289;<br align="left"/>debug is_position_reducing =&gt; _290;<br align="left"/>debug residual =&gt; _312;<br align="left"/>debug val =&gt; _315;<br align="left"/>debug residual =&gt; _318;<br align="left"/>debug val =&gt; _321;<br align="left"/>debug residual =&gt; _331;<br align="left"/>debug val =&gt; _334;<br align="left"/>debug residual =&gt; _355;<br align="left"/>debug val =&gt; _358;<br align="left"/>debug residual =&gt; _377;<br align="left"/>debug val =&gt; _380;<br align="left"/>debug residual =&gt; _384;<br align="left"/>debug val =&gt; _387;<br align="left"/>>;
    bb0__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_398 = const false<br/>StorageLive(_8)<br/>_8 = ((*_7).4: i64)<br/>StorageLive(_9)<br/>_9 = ((*_7).0: u64)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = &amp;(*_6)<br/></td></tr><tr><td align="left">_10 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt; as anchor_lang::Key&gt;::key(move _11)</td></tr></table>>];
    bb1__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>_13 = &amp;(*_2)<br/></td></tr><tr><td align="left">_12 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt; as anchor_lang::Key&gt;::key(move _13)</td></tr></table>>];
    bb2__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_19 = &amp;(*_2)<br/></td></tr><tr><td align="left">_18 = anchor_lang::prelude::AccountLoader::&lt;'_, User&gt;::load_mut(move _19)</td></tr></table>>];
    bb3__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageLive(_20)<br/>_20 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_17 = std::result::Result::&lt;RefMut&lt;'_, User&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _18, move _20)</td></tr></table>>];
    bb4__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">_16 = &lt;std::result::Result&lt;RefMut&lt;'_, User&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _17)</td></tr></table>>];
    bb5__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>_21 = discriminant(_16)<br/></td></tr><tr><td align="left">switchInt(move _21)</td></tr></table>>];
    bb6__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_25)<br/>_25 = move ((_16 as Continue).0: std::cell::RefMut&lt;'_, state::user::User&gt;)<br/>_15 = move _25<br/>StorageDead(_25)<br/>_14 = &amp;mut _15<br/>_401 = discriminant(_16)<br/>StorageDead(_16)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>_31 = &amp;(*_6)<br/></td></tr><tr><td align="left">_30 = anchor_lang::prelude::AccountLoader::&lt;'_, User&gt;::load_mut(move _31)</td></tr></table>>];
    bb7__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb8__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_22)<br/>_22 = ((_16 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_24)<br/>_24 = _22<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _24)</td></tr></table>>];
    bb9__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_22)<br/>_399 = discriminant(_16)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageLive(_32)<br/>_32 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_29 = std::result::Result::&lt;RefMut&lt;'_, User&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _30, move _32)</td></tr></table>>];
    bb11__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">_28 = &lt;std::result::Result&lt;RefMut&lt;'_, User&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _29)</td></tr></table>>];
    bb12__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>_33 = discriminant(_28)<br/></td></tr><tr><td align="left">switchInt(move _33)</td></tr></table>>];
    bb13__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_37)<br/>_37 = move ((_28 as Continue).0: std::cell::RefMut&lt;'_, state::user::User&gt;)<br/>_27 = move _37<br/>StorageDead(_37)<br/>_26 = &amp;mut _27<br/>_405 = discriminant(_28)<br/>StorageDead(_28)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>_44 = &amp;(*_14)<br/></td></tr><tr><td align="left">_43 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _44)</td></tr></table>>];
    bb14__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_34)<br/>_34 = ((_28 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_36)<br/>_36 = _34<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _36)</td></tr></table>>];
    bb15__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_34)<br/>_403 = discriminant(_28)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">_42 = &amp;(*_43)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">_41 = User::is_being_liquidated(move _42)</td></tr></table>>];
    bb17__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left">switchInt(move _41)</td></tr></table>>];
    bb18__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_43)<br/>StorageLive(_46)<br/>_46 = error::ErrorCode::UserIsBeingLiquidated<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>_397 = const _<br/>_57 = &amp;(*_397)<br/>_56 = &amp;(*_57)<br/>_55 = move _56 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_56)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>_65 = &amp;_46<br/>_64 = &amp;(*_65)<br/></td></tr><tr><td align="left">_63 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _64)</td></tr></table>>];
    bb19__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_43)<br/>StorageLive(_45)<br/>_45 = ()<br/>_40 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _45)<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>_62 = [move _63]<br/>StorageDead(_63)<br/>_61 = &amp;_62<br/>_60 = &amp;(*_61)<br/>_59 = move _60 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">_54 = Arguments::&lt;'_&gt;::new_v1(move _55, move _59)</td></tr></table>>];
    bb21__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">_53 = format(move _54)</td></tr></table>>];
    bb22__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_65)<br/>StorageDead(_62)<br/>StorageDead(_61)<br/>StorageDead(_57)<br/>_52 = move _53<br/>StorageDead(_53)<br/>_51 = &amp;_52<br/>_50 = &amp;(*_51)<br/></td></tr><tr><td align="left">_49 = &lt;String as Deref&gt;::deref(move _50)</td></tr></table>>];
    bb23__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">_48 = &amp;(*_49)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">_47 = solana_program::log::sol_log(move _48)</td></tr></table>>];
    bb24__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/></td></tr><tr><td align="left">drop(_52)</td></tr></table>>];
    bb25__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_51)<br/>StorageDead(_49)<br/>StorageDead(_47)<br/>StorageLive(_66)<br/>_66 = _46<br/>_40 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _66)<br/>StorageDead(_66)<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/></td></tr><tr><td align="left">_39 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _40)</td></tr></table>>];
    bb27__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>_67 = discriminant(_39)<br/></td></tr><tr><td align="left">switchInt(move _67)</td></tr></table>>];
    bb28__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_71)<br/>_71 = ((_39 as Continue).0: ())<br/>_38 = _71<br/>StorageDead(_71)<br/>StorageDead(_39)<br/>StorageDead(_38)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>_78 = &amp;(*_14)<br/></td></tr><tr><td align="left">_77 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _78)</td></tr></table>>];
    bb29__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_68)<br/>_68 = ((_39 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_70)<br/>_70 = _68<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _70)</td></tr></table>>];
    bb30__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_68)<br/>StorageDead(_39)<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">_76 = &amp;(*_77)<br/>StorageDead(_78)<br/></td></tr><tr><td align="left">_75 = User::is_bankrupt(move _76)</td></tr></table>>];
    bb32__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left">switchInt(move _75)</td></tr></table>>];
    bb33__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>StorageDead(_77)<br/>StorageLive(_80)<br/>_80 = error::ErrorCode::UserBankrupt<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>_396 = const _<br/>_91 = &amp;(*_396)<br/>_90 = &amp;(*_91)<br/>_89 = move _90 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_90)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>_99 = &amp;_80<br/>_98 = &amp;(*_99)<br/></td></tr><tr><td align="left">_97 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _98)</td></tr></table>>];
    bb34__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>StorageDead(_77)<br/>StorageLive(_79)<br/>_79 = ()<br/>_74 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _79)<br/>StorageDead(_79)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>_96 = [move _97]<br/>StorageDead(_97)<br/>_95 = &amp;_96<br/>_94 = &amp;(*_95)<br/>_93 = move _94 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_94)<br/></td></tr><tr><td align="left">_88 = Arguments::&lt;'_&gt;::new_v1(move _89, move _93)</td></tr></table>>];
    bb36__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageDead(_89)<br/></td></tr><tr><td align="left">_87 = format(move _88)</td></tr></table>>];
    bb37__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>StorageDead(_99)<br/>StorageDead(_96)<br/>StorageDead(_95)<br/>StorageDead(_91)<br/>_86 = move _87<br/>StorageDead(_87)<br/>_85 = &amp;_86<br/>_84 = &amp;(*_85)<br/></td></tr><tr><td align="left">_83 = &lt;String as Deref&gt;::deref(move _84)</td></tr></table>>];
    bb38__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">_82 = &amp;(*_83)<br/>StorageDead(_84)<br/></td></tr><tr><td align="left">_81 = solana_program::log::sol_log(move _82)</td></tr></table>>];
    bb39__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/></td></tr><tr><td align="left">drop(_86)</td></tr></table>>];
    bb40__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>StorageDead(_85)<br/>StorageDead(_83)<br/>StorageDead(_81)<br/>StorageLive(_100)<br/>_100 = _80<br/>_74 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _100)<br/>StorageDead(_100)<br/>StorageDead(_80)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/></td></tr><tr><td align="left">_73 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _74)</td></tr></table>>];
    bb42__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>_101 = discriminant(_73)<br/></td></tr><tr><td align="left">switchInt(move _101)</td></tr></table>>];
    bb43__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageLive(_105)<br/>_105 = ((_73 as Continue).0: ())<br/>_72 = _105<br/>StorageDead(_105)<br/>StorageDead(_73)<br/>StorageDead(_72)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>_111 = &amp;(*_14)<br/></td></tr><tr><td align="left">_110 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _111)</td></tr></table>>];
    bb44__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_102)<br/>_102 = ((_73 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_104)<br/>_104 = _102<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _104)</td></tr></table>>];
    bb45__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/>StorageDead(_102)<br/>StorageDead(_73)<br/>StorageDead(_72)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">_109 = &amp;(*_110)<br/>StorageDead(_111)<br/>StorageLive(_112)<br/>_112 = &amp;(*_4)<br/>StorageLive(_113)<br/>_113 = &amp;(*_3)<br/>StorageLive(_114)<br/>_114 = &amp;mut (*_5)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>_116 = math::margin::MarginRequirementType::Initial<br/></td></tr><tr><td align="left">_115 = MarginContext::standard(move _116)</td></tr></table>>];
    bb47__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_116)<br/></td></tr><tr><td align="left">_108 = math::margin::calculate_margin_requirement_and_total_collateral_and_liability_info(move _109, move _112, move _113, move _114, move _115)</td></tr></table>>];
    bb48__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_115)<br/>StorageDead(_114)<br/>StorageDead(_113)<br/>StorageDead(_112)<br/>StorageDead(_109)<br/></td></tr><tr><td align="left">_107 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as Try&gt;::branch(move _108)</td></tr></table>>];
    bb49__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/>_117 = discriminant(_107)<br/></td></tr><tr><td align="left">switchInt(move _117)</td></tr></table>>];
    bb50__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageLive(_121)<br/>_121 = ((_107 as Continue).0: state::margin_calculation::MarginCalculation)<br/>_106 = _121<br/>StorageDead(_121)<br/>StorageDead(_110)<br/>StorageDead(_107)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>_123 = &amp;_106<br/></td></tr><tr><td align="left">_122 = MarginCalculation::meets_margin_requirement(move _123)</td></tr></table>>];
    bb51__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageLive(_118)<br/>_118 = ((_107 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_120)<br/>_120 = _118<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _120)</td></tr></table>>];
    bb52__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/>StorageDead(_118)<br/>StorageDead(_110)<br/>StorageDead(_107)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>_127 = _122<br/></td></tr><tr><td align="left">switchInt(move _127)</td></tr></table>>];
    bb54__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageLive(_128)<br/>_128 = ()<br/>_126 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _128)<br/>StorageDead(_128)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb55__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageLive(_129)<br/>_129 = error::ErrorCode::SufficientCollateral<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>StorageLive(_140)<br/>_395 = const _<br/>_140 = &amp;(*_395)<br/>_139 = &amp;(*_140)<br/>_138 = move _139 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_139)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>_148 = &amp;_129<br/>_147 = &amp;(*_148)<br/></td></tr><tr><td align="left">_146 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _147)</td></tr></table>>];
    bb56__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_147)<br/>_145 = [move _146]<br/>StorageDead(_146)<br/>_144 = &amp;_145<br/>_143 = &amp;(*_144)<br/>_142 = move _143 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_143)<br/></td></tr><tr><td align="left">_137 = Arguments::&lt;'_&gt;::new_v1(move _138, move _142)</td></tr></table>>];
    bb57__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_142)<br/>StorageDead(_138)<br/></td></tr><tr><td align="left">_136 = format(move _137)</td></tr></table>>];
    bb58__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_137)<br/>StorageDead(_148)<br/>StorageDead(_145)<br/>StorageDead(_144)<br/>StorageDead(_140)<br/>_135 = move _136<br/>StorageDead(_136)<br/>_134 = &amp;_135<br/>_133 = &amp;(*_134)<br/></td></tr><tr><td align="left">_132 = &lt;String as Deref&gt;::deref(move _133)</td></tr></table>>];
    bb59__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">_131 = &amp;(*_132)<br/>StorageDead(_133)<br/></td></tr><tr><td align="left">_130 = solana_program::log::sol_log(move _131)</td></tr></table>>];
    bb60__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_131)<br/></td></tr><tr><td align="left">drop(_135)</td></tr></table>>];
    bb61__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_135)<br/>StorageDead(_134)<br/>StorageDead(_132)<br/>StorageDead(_130)<br/>StorageLive(_149)<br/>_149 = _129<br/>_126 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _149)<br/>StorageDead(_149)<br/>StorageDead(_129)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/></td></tr><tr><td align="left">_125 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _126)</td></tr></table>>];
    bb63__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/>_150 = discriminant(_125)<br/></td></tr><tr><td align="left">switchInt(move _150)</td></tr></table>>];
    bb64__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageLive(_154)<br/>_154 = ((_125 as Continue).0: ())<br/>_124 = _154<br/>StorageDead(_154)<br/>StorageDead(_125)<br/>StorageDead(_124)<br/>StorageLive(_155)<br/>_155 = const 0_u64<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>StorageLive(_161)<br/>StorageLive(_162)<br/>StorageLive(_163)<br/>_163 = &amp;(*_14)<br/></td></tr><tr><td align="left">_162 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _163)</td></tr></table>>];
    bb65__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageLive(_151)<br/>_151 = ((_125 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_153)<br/>_153 = _151<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _153)</td></tr></table>>];
    bb66__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_153)<br/>StorageDead(_151)<br/>StorageDead(_125)<br/>StorageDead(_124)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb67__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_163)<br/>_161 = &amp;((*_162).5: [state::user::Order; 32])<br/>_160 = move _161 as &amp;[state::user::Order] (PointerCoercion(Unsize))<br/>StorageDead(_161)<br/></td></tr><tr><td align="left">_159 = core::slice::&lt;impl [Order]&gt;::len(move _160)</td></tr></table>>];
    bb68__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_160)<br/>_158 = std::ops::Range::&lt;usize&gt; { start: const 0_usize, end: move _159 }<br/>StorageDead(_159)<br/></td></tr><tr><td align="left">_157 = &lt;std::ops::Range&lt;usize&gt; as IntoIterator&gt;::into_iter(move _158)</td></tr></table>>];
    bb69__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_158)<br/>StorageLive(_164)<br/>_164 = move _157<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb70__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageLive(_166)<br/>StorageLive(_167)<br/>StorageLive(_168)<br/>StorageLive(_169)<br/>_169 = &amp;mut _164<br/>_168 = &amp;mut (*_169)<br/></td></tr><tr><td align="left">_167 = &lt;std::ops::Range&lt;usize&gt; as Iterator&gt;::next(move _168)</td></tr></table>>];
    bb71__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_168)<br/>_170 = discriminant(_167)<br/></td></tr><tr><td align="left">switchInt(move _170)</td></tr></table>>];
    bb72__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageLive(_172)<br/>_172 = ((_167 as Some).0: usize)<br/>StorageLive(_173)<br/>StorageLive(_174)<br/>StorageLive(_175)<br/>StorageLive(_176)<br/>StorageLive(_177)<br/>_177 = &amp;(*_14)<br/></td></tr><tr><td align="left">_176 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _177)</td></tr></table>>];
    bb73__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">_156 = const ()<br/>StorageDead(_169)<br/>StorageDead(_167)<br/>StorageDead(_166)<br/>StorageDead(_164)<br/>StorageDead(_162)<br/>StorageDead(_157)<br/>StorageDead(_156)<br/>StorageLive(_359)<br/>StorageLive(_360)<br/>StorageLive(_361)<br/>StorageLive(_362)<br/>StorageLive(_363)<br/>StorageLive(_364)<br/>_364 = &amp;mut (*_14)<br/></td></tr><tr><td align="left">_363 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _364)</td></tr></table>>];
    bb74__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_177)<br/>StorageLive(_178)<br/>_178 = _172<br/>_179 = Len(((*_176).5: [state::user::Order; 32]))<br/>_180 = Lt(_178, _179)<br/></td></tr><tr><td align="left">assert(move _180, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _179, _178)</td></tr></table>>];
    bb75__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">_175 = &amp;(((*_176).5: [state::user::Order; 32])[_178].12: state::user::OrderStatus)<br/>StorageLive(_181)<br/>_394 = const _<br/>_181 = &amp;(*_394)<br/></td></tr><tr><td align="left">_174 = &lt;OrderStatus as PartialEq&gt;::ne(move _175, move _181)</td></tr></table>>];
    bb76__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left">switchInt(move _174)</td></tr></table>>];
    bb77__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_181)<br/>StorageDead(_178)<br/>StorageDead(_176)<br/>StorageDead(_175)<br/>StorageDead(_174)<br/>StorageDead(_173)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb78__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_181)<br/>StorageDead(_178)<br/>StorageDead(_176)<br/>StorageDead(_175)<br/>_173 = const ()<br/>StorageDead(_174)<br/>StorageDead(_173)<br/>StorageLive(_184)<br/>StorageLive(_185)<br/>StorageLive(_186)<br/>_186 = &amp;(*_14)<br/></td></tr><tr><td align="left">_185 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _186)</td></tr></table>>];
    bb79__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_186)<br/>StorageLive(_187)<br/>_187 = _172<br/>_188 = Len(((*_185).5: [state::user::Order; 32]))<br/>_189 = Lt(_187, _188)<br/></td></tr><tr><td align="left">assert(move _189, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _188, _187)</td></tr></table>>];
    bb80__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">_184 = (((*_185).5: [state::user::Order; 32])[_187].11: u16)<br/>StorageDead(_187)<br/>StorageDead(_185)<br/>StorageLive(_190)<br/>StorageLive(_191)<br/>StorageLive(_192)<br/>_192 = &amp;(*_14)<br/></td></tr><tr><td align="left">_191 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _192)</td></tr></table>>];
    bb81__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_192)<br/>StorageLive(_193)<br/>_193 = _172<br/>_194 = Len(((*_191).5: [state::user::Order; 32]))<br/>_195 = Lt(_193, _194)<br/></td></tr><tr><td align="left">assert(move _195, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _194, _193)</td></tr></table>>];
    bb82__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">_190 = (((*_191).5: [state::user::Order; 32])[_193].14: state::user::MarketType)<br/>StorageDead(_193)<br/>StorageDead(_191)<br/>StorageLive(_196)<br/>_197 = discriminant(_190)<br/></td></tr><tr><td align="left">switchInt(move _197)</td></tr></table>>];
    bb83__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageLive(_277)<br/>StorageLive(_278)<br/>StorageLive(_279)<br/>StorageLive(_280)<br/>StorageLive(_281)<br/>StorageLive(_282)<br/>StorageLive(_283)<br/>_283 = &amp;(*_14)<br/></td></tr><tr><td align="left">_282 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _283)</td></tr></table>>];
    bb84__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageLive(_198)<br/>StorageLive(_199)<br/>StorageLive(_200)<br/>StorageLive(_201)<br/>_201 = &amp;(*_3)<br/>StorageLive(_202)<br/>StorageLive(_203)<br/>_203 = &amp;_184<br/>_202 = &amp;(*_203)<br/></td></tr><tr><td align="left">_200 = SpotMarketMap::&lt;'_&gt;::get_ref(move _201, move _202)</td></tr></table>>];
    bb85__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_202)<br/>StorageDead(_201)<br/></td></tr><tr><td align="left">_199 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _200)</td></tr></table>>];
    bb86__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_200)<br/>_204 = discriminant(_199)<br/></td></tr><tr><td align="left">switchInt(move _204)</td></tr></table>>];
    bb87__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageLive(_208)<br/>_208 = move ((_199 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_198 = move _208<br/>StorageDead(_208)<br/>_409 = discriminant(_199)<br/>StorageDead(_203)<br/>StorageDead(_199)<br/>StorageLive(_209)<br/>StorageLive(_210)<br/>StorageLive(_211)<br/>StorageLive(_212)<br/>StorageLive(_213)<br/>StorageLive(_214)<br/>StorageLive(_215)<br/>StorageLive(_216)<br/>StorageLive(_217)<br/>StorageLive(_218)<br/>StorageLive(_219)<br/>StorageLive(_220)<br/>StorageLive(_221)<br/>_221 = &amp;(*_14)<br/></td></tr><tr><td align="left">_220 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _221)</td></tr></table>>];
    bb88__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageLive(_205)<br/>_205 = ((_199 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_207)<br/>_207 = _205<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _207)</td></tr></table>>];
    bb89__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_207)<br/>StorageDead(_205)<br/>_407 = discriminant(_199)<br/>StorageDead(_203)<br/>StorageDead(_199)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb90__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">_219 = &amp;(*_220)<br/>StorageDead(_221)<br/>StorageLive(_222)<br/>_222 = _184<br/></td></tr><tr><td align="left">_218 = User::get_spot_position(move _219, move _222)</td></tr></table>>];
    bb91__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_222)<br/>StorageDead(_219)<br/></td></tr><tr><td align="left">_217 = &lt;std::result::Result&lt;&amp;SpotPosition, error::ErrorCode&gt; as Try&gt;::branch(move _218)</td></tr></table>>];
    bb92__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_218)<br/>_223 = discriminant(_217)<br/></td></tr><tr><td align="left">switchInt(move _223)</td></tr></table>>];
    bb93__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageLive(_227)<br/>_227 = ((_217 as Continue).0: &amp;state::user::SpotPosition)<br/>_216 = _227<br/>StorageDead(_227)<br/>_215 = &amp;(*_216)<br/>StorageLive(_228)<br/>StorageLive(_229)<br/>StorageLive(_230)<br/>StorageLive(_231)<br/>_231 = &amp;_198<br/>_230 = &amp;(*_231)<br/></td></tr><tr><td align="left">_229 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _230)</td></tr></table>>];
    bb94__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageLive(_224)<br/>_224 = ((_217 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_226)<br/>_226 = _224<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _226)</td></tr></table>>];
    bb95__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_226)<br/>StorageDead(_224)<br/>StorageDead(_215)<br/>StorageDead(_214)<br/>StorageDead(_212)<br/>StorageDead(_211)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb96__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">_228 = &amp;(*_229)<br/>StorageDead(_230)<br/></td></tr><tr><td align="left">_214 = SpotPosition::get_signed_token_amount(move _215, move _228)</td></tr></table>>];
    bb97__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_228)<br/>StorageDead(_215)<br/></td></tr><tr><td align="left">_213 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _214)</td></tr></table>>];
    bb98__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_214)<br/>_232 = discriminant(_213)<br/></td></tr><tr><td align="left">switchInt(move _232)</td></tr></table>>];
    bb99__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageLive(_236)<br/>_236 = ((_213 as Continue).0: i128)<br/>_212 = _236<br/>StorageDead(_236)<br/></td></tr><tr><td align="left">_211 = &lt;i128 as Cast&gt;::cast::&lt;i64&gt;(move _212)</td></tr></table>>];
    bb100__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageLive(_233)<br/>_233 = ((_213 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_235)<br/>_235 = _233<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _235)</td></tr></table>>];
    bb101__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_235)<br/>StorageDead(_233)<br/>StorageDead(_212)<br/>StorageDead(_211)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb102__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_212)<br/></td></tr><tr><td align="left">_210 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _211)</td></tr></table>>];
    bb103__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_211)<br/>_237 = discriminant(_210)<br/></td></tr><tr><td align="left">switchInt(move _237)</td></tr></table>>];
    bb104__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageLive(_241)<br/>_241 = ((_210 as Continue).0: i64)<br/>_209 = _241<br/>StorageDead(_241)<br/>StorageDead(_231)<br/>StorageDead(_229)<br/>StorageDead(_220)<br/>StorageDead(_217)<br/>StorageDead(_216)<br/>StorageDead(_213)<br/>StorageDead(_210)<br/>StorageLive(_242)<br/>StorageLive(_243)<br/>StorageLive(_244)<br/>StorageLive(_245)<br/>StorageLive(_246)<br/>StorageLive(_247)<br/>StorageLive(_248)<br/>_248 = &amp;(*_14)<br/></td></tr><tr><td align="left">_247 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _248)</td></tr></table>>];
    bb105__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageLive(_238)<br/>_238 = ((_210 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_240)<br/>_240 = _238<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _240)</td></tr></table>>];
    bb106__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_240)<br/>StorageDead(_238)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb107__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_248)<br/>StorageLive(_249)<br/>_249 = _172<br/>_250 = Len(((*_247).5: [state::user::Order; 32]))<br/>_251 = Lt(_249, _250)<br/></td></tr><tr><td align="left">assert(move _251, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _250, _249)</td></tr></table>>];
    bb108__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">_246 = &amp;(((*_247).5: [state::user::Order; 32])[_249].17: controller::position::PositionDirection)<br/>_245 = &amp;(*_246)<br/>StorageLive(_252)<br/>StorageLive(_253)<br/>StorageLive(_254)<br/>StorageLive(_255)<br/>StorageLive(_256)<br/>StorageLive(_257)<br/>_257 = &amp;(*_14)<br/></td></tr><tr><td align="left">_256 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _257)</td></tr></table>>];
    bb109__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageDead(_257)<br/>StorageLive(_258)<br/>_258 = _172<br/>_259 = Len(((*_256).5: [state::user::Order; 32]))<br/>_260 = Lt(_258, _259)<br/></td></tr><tr><td align="left">assert(move _260, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _259, _258)</td></tr></table>>];
    bb110__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">_255 = &amp;((*_256).5: [state::user::Order; 32])[_258]<br/>StorageLive(_261)<br/>StorageLive(_262)<br/>_262 = _209<br/>_261 = Option::&lt;i64&gt;::Some(move _262)<br/>StorageDead(_262)<br/></td></tr><tr><td align="left">_254 = Order::get_base_asset_amount_unfilled(move _255, move _261)</td></tr></table>>];
    bb111__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_261)<br/>StorageDead(_255)<br/></td></tr><tr><td align="left">_253 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _254)</td></tr></table>>];
    bb112__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageDead(_254)<br/>_263 = discriminant(_253)<br/></td></tr><tr><td align="left">switchInt(move _263)</td></tr></table>>];
    bb113__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageLive(_267)<br/>_267 = ((_253 as Continue).0: u64)<br/>_252 = _267<br/>StorageDead(_267)<br/>StorageLive(_268)<br/>_268 = _209<br/></td></tr><tr><td align="left">_244 = math::orders::is_order_position_reducing(move _245, move _252, move _268)</td></tr></table>>];
    bb114__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageLive(_264)<br/>_264 = ((_253 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_266)<br/>_266 = _264<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _266)</td></tr></table>>];
    bb115__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageDead(_266)<br/>StorageDead(_264)<br/>StorageDead(_252)<br/>StorageDead(_245)<br/>StorageDead(_244)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb116__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_268)<br/>StorageDead(_252)<br/>StorageDead(_245)<br/></td></tr><tr><td align="left">_243 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _244)</td></tr></table>>];
    bb117__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageDead(_244)<br/>_269 = discriminant(_243)<br/></td></tr><tr><td align="left">switchInt(move _269)</td></tr></table>>];
    bb118__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageLive(_273)<br/>_273 = ((_243 as Continue).0: bool)<br/>_242 = _273<br/>StorageDead(_273)<br/>StorageDead(_258)<br/>StorageDead(_256)<br/>StorageDead(_253)<br/>StorageDead(_249)<br/>StorageDead(_247)<br/>StorageDead(_246)<br/>StorageDead(_243)<br/>StorageLive(_274)<br/>StorageLive(_275)<br/>_275 = _242<br/></td></tr><tr><td align="left">switchInt(move _275)</td></tr></table>>];
    bb119__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageLive(_270)<br/>_270 = ((_243 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_272)<br/>_272 = _270<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _272)</td></tr></table>>];
    bb120__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageDead(_272)<br/>StorageDead(_270)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb121__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageDead(_275)<br/>StorageDead(_274)<br/>StorageDead(_242)<br/>StorageDead(_209)<br/></td></tr><tr><td align="left">drop(_198)</td></tr></table>>];
    bb122__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">_274 = const ()<br/>StorageDead(_275)<br/>StorageDead(_274)<br/>_196 = (((*_1).6: state::state::FeeStructure).3: u64)<br/>StorageDead(_242)<br/>StorageDead(_209)<br/></td></tr><tr><td align="left">drop(_198)</td></tr></table>>];
    bb123__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageDead(_198)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb124__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">_281 = &amp;(*_282)<br/>StorageDead(_283)<br/>StorageLive(_284)<br/>_284 = _184<br/></td></tr><tr><td align="left">_280 = User::get_perp_position(move _281, move _284)</td></tr></table>>];
    bb125__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageDead(_284)<br/>StorageDead(_281)<br/></td></tr><tr><td align="left">_279 = &lt;std::result::Result&lt;&amp;PerpPosition, error::ErrorCode&gt; as Try&gt;::branch(move _280)</td></tr></table>>];
    bb126__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageDead(_280)<br/>_285 = discriminant(_279)<br/></td></tr><tr><td align="left">switchInt(move _285)</td></tr></table>>];
    bb127__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageLive(_289)<br/>_289 = ((_279 as Continue).0: &amp;state::user::PerpPosition)<br/>_278 = _289<br/>StorageDead(_289)<br/>_277 = ((*_278).1: i64)<br/>StorageDead(_282)<br/>StorageDead(_279)<br/>StorageDead(_278)<br/>StorageLive(_290)<br/>StorageLive(_291)<br/>StorageLive(_292)<br/>StorageLive(_293)<br/>StorageLive(_294)<br/>StorageLive(_295)<br/>StorageLive(_296)<br/>_296 = &amp;(*_14)<br/></td></tr><tr><td align="left">_295 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _296)</td></tr></table>>];
    bb128__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageLive(_286)<br/>_286 = ((_279 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_288)<br/>_288 = _286<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _288)</td></tr></table>>];
    bb129__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">StorageDead(_288)<br/>StorageDead(_286)<br/>StorageDead(_282)<br/>StorageDead(_279)<br/>StorageDead(_278)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb130__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageDead(_296)<br/>StorageLive(_297)<br/>_297 = _172<br/>_298 = Len(((*_295).5: [state::user::Order; 32]))<br/>_299 = Lt(_297, _298)<br/></td></tr><tr><td align="left">assert(move _299, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _298, _297)</td></tr></table>>];
    bb131__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">_294 = &amp;(((*_295).5: [state::user::Order; 32])[_297].17: controller::position::PositionDirection)<br/>_293 = &amp;(*_294)<br/>StorageLive(_300)<br/>StorageLive(_301)<br/>StorageLive(_302)<br/>StorageLive(_303)<br/>StorageLive(_304)<br/>StorageLive(_305)<br/>_305 = &amp;(*_14)<br/></td></tr><tr><td align="left">_304 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _305)</td></tr></table>>];
    bb132__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageDead(_305)<br/>StorageLive(_306)<br/>_306 = _172<br/>_307 = Len(((*_304).5: [state::user::Order; 32]))<br/>_308 = Lt(_306, _307)<br/></td></tr><tr><td align="left">assert(move _308, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _307, _306)</td></tr></table>>];
    bb133__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">_303 = &amp;((*_304).5: [state::user::Order; 32])[_306]<br/>StorageLive(_309)<br/>StorageLive(_310)<br/>_310 = _277<br/>_309 = Option::&lt;i64&gt;::Some(move _310)<br/>StorageDead(_310)<br/></td></tr><tr><td align="left">_302 = Order::get_base_asset_amount_unfilled(move _303, move _309)</td></tr></table>>];
    bb134__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageDead(_309)<br/>StorageDead(_303)<br/></td></tr><tr><td align="left">_301 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _302)</td></tr></table>>];
    bb135__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageDead(_302)<br/>_311 = discriminant(_301)<br/></td></tr><tr><td align="left">switchInt(move _311)</td></tr></table>>];
    bb136__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageLive(_315)<br/>_315 = ((_301 as Continue).0: u64)<br/>_300 = _315<br/>StorageDead(_315)<br/>StorageLive(_316)<br/>_316 = _277<br/></td></tr><tr><td align="left">_292 = math::orders::is_order_position_reducing(move _293, move _300, move _316)</td></tr></table>>];
    bb137__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">StorageLive(_312)<br/>_312 = ((_301 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_314)<br/>_314 = _312<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _314)</td></tr></table>>];
    bb138__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">StorageDead(_314)<br/>StorageDead(_312)<br/>StorageDead(_300)<br/>StorageDead(_293)<br/>StorageDead(_292)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb139__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">StorageDead(_316)<br/>StorageDead(_300)<br/>StorageDead(_293)<br/></td></tr><tr><td align="left">_291 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _292)</td></tr></table>>];
    bb140__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">StorageDead(_292)<br/>_317 = discriminant(_291)<br/></td></tr><tr><td align="left">switchInt(move _317)</td></tr></table>>];
    bb141__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">StorageLive(_321)<br/>_321 = ((_291 as Continue).0: bool)<br/>_290 = _321<br/>StorageDead(_321)<br/>StorageDead(_306)<br/>StorageDead(_304)<br/>StorageDead(_301)<br/>StorageDead(_297)<br/>StorageDead(_295)<br/>StorageDead(_294)<br/>StorageDead(_291)<br/>StorageLive(_322)<br/>StorageLive(_323)<br/>_323 = _290<br/></td></tr><tr><td align="left">switchInt(move _323)</td></tr></table>>];
    bb142__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageLive(_318)<br/>_318 = ((_291 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_320)<br/>_320 = _318<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _320)</td></tr></table>>];
    bb143__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageDead(_320)<br/>StorageDead(_318)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb144__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">StorageDead(_323)<br/>StorageDead(_322)<br/>StorageDead(_290)<br/>StorageDead(_277)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb145__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">_322 = const ()<br/>StorageDead(_323)<br/>StorageDead(_322)<br/>_196 = (((*_1).5: state::state::FeeStructure).3: u64)<br/>StorageDead(_290)<br/>StorageDead(_277)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb146__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">StorageLive(_325)<br/>StorageLive(_326)<br/>StorageLive(_327)<br/>StorageLive(_328)<br/>_328 = _155<br/>StorageLive(_329)<br/>_329 = _196<br/></td></tr><tr><td align="left">_327 = &lt;u64 as SafeMath&gt;::safe_add(move _328, move _329)</td></tr></table>>];
    bb147__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left" balign="left">StorageDead(_329)<br/>StorageDead(_328)<br/></td></tr><tr><td align="left">_326 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _327)</td></tr></table>>];
    bb148__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left" balign="left">StorageDead(_327)<br/>_330 = discriminant(_326)<br/></td></tr><tr><td align="left">switchInt(move _330)</td></tr></table>>];
    bb149__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">149</td></tr><tr><td align="left" balign="left">StorageLive(_334)<br/>_334 = ((_326 as Continue).0: u64)<br/>_325 = _334<br/>StorageDead(_334)<br/>_155 = move _325<br/>StorageDead(_325)<br/>StorageDead(_326)<br/>StorageLive(_335)<br/>StorageLive(_336)<br/>StorageLive(_337)<br/>StorageLive(_338)<br/>_338 = _172<br/>StorageLive(_339)<br/>StorageLive(_340)<br/>StorageLive(_341)<br/>_341 = &amp;mut (*_14)<br/></td></tr><tr><td align="left">_340 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _341)</td></tr></table>>];
    bb150__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">150</td></tr><tr><td align="left" balign="left">StorageLive(_331)<br/>_331 = ((_326 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_333)<br/>_333 = _331<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _333)</td></tr></table>>];
    bb151__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">151</td></tr><tr><td align="left" balign="left">StorageDead(_333)<br/>StorageDead(_331)<br/>StorageDead(_325)<br/>StorageDead(_326)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb152__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">152</td></tr><tr><td align="left" balign="left">_339 = &amp;mut (*_340)<br/>StorageDead(_341)<br/>StorageLive(_342)<br/>StorageLive(_343)<br/>_343 = &amp;_12<br/>_342 = &amp;(*_343)<br/>StorageLive(_344)<br/>_344 = &amp;(*_4)<br/>StorageLive(_345)<br/>_345 = &amp;(*_3)<br/>StorageLive(_346)<br/>_346 = &amp;mut (*_5)<br/>StorageLive(_347)<br/>_347 = _8<br/>StorageLive(_348)<br/>_348 = _9<br/>StorageLive(_349)<br/>_349 = OrderActionExplanation::InsufficientFreeCollateral<br/>StorageLive(_350)<br/>StorageLive(_351)<br/>StorageLive(_352)<br/>_352 = &amp;_10<br/>_351 = &amp;(*_352)<br/>_350 = Option::&lt;&amp;anchor_lang::prelude::Pubkey&gt;::Some(move _351)<br/>StorageDead(_351)<br/>StorageLive(_353)<br/>_353 = _196<br/></td></tr><tr><td align="left">_337 = controller::orders::cancel_order(move _338, move _339, move _342, move _344, move _345, move _346, move _347, move _348, move _349, move _350, move _353, const false)</td></tr></table>>];
    bb153__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">153</td></tr><tr><td align="left" balign="left">StorageDead(_353)<br/>StorageDead(_350)<br/>StorageDead(_349)<br/>StorageDead(_348)<br/>StorageDead(_347)<br/>StorageDead(_346)<br/>StorageDead(_345)<br/>StorageDead(_344)<br/>StorageDead(_342)<br/>StorageDead(_339)<br/>StorageDead(_338)<br/></td></tr><tr><td align="left">_336 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _337)</td></tr></table>>];
    bb154__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">154</td></tr><tr><td align="left" balign="left">StorageDead(_337)<br/>_354 = discriminant(_336)<br/></td></tr><tr><td align="left">switchInt(move _354)</td></tr></table>>];
    bb155__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">155</td></tr><tr><td align="left" balign="left">StorageLive(_358)<br/>_358 = ((_336 as Continue).0: ())<br/>_335 = _358<br/>StorageDead(_358)<br/>StorageDead(_352)<br/>StorageDead(_343)<br/>StorageDead(_340)<br/>StorageDead(_336)<br/>StorageDead(_335)<br/>_166 = const ()<br/>StorageDead(_196)<br/>StorageDead(_190)<br/>StorageDead(_184)<br/>StorageDead(_172)<br/>StorageDead(_169)<br/>StorageDead(_167)<br/>StorageDead(_166)<br/>_165 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb156__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">156</td></tr><tr><td align="left" balign="left">StorageLive(_355)<br/>_355 = ((_336 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_357)<br/>_357 = _355<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _357)</td></tr></table>>];
    bb157__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">157</td></tr><tr><td align="left" balign="left">StorageDead(_357)<br/>StorageDead(_355)<br/>StorageDead(_352)<br/>StorageDead(_343)<br/>StorageDead(_340)<br/>StorageDead(_336)<br/>StorageDead(_335)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb158__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">158</td></tr><tr><td align="left" balign="left">StorageDead(_198)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb159__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">159</td></tr><tr><td align="left" balign="left">StorageDead(_196)<br/>StorageDead(_190)<br/>StorageDead(_184)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb160__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">160</td></tr><tr><td align="left" balign="left">StorageDead(_172)<br/>StorageDead(_169)<br/>StorageDead(_167)<br/>StorageDead(_166)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb161__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">161</td></tr><tr><td align="left" balign="left">_362 = &amp;mut (*_363)<br/>StorageDead(_364)<br/>StorageLive(_365)<br/>StorageLive(_366)<br/>StorageLive(_367)<br/>StorageLive(_368)<br/>_368 = &amp;mut (*_26)<br/></td></tr><tr><td align="left">_367 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _368)</td></tr></table>>];
    bb162__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">162</td></tr><tr><td align="left" balign="left">_366 = &amp;mut (*_367)<br/>StorageDead(_368)<br/>_365 = Option::&lt;&amp;mut User&gt;::Some(move _366)<br/>StorageDead(_366)<br/>StorageLive(_369)<br/>StorageLive(_370)<br/>StorageLive(_371)<br/>StorageLive(_372)<br/>StorageLive(_373)<br/>StorageLive(_374)<br/>StorageLive(_375)<br/>_375 = &amp;(*_3)<br/></td></tr><tr><td align="left">_374 = SpotMarketMap::&lt;'_&gt;::get_quote_spot_market_mut(move _375)</td></tr></table>>];
    bb163__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">163</td></tr><tr><td align="left" balign="left">StorageDead(_375)<br/></td></tr><tr><td align="left">_373 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _374)</td></tr></table>>];
    bb164__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">164</td></tr><tr><td align="left" balign="left">_398 = const true<br/>StorageDead(_374)<br/>_376 = discriminant(_373)<br/></td></tr><tr><td align="left">switchInt(move _376)</td></tr></table>>];
    bb165__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">165</td></tr><tr><td align="left" balign="left">StorageLive(_380)<br/>_380 = move ((_373 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_372 = move _380<br/>StorageDead(_380)<br/>_371 = &amp;mut _372<br/></td></tr><tr><td align="left">_370 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _371)</td></tr></table>>];
    bb166__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">166</td></tr><tr><td align="left" balign="left">StorageLive(_377)<br/>_377 = ((_373 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_379)<br/>_379 = _377<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _379)</td></tr></table>>];
    bb167__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">167</td></tr><tr><td align="left" balign="left">StorageDead(_379)<br/>StorageDead(_377)<br/>StorageDead(_371)<br/>StorageDead(_369)<br/>StorageDead(_365)<br/>StorageDead(_362)<br/>StorageDead(_361)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb168__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">168</td></tr><tr><td align="left" balign="left">_369 = &amp;mut (*_370)<br/>StorageDead(_371)<br/>StorageLive(_381)<br/>_381 = _155<br/>StorageLive(_382)<br/>_382 = _9<br/></td></tr><tr><td align="left">_361 = pay_keeper_flat_reward_for_spot(move _362, move _365, move _369, move _381, move _382)</td></tr></table>>];
    bb169__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">169</td></tr><tr><td align="left" balign="left">StorageDead(_382)<br/>StorageDead(_381)<br/>StorageDead(_369)<br/>StorageDead(_365)<br/>StorageDead(_362)<br/></td></tr><tr><td align="left">_360 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _361)</td></tr></table>>];
    bb170__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">170</td></tr><tr><td align="left" balign="left">StorageDead(_361)<br/>_383 = discriminant(_360)<br/></td></tr><tr><td align="left">switchInt(move _383)</td></tr></table>>];
    bb171__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">171</td></tr><tr><td align="left" balign="left">StorageLive(_387)<br/>_387 = ((_360 as Continue).0: u64)<br/>_359 = _387<br/>StorageDead(_387)<br/></td></tr><tr><td align="left">drop(_372)</td></tr></table>>];
    bb172__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">172</td></tr><tr><td align="left" balign="left">StorageLive(_384)<br/>_384 = ((_360 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_386)<br/>_386 = _384<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _386)</td></tr></table>>];
    bb173__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">173</td></tr><tr><td align="left" balign="left">StorageDead(_386)<br/>StorageDead(_384)<br/></td></tr><tr><td align="left">drop(_372)</td></tr></table>>];
    bb174__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">174</td></tr><tr><td align="left" balign="left">_389 = &amp;mut (*_390)<br/>StorageDead(_391)<br/>StorageLive(_392)<br/>_392 = _9<br/></td></tr><tr><td align="left">_388 = User::update_last_active_slot(move _389, move _392)</td></tr></table>>];
    bb175__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">175</td></tr><tr><td align="left" balign="left">StorageDead(_392)<br/>StorageDead(_389)<br/>StorageDead(_390)<br/>StorageDead(_388)<br/>StorageLive(_393)<br/>_393 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _393)<br/>StorageDead(_393)<br/>StorageDead(_155)<br/>StorageDead(_122)<br/>StorageDead(_106)<br/></td></tr><tr><td align="left">drop(_27)</td></tr></table>>];
    bb176__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">176</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">drop(_15)</td></tr></table>>];
    bb177__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">177</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_12)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb178__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">178</td></tr><tr><td align="left" balign="left">StorageDead(_306)<br/>StorageDead(_304)<br/>StorageDead(_301)<br/>StorageDead(_297)<br/>StorageDead(_295)<br/>StorageDead(_294)<br/>StorageDead(_291)<br/>StorageDead(_290)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb179__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">179</td></tr><tr><td align="left" balign="left">StorageDead(_277)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb180__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">180</td></tr><tr><td align="left" balign="left">StorageDead(_258)<br/>StorageDead(_256)<br/>StorageDead(_253)<br/>StorageDead(_249)<br/>StorageDead(_247)<br/>StorageDead(_246)<br/>StorageDead(_243)<br/>StorageDead(_242)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb181__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">181</td></tr><tr><td align="left" balign="left">StorageDead(_231)<br/>StorageDead(_229)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb182__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">182</td></tr><tr><td align="left" balign="left">StorageDead(_220)<br/>StorageDead(_217)<br/>StorageDead(_216)<br/>StorageDead(_213)<br/>StorageDead(_210)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb183__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">183</td></tr><tr><td align="left" balign="left">StorageDead(_209)<br/></td></tr><tr><td align="left">drop(_198)</td></tr></table>>];
    bb184__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">184</td></tr><tr><td align="left" balign="left">StorageDead(_198)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb185__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">185</td></tr><tr><td align="left" balign="left">StorageDead(_196)<br/>StorageDead(_190)<br/>StorageDead(_184)<br/>StorageDead(_172)<br/>StorageDead(_169)<br/>StorageDead(_167)<br/>StorageDead(_166)<br/>StorageDead(_164)<br/>StorageDead(_162)<br/>StorageDead(_157)<br/>StorageDead(_156)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb186__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">186</td></tr><tr><td align="left" balign="left">StorageDead(_155)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb187__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">187</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb188__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">188</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb189__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">189</td></tr><tr><td align="left">drop(_27)</td></tr></table>>];
    bb190__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">190</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">drop(_15)</td></tr></table>>];
    bb191__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">191</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_12)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb192__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">192</td></tr><tr><td align="left">return</td></tr></table>>];
    bb193__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">193 (cleanup)</td></tr><tr><td align="left">drop(_372)</td></tr></table>>];
    bb194__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">194 (cleanup)</td></tr><tr><td align="left">drop(_198)</td></tr></table>>];
    bb195__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">195 (cleanup)</td></tr><tr><td align="left">drop(_135)</td></tr></table>>];
    bb196__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">196 (cleanup)</td></tr><tr><td align="left">drop(_86)</td></tr></table>>];
    bb197__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">197 (cleanup)</td></tr><tr><td align="left">drop(_52)</td></tr></table>>];
    bb198__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">198 (cleanup)</td></tr><tr><td align="left">drop(_27)</td></tr></table>>];
    bb199__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">199 (cleanup)</td></tr><tr><td align="left">drop(_15)</td></tr></table>>];
    bb200__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">200 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb201__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">201</td></tr><tr><td align="left" balign="left">_411 = discriminant(_373)<br/>_398 = const false<br/>StorageDead(_373)<br/>StorageDead(_372)<br/>StorageDead(_370)<br/>StorageDead(_367)<br/>StorageDead(_363)<br/>StorageDead(_360)<br/>StorageDead(_359)<br/>StorageLive(_388)<br/>StorageLive(_389)<br/>StorageLive(_390)<br/>StorageLive(_391)<br/>_391 = &amp;mut (*_14)<br/></td></tr><tr><td align="left">_390 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _391)</td></tr></table>>];
    bb202__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">202</td></tr><tr><td align="left" balign="left">_413 = discriminant(_373)<br/>_398 = const false<br/>StorageDead(_373)<br/>StorageDead(_372)<br/>StorageDead(_370)<br/>StorageDead(_367)<br/>StorageDead(_363)<br/>StorageDead(_360)<br/>StorageDead(_359)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb203__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">203 (cleanup)</td></tr><tr><td align="left" balign="left">_415 = discriminant(_373)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb204__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">204 (cleanup)</td></tr><tr><td align="left" balign="left">_416 = discriminant(_199)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb205__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">205 (cleanup)</td></tr><tr><td align="left" balign="left">_417 = discriminant(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb206__0_548 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">206 (cleanup)</td></tr><tr><td align="left" balign="left">_418 = discriminant(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_548 -> bb1__0_548 [label="return"];
    bb1__0_548 -> bb2__0_548 [label="return"];
    bb2__0_548 -> bb3__0_548 [label="return"];
    bb3__0_548 -> bb4__0_548 [label="return"];
    bb3__0_548 -> bb200__0_548 [label="unwind"];
    bb4__0_548 -> bb5__0_548 [label="return"];
    bb4__0_548 -> bb200__0_548 [label="unwind"];
    bb5__0_548 -> bb6__0_548 [label="0"];
    bb5__0_548 -> bb8__0_548 [label="1"];
    bb5__0_548 -> bb7__0_548 [label="otherwise"];
    bb6__0_548 -> bb10__0_548 [label="return"];
    bb6__0_548 -> bb199__0_548 [label="unwind"];
    bb8__0_548 -> bb9__0_548 [label="return"];
    bb8__0_548 -> bb206__0_548 [label="unwind"];
    bb9__0_548 -> bb191__0_548 [label=""];
    bb10__0_548 -> bb11__0_548 [label="return"];
    bb10__0_548 -> bb199__0_548 [label="unwind"];
    bb11__0_548 -> bb12__0_548 [label="return"];
    bb11__0_548 -> bb199__0_548 [label="unwind"];
    bb12__0_548 -> bb13__0_548 [label="0"];
    bb12__0_548 -> bb14__0_548 [label="1"];
    bb12__0_548 -> bb7__0_548 [label="otherwise"];
    bb13__0_548 -> bb16__0_548 [label="return"];
    bb13__0_548 -> bb198__0_548 [label="unwind"];
    bb14__0_548 -> bb15__0_548 [label="return"];
    bb14__0_548 -> bb205__0_548 [label="unwind"];
    bb15__0_548 -> bb190__0_548 [label=""];
    bb16__0_548 -> bb17__0_548 [label="return"];
    bb16__0_548 -> bb198__0_548 [label="unwind"];
    bb17__0_548 -> bb19__0_548 [label="0"];
    bb17__0_548 -> bb18__0_548 [label="otherwise"];
    bb18__0_548 -> bb20__0_548 [label="return"];
    bb18__0_548 -> bb198__0_548 [label="unwind"];
    bb19__0_548 -> bb26__0_548 [label=""];
    bb20__0_548 -> bb21__0_548 [label="return"];
    bb20__0_548 -> bb198__0_548 [label="unwind"];
    bb21__0_548 -> bb22__0_548 [label="return"];
    bb21__0_548 -> bb198__0_548 [label="unwind"];
    bb22__0_548 -> bb23__0_548 [label="return"];
    bb22__0_548 -> bb197__0_548 [label="unwind"];
    bb23__0_548 -> bb24__0_548 [label="return"];
    bb23__0_548 -> bb197__0_548 [label="unwind"];
    bb24__0_548 -> bb25__0_548 [label="return"];
    bb24__0_548 -> bb198__0_548 [label="unwind"];
    bb25__0_548 -> bb26__0_548 [label=""];
    bb26__0_548 -> bb27__0_548 [label="return"];
    bb26__0_548 -> bb198__0_548 [label="unwind"];
    bb27__0_548 -> bb28__0_548 [label="0"];
    bb27__0_548 -> bb29__0_548 [label="1"];
    bb27__0_548 -> bb7__0_548 [label="otherwise"];
    bb28__0_548 -> bb31__0_548 [label="return"];
    bb28__0_548 -> bb198__0_548 [label="unwind"];
    bb29__0_548 -> bb30__0_548 [label="return"];
    bb29__0_548 -> bb198__0_548 [label="unwind"];
    bb30__0_548 -> bb189__0_548 [label=""];
    bb31__0_548 -> bb32__0_548 [label="return"];
    bb31__0_548 -> bb198__0_548 [label="unwind"];
    bb32__0_548 -> bb34__0_548 [label="0"];
    bb32__0_548 -> bb33__0_548 [label="otherwise"];
    bb33__0_548 -> bb35__0_548 [label="return"];
    bb33__0_548 -> bb198__0_548 [label="unwind"];
    bb34__0_548 -> bb41__0_548 [label=""];
    bb35__0_548 -> bb36__0_548 [label="return"];
    bb35__0_548 -> bb198__0_548 [label="unwind"];
    bb36__0_548 -> bb37__0_548 [label="return"];
    bb36__0_548 -> bb198__0_548 [label="unwind"];
    bb37__0_548 -> bb38__0_548 [label="return"];
    bb37__0_548 -> bb196__0_548 [label="unwind"];
    bb38__0_548 -> bb39__0_548 [label="return"];
    bb38__0_548 -> bb196__0_548 [label="unwind"];
    bb39__0_548 -> bb40__0_548 [label="return"];
    bb39__0_548 -> bb198__0_548 [label="unwind"];
    bb40__0_548 -> bb41__0_548 [label=""];
    bb41__0_548 -> bb42__0_548 [label="return"];
    bb41__0_548 -> bb198__0_548 [label="unwind"];
    bb42__0_548 -> bb43__0_548 [label="0"];
    bb42__0_548 -> bb44__0_548 [label="1"];
    bb42__0_548 -> bb7__0_548 [label="otherwise"];
    bb43__0_548 -> bb46__0_548 [label="return"];
    bb43__0_548 -> bb198__0_548 [label="unwind"];
    bb44__0_548 -> bb45__0_548 [label="return"];
    bb44__0_548 -> bb198__0_548 [label="unwind"];
    bb45__0_548 -> bb189__0_548 [label=""];
    bb46__0_548 -> bb47__0_548 [label="return"];
    bb46__0_548 -> bb198__0_548 [label="unwind"];
    bb47__0_548 -> bb48__0_548 [label="return"];
    bb47__0_548 -> bb198__0_548 [label="unwind"];
    bb48__0_548 -> bb49__0_548 [label="return"];
    bb48__0_548 -> bb198__0_548 [label="unwind"];
    bb49__0_548 -> bb50__0_548 [label="0"];
    bb49__0_548 -> bb51__0_548 [label="1"];
    bb49__0_548 -> bb7__0_548 [label="otherwise"];
    bb50__0_548 -> bb53__0_548 [label="return"];
    bb50__0_548 -> bb198__0_548 [label="unwind"];
    bb51__0_548 -> bb52__0_548 [label="return"];
    bb51__0_548 -> bb198__0_548 [label="unwind"];
    bb52__0_548 -> bb188__0_548 [label=""];
    bb53__0_548 -> bb54__0_548 [label="0"];
    bb53__0_548 -> bb55__0_548 [label="otherwise"];
    bb54__0_548 -> bb62__0_548 [label=""];
    bb55__0_548 -> bb56__0_548 [label="return"];
    bb55__0_548 -> bb198__0_548 [label="unwind"];
    bb56__0_548 -> bb57__0_548 [label="return"];
    bb56__0_548 -> bb198__0_548 [label="unwind"];
    bb57__0_548 -> bb58__0_548 [label="return"];
    bb57__0_548 -> bb198__0_548 [label="unwind"];
    bb58__0_548 -> bb59__0_548 [label="return"];
    bb58__0_548 -> bb195__0_548 [label="unwind"];
    bb59__0_548 -> bb60__0_548 [label="return"];
    bb59__0_548 -> bb195__0_548 [label="unwind"];
    bb60__0_548 -> bb61__0_548 [label="return"];
    bb60__0_548 -> bb198__0_548 [label="unwind"];
    bb61__0_548 -> bb62__0_548 [label=""];
    bb62__0_548 -> bb63__0_548 [label="return"];
    bb62__0_548 -> bb198__0_548 [label="unwind"];
    bb63__0_548 -> bb64__0_548 [label="0"];
    bb63__0_548 -> bb65__0_548 [label="1"];
    bb63__0_548 -> bb7__0_548 [label="otherwise"];
    bb64__0_548 -> bb67__0_548 [label="return"];
    bb64__0_548 -> bb198__0_548 [label="unwind"];
    bb65__0_548 -> bb66__0_548 [label="return"];
    bb65__0_548 -> bb198__0_548 [label="unwind"];
    bb66__0_548 -> bb187__0_548 [label=""];
    bb67__0_548 -> bb68__0_548 [label="return"];
    bb67__0_548 -> bb198__0_548 [label="unwind"];
    bb68__0_548 -> bb69__0_548 [label="return"];
    bb68__0_548 -> bb198__0_548 [label="unwind"];
    bb69__0_548 -> bb70__0_548 [label=""];
    bb70__0_548 -> bb71__0_548 [label="return"];
    bb70__0_548 -> bb198__0_548 [label="unwind"];
    bb71__0_548 -> bb73__0_548 [label="0"];
    bb71__0_548 -> bb72__0_548 [label="1"];
    bb71__0_548 -> bb7__0_548 [label="otherwise"];
    bb72__0_548 -> bb74__0_548 [label="return"];
    bb72__0_548 -> bb198__0_548 [label="unwind"];
    bb73__0_548 -> bb161__0_548 [label="return"];
    bb73__0_548 -> bb198__0_548 [label="unwind"];
    bb74__0_548 -> bb75__0_548 [label="success"];
    bb74__0_548 -> bb198__0_548 [label="unwind"];
    bb75__0_548 -> bb76__0_548 [label="return"];
    bb75__0_548 -> bb198__0_548 [label="unwind"];
    bb76__0_548 -> bb78__0_548 [label="0"];
    bb76__0_548 -> bb77__0_548 [label="otherwise"];
    bb77__0_548 -> bb160__0_548 [label=""];
    bb78__0_548 -> bb79__0_548 [label="return"];
    bb78__0_548 -> bb198__0_548 [label="unwind"];
    bb79__0_548 -> bb80__0_548 [label="success"];
    bb79__0_548 -> bb198__0_548 [label="unwind"];
    bb80__0_548 -> bb81__0_548 [label="return"];
    bb80__0_548 -> bb198__0_548 [label="unwind"];
    bb81__0_548 -> bb82__0_548 [label="success"];
    bb81__0_548 -> bb198__0_548 [label="unwind"];
    bb82__0_548 -> bb84__0_548 [label="0"];
    bb82__0_548 -> bb83__0_548 [label="1"];
    bb82__0_548 -> bb7__0_548 [label="otherwise"];
    bb83__0_548 -> bb124__0_548 [label="return"];
    bb83__0_548 -> bb198__0_548 [label="unwind"];
    bb84__0_548 -> bb85__0_548 [label="return"];
    bb84__0_548 -> bb198__0_548 [label="unwind"];
    bb85__0_548 -> bb86__0_548 [label="return"];
    bb85__0_548 -> bb198__0_548 [label="unwind"];
    bb86__0_548 -> bb87__0_548 [label="0"];
    bb86__0_548 -> bb88__0_548 [label="1"];
    bb86__0_548 -> bb7__0_548 [label="otherwise"];
    bb87__0_548 -> bb90__0_548 [label="return"];
    bb87__0_548 -> bb194__0_548 [label="unwind"];
    bb88__0_548 -> bb89__0_548 [label="return"];
    bb88__0_548 -> bb204__0_548 [label="unwind"];
    bb89__0_548 -> bb184__0_548 [label=""];
    bb90__0_548 -> bb91__0_548 [label="return"];
    bb90__0_548 -> bb194__0_548 [label="unwind"];
    bb91__0_548 -> bb92__0_548 [label="return"];
    bb91__0_548 -> bb194__0_548 [label="unwind"];
    bb92__0_548 -> bb93__0_548 [label="0"];
    bb92__0_548 -> bb94__0_548 [label="1"];
    bb92__0_548 -> bb7__0_548 [label="otherwise"];
    bb93__0_548 -> bb96__0_548 [label="return"];
    bb93__0_548 -> bb194__0_548 [label="unwind"];
    bb94__0_548 -> bb95__0_548 [label="return"];
    bb94__0_548 -> bb194__0_548 [label="unwind"];
    bb95__0_548 -> bb182__0_548 [label=""];
    bb96__0_548 -> bb97__0_548 [label="return"];
    bb96__0_548 -> bb194__0_548 [label="unwind"];
    bb97__0_548 -> bb98__0_548 [label="return"];
    bb97__0_548 -> bb194__0_548 [label="unwind"];
    bb98__0_548 -> bb99__0_548 [label="0"];
    bb98__0_548 -> bb100__0_548 [label="1"];
    bb98__0_548 -> bb7__0_548 [label="otherwise"];
    bb99__0_548 -> bb102__0_548 [label="return"];
    bb99__0_548 -> bb194__0_548 [label="unwind"];
    bb100__0_548 -> bb101__0_548 [label="return"];
    bb100__0_548 -> bb194__0_548 [label="unwind"];
    bb101__0_548 -> bb181__0_548 [label=""];
    bb102__0_548 -> bb103__0_548 [label="return"];
    bb102__0_548 -> bb194__0_548 [label="unwind"];
    bb103__0_548 -> bb104__0_548 [label="0"];
    bb103__0_548 -> bb105__0_548 [label="1"];
    bb103__0_548 -> bb7__0_548 [label="otherwise"];
    bb104__0_548 -> bb107__0_548 [label="return"];
    bb104__0_548 -> bb194__0_548 [label="unwind"];
    bb105__0_548 -> bb106__0_548 [label="return"];
    bb105__0_548 -> bb194__0_548 [label="unwind"];
    bb106__0_548 -> bb181__0_548 [label=""];
    bb107__0_548 -> bb108__0_548 [label="success"];
    bb107__0_548 -> bb194__0_548 [label="unwind"];
    bb108__0_548 -> bb109__0_548 [label="return"];
    bb108__0_548 -> bb194__0_548 [label="unwind"];
    bb109__0_548 -> bb110__0_548 [label="success"];
    bb109__0_548 -> bb194__0_548 [label="unwind"];
    bb110__0_548 -> bb111__0_548 [label="return"];
    bb110__0_548 -> bb194__0_548 [label="unwind"];
    bb111__0_548 -> bb112__0_548 [label="return"];
    bb111__0_548 -> bb194__0_548 [label="unwind"];
    bb112__0_548 -> bb113__0_548 [label="0"];
    bb112__0_548 -> bb114__0_548 [label="1"];
    bb112__0_548 -> bb7__0_548 [label="otherwise"];
    bb113__0_548 -> bb116__0_548 [label="return"];
    bb113__0_548 -> bb194__0_548 [label="unwind"];
    bb114__0_548 -> bb115__0_548 [label="return"];
    bb114__0_548 -> bb194__0_548 [label="unwind"];
    bb115__0_548 -> bb180__0_548 [label=""];
    bb116__0_548 -> bb117__0_548 [label="return"];
    bb116__0_548 -> bb194__0_548 [label="unwind"];
    bb117__0_548 -> bb118__0_548 [label="0"];
    bb117__0_548 -> bb119__0_548 [label="1"];
    bb117__0_548 -> bb7__0_548 [label="otherwise"];
    bb118__0_548 -> bb122__0_548 [label="0"];
    bb118__0_548 -> bb121__0_548 [label="otherwise"];
    bb119__0_548 -> bb120__0_548 [label="return"];
    bb119__0_548 -> bb194__0_548 [label="unwind"];
    bb120__0_548 -> bb180__0_548 [label=""];
    bb121__0_548 -> bb158__0_548 [label="return"];
    bb121__0_548 -> bb198__0_548 [label="unwind"];
    bb122__0_548 -> bb123__0_548 [label="return"];
    bb122__0_548 -> bb198__0_548 [label="unwind"];
    bb123__0_548 -> bb146__0_548 [label=""];
    bb124__0_548 -> bb125__0_548 [label="return"];
    bb124__0_548 -> bb198__0_548 [label="unwind"];
    bb125__0_548 -> bb126__0_548 [label="return"];
    bb125__0_548 -> bb198__0_548 [label="unwind"];
    bb126__0_548 -> bb127__0_548 [label="0"];
    bb126__0_548 -> bb128__0_548 [label="1"];
    bb126__0_548 -> bb7__0_548 [label="otherwise"];
    bb127__0_548 -> bb130__0_548 [label="return"];
    bb127__0_548 -> bb198__0_548 [label="unwind"];
    bb128__0_548 -> bb129__0_548 [label="return"];
    bb128__0_548 -> bb198__0_548 [label="unwind"];
    bb129__0_548 -> bb179__0_548 [label=""];
    bb130__0_548 -> bb131__0_548 [label="success"];
    bb130__0_548 -> bb198__0_548 [label="unwind"];
    bb131__0_548 -> bb132__0_548 [label="return"];
    bb131__0_548 -> bb198__0_548 [label="unwind"];
    bb132__0_548 -> bb133__0_548 [label="success"];
    bb132__0_548 -> bb198__0_548 [label="unwind"];
    bb133__0_548 -> bb134__0_548 [label="return"];
    bb133__0_548 -> bb198__0_548 [label="unwind"];
    bb134__0_548 -> bb135__0_548 [label="return"];
    bb134__0_548 -> bb198__0_548 [label="unwind"];
    bb135__0_548 -> bb136__0_548 [label="0"];
    bb135__0_548 -> bb137__0_548 [label="1"];
    bb135__0_548 -> bb7__0_548 [label="otherwise"];
    bb136__0_548 -> bb139__0_548 [label="return"];
    bb136__0_548 -> bb198__0_548 [label="unwind"];
    bb137__0_548 -> bb138__0_548 [label="return"];
    bb137__0_548 -> bb198__0_548 [label="unwind"];
    bb138__0_548 -> bb178__0_548 [label=""];
    bb139__0_548 -> bb140__0_548 [label="return"];
    bb139__0_548 -> bb198__0_548 [label="unwind"];
    bb140__0_548 -> bb141__0_548 [label="0"];
    bb140__0_548 -> bb142__0_548 [label="1"];
    bb140__0_548 -> bb7__0_548 [label="otherwise"];
    bb141__0_548 -> bb145__0_548 [label="0"];
    bb141__0_548 -> bb144__0_548 [label="otherwise"];
    bb142__0_548 -> bb143__0_548 [label="return"];
    bb142__0_548 -> bb198__0_548 [label="unwind"];
    bb143__0_548 -> bb178__0_548 [label=""];
    bb144__0_548 -> bb159__0_548 [label=""];
    bb145__0_548 -> bb146__0_548 [label=""];
    bb146__0_548 -> bb147__0_548 [label="return"];
    bb146__0_548 -> bb198__0_548 [label="unwind"];
    bb147__0_548 -> bb148__0_548 [label="return"];
    bb147__0_548 -> bb198__0_548 [label="unwind"];
    bb148__0_548 -> bb149__0_548 [label="0"];
    bb148__0_548 -> bb150__0_548 [label="1"];
    bb148__0_548 -> bb7__0_548 [label="otherwise"];
    bb149__0_548 -> bb152__0_548 [label="return"];
    bb149__0_548 -> bb198__0_548 [label="unwind"];
    bb150__0_548 -> bb151__0_548 [label="return"];
    bb150__0_548 -> bb198__0_548 [label="unwind"];
    bb151__0_548 -> bb185__0_548 [label=""];
    bb152__0_548 -> bb153__0_548 [label="return"];
    bb152__0_548 -> bb198__0_548 [label="unwind"];
    bb153__0_548 -> bb154__0_548 [label="return"];
    bb153__0_548 -> bb198__0_548 [label="unwind"];
    bb154__0_548 -> bb155__0_548 [label="0"];
    bb154__0_548 -> bb156__0_548 [label="1"];
    bb154__0_548 -> bb7__0_548 [label="otherwise"];
    bb155__0_548 -> bb70__0_548 [label=""];
    bb156__0_548 -> bb157__0_548 [label="return"];
    bb156__0_548 -> bb198__0_548 [label="unwind"];
    bb157__0_548 -> bb185__0_548 [label=""];
    bb158__0_548 -> bb159__0_548 [label=""];
    bb159__0_548 -> bb160__0_548 [label=""];
    bb160__0_548 -> bb70__0_548 [label=""];
    bb161__0_548 -> bb162__0_548 [label="return"];
    bb161__0_548 -> bb198__0_548 [label="unwind"];
    bb162__0_548 -> bb163__0_548 [label="return"];
    bb162__0_548 -> bb198__0_548 [label="unwind"];
    bb163__0_548 -> bb164__0_548 [label="return"];
    bb163__0_548 -> bb198__0_548 [label="unwind"];
    bb164__0_548 -> bb165__0_548 [label="0"];
    bb164__0_548 -> bb166__0_548 [label="1"];
    bb164__0_548 -> bb7__0_548 [label="otherwise"];
    bb165__0_548 -> bb168__0_548 [label="return"];
    bb165__0_548 -> bb193__0_548 [label="unwind"];
    bb166__0_548 -> bb167__0_548 [label="return"];
    bb166__0_548 -> bb203__0_548 [label="unwind"];
    bb167__0_548 -> bb202__0_548 [label=""];
    bb168__0_548 -> bb169__0_548 [label="return"];
    bb168__0_548 -> bb193__0_548 [label="unwind"];
    bb169__0_548 -> bb170__0_548 [label="return"];
    bb169__0_548 -> bb193__0_548 [label="unwind"];
    bb170__0_548 -> bb171__0_548 [label="0"];
    bb170__0_548 -> bb172__0_548 [label="1"];
    bb170__0_548 -> bb7__0_548 [label="otherwise"];
    bb171__0_548 -> bb201__0_548 [label="return"];
    bb171__0_548 -> bb203__0_548 [label="unwind"];
    bb172__0_548 -> bb173__0_548 [label="return"];
    bb172__0_548 -> bb193__0_548 [label="unwind"];
    bb173__0_548 -> bb202__0_548 [label="return"];
    bb173__0_548 -> bb203__0_548 [label="unwind"];
    bb174__0_548 -> bb175__0_548 [label="return"];
    bb174__0_548 -> bb198__0_548 [label="unwind"];
    bb175__0_548 -> bb176__0_548 [label="return"];
    bb175__0_548 -> bb199__0_548 [label="unwind"];
    bb176__0_548 -> bb177__0_548 [label="return"];
    bb176__0_548 -> bb200__0_548 [label="unwind"];
    bb177__0_548 -> bb192__0_548 [label=""];
    bb178__0_548 -> bb179__0_548 [label=""];
    bb179__0_548 -> bb185__0_548 [label=""];
    bb180__0_548 -> bb183__0_548 [label=""];
    bb181__0_548 -> bb182__0_548 [label=""];
    bb182__0_548 -> bb183__0_548 [label=""];
    bb183__0_548 -> bb184__0_548 [label="return"];
    bb183__0_548 -> bb198__0_548 [label="unwind"];
    bb184__0_548 -> bb185__0_548 [label=""];
    bb185__0_548 -> bb186__0_548 [label=""];
    bb186__0_548 -> bb187__0_548 [label=""];
    bb187__0_548 -> bb188__0_548 [label=""];
    bb188__0_548 -> bb189__0_548 [label=""];
    bb189__0_548 -> bb190__0_548 [label="return"];
    bb189__0_548 -> bb199__0_548 [label="unwind"];
    bb190__0_548 -> bb191__0_548 [label="return"];
    bb190__0_548 -> bb200__0_548 [label="unwind"];
    bb191__0_548 -> bb192__0_548 [label=""];
    bb193__0_548 -> bb203__0_548 [label="return"];
    bb194__0_548 -> bb198__0_548 [label="return"];
    bb195__0_548 -> bb198__0_548 [label="return"];
    bb196__0_548 -> bb198__0_548 [label="return"];
    bb197__0_548 -> bb198__0_548 [label="return"];
    bb198__0_548 -> bb199__0_548 [label="return"];
    bb199__0_548 -> bb200__0_548 [label="return"];
    bb201__0_548 -> bb174__0_548 [label="return"];
    bb201__0_548 -> bb198__0_548 [label="unwind"];
    bb202__0_548 -> bb186__0_548 [label=""];
    bb203__0_548 -> bb198__0_548 [label=""];
    bb204__0_548 -> bb198__0_548 [label=""];
    bb205__0_548 -> bb199__0_548 [label=""];
    bb206__0_548 -> bb200__0_548 [label=""];
}
