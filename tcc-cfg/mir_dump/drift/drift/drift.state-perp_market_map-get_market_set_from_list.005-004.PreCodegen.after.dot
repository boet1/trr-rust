digraph Mir_0_3884 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn get_market_set_from_list(_1: std::vec::Vec&lt;u16, std::alloc::Global&gt;) -&gt; std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;<br align="left"/>let mut _2: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _3: ();<br align="left"/>let mut _4: std::slice::Iter&lt;ReErased, u16&gt;;<br align="left"/>let mut _5: std::slice::Iter&lt;ReErased, u16&gt;;<br align="left"/>let mut _6: &amp;ReErased [u16];<br align="left"/>let _7: &amp;ReErased [u16];<br align="left"/>let mut _8: &amp;ReErased std::vec::Vec&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _9: std::slice::Iter&lt;ReErased, u16&gt;;<br align="left"/>let mut _10: ();<br align="left"/>let _11: ();<br align="left"/>let mut _12: std::option::Option&lt;&amp;ReErased u16&gt;;<br align="left"/>let mut _13: &amp;ReErased mut std::slice::Iter&lt;ReErased, u16&gt;;<br align="left"/>let mut _14: &amp;ReErased mut std::slice::Iter&lt;ReErased, u16&gt;;<br align="left"/>let mut _15: isize;<br align="left"/>let mut _16: !;<br align="left"/>let _17: &amp;ReErased u16;<br align="left"/>let _18: bool;<br align="left"/>let mut _19: &amp;ReErased mut std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _20: u16;<br align="left"/>debug market_indexes =&gt; _1;<br align="left"/>debug writable_markets =&gt; _2;<br align="left"/>debug iter =&gt; _9;<br align="left"/>debug market_index =&gt; _17;<br align="left"/>>;
    bb0__0_3884 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/></td></tr><tr><td align="left">_2 = BTreeSet::&lt;u16&gt;::new()</td></tr></table>>];
    bb1__0_3884 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = &amp;_1<br/></td></tr><tr><td align="left">_7 = &lt;Vec&lt;u16&gt; as Deref&gt;::deref(move _8)</td></tr></table>>];
    bb2__0_3884 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">_6 = &amp;(*_7)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">_5 = core::slice::&lt;impl [u16]&gt;::iter(move _6)</td></tr></table>>];
    bb3__0_3884 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::slice::Iter&lt;'_, u16&gt; as IntoIterator&gt;::into_iter(move _5)</td></tr></table>>];
    bb4__0_3884 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageLive(_9)<br/>_9 = move _4<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb5__0_3884 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_14 = &amp;mut _9<br/>_13 = &amp;mut (*_14)<br/></td></tr><tr><td align="left">_12 = &lt;std::slice::Iter&lt;'_, u16&gt; as Iterator&gt;::next(move _13)</td></tr></table>>];
    bb6__0_3884 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>_15 = discriminant(_12)<br/></td></tr><tr><td align="left">switchInt(move _15)</td></tr></table>>];
    bb7__0_3884 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>_17 = ((_12 as Some).0: &amp;u16)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_19 = &amp;mut _2<br/>StorageLive(_20)<br/>_20 = (*_17)<br/></td></tr><tr><td align="left">_18 = BTreeSet::&lt;u16&gt;::insert(move _19, move _20)</td></tr></table>>];
    bb8__0_3884 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb9__0_3884 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">_3 = const ()<br/>StorageDead(_14)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_9)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>_0 = move _2<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">drop(_1)</td></tr></table>>];
    bb10__0_3884 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/>_11 = const ()<br/>StorageDead(_17)<br/>StorageDead(_14)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>_10 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb11__0_3884 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left">return</td></tr></table>>];
    bb12__0_3884 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">12 (cleanup)</td></tr><tr><td align="left">drop(_2)</td></tr></table>>];
    bb13__0_3884 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">13 (cleanup)</td></tr><tr><td align="left">drop(_1)</td></tr></table>>];
    bb14__0_3884 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">14 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_3884 -> bb1__0_3884 [label="return"];
    bb0__0_3884 -> bb13__0_3884 [label="unwind"];
    bb1__0_3884 -> bb2__0_3884 [label="return"];
    bb1__0_3884 -> bb12__0_3884 [label="unwind"];
    bb2__0_3884 -> bb3__0_3884 [label="return"];
    bb2__0_3884 -> bb12__0_3884 [label="unwind"];
    bb3__0_3884 -> bb4__0_3884 [label="return"];
    bb3__0_3884 -> bb12__0_3884 [label="unwind"];
    bb4__0_3884 -> bb5__0_3884 [label=""];
    bb5__0_3884 -> bb6__0_3884 [label="return"];
    bb5__0_3884 -> bb12__0_3884 [label="unwind"];
    bb6__0_3884 -> bb9__0_3884 [label="0"];
    bb6__0_3884 -> bb7__0_3884 [label="1"];
    bb6__0_3884 -> bb8__0_3884 [label="otherwise"];
    bb7__0_3884 -> bb10__0_3884 [label="return"];
    bb7__0_3884 -> bb12__0_3884 [label="unwind"];
    bb9__0_3884 -> bb11__0_3884 [label="return"];
    bb9__0_3884 -> bb14__0_3884 [label="unwind"];
    bb10__0_3884 -> bb5__0_3884 [label=""];
    bb12__0_3884 -> bb13__0_3884 [label="return"];
    bb13__0_3884 -> bb14__0_3884 [label="return"];
}
