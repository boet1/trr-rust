digraph Mir_0_2261 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_spot_fuel_bonus(_1: &amp;ReErased state::spot_market::SpotMarket, _2: i128, _3: i64) -&gt; std::result::Result&lt;u64, error::ErrorCode&gt;<br align="left"/>let _4: u64;<br align="left"/>let mut _5: bool;<br align="left"/>let mut _6: u128;<br align="left"/>let mut _7: i128;<br align="left"/>let mut _8: bool;<br align="left"/>let mut _9: i128;<br align="left"/>let mut _10: u64;<br align="left"/>let mut _11: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _12: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _13: u128;<br align="left"/>let mut _14: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _15: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _16: u128;<br align="left"/>let mut _17: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _18: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _19: u128;<br align="left"/>let mut _20: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _21: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _22: u128;<br align="left"/>let mut _23: i128;<br align="left"/>let mut _24: u128;<br align="left"/>let mut _25: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _26: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _27: i64;<br align="left"/>let mut _28: isize;<br align="left"/>let _29: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _30: !;<br align="left"/>let mut _31: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _32: u128;<br align="left"/>let mut _33: isize;<br align="left"/>let _34: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _35: !;<br align="left"/>let mut _36: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _37: u128;<br align="left"/>let mut _38: u128;<br align="left"/>let mut _39: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _40: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _41: u8;<br align="left"/>let mut _42: isize;<br align="left"/>let _43: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _44: !;<br align="left"/>let mut _45: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _46: u128;<br align="left"/>let mut _47: isize;<br align="left"/>let _48: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _49: !;<br align="left"/>let mut _50: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _51: u128;<br align="left"/>let mut _52: isize;<br align="left"/>let _53: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _54: !;<br align="left"/>let mut _55: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _56: u128;<br align="left"/>let mut _57: isize;<br align="left"/>let _58: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _59: !;<br align="left"/>let mut _60: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _61: u64;<br align="left"/>let mut _62: u64;<br align="left"/>let mut _63: bool;<br align="left"/>let mut _64: bool;<br align="left"/>let mut _65: u64;<br align="left"/>let mut _66: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _67: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _68: u128;<br align="left"/>let mut _69: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _70: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _71: u128;<br align="left"/>let mut _72: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _73: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _74: u128;<br align="left"/>let mut _75: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _76: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _77: u128;<br align="left"/>let mut _78: i128;<br align="left"/>let mut _79: u128;<br align="left"/>let mut _80: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _81: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _82: i64;<br align="left"/>let mut _83: isize;<br align="left"/>let _84: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _85: !;<br align="left"/>let mut _86: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _87: u128;<br align="left"/>let mut _88: isize;<br align="left"/>let _89: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _90: !;<br align="left"/>let mut _91: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _92: u128;<br align="left"/>let mut _93: u128;<br align="left"/>let mut _94: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _95: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _96: u8;<br align="left"/>let mut _97: isize;<br align="left"/>let _98: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _99: !;<br align="left"/>let mut _100: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _101: u128;<br align="left"/>let mut _102: isize;<br align="left"/>let _103: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _104: !;<br align="left"/>let mut _105: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _106: u128;<br align="left"/>let mut _107: isize;<br align="left"/>let _108: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _109: !;<br align="left"/>let mut _110: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _111: u128;<br align="left"/>let mut _112: isize;<br align="left"/>let _113: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _114: !;<br align="left"/>let mut _115: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _116: u64;<br align="left"/>let mut _117: u64;<br align="left"/>let mut _118: bool;<br align="left"/>let mut _119: bool;<br align="left"/>let mut _120: u64;<br align="left"/>debug spot_market =&gt; _1;<br align="left"/>debug signed_token_value =&gt; _2;<br align="left"/>debug fuel_bonus_numerator =&gt; _3;<br align="left"/>debug result =&gt; _4;<br align="left"/>debug residual =&gt; _29;<br align="left"/>debug val =&gt; _32;<br align="left"/>debug residual =&gt; _34;<br align="left"/>debug val =&gt; _37;<br align="left"/>debug residual =&gt; _43;<br align="left"/>debug val =&gt; _46;<br align="left"/>debug residual =&gt; _48;<br align="left"/>debug val =&gt; _51;<br align="left"/>debug residual =&gt; _53;<br align="left"/>debug val =&gt; _56;<br align="left"/>debug residual =&gt; _58;<br align="left"/>debug val =&gt; _61;<br align="left"/>debug residual =&gt; _84;<br align="left"/>debug val =&gt; _87;<br align="left"/>debug residual =&gt; _89;<br align="left"/>debug val =&gt; _92;<br align="left"/>debug residual =&gt; _98;<br align="left"/>debug val =&gt; _101;<br align="left"/>debug residual =&gt; _103;<br align="left"/>debug val =&gt; _106;<br align="left"/>debug residual =&gt; _108;<br align="left"/>debug val =&gt; _111;<br align="left"/>debug residual =&gt; _113;<br align="left"/>debug val =&gt; _116;<br align="left"/>>;
    bb0__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = _2<br/></td></tr><tr><td align="left">_6 = core::num::&lt;impl i128&gt;::unsigned_abs(move _7)</td></tr></table>>];
    bb1__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>_5 = Lt(move _6, const _)<br/></td></tr><tr><td align="left">switchInt(move _5)</td></tr></table>>];
    bb2__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_4 = const 0_u64<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb3__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = _2<br/>_8 = Gt(move _9, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb4__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>_23 = _2<br/></td></tr><tr><td align="left">_22 = core::num::&lt;impl i128&gt;::unsigned_abs(move _23)</td></tr></table>>];
    bb5__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_27 = _3<br/></td></tr><tr><td align="left">_26 = &lt;i64 as Cast&gt;::cast::&lt;u128&gt;(move _27)</td></tr></table>>];
    bb6__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/></td></tr><tr><td align="left">_25 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _26)</td></tr></table>>];
    bb7__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>_28 = discriminant(_25)<br/></td></tr><tr><td align="left">switchInt(move _28)</td></tr></table>>];
    bb8__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_32)<br/>_32 = ((_25 as Continue).0: u128)<br/>_24 = _32<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">_21 = &lt;u128 as SafeMath&gt;::safe_mul(move _22, move _24)</td></tr></table>>];
    bb9__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb10__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_29)<br/>_29 = ((_25 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_31)<br/>_31 = _29<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _31)</td></tr></table>>];
    bb11__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_29)<br/>StorageDead(_24)<br/>StorageDead(_22)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">_20 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _21)</td></tr></table>>];
    bb13__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>_33 = discriminant(_20)<br/></td></tr><tr><td align="left">switchInt(move _33)</td></tr></table>>];
    bb14__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_37)<br/>_37 = ((_20 as Continue).0: u128)<br/>_19 = _37<br/>StorageDead(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>_41 = ((*_1).56: u8)<br/></td></tr><tr><td align="left">_40 = &lt;u8 as Cast&gt;::cast::&lt;u128&gt;(move _41)</td></tr></table>>];
    bb15__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_34)<br/>_34 = ((_20 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_36)<br/>_36 = _34<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _36)</td></tr></table>>];
    bb16__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/></td></tr><tr><td align="left">_39 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _40)</td></tr></table>>];
    bb18__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>_42 = discriminant(_39)<br/></td></tr><tr><td align="left">switchInt(move _42)</td></tr></table>>];
    bb19__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_46)<br/>_46 = ((_39 as Continue).0: u128)<br/>_38 = _46<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">_18 = &lt;u128 as SafeMath&gt;::safe_mul(move _19, move _38)</td></tr></table>>];
    bb20__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_43)<br/>_43 = ((_39 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_45)<br/>_45 = _43<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _45)</td></tr></table>>];
    bb21__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_43)<br/>StorageDead(_38)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">_17 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _18)</td></tr></table>>];
    bb23__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>_47 = discriminant(_17)<br/></td></tr><tr><td align="left">switchInt(move _47)</td></tr></table>>];
    bb24__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_51)<br/>_51 = ((_17 as Continue).0: u128)<br/>_16 = _51<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">_15 = &lt;u128 as SafeMath&gt;::safe_div(move _16, const _)</td></tr></table>>];
    bb25__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_48)<br/>_48 = ((_17 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_50)<br/>_50 = _48<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _50)</td></tr></table>>];
    bb26__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/></td></tr><tr><td align="left">_14 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _15)</td></tr></table>>];
    bb28__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>_52 = discriminant(_14)<br/></td></tr><tr><td align="left">switchInt(move _52)</td></tr></table>>];
    bb29__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_56)<br/>_56 = ((_14 as Continue).0: u128)<br/>_13 = _56<br/>StorageDead(_56)<br/></td></tr><tr><td align="left">_12 = &lt;u128 as Cast&gt;::cast::&lt;u64&gt;(move _13)</td></tr></table>>];
    bb30__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_53)<br/>_53 = ((_14 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_55)<br/>_55 = _53<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _55)</td></tr></table>>];
    bb31__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/></td></tr><tr><td align="left">_11 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _12)</td></tr></table>>];
    bb33__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>_57 = discriminant(_11)<br/></td></tr><tr><td align="left">switchInt(move _57)</td></tr></table>>];
    bb34__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_61)<br/>_61 = ((_11 as Continue).0: u64)<br/>_10 = _61<br/>StorageDead(_61)<br/>StorageLive(_62)<br/>_63 = Eq(const 10_u64, const 0_u64)<br/></td></tr><tr><td align="left">assert(!move _63, &quot;attempt to divide `{}` by zero&quot;, const _)</td></tr></table>>];
    bb35__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_58)<br/>_58 = ((_11 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_60)<br/>_60 = _58<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _60)</td></tr></table>>];
    bb36__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">_62 = Div(const _, const 10_u64)<br/>_64 = Eq(_62, const 0_u64)<br/></td></tr><tr><td align="left">assert(!move _64, &quot;attempt to divide `{}` by zero&quot;, _10)</td></tr></table>>];
    bb38__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">_4 = Div(move _10, move _62)<br/>StorageDead(_62)<br/>StorageDead(_10)<br/>StorageDead(_39)<br/>StorageDead(_25)<br/>StorageDead(_20)<br/>StorageDead(_17)<br/>StorageDead(_14)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>_78 = _2<br/></td></tr><tr><td align="left">_77 = core::num::&lt;impl i128&gt;::unsigned_abs(move _78)</td></tr></table>>];
    bb40__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>_82 = _3<br/></td></tr><tr><td align="left">_81 = &lt;i64 as Cast&gt;::cast::&lt;u128&gt;(move _82)</td></tr></table>>];
    bb41__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/></td></tr><tr><td align="left">_80 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _81)</td></tr></table>>];
    bb42__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>_83 = discriminant(_80)<br/></td></tr><tr><td align="left">switchInt(move _83)</td></tr></table>>];
    bb43__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageLive(_87)<br/>_87 = ((_80 as Continue).0: u128)<br/>_79 = _87<br/>StorageDead(_87)<br/></td></tr><tr><td align="left">_76 = &lt;u128 as SafeMath&gt;::safe_mul(move _77, move _79)</td></tr></table>>];
    bb44__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_84)<br/>_84 = ((_80 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_86)<br/>_86 = _84<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _86)</td></tr></table>>];
    bb45__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>StorageDead(_84)<br/>StorageDead(_79)<br/>StorageDead(_77)<br/>StorageDead(_76)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageDead(_77)<br/></td></tr><tr><td align="left">_75 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _76)</td></tr></table>>];
    bb47__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>_88 = discriminant(_75)<br/></td></tr><tr><td align="left">switchInt(move _88)</td></tr></table>>];
    bb48__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageLive(_92)<br/>_92 = ((_75 as Continue).0: u128)<br/>_74 = _92<br/>StorageDead(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>_96 = ((*_1).57: u8)<br/></td></tr><tr><td align="left">_95 = &lt;u8 as Cast&gt;::cast::&lt;u128&gt;(move _96)</td></tr></table>>];
    bb49__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageLive(_89)<br/>_89 = ((_75 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_91)<br/>_91 = _89<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _91)</td></tr></table>>];
    bb50__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/>StorageDead(_89)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb51__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/></td></tr><tr><td align="left">_94 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _95)</td></tr></table>>];
    bb52__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/>_97 = discriminant(_94)<br/></td></tr><tr><td align="left">switchInt(move _97)</td></tr></table>>];
    bb53__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageLive(_101)<br/>_101 = ((_94 as Continue).0: u128)<br/>_93 = _101<br/>StorageDead(_101)<br/></td></tr><tr><td align="left">_73 = &lt;u128 as SafeMath&gt;::safe_mul(move _74, move _93)</td></tr></table>>];
    bb54__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageLive(_98)<br/>_98 = ((_94 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_100)<br/>_100 = _98<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _100)</td></tr></table>>];
    bb55__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>StorageDead(_98)<br/>StorageDead(_93)<br/>StorageDead(_74)<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb56__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageDead(_74)<br/></td></tr><tr><td align="left">_72 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _73)</td></tr></table>>];
    bb57__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>_102 = discriminant(_72)<br/></td></tr><tr><td align="left">switchInt(move _102)</td></tr></table>>];
    bb58__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageLive(_106)<br/>_106 = ((_72 as Continue).0: u128)<br/>_71 = _106<br/>StorageDead(_106)<br/></td></tr><tr><td align="left">_70 = &lt;u128 as SafeMath&gt;::safe_div(move _71, const _)</td></tr></table>>];
    bb59__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageLive(_103)<br/>_103 = ((_72 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_105)<br/>_105 = _103<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _105)</td></tr></table>>];
    bb60__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/>StorageDead(_103)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb61__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/></td></tr><tr><td align="left">_69 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _70)</td></tr></table>>];
    bb62__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>_107 = discriminant(_69)<br/></td></tr><tr><td align="left">switchInt(move _107)</td></tr></table>>];
    bb63__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageLive(_111)<br/>_111 = ((_69 as Continue).0: u128)<br/>_68 = _111<br/>StorageDead(_111)<br/></td></tr><tr><td align="left">_67 = &lt;u128 as Cast&gt;::cast::&lt;u64&gt;(move _68)</td></tr></table>>];
    bb64__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageLive(_108)<br/>_108 = ((_69 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_110)<br/>_110 = _108<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _110)</td></tr></table>>];
    bb65__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/>StorageDead(_108)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb66__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/></td></tr><tr><td align="left">_66 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _67)</td></tr></table>>];
    bb67__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>_112 = discriminant(_66)<br/></td></tr><tr><td align="left">switchInt(move _112)</td></tr></table>>];
    bb68__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageLive(_116)<br/>_116 = ((_66 as Continue).0: u64)<br/>_65 = _116<br/>StorageDead(_116)<br/>StorageLive(_117)<br/>_118 = Eq(const 10_u64, const 0_u64)<br/></td></tr><tr><td align="left">assert(!move _118, &quot;attempt to divide `{}` by zero&quot;, const _)</td></tr></table>>];
    bb69__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageLive(_113)<br/>_113 = ((_66 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_115)<br/>_115 = _113<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _115)</td></tr></table>>];
    bb70__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_115)<br/>StorageDead(_113)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb71__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">_117 = Div(const _, const 10_u64)<br/>_119 = Eq(_117, const 0_u64)<br/></td></tr><tr><td align="left">assert(!move _119, &quot;attempt to divide `{}` by zero&quot;, _65)</td></tr></table>>];
    bb72__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">_4 = Div(move _65, move _117)<br/>StorageDead(_117)<br/>StorageDead(_65)<br/>StorageDead(_94)<br/>StorageDead(_80)<br/>StorageDead(_75)<br/>StorageDead(_72)<br/>StorageDead(_69)<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb73__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb74__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageLive(_120)<br/>_120 = _4<br/>_0 = std::result::Result::&lt;u64, error::ErrorCode&gt;::Ok(move _120)<br/>StorageDead(_120)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb75__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageDead(_70)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb76__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb77__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageDead(_94)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb78__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageDead(_73)<br/>StorageDead(_71)<br/>StorageDead(_70)<br/>StorageDead(_68)<br/>StorageDead(_67)<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb79__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>StorageDead(_75)<br/>StorageDead(_72)<br/>StorageDead(_69)<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb80__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb81__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb82__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb83__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_18)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb84__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_20)<br/>StorageDead(_17)<br/>StorageDead(_14)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb85__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb86__0_2261 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2261 -> bb1__0_2261 [label="return"];
    bb1__0_2261 -> bb3__0_2261 [label="0"];
    bb1__0_2261 -> bb2__0_2261 [label="otherwise"];
    bb2__0_2261 -> bb74__0_2261 [label=""];
    bb3__0_2261 -> bb39__0_2261 [label="0"];
    bb3__0_2261 -> bb4__0_2261 [label="otherwise"];
    bb4__0_2261 -> bb5__0_2261 [label="return"];
    bb5__0_2261 -> bb6__0_2261 [label="return"];
    bb6__0_2261 -> bb7__0_2261 [label="return"];
    bb7__0_2261 -> bb8__0_2261 [label="0"];
    bb7__0_2261 -> bb10__0_2261 [label="1"];
    bb7__0_2261 -> bb9__0_2261 [label="otherwise"];
    bb8__0_2261 -> bb12__0_2261 [label="return"];
    bb10__0_2261 -> bb11__0_2261 [label="return"];
    bb11__0_2261 -> bb83__0_2261 [label=""];
    bb12__0_2261 -> bb13__0_2261 [label="return"];
    bb13__0_2261 -> bb14__0_2261 [label="0"];
    bb13__0_2261 -> bb15__0_2261 [label="1"];
    bb13__0_2261 -> bb9__0_2261 [label="otherwise"];
    bb14__0_2261 -> bb17__0_2261 [label="return"];
    bb15__0_2261 -> bb16__0_2261 [label="return"];
    bb16__0_2261 -> bb83__0_2261 [label=""];
    bb17__0_2261 -> bb18__0_2261 [label="return"];
    bb18__0_2261 -> bb19__0_2261 [label="0"];
    bb18__0_2261 -> bb20__0_2261 [label="1"];
    bb18__0_2261 -> bb9__0_2261 [label="otherwise"];
    bb19__0_2261 -> bb22__0_2261 [label="return"];
    bb20__0_2261 -> bb21__0_2261 [label="return"];
    bb21__0_2261 -> bb80__0_2261 [label=""];
    bb22__0_2261 -> bb23__0_2261 [label="return"];
    bb23__0_2261 -> bb24__0_2261 [label="0"];
    bb23__0_2261 -> bb25__0_2261 [label="1"];
    bb23__0_2261 -> bb9__0_2261 [label="otherwise"];
    bb24__0_2261 -> bb27__0_2261 [label="return"];
    bb25__0_2261 -> bb26__0_2261 [label="return"];
    bb26__0_2261 -> bb80__0_2261 [label=""];
    bb27__0_2261 -> bb28__0_2261 [label="return"];
    bb28__0_2261 -> bb29__0_2261 [label="0"];
    bb28__0_2261 -> bb30__0_2261 [label="1"];
    bb28__0_2261 -> bb9__0_2261 [label="otherwise"];
    bb29__0_2261 -> bb32__0_2261 [label="return"];
    bb30__0_2261 -> bb31__0_2261 [label="return"];
    bb31__0_2261 -> bb81__0_2261 [label=""];
    bb32__0_2261 -> bb33__0_2261 [label="return"];
    bb33__0_2261 -> bb34__0_2261 [label="0"];
    bb33__0_2261 -> bb35__0_2261 [label="1"];
    bb33__0_2261 -> bb9__0_2261 [label="otherwise"];
    bb34__0_2261 -> bb37__0_2261 [label="success"];
    bb35__0_2261 -> bb36__0_2261 [label="return"];
    bb36__0_2261 -> bb82__0_2261 [label=""];
    bb37__0_2261 -> bb38__0_2261 [label="success"];
    bb38__0_2261 -> bb73__0_2261 [label=""];
    bb39__0_2261 -> bb40__0_2261 [label="return"];
    bb40__0_2261 -> bb41__0_2261 [label="return"];
    bb41__0_2261 -> bb42__0_2261 [label="return"];
    bb42__0_2261 -> bb43__0_2261 [label="0"];
    bb42__0_2261 -> bb44__0_2261 [label="1"];
    bb42__0_2261 -> bb9__0_2261 [label="otherwise"];
    bb43__0_2261 -> bb46__0_2261 [label="return"];
    bb44__0_2261 -> bb45__0_2261 [label="return"];
    bb45__0_2261 -> bb78__0_2261 [label=""];
    bb46__0_2261 -> bb47__0_2261 [label="return"];
    bb47__0_2261 -> bb48__0_2261 [label="0"];
    bb47__0_2261 -> bb49__0_2261 [label="1"];
    bb47__0_2261 -> bb9__0_2261 [label="otherwise"];
    bb48__0_2261 -> bb51__0_2261 [label="return"];
    bb49__0_2261 -> bb50__0_2261 [label="return"];
    bb50__0_2261 -> bb78__0_2261 [label=""];
    bb51__0_2261 -> bb52__0_2261 [label="return"];
    bb52__0_2261 -> bb53__0_2261 [label="0"];
    bb52__0_2261 -> bb54__0_2261 [label="1"];
    bb52__0_2261 -> bb9__0_2261 [label="otherwise"];
    bb53__0_2261 -> bb56__0_2261 [label="return"];
    bb54__0_2261 -> bb55__0_2261 [label="return"];
    bb55__0_2261 -> bb75__0_2261 [label=""];
    bb56__0_2261 -> bb57__0_2261 [label="return"];
    bb57__0_2261 -> bb58__0_2261 [label="0"];
    bb57__0_2261 -> bb59__0_2261 [label="1"];
    bb57__0_2261 -> bb9__0_2261 [label="otherwise"];
    bb58__0_2261 -> bb61__0_2261 [label="return"];
    bb59__0_2261 -> bb60__0_2261 [label="return"];
    bb60__0_2261 -> bb75__0_2261 [label=""];
    bb61__0_2261 -> bb62__0_2261 [label="return"];
    bb62__0_2261 -> bb63__0_2261 [label="0"];
    bb62__0_2261 -> bb64__0_2261 [label="1"];
    bb62__0_2261 -> bb9__0_2261 [label="otherwise"];
    bb63__0_2261 -> bb66__0_2261 [label="return"];
    bb64__0_2261 -> bb65__0_2261 [label="return"];
    bb65__0_2261 -> bb76__0_2261 [label=""];
    bb66__0_2261 -> bb67__0_2261 [label="return"];
    bb67__0_2261 -> bb68__0_2261 [label="0"];
    bb67__0_2261 -> bb69__0_2261 [label="1"];
    bb67__0_2261 -> bb9__0_2261 [label="otherwise"];
    bb68__0_2261 -> bb71__0_2261 [label="success"];
    bb69__0_2261 -> bb70__0_2261 [label="return"];
    bb70__0_2261 -> bb77__0_2261 [label=""];
    bb71__0_2261 -> bb72__0_2261 [label="success"];
    bb72__0_2261 -> bb73__0_2261 [label=""];
    bb73__0_2261 -> bb74__0_2261 [label=""];
    bb74__0_2261 -> bb86__0_2261 [label=""];
    bb75__0_2261 -> bb76__0_2261 [label=""];
    bb76__0_2261 -> bb77__0_2261 [label=""];
    bb77__0_2261 -> bb79__0_2261 [label=""];
    bb78__0_2261 -> bb79__0_2261 [label=""];
    bb79__0_2261 -> bb85__0_2261 [label=""];
    bb80__0_2261 -> bb81__0_2261 [label=""];
    bb81__0_2261 -> bb82__0_2261 [label=""];
    bb82__0_2261 -> bb84__0_2261 [label=""];
    bb83__0_2261 -> bb84__0_2261 [label=""];
    bb84__0_2261 -> bb85__0_2261 [label=""];
    bb85__0_2261 -> bb86__0_2261 [label=""];
}
