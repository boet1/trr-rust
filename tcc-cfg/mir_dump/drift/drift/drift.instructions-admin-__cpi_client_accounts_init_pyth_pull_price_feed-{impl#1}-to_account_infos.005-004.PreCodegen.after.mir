// MIR for `__cpi_client_accounts_init_pyth_pull_price_feed::<impl at programs/drift/src/instructions/admin.rs:5589:10: 5589:18>::to_account_infos` after PreCodegen

fn __cpi_client_accounts_init_pyth_pull_price_feed::<impl at programs/drift/src/instructions/admin.rs:5589:10: 5589:18>::to_account_infos(_1: &__cpi_client_accounts_init_pyth_pull_price_feed::InitPythPullPriceFeed<'_>) -> Vec<anchor_lang::prelude::AccountInfo<'_>> {
    debug self => _1;
    let mut _0: std::vec::Vec<anchor_lang::prelude::AccountInfo<'_>>;
    let mut _2: std::vec::Vec<anchor_lang::prelude::AccountInfo<'_>>;
    let _3: ();
    let mut _4: &mut std::vec::Vec<anchor_lang::prelude::AccountInfo<'_>>;
    let mut _5: std::vec::Vec<anchor_lang::prelude::AccountInfo<'_>>;
    let mut _6: &anchor_lang::prelude::AccountInfo<'_>;
    let _7: &anchor_lang::prelude::AccountInfo<'_>;
    let _8: ();
    let mut _9: &mut std::vec::Vec<anchor_lang::prelude::AccountInfo<'_>>;
    let mut _10: std::vec::Vec<anchor_lang::prelude::AccountInfo<'_>>;
    let mut _11: &anchor_lang::prelude::AccountInfo<'_>;
    let _12: &anchor_lang::prelude::AccountInfo<'_>;
    let _13: ();
    let mut _14: &mut std::vec::Vec<anchor_lang::prelude::AccountInfo<'_>>;
    let mut _15: std::vec::Vec<anchor_lang::prelude::AccountInfo<'_>>;
    let mut _16: &anchor_lang::prelude::AccountInfo<'_>;
    let _17: &anchor_lang::prelude::AccountInfo<'_>;
    let _18: ();
    let mut _19: &mut std::vec::Vec<anchor_lang::prelude::AccountInfo<'_>>;
    let mut _20: std::vec::Vec<anchor_lang::prelude::AccountInfo<'_>>;
    let mut _21: &anchor_lang::prelude::AccountInfo<'_>;
    let _22: &anchor_lang::prelude::AccountInfo<'_>;
    let _23: ();
    let mut _24: &mut std::vec::Vec<anchor_lang::prelude::AccountInfo<'_>>;
    let mut _25: std::vec::Vec<anchor_lang::prelude::AccountInfo<'_>>;
    let mut _26: &anchor_lang::prelude::AccountInfo<'_>;
    let _27: &anchor_lang::prelude::AccountInfo<'_>;
    scope 1 {
        debug account_infos => _2;
    }

    bb0: {
        StorageLive(_2);
        _2 = Vec::<anchor_lang::prelude::AccountInfo<'_>>::new() -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageLive(_3);
        StorageLive(_4);
        _4 = &mut _2;
        StorageLive(_5);
        StorageLive(_6);
        StorageLive(_7);
        _7 = &((*_1).0: anchor_lang::prelude::AccountInfo<'_>);
        _6 = &(*_7);
        _5 = <anchor_lang::prelude::AccountInfo<'_> as anchor_lang::ToAccountInfos<'_>>::to_account_infos(move _6) -> [return: bb2, unwind: bb12];
    }

    bb2: {
        StorageDead(_6);
        _3 = <Vec<anchor_lang::prelude::AccountInfo<'_>> as Extend<anchor_lang::prelude::AccountInfo<'_>>>::extend::<Vec<anchor_lang::prelude::AccountInfo<'_>>>(move _4, move _5) -> [return: bb3, unwind: bb12];
    }

    bb3: {
        StorageDead(_5);
        StorageDead(_4);
        StorageDead(_7);
        StorageDead(_3);
        StorageLive(_8);
        StorageLive(_9);
        _9 = &mut _2;
        StorageLive(_10);
        StorageLive(_11);
        StorageLive(_12);
        _12 = &((*_1).1: anchor_lang::prelude::AccountInfo<'_>);
        _11 = &(*_12);
        _10 = <anchor_lang::prelude::AccountInfo<'_> as anchor_lang::ToAccountInfos<'_>>::to_account_infos(move _11) -> [return: bb4, unwind: bb12];
    }

    bb4: {
        StorageDead(_11);
        _8 = <Vec<anchor_lang::prelude::AccountInfo<'_>> as Extend<anchor_lang::prelude::AccountInfo<'_>>>::extend::<Vec<anchor_lang::prelude::AccountInfo<'_>>>(move _9, move _10) -> [return: bb5, unwind: bb12];
    }

    bb5: {
        StorageDead(_10);
        StorageDead(_9);
        StorageDead(_12);
        StorageDead(_8);
        StorageLive(_13);
        StorageLive(_14);
        _14 = &mut _2;
        StorageLive(_15);
        StorageLive(_16);
        StorageLive(_17);
        _17 = &((*_1).2: anchor_lang::prelude::AccountInfo<'_>);
        _16 = &(*_17);
        _15 = <anchor_lang::prelude::AccountInfo<'_> as anchor_lang::ToAccountInfos<'_>>::to_account_infos(move _16) -> [return: bb6, unwind: bb12];
    }

    bb6: {
        StorageDead(_16);
        _13 = <Vec<anchor_lang::prelude::AccountInfo<'_>> as Extend<anchor_lang::prelude::AccountInfo<'_>>>::extend::<Vec<anchor_lang::prelude::AccountInfo<'_>>>(move _14, move _15) -> [return: bb7, unwind: bb12];
    }

    bb7: {
        StorageDead(_15);
        StorageDead(_14);
        StorageDead(_17);
        StorageDead(_13);
        StorageLive(_18);
        StorageLive(_19);
        _19 = &mut _2;
        StorageLive(_20);
        StorageLive(_21);
        StorageLive(_22);
        _22 = &((*_1).3: anchor_lang::prelude::AccountInfo<'_>);
        _21 = &(*_22);
        _20 = <anchor_lang::prelude::AccountInfo<'_> as anchor_lang::ToAccountInfos<'_>>::to_account_infos(move _21) -> [return: bb8, unwind: bb12];
    }

    bb8: {
        StorageDead(_21);
        _18 = <Vec<anchor_lang::prelude::AccountInfo<'_>> as Extend<anchor_lang::prelude::AccountInfo<'_>>>::extend::<Vec<anchor_lang::prelude::AccountInfo<'_>>>(move _19, move _20) -> [return: bb9, unwind: bb12];
    }

    bb9: {
        StorageDead(_20);
        StorageDead(_19);
        StorageDead(_22);
        StorageDead(_18);
        StorageLive(_23);
        StorageLive(_24);
        _24 = &mut _2;
        StorageLive(_25);
        StorageLive(_26);
        StorageLive(_27);
        _27 = &((*_1).4: anchor_lang::prelude::AccountInfo<'_>);
        _26 = &(*_27);
        _25 = <anchor_lang::prelude::AccountInfo<'_> as anchor_lang::ToAccountInfos<'_>>::to_account_infos(move _26) -> [return: bb10, unwind: bb12];
    }

    bb10: {
        StorageDead(_26);
        _23 = <Vec<anchor_lang::prelude::AccountInfo<'_>> as Extend<anchor_lang::prelude::AccountInfo<'_>>>::extend::<Vec<anchor_lang::prelude::AccountInfo<'_>>>(move _24, move _25) -> [return: bb11, unwind: bb12];
    }

    bb11: {
        StorageDead(_25);
        StorageDead(_24);
        StorageDead(_27);
        StorageDead(_23);
        _0 = move _2;
        StorageDead(_2);
        return;
    }

    bb12 (cleanup): {
        drop(_2) -> [return: bb13, unwind terminate(cleanup)];
    }

    bb13 (cleanup): {
        resume;
    }
}
