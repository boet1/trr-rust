digraph Mir_0_11707 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn instructions::user::handle_transfer_perp_position(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::user::TransferPerpPosition&lt;ReErased&gt;&gt;, _2: u16, _3: std::option::Option&lt;i64&gt;) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _4: ();<br align="left"/>let mut _5: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _6: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _7: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _8: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _9: isize;<br align="left"/>let _10: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _11: !;<br align="left"/>let mut _12: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _13: ();<br align="left"/>let _14: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _15: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _16: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _17: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _18: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let _19: anchor_lang::prelude::Clock;<br align="left"/>let mut _20: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _21: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _22: isize;<br align="left"/>let _23: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _24: !;<br align="left"/>let mut _25: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _26: anchor_lang::prelude::Clock;<br align="left"/>let _27: u64;<br align="left"/>let mut _28: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _29: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _30: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _31: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _32: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _33: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _34: Closure(DefId(0:11714 ~ drift[d311]::instructions::user::handle_transfer_perp_position::{closure#1}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _35: isize;<br align="left"/>let _36: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _37: !;<br align="left"/>let mut _38: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _39: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _40: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _41: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _42: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _43: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _44: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _45: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _46: Closure(DefId(0:11715 ~ drift[d311]::instructions::user::handle_transfer_perp_position::{closure#2}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _47: isize;<br align="left"/>let _48: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _49: !;<br align="left"/>let mut _50: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _51: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _52: anchor_lang::prelude::Clock;<br align="left"/>let mut _53: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _54: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _55: isize;<br align="left"/>let _56: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _57: !;<br align="left"/>let mut _58: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _59: anchor_lang::prelude::Clock;<br align="left"/>let _60: i64;<br align="left"/>let _61: ();<br align="left"/>let mut _62: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _63: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _64: bool;<br align="left"/>let mut _65: &amp;ReErased state::user::User;<br align="left"/>let _66: &amp;ReErased state::user::User;<br align="left"/>let mut _67: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _68: ();<br align="left"/>let _69: error::ErrorCode;<br align="left"/>let _70: ();<br align="left"/>let mut _71: &amp;ReErased str;<br align="left"/>let _72: &amp;ReErased str;<br align="left"/>let mut _73: &amp;ReErased std::string::String;<br align="left"/>let _74: &amp;ReErased std::string::String;<br align="left"/>let _75: std::string::String;<br align="left"/>let _76: std::string::String;<br align="left"/>let mut _77: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _78: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _79: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _80: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _81: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _82: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _83: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _84: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _85: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _86: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _87: &amp;ReErased error::ErrorCode;<br align="left"/>let _88: &amp;ReErased error::ErrorCode;<br align="left"/>let _89: ();<br align="left"/>let mut _90: &amp;ReErased str;<br align="left"/>let _91: &amp;ReErased str;<br align="left"/>let mut _92: error::ErrorCode;<br align="left"/>let mut _93: isize;<br align="left"/>let _94: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _95: !;<br align="left"/>let mut _96: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _97: ();<br align="left"/>let _98: ();<br align="left"/>let mut _99: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _100: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _101: bool;<br align="left"/>let mut _102: &amp;ReErased state::user::User;<br align="left"/>let _103: &amp;ReErased state::user::User;<br align="left"/>let mut _104: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _105: ();<br align="left"/>let _106: error::ErrorCode;<br align="left"/>let _107: ();<br align="left"/>let mut _108: &amp;ReErased str;<br align="left"/>let _109: &amp;ReErased str;<br align="left"/>let mut _110: &amp;ReErased std::string::String;<br align="left"/>let _111: &amp;ReErased std::string::String;<br align="left"/>let _112: std::string::String;<br align="left"/>let _113: std::string::String;<br align="left"/>let mut _114: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _115: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _116: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _117: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _118: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _119: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _120: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _121: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _122: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _123: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _124: &amp;ReErased error::ErrorCode;<br align="left"/>let _125: &amp;ReErased error::ErrorCode;<br align="left"/>let _126: ();<br align="left"/>let mut _127: &amp;ReErased str;<br align="left"/>let _128: &amp;ReErased str;<br align="left"/>let mut _129: error::ErrorCode;<br align="left"/>let mut _130: isize;<br align="left"/>let _131: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _132: !;<br align="left"/>let mut _133: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _134: ();<br align="left"/>let _135: ();<br align="left"/>let mut _136: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _137: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _138: bool;<br align="left"/>let mut _139: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _140: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _141: ();<br align="left"/>let _142: error::ErrorCode;<br align="left"/>let _143: ();<br align="left"/>let mut _144: &amp;ReErased str;<br align="left"/>let _145: &amp;ReErased str;<br align="left"/>let mut _146: &amp;ReErased std::string::String;<br align="left"/>let _147: &amp;ReErased std::string::String;<br align="left"/>let _148: std::string::String;<br align="left"/>let _149: std::string::String;<br align="left"/>let mut _150: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _151: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _152: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _153: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _154: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _155: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _156: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _157: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _158: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _159: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _160: &amp;ReErased error::ErrorCode;<br align="left"/>let _161: &amp;ReErased error::ErrorCode;<br align="left"/>let _162: ();<br align="left"/>let mut _163: &amp;ReErased str;<br align="left"/>let _164: &amp;ReErased str;<br align="left"/>let mut _165: error::ErrorCode;<br align="left"/>let mut _166: isize;<br align="left"/>let _167: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _168: !;<br align="left"/>let mut _169: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _170: ();<br align="left"/>let _171: state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _172: state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _173: state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _174: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let mut _175: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, instructions::optional_accounts::AccountMaps&lt;ReErased&gt;&gt;;<br align="left"/>let mut _176: std::result::Result&lt;instructions::optional_accounts::AccountMaps&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _177: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _178: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _179: std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _180: std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _181: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _182: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _183: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _184: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _185: u16;<br align="left"/>let mut _186: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _187: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _188: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _189: u64;<br align="left"/>let mut _190: std::option::Option&lt;state::state::OracleGuardRails&gt;;<br align="left"/>let mut _191: state::state::OracleGuardRails;<br align="left"/>let mut _192: &amp;ReErased state::state::State;<br align="left"/>let mut _193: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _194: isize;<br align="left"/>let _195: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _196: !;<br align="left"/>let mut _197: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _198: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let _199: i128;<br align="left"/>let mut _200: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _201: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _202: u16;<br align="left"/>let mut _203: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _204: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _205: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _206: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _207: &amp;ReErased state::state::State;<br align="left"/>let _208: &amp;ReErased state::state::State;<br align="left"/>let mut _209: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _210: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _211: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let _212: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let mut _213: isize;<br align="left"/>let _214: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _215: !;<br align="left"/>let mut _216: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _217: i128;<br align="left"/>let _218: ();<br align="left"/>let mut _219: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _220: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _221: &amp;ReErased mut state::user::User;<br align="left"/>let mut _222: &amp;ReErased mut state::user::User;<br align="left"/>let mut _223: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _224: &amp;ReErased mut &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _225: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _226: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _227: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _228: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _229: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _230: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _231: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _232: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _233: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _234: &amp;ReErased u16;<br align="left"/>let _235: &amp;ReErased u16;<br align="left"/>let mut _236: isize;<br align="left"/>let _237: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _238: !;<br align="left"/>let mut _239: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _240: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _241: i64;<br align="left"/>let mut _242: isize;<br align="left"/>let _243: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _244: !;<br align="left"/>let mut _245: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _246: ();<br align="left"/>let _247: ();<br align="left"/>let mut _248: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _249: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _250: &amp;ReErased mut state::user::User;<br align="left"/>let mut _251: &amp;ReErased mut state::user::User;<br align="left"/>let mut _252: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _253: &amp;ReErased mut &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _254: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _255: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _256: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _257: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _258: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _259: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _260: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _261: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _262: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _263: &amp;ReErased u16;<br align="left"/>let _264: &amp;ReErased u16;<br align="left"/>let mut _265: isize;<br align="left"/>let _266: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _267: !;<br align="left"/>let mut _268: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _269: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _270: i64;<br align="left"/>let mut _271: isize;<br align="left"/>let _272: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _273: !;<br align="left"/>let mut _274: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _275: ();<br align="left"/>let _276: u128;<br align="left"/>let _277: i64;<br align="left"/>let _278: u64;<br align="left"/>let _279: u64;<br align="left"/>let _280: ();<br align="left"/>let _281: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _282: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _283: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _284: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _285: &amp;ReErased u16;<br align="left"/>let _286: &amp;ReErased u16;<br align="left"/>let mut _287: isize;<br align="left"/>let _288: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _289: !;<br align="left"/>let mut _290: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _291: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _292: u128;<br align="left"/>let mut _293: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _294: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _295: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _296: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _297: math::oracle::OracleValidity;<br align="left"/>let mut _298: (&amp;ReErased state::oracle::OraclePriceData, math::oracle::OracleValidity);<br align="left"/>let mut _299: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (&amp;ReErased state::oracle::OraclePriceData, math::oracle::OracleValidity)&gt;;<br align="left"/>let mut _300: std::result::Result&lt;(&amp;ReErased state::oracle::OraclePriceData, math::oracle::OracleValidity), error::ErrorCode&gt;;<br align="left"/>let mut _301: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _302: state::user::MarketType;<br align="left"/>let mut _303: u16;<br align="left"/>let mut _304: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _305: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _306: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _307: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _308: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _309: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _310: i64;<br align="left"/>let mut _311: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _312: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _313: u64;<br align="left"/>let mut _314: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _315: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _316: state::perp_market::PerpMarket;<br align="left"/>let mut _317: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _318: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _319: isize;<br align="left"/>let _320: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _321: !;<br align="left"/>let mut _322: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _323: u64;<br align="left"/>let mut _324: i8;<br align="left"/>let mut _325: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _326: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _327: isize;<br align="left"/>let _328: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _329: !;<br align="left"/>let mut _330: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _331: (&amp;ReErased state::oracle::OraclePriceData, math::oracle::OracleValidity);<br align="left"/>let mut _332: u64;<br align="left"/>let mut _333: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _334: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _335: u64;<br align="left"/>let mut _336: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _337: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _338: ();<br align="left"/>let mut _339: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _340: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _341: bool;<br align="left"/>let mut _342: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _343: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _344: math::oracle::OracleValidity;<br align="left"/>let mut _345: std::option::Option&lt;math::oracle::DriftAction&gt;;<br align="left"/>let mut _346: math::oracle::DriftAction;<br align="left"/>let mut _347: isize;<br align="left"/>let _348: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _349: !;<br align="left"/>let mut _350: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _351: bool;<br align="left"/>let mut _352: ();<br align="left"/>let _353: error::ErrorCode;<br align="left"/>let _354: ();<br align="left"/>let mut _355: &amp;ReErased str;<br align="left"/>let _356: &amp;ReErased str;<br align="left"/>let mut _357: &amp;ReErased std::string::String;<br align="left"/>let _358: &amp;ReErased std::string::String;<br align="left"/>let _359: std::string::String;<br align="left"/>let _360: std::string::String;<br align="left"/>let mut _361: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _362: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _363: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _364: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _365: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _366: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _367: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _368: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _369: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _370: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _371: &amp;ReErased error::ErrorCode;<br align="left"/>let _372: &amp;ReErased error::ErrorCode;<br align="left"/>let _373: ();<br align="left"/>let mut _374: &amp;ReErased str;<br align="left"/>let _375: &amp;ReErased str;<br align="left"/>let mut _376: error::ErrorCode;<br align="left"/>let mut _377: isize;<br align="left"/>let _378: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _379: !;<br align="left"/>let mut _380: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _381: ();<br align="left"/>let _382: ();<br align="left"/>let mut _383: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _384: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _385: bool;<br align="left"/>let mut _386: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _387: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _388: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _389: state::paused_operations::PerpOperation;<br align="left"/>let mut _390: ();<br align="left"/>let _391: error::ErrorCode;<br align="left"/>let _392: ();<br align="left"/>let mut _393: &amp;ReErased str;<br align="left"/>let _394: &amp;ReErased str;<br align="left"/>let mut _395: &amp;ReErased std::string::String;<br align="left"/>let _396: &amp;ReErased std::string::String;<br align="left"/>let _397: std::string::String;<br align="left"/>let _398: std::string::String;<br align="left"/>let mut _399: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _400: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _401: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _402: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _403: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _404: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _405: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _406: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _407: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _408: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _409: &amp;ReErased error::ErrorCode;<br align="left"/>let _410: &amp;ReErased error::ErrorCode;<br align="left"/>let _411: ();<br align="left"/>let mut _412: &amp;ReErased str;<br align="left"/>let _413: &amp;ReErased str;<br align="left"/>let mut _414: error::ErrorCode;<br align="left"/>let mut _415: isize;<br align="left"/>let _416: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _417: !;<br align="left"/>let mut _418: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _419: ();<br align="left"/>let mut _420: i64;<br align="left"/>let _421: i64;<br align="left"/>let _422: controller::position::PositionDirection;<br align="left"/>let mut _423: (i64, controller::position::PositionDirection);<br align="left"/>let mut _424: isize;<br align="left"/>let _425: i64;<br align="left"/>let _426: &amp;ReErased mut state::user::PerpPosition;<br align="left"/>let mut _427: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased mut state::user::PerpPosition&gt;;<br align="left"/>let mut _428: std::result::Result&lt;&amp;ReErased mut state::user::PerpPosition, error::ErrorCode&gt;;<br align="left"/>let mut _429: &amp;ReErased mut state::user::User;<br align="left"/>let mut _430: &amp;ReErased mut state::user::User;<br align="left"/>let mut _431: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _432: u16;<br align="left"/>let mut _433: isize;<br align="left"/>let _434: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _435: !;<br align="left"/>let mut _436: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _437: &amp;ReErased mut state::user::PerpPosition;<br align="left"/>let _438: i64;<br align="left"/>let _439: ();<br align="left"/>let mut _440: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _441: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _442: bool;<br align="left"/>let mut _443: i64;<br align="left"/>let mut _444: i64;<br align="left"/>let mut _445: i64;<br align="left"/>let mut _446: i64;<br align="left"/>let mut _447: ();<br align="left"/>let _448: error::ErrorCode;<br align="left"/>let _449: ();<br align="left"/>let mut _450: &amp;ReErased str;<br align="left"/>let _451: &amp;ReErased str;<br align="left"/>let mut _452: &amp;ReErased std::string::String;<br align="left"/>let _453: &amp;ReErased std::string::String;<br align="left"/>let _454: std::string::String;<br align="left"/>let _455: std::string::String;<br align="left"/>let mut _456: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _457: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _458: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _459: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _460: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _461: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _462: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _463: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _464: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _465: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _466: &amp;ReErased error::ErrorCode;<br align="left"/>let _467: &amp;ReErased error::ErrorCode;<br align="left"/>let _468: ();<br align="left"/>let mut _469: &amp;ReErased str;<br align="left"/>let _470: &amp;ReErased str;<br align="left"/>let mut _471: error::ErrorCode;<br align="left"/>let mut _472: isize;<br align="left"/>let _473: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _474: !;<br align="left"/>let mut _475: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _476: ();<br align="left"/>let _477: ();<br align="left"/>let mut _478: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _479: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _480: bool;<br align="left"/>let mut _481: i64;<br align="left"/>let mut _482: i64;<br align="left"/>let mut _483: i64;<br align="left"/>let mut _484: i64;<br align="left"/>let mut _485: ();<br align="left"/>let _486: error::ErrorCode;<br align="left"/>let _487: ();<br align="left"/>let mut _488: &amp;ReErased str;<br align="left"/>let _489: &amp;ReErased str;<br align="left"/>let mut _490: &amp;ReErased std::string::String;<br align="left"/>let _491: &amp;ReErased std::string::String;<br align="left"/>let _492: std::string::String;<br align="left"/>let _493: std::string::String;<br align="left"/>let mut _494: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _495: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _496: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _497: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _498: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _499: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _500: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _501: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _502: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _503: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _504: &amp;ReErased error::ErrorCode;<br align="left"/>let _505: &amp;ReErased error::ErrorCode;<br align="left"/>let _506: ();<br align="left"/>let mut _507: &amp;ReErased str;<br align="left"/>let _508: &amp;ReErased str;<br align="left"/>let mut _509: error::ErrorCode;<br align="left"/>let mut _510: isize;<br align="left"/>let _511: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _512: !;<br align="left"/>let mut _513: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _514: ();<br align="left"/>let _515: ();<br align="left"/>let mut _516: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _517: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _518: bool;<br align="left"/>let mut _519: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _520: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _521: u64;<br align="left"/>let mut _522: i64;<br align="left"/>let mut _523: u64;<br align="left"/>let mut _524: isize;<br align="left"/>let _525: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _526: !;<br align="left"/>let mut _527: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _528: bool;<br align="left"/>let mut _529: ();<br align="left"/>let _530: error::ErrorCode;<br align="left"/>let _531: ();<br align="left"/>let mut _532: &amp;ReErased str;<br align="left"/>let _533: &amp;ReErased str;<br align="left"/>let mut _534: &amp;ReErased std::string::String;<br align="left"/>let _535: &amp;ReErased std::string::String;<br align="left"/>let _536: std::string::String;<br align="left"/>let _537: std::string::String;<br align="left"/>let mut _538: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _539: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _540: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _541: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _542: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _543: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _544: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _545: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _546: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _547: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _548: &amp;ReErased error::ErrorCode;<br align="left"/>let _549: &amp;ReErased error::ErrorCode;<br align="left"/>let _550: ();<br align="left"/>let mut _551: &amp;ReErased str;<br align="left"/>let _552: &amp;ReErased str;<br align="left"/>let mut _553: error::ErrorCode;<br align="left"/>let mut _554: isize;<br align="left"/>let _555: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _556: !;<br align="left"/>let mut _557: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _558: ();<br align="left"/>let mut _559: i64;<br align="left"/>let mut _560: controller::position::PositionDirection;<br align="left"/>let mut _561: &amp;ReErased state::user::PerpPosition;<br align="left"/>let _562: &amp;ReErased mut state::user::PerpPosition;<br align="left"/>let mut _563: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased mut state::user::PerpPosition&gt;;<br align="left"/>let mut _564: std::result::Result&lt;&amp;ReErased mut state::user::PerpPosition, error::ErrorCode&gt;;<br align="left"/>let mut _565: &amp;ReErased mut state::user::User;<br align="left"/>let mut _566: &amp;ReErased mut state::user::User;<br align="left"/>let mut _567: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _568: u16;<br align="left"/>let mut _569: isize;<br align="left"/>let _570: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _571: !;<br align="left"/>let mut _572: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _573: &amp;ReErased mut state::user::PerpPosition;<br align="left"/>let _574: ();<br align="left"/>let mut _575: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _576: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _577: bool;<br align="left"/>let mut _578: i64;<br align="left"/>let mut _579: ();<br align="left"/>let _580: error::ErrorCode;<br align="left"/>let _581: ();<br align="left"/>let mut _582: &amp;ReErased str;<br align="left"/>let _583: &amp;ReErased str;<br align="left"/>let mut _584: &amp;ReErased std::string::String;<br align="left"/>let _585: &amp;ReErased std::string::String;<br align="left"/>let _586: std::string::String;<br align="left"/>let _587: std::string::String;<br align="left"/>let mut _588: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _589: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _590: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _591: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _592: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _593: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _594: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _595: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _596: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _597: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _598: &amp;ReErased error::ErrorCode;<br align="left"/>let _599: &amp;ReErased error::ErrorCode;<br align="left"/>let _600: ();<br align="left"/>let mut _601: &amp;ReErased str;<br align="left"/>let _602: &amp;ReErased str;<br align="left"/>let mut _603: error::ErrorCode;<br align="left"/>let mut _604: isize;<br align="left"/>let _605: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _606: !;<br align="left"/>let mut _607: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _608: ();<br align="left"/>let mut _609: i64;<br align="left"/>let mut _610: controller::position::PositionDirection;<br align="left"/>let mut _611: &amp;ReErased state::user::PerpPosition;<br align="left"/>let _612: i64;<br align="left"/>let mut _613: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _614: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _615: i64;<br align="left"/>let mut _616: i64;<br align="left"/>let mut _617: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _618: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _619: u64;<br align="left"/>let mut _620: isize;<br align="left"/>let _621: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _622: !;<br align="left"/>let mut _623: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _624: i64;<br align="left"/>let mut _625: controller::position::PositionDirection;<br align="left"/>let mut _626: isize;<br align="left"/>let _627: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _628: !;<br align="left"/>let mut _629: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _630: i64;<br align="left"/>let _631: u64;<br align="left"/>let mut _632: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _633: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _634: u128;<br align="left"/>let mut _635: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _636: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _637: i128;<br align="left"/>let mut _638: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _639: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _640: i64;<br align="left"/>let mut _641: isize;<br align="left"/>let _642: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _643: !;<br align="left"/>let mut _644: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _645: i128;<br align="left"/>let mut _646: i64;<br align="left"/>let mut _647: isize;<br align="left"/>let _648: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _649: !;<br align="left"/>let mut _650: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _651: u128;<br align="left"/>let mut _652: isize;<br align="left"/>let _653: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _654: !;<br align="left"/>let mut _655: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _656: u64;<br align="left"/>let _657: u64;<br align="left"/>let mut _658: i64;<br align="left"/>let _659: controller::position::PositionDelta;<br align="left"/>let mut _660: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, controller::position::PositionDelta&gt;;<br align="left"/>let mut _661: std::result::Result&lt;controller::position::PositionDelta, error::ErrorCode&gt;;<br align="left"/>let mut _662: u64;<br align="left"/>let mut _663: u64;<br align="left"/>let mut _664: controller::position::PositionDirection;<br align="left"/>let mut _665: isize;<br align="left"/>let _666: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _667: !;<br align="left"/>let mut _668: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _669: controller::position::PositionDelta;<br align="left"/>let _670: controller::position::PositionDelta;<br align="left"/>let mut _671: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, controller::position::PositionDelta&gt;;<br align="left"/>let mut _672: std::result::Result&lt;controller::position::PositionDelta, error::ErrorCode&gt;;<br align="left"/>let mut _673: u64;<br align="left"/>let mut _674: u64;<br align="left"/>let mut _675: controller::position::PositionDirection;<br align="left"/>let mut _676: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let mut _677: isize;<br align="left"/>let _678: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _679: !;<br align="left"/>let mut _680: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _681: controller::position::PositionDelta;<br align="left"/>let _682: controller::position::PositionDirection;<br align="left"/>let mut _683: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, controller::position::PositionDirection&gt;;<br align="left"/>let mut _684: std::result::Result&lt;controller::position::PositionDirection, error::ErrorCode&gt;;<br align="left"/>let mut _685: std::result::Result&lt;&amp;ReErased mut state::user::PerpPosition, error::ErrorCode&gt;;<br align="left"/>let mut _686: &amp;ReErased mut state::user::User;<br align="left"/>let mut _687: &amp;ReErased mut state::user::User;<br align="left"/>let mut _688: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _689: u16;<br align="left"/>let mut _690: Closure(DefId(0:11710 ~ drift[d311]::instructions::user::handle_transfer_perp_position::{closure#0}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((&amp;ReErased mut state::user::PerpPosition,)) -&gt; controller::position::PositionDirection, []), ()]);<br align="left"/>let mut _691: isize;<br align="left"/>let _692: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _693: !;<br align="left"/>let mut _694: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _695: controller::position::PositionDirection;<br align="left"/>let _696: std::option::Option&lt;u64&gt;;<br align="left"/>let _697: std::option::Option&lt;u64&gt;;<br align="left"/>let _698: std::option::Option&lt;u64&gt;;<br align="left"/>let _699: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _700: (std::option::Option&lt;u64&gt;, std::option::Option&lt;u64&gt;, std::option::Option&lt;u64&gt;, std::option::Option&lt;u64&gt;);<br align="left"/>let mut _701: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _702: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _703: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _704: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _705: &amp;ReErased u16;<br align="left"/>let _706: &amp;ReErased u16;<br align="left"/>let mut _707: isize;<br align="left"/>let _708: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _709: !;<br align="left"/>let mut _710: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _711: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _712: &amp;ReErased mut state::user::PerpPosition;<br align="left"/>let mut _713: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased mut state::user::PerpPosition&gt;;<br align="left"/>let mut _714: std::result::Result&lt;&amp;ReErased mut state::user::PerpPosition, error::ErrorCode&gt;;<br align="left"/>let mut _715: &amp;ReErased mut state::user::User;<br align="left"/>let mut _716: &amp;ReErased mut state::user::User;<br align="left"/>let mut _717: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _718: u16;<br align="left"/>let mut _719: isize;<br align="left"/>let _720: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _721: !;<br align="left"/>let mut _722: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _723: &amp;ReErased mut state::user::PerpPosition;<br align="left"/>let _724: std::option::Option&lt;u64&gt;;<br align="left"/>let _725: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _726: (std::option::Option&lt;u64&gt;, std::option::Option&lt;u64&gt;);<br align="left"/>let mut _727: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (std::option::Option&lt;u64&gt;, std::option::Option&lt;u64&gt;)&gt;;<br align="left"/>let mut _728: std::result::Result&lt;(std::option::Option&lt;u64&gt;, std::option::Option&lt;u64&gt;), error::ErrorCode&gt;;<br align="left"/>let mut _729: u64;<br align="left"/>let mut _730: std::option::Option&lt;(u64, u64)&gt;;<br align="left"/>let mut _731: &amp;ReErased state::user::PerpPosition;<br align="left"/>let mut _732: controller::position::PositionDirection;<br align="left"/>let mut _733: isize;<br align="left"/>let _734: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _735: !;<br align="left"/>let mut _736: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _737: (std::option::Option&lt;u64&gt;, std::option::Option&lt;u64&gt;);<br align="left"/>let _738: i64;<br align="left"/>let mut _739: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _740: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _741: &amp;ReErased mut state::user::PerpPosition;<br align="left"/>let mut _742: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _743: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _744: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _745: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _746: &amp;ReErased controller::position::PositionDelta;<br align="left"/>let _747: &amp;ReErased controller::position::PositionDelta;<br align="left"/>let mut _748: isize;<br align="left"/>let _749: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _750: !;<br align="left"/>let mut _751: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _752: i64;<br align="left"/>let _753: &amp;ReErased mut state::user::PerpPosition;<br align="left"/>let mut _754: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased mut state::user::PerpPosition&gt;;<br align="left"/>let mut _755: std::result::Result&lt;&amp;ReErased mut state::user::PerpPosition, error::ErrorCode&gt;;<br align="left"/>let mut _756: &amp;ReErased mut state::user::User;<br align="left"/>let mut _757: &amp;ReErased mut state::user::User;<br align="left"/>let mut _758: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _759: u16;<br align="left"/>let mut _760: isize;<br align="left"/>let _761: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _762: !;<br align="left"/>let mut _763: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _764: &amp;ReErased mut state::user::PerpPosition;<br align="left"/>let _765: std::option::Option&lt;u64&gt;;<br align="left"/>let _766: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _767: (std::option::Option&lt;u64&gt;, std::option::Option&lt;u64&gt;);<br align="left"/>let mut _768: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (std::option::Option&lt;u64&gt;, std::option::Option&lt;u64&gt;)&gt;;<br align="left"/>let mut _769: std::result::Result&lt;(std::option::Option&lt;u64&gt;, std::option::Option&lt;u64&gt;), error::ErrorCode&gt;;<br align="left"/>let mut _770: u64;<br align="left"/>let mut _771: std::option::Option&lt;(u64, u64)&gt;;<br align="left"/>let mut _772: &amp;ReErased state::user::PerpPosition;<br align="left"/>let mut _773: controller::position::PositionDirection;<br align="left"/>let mut _774: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let mut _775: isize;<br align="left"/>let _776: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _777: !;<br align="left"/>let mut _778: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _779: (std::option::Option&lt;u64&gt;, std::option::Option&lt;u64&gt;);<br align="left"/>let _780: i64;<br align="left"/>let mut _781: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _782: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _783: &amp;ReErased mut state::user::PerpPosition;<br align="left"/>let mut _784: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _785: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _786: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _787: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _788: &amp;ReErased controller::position::PositionDelta;<br align="left"/>let _789: &amp;ReErased controller::position::PositionDelta;<br align="left"/>let mut _790: isize;<br align="left"/>let _791: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _792: !;<br align="left"/>let mut _793: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _794: i64;<br align="left"/>let _795: ();<br align="left"/>let mut _796: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _797: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _798: &amp;ReErased state::user::PerpPosition;<br align="left"/>let mut _799: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _800: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _801: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _802: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _803: isize;<br align="left"/>let _804: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _805: !;<br align="left"/>let mut _806: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _807: ();<br align="left"/>let _808: ();<br align="left"/>let mut _809: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _810: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _811: &amp;ReErased state::user::PerpPosition;<br align="left"/>let mut _812: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _813: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _814: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _815: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _816: isize;<br align="left"/>let _817: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _818: !;<br align="left"/>let mut _819: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _820: ();<br align="left"/>let mut _821: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _822: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _823: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _824: std::option::Option&lt;u64&gt;;<br align="left"/>let _825: state::margin_calculation::MarginCalculation;<br align="left"/>let mut _826: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::margin_calculation::MarginCalculation&gt;;<br align="left"/>let mut _827: std::result::Result&lt;state::margin_calculation::MarginCalculation, error::ErrorCode&gt;;<br align="left"/>let mut _828: &amp;ReErased state::user::User;<br align="left"/>let _829: &amp;ReErased state::user::User;<br align="left"/>let mut _830: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _831: &amp;ReErased &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _832: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _833: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _834: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let _835: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _836: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _837: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _838: state::margin_calculation::MarginContext;<br align="left"/>let mut _839: state::margin_calculation::MarginContext;<br align="left"/>let mut _840: math::margin::MarginRequirementType;<br align="left"/>let mut _841: u16;<br align="left"/>let mut _842: i64;<br align="left"/>let mut _843: isize;<br align="left"/>let _844: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _845: !;<br align="left"/>let mut _846: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _847: state::margin_calculation::MarginCalculation;<br align="left"/>let _848: ();<br align="left"/>let mut _849: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _850: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _851: bool;<br align="left"/>let mut _852: &amp;ReErased state::margin_calculation::MarginCalculation;<br align="left"/>let mut _853: ();<br align="left"/>let _854: error::ErrorCode;<br align="left"/>let _855: ();<br align="left"/>let mut _856: &amp;ReErased str;<br align="left"/>let _857: &amp;ReErased str;<br align="left"/>let mut _858: &amp;ReErased std::string::String;<br align="left"/>let _859: &amp;ReErased std::string::String;<br align="left"/>let _860: std::string::String;<br align="left"/>let _861: std::string::String;<br align="left"/>let mut _862: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _863: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _864: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _865: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _866: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _867: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _868: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _869: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _870: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _871: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _872: &amp;ReErased error::ErrorCode;<br align="left"/>let _873: &amp;ReErased error::ErrorCode;<br align="left"/>let _874: ();<br align="left"/>let mut _875: &amp;ReErased str;<br align="left"/>let _876: &amp;ReErased str;<br align="left"/>let mut _877: error::ErrorCode;<br align="left"/>let mut _878: isize;<br align="left"/>let _879: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _880: !;<br align="left"/>let mut _881: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _882: ();<br align="left"/>let _883: state::margin_calculation::MarginCalculation;<br align="left"/>let mut _884: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::margin_calculation::MarginCalculation&gt;;<br align="left"/>let mut _885: std::result::Result&lt;state::margin_calculation::MarginCalculation, error::ErrorCode&gt;;<br align="left"/>let mut _886: &amp;ReErased state::user::User;<br align="left"/>let _887: &amp;ReErased state::user::User;<br align="left"/>let mut _888: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _889: &amp;ReErased &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _890: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _891: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _892: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let _893: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _894: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _895: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _896: state::margin_calculation::MarginContext;<br align="left"/>let mut _897: state::margin_calculation::MarginContext;<br align="left"/>let mut _898: math::margin::MarginRequirementType;<br align="left"/>let mut _899: u16;<br align="left"/>let mut _900: i64;<br align="left"/>let mut _901: i64;<br align="left"/>let mut _902: bool;<br align="left"/>let mut _903: isize;<br align="left"/>let _904: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _905: !;<br align="left"/>let mut _906: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _907: state::margin_calculation::MarginCalculation;<br align="left"/>let _908: ();<br align="left"/>let mut _909: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _910: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _911: bool;<br align="left"/>let mut _912: &amp;ReErased state::margin_calculation::MarginCalculation;<br align="left"/>let mut _913: ();<br align="left"/>let _914: error::ErrorCode;<br align="left"/>let _915: ();<br align="left"/>let mut _916: &amp;ReErased str;<br align="left"/>let _917: &amp;ReErased str;<br align="left"/>let mut _918: &amp;ReErased std::string::String;<br align="left"/>let _919: &amp;ReErased std::string::String;<br align="left"/>let _920: std::string::String;<br align="left"/>let _921: std::string::String;<br align="left"/>let mut _922: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _923: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _924: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _925: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _926: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _927: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _928: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _929: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _930: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _931: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _932: &amp;ReErased error::ErrorCode;<br align="left"/>let _933: &amp;ReErased error::ErrorCode;<br align="left"/>let _934: ();<br align="left"/>let mut _935: &amp;ReErased str;<br align="left"/>let _936: &amp;ReErased str;<br align="left"/>let mut _937: error::ErrorCode;<br align="left"/>let mut _938: isize;<br align="left"/>let _939: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _940: !;<br align="left"/>let mut _941: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _942: ();<br align="left"/>let mut _943: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _944: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _945: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _946: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _947: &amp;ReErased u16;<br align="left"/>let _948: &amp;ReErased u16;<br align="left"/>let mut _949: isize;<br align="left"/>let _950: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _951: !;<br align="left"/>let mut _952: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _953: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _954: u128;<br align="left"/>let mut _955: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _956: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _957: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _958: ();<br align="left"/>let mut _959: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _960: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _961: bool;<br align="left"/>let mut _962: u128;<br align="left"/>let mut _963: u128;<br align="left"/>let mut _964: ();<br align="left"/>let _965: error::ErrorCode;<br align="left"/>let _966: ();<br align="left"/>let mut _967: &amp;ReErased str;<br align="left"/>let _968: &amp;ReErased str;<br align="left"/>let mut _969: &amp;ReErased std::string::String;<br align="left"/>let _970: &amp;ReErased std::string::String;<br align="left"/>let _971: std::string::String;<br align="left"/>let _972: std::string::String;<br align="left"/>let mut _973: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _974: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _975: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _976: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _977: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _978: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _979: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _980: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _981: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _982: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _983: &amp;ReErased error::ErrorCode;<br align="left"/>let _984: &amp;ReErased error::ErrorCode;<br align="left"/>let _985: ();<br align="left"/>let mut _986: &amp;ReErased str;<br align="left"/>let _987: &amp;ReErased str;<br align="left"/>let mut _988: &amp;ReErased std::string::String;<br align="left"/>let _989: &amp;ReErased std::string::String;<br align="left"/>let _990: std::string::String;<br align="left"/>let _991: std::string::String;<br align="left"/>let mut _992: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _993: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _994: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _995: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _996: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _997: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _998: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _999: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _1000: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _1001: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1002: &amp;ReErased u128;<br align="left"/>let _1003: &amp;ReErased u128;<br align="left"/>let mut _1004: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1005: &amp;ReErased u128;<br align="left"/>let _1006: &amp;ReErased u128;<br align="left"/>let mut _1007: error::ErrorCode;<br align="left"/>let mut _1008: isize;<br align="left"/>let _1009: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1010: !;<br align="left"/>let mut _1011: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1012: ();<br align="left"/>let _1013: ();<br align="left"/>let mut _1014: &amp;ReErased mut state::user::User;<br align="left"/>let mut _1015: &amp;ReErased mut state::user::User;<br align="left"/>let mut _1016: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _1017: u64;<br align="left"/>let _1018: ();<br align="left"/>let mut _1019: &amp;ReErased mut state::user::User;<br align="left"/>let mut _1020: &amp;ReErased mut state::user::User;<br align="left"/>let mut _1021: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _1022: u64;<br align="left"/>let _1023: u32;<br align="left"/>let _1024: u32;<br align="left"/>let mut _1025: &amp;ReErased state::user::User;<br align="left"/>let mut _1026: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _1027: u32;<br align="left"/>let mut _1028: std::option::Option&lt;u32&gt;;<br align="left"/>let mut _1029: std::option::Option&lt;u32&gt;;<br align="left"/>let mut _1030: u32;<br align="left"/>let mut _1031: std::option::Option&lt;u32&gt;;<br align="left"/>let mut _1032: &amp;ReErased mut state::user::User;<br align="left"/>let mut _1033: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _1034: state::user::Order;<br align="left"/>let mut _1035: u64;<br align="left"/>let mut _1036: u64;<br align="left"/>let mut _1037: u32;<br align="left"/>let mut _1038: u16;<br align="left"/>let mut _1039: state::user::OrderStatus;<br align="left"/>let mut _1040: state::user::OrderType;<br align="left"/>let mut _1041: state::user::MarketType;<br align="left"/>let mut _1042: u64;<br align="left"/>let mut _1043: i64;<br align="left"/>let mut _1044: controller::position::PositionDirection;<br align="left"/>let mut _1045: controller::position::PositionDirection;<br align="left"/>let mut _1046: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let mut _1047: state::user::Order;<br align="left"/>let _1048: ();<br align="left"/>let mut _1049: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _1050: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _1051: state::events::OrderRecord;<br align="left"/>let mut _1052: i64;<br align="left"/>let mut _1053: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _1054: state::user::Order;<br align="left"/>let mut _1055: isize;<br align="left"/>let _1056: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1057: !;<br align="left"/>let mut _1058: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1059: ();<br align="left"/>let _1060: u32;<br align="left"/>let _1061: u32;<br align="left"/>let mut _1062: &amp;ReErased state::user::User;<br align="left"/>let mut _1063: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _1064: u32;<br align="left"/>let mut _1065: std::option::Option&lt;u32&gt;;<br align="left"/>let mut _1066: std::option::Option&lt;u32&gt;;<br align="left"/>let mut _1067: u32;<br align="left"/>let mut _1068: std::option::Option&lt;u32&gt;;<br align="left"/>let mut _1069: &amp;ReErased mut state::user::User;<br align="left"/>let mut _1070: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _1071: state::user::Order;<br align="left"/>let mut _1072: u64;<br align="left"/>let mut _1073: u64;<br align="left"/>let mut _1074: u32;<br align="left"/>let mut _1075: u16;<br align="left"/>let mut _1076: state::user::OrderStatus;<br align="left"/>let mut _1077: state::user::OrderType;<br align="left"/>let mut _1078: state::user::MarketType;<br align="left"/>let mut _1079: u64;<br align="left"/>let mut _1080: i64;<br align="left"/>let mut _1081: controller::position::PositionDirection;<br align="left"/>let mut _1082: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let mut _1083: controller::position::PositionDirection;<br align="left"/>let mut _1084: state::user::Order;<br align="left"/>let _1085: ();<br align="left"/>let mut _1086: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _1087: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _1088: state::events::OrderRecord;<br align="left"/>let mut _1089: i64;<br align="left"/>let mut _1090: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _1091: state::user::Order;<br align="left"/>let mut _1092: isize;<br align="left"/>let _1093: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1094: !;<br align="left"/>let mut _1095: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1096: ();<br align="left"/>let _1097: u64;<br align="left"/>let _1098: u64;<br align="left"/>let mut _1099: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _1100: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _1101: u64;<br align="left"/>let mut _1102: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _1103: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _1104: u64;<br align="left"/>let mut _1105: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _1106: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _1107: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _1108: state::events::OrderActionRecord;<br align="left"/>let mut _1109: i64;<br align="left"/>let mut _1110: state::events::OrderAction;<br align="left"/>let mut _1111: state::events::OrderActionExplanation;<br align="left"/>let mut _1112: u16;<br align="left"/>let mut _1113: state::user::MarketType;<br align="left"/>let mut _1114: std::option::Option&lt;anchor_lang::prelude::Pubkey&gt;;<br align="left"/>let mut _1115: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _1116: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _1117: u64;<br align="left"/>let mut _1118: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _1119: u64;<br align="left"/>let mut _1120: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _1121: u64;<br align="left"/>let mut _1122: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _1123: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _1124: std::option::Option&lt;u32&gt;;<br align="left"/>let mut _1125: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _1126: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _1127: std::option::Option&lt;anchor_lang::prelude::Pubkey&gt;;<br align="left"/>let mut _1128: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _1129: std::option::Option&lt;u32&gt;;<br align="left"/>let mut _1130: u32;<br align="left"/>let mut _1131: std::option::Option&lt;controller::position::PositionDirection&gt;;<br align="left"/>let mut _1132: controller::position::PositionDirection;<br align="left"/>let mut _1133: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let mut _1134: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _1135: u64;<br align="left"/>let mut _1136: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _1137: u64;<br align="left"/>let mut _1138: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _1139: u64;<br align="left"/>let mut _1140: std::option::Option&lt;anchor_lang::prelude::Pubkey&gt;;<br align="left"/>let mut _1141: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _1142: std::option::Option&lt;u32&gt;;<br align="left"/>let mut _1143: u32;<br align="left"/>let mut _1144: std::option::Option&lt;controller::position::PositionDirection&gt;;<br align="left"/>let mut _1145: controller::position::PositionDirection;<br align="left"/>let mut _1146: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _1147: u64;<br align="left"/>let mut _1148: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _1149: u64;<br align="left"/>let mut _1150: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _1151: u64;<br align="left"/>let mut _1152: i64;<br align="left"/>let mut _1153: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _1154: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _1155: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _1156: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _1157: std::option::Option&lt;u64&gt;;<br align="left"/>let _1158: ();<br align="left"/>let mut _1159: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _1160: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _1161: state::events::OrderActionRecord;<br align="left"/>let mut _1162: isize;<br align="left"/>let _1163: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1164: !;<br align="left"/>let mut _1165: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1166: ();<br align="left"/>let mut _1167: ();<br align="left"/>let mut _1168: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1169: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1170: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1171: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1172: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1173: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1174: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1175: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1176: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1177: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1178: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1179: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1180: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1181: &amp;ReErased mut instructions::user::TransferPerpPosition&lt;ReErased&gt;;<br align="left"/>let mut _1182: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _1183: &amp;ReErased mut instructions::user::TransferPerpPosition&lt;ReErased&gt;;<br align="left"/>let mut _1184: &amp;ReErased mut instructions::user::TransferPerpPosition&lt;ReErased&gt;;<br align="left"/>let mut _1185: &amp;ReErased mut instructions::user::TransferPerpPosition&lt;ReErased&gt;;<br align="left"/>let mut _1186: &amp;ReErased mut instructions::user::TransferPerpPosition&lt;ReErased&gt;;<br align="left"/>let mut _1187: &amp;ReErased mut instructions::user::TransferPerpPosition&lt;ReErased&gt;;<br align="left"/>let mut _1188: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _1189: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _1190: &amp;ReErased mut instructions::user::TransferPerpPosition&lt;ReErased&gt;;<br align="left"/>let mut _1191: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _1192: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _1193: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _1194: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _1195: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _1196: bool;<br align="left"/>let mut _1197: bool;<br align="left"/>let mut _1198: isize;<br align="left"/>let mut _1199: isize;<br align="left"/>let mut _1200: isize;<br align="left"/>let mut _1201: isize;<br align="left"/>let mut _1202: isize;<br align="left"/>let mut _1203: isize;<br align="left"/>let mut _1204: isize;<br align="left"/>let mut _1205: isize;<br align="left"/>let mut _1206: isize;<br align="left"/>let mut _1207: isize;<br align="left"/>let mut _1208: isize;<br align="left"/>let mut _1209: isize;<br align="left"/>let mut _1210: isize;<br align="left"/>let mut _1211: isize;<br align="left"/>let mut _1212: isize;<br align="left"/>let mut _1213: isize;<br align="left"/>let mut _1214: isize;<br align="left"/>let mut _1215: isize;<br align="left"/>let mut _1216: isize;<br align="left"/>let mut _1217: isize;<br align="left"/>let mut _1218: isize;<br align="left"/>let mut _1219: isize;<br align="left"/>let mut _1220: isize;<br align="left"/>let mut _1221: isize;<br align="left"/>let mut _1222: isize;<br align="left"/>let mut _1223: isize;<br align="left"/>let mut _1224: isize;<br align="left"/>let mut _1225: isize;<br align="left"/>let mut _1226: isize;<br align="left"/>let mut _1227: isize;<br align="left"/>let mut _1228: isize;<br align="left"/>let mut _1229: isize;<br align="left"/>let mut _1230: isize;<br align="left"/>let mut _1231: isize;<br align="left"/>let mut _1232: isize;<br align="left"/>let mut _1233: isize;<br align="left"/>let mut _1234: isize;<br align="left"/>let mut _1235: isize;<br align="left"/>let mut _1236: isize;<br align="left"/>let mut _1237: isize;<br align="left"/>let mut _1238: isize;<br align="left"/>let mut _1239: isize;<br align="left"/>let mut _1240: isize;<br align="left"/>let mut _1241: isize;<br align="left"/>let mut _1242: isize;<br align="left"/>let mut _1243: isize;<br align="left"/>let mut _1244: isize;<br align="left"/>let mut _1245: isize;<br align="left"/>let mut _1246: isize;<br align="left"/>let mut _1247: isize;<br align="left"/>let mut _1248: isize;<br align="left"/>let mut _1249: isize;<br align="left"/>let mut _1250: isize;<br align="left"/>let mut _1251: isize;<br align="left"/>let mut _1252: isize;<br align="left"/>let mut _1253: isize;<br align="left"/>let mut _1254: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _1255: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _1256: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug market_index =&gt; _2;<br align="left"/>debug amount =&gt; _3;<br align="left"/>debug residual =&gt; _10;<br align="left"/>debug val =&gt; _13;<br align="left"/>debug to_user_key =&gt; _14;<br align="left"/>debug from_user_key =&gt; _16;<br align="left"/>debug state =&gt; _18;<br align="left"/>debug clock =&gt; _19;<br align="left"/>debug residual =&gt; _23;<br align="left"/>debug val =&gt; _26;<br align="left"/>debug slot =&gt; _27;<br align="left"/>debug to_user =&gt; _28;<br align="left"/>debug residual =&gt; _36;<br align="left"/>debug val =&gt; _39;<br align="left"/>debug from_user =&gt; _40;<br align="left"/>debug residual =&gt; _48;<br align="left"/>debug val =&gt; _51;<br align="left"/>debug clock =&gt; _52;<br align="left"/>debug residual =&gt; _56;<br align="left"/>debug val =&gt; _59;<br align="left"/>debug now =&gt; _60;<br align="left"/>debug error_code =&gt; _69;<br align="left"/>debug res =&gt; _76;<br align="left"/>debug residual =&gt; _94;<br align="left"/>debug val =&gt; _97;<br align="left"/>debug error_code =&gt; _106;<br align="left"/>debug res =&gt; _113;<br align="left"/>debug residual =&gt; _131;<br align="left"/>debug val =&gt; _134;<br align="left"/>debug error_code =&gt; _142;<br align="left"/>debug res =&gt; _149;<br align="left"/>debug residual =&gt; _167;<br align="left"/>debug val =&gt; _170;<br align="left"/>debug perp_market_map =&gt; _171;<br align="left"/>debug spot_market_map =&gt; _172;<br align="left"/>debug oracle_map =&gt; _173;<br align="left"/>debug residual =&gt; _195;<br align="left"/>debug val =&gt; _198;<br align="left"/>debug residual =&gt; _214;<br align="left"/>debug val =&gt; _217;<br align="left"/>debug residual =&gt; _237;<br align="left"/>debug val =&gt; _240;<br align="left"/>debug residual =&gt; _243;<br align="left"/>debug val =&gt; _246;<br align="left"/>debug residual =&gt; _266;<br align="left"/>debug val =&gt; _269;<br align="left"/>debug residual =&gt; _272;<br align="left"/>debug val =&gt; _275;<br align="left"/>debug oi_before =&gt; _276;<br align="left"/>debug oracle_price =&gt; _277;<br align="left"/>debug step_size =&gt; _278;<br align="left"/>debug tick_size =&gt; _279;<br align="left"/>debug perp_market =&gt; _281;<br align="left"/>debug residual =&gt; _288;<br align="left"/>debug val =&gt; _291;<br align="left"/>debug oracle_price_data =&gt; _296;<br align="left"/>debug oracle_validity =&gt; _297;<br align="left"/>debug residual =&gt; _320;<br align="left"/>debug val =&gt; _323;<br align="left"/>debug residual =&gt; _328;<br align="left"/>debug val =&gt; _331;<br align="left"/>debug residual =&gt; _348;<br align="left"/>debug val =&gt; _351;<br align="left"/>debug error_code =&gt; _353;<br align="left"/>debug res =&gt; _360;<br align="left"/>debug residual =&gt; _378;<br align="left"/>debug val =&gt; _381;<br align="left"/>debug error_code =&gt; _391;<br align="left"/>debug res =&gt; _398;<br align="left"/>debug residual =&gt; _416;<br align="left"/>debug val =&gt; _419;<br align="left"/>debug transfer_amount =&gt; _421;<br align="left"/>debug direction_to_close =&gt; _422;<br align="left"/>debug amount =&gt; _425;<br align="left"/>debug existing_position =&gt; _426;<br align="left"/>debug residual =&gt; _434;<br align="left"/>debug val =&gt; _437;<br align="left"/>debug existing_base_asset_amount =&gt; _438;<br align="left"/>debug error_code =&gt; _448;<br align="left"/>debug res =&gt; _455;<br align="left"/>debug residual =&gt; _473;<br align="left"/>debug val =&gt; _476;<br align="left"/>debug error_code =&gt; _486;<br align="left"/>debug res =&gt; _493;<br align="left"/>debug residual =&gt; _511;<br align="left"/>debug val =&gt; _514;<br align="left"/>debug residual =&gt; _525;<br align="left"/>debug val =&gt; _528;<br align="left"/>debug error_code =&gt; _530;<br align="left"/>debug res =&gt; _537;<br align="left"/>debug residual =&gt; _555;<br align="left"/>debug val =&gt; _558;<br align="left"/>debug position =&gt; _562;<br align="left"/>debug residual =&gt; _570;<br align="left"/>debug val =&gt; _573;<br align="left"/>debug error_code =&gt; _580;<br align="left"/>debug res =&gt; _587;<br align="left"/>debug residual =&gt; _605;<br align="left"/>debug val =&gt; _608;<br align="left"/>debug transfer_price =&gt; _612;<br align="left"/>debug residual =&gt; _621;<br align="left"/>debug val =&gt; _624;<br align="left"/>debug residual =&gt; _627;<br align="left"/>debug val =&gt; _630;<br align="left"/>debug base_asset_value =&gt; _631;<br align="left"/>debug residual =&gt; _642;<br align="left"/>debug val =&gt; _645;<br align="left"/>debug residual =&gt; _648;<br align="left"/>debug val =&gt; _651;<br align="left"/>debug residual =&gt; _653;<br align="left"/>debug val =&gt; _656;<br align="left"/>debug transfer_amount_abs =&gt; _657;<br align="left"/>debug from_user_position_delta =&gt; _659;<br align="left"/>debug residual =&gt; _666;<br align="left"/>debug val =&gt; _669;<br align="left"/>debug to_user_position_delta =&gt; _670;<br align="left"/>debug residual =&gt; _678;<br align="left"/>debug val =&gt; _681;<br align="left"/>debug to_user_existing_position_direction =&gt; _682;<br align="left"/>debug residual =&gt; _692;<br align="left"/>debug val =&gt; _695;<br align="left"/>debug from_existing_quote_entry_amount =&gt; _696;<br align="left"/>debug from_existing_base_asset_amount =&gt; _697;<br align="left"/>debug to_existing_quote_entry_amount =&gt; _698;<br align="left"/>debug to_existing_base_asset_amount =&gt; _699;<br align="left"/>debug market =&gt; _701;<br align="left"/>debug residual =&gt; _708;<br align="left"/>debug val =&gt; _711;<br align="left"/>debug from_user_position =&gt; _712;<br align="left"/>debug residual =&gt; _720;<br align="left"/>debug val =&gt; _723;<br align="left"/>debug from_existing_quote_entry_amount =&gt; _724;<br align="left"/>debug from_existing_base_asset_amount =&gt; _725;<br align="left"/>debug residual =&gt; _734;<br align="left"/>debug val =&gt; _737;<br align="left"/>debug residual =&gt; _749;<br align="left"/>debug val =&gt; _752;<br align="left"/>debug to_user_position =&gt; _753;<br align="left"/>debug residual =&gt; _761;<br align="left"/>debug val =&gt; _764;<br align="left"/>debug to_existing_quote_entry_amount =&gt; _765;<br align="left"/>debug to_existing_base_asset_amount =&gt; _766;<br align="left"/>debug residual =&gt; _776;<br align="left"/>debug val =&gt; _779;<br align="left"/>debug residual =&gt; _791;<br align="left"/>debug val =&gt; _794;<br align="left"/>debug residual =&gt; _804;<br align="left"/>debug val =&gt; _807;<br align="left"/>debug residual =&gt; _817;<br align="left"/>debug val =&gt; _820;<br align="left"/>debug from_user_margin_calculation =&gt; _825;<br align="left"/>debug residual =&gt; _844;<br align="left"/>debug val =&gt; _847;<br align="left"/>debug error_code =&gt; _854;<br align="left"/>debug res =&gt; _861;<br align="left"/>debug residual =&gt; _879;<br align="left"/>debug val =&gt; _882;<br align="left"/>debug to_user_margin_requirement =&gt; _883;<br align="left"/>debug residual =&gt; _904;<br align="left"/>debug val =&gt; _907;<br align="left"/>debug error_code =&gt; _914;<br align="left"/>debug res =&gt; _921;<br align="left"/>debug residual =&gt; _939;<br align="left"/>debug val =&gt; _942;<br align="left"/>debug perp_market =&gt; _943;<br align="left"/>debug residual =&gt; _950;<br align="left"/>debug val =&gt; _953;<br align="left"/>debug oi_after =&gt; _954;<br align="left"/>debug error_code =&gt; _965;<br align="left"/>debug res =&gt; _972;<br align="left"/>debug res =&gt; _991;<br align="left"/>debug residual =&gt; _1009;<br align="left"/>debug val =&gt; _1012;<br align="left"/>debug from_user_order_id =&gt; _1023;<br align="left"/>debug current_id =&gt; _1024;<br align="left"/>debug from_user_order =&gt; _1034;<br align="left"/>debug residual =&gt; _1056;<br align="left"/>debug val =&gt; _1059;<br align="left"/>debug to_user_order_id =&gt; _1060;<br align="left"/>debug current_id =&gt; _1061;<br align="left"/>debug to_user_order =&gt; _1071;<br align="left"/>debug residual =&gt; _1093;<br align="left"/>debug val =&gt; _1096;<br align="left"/>debug fill_record_id =&gt; _1097;<br align="left"/>debug current_id =&gt; _1098;<br align="left"/>debug fill_record =&gt; _1108;<br align="left"/>debug residual =&gt; _1163;<br align="left"/>debug val =&gt; _1166;<br align="left"/>>;
    bb0__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_1197 = const false<br/>_1196 = const false<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_1181 = deref_copy (_1.1: &amp;mut instructions::user::TransferPerpPosition&lt;'_&gt;)<br/>_8 = &amp;((*_1181).4: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_1182 = deref_copy (*_8)<br/>_1254 = (((_1182.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_7 = &amp;(*_1254)<br/></td></tr><tr><td align="left">_6 = constraints::fill_not_paused(move _7)</td></tr></table>>];
    bb1__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/></td></tr><tr><td align="left">_5 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _6)</td></tr></table>>];
    bb2__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_9 = discriminant(_5)<br/></td></tr><tr><td align="left">switchInt(move _9)</td></tr></table>>];
    bb3__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = ((_5 as Continue).0: ())<br/>_4 = _13<br/>StorageDead(_13)<br/>_1198 = discriminant(_5)<br/>StorageDead(_8)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_1183 = deref_copy (_1.1: &amp;mut instructions::user::TransferPerpPosition&lt;'_&gt;)<br/>_15 = &amp;((*_1183).1: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_14 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt; as anchor_lang::Key&gt;::key(move _15)</td></tr></table>>];
    bb4__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>_10 = move ((_5 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_12)<br/>_12 = move _10<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _12)</td></tr></table>>];
    bb6__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_10)<br/>_1240 = discriminant(_5)<br/>StorageDead(_8)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_1184 = deref_copy (_1.1: &amp;mut instructions::user::TransferPerpPosition&lt;'_&gt;)<br/>_17 = &amp;((*_1184).0: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_16 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt; as anchor_lang::Key&gt;::key(move _17)</td></tr></table>>];
    bb8__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageLive(_18)<br/>_1185 = deref_copy (_1.1: &amp;mut instructions::user::TransferPerpPosition&lt;'_&gt;)<br/>_18 = &amp;((*_1185).4: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/></td></tr><tr><td align="left">_21 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb9__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left">_20 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _21)</td></tr></table>>];
    bb10__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>_22 = discriminant(_20)<br/></td></tr><tr><td align="left">switchInt(move _22)</td></tr></table>>];
    bb11__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_26)<br/>_26 = move ((_20 as Continue).0: anchor_lang::prelude::Clock)<br/>_19 = move _26<br/>StorageDead(_26)<br/>_1200 = discriminant(_20)<br/>StorageDead(_20)<br/>StorageLive(_27)<br/>_27 = (_19.0: u64)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>_1186 = deref_copy (_1.1: &amp;mut instructions::user::TransferPerpPosition&lt;'_&gt;)<br/>_33 = &amp;((*_1186).1: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_32 = anchor_lang::prelude::AccountLoader::&lt;'_, User&gt;::load_mut(move _33)</td></tr></table>>];
    bb12__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_23)<br/>_23 = move ((_20 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_25)<br/>_25 = move _23<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _25)</td></tr></table>>];
    bb13__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_23)<br/>_1238 = discriminant(_20)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageLive(_34)<br/>_34 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_31 = std::result::Result::&lt;RefMut&lt;'_, User&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _32, move _34)</td></tr></table>>];
    bb15__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">_30 = &lt;std::result::Result&lt;RefMut&lt;'_, User&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _31)</td></tr></table>>];
    bb16__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>_35 = discriminant(_30)<br/></td></tr><tr><td align="left">switchInt(move _35)</td></tr></table>>];
    bb17__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_39)<br/>_39 = move ((_30 as Continue).0: std::cell::RefMut&lt;'_, state::user::User&gt;)<br/>_29 = move _39<br/>StorageDead(_39)<br/>_28 = &amp;mut _29<br/>_1204 = discriminant(_30)<br/>StorageDead(_30)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>_1187 = deref_copy (_1.1: &amp;mut instructions::user::TransferPerpPosition&lt;'_&gt;)<br/>_45 = &amp;((*_1187).0: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_44 = anchor_lang::prelude::AccountLoader::&lt;'_, User&gt;::load_mut(move _45)</td></tr></table>>];
    bb18__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_36)<br/>_36 = ((_30 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_38)<br/>_38 = _36<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _38)</td></tr></table>>];
    bb19__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_36)<br/>_1202 = discriminant(_30)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageLive(_46)<br/>_46 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_43 = std::result::Result::&lt;RefMut&lt;'_, User&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _44, move _46)</td></tr></table>>];
    bb21__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">_42 = &lt;std::result::Result&lt;RefMut&lt;'_, User&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _43)</td></tr></table>>];
    bb22__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>_47 = discriminant(_42)<br/></td></tr><tr><td align="left">switchInt(move _47)</td></tr></table>>];
    bb23__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_51)<br/>_51 = move ((_42 as Continue).0: std::cell::RefMut&lt;'_, state::user::User&gt;)<br/>_41 = move _51<br/>StorageDead(_51)<br/>_40 = &amp;mut _41<br/>_1208 = discriminant(_42)<br/>StorageDead(_42)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/></td></tr><tr><td align="left">_54 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb24__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_48)<br/>_48 = ((_42 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_50)<br/>_50 = _48<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _50)</td></tr></table>>];
    bb25__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageDead(_48)<br/>_1206 = discriminant(_42)<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left">_53 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _54)</td></tr></table>>];
    bb27__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>_55 = discriminant(_53)<br/></td></tr><tr><td align="left">switchInt(move _55)</td></tr></table>>];
    bb28__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_59)<br/>_59 = move ((_53 as Continue).0: anchor_lang::prelude::Clock)<br/>_52 = move _59<br/>StorageDead(_59)<br/>_1210 = discriminant(_53)<br/>StorageDead(_53)<br/>StorageLive(_60)<br/>_60 = (_52.4: i64)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>_67 = &amp;(*_28)<br/></td></tr><tr><td align="left">_66 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _67)</td></tr></table>>];
    bb29__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_56)<br/>_56 = move ((_53 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_58)<br/>_58 = move _56<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _58)</td></tr></table>>];
    bb30__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageDead(_56)<br/>_1236 = discriminant(_53)<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">_65 = &amp;(*_66)<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">_64 = User::is_bankrupt(move _65)</td></tr></table>>];
    bb32__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left">switchInt(move _64)</td></tr></table>>];
    bb33__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageDead(_66)<br/>StorageLive(_69)<br/>_69 = error::ErrorCode::UserBankrupt<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>_1180 = const _<br/>_80 = &amp;(*_1180)<br/>_79 = &amp;(*_80)<br/>_78 = move _79 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_79)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>_88 = &amp;_69<br/>_87 = &amp;(*_88)<br/></td></tr><tr><td align="left">_86 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _87)</td></tr></table>>];
    bb34__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageDead(_66)<br/>StorageLive(_68)<br/>_68 = ()<br/>_63 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _68)<br/>StorageDead(_68)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>_85 = [move _86]<br/>StorageDead(_86)<br/>_84 = &amp;_85<br/>_83 = &amp;(*_84)<br/>_82 = move _83 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_83)<br/></td></tr><tr><td align="left">_77 = Arguments::&lt;'_&gt;::new_v1(move _78, move _82)</td></tr></table>>];
    bb36__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>StorageDead(_78)<br/></td></tr><tr><td align="left">_76 = format(move _77)</td></tr></table>>];
    bb37__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>StorageDead(_88)<br/>StorageDead(_85)<br/>StorageDead(_84)<br/>StorageDead(_80)<br/>_75 = move _76<br/>StorageDead(_76)<br/>_74 = &amp;_75<br/>_73 = &amp;(*_74)<br/></td></tr><tr><td align="left">_72 = &lt;String as Deref&gt;::deref(move _73)</td></tr></table>>];
    bb38__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">_71 = &amp;(*_72)<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">_70 = solana_program::log::sol_log(move _71)</td></tr></table>>];
    bb39__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/></td></tr><tr><td align="left">drop(_75)</td></tr></table>>];
    bb40__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_74)<br/>StorageDead(_72)<br/>StorageDead(_70)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>_91 = const &quot;to_user bankrupt&quot;<br/>_90 = &amp;(*_91)<br/></td></tr><tr><td align="left">_89 = solana_program::log::sol_log(move _90)</td></tr></table>>];
    bb41__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>StorageDead(_91)<br/>StorageDead(_89)<br/>StorageLive(_92)<br/>_92 = _69<br/>_63 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _92)<br/>StorageDead(_92)<br/>StorageDead(_69)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/></td></tr><tr><td align="left">_62 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _63)</td></tr></table>>];
    bb43__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>_93 = discriminant(_62)<br/></td></tr><tr><td align="left">switchInt(move _93)</td></tr></table>>];
    bb44__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_97)<br/>_97 = ((_62 as Continue).0: ())<br/>_61 = _97<br/>StorageDead(_97)<br/>StorageDead(_62)<br/>StorageDead(_61)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>_104 = &amp;(*_40)<br/></td></tr><tr><td align="left">_103 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _104)</td></tr></table>>];
    bb45__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageLive(_94)<br/>_94 = ((_62 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_96)<br/>_96 = _94<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _96)</td></tr></table>>];
    bb46__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>StorageDead(_94)<br/>StorageDead(_62)<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">_102 = &amp;(*_103)<br/>StorageDead(_104)<br/></td></tr><tr><td align="left">_101 = User::is_bankrupt(move _102)</td></tr></table>>];
    bb48__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left">switchInt(move _101)</td></tr></table>>];
    bb49__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>StorageDead(_103)<br/>StorageLive(_106)<br/>_106 = error::ErrorCode::UserBankrupt<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>_1179 = const _<br/>_117 = &amp;(*_1179)<br/>_116 = &amp;(*_117)<br/>_115 = move _116 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_116)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>_125 = &amp;_106<br/>_124 = &amp;(*_125)<br/></td></tr><tr><td align="left">_123 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _124)</td></tr></table>>];
    bb50__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>StorageDead(_103)<br/>StorageLive(_105)<br/>_105 = ()<br/>_100 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _105)<br/>StorageDead(_105)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb51__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_124)<br/>_122 = [move _123]<br/>StorageDead(_123)<br/>_121 = &amp;_122<br/>_120 = &amp;(*_121)<br/>_119 = move _120 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_120)<br/></td></tr><tr><td align="left">_114 = Arguments::&lt;'_&gt;::new_v1(move _115, move _119)</td></tr></table>>];
    bb52__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/>StorageDead(_115)<br/></td></tr><tr><td align="left">_113 = format(move _114)</td></tr></table>>];
    bb53__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/>StorageDead(_125)<br/>StorageDead(_122)<br/>StorageDead(_121)<br/>StorageDead(_117)<br/>_112 = move _113<br/>StorageDead(_113)<br/>_111 = &amp;_112<br/>_110 = &amp;(*_111)<br/></td></tr><tr><td align="left">_109 = &lt;String as Deref&gt;::deref(move _110)</td></tr></table>>];
    bb54__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">_108 = &amp;(*_109)<br/>StorageDead(_110)<br/></td></tr><tr><td align="left">_107 = solana_program::log::sol_log(move _108)</td></tr></table>>];
    bb55__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/></td></tr><tr><td align="left">drop(_112)</td></tr></table>>];
    bb56__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>StorageDead(_111)<br/>StorageDead(_109)<br/>StorageDead(_107)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>_128 = const &quot;from_user bankrupt&quot;<br/>_127 = &amp;(*_128)<br/></td></tr><tr><td align="left">_126 = solana_program::log::sol_log(move _127)</td></tr></table>>];
    bb57__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/>StorageDead(_128)<br/>StorageDead(_126)<br/>StorageLive(_129)<br/>_129 = _106<br/>_100 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _129)<br/>StorageDead(_129)<br/>StorageDead(_106)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb58__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/></td></tr><tr><td align="left">_99 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _100)</td></tr></table>>];
    bb59__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>_130 = discriminant(_99)<br/></td></tr><tr><td align="left">switchInt(move _130)</td></tr></table>>];
    bb60__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageLive(_134)<br/>_134 = ((_99 as Continue).0: ())<br/>_98 = _134<br/>StorageDead(_134)<br/>StorageDead(_99)<br/>StorageDead(_98)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>_139 = &amp;_16<br/>StorageLive(_140)<br/>_140 = &amp;_14<br/></td></tr><tr><td align="left">_138 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _139, move _140)</td></tr></table>>];
    bb61__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageLive(_131)<br/>_131 = ((_99 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_133)<br/>_133 = _131<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _133)</td></tr></table>>];
    bb62__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/>StorageDead(_131)<br/>StorageDead(_99)<br/>StorageDead(_98)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb63__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left">switchInt(move _138)</td></tr></table>>];
    bb64__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_140)<br/>StorageDead(_139)<br/>StorageLive(_141)<br/>_141 = ()<br/>_137 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _141)<br/>StorageDead(_141)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb65__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_140)<br/>StorageDead(_139)<br/>StorageLive(_142)<br/>_142 = error::ErrorCode::CantTransferBetweenSameUserAccount<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>StorageLive(_152)<br/>StorageLive(_153)<br/>_1178 = const _<br/>_153 = &amp;(*_1178)<br/>_152 = &amp;(*_153)<br/>_151 = move _152 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_152)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>StorageLive(_161)<br/>_161 = &amp;_142<br/>_160 = &amp;(*_161)<br/></td></tr><tr><td align="left">_159 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _160)</td></tr></table>>];
    bb66__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_160)<br/>_158 = [move _159]<br/>StorageDead(_159)<br/>_157 = &amp;_158<br/>_156 = &amp;(*_157)<br/>_155 = move _156 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_156)<br/></td></tr><tr><td align="left">_150 = Arguments::&lt;'_&gt;::new_v1(move _151, move _155)</td></tr></table>>];
    bb67__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_155)<br/>StorageDead(_151)<br/></td></tr><tr><td align="left">_149 = format(move _150)</td></tr></table>>];
    bb68__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_150)<br/>StorageDead(_161)<br/>StorageDead(_158)<br/>StorageDead(_157)<br/>StorageDead(_153)<br/>_148 = move _149<br/>StorageDead(_149)<br/>_147 = &amp;_148<br/>_146 = &amp;(*_147)<br/></td></tr><tr><td align="left">_145 = &lt;String as Deref&gt;::deref(move _146)</td></tr></table>>];
    bb69__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">_144 = &amp;(*_145)<br/>StorageDead(_146)<br/></td></tr><tr><td align="left">_143 = solana_program::log::sol_log(move _144)</td></tr></table>>];
    bb70__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_144)<br/></td></tr><tr><td align="left">drop(_148)</td></tr></table>>];
    bb71__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_148)<br/>StorageDead(_147)<br/>StorageDead(_145)<br/>StorageDead(_143)<br/>StorageLive(_162)<br/>StorageLive(_163)<br/>StorageLive(_164)<br/>_164 = const &quot;cant transfer between the same user account&quot;<br/>_163 = &amp;(*_164)<br/></td></tr><tr><td align="left">_162 = solana_program::log::sol_log(move _163)</td></tr></table>>];
    bb72__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_163)<br/>StorageDead(_164)<br/>StorageDead(_162)<br/>StorageLive(_165)<br/>_165 = _142<br/>_137 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _165)<br/>StorageDead(_165)<br/>StorageDead(_142)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb73__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/></td></tr><tr><td align="left">_136 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _137)</td></tr></table>>];
    bb74__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_137)<br/>_166 = discriminant(_136)<br/></td></tr><tr><td align="left">switchInt(move _166)</td></tr></table>>];
    bb75__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageLive(_170)<br/>_170 = ((_136 as Continue).0: ())<br/>_135 = _170<br/>StorageDead(_170)<br/>StorageDead(_136)<br/>StorageDead(_135)<br/>StorageLive(_174)<br/>StorageLive(_175)<br/>StorageLive(_176)<br/>StorageLive(_177)<br/>StorageLive(_178)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>StorageLive(_181)<br/>_1188 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_181 = &amp;(*_1188)<br/></td></tr><tr><td align="left">_180 = core::slice::&lt;impl [anchor_lang::prelude::AccountInfo&lt;'_&gt;]&gt;::iter(move _181)</td></tr></table>>];
    bb76__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageLive(_167)<br/>_167 = ((_136 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_169)<br/>_169 = _167<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _169)</td></tr></table>>];
    bb77__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_169)<br/>StorageDead(_167)<br/>StorageDead(_136)<br/>StorageDead(_135)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb78__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_181)<br/></td></tr><tr><td align="left">_179 = &lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as Iterator&gt;::peekable(move _180)</td></tr></table>>];
    bb79__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_180)<br/>_178 = &amp;mut _179<br/>_177 = &amp;mut (*_178)<br/>StorageLive(_182)<br/>StorageLive(_183)<br/>StorageLive(_184)<br/>StorageLive(_185)<br/>_185 = _2<br/></td></tr><tr><td align="left">_184 = get_writable_perp_market_set(move _185)</td></tr></table>>];
    bb80__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_185)<br/>_183 = &amp;_184<br/>_182 = &amp;(*_183)<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/></td></tr><tr><td align="left">_188 = BTreeSet::&lt;u16&gt;::new()</td></tr></table>>];
    bb81__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">_187 = &amp;_188<br/>_186 = &amp;(*_187)<br/>StorageLive(_189)<br/>_189 = (_52.0: u64)<br/>StorageLive(_190)<br/>StorageLive(_191)<br/>StorageLive(_192)<br/>StorageLive(_193)<br/>_1189 = deref_copy (*_18)<br/>_1255 = (((_1189.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_193 = &amp;(*_1255)<br/></td></tr><tr><td align="left">_192 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _193)</td></tr></table>>];
    bb82__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_193)<br/>_191 = ((*_192).7: state::state::OracleGuardRails)<br/>_190 = Option::&lt;state::state::OracleGuardRails&gt;::Some(move _191)<br/>StorageDead(_191)<br/></td></tr><tr><td align="left">_176 = load_maps(move _177, move _182, move _186, move _189, move _190)</td></tr></table>>];
    bb83__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_190)<br/>StorageDead(_189)<br/>StorageDead(_186)<br/>StorageDead(_182)<br/>StorageDead(_177)<br/></td></tr><tr><td align="left">_175 = &lt;std::result::Result&lt;AccountMaps&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _176)</td></tr></table>>];
    bb84__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_176)<br/>_194 = discriminant(_175)<br/></td></tr><tr><td align="left">switchInt(move _194)</td></tr></table>>];
    bb85__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageLive(_198)<br/>_198 = move ((_175 as Continue).0: instructions::optional_accounts::AccountMaps&lt;'_&gt;)<br/>_174 = move _198<br/>StorageDead(_198)<br/>StorageLive(_171)<br/>_171 = move (_174.0: state::perp_market_map::PerpMarketMap&lt;'_&gt;)<br/>StorageLive(_172)<br/>_172 = move (_174.1: state::spot_market_map::SpotMarketMap&lt;'_&gt;)<br/>StorageLive(_173)<br/>_173 = move (_174.2: state::oracle_map::OracleMap&lt;'_&gt;)<br/>_1214 = discriminant(_175)<br/>StorageDead(_192)<br/></td></tr><tr><td align="left">drop(_188)</td></tr></table>>];
    bb86__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageLive(_195)<br/>_195 = ((_175 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_197)<br/>_197 = _195<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _197)</td></tr></table>>];
    bb87__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_197)<br/>StorageDead(_195)<br/>_1212 = discriminant(_175)<br/>StorageDead(_192)<br/></td></tr><tr><td align="left">drop(_188)</td></tr></table>>];
    bb88__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_188)<br/>StorageDead(_187)<br/></td></tr><tr><td align="left">drop(_184)</td></tr></table>>];
    bb89__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_184)<br/>StorageDead(_183)<br/>StorageDead(_179)<br/>StorageDead(_178)<br/>StorageDead(_175)<br/>StorageDead(_174)<br/>StorageLive(_199)<br/>StorageLive(_200)<br/>StorageLive(_201)<br/>StorageLive(_202)<br/>_202 = _2<br/>StorageLive(_203)<br/>StorageLive(_204)<br/>_204 = &amp;_171<br/>_203 = &amp;(*_204)<br/>StorageLive(_205)<br/>StorageLive(_206)<br/>_206 = &amp;mut _173<br/>_205 = &amp;mut (*_206)<br/>StorageLive(_207)<br/>StorageLive(_208)<br/>StorageLive(_209)<br/>StorageLive(_210)<br/>_1190 = deref_copy (_1.1: &amp;mut instructions::user::TransferPerpPosition&lt;'_&gt;)<br/>_210 = &amp;((*_1190).4: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_1191 = deref_copy (*_210)<br/>_1256 = (((_1191.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_209 = &amp;(*_1256)<br/></td></tr><tr><td align="left">_208 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _209)</td></tr></table>>];
    bb90__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">_207 = &amp;(*_208)<br/>StorageDead(_209)<br/>StorageLive(_211)<br/>StorageLive(_212)<br/>_212 = &amp;_52<br/>_211 = &amp;(*_212)<br/></td></tr><tr><td align="left">_201 = update_amm(move _202, move _203, move _205, move _207, move _211)</td></tr></table>>];
    bb91__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_211)<br/>StorageDead(_207)<br/>StorageDead(_205)<br/>StorageDead(_203)<br/>StorageDead(_202)<br/></td></tr><tr><td align="left">_200 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _201)</td></tr></table>>];
    bb92__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_201)<br/>_213 = discriminant(_200)<br/></td></tr><tr><td align="left">switchInt(move _213)</td></tr></table>>];
    bb93__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageLive(_217)<br/>_217 = ((_200 as Continue).0: i128)<br/>_199 = _217<br/>StorageDead(_217)<br/>StorageDead(_212)<br/>StorageDead(_210)<br/>StorageDead(_208)<br/>StorageDead(_206)<br/>StorageDead(_204)<br/>StorageDead(_200)<br/>StorageDead(_199)<br/>StorageLive(_218)<br/>StorageLive(_219)<br/>StorageLive(_220)<br/>StorageLive(_221)<br/>StorageLive(_222)<br/>StorageLive(_223)<br/>StorageLive(_224)<br/>_224 = &amp;mut _40<br/>_1192 = deref_copy (*_224)<br/>_223 = &amp;mut (*_1192)<br/></td></tr><tr><td align="left">_222 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _223)</td></tr></table>>];
    bb94__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageLive(_214)<br/>_214 = ((_200 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_216)<br/>_216 = _214<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _216)</td></tr></table>>];
    bb95__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_216)<br/>StorageDead(_214)<br/>StorageDead(_212)<br/>StorageDead(_210)<br/>StorageDead(_208)<br/>StorageDead(_206)<br/>StorageDead(_204)<br/>StorageDead(_200)<br/>StorageDead(_199)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb96__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">_221 = &amp;mut (*_222)<br/>StorageDead(_223)<br/>StorageLive(_225)<br/>StorageLive(_226)<br/>_226 = &amp;_16<br/>_225 = &amp;(*_226)<br/>StorageLive(_227)<br/>StorageLive(_228)<br/>StorageLive(_229)<br/>StorageLive(_230)<br/>StorageLive(_231)<br/>StorageLive(_232)<br/>StorageLive(_233)<br/>_233 = &amp;_171<br/>StorageLive(_234)<br/>StorageLive(_235)<br/>_235 = &amp;_2<br/>_234 = &amp;(*_235)<br/></td></tr><tr><td align="left">_232 = PerpMarketMap::&lt;'_&gt;::get_ref_mut(move _233, move _234)</td></tr></table>>];
    bb97__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_234)<br/>StorageDead(_233)<br/></td></tr><tr><td align="left">_231 = &lt;std::result::Result&lt;RefMut&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _232)</td></tr></table>>];
    bb98__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">_1197 = const true<br/>StorageDead(_232)<br/>_236 = discriminant(_231)<br/></td></tr><tr><td align="left">switchInt(move _236)</td></tr></table>>];
    bb99__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageLive(_240)<br/>_240 = move ((_231 as Continue).0: std::cell::RefMut&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_230 = move _240<br/>StorageDead(_240)<br/>_229 = &amp;mut _230<br/></td></tr><tr><td align="left">_228 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _229)</td></tr></table>>];
    bb100__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageLive(_237)<br/>_237 = ((_231 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_239)<br/>_239 = _237<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _239)</td></tr></table>>];
    bb101__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_239)<br/>StorageDead(_237)<br/>StorageDead(_229)<br/>StorageDead(_227)<br/>StorageDead(_225)<br/>StorageDead(_221)<br/>StorageDead(_220)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb102__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">_227 = &amp;mut (*_228)<br/>StorageDead(_229)<br/>StorageLive(_241)<br/>_241 = _60<br/></td></tr><tr><td align="left">_220 = controller::funding::settle_funding_payment(move _221, move _225, move _227, move _241)</td></tr></table>>];
    bb103__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_241)<br/>StorageDead(_227)<br/>StorageDead(_225)<br/>StorageDead(_221)<br/></td></tr><tr><td align="left">_219 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _220)</td></tr></table>>];
    bb104__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_220)<br/>_242 = discriminant(_219)<br/></td></tr><tr><td align="left">switchInt(move _242)</td></tr></table>>];
    bb105__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageLive(_246)<br/>_246 = ((_219 as Continue).0: ())<br/>_218 = _246<br/>StorageDead(_246)<br/></td></tr><tr><td align="left">drop(_230)</td></tr></table>>];
    bb106__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageLive(_243)<br/>_243 = ((_219 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_245)<br/>_245 = _243<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _245)</td></tr></table>>];
    bb107__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_245)<br/>StorageDead(_243)<br/></td></tr><tr><td align="left">drop(_230)</td></tr></table>>];
    bb108__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">_250 = &amp;mut (*_251)<br/>StorageDead(_252)<br/>StorageLive(_254)<br/>StorageLive(_255)<br/>_255 = &amp;_14<br/>_254 = &amp;(*_255)<br/>StorageLive(_256)<br/>StorageLive(_257)<br/>StorageLive(_258)<br/>StorageLive(_259)<br/>StorageLive(_260)<br/>StorageLive(_261)<br/>StorageLive(_262)<br/>_262 = &amp;_171<br/>StorageLive(_263)<br/>StorageLive(_264)<br/>_264 = &amp;_2<br/>_263 = &amp;(*_264)<br/></td></tr><tr><td align="left">_261 = PerpMarketMap::&lt;'_&gt;::get_ref_mut(move _262, move _263)</td></tr></table>>];
    bb109__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageDead(_263)<br/>StorageDead(_262)<br/></td></tr><tr><td align="left">_260 = &lt;std::result::Result&lt;RefMut&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _261)</td></tr></table>>];
    bb110__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">_1196 = const true<br/>StorageDead(_261)<br/>_265 = discriminant(_260)<br/></td></tr><tr><td align="left">switchInt(move _265)</td></tr></table>>];
    bb111__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageLive(_269)<br/>_269 = move ((_260 as Continue).0: std::cell::RefMut&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_259 = move _269<br/>StorageDead(_269)<br/>_258 = &amp;mut _259<br/></td></tr><tr><td align="left">_257 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _258)</td></tr></table>>];
    bb112__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageLive(_266)<br/>_266 = ((_260 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_268)<br/>_268 = _266<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _268)</td></tr></table>>];
    bb113__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageDead(_268)<br/>StorageDead(_266)<br/>StorageDead(_258)<br/>StorageDead(_256)<br/>StorageDead(_254)<br/>StorageDead(_250)<br/>StorageDead(_249)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb114__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">_256 = &amp;mut (*_257)<br/>StorageDead(_258)<br/>StorageLive(_270)<br/>_270 = _60<br/></td></tr><tr><td align="left">_249 = controller::funding::settle_funding_payment(move _250, move _254, move _256, move _270)</td></tr></table>>];
    bb115__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageDead(_270)<br/>StorageDead(_256)<br/>StorageDead(_254)<br/>StorageDead(_250)<br/></td></tr><tr><td align="left">_248 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _249)</td></tr></table>>];
    bb116__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_249)<br/>_271 = discriminant(_248)<br/></td></tr><tr><td align="left">switchInt(move _271)</td></tr></table>>];
    bb117__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageLive(_275)<br/>_275 = ((_248 as Continue).0: ())<br/>_247 = _275<br/>StorageDead(_275)<br/></td></tr><tr><td align="left">drop(_259)</td></tr></table>>];
    bb118__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageLive(_272)<br/>_272 = ((_248 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_274)<br/>_274 = _272<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _274)</td></tr></table>>];
    bb119__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageDead(_274)<br/>StorageDead(_272)<br/></td></tr><tr><td align="left">drop(_259)</td></tr></table>>];
    bb120__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageDead(_285)<br/>StorageDead(_284)<br/></td></tr><tr><td align="left">_282 = &lt;std::result::Result&lt;Ref&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _283)</td></tr></table>>];
    bb121__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageDead(_283)<br/>_287 = discriminant(_282)<br/></td></tr><tr><td align="left">switchInt(move _287)</td></tr></table>>];
    bb122__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageLive(_291)<br/>_291 = move ((_282 as Continue).0: std::cell::Ref&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_281 = move _291<br/>StorageDead(_291)<br/>_1222 = discriminant(_282)<br/>StorageDead(_286)<br/>StorageDead(_282)<br/>StorageLive(_292)<br/>StorageLive(_293)<br/>StorageLive(_294)<br/>StorageLive(_295)<br/>_295 = &amp;_281<br/></td></tr><tr><td align="left">_294 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _295)</td></tr></table>>];
    bb123__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageLive(_288)<br/>_288 = ((_282 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_290)<br/>_290 = _288<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _290)</td></tr></table>>];
    bb124__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageDead(_290)<br/>StorageDead(_288)<br/>_1220 = discriminant(_282)<br/>StorageDead(_286)<br/>StorageDead(_282)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb125__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">_293 = &amp;(*_294)<br/>StorageDead(_295)<br/></td></tr><tr><td align="left">_292 = PerpMarket::get_open_interest(move _293)</td></tr></table>>];
    bb126__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageDead(_293)<br/>_276 = move _292<br/>StorageDead(_292)<br/>StorageDead(_294)<br/>StorageLive(_298)<br/>StorageLive(_299)<br/>StorageLive(_300)<br/>StorageLive(_301)<br/>_301 = &amp;mut _173<br/>StorageLive(_302)<br/>_302 = state::user::MarketType::Perp<br/>StorageLive(_303)<br/>_303 = _2<br/>StorageLive(_304)<br/>StorageLive(_305)<br/>StorageLive(_306)<br/>StorageLive(_307)<br/>StorageLive(_308)<br/>StorageLive(_309)<br/>_309 = &amp;_281<br/></td></tr><tr><td align="left">_308 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _309)</td></tr></table>>];
    bb127__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">_307 = &amp;(*_308)<br/>StorageDead(_309)<br/></td></tr><tr><td align="left">_306 = PerpMarket::oracle_id(move _307)</td></tr></table>>];
    bb128__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageDead(_307)<br/>_305 = &amp;_306<br/>_304 = &amp;(*_305)<br/>StorageLive(_310)<br/>StorageLive(_311)<br/>StorageLive(_312)<br/>_312 = &amp;_281<br/></td></tr><tr><td align="left">_311 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _312)</td></tr></table>>];
    bb129__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">StorageDead(_312)<br/>_310 = ((((*_311).1: state::perp_market::AMM).1: state::oracle::HistoricalOracleData).3: i64)<br/>StorageLive(_313)<br/>StorageLive(_314)<br/>StorageLive(_315)<br/>StorageLive(_316)<br/>StorageLive(_317)<br/>StorageLive(_318)<br/>_318 = &amp;_281<br/></td></tr><tr><td align="left">_317 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _318)</td></tr></table>>];
    bb130__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">_316 = (*_317)<br/>StorageDead(_318)<br/></td></tr><tr><td align="left">_315 = PerpMarket::get_max_confidence_interval_multiplier(move _316)</td></tr></table>>];
    bb131__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageDead(_316)<br/></td></tr><tr><td align="left">_314 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _315)</td></tr></table>>];
    bb132__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageDead(_315)<br/>_319 = discriminant(_314)<br/></td></tr><tr><td align="left">switchInt(move _319)</td></tr></table>>];
    bb133__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageLive(_323)<br/>_323 = ((_314 as Continue).0: u64)<br/>_313 = _323<br/>StorageDead(_323)<br/>StorageLive(_324)<br/>StorageLive(_325)<br/>StorageLive(_326)<br/>_326 = &amp;_281<br/></td></tr><tr><td align="left">_325 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _326)</td></tr></table>>];
    bb134__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageLive(_320)<br/>_320 = ((_314 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_322)<br/>_322 = _320<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _322)</td></tr></table>>];
    bb135__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageDead(_322)<br/>StorageDead(_320)<br/>StorageDead(_313)<br/>StorageDead(_310)<br/>StorageDead(_304)<br/>StorageDead(_303)<br/>StorageDead(_302)<br/>StorageDead(_301)<br/>StorageDead(_300)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb136__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageDead(_326)<br/>_324 = (((*_325).1: state::perp_market::AMM).78: i8)<br/></td></tr><tr><td align="left">_300 = OracleMap::&lt;'_&gt;::get_price_data_and_validity(move _301, move _302, move _303, move _304, move _310, move _313, move _324)</td></tr></table>>];
    bb137__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">StorageDead(_324)<br/>StorageDead(_313)<br/>StorageDead(_310)<br/>StorageDead(_304)<br/>StorageDead(_303)<br/>StorageDead(_302)<br/>StorageDead(_301)<br/></td></tr><tr><td align="left">_299 = &lt;std::result::Result&lt;(&amp;OraclePriceData, OracleValidity), error::ErrorCode&gt; as Try&gt;::branch(move _300)</td></tr></table>>];
    bb138__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">StorageDead(_300)<br/>_327 = discriminant(_299)<br/></td></tr><tr><td align="left">switchInt(move _327)</td></tr></table>>];
    bb139__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">StorageLive(_331)<br/>_331 = ((_299 as Continue).0: (&amp;state::oracle::OraclePriceData, math::oracle::OracleValidity))<br/>_298 = _331<br/>StorageDead(_331)<br/>StorageLive(_296)<br/>_296 = (_298.0: &amp;state::oracle::OraclePriceData)<br/>StorageLive(_297)<br/>_297 = (_298.1: math::oracle::OracleValidity)<br/>StorageDead(_325)<br/>StorageDead(_317)<br/>StorageDead(_314)<br/>StorageDead(_311)<br/>StorageDead(_308)<br/>StorageDead(_306)<br/>StorageDead(_305)<br/>StorageDead(_299)<br/>StorageDead(_298)<br/>StorageLive(_332)<br/>StorageLive(_333)<br/>StorageLive(_334)<br/>_334 = &amp;_281<br/></td></tr><tr><td align="left">_333 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _334)</td></tr></table>>];
    bb140__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">StorageLive(_328)<br/>_328 = ((_299 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_330)<br/>_330 = _328<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _330)</td></tr></table>>];
    bb141__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">StorageDead(_330)<br/>StorageDead(_328)<br/>StorageDead(_325)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb142__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageDead(_334)<br/>_332 = (((*_333).1: state::perp_market::AMM).52: u64)<br/>_278 = move _332<br/>StorageDead(_332)<br/>StorageDead(_333)<br/>StorageLive(_335)<br/>StorageLive(_336)<br/>StorageLive(_337)<br/>_337 = &amp;_281<br/></td></tr><tr><td align="left">_336 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _337)</td></tr></table>>];
    bb143__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageDead(_337)<br/>_335 = (((*_336).1: state::perp_market::AMM).53: u64)<br/>_279 = move _335<br/>StorageDead(_335)<br/>StorageDead(_336)<br/>StorageLive(_338)<br/>StorageLive(_339)<br/>StorageLive(_340)<br/>StorageLive(_341)<br/>StorageLive(_342)<br/>StorageLive(_343)<br/>StorageLive(_344)<br/>_344 = _297<br/>StorageLive(_345)<br/>StorageLive(_346)<br/>_346 = DriftAction::MarginCalc<br/>_345 = Option::&lt;DriftAction&gt;::Some(move _346)<br/>StorageDead(_346)<br/></td></tr><tr><td align="left">_343 = is_oracle_valid_for_action(move _344, move _345)</td></tr></table>>];
    bb144__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">StorageDead(_345)<br/>StorageDead(_344)<br/></td></tr><tr><td align="left">_342 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _343)</td></tr></table>>];
    bb145__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageDead(_343)<br/>_347 = discriminant(_342)<br/></td></tr><tr><td align="left">switchInt(move _347)</td></tr></table>>];
    bb146__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">StorageLive(_351)<br/>_351 = ((_342 as Continue).0: bool)<br/>_341 = _351<br/>StorageDead(_351)<br/></td></tr><tr><td align="left">switchInt(move _341)</td></tr></table>>];
    bb147__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left" balign="left">StorageLive(_348)<br/>_348 = ((_342 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_350)<br/>_350 = _348<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _350)</td></tr></table>>];
    bb148__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left" balign="left">StorageDead(_350)<br/>StorageDead(_348)<br/>StorageDead(_342)<br/>StorageDead(_341)<br/>StorageDead(_340)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb149__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">149</td></tr><tr><td align="left" balign="left">StorageDead(_342)<br/>StorageLive(_352)<br/>_352 = ()<br/>_340 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _352)<br/>StorageDead(_352)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb150__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">150</td></tr><tr><td align="left" balign="left">StorageDead(_342)<br/>StorageLive(_353)<br/>_353 = error::ErrorCode::InvalidTransferPerpPosition<br/>StorageLive(_354)<br/>StorageLive(_355)<br/>StorageLive(_356)<br/>StorageLive(_357)<br/>StorageLive(_358)<br/>StorageLive(_359)<br/>StorageLive(_360)<br/>StorageLive(_361)<br/>StorageLive(_362)<br/>StorageLive(_363)<br/>StorageLive(_364)<br/>_1177 = const _<br/>_364 = &amp;(*_1177)<br/>_363 = &amp;(*_364)<br/>_362 = move _363 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_363)<br/>StorageLive(_366)<br/>StorageLive(_367)<br/>StorageLive(_368)<br/>StorageLive(_369)<br/>StorageLive(_370)<br/>StorageLive(_371)<br/>StorageLive(_372)<br/>_372 = &amp;_353<br/>_371 = &amp;(*_372)<br/></td></tr><tr><td align="left">_370 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _371)</td></tr></table>>];
    bb151__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">151</td></tr><tr><td align="left" balign="left">StorageDead(_371)<br/>_369 = [move _370]<br/>StorageDead(_370)<br/>_368 = &amp;_369<br/>_367 = &amp;(*_368)<br/>_366 = move _367 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_367)<br/></td></tr><tr><td align="left">_361 = Arguments::&lt;'_&gt;::new_v1(move _362, move _366)</td></tr></table>>];
    bb152__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">152</td></tr><tr><td align="left" balign="left">StorageDead(_366)<br/>StorageDead(_362)<br/></td></tr><tr><td align="left">_360 = format(move _361)</td></tr></table>>];
    bb153__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">153</td></tr><tr><td align="left" balign="left">StorageDead(_361)<br/>StorageDead(_372)<br/>StorageDead(_369)<br/>StorageDead(_368)<br/>StorageDead(_364)<br/>_359 = move _360<br/>StorageDead(_360)<br/>_358 = &amp;_359<br/>_357 = &amp;(*_358)<br/></td></tr><tr><td align="left">_356 = &lt;String as Deref&gt;::deref(move _357)</td></tr></table>>];
    bb154__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">154</td></tr><tr><td align="left" balign="left">_355 = &amp;(*_356)<br/>StorageDead(_357)<br/></td></tr><tr><td align="left">_354 = solana_program::log::sol_log(move _355)</td></tr></table>>];
    bb155__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">155</td></tr><tr><td align="left" balign="left">StorageDead(_355)<br/></td></tr><tr><td align="left">drop(_359)</td></tr></table>>];
    bb156__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">156</td></tr><tr><td align="left" balign="left">StorageDead(_359)<br/>StorageDead(_358)<br/>StorageDead(_356)<br/>StorageDead(_354)<br/>StorageLive(_373)<br/>StorageLive(_374)<br/>StorageLive(_375)<br/>_375 = const &quot;oracle is not valid for action&quot;<br/>_374 = &amp;(*_375)<br/></td></tr><tr><td align="left">_373 = solana_program::log::sol_log(move _374)</td></tr></table>>];
    bb157__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">157</td></tr><tr><td align="left" balign="left">StorageDead(_374)<br/>StorageDead(_375)<br/>StorageDead(_373)<br/>StorageLive(_376)<br/>_376 = _353<br/>_340 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _376)<br/>StorageDead(_376)<br/>StorageDead(_353)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb158__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">158</td></tr><tr><td align="left" balign="left">StorageDead(_341)<br/></td></tr><tr><td align="left">_339 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _340)</td></tr></table>>];
    bb159__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">159</td></tr><tr><td align="left" balign="left">StorageDead(_340)<br/>_377 = discriminant(_339)<br/></td></tr><tr><td align="left">switchInt(move _377)</td></tr></table>>];
    bb160__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">160</td></tr><tr><td align="left" balign="left">StorageLive(_381)<br/>_381 = ((_339 as Continue).0: ())<br/>_338 = _381<br/>StorageDead(_381)<br/>StorageDead(_339)<br/>StorageDead(_338)<br/>StorageLive(_382)<br/>StorageLive(_383)<br/>StorageLive(_384)<br/>StorageLive(_385)<br/>StorageLive(_386)<br/>StorageLive(_387)<br/>StorageLive(_388)<br/>_388 = &amp;_281<br/></td></tr><tr><td align="left">_387 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _388)</td></tr></table>>];
    bb161__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">161</td></tr><tr><td align="left" balign="left">StorageLive(_378)<br/>_378 = ((_339 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_380)<br/>_380 = _378<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _380)</td></tr></table>>];
    bb162__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">162</td></tr><tr><td align="left" balign="left">StorageDead(_380)<br/>StorageDead(_378)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb163__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">163</td></tr><tr><td align="left" balign="left">_386 = &amp;(*_387)<br/>StorageDead(_388)<br/>StorageLive(_389)<br/>_389 = PerpOperation::Fill<br/></td></tr><tr><td align="left">_385 = PerpMarket::is_operation_paused(move _386, move _389)</td></tr></table>>];
    bb164__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">164</td></tr><tr><td align="left">switchInt(move _385)</td></tr></table>>];
    bb165__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">165</td></tr><tr><td align="left" balign="left">StorageDead(_389)<br/>StorageDead(_386)<br/>StorageDead(_387)<br/>StorageLive(_391)<br/>_391 = error::ErrorCode::InvalidTransferPerpPosition<br/>StorageLive(_392)<br/>StorageLive(_393)<br/>StorageLive(_394)<br/>StorageLive(_395)<br/>StorageLive(_396)<br/>StorageLive(_397)<br/>StorageLive(_398)<br/>StorageLive(_399)<br/>StorageLive(_400)<br/>StorageLive(_401)<br/>StorageLive(_402)<br/>_1176 = const _<br/>_402 = &amp;(*_1176)<br/>_401 = &amp;(*_402)<br/>_400 = move _401 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_401)<br/>StorageLive(_404)<br/>StorageLive(_405)<br/>StorageLive(_406)<br/>StorageLive(_407)<br/>StorageLive(_408)<br/>StorageLive(_409)<br/>StorageLive(_410)<br/>_410 = &amp;_391<br/>_409 = &amp;(*_410)<br/></td></tr><tr><td align="left">_408 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _409)</td></tr></table>>];
    bb166__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">166</td></tr><tr><td align="left" balign="left">StorageDead(_389)<br/>StorageDead(_386)<br/>StorageDead(_387)<br/>StorageLive(_390)<br/>_390 = ()<br/>_384 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _390)<br/>StorageDead(_390)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb167__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">167</td></tr><tr><td align="left" balign="left">StorageDead(_409)<br/>_407 = [move _408]<br/>StorageDead(_408)<br/>_406 = &amp;_407<br/>_405 = &amp;(*_406)<br/>_404 = move _405 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_405)<br/></td></tr><tr><td align="left">_399 = Arguments::&lt;'_&gt;::new_v1(move _400, move _404)</td></tr></table>>];
    bb168__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">168</td></tr><tr><td align="left" balign="left">StorageDead(_404)<br/>StorageDead(_400)<br/></td></tr><tr><td align="left">_398 = format(move _399)</td></tr></table>>];
    bb169__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">169</td></tr><tr><td align="left" balign="left">StorageDead(_399)<br/>StorageDead(_410)<br/>StorageDead(_407)<br/>StorageDead(_406)<br/>StorageDead(_402)<br/>_397 = move _398<br/>StorageDead(_398)<br/>_396 = &amp;_397<br/>_395 = &amp;(*_396)<br/></td></tr><tr><td align="left">_394 = &lt;String as Deref&gt;::deref(move _395)</td></tr></table>>];
    bb170__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">170</td></tr><tr><td align="left" balign="left">_393 = &amp;(*_394)<br/>StorageDead(_395)<br/></td></tr><tr><td align="left">_392 = solana_program::log::sol_log(move _393)</td></tr></table>>];
    bb171__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">171</td></tr><tr><td align="left" balign="left">StorageDead(_393)<br/></td></tr><tr><td align="left">drop(_397)</td></tr></table>>];
    bb172__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">172</td></tr><tr><td align="left" balign="left">StorageDead(_397)<br/>StorageDead(_396)<br/>StorageDead(_394)<br/>StorageDead(_392)<br/>StorageLive(_411)<br/>StorageLive(_412)<br/>StorageLive(_413)<br/>_413 = const &quot;perp market fills paused&quot;<br/>_412 = &amp;(*_413)<br/></td></tr><tr><td align="left">_411 = solana_program::log::sol_log(move _412)</td></tr></table>>];
    bb173__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">173</td></tr><tr><td align="left" balign="left">StorageDead(_412)<br/>StorageDead(_413)<br/>StorageDead(_411)<br/>StorageLive(_414)<br/>_414 = _391<br/>_384 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _414)<br/>StorageDead(_414)<br/>StorageDead(_391)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb174__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">174</td></tr><tr><td align="left" balign="left">StorageDead(_385)<br/></td></tr><tr><td align="left">_383 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _384)</td></tr></table>>];
    bb175__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">175</td></tr><tr><td align="left" balign="left">StorageDead(_384)<br/>_415 = discriminant(_383)<br/></td></tr><tr><td align="left">switchInt(move _415)</td></tr></table>>];
    bb176__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">176</td></tr><tr><td align="left" balign="left">StorageLive(_419)<br/>_419 = ((_383 as Continue).0: ())<br/>_382 = _419<br/>StorageDead(_419)<br/>StorageDead(_383)<br/>StorageDead(_382)<br/>StorageLive(_420)<br/>_420 = ((*_296).0: i64)<br/>_277 = move _420<br/>StorageDead(_420)<br/>_280 = const ()<br/>StorageDead(_297)<br/>StorageDead(_296)<br/></td></tr><tr><td align="left">drop(_281)</td></tr></table>>];
    bb177__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">177</td></tr><tr><td align="left" balign="left">StorageLive(_416)<br/>_416 = ((_383 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_418)<br/>_418 = _416<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _418)</td></tr></table>>];
    bb178__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">178</td></tr><tr><td align="left" balign="left">StorageDead(_418)<br/>StorageDead(_416)<br/>StorageDead(_383)<br/>StorageDead(_382)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb179__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">179</td></tr><tr><td align="left" balign="left">StorageDead(_281)<br/>StorageDead(_280)<br/>StorageLive(_423)<br/>_424 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _424)</td></tr></table>>];
    bb180__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">180</td></tr><tr><td align="left" balign="left">StorageLive(_425)<br/>_425 = ((_3 as Some).0: i64)<br/>StorageLive(_426)<br/>StorageLive(_427)<br/>StorageLive(_428)<br/>StorageLive(_429)<br/>StorageLive(_430)<br/>StorageLive(_431)<br/>_431 = &amp;mut (*_40)<br/></td></tr><tr><td align="left">_430 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _431)</td></tr></table>>];
    bb181__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">181</td></tr><tr><td align="left" balign="left">_429 = &amp;mut (*_430)<br/>StorageDead(_431)<br/>StorageLive(_432)<br/>_432 = _2<br/></td></tr><tr><td align="left">_428 = User::force_get_perp_position_mut(move _429, move _432)</td></tr></table>>];
    bb182__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">182</td></tr><tr><td align="left" balign="left">StorageDead(_432)<br/>StorageDead(_429)<br/></td></tr><tr><td align="left">_427 = &lt;std::result::Result&lt;&amp;mut PerpPosition, error::ErrorCode&gt; as Try&gt;::branch(move _428)</td></tr></table>>];
    bb183__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">183</td></tr><tr><td align="left" balign="left">StorageDead(_428)<br/>_433 = discriminant(_427)<br/></td></tr><tr><td align="left">switchInt(move _433)</td></tr></table>>];
    bb184__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">184</td></tr><tr><td align="left" balign="left">StorageLive(_437)<br/>_437 = move ((_427 as Continue).0: &amp;mut state::user::PerpPosition)<br/>_426 = move _437<br/>StorageDead(_437)<br/>StorageDead(_430)<br/>StorageDead(_427)<br/>StorageLive(_438)<br/>_438 = ((*_426).1: i64)<br/>StorageLive(_439)<br/>StorageLive(_440)<br/>StorageLive(_441)<br/>StorageLive(_442)<br/>StorageLive(_443)<br/>StorageLive(_444)<br/>_444 = _425<br/></td></tr><tr><td align="left">_443 = core::num::&lt;impl i64&gt;::signum(move _444)</td></tr></table>>];
    bb185__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">185</td></tr><tr><td align="left" balign="left">StorageLive(_434)<br/>_434 = ((_427 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_436)<br/>_436 = _434<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _436)</td></tr></table>>];
    bb186__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">186</td></tr><tr><td align="left" balign="left">StorageDead(_436)<br/>StorageDead(_434)<br/>StorageDead(_430)<br/>StorageDead(_427)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb187__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">187</td></tr><tr><td align="left" balign="left">StorageDead(_444)<br/>StorageLive(_445)<br/>StorageLive(_446)<br/>_446 = _438<br/></td></tr><tr><td align="left">_445 = core::num::&lt;impl i64&gt;::signum(move _446)</td></tr></table>>];
    bb188__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">188</td></tr><tr><td align="left" balign="left">StorageDead(_446)<br/>_442 = Eq(move _443, move _445)<br/></td></tr><tr><td align="left">switchInt(move _442)</td></tr></table>>];
    bb189__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">189</td></tr><tr><td align="left" balign="left">StorageDead(_445)<br/>StorageDead(_443)<br/>StorageLive(_447)<br/>_447 = ()<br/>_441 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _447)<br/>StorageDead(_447)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb190__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">190</td></tr><tr><td align="left" balign="left">StorageDead(_445)<br/>StorageDead(_443)<br/>StorageLive(_448)<br/>_448 = error::ErrorCode::InvalidTransferPerpPosition<br/>StorageLive(_449)<br/>StorageLive(_450)<br/>StorageLive(_451)<br/>StorageLive(_452)<br/>StorageLive(_453)<br/>StorageLive(_454)<br/>StorageLive(_455)<br/>StorageLive(_456)<br/>StorageLive(_457)<br/>StorageLive(_458)<br/>StorageLive(_459)<br/>_1175 = const _<br/>_459 = &amp;(*_1175)<br/>_458 = &amp;(*_459)<br/>_457 = move _458 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_458)<br/>StorageLive(_461)<br/>StorageLive(_462)<br/>StorageLive(_463)<br/>StorageLive(_464)<br/>StorageLive(_465)<br/>StorageLive(_466)<br/>StorageLive(_467)<br/>_467 = &amp;_448<br/>_466 = &amp;(*_467)<br/></td></tr><tr><td align="left">_465 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _466)</td></tr></table>>];
    bb191__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">191</td></tr><tr><td align="left" balign="left">StorageDead(_466)<br/>_464 = [move _465]<br/>StorageDead(_465)<br/>_463 = &amp;_464<br/>_462 = &amp;(*_463)<br/>_461 = move _462 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_462)<br/></td></tr><tr><td align="left">_456 = Arguments::&lt;'_&gt;::new_v1(move _457, move _461)</td></tr></table>>];
    bb192__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">192</td></tr><tr><td align="left" balign="left">StorageDead(_461)<br/>StorageDead(_457)<br/></td></tr><tr><td align="left">_455 = format(move _456)</td></tr></table>>];
    bb193__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">193</td></tr><tr><td align="left" balign="left">StorageDead(_456)<br/>StorageDead(_467)<br/>StorageDead(_464)<br/>StorageDead(_463)<br/>StorageDead(_459)<br/>_454 = move _455<br/>StorageDead(_455)<br/>_453 = &amp;_454<br/>_452 = &amp;(*_453)<br/></td></tr><tr><td align="left">_451 = &lt;String as Deref&gt;::deref(move _452)</td></tr></table>>];
    bb194__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">194</td></tr><tr><td align="left" balign="left">_450 = &amp;(*_451)<br/>StorageDead(_452)<br/></td></tr><tr><td align="left">_449 = solana_program::log::sol_log(move _450)</td></tr></table>>];
    bb195__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">195</td></tr><tr><td align="left" balign="left">StorageDead(_450)<br/></td></tr><tr><td align="left">drop(_454)</td></tr></table>>];
    bb196__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">196</td></tr><tr><td align="left" balign="left">StorageDead(_454)<br/>StorageDead(_453)<br/>StorageDead(_451)<br/>StorageDead(_449)<br/>StorageLive(_468)<br/>StorageLive(_469)<br/>StorageLive(_470)<br/>_470 = const &quot;transfer perp position must reduce position (direction is opposite)&quot;<br/>_469 = &amp;(*_470)<br/></td></tr><tr><td align="left">_468 = solana_program::log::sol_log(move _469)</td></tr></table>>];
    bb197__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">197</td></tr><tr><td align="left" balign="left">StorageDead(_469)<br/>StorageDead(_470)<br/>StorageDead(_468)<br/>StorageLive(_471)<br/>_471 = _448<br/>_441 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _471)<br/>StorageDead(_471)<br/>StorageDead(_448)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb198__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">198</td></tr><tr><td align="left" balign="left">StorageDead(_442)<br/></td></tr><tr><td align="left">_440 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _441)</td></tr></table>>];
    bb199__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">199</td></tr><tr><td align="left" balign="left">StorageDead(_441)<br/>_472 = discriminant(_440)<br/></td></tr><tr><td align="left">switchInt(move _472)</td></tr></table>>];
    bb200__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">200</td></tr><tr><td align="left" balign="left">StorageLive(_476)<br/>_476 = ((_440 as Continue).0: ())<br/>_439 = _476<br/>StorageDead(_476)<br/>StorageDead(_440)<br/>StorageDead(_439)<br/>StorageLive(_477)<br/>StorageLive(_478)<br/>StorageLive(_479)<br/>StorageLive(_480)<br/>StorageLive(_481)<br/>StorageLive(_482)<br/>_482 = _425<br/></td></tr><tr><td align="left">_481 = core::num::&lt;impl i64&gt;::abs(move _482)</td></tr></table>>];
    bb201__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">201</td></tr><tr><td align="left" balign="left">StorageLive(_473)<br/>_473 = ((_440 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_475)<br/>_475 = _473<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _475)</td></tr></table>>];
    bb202__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">202</td></tr><tr><td align="left" balign="left">StorageDead(_475)<br/>StorageDead(_473)<br/>StorageDead(_440)<br/>StorageDead(_439)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb203__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">203</td></tr><tr><td align="left" balign="left">StorageDead(_482)<br/>StorageLive(_483)<br/>StorageLive(_484)<br/>_484 = _438<br/></td></tr><tr><td align="left">_483 = core::num::&lt;impl i64&gt;::abs(move _484)</td></tr></table>>];
    bb204__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">204</td></tr><tr><td align="left" balign="left">StorageDead(_484)<br/>_480 = Le(move _481, move _483)<br/></td></tr><tr><td align="left">switchInt(move _480)</td></tr></table>>];
    bb205__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">205</td></tr><tr><td align="left" balign="left">StorageDead(_483)<br/>StorageDead(_481)<br/>StorageLive(_485)<br/>_485 = ()<br/>_479 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _485)<br/>StorageDead(_485)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb206__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">206</td></tr><tr><td align="left" balign="left">StorageDead(_483)<br/>StorageDead(_481)<br/>StorageLive(_486)<br/>_486 = error::ErrorCode::InvalidTransferPerpPosition<br/>StorageLive(_487)<br/>StorageLive(_488)<br/>StorageLive(_489)<br/>StorageLive(_490)<br/>StorageLive(_491)<br/>StorageLive(_492)<br/>StorageLive(_493)<br/>StorageLive(_494)<br/>StorageLive(_495)<br/>StorageLive(_496)<br/>StorageLive(_497)<br/>_1174 = const _<br/>_497 = &amp;(*_1174)<br/>_496 = &amp;(*_497)<br/>_495 = move _496 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_496)<br/>StorageLive(_499)<br/>StorageLive(_500)<br/>StorageLive(_501)<br/>StorageLive(_502)<br/>StorageLive(_503)<br/>StorageLive(_504)<br/>StorageLive(_505)<br/>_505 = &amp;_486<br/>_504 = &amp;(*_505)<br/></td></tr><tr><td align="left">_503 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _504)</td></tr></table>>];
    bb207__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">207</td></tr><tr><td align="left" balign="left">StorageDead(_504)<br/>_502 = [move _503]<br/>StorageDead(_503)<br/>_501 = &amp;_502<br/>_500 = &amp;(*_501)<br/>_499 = move _500 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_500)<br/></td></tr><tr><td align="left">_494 = Arguments::&lt;'_&gt;::new_v1(move _495, move _499)</td></tr></table>>];
    bb208__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">208</td></tr><tr><td align="left" balign="left">StorageDead(_499)<br/>StorageDead(_495)<br/></td></tr><tr><td align="left">_493 = format(move _494)</td></tr></table>>];
    bb209__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">209</td></tr><tr><td align="left" balign="left">StorageDead(_494)<br/>StorageDead(_505)<br/>StorageDead(_502)<br/>StorageDead(_501)<br/>StorageDead(_497)<br/>_492 = move _493<br/>StorageDead(_493)<br/>_491 = &amp;_492<br/>_490 = &amp;(*_491)<br/></td></tr><tr><td align="left">_489 = &lt;String as Deref&gt;::deref(move _490)</td></tr></table>>];
    bb210__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">210</td></tr><tr><td align="left" balign="left">_488 = &amp;(*_489)<br/>StorageDead(_490)<br/></td></tr><tr><td align="left">_487 = solana_program::log::sol_log(move _488)</td></tr></table>>];
    bb211__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">211</td></tr><tr><td align="left" balign="left">StorageDead(_488)<br/></td></tr><tr><td align="left">drop(_492)</td></tr></table>>];
    bb212__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">212</td></tr><tr><td align="left" balign="left">StorageDead(_492)<br/>StorageDead(_491)<br/>StorageDead(_489)<br/>StorageDead(_487)<br/>StorageLive(_506)<br/>StorageLive(_507)<br/>StorageLive(_508)<br/>_508 = const &quot;transfer perp position amount is greater than existing position&quot;<br/>_507 = &amp;(*_508)<br/></td></tr><tr><td align="left">_506 = solana_program::log::sol_log(move _507)</td></tr></table>>];
    bb213__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">213</td></tr><tr><td align="left" balign="left">StorageDead(_507)<br/>StorageDead(_508)<br/>StorageDead(_506)<br/>StorageLive(_509)<br/>_509 = _486<br/>_479 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _509)<br/>StorageDead(_509)<br/>StorageDead(_486)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb214__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">214</td></tr><tr><td align="left" balign="left">StorageDead(_480)<br/></td></tr><tr><td align="left">_478 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _479)</td></tr></table>>];
    bb215__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">215</td></tr><tr><td align="left" balign="left">StorageDead(_479)<br/>_510 = discriminant(_478)<br/></td></tr><tr><td align="left">switchInt(move _510)</td></tr></table>>];
    bb216__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">216</td></tr><tr><td align="left" balign="left">StorageLive(_514)<br/>_514 = ((_478 as Continue).0: ())<br/>_477 = _514<br/>StorageDead(_514)<br/>StorageDead(_478)<br/>StorageDead(_477)<br/>StorageLive(_515)<br/>StorageLive(_516)<br/>StorageLive(_517)<br/>StorageLive(_518)<br/>StorageLive(_519)<br/>StorageLive(_520)<br/>StorageLive(_521)<br/>StorageLive(_522)<br/>_522 = _425<br/></td></tr><tr><td align="left">_521 = core::num::&lt;impl i64&gt;::unsigned_abs(move _522)</td></tr></table>>];
    bb217__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">217</td></tr><tr><td align="left" balign="left">StorageLive(_511)<br/>_511 = ((_478 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_513)<br/>_513 = _511<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _513)</td></tr></table>>];
    bb218__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">218</td></tr><tr><td align="left" balign="left">StorageDead(_513)<br/>StorageDead(_511)<br/>StorageDead(_478)<br/>StorageDead(_477)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb219__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">219</td></tr><tr><td align="left" balign="left">StorageDead(_522)<br/>StorageLive(_523)<br/>_523 = _278<br/></td></tr><tr><td align="left">_520 = math::orders::is_multiple_of_step_size(move _521, move _523)</td></tr></table>>];
    bb220__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">220</td></tr><tr><td align="left" balign="left">StorageDead(_523)<br/>StorageDead(_521)<br/></td></tr><tr><td align="left">_519 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _520)</td></tr></table>>];
    bb221__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">221</td></tr><tr><td align="left" balign="left">StorageDead(_520)<br/>_524 = discriminant(_519)<br/></td></tr><tr><td align="left">switchInt(move _524)</td></tr></table>>];
    bb222__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">222</td></tr><tr><td align="left" balign="left">StorageLive(_528)<br/>_528 = ((_519 as Continue).0: bool)<br/>_518 = _528<br/>StorageDead(_528)<br/></td></tr><tr><td align="left">switchInt(move _518)</td></tr></table>>];
    bb223__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">223</td></tr><tr><td align="left" balign="left">StorageLive(_525)<br/>_525 = ((_519 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_527)<br/>_527 = _525<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _527)</td></tr></table>>];
    bb224__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">224</td></tr><tr><td align="left" balign="left">StorageDead(_527)<br/>StorageDead(_525)<br/>StorageDead(_519)<br/>StorageDead(_518)<br/>StorageDead(_517)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb225__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">225</td></tr><tr><td align="left" balign="left">StorageDead(_519)<br/>StorageLive(_529)<br/>_529 = ()<br/>_517 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _529)<br/>StorageDead(_529)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb226__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">226</td></tr><tr><td align="left" balign="left">StorageDead(_519)<br/>StorageLive(_530)<br/>_530 = error::ErrorCode::InvalidTransferPerpPosition<br/>StorageLive(_531)<br/>StorageLive(_532)<br/>StorageLive(_533)<br/>StorageLive(_534)<br/>StorageLive(_535)<br/>StorageLive(_536)<br/>StorageLive(_537)<br/>StorageLive(_538)<br/>StorageLive(_539)<br/>StorageLive(_540)<br/>StorageLive(_541)<br/>_1173 = const _<br/>_541 = &amp;(*_1173)<br/>_540 = &amp;(*_541)<br/>_539 = move _540 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_540)<br/>StorageLive(_543)<br/>StorageLive(_544)<br/>StorageLive(_545)<br/>StorageLive(_546)<br/>StorageLive(_547)<br/>StorageLive(_548)<br/>StorageLive(_549)<br/>_549 = &amp;_530<br/>_548 = &amp;(*_549)<br/></td></tr><tr><td align="left">_547 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _548)</td></tr></table>>];
    bb227__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">227</td></tr><tr><td align="left" balign="left">StorageDead(_548)<br/>_546 = [move _547]<br/>StorageDead(_547)<br/>_545 = &amp;_546<br/>_544 = &amp;(*_545)<br/>_543 = move _544 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_544)<br/></td></tr><tr><td align="left">_538 = Arguments::&lt;'_&gt;::new_v1(move _539, move _543)</td></tr></table>>];
    bb228__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">228</td></tr><tr><td align="left" balign="left">StorageDead(_543)<br/>StorageDead(_539)<br/></td></tr><tr><td align="left">_537 = format(move _538)</td></tr></table>>];
    bb229__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">229</td></tr><tr><td align="left" balign="left">StorageDead(_538)<br/>StorageDead(_549)<br/>StorageDead(_546)<br/>StorageDead(_545)<br/>StorageDead(_541)<br/>_536 = move _537<br/>StorageDead(_537)<br/>_535 = &amp;_536<br/>_534 = &amp;(*_535)<br/></td></tr><tr><td align="left">_533 = &lt;String as Deref&gt;::deref(move _534)</td></tr></table>>];
    bb230__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">230</td></tr><tr><td align="left" balign="left">_532 = &amp;(*_533)<br/>StorageDead(_534)<br/></td></tr><tr><td align="left">_531 = solana_program::log::sol_log(move _532)</td></tr></table>>];
    bb231__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">231</td></tr><tr><td align="left" balign="left">StorageDead(_532)<br/></td></tr><tr><td align="left">drop(_536)</td></tr></table>>];
    bb232__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">232</td></tr><tr><td align="left" balign="left">StorageDead(_536)<br/>StorageDead(_535)<br/>StorageDead(_533)<br/>StorageDead(_531)<br/>StorageLive(_550)<br/>StorageLive(_551)<br/>StorageLive(_552)<br/>_552 = const &quot;transfer perp position amount is not a multiple of step size&quot;<br/>_551 = &amp;(*_552)<br/></td></tr><tr><td align="left">_550 = solana_program::log::sol_log(move _551)</td></tr></table>>];
    bb233__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">233</td></tr><tr><td align="left" balign="left">StorageDead(_551)<br/>StorageDead(_552)<br/>StorageDead(_550)<br/>StorageLive(_553)<br/>_553 = _530<br/>_517 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _553)<br/>StorageDead(_553)<br/>StorageDead(_530)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb234__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">234</td></tr><tr><td align="left" balign="left">StorageDead(_518)<br/></td></tr><tr><td align="left">_516 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _517)</td></tr></table>>];
    bb235__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">235</td></tr><tr><td align="left" balign="left">StorageDead(_517)<br/>_554 = discriminant(_516)<br/></td></tr><tr><td align="left">switchInt(move _554)</td></tr></table>>];
    bb236__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">236</td></tr><tr><td align="left" balign="left">StorageLive(_558)<br/>_558 = ((_516 as Continue).0: ())<br/>_515 = _558<br/>StorageDead(_558)<br/>StorageDead(_516)<br/>StorageDead(_515)<br/>StorageLive(_559)<br/>_559 = _425<br/>StorageLive(_560)<br/>StorageLive(_561)<br/>_561 = &amp;(*_426)<br/></td></tr><tr><td align="left">_560 = PerpPosition::get_direction_to_close(move _561)</td></tr></table>>];
    bb237__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">237</td></tr><tr><td align="left" balign="left">StorageLive(_555)<br/>_555 = ((_516 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_557)<br/>_557 = _555<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _557)</td></tr></table>>];
    bb238__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">238</td></tr><tr><td align="left" balign="left">StorageDead(_557)<br/>StorageDead(_555)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb239__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">239</td></tr><tr><td align="left" balign="left">StorageDead(_561)<br/>_423 = (move _559, move _560)<br/>StorageDead(_560)<br/>StorageDead(_559)<br/>StorageDead(_438)<br/>StorageDead(_426)<br/>StorageDead(_425)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb240__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">240</td></tr><tr><td align="left" balign="left">StorageLive(_562)<br/>StorageLive(_563)<br/>StorageLive(_564)<br/>StorageLive(_565)<br/>StorageLive(_566)<br/>StorageLive(_567)<br/>_567 = &amp;mut (*_40)<br/></td></tr><tr><td align="left">_566 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _567)</td></tr></table>>];
    bb241__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">241</td></tr><tr><td align="left" balign="left">_565 = &amp;mut (*_566)<br/>StorageDead(_567)<br/>StorageLive(_568)<br/>_568 = _2<br/></td></tr><tr><td align="left">_564 = User::force_get_perp_position_mut(move _565, move _568)</td></tr></table>>];
    bb242__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">242</td></tr><tr><td align="left" balign="left">StorageDead(_568)<br/>StorageDead(_565)<br/></td></tr><tr><td align="left">_563 = &lt;std::result::Result&lt;&amp;mut PerpPosition, error::ErrorCode&gt; as Try&gt;::branch(move _564)</td></tr></table>>];
    bb243__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">243</td></tr><tr><td align="left" balign="left">StorageDead(_564)<br/>_569 = discriminant(_563)<br/></td></tr><tr><td align="left">switchInt(move _569)</td></tr></table>>];
    bb244__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">244</td></tr><tr><td align="left" balign="left">StorageLive(_573)<br/>_573 = move ((_563 as Continue).0: &amp;mut state::user::PerpPosition)<br/>_562 = move _573<br/>StorageDead(_573)<br/>StorageDead(_566)<br/>StorageDead(_563)<br/>StorageLive(_574)<br/>StorageLive(_575)<br/>StorageLive(_576)<br/>StorageLive(_577)<br/>StorageLive(_578)<br/>_578 = ((*_562).1: i64)<br/>_577 = Ne(move _578, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _577)</td></tr></table>>];
    bb245__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">245</td></tr><tr><td align="left" balign="left">StorageLive(_570)<br/>_570 = ((_563 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_572)<br/>_572 = _570<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _572)</td></tr></table>>];
    bb246__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">246</td></tr><tr><td align="left" balign="left">StorageDead(_572)<br/>StorageDead(_570)<br/>StorageDead(_566)<br/>StorageDead(_563)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb247__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">247</td></tr><tr><td align="left" balign="left">StorageDead(_578)<br/>StorageLive(_579)<br/>_579 = ()<br/>_576 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _579)<br/>StorageDead(_579)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb248__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">248</td></tr><tr><td align="left" balign="left">StorageDead(_578)<br/>StorageLive(_580)<br/>_580 = error::ErrorCode::InvalidTransferPerpPosition<br/>StorageLive(_581)<br/>StorageLive(_582)<br/>StorageLive(_583)<br/>StorageLive(_584)<br/>StorageLive(_585)<br/>StorageLive(_586)<br/>StorageLive(_587)<br/>StorageLive(_588)<br/>StorageLive(_589)<br/>StorageLive(_590)<br/>StorageLive(_591)<br/>_1172 = const _<br/>_591 = &amp;(*_1172)<br/>_590 = &amp;(*_591)<br/>_589 = move _590 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_590)<br/>StorageLive(_593)<br/>StorageLive(_594)<br/>StorageLive(_595)<br/>StorageLive(_596)<br/>StorageLive(_597)<br/>StorageLive(_598)<br/>StorageLive(_599)<br/>_599 = &amp;_580<br/>_598 = &amp;(*_599)<br/></td></tr><tr><td align="left">_597 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _598)</td></tr></table>>];
    bb249__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">249</td></tr><tr><td align="left" balign="left">StorageDead(_598)<br/>_596 = [move _597]<br/>StorageDead(_597)<br/>_595 = &amp;_596<br/>_594 = &amp;(*_595)<br/>_593 = move _594 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_594)<br/></td></tr><tr><td align="left">_588 = Arguments::&lt;'_&gt;::new_v1(move _589, move _593)</td></tr></table>>];
    bb250__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">250</td></tr><tr><td align="left" balign="left">StorageDead(_593)<br/>StorageDead(_589)<br/></td></tr><tr><td align="left">_587 = format(move _588)</td></tr></table>>];
    bb251__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">251</td></tr><tr><td align="left" balign="left">StorageDead(_588)<br/>StorageDead(_599)<br/>StorageDead(_596)<br/>StorageDead(_595)<br/>StorageDead(_591)<br/>_586 = move _587<br/>StorageDead(_587)<br/>_585 = &amp;_586<br/>_584 = &amp;(*_585)<br/></td></tr><tr><td align="left">_583 = &lt;String as Deref&gt;::deref(move _584)</td></tr></table>>];
    bb252__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">252</td></tr><tr><td align="left" balign="left">_582 = &amp;(*_583)<br/>StorageDead(_584)<br/></td></tr><tr><td align="left">_581 = solana_program::log::sol_log(move _582)</td></tr></table>>];
    bb253__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">253</td></tr><tr><td align="left" balign="left">StorageDead(_582)<br/></td></tr><tr><td align="left">drop(_586)</td></tr></table>>];
    bb254__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">254</td></tr><tr><td align="left" balign="left">StorageDead(_586)<br/>StorageDead(_585)<br/>StorageDead(_583)<br/>StorageDead(_581)<br/>StorageLive(_600)<br/>StorageLive(_601)<br/>StorageLive(_602)<br/>_602 = const &quot;from user has no position&quot;<br/>_601 = &amp;(*_602)<br/></td></tr><tr><td align="left">_600 = solana_program::log::sol_log(move _601)</td></tr></table>>];
    bb255__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">255</td></tr><tr><td align="left" balign="left">StorageDead(_601)<br/>StorageDead(_602)<br/>StorageDead(_600)<br/>StorageLive(_603)<br/>_603 = _580<br/>_576 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _603)<br/>StorageDead(_603)<br/>StorageDead(_580)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb256__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">256</td></tr><tr><td align="left" balign="left">StorageDead(_577)<br/></td></tr><tr><td align="left">_575 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _576)</td></tr></table>>];
    bb257__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">257</td></tr><tr><td align="left" balign="left">StorageDead(_576)<br/>_604 = discriminant(_575)<br/></td></tr><tr><td align="left">switchInt(move _604)</td></tr></table>>];
    bb258__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">258</td></tr><tr><td align="left" balign="left">StorageLive(_608)<br/>_608 = ((_575 as Continue).0: ())<br/>_574 = _608<br/>StorageDead(_608)<br/>StorageDead(_575)<br/>StorageDead(_574)<br/>StorageLive(_609)<br/>_609 = ((*_562).1: i64)<br/>StorageLive(_610)<br/>StorageLive(_611)<br/>_611 = &amp;(*_562)<br/></td></tr><tr><td align="left">_610 = PerpPosition::get_direction_to_close(move _611)</td></tr></table>>];
    bb259__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">259</td></tr><tr><td align="left" balign="left">StorageLive(_605)<br/>_605 = ((_575 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_607)<br/>_607 = _605<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _607)</td></tr></table>>];
    bb260__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">260</td></tr><tr><td align="left" balign="left">StorageDead(_607)<br/>StorageDead(_605)<br/>StorageDead(_575)<br/>StorageDead(_574)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb261__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">261</td></tr><tr><td align="left" balign="left">StorageDead(_611)<br/>_423 = (move _609, move _610)<br/>StorageDead(_610)<br/>StorageDead(_609)<br/>StorageDead(_562)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb262__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">262</td></tr><tr><td align="left" balign="left">StorageLive(_421)<br/>_421 = (_423.0: i64)<br/>StorageLive(_422)<br/>_422 = (_423.1: controller::position::PositionDirection)<br/>StorageDead(_423)<br/>StorageLive(_612)<br/>StorageLive(_613)<br/>StorageLive(_614)<br/>StorageLive(_615)<br/>_615 = _277<br/>StorageLive(_616)<br/>StorageLive(_617)<br/>StorageLive(_618)<br/>StorageLive(_619)<br/>_619 = _279<br/></td></tr><tr><td align="left">_618 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _619)</td></tr></table>>];
    bb263__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">263</td></tr><tr><td align="left" balign="left">StorageDead(_619)<br/></td></tr><tr><td align="left">_617 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _618)</td></tr></table>>];
    bb264__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">264</td></tr><tr><td align="left" balign="left">StorageDead(_618)<br/>_620 = discriminant(_617)<br/></td></tr><tr><td align="left">switchInt(move _620)</td></tr></table>>];
    bb265__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">265</td></tr><tr><td align="left" balign="left">StorageLive(_624)<br/>_624 = ((_617 as Continue).0: i64)<br/>_616 = _624<br/>StorageDead(_624)<br/>StorageLive(_625)<br/>_625 = _422<br/></td></tr><tr><td align="left">_614 = math::orders::standardize_price_i64(move _615, move _616, move _625)</td></tr></table>>];
    bb266__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">266</td></tr><tr><td align="left" balign="left">StorageLive(_621)<br/>_621 = ((_617 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_623)<br/>_623 = _621<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _623)</td></tr></table>>];
    bb267__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">267</td></tr><tr><td align="left" balign="left">StorageDead(_623)<br/>StorageDead(_621)<br/>StorageDead(_616)<br/>StorageDead(_615)<br/>StorageDead(_614)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb268__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">268</td></tr><tr><td align="left" balign="left">StorageDead(_625)<br/>StorageDead(_616)<br/>StorageDead(_615)<br/></td></tr><tr><td align="left">_613 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _614)</td></tr></table>>];
    bb269__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">269</td></tr><tr><td align="left" balign="left">StorageDead(_614)<br/>_626 = discriminant(_613)<br/></td></tr><tr><td align="left">switchInt(move _626)</td></tr></table>>];
    bb270__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">270</td></tr><tr><td align="left" balign="left">StorageLive(_630)<br/>_630 = ((_613 as Continue).0: i64)<br/>_612 = _630<br/>StorageDead(_630)<br/>StorageDead(_617)<br/>StorageDead(_613)<br/>StorageLive(_631)<br/>StorageLive(_632)<br/>StorageLive(_633)<br/>StorageLive(_634)<br/>StorageLive(_635)<br/>StorageLive(_636)<br/>StorageLive(_637)<br/>StorageLive(_638)<br/>StorageLive(_639)<br/>StorageLive(_640)<br/>_640 = _421<br/></td></tr><tr><td align="left">_639 = &lt;i64 as Cast&gt;::cast::&lt;i128&gt;(move _640)</td></tr></table>>];
    bb271__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">271</td></tr><tr><td align="left" balign="left">StorageLive(_627)<br/>_627 = ((_613 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_629)<br/>_629 = _627<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _629)</td></tr></table>>];
    bb272__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">272</td></tr><tr><td align="left" balign="left">StorageDead(_629)<br/>StorageDead(_627)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb273__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">273</td></tr><tr><td align="left" balign="left">StorageDead(_640)<br/></td></tr><tr><td align="left">_638 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _639)</td></tr></table>>];
    bb274__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">274</td></tr><tr><td align="left" balign="left">StorageDead(_639)<br/>_641 = discriminant(_638)<br/></td></tr><tr><td align="left">switchInt(move _641)</td></tr></table>>];
    bb275__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">275</td></tr><tr><td align="left" balign="left">StorageLive(_645)<br/>_645 = ((_638 as Continue).0: i128)<br/>_637 = _645<br/>StorageDead(_645)<br/>StorageLive(_646)<br/>_646 = _612<br/></td></tr><tr><td align="left">_636 = calculate_base_asset_value_with_oracle_price(move _637, move _646)</td></tr></table>>];
    bb276__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">276</td></tr><tr><td align="left" balign="left">StorageLive(_642)<br/>_642 = ((_638 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_644)<br/>_644 = _642<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _644)</td></tr></table>>];
    bb277__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">277</td></tr><tr><td align="left" balign="left">StorageDead(_644)<br/>StorageDead(_642)<br/>StorageDead(_637)<br/>StorageDead(_636)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb278__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">278</td></tr><tr><td align="left" balign="left">StorageDead(_646)<br/>StorageDead(_637)<br/></td></tr><tr><td align="left">_635 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _636)</td></tr></table>>];
    bb279__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">279</td></tr><tr><td align="left" balign="left">StorageDead(_636)<br/>_647 = discriminant(_635)<br/></td></tr><tr><td align="left">switchInt(move _647)</td></tr></table>>];
    bb280__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">280</td></tr><tr><td align="left" balign="left">StorageLive(_651)<br/>_651 = ((_635 as Continue).0: u128)<br/>_634 = _651<br/>StorageDead(_651)<br/></td></tr><tr><td align="left">_633 = &lt;u128 as Cast&gt;::cast::&lt;u64&gt;(move _634)</td></tr></table>>];
    bb281__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">281</td></tr><tr><td align="left" balign="left">StorageLive(_648)<br/>_648 = ((_635 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_650)<br/>_650 = _648<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _650)</td></tr></table>>];
    bb282__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">282</td></tr><tr><td align="left" balign="left">StorageDead(_650)<br/>StorageDead(_648)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb283__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">283</td></tr><tr><td align="left" balign="left">StorageDead(_634)<br/></td></tr><tr><td align="left">_632 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _633)</td></tr></table>>];
    bb284__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">284</td></tr><tr><td align="left" balign="left">StorageDead(_633)<br/>_652 = discriminant(_632)<br/></td></tr><tr><td align="left">switchInt(move _652)</td></tr></table>>];
    bb285__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">285</td></tr><tr><td align="left" balign="left">StorageLive(_656)<br/>_656 = ((_632 as Continue).0: u64)<br/>_631 = _656<br/>StorageDead(_656)<br/>StorageDead(_638)<br/>StorageDead(_635)<br/>StorageDead(_632)<br/>StorageLive(_657)<br/>StorageLive(_658)<br/>_658 = _421<br/></td></tr><tr><td align="left">_657 = core::num::&lt;impl i64&gt;::unsigned_abs(move _658)</td></tr></table>>];
    bb286__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">286</td></tr><tr><td align="left" balign="left">StorageLive(_653)<br/>_653 = ((_632 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_655)<br/>_655 = _653<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _655)</td></tr></table>>];
    bb287__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">287</td></tr><tr><td align="left" balign="left">StorageDead(_655)<br/>StorageDead(_653)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb288__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">288</td></tr><tr><td align="left" balign="left">StorageDead(_658)<br/>StorageLive(_659)<br/>StorageLive(_660)<br/>StorageLive(_661)<br/>StorageLive(_662)<br/>_662 = _657<br/>StorageLive(_663)<br/>_663 = _631<br/>StorageLive(_664)<br/>_664 = _422<br/></td></tr><tr><td align="left">_661 = math::orders::get_position_delta_for_fill(move _662, move _663, move _664)</td></tr></table>>];
    bb289__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">289</td></tr><tr><td align="left" balign="left">StorageDead(_664)<br/>StorageDead(_663)<br/>StorageDead(_662)<br/></td></tr><tr><td align="left">_660 = &lt;std::result::Result&lt;PositionDelta, error::ErrorCode&gt; as Try&gt;::branch(move _661)</td></tr></table>>];
    bb290__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">290</td></tr><tr><td align="left" balign="left">StorageDead(_661)<br/>_665 = discriminant(_660)<br/></td></tr><tr><td align="left">switchInt(move _665)</td></tr></table>>];
    bb291__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">291</td></tr><tr><td align="left" balign="left">StorageLive(_669)<br/>_669 = move ((_660 as Continue).0: controller::position::PositionDelta)<br/>_659 = move _669<br/>StorageDead(_669)<br/>StorageDead(_660)<br/>StorageLive(_670)<br/>StorageLive(_671)<br/>StorageLive(_672)<br/>StorageLive(_673)<br/>_673 = _657<br/>StorageLive(_674)<br/>_674 = _631<br/>StorageLive(_675)<br/>StorageLive(_676)<br/>_676 = &amp;_422<br/></td></tr><tr><td align="left">_675 = controller::position::PositionDirection::opposite(move _676)</td></tr></table>>];
    bb292__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">292</td></tr><tr><td align="left" balign="left">StorageLive(_666)<br/>_666 = ((_660 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_668)<br/>_668 = _666<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _668)</td></tr></table>>];
    bb293__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">293</td></tr><tr><td align="left" balign="left">StorageDead(_668)<br/>StorageDead(_666)<br/>StorageDead(_660)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb294__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">294</td></tr><tr><td align="left" balign="left">StorageDead(_676)<br/></td></tr><tr><td align="left">_672 = math::orders::get_position_delta_for_fill(move _673, move _674, move _675)</td></tr></table>>];
    bb295__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">295</td></tr><tr><td align="left" balign="left">StorageDead(_675)<br/>StorageDead(_674)<br/>StorageDead(_673)<br/></td></tr><tr><td align="left">_671 = &lt;std::result::Result&lt;PositionDelta, error::ErrorCode&gt; as Try&gt;::branch(move _672)</td></tr></table>>];
    bb296__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">296</td></tr><tr><td align="left" balign="left">StorageDead(_672)<br/>_677 = discriminant(_671)<br/></td></tr><tr><td align="left">switchInt(move _677)</td></tr></table>>];
    bb297__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">297</td></tr><tr><td align="left" balign="left">StorageLive(_681)<br/>_681 = move ((_671 as Continue).0: controller::position::PositionDelta)<br/>_670 = move _681<br/>StorageDead(_681)<br/>StorageDead(_671)<br/>StorageLive(_682)<br/>StorageLive(_683)<br/>StorageLive(_684)<br/>StorageLive(_685)<br/>StorageLive(_686)<br/>StorageLive(_687)<br/>StorageLive(_688)<br/>_688 = &amp;mut (*_28)<br/></td></tr><tr><td align="left">_687 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _688)</td></tr></table>>];
    bb298__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">298</td></tr><tr><td align="left" balign="left">StorageLive(_678)<br/>_678 = ((_671 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_680)<br/>_680 = _678<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _680)</td></tr></table>>];
    bb299__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">299</td></tr><tr><td align="left" balign="left">StorageDead(_680)<br/>StorageDead(_678)<br/>StorageDead(_671)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb300__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">300</td></tr><tr><td align="left" balign="left">_686 = &amp;mut (*_687)<br/>StorageDead(_688)<br/>StorageLive(_689)<br/>_689 = _2<br/></td></tr><tr><td align="left">_685 = User::force_get_perp_position_mut(move _686, move _689)</td></tr></table>>];
    bb301__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">301</td></tr><tr><td align="left" balign="left">StorageDead(_689)<br/>StorageDead(_686)<br/>StorageLive(_690)<br/>_690 = {closure@programs/drift/src/instructions/user.rs:1725:14: 1725:24}<br/></td></tr><tr><td align="left">_684 = std::result::Result::&lt;&amp;mut PerpPosition, error::ErrorCode&gt;::map::&lt;controller::position::PositionDirection, {closure@programs/drift/src/instructions/user.rs:1725:14: 1725:24}&gt;(move _685, move _690)</td></tr></table>>];
    bb302__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">302</td></tr><tr><td align="left" balign="left">StorageDead(_690)<br/>StorageDead(_685)<br/></td></tr><tr><td align="left">_683 = &lt;std::result::Result&lt;controller::position::PositionDirection, error::ErrorCode&gt; as Try&gt;::branch(move _684)</td></tr></table>>];
    bb303__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">303</td></tr><tr><td align="left" balign="left">StorageDead(_684)<br/>_691 = discriminant(_683)<br/></td></tr><tr><td align="left">switchInt(move _691)</td></tr></table>>];
    bb304__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">304</td></tr><tr><td align="left" balign="left">StorageLive(_695)<br/>_695 = ((_683 as Continue).0: controller::position::PositionDirection)<br/>_682 = _695<br/>StorageDead(_695)<br/>StorageDead(_687)<br/>StorageDead(_683)<br/>StorageLive(_700)<br/>StorageLive(_701)<br/>StorageLive(_702)<br/>StorageLive(_703)<br/>StorageLive(_704)<br/>_704 = &amp;_171<br/>StorageLive(_705)<br/>StorageLive(_706)<br/>_706 = &amp;_2<br/>_705 = &amp;(*_706)<br/></td></tr><tr><td align="left">_703 = PerpMarketMap::&lt;'_&gt;::get_ref_mut(move _704, move _705)</td></tr></table>>];
    bb305__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">305</td></tr><tr><td align="left" balign="left">StorageLive(_692)<br/>_692 = ((_683 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_694)<br/>_694 = _692<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _694)</td></tr></table>>];
    bb306__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">306</td></tr><tr><td align="left" balign="left">StorageDead(_694)<br/>StorageDead(_692)<br/>StorageDead(_687)<br/>StorageDead(_683)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb307__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">307</td></tr><tr><td align="left" balign="left">StorageDead(_705)<br/>StorageDead(_704)<br/></td></tr><tr><td align="left">_702 = &lt;std::result::Result&lt;RefMut&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _703)</td></tr></table>>];
    bb308__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">308</td></tr><tr><td align="left" balign="left">StorageDead(_703)<br/>_707 = discriminant(_702)<br/></td></tr><tr><td align="left">switchInt(move _707)</td></tr></table>>];
    bb309__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">309</td></tr><tr><td align="left" balign="left">StorageLive(_711)<br/>_711 = move ((_702 as Continue).0: std::cell::RefMut&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_701 = move _711<br/>StorageDead(_711)<br/>_1226 = discriminant(_702)<br/>StorageDead(_706)<br/>StorageDead(_702)<br/>StorageLive(_712)<br/>StorageLive(_713)<br/>StorageLive(_714)<br/>StorageLive(_715)<br/>StorageLive(_716)<br/>StorageLive(_717)<br/>_717 = &amp;mut (*_40)<br/></td></tr><tr><td align="left">_716 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _717)</td></tr></table>>];
    bb310__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">310</td></tr><tr><td align="left" balign="left">StorageLive(_708)<br/>_708 = ((_702 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_710)<br/>_710 = _708<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _710)</td></tr></table>>];
    bb311__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">311</td></tr><tr><td align="left" balign="left">StorageDead(_710)<br/>StorageDead(_708)<br/>_1224 = discriminant(_702)<br/>StorageDead(_706)<br/>StorageDead(_702)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb312__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">312</td></tr><tr><td align="left" balign="left">_715 = &amp;mut (*_716)<br/>StorageDead(_717)<br/>StorageLive(_718)<br/>_718 = _2<br/></td></tr><tr><td align="left">_714 = User::force_get_perp_position_mut(move _715, move _718)</td></tr></table>>];
    bb313__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">313</td></tr><tr><td align="left" balign="left">StorageDead(_718)<br/>StorageDead(_715)<br/></td></tr><tr><td align="left">_713 = &lt;std::result::Result&lt;&amp;mut PerpPosition, error::ErrorCode&gt; as Try&gt;::branch(move _714)</td></tr></table>>];
    bb314__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">314</td></tr><tr><td align="left" balign="left">StorageDead(_714)<br/>_719 = discriminant(_713)<br/></td></tr><tr><td align="left">switchInt(move _719)</td></tr></table>>];
    bb315__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">315</td></tr><tr><td align="left" balign="left">StorageLive(_723)<br/>_723 = move ((_713 as Continue).0: &amp;mut state::user::PerpPosition)<br/>_712 = move _723<br/>StorageDead(_723)<br/>StorageDead(_716)<br/>StorageDead(_713)<br/>StorageLive(_726)<br/>StorageLive(_727)<br/>StorageLive(_728)<br/>StorageLive(_729)<br/>_729 = _657<br/>StorageLive(_730)<br/>StorageLive(_731)<br/>_731 = &amp;(*_712)<br/>StorageLive(_732)<br/>_732 = _422<br/></td></tr><tr><td align="left">_730 = PerpPosition::get_existing_position_params_for_order_action(move _731, move _732)</td></tr></table>>];
    bb316__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">316</td></tr><tr><td align="left" balign="left">StorageLive(_720)<br/>_720 = ((_713 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_722)<br/>_722 = _720<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _722)</td></tr></table>>];
    bb317__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">317</td></tr><tr><td align="left" balign="left">StorageDead(_722)<br/>StorageDead(_720)<br/>StorageDead(_716)<br/>StorageDead(_713)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb318__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">318</td></tr><tr><td align="left" balign="left">StorageDead(_732)<br/>StorageDead(_731)<br/></td></tr><tr><td align="left">_728 = math::orders::calculate_existing_position_fields_for_order_action(move _729, move _730)</td></tr></table>>];
    bb319__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">319</td></tr><tr><td align="left" balign="left">StorageDead(_730)<br/>StorageDead(_729)<br/></td></tr><tr><td align="left">_727 = &lt;std::result::Result&lt;(Option&lt;u64&gt;, Option&lt;u64&gt;), error::ErrorCode&gt; as Try&gt;::branch(move _728)</td></tr></table>>];
    bb320__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">320</td></tr><tr><td align="left" balign="left">StorageDead(_728)<br/>_733 = discriminant(_727)<br/></td></tr><tr><td align="left">switchInt(move _733)</td></tr></table>>];
    bb321__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">321</td></tr><tr><td align="left" balign="left">StorageLive(_737)<br/>_737 = ((_727 as Continue).0: (std::option::Option&lt;u64&gt;, std::option::Option&lt;u64&gt;))<br/>_726 = _737<br/>StorageDead(_737)<br/>StorageLive(_724)<br/>_724 = (_726.0: std::option::Option&lt;u64&gt;)<br/>StorageLive(_725)<br/>_725 = (_726.1: std::option::Option&lt;u64&gt;)<br/>StorageDead(_727)<br/>StorageDead(_726)<br/>StorageLive(_738)<br/>StorageLive(_739)<br/>StorageLive(_740)<br/>StorageLive(_741)<br/>_741 = &amp;mut (*_712)<br/>StorageLive(_742)<br/>StorageLive(_743)<br/>StorageLive(_744)<br/>StorageLive(_745)<br/>_745 = &amp;mut _701<br/>_744 = &amp;mut (*_745)<br/></td></tr><tr><td align="left">_743 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _744)</td></tr></table>>];
    bb322__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">322</td></tr><tr><td align="left" balign="left">StorageLive(_734)<br/>_734 = ((_727 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_736)<br/>_736 = _734<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _736)</td></tr></table>>];
    bb323__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">323</td></tr><tr><td align="left" balign="left">StorageDead(_736)<br/>StorageDead(_734)<br/>StorageDead(_727)<br/>StorageDead(_726)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb324__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">324</td></tr><tr><td align="left" balign="left">_742 = &amp;mut (*_743)<br/>StorageDead(_744)<br/>StorageLive(_746)<br/>StorageLive(_747)<br/>_747 = &amp;_659<br/>_746 = &amp;(*_747)<br/></td></tr><tr><td align="left">_740 = update_position_and_market(move _741, move _742, move _746)</td></tr></table>>];
    bb325__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">325</td></tr><tr><td align="left" balign="left">StorageDead(_746)<br/>StorageDead(_742)<br/>StorageDead(_741)<br/></td></tr><tr><td align="left">_739 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _740)</td></tr></table>>];
    bb326__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">326</td></tr><tr><td align="left" balign="left">StorageDead(_740)<br/>_748 = discriminant(_739)<br/></td></tr><tr><td align="left">switchInt(move _748)</td></tr></table>>];
    bb327__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">327</td></tr><tr><td align="left" balign="left">StorageLive(_752)<br/>_752 = ((_739 as Continue).0: i64)<br/>_738 = _752<br/>StorageDead(_752)<br/>StorageDead(_747)<br/>StorageDead(_745)<br/>StorageDead(_743)<br/>StorageDead(_739)<br/>StorageDead(_738)<br/>StorageLive(_753)<br/>StorageLive(_754)<br/>StorageLive(_755)<br/>StorageLive(_756)<br/>StorageLive(_757)<br/>StorageLive(_758)<br/>_758 = &amp;mut (*_28)<br/></td></tr><tr><td align="left">_757 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _758)</td></tr></table>>];
    bb328__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">328</td></tr><tr><td align="left" balign="left">StorageLive(_749)<br/>_749 = ((_739 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_751)<br/>_751 = _749<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _751)</td></tr></table>>];
    bb329__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">329</td></tr><tr><td align="left" balign="left">StorageDead(_751)<br/>StorageDead(_749)<br/>StorageDead(_747)<br/>StorageDead(_745)<br/>StorageDead(_743)<br/>StorageDead(_739)<br/>StorageDead(_738)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb330__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">330</td></tr><tr><td align="left" balign="left">_756 = &amp;mut (*_757)<br/>StorageDead(_758)<br/>StorageLive(_759)<br/>_759 = _2<br/></td></tr><tr><td align="left">_755 = User::force_get_perp_position_mut(move _756, move _759)</td></tr></table>>];
    bb331__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">331</td></tr><tr><td align="left" balign="left">StorageDead(_759)<br/>StorageDead(_756)<br/></td></tr><tr><td align="left">_754 = &lt;std::result::Result&lt;&amp;mut PerpPosition, error::ErrorCode&gt; as Try&gt;::branch(move _755)</td></tr></table>>];
    bb332__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">332</td></tr><tr><td align="left" balign="left">StorageDead(_755)<br/>_760 = discriminant(_754)<br/></td></tr><tr><td align="left">switchInt(move _760)</td></tr></table>>];
    bb333__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">333</td></tr><tr><td align="left" balign="left">StorageLive(_764)<br/>_764 = move ((_754 as Continue).0: &amp;mut state::user::PerpPosition)<br/>_753 = move _764<br/>StorageDead(_764)<br/>StorageDead(_757)<br/>StorageDead(_754)<br/>StorageLive(_767)<br/>StorageLive(_768)<br/>StorageLive(_769)<br/>StorageLive(_770)<br/>_770 = _657<br/>StorageLive(_771)<br/>StorageLive(_772)<br/>_772 = &amp;(*_753)<br/>StorageLive(_773)<br/>StorageLive(_774)<br/>_774 = &amp;_422<br/></td></tr><tr><td align="left">_773 = controller::position::PositionDirection::opposite(move _774)</td></tr></table>>];
    bb334__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">334</td></tr><tr><td align="left" balign="left">StorageLive(_761)<br/>_761 = ((_754 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_763)<br/>_763 = _761<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _763)</td></tr></table>>];
    bb335__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">335</td></tr><tr><td align="left" balign="left">StorageDead(_763)<br/>StorageDead(_761)<br/>StorageDead(_757)<br/>StorageDead(_754)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb336__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">336</td></tr><tr><td align="left" balign="left">StorageDead(_774)<br/></td></tr><tr><td align="left">_771 = PerpPosition::get_existing_position_params_for_order_action(move _772, move _773)</td></tr></table>>];
    bb337__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">337</td></tr><tr><td align="left" balign="left">StorageDead(_773)<br/>StorageDead(_772)<br/></td></tr><tr><td align="left">_769 = math::orders::calculate_existing_position_fields_for_order_action(move _770, move _771)</td></tr></table>>];
    bb338__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">338</td></tr><tr><td align="left" balign="left">StorageDead(_771)<br/>StorageDead(_770)<br/></td></tr><tr><td align="left">_768 = &lt;std::result::Result&lt;(Option&lt;u64&gt;, Option&lt;u64&gt;), error::ErrorCode&gt; as Try&gt;::branch(move _769)</td></tr></table>>];
    bb339__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">339</td></tr><tr><td align="left" balign="left">StorageDead(_769)<br/>_775 = discriminant(_768)<br/></td></tr><tr><td align="left">switchInt(move _775)</td></tr></table>>];
    bb340__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">340</td></tr><tr><td align="left" balign="left">StorageLive(_779)<br/>_779 = ((_768 as Continue).0: (std::option::Option&lt;u64&gt;, std::option::Option&lt;u64&gt;))<br/>_767 = _779<br/>StorageDead(_779)<br/>StorageLive(_765)<br/>_765 = (_767.0: std::option::Option&lt;u64&gt;)<br/>StorageLive(_766)<br/>_766 = (_767.1: std::option::Option&lt;u64&gt;)<br/>StorageDead(_768)<br/>StorageDead(_767)<br/>StorageLive(_780)<br/>StorageLive(_781)<br/>StorageLive(_782)<br/>StorageLive(_783)<br/>_783 = &amp;mut (*_753)<br/>StorageLive(_784)<br/>StorageLive(_785)<br/>StorageLive(_786)<br/>StorageLive(_787)<br/>_787 = &amp;mut _701<br/>_786 = &amp;mut (*_787)<br/></td></tr><tr><td align="left">_785 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _786)</td></tr></table>>];
    bb341__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">341</td></tr><tr><td align="left" balign="left">StorageLive(_776)<br/>_776 = ((_768 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_778)<br/>_778 = _776<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _778)</td></tr></table>>];
    bb342__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">342</td></tr><tr><td align="left" balign="left">StorageDead(_778)<br/>StorageDead(_776)<br/>StorageDead(_768)<br/>StorageDead(_767)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb343__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">343</td></tr><tr><td align="left" balign="left">_784 = &amp;mut (*_785)<br/>StorageDead(_786)<br/>StorageLive(_788)<br/>StorageLive(_789)<br/>_789 = &amp;_670<br/>_788 = &amp;(*_789)<br/></td></tr><tr><td align="left">_782 = update_position_and_market(move _783, move _784, move _788)</td></tr></table>>];
    bb344__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">344</td></tr><tr><td align="left" balign="left">StorageDead(_788)<br/>StorageDead(_784)<br/>StorageDead(_783)<br/></td></tr><tr><td align="left">_781 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _782)</td></tr></table>>];
    bb345__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">345</td></tr><tr><td align="left" balign="left">StorageDead(_782)<br/>_790 = discriminant(_781)<br/></td></tr><tr><td align="left">switchInt(move _790)</td></tr></table>>];
    bb346__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">346</td></tr><tr><td align="left" balign="left">StorageLive(_794)<br/>_794 = ((_781 as Continue).0: i64)<br/>_780 = _794<br/>StorageDead(_794)<br/>StorageDead(_789)<br/>StorageDead(_787)<br/>StorageDead(_785)<br/>StorageDead(_781)<br/>StorageDead(_780)<br/>StorageLive(_795)<br/>StorageLive(_796)<br/>StorageLive(_797)<br/>StorageLive(_798)<br/>_798 = &amp;(*_712)<br/>StorageLive(_799)<br/>StorageLive(_800)<br/>StorageLive(_801)<br/>StorageLive(_802)<br/>_802 = &amp;_701<br/>_801 = &amp;(*_802)<br/></td></tr><tr><td align="left">_800 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _801)</td></tr></table>>];
    bb347__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">347</td></tr><tr><td align="left" balign="left">StorageLive(_791)<br/>_791 = ((_781 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_793)<br/>_793 = _791<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _793)</td></tr></table>>];
    bb348__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">348</td></tr><tr><td align="left" balign="left">StorageDead(_793)<br/>StorageDead(_791)<br/>StorageDead(_789)<br/>StorageDead(_787)<br/>StorageDead(_785)<br/>StorageDead(_781)<br/>StorageDead(_780)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb349__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">349</td></tr><tr><td align="left" balign="left">_799 = &amp;(*_800)<br/>StorageDead(_801)<br/></td></tr><tr><td align="left">_797 = validate_perp_position_with_perp_market(move _798, move _799)</td></tr></table>>];
    bb350__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">350</td></tr><tr><td align="left" balign="left">StorageDead(_799)<br/>StorageDead(_798)<br/></td></tr><tr><td align="left">_796 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _797)</td></tr></table>>];
    bb351__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">351</td></tr><tr><td align="left" balign="left">StorageDead(_797)<br/>_803 = discriminant(_796)<br/></td></tr><tr><td align="left">switchInt(move _803)</td></tr></table>>];
    bb352__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">352</td></tr><tr><td align="left" balign="left">StorageLive(_807)<br/>_807 = ((_796 as Continue).0: ())<br/>_795 = _807<br/>StorageDead(_807)<br/>StorageDead(_802)<br/>StorageDead(_800)<br/>StorageDead(_796)<br/>StorageDead(_795)<br/>StorageLive(_808)<br/>StorageLive(_809)<br/>StorageLive(_810)<br/>StorageLive(_811)<br/>_811 = &amp;(*_753)<br/>StorageLive(_812)<br/>StorageLive(_813)<br/>StorageLive(_814)<br/>StorageLive(_815)<br/>_815 = &amp;_701<br/>_814 = &amp;(*_815)<br/></td></tr><tr><td align="left">_813 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _814)</td></tr></table>>];
    bb353__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">353</td></tr><tr><td align="left" balign="left">StorageLive(_804)<br/>_804 = ((_796 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_806)<br/>_806 = _804<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _806)</td></tr></table>>];
    bb354__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">354</td></tr><tr><td align="left" balign="left">StorageDead(_806)<br/>StorageDead(_804)<br/>StorageDead(_802)<br/>StorageDead(_800)<br/>StorageDead(_796)<br/>StorageDead(_795)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb355__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">355</td></tr><tr><td align="left" balign="left">_812 = &amp;(*_813)<br/>StorageDead(_814)<br/></td></tr><tr><td align="left">_810 = validate_perp_position_with_perp_market(move _811, move _812)</td></tr></table>>];
    bb356__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">356</td></tr><tr><td align="left" balign="left">StorageDead(_812)<br/>StorageDead(_811)<br/></td></tr><tr><td align="left">_809 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _810)</td></tr></table>>];
    bb357__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">357</td></tr><tr><td align="left" balign="left">StorageDead(_810)<br/>_816 = discriminant(_809)<br/></td></tr><tr><td align="left">switchInt(move _816)</td></tr></table>>];
    bb358__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">358</td></tr><tr><td align="left" balign="left">StorageLive(_820)<br/>_820 = ((_809 as Continue).0: ())<br/>_808 = _820<br/>StorageDead(_820)<br/>StorageDead(_815)<br/>StorageDead(_813)<br/>StorageDead(_809)<br/>StorageDead(_808)<br/>StorageLive(_821)<br/>_821 = _724<br/>StorageLive(_822)<br/>_822 = _725<br/>StorageLive(_823)<br/>_823 = _765<br/>StorageLive(_824)<br/>_824 = _766<br/>_700 = (move _821, move _822, move _823, move _824)<br/>StorageDead(_824)<br/>StorageDead(_823)<br/>StorageDead(_822)<br/>StorageDead(_821)<br/>StorageDead(_766)<br/>StorageDead(_765)<br/>StorageDead(_753)<br/>StorageDead(_725)<br/>StorageDead(_724)<br/>StorageDead(_712)<br/></td></tr><tr><td align="left">drop(_701)</td></tr></table>>];
    bb359__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">359</td></tr><tr><td align="left" balign="left">StorageLive(_817)<br/>_817 = ((_809 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_819)<br/>_819 = _817<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _819)</td></tr></table>>];
    bb360__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">360</td></tr><tr><td align="left" balign="left">StorageDead(_819)<br/>StorageDead(_817)<br/>StorageDead(_815)<br/>StorageDead(_813)<br/>StorageDead(_809)<br/>StorageDead(_808)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb361__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">361</td></tr><tr><td align="left" balign="left">StorageDead(_701)<br/>StorageLive(_696)<br/>_696 = (_700.0: std::option::Option&lt;u64&gt;)<br/>StorageLive(_697)<br/>_697 = (_700.1: std::option::Option&lt;u64&gt;)<br/>StorageLive(_698)<br/>_698 = (_700.2: std::option::Option&lt;u64&gt;)<br/>StorageLive(_699)<br/>_699 = (_700.3: std::option::Option&lt;u64&gt;)<br/>StorageDead(_700)<br/>StorageLive(_825)<br/>StorageLive(_826)<br/>StorageLive(_827)<br/>StorageLive(_828)<br/>StorageLive(_829)<br/>StorageLive(_830)<br/>StorageLive(_831)<br/>_831 = &amp;_40<br/>_1194 = deref_copy (*_831)<br/>_830 = &amp;(*_1194)<br/></td></tr><tr><td align="left">_829 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _830)</td></tr></table>>];
    bb362__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">362</td></tr><tr><td align="left" balign="left">_828 = &amp;(*_829)<br/>StorageDead(_830)<br/>StorageLive(_832)<br/>StorageLive(_833)<br/>_833 = &amp;_171<br/>_832 = &amp;(*_833)<br/>StorageLive(_834)<br/>StorageLive(_835)<br/>_835 = &amp;_172<br/>_834 = &amp;(*_835)<br/>StorageLive(_836)<br/>StorageLive(_837)<br/>_837 = &amp;mut _173<br/>_836 = &amp;mut (*_837)<br/>StorageLive(_838)<br/>StorageLive(_839)<br/>StorageLive(_840)<br/>_840 = math::margin::MarginRequirementType::Maintenance<br/></td></tr><tr><td align="left">_839 = MarginContext::standard(move _840)</td></tr></table>>];
    bb363__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">363</td></tr><tr><td align="left" balign="left">StorageDead(_840)<br/>StorageLive(_841)<br/>_841 = _2<br/>StorageLive(_842)<br/>_842 = _421<br/></td></tr><tr><td align="left">_838 = MarginContext::fuel_perp_delta(move _839, move _841, move _842)</td></tr></table>>];
    bb364__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">364</td></tr><tr><td align="left" balign="left">StorageDead(_842)<br/>StorageDead(_841)<br/>StorageDead(_839)<br/></td></tr><tr><td align="left">_827 = math::margin::calculate_margin_requirement_and_total_collateral_and_liability_info(move _828, move _832, move _834, move _836, move _838)</td></tr></table>>];
    bb365__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">365</td></tr><tr><td align="left" balign="left">StorageDead(_838)<br/>StorageDead(_836)<br/>StorageDead(_834)<br/>StorageDead(_832)<br/>StorageDead(_828)<br/></td></tr><tr><td align="left">_826 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as Try&gt;::branch(move _827)</td></tr></table>>];
    bb366__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">366</td></tr><tr><td align="left" balign="left">StorageDead(_827)<br/>_843 = discriminant(_826)<br/></td></tr><tr><td align="left">switchInt(move _843)</td></tr></table>>];
    bb367__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">367</td></tr><tr><td align="left" balign="left">StorageLive(_847)<br/>_847 = ((_826 as Continue).0: state::margin_calculation::MarginCalculation)<br/>_825 = _847<br/>StorageDead(_847)<br/>StorageDead(_837)<br/>StorageDead(_835)<br/>StorageDead(_833)<br/>StorageDead(_831)<br/>StorageDead(_829)<br/>StorageDead(_826)<br/>StorageLive(_848)<br/>StorageLive(_849)<br/>StorageLive(_850)<br/>StorageLive(_851)<br/>StorageLive(_852)<br/>_852 = &amp;_825<br/></td></tr><tr><td align="left">_851 = MarginCalculation::meets_margin_requirement(move _852)</td></tr></table>>];
    bb368__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">368</td></tr><tr><td align="left" balign="left">StorageLive(_844)<br/>_844 = ((_826 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_846)<br/>_846 = _844<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _846)</td></tr></table>>];
    bb369__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">369</td></tr><tr><td align="left" balign="left">StorageDead(_846)<br/>StorageDead(_844)<br/>StorageDead(_837)<br/>StorageDead(_835)<br/>StorageDead(_833)<br/>StorageDead(_831)<br/>StorageDead(_829)<br/>StorageDead(_826)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb370__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">370</td></tr><tr><td align="left">switchInt(move _851)</td></tr></table>>];
    bb371__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">371</td></tr><tr><td align="left" balign="left">StorageDead(_852)<br/>StorageLive(_853)<br/>_853 = ()<br/>_850 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _853)<br/>StorageDead(_853)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb372__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">372</td></tr><tr><td align="left" balign="left">StorageDead(_852)<br/>StorageLive(_854)<br/>_854 = error::ErrorCode::InsufficientCollateral<br/>StorageLive(_855)<br/>StorageLive(_856)<br/>StorageLive(_857)<br/>StorageLive(_858)<br/>StorageLive(_859)<br/>StorageLive(_860)<br/>StorageLive(_861)<br/>StorageLive(_862)<br/>StorageLive(_863)<br/>StorageLive(_864)<br/>StorageLive(_865)<br/>_1171 = const _<br/>_865 = &amp;(*_1171)<br/>_864 = &amp;(*_865)<br/>_863 = move _864 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_864)<br/>StorageLive(_867)<br/>StorageLive(_868)<br/>StorageLive(_869)<br/>StorageLive(_870)<br/>StorageLive(_871)<br/>StorageLive(_872)<br/>StorageLive(_873)<br/>_873 = &amp;_854<br/>_872 = &amp;(*_873)<br/></td></tr><tr><td align="left">_871 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _872)</td></tr></table>>];
    bb373__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">373</td></tr><tr><td align="left" balign="left">StorageDead(_872)<br/>_870 = [move _871]<br/>StorageDead(_871)<br/>_869 = &amp;_870<br/>_868 = &amp;(*_869)<br/>_867 = move _868 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_868)<br/></td></tr><tr><td align="left">_862 = Arguments::&lt;'_&gt;::new_v1(move _863, move _867)</td></tr></table>>];
    bb374__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">374</td></tr><tr><td align="left" balign="left">StorageDead(_867)<br/>StorageDead(_863)<br/></td></tr><tr><td align="left">_861 = format(move _862)</td></tr></table>>];
    bb375__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">375</td></tr><tr><td align="left" balign="left">StorageDead(_862)<br/>StorageDead(_873)<br/>StorageDead(_870)<br/>StorageDead(_869)<br/>StorageDead(_865)<br/>_860 = move _861<br/>StorageDead(_861)<br/>_859 = &amp;_860<br/>_858 = &amp;(*_859)<br/></td></tr><tr><td align="left">_857 = &lt;String as Deref&gt;::deref(move _858)</td></tr></table>>];
    bb376__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">376</td></tr><tr><td align="left" balign="left">_856 = &amp;(*_857)<br/>StorageDead(_858)<br/></td></tr><tr><td align="left">_855 = solana_program::log::sol_log(move _856)</td></tr></table>>];
    bb377__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">377</td></tr><tr><td align="left" balign="left">StorageDead(_856)<br/></td></tr><tr><td align="left">drop(_860)</td></tr></table>>];
    bb378__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">378</td></tr><tr><td align="left" balign="left">StorageDead(_860)<br/>StorageDead(_859)<br/>StorageDead(_857)<br/>StorageDead(_855)<br/>StorageLive(_874)<br/>StorageLive(_875)<br/>StorageLive(_876)<br/>_876 = const &quot;from user margin requirement is greater than total collateral&quot;<br/>_875 = &amp;(*_876)<br/></td></tr><tr><td align="left">_874 = solana_program::log::sol_log(move _875)</td></tr></table>>];
    bb379__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">379</td></tr><tr><td align="left" balign="left">StorageDead(_875)<br/>StorageDead(_876)<br/>StorageDead(_874)<br/>StorageLive(_877)<br/>_877 = _854<br/>_850 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _877)<br/>StorageDead(_877)<br/>StorageDead(_854)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb380__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">380</td></tr><tr><td align="left" balign="left">StorageDead(_851)<br/></td></tr><tr><td align="left">_849 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _850)</td></tr></table>>];
    bb381__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">381</td></tr><tr><td align="left" balign="left">StorageDead(_850)<br/>_878 = discriminant(_849)<br/></td></tr><tr><td align="left">switchInt(move _878)</td></tr></table>>];
    bb382__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">382</td></tr><tr><td align="left" balign="left">StorageLive(_882)<br/>_882 = ((_849 as Continue).0: ())<br/>_848 = _882<br/>StorageDead(_882)<br/>StorageDead(_849)<br/>StorageDead(_848)<br/>StorageLive(_883)<br/>StorageLive(_884)<br/>StorageLive(_885)<br/>StorageLive(_886)<br/>StorageLive(_887)<br/>StorageLive(_888)<br/>StorageLive(_889)<br/>_889 = &amp;_28<br/>_1195 = deref_copy (*_889)<br/>_888 = &amp;(*_1195)<br/></td></tr><tr><td align="left">_887 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _888)</td></tr></table>>];
    bb383__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">383</td></tr><tr><td align="left" balign="left">StorageLive(_879)<br/>_879 = ((_849 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_881)<br/>_881 = _879<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _881)</td></tr></table>>];
    bb384__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">384</td></tr><tr><td align="left" balign="left">StorageDead(_881)<br/>StorageDead(_879)<br/>StorageDead(_849)<br/>StorageDead(_848)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb385__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">385</td></tr><tr><td align="left" balign="left">_886 = &amp;(*_887)<br/>StorageDead(_888)<br/>StorageLive(_890)<br/>StorageLive(_891)<br/>_891 = &amp;_171<br/>_890 = &amp;(*_891)<br/>StorageLive(_892)<br/>StorageLive(_893)<br/>_893 = &amp;_172<br/>_892 = &amp;(*_893)<br/>StorageLive(_894)<br/>StorageLive(_895)<br/>_895 = &amp;mut _173<br/>_894 = &amp;mut (*_895)<br/>StorageLive(_896)<br/>StorageLive(_897)<br/>StorageLive(_898)<br/>_898 = math::margin::MarginRequirementType::Initial<br/></td></tr><tr><td align="left">_897 = MarginContext::standard(move _898)</td></tr></table>>];
    bb386__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">386</td></tr><tr><td align="left" balign="left">StorageDead(_898)<br/>StorageLive(_899)<br/>_899 = _2<br/>StorageLive(_900)<br/>StorageLive(_901)<br/>_901 = _421<br/>_902 = Eq(_901, const i64::MIN)<br/></td></tr><tr><td align="left">assert(!move _902, &quot;attempt to negate `{}`, which would overflow&quot;, _901)</td></tr></table>>];
    bb387__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">387</td></tr><tr><td align="left" balign="left">_900 = Neg(move _901)<br/>StorageDead(_901)<br/></td></tr><tr><td align="left">_896 = MarginContext::fuel_perp_delta(move _897, move _899, move _900)</td></tr></table>>];
    bb388__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">388</td></tr><tr><td align="left" balign="left">StorageDead(_900)<br/>StorageDead(_899)<br/>StorageDead(_897)<br/></td></tr><tr><td align="left">_885 = math::margin::calculate_margin_requirement_and_total_collateral_and_liability_info(move _886, move _890, move _892, move _894, move _896)</td></tr></table>>];
    bb389__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">389</td></tr><tr><td align="left" balign="left">StorageDead(_896)<br/>StorageDead(_894)<br/>StorageDead(_892)<br/>StorageDead(_890)<br/>StorageDead(_886)<br/></td></tr><tr><td align="left">_884 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as Try&gt;::branch(move _885)</td></tr></table>>];
    bb390__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">390</td></tr><tr><td align="left" balign="left">StorageDead(_885)<br/>_903 = discriminant(_884)<br/></td></tr><tr><td align="left">switchInt(move _903)</td></tr></table>>];
    bb391__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">391</td></tr><tr><td align="left" balign="left">StorageLive(_907)<br/>_907 = ((_884 as Continue).0: state::margin_calculation::MarginCalculation)<br/>_883 = _907<br/>StorageDead(_907)<br/>StorageDead(_895)<br/>StorageDead(_893)<br/>StorageDead(_891)<br/>StorageDead(_889)<br/>StorageDead(_887)<br/>StorageDead(_884)<br/>StorageLive(_908)<br/>StorageLive(_909)<br/>StorageLive(_910)<br/>StorageLive(_911)<br/>StorageLive(_912)<br/>_912 = &amp;_883<br/></td></tr><tr><td align="left">_911 = MarginCalculation::meets_margin_requirement(move _912)</td></tr></table>>];
    bb392__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">392</td></tr><tr><td align="left" balign="left">StorageLive(_904)<br/>_904 = ((_884 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_906)<br/>_906 = _904<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _906)</td></tr></table>>];
    bb393__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">393</td></tr><tr><td align="left" balign="left">StorageDead(_906)<br/>StorageDead(_904)<br/>StorageDead(_895)<br/>StorageDead(_893)<br/>StorageDead(_891)<br/>StorageDead(_889)<br/>StorageDead(_887)<br/>StorageDead(_884)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb394__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">394</td></tr><tr><td align="left">switchInt(move _911)</td></tr></table>>];
    bb395__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">395</td></tr><tr><td align="left" balign="left">StorageDead(_912)<br/>StorageLive(_913)<br/>_913 = ()<br/>_910 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _913)<br/>StorageDead(_913)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb396__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">396</td></tr><tr><td align="left" balign="left">StorageDead(_912)<br/>StorageLive(_914)<br/>_914 = error::ErrorCode::InsufficientCollateral<br/>StorageLive(_915)<br/>StorageLive(_916)<br/>StorageLive(_917)<br/>StorageLive(_918)<br/>StorageLive(_919)<br/>StorageLive(_920)<br/>StorageLive(_921)<br/>StorageLive(_922)<br/>StorageLive(_923)<br/>StorageLive(_924)<br/>StorageLive(_925)<br/>_1170 = const _<br/>_925 = &amp;(*_1170)<br/>_924 = &amp;(*_925)<br/>_923 = move _924 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_924)<br/>StorageLive(_927)<br/>StorageLive(_928)<br/>StorageLive(_929)<br/>StorageLive(_930)<br/>StorageLive(_931)<br/>StorageLive(_932)<br/>StorageLive(_933)<br/>_933 = &amp;_914<br/>_932 = &amp;(*_933)<br/></td></tr><tr><td align="left">_931 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _932)</td></tr></table>>];
    bb397__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">397</td></tr><tr><td align="left" balign="left">StorageDead(_932)<br/>_930 = [move _931]<br/>StorageDead(_931)<br/>_929 = &amp;_930<br/>_928 = &amp;(*_929)<br/>_927 = move _928 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_928)<br/></td></tr><tr><td align="left">_922 = Arguments::&lt;'_&gt;::new_v1(move _923, move _927)</td></tr></table>>];
    bb398__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">398</td></tr><tr><td align="left" balign="left">StorageDead(_927)<br/>StorageDead(_923)<br/></td></tr><tr><td align="left">_921 = format(move _922)</td></tr></table>>];
    bb399__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">399</td></tr><tr><td align="left" balign="left">StorageDead(_922)<br/>StorageDead(_933)<br/>StorageDead(_930)<br/>StorageDead(_929)<br/>StorageDead(_925)<br/>_920 = move _921<br/>StorageDead(_921)<br/>_919 = &amp;_920<br/>_918 = &amp;(*_919)<br/></td></tr><tr><td align="left">_917 = &lt;String as Deref&gt;::deref(move _918)</td></tr></table>>];
    bb400__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">400</td></tr><tr><td align="left" balign="left">_916 = &amp;(*_917)<br/>StorageDead(_918)<br/></td></tr><tr><td align="left">_915 = solana_program::log::sol_log(move _916)</td></tr></table>>];
    bb401__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">401</td></tr><tr><td align="left" balign="left">StorageDead(_916)<br/></td></tr><tr><td align="left">drop(_920)</td></tr></table>>];
    bb402__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">402</td></tr><tr><td align="left" balign="left">StorageDead(_920)<br/>StorageDead(_919)<br/>StorageDead(_917)<br/>StorageDead(_915)<br/>StorageLive(_934)<br/>StorageLive(_935)<br/>StorageLive(_936)<br/>_936 = const &quot;to user margin requirement is greater than total collateral&quot;<br/>_935 = &amp;(*_936)<br/></td></tr><tr><td align="left">_934 = solana_program::log::sol_log(move _935)</td></tr></table>>];
    bb403__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">403</td></tr><tr><td align="left" balign="left">StorageDead(_935)<br/>StorageDead(_936)<br/>StorageDead(_934)<br/>StorageLive(_937)<br/>_937 = _914<br/>_910 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _937)<br/>StorageDead(_937)<br/>StorageDead(_914)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb404__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">404</td></tr><tr><td align="left" balign="left">StorageDead(_911)<br/></td></tr><tr><td align="left">_909 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _910)</td></tr></table>>];
    bb405__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">405</td></tr><tr><td align="left" balign="left">StorageDead(_910)<br/>_938 = discriminant(_909)<br/></td></tr><tr><td align="left">switchInt(move _938)</td></tr></table>>];
    bb406__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">406</td></tr><tr><td align="left" balign="left">StorageLive(_942)<br/>_942 = ((_909 as Continue).0: ())<br/>_908 = _942<br/>StorageDead(_942)<br/>StorageDead(_909)<br/>StorageDead(_908)<br/>StorageLive(_943)<br/>StorageLive(_944)<br/>StorageLive(_945)<br/>StorageLive(_946)<br/>_946 = &amp;_171<br/>StorageLive(_947)<br/>StorageLive(_948)<br/>_948 = &amp;_2<br/>_947 = &amp;(*_948)<br/></td></tr><tr><td align="left">_945 = PerpMarketMap::&lt;'_&gt;::get_ref_mut(move _946, move _947)</td></tr></table>>];
    bb407__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">407</td></tr><tr><td align="left" balign="left">StorageLive(_939)<br/>_939 = ((_909 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_941)<br/>_941 = _939<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _941)</td></tr></table>>];
    bb408__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">408</td></tr><tr><td align="left" balign="left">StorageDead(_941)<br/>StorageDead(_939)<br/>StorageDead(_909)<br/>StorageDead(_908)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb409__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">409</td></tr><tr><td align="left" balign="left">StorageDead(_947)<br/>StorageDead(_946)<br/></td></tr><tr><td align="left">_944 = &lt;std::result::Result&lt;RefMut&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _945)</td></tr></table>>];
    bb410__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">410</td></tr><tr><td align="left" balign="left">StorageDead(_945)<br/>_949 = discriminant(_944)<br/></td></tr><tr><td align="left">switchInt(move _949)</td></tr></table>>];
    bb411__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">411</td></tr><tr><td align="left" balign="left">StorageLive(_953)<br/>_953 = move ((_944 as Continue).0: std::cell::RefMut&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_943 = move _953<br/>StorageDead(_953)<br/>_1230 = discriminant(_944)<br/>StorageDead(_948)<br/>StorageDead(_944)<br/>StorageLive(_954)<br/>StorageLive(_955)<br/>StorageLive(_956)<br/>StorageLive(_957)<br/>_957 = &amp;_943<br/></td></tr><tr><td align="left">_956 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _957)</td></tr></table>>];
    bb412__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">412</td></tr><tr><td align="left" balign="left">StorageLive(_950)<br/>_950 = ((_944 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_952)<br/>_952 = _950<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _952)</td></tr></table>>];
    bb413__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">413</td></tr><tr><td align="left" balign="left">StorageDead(_952)<br/>StorageDead(_950)<br/>_1228 = discriminant(_944)<br/>StorageDead(_948)<br/>StorageDead(_944)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb414__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">414</td></tr><tr><td align="left" balign="left">_955 = &amp;(*_956)<br/>StorageDead(_957)<br/></td></tr><tr><td align="left">_954 = PerpMarket::get_open_interest(move _955)</td></tr></table>>];
    bb415__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">415</td></tr><tr><td align="left" balign="left">StorageDead(_955)<br/>StorageDead(_956)<br/>StorageLive(_958)<br/>StorageLive(_959)<br/>StorageLive(_960)<br/>StorageLive(_961)<br/>StorageLive(_962)<br/>_962 = _954<br/>StorageLive(_963)<br/>_963 = _276<br/>_961 = Le(move _962, move _963)<br/></td></tr><tr><td align="left">switchInt(move _961)</td></tr></table>>];
    bb416__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">416</td></tr><tr><td align="left" balign="left">StorageDead(_963)<br/>StorageDead(_962)<br/>StorageLive(_964)<br/>_964 = ()<br/>_960 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _964)<br/>StorageDead(_964)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb417__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">417</td></tr><tr><td align="left" balign="left">StorageDead(_963)<br/>StorageDead(_962)<br/>StorageLive(_965)<br/>_965 = error::ErrorCode::InvalidTransferPerpPosition<br/>StorageLive(_966)<br/>StorageLive(_967)<br/>StorageLive(_968)<br/>StorageLive(_969)<br/>StorageLive(_970)<br/>StorageLive(_971)<br/>StorageLive(_972)<br/>StorageLive(_973)<br/>StorageLive(_974)<br/>StorageLive(_975)<br/>StorageLive(_976)<br/>_1169 = const _<br/>_976 = &amp;(*_1169)<br/>_975 = &amp;(*_976)<br/>_974 = move _975 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_975)<br/>StorageLive(_978)<br/>StorageLive(_979)<br/>StorageLive(_980)<br/>StorageLive(_981)<br/>StorageLive(_982)<br/>StorageLive(_983)<br/>StorageLive(_984)<br/>_984 = &amp;_965<br/>_983 = &amp;(*_984)<br/></td></tr><tr><td align="left">_982 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _983)</td></tr></table>>];
    bb418__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">418</td></tr><tr><td align="left" balign="left">StorageDead(_983)<br/>_981 = [move _982]<br/>StorageDead(_982)<br/>_980 = &amp;_981<br/>_979 = &amp;(*_980)<br/>_978 = move _979 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_979)<br/></td></tr><tr><td align="left">_973 = Arguments::&lt;'_&gt;::new_v1(move _974, move _978)</td></tr></table>>];
    bb419__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">419</td></tr><tr><td align="left" balign="left">StorageDead(_978)<br/>StorageDead(_974)<br/></td></tr><tr><td align="left">_972 = format(move _973)</td></tr></table>>];
    bb420__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">420</td></tr><tr><td align="left" balign="left">StorageDead(_973)<br/>StorageDead(_984)<br/>StorageDead(_981)<br/>StorageDead(_980)<br/>StorageDead(_976)<br/>_971 = move _972<br/>StorageDead(_972)<br/>_970 = &amp;_971<br/>_969 = &amp;(*_970)<br/></td></tr><tr><td align="left">_968 = &lt;String as Deref&gt;::deref(move _969)</td></tr></table>>];
    bb421__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">421</td></tr><tr><td align="left" balign="left">_967 = &amp;(*_968)<br/>StorageDead(_969)<br/></td></tr><tr><td align="left">_966 = solana_program::log::sol_log(move _967)</td></tr></table>>];
    bb422__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">422</td></tr><tr><td align="left" balign="left">StorageDead(_967)<br/></td></tr><tr><td align="left">drop(_971)</td></tr></table>>];
    bb423__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">423</td></tr><tr><td align="left" balign="left">StorageDead(_971)<br/>StorageDead(_970)<br/>StorageDead(_968)<br/>StorageDead(_966)<br/>StorageLive(_985)<br/>StorageLive(_986)<br/>StorageLive(_987)<br/>StorageLive(_988)<br/>StorageLive(_989)<br/>StorageLive(_990)<br/>StorageLive(_991)<br/>StorageLive(_992)<br/>StorageLive(_993)<br/>StorageLive(_994)<br/>StorageLive(_995)<br/>_1168 = const _<br/>_995 = &amp;(*_1168)<br/>_994 = &amp;(*_995)<br/>_993 = move _994 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_994)<br/>StorageLive(_997)<br/>StorageLive(_998)<br/>StorageLive(_999)<br/>StorageLive(_1000)<br/>StorageLive(_1001)<br/>StorageLive(_1002)<br/>StorageLive(_1003)<br/>_1003 = &amp;_276<br/>_1002 = &amp;(*_1003)<br/></td></tr><tr><td align="left">_1001 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u128&gt;(move _1002)</td></tr></table>>];
    bb424__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">424</td></tr><tr><td align="left" balign="left">StorageDead(_1002)<br/>StorageLive(_1004)<br/>StorageLive(_1005)<br/>StorageLive(_1006)<br/>_1006 = &amp;_954<br/>_1005 = &amp;(*_1006)<br/></td></tr><tr><td align="left">_1004 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u128&gt;(move _1005)</td></tr></table>>];
    bb425__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">425</td></tr><tr><td align="left" balign="left">StorageDead(_1005)<br/>_1000 = [move _1001, move _1004]<br/>StorageDead(_1004)<br/>StorageDead(_1001)<br/>_999 = &amp;_1000<br/>_998 = &amp;(*_999)<br/>_997 = move _998 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_998)<br/></td></tr><tr><td align="left">_992 = Arguments::&lt;'_&gt;::new_v1(move _993, move _997)</td></tr></table>>];
    bb426__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">426</td></tr><tr><td align="left" balign="left">StorageDead(_997)<br/>StorageDead(_993)<br/></td></tr><tr><td align="left">_991 = format(move _992)</td></tr></table>>];
    bb427__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">427</td></tr><tr><td align="left" balign="left">StorageDead(_992)<br/>StorageDead(_1006)<br/>StorageDead(_1003)<br/>StorageDead(_1000)<br/>StorageDead(_999)<br/>StorageDead(_995)<br/>_990 = move _991<br/>StorageDead(_991)<br/>_989 = &amp;_990<br/>_988 = &amp;(*_989)<br/></td></tr><tr><td align="left">_987 = &lt;String as Deref&gt;::deref(move _988)</td></tr></table>>];
    bb428__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">428</td></tr><tr><td align="left" balign="left">_986 = &amp;(*_987)<br/>StorageDead(_988)<br/></td></tr><tr><td align="left">_985 = solana_program::log::sol_log(move _986)</td></tr></table>>];
    bb429__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">429</td></tr><tr><td align="left" balign="left">StorageDead(_986)<br/></td></tr><tr><td align="left">drop(_990)</td></tr></table>>];
    bb430__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">430</td></tr><tr><td align="left" balign="left">StorageDead(_990)<br/>StorageDead(_989)<br/>StorageDead(_987)<br/>StorageDead(_985)<br/>StorageLive(_1007)<br/>_1007 = _965<br/>_960 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _1007)<br/>StorageDead(_1007)<br/>StorageDead(_965)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb431__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">431</td></tr><tr><td align="left" balign="left">StorageDead(_961)<br/></td></tr><tr><td align="left">_959 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _960)</td></tr></table>>];
    bb432__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">432</td></tr><tr><td align="left" balign="left">StorageDead(_960)<br/>_1008 = discriminant(_959)<br/></td></tr><tr><td align="left">switchInt(move _1008)</td></tr></table>>];
    bb433__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">433</td></tr><tr><td align="left" balign="left">StorageLive(_1012)<br/>_1012 = ((_959 as Continue).0: ())<br/>_958 = _1012<br/>StorageDead(_1012)<br/>StorageDead(_959)<br/>StorageDead(_958)<br/>StorageLive(_1013)<br/>StorageLive(_1014)<br/>StorageLive(_1015)<br/>StorageLive(_1016)<br/>_1016 = &amp;mut (*_40)<br/></td></tr><tr><td align="left">_1015 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _1016)</td></tr></table>>];
    bb434__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">434</td></tr><tr><td align="left" balign="left">StorageLive(_1009)<br/>_1009 = ((_959 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1011)<br/>_1011 = _1009<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1011)</td></tr></table>>];
    bb435__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">435</td></tr><tr><td align="left" balign="left">StorageDead(_1011)<br/>StorageDead(_1009)<br/>StorageDead(_959)<br/>StorageDead(_958)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb436__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">436</td></tr><tr><td align="left" balign="left">_1014 = &amp;mut (*_1015)<br/>StorageDead(_1016)<br/>StorageLive(_1017)<br/>_1017 = _27<br/></td></tr><tr><td align="left">_1013 = User::update_last_active_slot(move _1014, move _1017)</td></tr></table>>];
    bb437__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">437</td></tr><tr><td align="left" balign="left">StorageDead(_1017)<br/>StorageDead(_1014)<br/>StorageDead(_1015)<br/>StorageDead(_1013)<br/>StorageLive(_1018)<br/>StorageLive(_1019)<br/>StorageLive(_1020)<br/>StorageLive(_1021)<br/>_1021 = &amp;mut (*_28)<br/></td></tr><tr><td align="left">_1020 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _1021)</td></tr></table>>];
    bb438__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">438</td></tr><tr><td align="left" balign="left">_1019 = &amp;mut (*_1020)<br/>StorageDead(_1021)<br/>StorageLive(_1022)<br/>_1022 = _27<br/></td></tr><tr><td align="left">_1018 = User::update_last_active_slot(move _1019, move _1022)</td></tr></table>>];
    bb439__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">439</td></tr><tr><td align="left" balign="left">StorageDead(_1022)<br/>StorageDead(_1019)<br/>StorageDead(_1020)<br/>StorageDead(_1018)<br/>StorageLive(_1023)<br/>StorageLive(_1024)<br/>StorageLive(_1025)<br/>StorageLive(_1026)<br/>_1026 = &amp;(*_40)<br/></td></tr><tr><td align="left">_1025 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _1026)</td></tr></table>>];
    bb440__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">440</td></tr><tr><td align="left" balign="left">StorageDead(_1026)<br/>_1024 = ((*_1025).15: u32)<br/>StorageDead(_1025)<br/>StorageLive(_1027)<br/>StorageLive(_1028)<br/>StorageLive(_1029)<br/>StorageLive(_1030)<br/>_1030 = _1024<br/></td></tr><tr><td align="left">_1029 = core::num::&lt;impl u32&gt;::checked_add(move _1030, const 1_u32)</td></tr></table>>];
    bb441__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">441</td></tr><tr><td align="left" balign="left">StorageDead(_1030)<br/>StorageLive(_1031)<br/>_1031 = Option::&lt;u32&gt;::Some(const 1_u32)<br/></td></tr><tr><td align="left">_1028 = Option::&lt;u32&gt;::or(move _1029, move _1031)</td></tr></table>>];
    bb442__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">442</td></tr><tr><td align="left" balign="left">StorageDead(_1031)<br/>StorageDead(_1029)<br/></td></tr><tr><td align="left">_1027 = Option::&lt;u32&gt;::unwrap(move _1028)</td></tr></table>>];
    bb443__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">443</td></tr><tr><td align="left" balign="left">StorageDead(_1028)<br/>StorageLive(_1032)<br/>StorageLive(_1033)<br/>_1033 = &amp;mut (*_40)<br/></td></tr><tr><td align="left">_1032 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _1033)</td></tr></table>>];
    bb444__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">444</td></tr><tr><td align="left" balign="left">StorageDead(_1033)<br/>((*_1032).15: u32) = move _1027<br/>StorageDead(_1027)<br/>StorageDead(_1032)<br/>_1023 = _1024<br/>StorageDead(_1024)<br/>StorageLive(_1034)<br/>StorageLive(_1035)<br/>_1035 = _27<br/>StorageLive(_1036)<br/>_1036 = _657<br/>StorageLive(_1037)<br/>_1037 = _1023<br/>StorageLive(_1038)<br/>_1038 = _2<br/>StorageLive(_1039)<br/>_1039 = OrderStatus::Open<br/>StorageLive(_1040)<br/>_1040 = state::user::OrderType::Limit<br/>StorageLive(_1041)<br/>_1041 = state::user::MarketType::Perp<br/>StorageLive(_1042)<br/>StorageLive(_1043)<br/>_1043 = _612<br/></td></tr><tr><td align="left">_1042 = core::num::&lt;impl i64&gt;::unsigned_abs(move _1043)</td></tr></table>>];
    bb445__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">445</td></tr><tr><td align="left" balign="left">StorageDead(_1043)<br/>StorageLive(_1044)<br/>_1044 = _422<br/>StorageLive(_1045)<br/>StorageLive(_1046)<br/>_1046 = &amp;_422<br/></td></tr><tr><td align="left">_1045 = controller::position::PositionDirection::opposite(move _1046)</td></tr></table>>];
    bb446__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">446</td></tr><tr><td align="left" balign="left">StorageDead(_1046)<br/>StorageLive(_1047)<br/></td></tr><tr><td align="left">_1047 = &lt;Order as Default&gt;::default()</td></tr></table>>];
    bb447__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">447</td></tr><tr><td align="left" balign="left">_1034 = Order { slot: move _1035, price: move _1042, base_asset_amount: move _1036, base_asset_amount_filled: (_1047.3: u64), quote_asset_amount_filled: (_1047.4: u64), trigger_price: (_1047.5: u64), auction_start_price: (_1047.6: i64), auction_end_price: (_1047.7: i64), max_ts: (_1047.8: i64), oracle_price_offset: (_1047.9: i32), order_id: move _1037, market_index: move _1038, status: move _1039, order_type: move _1040, market_type: move _1041, user_order_id: (_1047.15: u8), existing_position_direction: move _1045, direction: move _1044, reduce_only: (_1047.18: bool), post_only: (_1047.19: bool), immediate_or_cancel: (_1047.20: bool), trigger_condition: (_1047.21: state::user::OrderTriggerCondition), auction_duration: (_1047.22: u8), posted_slot_tail: (_1047.23: u8), bit_flags: (_1047.24: u8), padding: (_1047.25: [u8; 1]) }<br/>StorageDead(_1045)<br/>StorageDead(_1044)<br/>StorageDead(_1042)<br/>StorageDead(_1041)<br/>StorageDead(_1040)<br/>StorageDead(_1039)<br/>StorageDead(_1038)<br/>StorageDead(_1037)<br/>StorageDead(_1036)<br/>StorageDead(_1035)<br/>StorageDead(_1047)<br/>StorageLive(_1048)<br/>StorageLive(_1049)<br/>StorageLive(_1050)<br/>StorageLive(_1051)<br/>StorageLive(_1052)<br/>_1052 = _60<br/>StorageLive(_1053)<br/>_1053 = _16<br/>StorageLive(_1054)<br/>_1054 = _1034<br/>_1051 = OrderRecord { ts: move _1052, user: move _1053, order: move _1054 }<br/>StorageDead(_1054)<br/>StorageDead(_1053)<br/>StorageDead(_1052)<br/></td></tr><tr><td align="left">_1050 = emit_stack::&lt;OrderRecord, 192&gt;(move _1051)</td></tr></table>>];
    bb448__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">448</td></tr><tr><td align="left" balign="left">StorageDead(_1051)<br/></td></tr><tr><td align="left">_1049 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _1050)</td></tr></table>>];
    bb449__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">449</td></tr><tr><td align="left" balign="left">StorageDead(_1050)<br/>_1055 = discriminant(_1049)<br/></td></tr><tr><td align="left">switchInt(move _1055)</td></tr></table>>];
    bb450__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">450</td></tr><tr><td align="left" balign="left">StorageLive(_1059)<br/>_1059 = ((_1049 as Continue).0: ())<br/>_1048 = _1059<br/>StorageDead(_1059)<br/>StorageDead(_1049)<br/>StorageDead(_1048)<br/>StorageLive(_1060)<br/>StorageLive(_1061)<br/>StorageLive(_1062)<br/>StorageLive(_1063)<br/>_1063 = &amp;(*_28)<br/></td></tr><tr><td align="left">_1062 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _1063)</td></tr></table>>];
    bb451__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">451</td></tr><tr><td align="left" balign="left">StorageLive(_1056)<br/>_1056 = ((_1049 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1058)<br/>_1058 = _1056<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1058)</td></tr></table>>];
    bb452__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">452</td></tr><tr><td align="left" balign="left">StorageDead(_1058)<br/>StorageDead(_1056)<br/>StorageDead(_1049)<br/>StorageDead(_1048)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb453__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">453</td></tr><tr><td align="left" balign="left">StorageDead(_1063)<br/>_1061 = ((*_1062).15: u32)<br/>StorageDead(_1062)<br/>StorageLive(_1064)<br/>StorageLive(_1065)<br/>StorageLive(_1066)<br/>StorageLive(_1067)<br/>_1067 = _1061<br/></td></tr><tr><td align="left">_1066 = core::num::&lt;impl u32&gt;::checked_add(move _1067, const 1_u32)</td></tr></table>>];
    bb454__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">454</td></tr><tr><td align="left" balign="left">StorageDead(_1067)<br/>StorageLive(_1068)<br/>_1068 = Option::&lt;u32&gt;::Some(const 1_u32)<br/></td></tr><tr><td align="left">_1065 = Option::&lt;u32&gt;::or(move _1066, move _1068)</td></tr></table>>];
    bb455__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">455</td></tr><tr><td align="left" balign="left">StorageDead(_1068)<br/>StorageDead(_1066)<br/></td></tr><tr><td align="left">_1064 = Option::&lt;u32&gt;::unwrap(move _1065)</td></tr></table>>];
    bb456__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">456</td></tr><tr><td align="left" balign="left">StorageDead(_1065)<br/>StorageLive(_1069)<br/>StorageLive(_1070)<br/>_1070 = &amp;mut (*_28)<br/></td></tr><tr><td align="left">_1069 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _1070)</td></tr></table>>];
    bb457__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">457</td></tr><tr><td align="left" balign="left">StorageDead(_1070)<br/>((*_1069).15: u32) = move _1064<br/>StorageDead(_1064)<br/>StorageDead(_1069)<br/>_1060 = _1061<br/>StorageDead(_1061)<br/>StorageLive(_1071)<br/>StorageLive(_1072)<br/>_1072 = _27<br/>StorageLive(_1073)<br/>_1073 = _657<br/>StorageLive(_1074)<br/>_1074 = _1060<br/>StorageLive(_1075)<br/>_1075 = _2<br/>StorageLive(_1076)<br/>_1076 = OrderStatus::Open<br/>StorageLive(_1077)<br/>_1077 = state::user::OrderType::Limit<br/>StorageLive(_1078)<br/>_1078 = state::user::MarketType::Perp<br/>StorageLive(_1079)<br/>StorageLive(_1080)<br/>_1080 = _612<br/></td></tr><tr><td align="left">_1079 = core::num::&lt;impl i64&gt;::unsigned_abs(move _1080)</td></tr></table>>];
    bb458__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">458</td></tr><tr><td align="left" balign="left">StorageDead(_1080)<br/>StorageLive(_1081)<br/>StorageLive(_1082)<br/>_1082 = &amp;_422<br/></td></tr><tr><td align="left">_1081 = controller::position::PositionDirection::opposite(move _1082)</td></tr></table>>];
    bb459__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">459</td></tr><tr><td align="left" balign="left">StorageDead(_1082)<br/>StorageLive(_1083)<br/>_1083 = _682<br/>StorageLive(_1084)<br/></td></tr><tr><td align="left">_1084 = &lt;Order as Default&gt;::default()</td></tr></table>>];
    bb460__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">460</td></tr><tr><td align="left" balign="left">_1071 = Order { slot: move _1072, price: move _1079, base_asset_amount: move _1073, base_asset_amount_filled: (_1084.3: u64), quote_asset_amount_filled: (_1084.4: u64), trigger_price: (_1084.5: u64), auction_start_price: (_1084.6: i64), auction_end_price: (_1084.7: i64), max_ts: (_1084.8: i64), oracle_price_offset: (_1084.9: i32), order_id: move _1074, market_index: move _1075, status: move _1076, order_type: move _1077, market_type: move _1078, user_order_id: (_1084.15: u8), existing_position_direction: move _1083, direction: move _1081, reduce_only: (_1084.18: bool), post_only: (_1084.19: bool), immediate_or_cancel: (_1084.20: bool), trigger_condition: (_1084.21: state::user::OrderTriggerCondition), auction_duration: (_1084.22: u8), posted_slot_tail: (_1084.23: u8), bit_flags: (_1084.24: u8), padding: (_1084.25: [u8; 1]) }<br/>StorageDead(_1083)<br/>StorageDead(_1081)<br/>StorageDead(_1079)<br/>StorageDead(_1078)<br/>StorageDead(_1077)<br/>StorageDead(_1076)<br/>StorageDead(_1075)<br/>StorageDead(_1074)<br/>StorageDead(_1073)<br/>StorageDead(_1072)<br/>StorageDead(_1084)<br/>StorageLive(_1085)<br/>StorageLive(_1086)<br/>StorageLive(_1087)<br/>StorageLive(_1088)<br/>StorageLive(_1089)<br/>_1089 = _60<br/>StorageLive(_1090)<br/>_1090 = _14<br/>StorageLive(_1091)<br/>_1091 = _1071<br/>_1088 = OrderRecord { ts: move _1089, user: move _1090, order: move _1091 }<br/>StorageDead(_1091)<br/>StorageDead(_1090)<br/>StorageDead(_1089)<br/></td></tr><tr><td align="left">_1087 = emit_stack::&lt;OrderRecord, 192&gt;(move _1088)</td></tr></table>>];
    bb461__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">461</td></tr><tr><td align="left" balign="left">StorageDead(_1088)<br/></td></tr><tr><td align="left">_1086 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _1087)</td></tr></table>>];
    bb462__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">462</td></tr><tr><td align="left" balign="left">StorageDead(_1087)<br/>_1092 = discriminant(_1086)<br/></td></tr><tr><td align="left">switchInt(move _1092)</td></tr></table>>];
    bb463__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">463</td></tr><tr><td align="left" balign="left">StorageLive(_1096)<br/>_1096 = ((_1086 as Continue).0: ())<br/>_1085 = _1096<br/>StorageDead(_1096)<br/>StorageDead(_1086)<br/>StorageDead(_1085)<br/>StorageLive(_1097)<br/>StorageLive(_1098)<br/>StorageLive(_1099)<br/>StorageLive(_1100)<br/>_1100 = &amp;_943<br/></td></tr><tr><td align="left">_1099 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _1100)</td></tr></table>>];
    bb464__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">464</td></tr><tr><td align="left" balign="left">StorageLive(_1093)<br/>_1093 = ((_1086 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1095)<br/>_1095 = _1093<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1095)</td></tr></table>>];
    bb465__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">465</td></tr><tr><td align="left" balign="left">StorageDead(_1095)<br/>StorageDead(_1093)<br/>StorageDead(_1086)<br/>StorageDead(_1085)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb466__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">466</td></tr><tr><td align="left" balign="left">StorageDead(_1100)<br/>_1098 = ((*_1099).8: u64)<br/>StorageDead(_1099)<br/>StorageLive(_1101)<br/>StorageLive(_1102)<br/>StorageLive(_1103)<br/>StorageLive(_1104)<br/>_1104 = _1098<br/></td></tr><tr><td align="left">_1103 = core::num::&lt;impl u64&gt;::checked_add(move _1104, const 1_u64)</td></tr></table>>];
    bb467__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">467</td></tr><tr><td align="left" balign="left">StorageDead(_1104)<br/>StorageLive(_1105)<br/>_1105 = Option::&lt;u64&gt;::Some(const 1_u64)<br/></td></tr><tr><td align="left">_1102 = Option::&lt;u64&gt;::or(move _1103, move _1105)</td></tr></table>>];
    bb468__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">468</td></tr><tr><td align="left" balign="left">StorageDead(_1105)<br/>StorageDead(_1103)<br/></td></tr><tr><td align="left">_1101 = Option::&lt;u64&gt;::unwrap(move _1102)</td></tr></table>>];
    bb469__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">469</td></tr><tr><td align="left" balign="left">StorageDead(_1102)<br/>StorageLive(_1106)<br/>StorageLive(_1107)<br/>_1107 = &amp;mut _943<br/></td></tr><tr><td align="left">_1106 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _1107)</td></tr></table>>];
    bb470__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">470</td></tr><tr><td align="left" balign="left">StorageDead(_1107)<br/>((*_1106).8: u64) = move _1101<br/>StorageDead(_1101)<br/>StorageDead(_1106)<br/>_1097 = _1098<br/>StorageDead(_1098)<br/>StorageLive(_1108)<br/>StorageLive(_1109)<br/>_1109 = _60<br/>StorageLive(_1110)<br/>_1110 = OrderAction::Fill<br/>StorageLive(_1111)<br/>_1111 = OrderActionExplanation::TransferPerpPosition<br/>StorageLive(_1112)<br/>_1112 = _2<br/>StorageLive(_1113)<br/>_1113 = state::user::MarketType::Perp<br/>StorageLive(_1114)<br/>_1114 = Option::&lt;anchor_lang::prelude::Pubkey&gt;::None<br/>StorageLive(_1115)<br/>_1115 = Option::&lt;u64&gt;::None<br/>StorageLive(_1116)<br/>StorageLive(_1117)<br/>_1117 = _1097<br/>_1116 = Option::&lt;u64&gt;::Some(move _1117)<br/>StorageDead(_1117)<br/>StorageLive(_1118)<br/>StorageLive(_1119)<br/>_1119 = _657<br/>_1118 = Option::&lt;u64&gt;::Some(move _1119)<br/>StorageDead(_1119)<br/>StorageLive(_1120)<br/>StorageLive(_1121)<br/>_1121 = _631<br/>_1120 = Option::&lt;u64&gt;::Some(move _1121)<br/>StorageDead(_1121)<br/>StorageLive(_1122)<br/>_1122 = Option::&lt;u64&gt;::None<br/>StorageLive(_1123)<br/>_1123 = Option::&lt;i64&gt;::None<br/>StorageLive(_1124)<br/>_1124 = Option::&lt;u32&gt;::None<br/>StorageLive(_1125)<br/>_1125 = Option::&lt;i64&gt;::None<br/>StorageLive(_1126)<br/>_1126 = Option::&lt;u64&gt;::None<br/>StorageLive(_1127)<br/>StorageLive(_1128)<br/>_1128 = _14<br/>_1127 = Option::&lt;anchor_lang::prelude::Pubkey&gt;::Some(move _1128)<br/>StorageDead(_1128)<br/>StorageLive(_1129)<br/>StorageLive(_1130)<br/>_1130 = _1060<br/>_1129 = Option::&lt;u32&gt;::Some(move _1130)<br/>StorageDead(_1130)<br/>StorageLive(_1131)<br/>StorageLive(_1132)<br/>StorageLive(_1133)<br/>_1133 = &amp;_422<br/></td></tr><tr><td align="left">_1132 = controller::position::PositionDirection::opposite(move _1133)</td></tr></table>>];
    bb471__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">471</td></tr><tr><td align="left" balign="left">StorageDead(_1133)<br/>_1131 = Option::&lt;controller::position::PositionDirection&gt;::Some(move _1132)<br/>StorageDead(_1132)<br/>StorageLive(_1134)<br/>StorageLive(_1135)<br/>_1135 = _657<br/>_1134 = Option::&lt;u64&gt;::Some(move _1135)<br/>StorageDead(_1135)<br/>StorageLive(_1136)<br/>StorageLive(_1137)<br/>_1137 = _657<br/>_1136 = Option::&lt;u64&gt;::Some(move _1137)<br/>StorageDead(_1137)<br/>StorageLive(_1138)<br/>StorageLive(_1139)<br/>_1139 = _631<br/>_1138 = Option::&lt;u64&gt;::Some(move _1139)<br/>StorageDead(_1139)<br/>StorageLive(_1140)<br/>StorageLive(_1141)<br/>_1141 = _16<br/>_1140 = Option::&lt;anchor_lang::prelude::Pubkey&gt;::Some(move _1141)<br/>StorageDead(_1141)<br/>StorageLive(_1142)<br/>StorageLive(_1143)<br/>_1143 = _1023<br/>_1142 = Option::&lt;u32&gt;::Some(move _1143)<br/>StorageDead(_1143)<br/>StorageLive(_1144)<br/>StorageLive(_1145)<br/>_1145 = _422<br/>_1144 = Option::&lt;controller::position::PositionDirection&gt;::Some(move _1145)<br/>StorageDead(_1145)<br/>StorageLive(_1146)<br/>StorageLive(_1147)<br/>_1147 = _657<br/>_1146 = Option::&lt;u64&gt;::Some(move _1147)<br/>StorageDead(_1147)<br/>StorageLive(_1148)<br/>StorageLive(_1149)<br/>_1149 = _657<br/>_1148 = Option::&lt;u64&gt;::Some(move _1149)<br/>StorageDead(_1149)<br/>StorageLive(_1150)<br/>StorageLive(_1151)<br/>_1151 = _631<br/>_1150 = Option::&lt;u64&gt;::Some(move _1151)<br/>StorageDead(_1151)<br/>StorageLive(_1152)<br/>_1152 = _277<br/>StorageLive(_1153)<br/>_1153 = _698<br/>StorageLive(_1154)<br/>_1154 = _699<br/>StorageLive(_1155)<br/>_1155 = _696<br/>StorageLive(_1156)<br/>_1156 = _697<br/>StorageLive(_1157)<br/>_1157 = Option::&lt;u64&gt;::None<br/>_1108 = OrderActionRecord { ts: move _1109, action: move _1110, action_explanation: move _1111, market_index: move _1112, market_type: move _1113, filler: move _1114, filler_reward: move _1115, fill_record_id: move _1116, base_asset_amount_filled: move _1118, quote_asset_amount_filled: move _1120, taker_fee: move _1122, maker_fee: move _1123, referrer_reward: move _1124, quote_asset_amount_surplus: move _1125, spot_fulfillment_method_fee: move _1126, taker: move _1127, taker_order_id: move _1129, taker_order_direction: move _1131, taker_order_base_asset_amount: move _1134, taker_order_cumulative_base_asset_amount_filled: move _1136, taker_order_cumulative_quote_asset_amount_filled: move _1138, maker: move _1140, maker_order_id: move _1142, maker_order_direction: move _1144, maker_order_base_asset_amount: move _1146, maker_order_cumulative_base_asset_amount_filled: move _1148, maker_order_cumulative_quote_asset_amount_filled: move _1150, oracle_price: move _1152, bit_flags: const 0_u8, taker_existing_quote_entry_amount: move _1153, taker_existing_base_asset_amount: move _1154, maker_existing_quote_entry_amount: move _1155, maker_existing_base_asset_amount: move _1156, trigger_price: move _1157 }<br/>StorageDead(_1157)<br/>StorageDead(_1156)<br/>StorageDead(_1155)<br/>StorageDead(_1154)<br/>StorageDead(_1153)<br/>StorageDead(_1152)<br/>StorageDead(_1150)<br/>StorageDead(_1148)<br/>StorageDead(_1146)<br/>StorageDead(_1144)<br/>StorageDead(_1142)<br/>StorageDead(_1140)<br/>StorageDead(_1138)<br/>StorageDead(_1136)<br/>StorageDead(_1134)<br/>StorageDead(_1131)<br/>StorageDead(_1129)<br/>StorageDead(_1127)<br/>StorageDead(_1126)<br/>StorageDead(_1125)<br/>StorageDead(_1124)<br/>StorageDead(_1123)<br/>StorageDead(_1122)<br/>StorageDead(_1120)<br/>StorageDead(_1118)<br/>StorageDead(_1116)<br/>StorageDead(_1115)<br/>StorageDead(_1114)<br/>StorageDead(_1113)<br/>StorageDead(_1112)<br/>StorageDead(_1111)<br/>StorageDead(_1110)<br/>StorageDead(_1109)<br/>StorageLive(_1158)<br/>StorageLive(_1159)<br/>StorageLive(_1160)<br/>StorageLive(_1161)<br/>_1161 = move _1108<br/></td></tr><tr><td align="left">_1160 = emit_stack::&lt;OrderActionRecord, 464&gt;(move _1161)</td></tr></table>>];
    bb472__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">472</td></tr><tr><td align="left" balign="left">StorageDead(_1161)<br/></td></tr><tr><td align="left">_1159 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _1160)</td></tr></table>>];
    bb473__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">473</td></tr><tr><td align="left" balign="left">StorageDead(_1160)<br/>_1162 = discriminant(_1159)<br/></td></tr><tr><td align="left">switchInt(move _1162)</td></tr></table>>];
    bb474__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">474</td></tr><tr><td align="left" balign="left">StorageLive(_1166)<br/>_1166 = ((_1159 as Continue).0: ())<br/>_1158 = _1166<br/>StorageDead(_1166)<br/>StorageDead(_1159)<br/>StorageDead(_1158)<br/>StorageLive(_1167)<br/>_1167 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _1167)<br/>StorageDead(_1167)<br/>StorageDead(_1108)<br/>StorageDead(_1097)<br/>StorageDead(_1071)<br/>StorageDead(_1060)<br/>StorageDead(_1034)<br/>StorageDead(_1023)<br/>StorageDead(_954)<br/></td></tr><tr><td align="left">drop(_943)</td></tr></table>>];
    bb475__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">475</td></tr><tr><td align="left" balign="left">StorageLive(_1163)<br/>_1163 = ((_1159 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1165)<br/>_1165 = _1163<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1165)</td></tr></table>>];
    bb476__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">476</td></tr><tr><td align="left" balign="left">StorageDead(_1165)<br/>StorageDead(_1163)<br/>StorageDead(_1159)<br/>StorageDead(_1158)<br/>StorageDead(_1108)<br/>StorageDead(_1097)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb477__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">477</td></tr><tr><td align="left" balign="left">StorageDead(_943)<br/>StorageDead(_883)<br/>StorageDead(_825)<br/>StorageDead(_699)<br/>StorageDead(_698)<br/>StorageDead(_697)<br/>StorageDead(_696)<br/>StorageDead(_682)<br/>StorageDead(_670)<br/>StorageDead(_659)<br/>StorageDead(_657)<br/>StorageDead(_631)<br/>StorageDead(_612)<br/>StorageDead(_422)<br/>StorageDead(_421)<br/>StorageDead(_279)<br/>StorageDead(_278)<br/>StorageDead(_277)<br/>StorageDead(_276)<br/></td></tr><tr><td align="left">drop(_173)</td></tr></table>>];
    bb478__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">478</td></tr><tr><td align="left" balign="left">StorageDead(_173)<br/></td></tr><tr><td align="left">drop(_172)</td></tr></table>>];
    bb479__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">479</td></tr><tr><td align="left" balign="left">StorageDead(_172)<br/></td></tr><tr><td align="left">drop(_171)</td></tr></table>>];
    bb480__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">480</td></tr><tr><td align="left" balign="left">StorageDead(_171)<br/>StorageDead(_60)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">drop(_41)</td></tr></table>>];
    bb481__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">481</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">drop(_29)</td></tr></table>>];
    bb482__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">482</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_28)<br/>StorageDead(_27)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/>StorageDead(_16)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb483__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">483</td></tr><tr><td align="left" balign="left">StorageDead(_1071)<br/>StorageDead(_1060)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb484__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">484</td></tr><tr><td align="left" balign="left">StorageDead(_1034)<br/>StorageDead(_1023)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb485__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">485</td></tr><tr><td align="left" balign="left">StorageDead(_954)<br/></td></tr><tr><td align="left">drop(_943)</td></tr></table>>];
    bb486__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">486</td></tr><tr><td align="left" balign="left">StorageDead(_943)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb487__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">487</td></tr><tr><td align="left" balign="left">StorageDead(_883)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb488__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">488</td></tr><tr><td align="left" balign="left">StorageDead(_825)<br/>StorageDead(_699)<br/>StorageDead(_698)<br/>StorageDead(_697)<br/>StorageDead(_696)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb489__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">489</td></tr><tr><td align="left" balign="left">StorageDead(_766)<br/>StorageDead(_765)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb490__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">490</td></tr><tr><td align="left" balign="left">StorageDead(_753)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb491__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">491</td></tr><tr><td align="left" balign="left">StorageDead(_725)<br/>StorageDead(_724)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb492__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">492</td></tr><tr><td align="left" balign="left">StorageDead(_712)<br/></td></tr><tr><td align="left">drop(_701)</td></tr></table>>];
    bb493__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">493</td></tr><tr><td align="left" balign="left">StorageDead(_701)<br/>StorageDead(_700)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb494__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">494</td></tr><tr><td align="left" balign="left">StorageDead(_682)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb495__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">495</td></tr><tr><td align="left" balign="left">StorageDead(_670)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb496__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">496</td></tr><tr><td align="left" balign="left">StorageDead(_659)<br/>StorageDead(_657)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb497__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">497</td></tr><tr><td align="left" balign="left">StorageDead(_634)<br/>StorageDead(_633)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb498__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">498</td></tr><tr><td align="left" balign="left">StorageDead(_638)<br/>StorageDead(_635)<br/>StorageDead(_632)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb499__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">499</td></tr><tr><td align="left" balign="left">StorageDead(_631)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb500__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">500</td></tr><tr><td align="left" balign="left">StorageDead(_617)<br/>StorageDead(_613)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb501__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">501</td></tr><tr><td align="left" balign="left">StorageDead(_612)<br/>StorageDead(_422)<br/>StorageDead(_421)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb502__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">502</td></tr><tr><td align="left" balign="left">StorageDead(_562)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb503__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">503</td></tr><tr><td align="left" balign="left">StorageDead(_516)<br/>StorageDead(_515)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb504__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">504</td></tr><tr><td align="left" balign="left">StorageDead(_438)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb505__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">505</td></tr><tr><td align="left" balign="left">StorageDead(_426)<br/>StorageDead(_425)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb506__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">506</td></tr><tr><td align="left" balign="left">StorageDead(_423)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb507__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">507</td></tr><tr><td align="left" balign="left">StorageDead(_339)<br/>StorageDead(_338)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb508__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">508</td></tr><tr><td align="left" balign="left">StorageDead(_297)<br/>StorageDead(_296)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb509__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">509</td></tr><tr><td align="left" balign="left">StorageDead(_317)<br/>StorageDead(_314)<br/>StorageDead(_311)<br/>StorageDead(_308)<br/>StorageDead(_306)<br/>StorageDead(_305)<br/>StorageDead(_299)<br/>StorageDead(_298)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb510__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">510</td></tr><tr><td align="left">drop(_281)</td></tr></table>>];
    bb511__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">511</td></tr><tr><td align="left" balign="left">StorageDead(_281)<br/>StorageDead(_280)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb512__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">512</td></tr><tr><td align="left" balign="left">StorageDead(_279)<br/>StorageDead(_278)<br/>StorageDead(_277)<br/>StorageDead(_276)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb513__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">513</td></tr><tr><td align="left">drop(_173)</td></tr></table>>];
    bb514__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">514</td></tr><tr><td align="left" balign="left">StorageDead(_173)<br/></td></tr><tr><td align="left">drop(_172)</td></tr></table>>];
    bb515__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">515</td></tr><tr><td align="left" balign="left">StorageDead(_172)<br/></td></tr><tr><td align="left">drop(_171)</td></tr></table>>];
    bb516__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">516</td></tr><tr><td align="left" balign="left">StorageDead(_171)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb517__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">517</td></tr><tr><td align="left" balign="left">StorageDead(_188)<br/>StorageDead(_187)<br/></td></tr><tr><td align="left">drop(_184)</td></tr></table>>];
    bb518__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">518</td></tr><tr><td align="left" balign="left">StorageDead(_184)<br/>StorageDead(_183)<br/>StorageDead(_179)<br/>StorageDead(_178)<br/>StorageDead(_175)<br/>StorageDead(_174)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb519__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">519</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb520__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">520</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/></td></tr><tr><td align="left">drop(_41)</td></tr></table>>];
    bb521__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">521</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">drop(_29)</td></tr></table>>];
    bb522__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">522</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_28)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb523__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">523</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_18)<br/>StorageDead(_16)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb524__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">524</td></tr><tr><td align="left">return</td></tr></table>>];
    bb525__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">525 (cleanup)</td></tr><tr><td align="left">drop(_990)</td></tr></table>>];
    bb526__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">526 (cleanup)</td></tr><tr><td align="left">drop(_971)</td></tr></table>>];
    bb527__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">527 (cleanup)</td></tr><tr><td align="left">drop(_943)</td></tr></table>>];
    bb528__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">528 (cleanup)</td></tr><tr><td align="left">drop(_920)</td></tr></table>>];
    bb529__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">529 (cleanup)</td></tr><tr><td align="left">drop(_860)</td></tr></table>>];
    bb530__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">530 (cleanup)</td></tr><tr><td align="left">drop(_701)</td></tr></table>>];
    bb531__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">531 (cleanup)</td></tr><tr><td align="left">drop(_586)</td></tr></table>>];
    bb532__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">532 (cleanup)</td></tr><tr><td align="left">drop(_536)</td></tr></table>>];
    bb533__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">533 (cleanup)</td></tr><tr><td align="left">drop(_492)</td></tr></table>>];
    bb534__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">534 (cleanup)</td></tr><tr><td align="left">drop(_454)</td></tr></table>>];
    bb535__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">535 (cleanup)</td></tr><tr><td align="left">drop(_397)</td></tr></table>>];
    bb536__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">536 (cleanup)</td></tr><tr><td align="left">drop(_359)</td></tr></table>>];
    bb537__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">537 (cleanup)</td></tr><tr><td align="left">drop(_281)</td></tr></table>>];
    bb538__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">538 (cleanup)</td></tr><tr><td align="left">drop(_259)</td></tr></table>>];
    bb539__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">539 (cleanup)</td></tr><tr><td align="left">drop(_230)</td></tr></table>>];
    bb540__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">540 (cleanup)</td></tr><tr><td align="left">drop(_184)</td></tr></table>>];
    bb541__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">541 (cleanup)</td></tr><tr><td align="left">drop(_173)</td></tr></table>>];
    bb542__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">542 (cleanup)</td></tr><tr><td align="left">drop(_172)</td></tr></table>>];
    bb543__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">543 (cleanup)</td></tr><tr><td align="left">drop(_171)</td></tr></table>>];
    bb544__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">544 (cleanup)</td></tr><tr><td align="left">drop(_188)</td></tr></table>>];
    bb545__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">545 (cleanup)</td></tr><tr><td align="left">drop(_184)</td></tr></table>>];
    bb546__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">546 (cleanup)</td></tr><tr><td align="left">drop(_148)</td></tr></table>>];
    bb547__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">547 (cleanup)</td></tr><tr><td align="left">drop(_112)</td></tr></table>>];
    bb548__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">548 (cleanup)</td></tr><tr><td align="left">drop(_75)</td></tr></table>>];
    bb549__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">549 (cleanup)</td></tr><tr><td align="left">drop(_41)</td></tr></table>>];
    bb550__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">550 (cleanup)</td></tr><tr><td align="left">drop(_29)</td></tr></table>>];
    bb551__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">551 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb552__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">552</td></tr><tr><td align="left" balign="left">_1216 = discriminant(_231)<br/>StorageDead(_235)<br/>_1197 = const false<br/>StorageDead(_231)<br/>StorageDead(_230)<br/>StorageDead(_228)<br/>StorageDead(_226)<br/>StorageDead(_224)<br/>StorageDead(_222)<br/>StorageDead(_219)<br/>StorageDead(_218)<br/>StorageLive(_247)<br/>StorageLive(_248)<br/>StorageLive(_249)<br/>StorageLive(_250)<br/>StorageLive(_251)<br/>StorageLive(_252)<br/>StorageLive(_253)<br/>_253 = &amp;mut _28<br/>_1193 = deref_copy (*_253)<br/>_252 = &amp;mut (*_1193)<br/></td></tr><tr><td align="left">_251 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _252)</td></tr></table>>];
    bb553__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">553</td></tr><tr><td align="left" balign="left">_1218 = discriminant(_260)<br/>StorageDead(_264)<br/>_1196 = const false<br/>StorageDead(_260)<br/>StorageDead(_259)<br/>StorageDead(_257)<br/>StorageDead(_255)<br/>StorageDead(_253)<br/>StorageDead(_251)<br/>StorageDead(_248)<br/>StorageDead(_247)<br/>StorageLive(_276)<br/>StorageLive(_277)<br/>StorageLive(_278)<br/>StorageLive(_279)<br/>StorageLive(_280)<br/>StorageLive(_281)<br/>StorageLive(_282)<br/>StorageLive(_283)<br/>StorageLive(_284)<br/>_284 = &amp;_171<br/>StorageLive(_285)<br/>StorageLive(_286)<br/>_286 = &amp;_2<br/>_285 = &amp;(*_286)<br/></td></tr><tr><td align="left">_283 = PerpMarketMap::&lt;'_&gt;::get_ref(move _284, move _285)</td></tr></table>>];
    bb554__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">554</td></tr><tr><td align="left" balign="left">_1232 = discriminant(_260)<br/>StorageDead(_264)<br/>_1196 = const false<br/>StorageDead(_260)<br/>StorageDead(_259)<br/>StorageDead(_257)<br/>StorageDead(_255)<br/>StorageDead(_253)<br/>StorageDead(_251)<br/>StorageDead(_248)<br/>StorageDead(_247)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb555__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">555</td></tr><tr><td align="left" balign="left">_1234 = discriminant(_231)<br/>StorageDead(_235)<br/>_1197 = const false<br/>StorageDead(_231)<br/>StorageDead(_230)<br/>StorageDead(_228)<br/>StorageDead(_226)<br/>StorageDead(_224)<br/>StorageDead(_222)<br/>StorageDead(_219)<br/>StorageDead(_218)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb556__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">556 (cleanup)</td></tr><tr><td align="left" balign="left">_1242 = discriminant(_944)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb557__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">557 (cleanup)</td></tr><tr><td align="left" balign="left">_1243 = discriminant(_702)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb558__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">558 (cleanup)</td></tr><tr><td align="left" balign="left">_1244 = discriminant(_282)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb559__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">559 (cleanup)</td></tr><tr><td align="left" balign="left">_1245 = discriminant(_260)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb560__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">560 (cleanup)</td></tr><tr><td align="left" balign="left">_1246 = discriminant(_231)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb561__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">561 (cleanup)</td></tr><tr><td align="left" balign="left">_1248 = discriminant(_175)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb562__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">562 (cleanup)</td></tr><tr><td align="left" balign="left">_1249 = discriminant(_53)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb563__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">563 (cleanup)</td></tr><tr><td align="left" balign="left">_1250 = discriminant(_42)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb564__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">564 (cleanup)</td></tr><tr><td align="left" balign="left">_1251 = discriminant(_30)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb565__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">565 (cleanup)</td></tr><tr><td align="left" balign="left">_1252 = discriminant(_20)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb566__0_11707 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">566 (cleanup)</td></tr><tr><td align="left" balign="left">_1253 = discriminant(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_11707 -> bb1__0_11707 [label="return"];
    bb1__0_11707 -> bb2__0_11707 [label="return"];
    bb1__0_11707 -> bb551__0_11707 [label="unwind"];
    bb2__0_11707 -> bb3__0_11707 [label="0"];
    bb2__0_11707 -> bb5__0_11707 [label="1"];
    bb2__0_11707 -> bb4__0_11707 [label="otherwise"];
    bb3__0_11707 -> bb7__0_11707 [label="return"];
    bb5__0_11707 -> bb6__0_11707 [label="return"];
    bb5__0_11707 -> bb566__0_11707 [label="unwind"];
    bb6__0_11707 -> bb524__0_11707 [label=""];
    bb7__0_11707 -> bb8__0_11707 [label="return"];
    bb8__0_11707 -> bb9__0_11707 [label="return"];
    bb9__0_11707 -> bb10__0_11707 [label="return"];
    bb9__0_11707 -> bb551__0_11707 [label="unwind"];
    bb10__0_11707 -> bb11__0_11707 [label="0"];
    bb10__0_11707 -> bb12__0_11707 [label="1"];
    bb10__0_11707 -> bb4__0_11707 [label="otherwise"];
    bb11__0_11707 -> bb14__0_11707 [label="return"];
    bb12__0_11707 -> bb13__0_11707 [label="return"];
    bb12__0_11707 -> bb565__0_11707 [label="unwind"];
    bb13__0_11707 -> bb523__0_11707 [label=""];
    bb14__0_11707 -> bb15__0_11707 [label="return"];
    bb14__0_11707 -> bb551__0_11707 [label="unwind"];
    bb15__0_11707 -> bb16__0_11707 [label="return"];
    bb15__0_11707 -> bb551__0_11707 [label="unwind"];
    bb16__0_11707 -> bb17__0_11707 [label="0"];
    bb16__0_11707 -> bb18__0_11707 [label="1"];
    bb16__0_11707 -> bb4__0_11707 [label="otherwise"];
    bb17__0_11707 -> bb20__0_11707 [label="return"];
    bb17__0_11707 -> bb550__0_11707 [label="unwind"];
    bb18__0_11707 -> bb19__0_11707 [label="return"];
    bb18__0_11707 -> bb564__0_11707 [label="unwind"];
    bb19__0_11707 -> bb522__0_11707 [label=""];
    bb20__0_11707 -> bb21__0_11707 [label="return"];
    bb20__0_11707 -> bb550__0_11707 [label="unwind"];
    bb21__0_11707 -> bb22__0_11707 [label="return"];
    bb21__0_11707 -> bb550__0_11707 [label="unwind"];
    bb22__0_11707 -> bb23__0_11707 [label="0"];
    bb22__0_11707 -> bb24__0_11707 [label="1"];
    bb22__0_11707 -> bb4__0_11707 [label="otherwise"];
    bb23__0_11707 -> bb26__0_11707 [label="return"];
    bb23__0_11707 -> bb549__0_11707 [label="unwind"];
    bb24__0_11707 -> bb25__0_11707 [label="return"];
    bb24__0_11707 -> bb563__0_11707 [label="unwind"];
    bb25__0_11707 -> bb521__0_11707 [label=""];
    bb26__0_11707 -> bb27__0_11707 [label="return"];
    bb26__0_11707 -> bb549__0_11707 [label="unwind"];
    bb27__0_11707 -> bb28__0_11707 [label="0"];
    bb27__0_11707 -> bb29__0_11707 [label="1"];
    bb27__0_11707 -> bb4__0_11707 [label="otherwise"];
    bb28__0_11707 -> bb31__0_11707 [label="return"];
    bb28__0_11707 -> bb549__0_11707 [label="unwind"];
    bb29__0_11707 -> bb30__0_11707 [label="return"];
    bb29__0_11707 -> bb562__0_11707 [label="unwind"];
    bb30__0_11707 -> bb520__0_11707 [label=""];
    bb31__0_11707 -> bb32__0_11707 [label="return"];
    bb31__0_11707 -> bb549__0_11707 [label="unwind"];
    bb32__0_11707 -> bb34__0_11707 [label="0"];
    bb32__0_11707 -> bb33__0_11707 [label="otherwise"];
    bb33__0_11707 -> bb35__0_11707 [label="return"];
    bb33__0_11707 -> bb549__0_11707 [label="unwind"];
    bb34__0_11707 -> bb42__0_11707 [label=""];
    bb35__0_11707 -> bb36__0_11707 [label="return"];
    bb35__0_11707 -> bb549__0_11707 [label="unwind"];
    bb36__0_11707 -> bb37__0_11707 [label="return"];
    bb36__0_11707 -> bb549__0_11707 [label="unwind"];
    bb37__0_11707 -> bb38__0_11707 [label="return"];
    bb37__0_11707 -> bb548__0_11707 [label="unwind"];
    bb38__0_11707 -> bb39__0_11707 [label="return"];
    bb38__0_11707 -> bb548__0_11707 [label="unwind"];
    bb39__0_11707 -> bb40__0_11707 [label="return"];
    bb39__0_11707 -> bb549__0_11707 [label="unwind"];
    bb40__0_11707 -> bb41__0_11707 [label="return"];
    bb40__0_11707 -> bb549__0_11707 [label="unwind"];
    bb41__0_11707 -> bb42__0_11707 [label=""];
    bb42__0_11707 -> bb43__0_11707 [label="return"];
    bb42__0_11707 -> bb549__0_11707 [label="unwind"];
    bb43__0_11707 -> bb44__0_11707 [label="0"];
    bb43__0_11707 -> bb45__0_11707 [label="1"];
    bb43__0_11707 -> bb4__0_11707 [label="otherwise"];
    bb44__0_11707 -> bb47__0_11707 [label="return"];
    bb44__0_11707 -> bb549__0_11707 [label="unwind"];
    bb45__0_11707 -> bb46__0_11707 [label="return"];
    bb45__0_11707 -> bb549__0_11707 [label="unwind"];
    bb46__0_11707 -> bb519__0_11707 [label=""];
    bb47__0_11707 -> bb48__0_11707 [label="return"];
    bb47__0_11707 -> bb549__0_11707 [label="unwind"];
    bb48__0_11707 -> bb50__0_11707 [label="0"];
    bb48__0_11707 -> bb49__0_11707 [label="otherwise"];
    bb49__0_11707 -> bb51__0_11707 [label="return"];
    bb49__0_11707 -> bb549__0_11707 [label="unwind"];
    bb50__0_11707 -> bb58__0_11707 [label=""];
    bb51__0_11707 -> bb52__0_11707 [label="return"];
    bb51__0_11707 -> bb549__0_11707 [label="unwind"];
    bb52__0_11707 -> bb53__0_11707 [label="return"];
    bb52__0_11707 -> bb549__0_11707 [label="unwind"];
    bb53__0_11707 -> bb54__0_11707 [label="return"];
    bb53__0_11707 -> bb547__0_11707 [label="unwind"];
    bb54__0_11707 -> bb55__0_11707 [label="return"];
    bb54__0_11707 -> bb547__0_11707 [label="unwind"];
    bb55__0_11707 -> bb56__0_11707 [label="return"];
    bb55__0_11707 -> bb549__0_11707 [label="unwind"];
    bb56__0_11707 -> bb57__0_11707 [label="return"];
    bb56__0_11707 -> bb549__0_11707 [label="unwind"];
    bb57__0_11707 -> bb58__0_11707 [label=""];
    bb58__0_11707 -> bb59__0_11707 [label="return"];
    bb58__0_11707 -> bb549__0_11707 [label="unwind"];
    bb59__0_11707 -> bb60__0_11707 [label="0"];
    bb59__0_11707 -> bb61__0_11707 [label="1"];
    bb59__0_11707 -> bb4__0_11707 [label="otherwise"];
    bb60__0_11707 -> bb63__0_11707 [label="return"];
    bb60__0_11707 -> bb549__0_11707 [label="unwind"];
    bb61__0_11707 -> bb62__0_11707 [label="return"];
    bb61__0_11707 -> bb549__0_11707 [label="unwind"];
    bb62__0_11707 -> bb519__0_11707 [label=""];
    bb63__0_11707 -> bb65__0_11707 [label="0"];
    bb63__0_11707 -> bb64__0_11707 [label="otherwise"];
    bb64__0_11707 -> bb73__0_11707 [label=""];
    bb65__0_11707 -> bb66__0_11707 [label="return"];
    bb65__0_11707 -> bb549__0_11707 [label="unwind"];
    bb66__0_11707 -> bb67__0_11707 [label="return"];
    bb66__0_11707 -> bb549__0_11707 [label="unwind"];
    bb67__0_11707 -> bb68__0_11707 [label="return"];
    bb67__0_11707 -> bb549__0_11707 [label="unwind"];
    bb68__0_11707 -> bb69__0_11707 [label="return"];
    bb68__0_11707 -> bb546__0_11707 [label="unwind"];
    bb69__0_11707 -> bb70__0_11707 [label="return"];
    bb69__0_11707 -> bb546__0_11707 [label="unwind"];
    bb70__0_11707 -> bb71__0_11707 [label="return"];
    bb70__0_11707 -> bb549__0_11707 [label="unwind"];
    bb71__0_11707 -> bb72__0_11707 [label="return"];
    bb71__0_11707 -> bb549__0_11707 [label="unwind"];
    bb72__0_11707 -> bb73__0_11707 [label=""];
    bb73__0_11707 -> bb74__0_11707 [label="return"];
    bb73__0_11707 -> bb549__0_11707 [label="unwind"];
    bb74__0_11707 -> bb75__0_11707 [label="0"];
    bb74__0_11707 -> bb76__0_11707 [label="1"];
    bb74__0_11707 -> bb4__0_11707 [label="otherwise"];
    bb75__0_11707 -> bb78__0_11707 [label="return"];
    bb75__0_11707 -> bb549__0_11707 [label="unwind"];
    bb76__0_11707 -> bb77__0_11707 [label="return"];
    bb76__0_11707 -> bb549__0_11707 [label="unwind"];
    bb77__0_11707 -> bb519__0_11707 [label=""];
    bb78__0_11707 -> bb79__0_11707 [label="return"];
    bb78__0_11707 -> bb549__0_11707 [label="unwind"];
    bb79__0_11707 -> bb80__0_11707 [label="return"];
    bb79__0_11707 -> bb549__0_11707 [label="unwind"];
    bb80__0_11707 -> bb81__0_11707 [label="return"];
    bb80__0_11707 -> bb545__0_11707 [label="unwind"];
    bb81__0_11707 -> bb82__0_11707 [label="return"];
    bb81__0_11707 -> bb544__0_11707 [label="unwind"];
    bb82__0_11707 -> bb83__0_11707 [label="return"];
    bb82__0_11707 -> bb544__0_11707 [label="unwind"];
    bb83__0_11707 -> bb84__0_11707 [label="return"];
    bb83__0_11707 -> bb544__0_11707 [label="unwind"];
    bb84__0_11707 -> bb85__0_11707 [label="0"];
    bb84__0_11707 -> bb86__0_11707 [label="1"];
    bb84__0_11707 -> bb4__0_11707 [label="otherwise"];
    bb85__0_11707 -> bb88__0_11707 [label="return"];
    bb85__0_11707 -> bb540__0_11707 [label="unwind"];
    bb86__0_11707 -> bb87__0_11707 [label="return"];
    bb86__0_11707 -> bb561__0_11707 [label="unwind"];
    bb87__0_11707 -> bb517__0_11707 [label="return"];
    bb87__0_11707 -> bb545__0_11707 [label="unwind"];
    bb88__0_11707 -> bb89__0_11707 [label="return"];
    bb88__0_11707 -> bb541__0_11707 [label="unwind"];
    bb89__0_11707 -> bb90__0_11707 [label="return"];
    bb89__0_11707 -> bb541__0_11707 [label="unwind"];
    bb90__0_11707 -> bb91__0_11707 [label="return"];
    bb90__0_11707 -> bb541__0_11707 [label="unwind"];
    bb91__0_11707 -> bb92__0_11707 [label="return"];
    bb91__0_11707 -> bb541__0_11707 [label="unwind"];
    bb92__0_11707 -> bb93__0_11707 [label="0"];
    bb92__0_11707 -> bb94__0_11707 [label="1"];
    bb92__0_11707 -> bb4__0_11707 [label="otherwise"];
    bb93__0_11707 -> bb96__0_11707 [label="return"];
    bb93__0_11707 -> bb541__0_11707 [label="unwind"];
    bb94__0_11707 -> bb95__0_11707 [label="return"];
    bb94__0_11707 -> bb541__0_11707 [label="unwind"];
    bb95__0_11707 -> bb513__0_11707 [label=""];
    bb96__0_11707 -> bb97__0_11707 [label="return"];
    bb96__0_11707 -> bb541__0_11707 [label="unwind"];
    bb97__0_11707 -> bb98__0_11707 [label="return"];
    bb97__0_11707 -> bb541__0_11707 [label="unwind"];
    bb98__0_11707 -> bb99__0_11707 [label="0"];
    bb98__0_11707 -> bb100__0_11707 [label="1"];
    bb98__0_11707 -> bb4__0_11707 [label="otherwise"];
    bb99__0_11707 -> bb102__0_11707 [label="return"];
    bb99__0_11707 -> bb539__0_11707 [label="unwind"];
    bb100__0_11707 -> bb101__0_11707 [label="return"];
    bb100__0_11707 -> bb560__0_11707 [label="unwind"];
    bb101__0_11707 -> bb555__0_11707 [label=""];
    bb102__0_11707 -> bb103__0_11707 [label="return"];
    bb102__0_11707 -> bb539__0_11707 [label="unwind"];
    bb103__0_11707 -> bb104__0_11707 [label="return"];
    bb103__0_11707 -> bb539__0_11707 [label="unwind"];
    bb104__0_11707 -> bb105__0_11707 [label="0"];
    bb104__0_11707 -> bb106__0_11707 [label="1"];
    bb104__0_11707 -> bb4__0_11707 [label="otherwise"];
    bb105__0_11707 -> bb552__0_11707 [label="return"];
    bb105__0_11707 -> bb560__0_11707 [label="unwind"];
    bb106__0_11707 -> bb107__0_11707 [label="return"];
    bb106__0_11707 -> bb539__0_11707 [label="unwind"];
    bb107__0_11707 -> bb555__0_11707 [label="return"];
    bb107__0_11707 -> bb560__0_11707 [label="unwind"];
    bb108__0_11707 -> bb109__0_11707 [label="return"];
    bb108__0_11707 -> bb541__0_11707 [label="unwind"];
    bb109__0_11707 -> bb110__0_11707 [label="return"];
    bb109__0_11707 -> bb541__0_11707 [label="unwind"];
    bb110__0_11707 -> bb111__0_11707 [label="0"];
    bb110__0_11707 -> bb112__0_11707 [label="1"];
    bb110__0_11707 -> bb4__0_11707 [label="otherwise"];
    bb111__0_11707 -> bb114__0_11707 [label="return"];
    bb111__0_11707 -> bb538__0_11707 [label="unwind"];
    bb112__0_11707 -> bb113__0_11707 [label="return"];
    bb112__0_11707 -> bb559__0_11707 [label="unwind"];
    bb113__0_11707 -> bb554__0_11707 [label=""];
    bb114__0_11707 -> bb115__0_11707 [label="return"];
    bb114__0_11707 -> bb538__0_11707 [label="unwind"];
    bb115__0_11707 -> bb116__0_11707 [label="return"];
    bb115__0_11707 -> bb538__0_11707 [label="unwind"];
    bb116__0_11707 -> bb117__0_11707 [label="0"];
    bb116__0_11707 -> bb118__0_11707 [label="1"];
    bb116__0_11707 -> bb4__0_11707 [label="otherwise"];
    bb117__0_11707 -> bb553__0_11707 [label="return"];
    bb117__0_11707 -> bb559__0_11707 [label="unwind"];
    bb118__0_11707 -> bb119__0_11707 [label="return"];
    bb118__0_11707 -> bb538__0_11707 [label="unwind"];
    bb119__0_11707 -> bb554__0_11707 [label="return"];
    bb119__0_11707 -> bb559__0_11707 [label="unwind"];
    bb120__0_11707 -> bb121__0_11707 [label="return"];
    bb120__0_11707 -> bb541__0_11707 [label="unwind"];
    bb121__0_11707 -> bb122__0_11707 [label="0"];
    bb121__0_11707 -> bb123__0_11707 [label="1"];
    bb121__0_11707 -> bb4__0_11707 [label="otherwise"];
    bb122__0_11707 -> bb125__0_11707 [label="return"];
    bb122__0_11707 -> bb537__0_11707 [label="unwind"];
    bb123__0_11707 -> bb124__0_11707 [label="return"];
    bb123__0_11707 -> bb558__0_11707 [label="unwind"];
    bb124__0_11707 -> bb511__0_11707 [label=""];
    bb125__0_11707 -> bb126__0_11707 [label="return"];
    bb125__0_11707 -> bb537__0_11707 [label="unwind"];
    bb126__0_11707 -> bb127__0_11707 [label="return"];
    bb126__0_11707 -> bb537__0_11707 [label="unwind"];
    bb127__0_11707 -> bb128__0_11707 [label="return"];
    bb127__0_11707 -> bb537__0_11707 [label="unwind"];
    bb128__0_11707 -> bb129__0_11707 [label="return"];
    bb128__0_11707 -> bb537__0_11707 [label="unwind"];
    bb129__0_11707 -> bb130__0_11707 [label="return"];
    bb129__0_11707 -> bb537__0_11707 [label="unwind"];
    bb130__0_11707 -> bb131__0_11707 [label="return"];
    bb130__0_11707 -> bb537__0_11707 [label="unwind"];
    bb131__0_11707 -> bb132__0_11707 [label="return"];
    bb131__0_11707 -> bb537__0_11707 [label="unwind"];
    bb132__0_11707 -> bb133__0_11707 [label="0"];
    bb132__0_11707 -> bb134__0_11707 [label="1"];
    bb132__0_11707 -> bb4__0_11707 [label="otherwise"];
    bb133__0_11707 -> bb136__0_11707 [label="return"];
    bb133__0_11707 -> bb537__0_11707 [label="unwind"];
    bb134__0_11707 -> bb135__0_11707 [label="return"];
    bb134__0_11707 -> bb537__0_11707 [label="unwind"];
    bb135__0_11707 -> bb509__0_11707 [label=""];
    bb136__0_11707 -> bb137__0_11707 [label="return"];
    bb136__0_11707 -> bb537__0_11707 [label="unwind"];
    bb137__0_11707 -> bb138__0_11707 [label="return"];
    bb137__0_11707 -> bb537__0_11707 [label="unwind"];
    bb138__0_11707 -> bb139__0_11707 [label="0"];
    bb138__0_11707 -> bb140__0_11707 [label="1"];
    bb138__0_11707 -> bb4__0_11707 [label="otherwise"];
    bb139__0_11707 -> bb142__0_11707 [label="return"];
    bb139__0_11707 -> bb537__0_11707 [label="unwind"];
    bb140__0_11707 -> bb141__0_11707 [label="return"];
    bb140__0_11707 -> bb537__0_11707 [label="unwind"];
    bb141__0_11707 -> bb509__0_11707 [label=""];
    bb142__0_11707 -> bb143__0_11707 [label="return"];
    bb142__0_11707 -> bb537__0_11707 [label="unwind"];
    bb143__0_11707 -> bb144__0_11707 [label="return"];
    bb143__0_11707 -> bb537__0_11707 [label="unwind"];
    bb144__0_11707 -> bb145__0_11707 [label="return"];
    bb144__0_11707 -> bb537__0_11707 [label="unwind"];
    bb145__0_11707 -> bb146__0_11707 [label="0"];
    bb145__0_11707 -> bb147__0_11707 [label="1"];
    bb145__0_11707 -> bb4__0_11707 [label="otherwise"];
    bb146__0_11707 -> bb150__0_11707 [label="0"];
    bb146__0_11707 -> bb149__0_11707 [label="otherwise"];
    bb147__0_11707 -> bb148__0_11707 [label="return"];
    bb147__0_11707 -> bb537__0_11707 [label="unwind"];
    bb148__0_11707 -> bb507__0_11707 [label=""];
    bb149__0_11707 -> bb158__0_11707 [label=""];
    bb150__0_11707 -> bb151__0_11707 [label="return"];
    bb150__0_11707 -> bb537__0_11707 [label="unwind"];
    bb151__0_11707 -> bb152__0_11707 [label="return"];
    bb151__0_11707 -> bb537__0_11707 [label="unwind"];
    bb152__0_11707 -> bb153__0_11707 [label="return"];
    bb152__0_11707 -> bb537__0_11707 [label="unwind"];
    bb153__0_11707 -> bb154__0_11707 [label="return"];
    bb153__0_11707 -> bb536__0_11707 [label="unwind"];
    bb154__0_11707 -> bb155__0_11707 [label="return"];
    bb154__0_11707 -> bb536__0_11707 [label="unwind"];
    bb155__0_11707 -> bb156__0_11707 [label="return"];
    bb155__0_11707 -> bb537__0_11707 [label="unwind"];
    bb156__0_11707 -> bb157__0_11707 [label="return"];
    bb156__0_11707 -> bb537__0_11707 [label="unwind"];
    bb157__0_11707 -> bb158__0_11707 [label=""];
    bb158__0_11707 -> bb159__0_11707 [label="return"];
    bb158__0_11707 -> bb537__0_11707 [label="unwind"];
    bb159__0_11707 -> bb160__0_11707 [label="0"];
    bb159__0_11707 -> bb161__0_11707 [label="1"];
    bb159__0_11707 -> bb4__0_11707 [label="otherwise"];
    bb160__0_11707 -> bb163__0_11707 [label="return"];
    bb160__0_11707 -> bb537__0_11707 [label="unwind"];
    bb161__0_11707 -> bb162__0_11707 [label="return"];
    bb161__0_11707 -> bb537__0_11707 [label="unwind"];
    bb162__0_11707 -> bb507__0_11707 [label=""];
    bb163__0_11707 -> bb164__0_11707 [label="return"];
    bb163__0_11707 -> bb537__0_11707 [label="unwind"];
    bb164__0_11707 -> bb166__0_11707 [label="0"];
    bb164__0_11707 -> bb165__0_11707 [label="otherwise"];
    bb165__0_11707 -> bb167__0_11707 [label="return"];
    bb165__0_11707 -> bb537__0_11707 [label="unwind"];
    bb166__0_11707 -> bb174__0_11707 [label=""];
    bb167__0_11707 -> bb168__0_11707 [label="return"];
    bb167__0_11707 -> bb537__0_11707 [label="unwind"];
    bb168__0_11707 -> bb169__0_11707 [label="return"];
    bb168__0_11707 -> bb537__0_11707 [label="unwind"];
    bb169__0_11707 -> bb170__0_11707 [label="return"];
    bb169__0_11707 -> bb535__0_11707 [label="unwind"];
    bb170__0_11707 -> bb171__0_11707 [label="return"];
    bb170__0_11707 -> bb535__0_11707 [label="unwind"];
    bb171__0_11707 -> bb172__0_11707 [label="return"];
    bb171__0_11707 -> bb537__0_11707 [label="unwind"];
    bb172__0_11707 -> bb173__0_11707 [label="return"];
    bb172__0_11707 -> bb537__0_11707 [label="unwind"];
    bb173__0_11707 -> bb174__0_11707 [label=""];
    bb174__0_11707 -> bb175__0_11707 [label="return"];
    bb174__0_11707 -> bb537__0_11707 [label="unwind"];
    bb175__0_11707 -> bb176__0_11707 [label="0"];
    bb175__0_11707 -> bb177__0_11707 [label="1"];
    bb175__0_11707 -> bb4__0_11707 [label="otherwise"];
    bb176__0_11707 -> bb179__0_11707 [label="return"];
    bb176__0_11707 -> bb541__0_11707 [label="unwind"];
    bb177__0_11707 -> bb178__0_11707 [label="return"];
    bb177__0_11707 -> bb537__0_11707 [label="unwind"];
    bb178__0_11707 -> bb508__0_11707 [label=""];
    bb179__0_11707 -> bb180__0_11707 [label="1"];
    bb179__0_11707 -> bb240__0_11707 [label="otherwise"];
    bb180__0_11707 -> bb181__0_11707 [label="return"];
    bb180__0_11707 -> bb541__0_11707 [label="unwind"];
    bb181__0_11707 -> bb182__0_11707 [label="return"];
    bb181__0_11707 -> bb541__0_11707 [label="unwind"];
    bb182__0_11707 -> bb183__0_11707 [label="return"];
    bb182__0_11707 -> bb541__0_11707 [label="unwind"];
    bb183__0_11707 -> bb184__0_11707 [label="0"];
    bb183__0_11707 -> bb185__0_11707 [label="1"];
    bb183__0_11707 -> bb4__0_11707 [label="otherwise"];
    bb184__0_11707 -> bb187__0_11707 [label="return"];
    bb184__0_11707 -> bb541__0_11707 [label="unwind"];
    bb185__0_11707 -> bb186__0_11707 [label="return"];
    bb185__0_11707 -> bb541__0_11707 [label="unwind"];
    bb186__0_11707 -> bb505__0_11707 [label=""];
    bb187__0_11707 -> bb188__0_11707 [label="return"];
    bb187__0_11707 -> bb541__0_11707 [label="unwind"];
    bb188__0_11707 -> bb190__0_11707 [label="0"];
    bb188__0_11707 -> bb189__0_11707 [label="otherwise"];
    bb189__0_11707 -> bb198__0_11707 [label=""];
    bb190__0_11707 -> bb191__0_11707 [label="return"];
    bb190__0_11707 -> bb541__0_11707 [label="unwind"];
    bb191__0_11707 -> bb192__0_11707 [label="return"];
    bb191__0_11707 -> bb541__0_11707 [label="unwind"];
    bb192__0_11707 -> bb193__0_11707 [label="return"];
    bb192__0_11707 -> bb541__0_11707 [label="unwind"];
    bb193__0_11707 -> bb194__0_11707 [label="return"];
    bb193__0_11707 -> bb534__0_11707 [label="unwind"];
    bb194__0_11707 -> bb195__0_11707 [label="return"];
    bb194__0_11707 -> bb534__0_11707 [label="unwind"];
    bb195__0_11707 -> bb196__0_11707 [label="return"];
    bb195__0_11707 -> bb541__0_11707 [label="unwind"];
    bb196__0_11707 -> bb197__0_11707 [label="return"];
    bb196__0_11707 -> bb541__0_11707 [label="unwind"];
    bb197__0_11707 -> bb198__0_11707 [label=""];
    bb198__0_11707 -> bb199__0_11707 [label="return"];
    bb198__0_11707 -> bb541__0_11707 [label="unwind"];
    bb199__0_11707 -> bb200__0_11707 [label="0"];
    bb199__0_11707 -> bb201__0_11707 [label="1"];
    bb199__0_11707 -> bb4__0_11707 [label="otherwise"];
    bb200__0_11707 -> bb203__0_11707 [label="return"];
    bb200__0_11707 -> bb541__0_11707 [label="unwind"];
    bb201__0_11707 -> bb202__0_11707 [label="return"];
    bb201__0_11707 -> bb541__0_11707 [label="unwind"];
    bb202__0_11707 -> bb504__0_11707 [label=""];
    bb203__0_11707 -> bb204__0_11707 [label="return"];
    bb203__0_11707 -> bb541__0_11707 [label="unwind"];
    bb204__0_11707 -> bb206__0_11707 [label="0"];
    bb204__0_11707 -> bb205__0_11707 [label="otherwise"];
    bb205__0_11707 -> bb214__0_11707 [label=""];
    bb206__0_11707 -> bb207__0_11707 [label="return"];
    bb206__0_11707 -> bb541__0_11707 [label="unwind"];
    bb207__0_11707 -> bb208__0_11707 [label="return"];
    bb207__0_11707 -> bb541__0_11707 [label="unwind"];
    bb208__0_11707 -> bb209__0_11707 [label="return"];
    bb208__0_11707 -> bb541__0_11707 [label="unwind"];
    bb209__0_11707 -> bb210__0_11707 [label="return"];
    bb209__0_11707 -> bb533__0_11707 [label="unwind"];
    bb210__0_11707 -> bb211__0_11707 [label="return"];
    bb210__0_11707 -> bb533__0_11707 [label="unwind"];
    bb211__0_11707 -> bb212__0_11707 [label="return"];
    bb211__0_11707 -> bb541__0_11707 [label="unwind"];
    bb212__0_11707 -> bb213__0_11707 [label="return"];
    bb212__0_11707 -> bb541__0_11707 [label="unwind"];
    bb213__0_11707 -> bb214__0_11707 [label=""];
    bb214__0_11707 -> bb215__0_11707 [label="return"];
    bb214__0_11707 -> bb541__0_11707 [label="unwind"];
    bb215__0_11707 -> bb216__0_11707 [label="0"];
    bb215__0_11707 -> bb217__0_11707 [label="1"];
    bb215__0_11707 -> bb4__0_11707 [label="otherwise"];
    bb216__0_11707 -> bb219__0_11707 [label="return"];
    bb216__0_11707 -> bb541__0_11707 [label="unwind"];
    bb217__0_11707 -> bb218__0_11707 [label="return"];
    bb217__0_11707 -> bb541__0_11707 [label="unwind"];
    bb218__0_11707 -> bb504__0_11707 [label=""];
    bb219__0_11707 -> bb220__0_11707 [label="return"];
    bb219__0_11707 -> bb541__0_11707 [label="unwind"];
    bb220__0_11707 -> bb221__0_11707 [label="return"];
    bb220__0_11707 -> bb541__0_11707 [label="unwind"];
    bb221__0_11707 -> bb222__0_11707 [label="0"];
    bb221__0_11707 -> bb223__0_11707 [label="1"];
    bb221__0_11707 -> bb4__0_11707 [label="otherwise"];
    bb222__0_11707 -> bb226__0_11707 [label="0"];
    bb222__0_11707 -> bb225__0_11707 [label="otherwise"];
    bb223__0_11707 -> bb224__0_11707 [label="return"];
    bb223__0_11707 -> bb541__0_11707 [label="unwind"];
    bb224__0_11707 -> bb503__0_11707 [label=""];
    bb225__0_11707 -> bb234__0_11707 [label=""];
    bb226__0_11707 -> bb227__0_11707 [label="return"];
    bb226__0_11707 -> bb541__0_11707 [label="unwind"];
    bb227__0_11707 -> bb228__0_11707 [label="return"];
    bb227__0_11707 -> bb541__0_11707 [label="unwind"];
    bb228__0_11707 -> bb229__0_11707 [label="return"];
    bb228__0_11707 -> bb541__0_11707 [label="unwind"];
    bb229__0_11707 -> bb230__0_11707 [label="return"];
    bb229__0_11707 -> bb532__0_11707 [label="unwind"];
    bb230__0_11707 -> bb231__0_11707 [label="return"];
    bb230__0_11707 -> bb532__0_11707 [label="unwind"];
    bb231__0_11707 -> bb232__0_11707 [label="return"];
    bb231__0_11707 -> bb541__0_11707 [label="unwind"];
    bb232__0_11707 -> bb233__0_11707 [label="return"];
    bb232__0_11707 -> bb541__0_11707 [label="unwind"];
    bb233__0_11707 -> bb234__0_11707 [label=""];
    bb234__0_11707 -> bb235__0_11707 [label="return"];
    bb234__0_11707 -> bb541__0_11707 [label="unwind"];
    bb235__0_11707 -> bb236__0_11707 [label="0"];
    bb235__0_11707 -> bb237__0_11707 [label="1"];
    bb235__0_11707 -> bb4__0_11707 [label="otherwise"];
    bb236__0_11707 -> bb239__0_11707 [label="return"];
    bb236__0_11707 -> bb541__0_11707 [label="unwind"];
    bb237__0_11707 -> bb238__0_11707 [label="return"];
    bb237__0_11707 -> bb541__0_11707 [label="unwind"];
    bb238__0_11707 -> bb503__0_11707 [label=""];
    bb239__0_11707 -> bb262__0_11707 [label=""];
    bb240__0_11707 -> bb241__0_11707 [label="return"];
    bb240__0_11707 -> bb541__0_11707 [label="unwind"];
    bb241__0_11707 -> bb242__0_11707 [label="return"];
    bb241__0_11707 -> bb541__0_11707 [label="unwind"];
    bb242__0_11707 -> bb243__0_11707 [label="return"];
    bb242__0_11707 -> bb541__0_11707 [label="unwind"];
    bb243__0_11707 -> bb244__0_11707 [label="0"];
    bb243__0_11707 -> bb245__0_11707 [label="1"];
    bb243__0_11707 -> bb4__0_11707 [label="otherwise"];
    bb244__0_11707 -> bb248__0_11707 [label="0"];
    bb244__0_11707 -> bb247__0_11707 [label="otherwise"];
    bb245__0_11707 -> bb246__0_11707 [label="return"];
    bb245__0_11707 -> bb541__0_11707 [label="unwind"];
    bb246__0_11707 -> bb502__0_11707 [label=""];
    bb247__0_11707 -> bb256__0_11707 [label=""];
    bb248__0_11707 -> bb249__0_11707 [label="return"];
    bb248__0_11707 -> bb541__0_11707 [label="unwind"];
    bb249__0_11707 -> bb250__0_11707 [label="return"];
    bb249__0_11707 -> bb541__0_11707 [label="unwind"];
    bb250__0_11707 -> bb251__0_11707 [label="return"];
    bb250__0_11707 -> bb541__0_11707 [label="unwind"];
    bb251__0_11707 -> bb252__0_11707 [label="return"];
    bb251__0_11707 -> bb531__0_11707 [label="unwind"];
    bb252__0_11707 -> bb253__0_11707 [label="return"];
    bb252__0_11707 -> bb531__0_11707 [label="unwind"];
    bb253__0_11707 -> bb254__0_11707 [label="return"];
    bb253__0_11707 -> bb541__0_11707 [label="unwind"];
    bb254__0_11707 -> bb255__0_11707 [label="return"];
    bb254__0_11707 -> bb541__0_11707 [label="unwind"];
    bb255__0_11707 -> bb256__0_11707 [label=""];
    bb256__0_11707 -> bb257__0_11707 [label="return"];
    bb256__0_11707 -> bb541__0_11707 [label="unwind"];
    bb257__0_11707 -> bb258__0_11707 [label="0"];
    bb257__0_11707 -> bb259__0_11707 [label="1"];
    bb257__0_11707 -> bb4__0_11707 [label="otherwise"];
    bb258__0_11707 -> bb261__0_11707 [label="return"];
    bb258__0_11707 -> bb541__0_11707 [label="unwind"];
    bb259__0_11707 -> bb260__0_11707 [label="return"];
    bb259__0_11707 -> bb541__0_11707 [label="unwind"];
    bb260__0_11707 -> bb502__0_11707 [label=""];
    bb261__0_11707 -> bb262__0_11707 [label=""];
    bb262__0_11707 -> bb263__0_11707 [label="return"];
    bb262__0_11707 -> bb541__0_11707 [label="unwind"];
    bb263__0_11707 -> bb264__0_11707 [label="return"];
    bb263__0_11707 -> bb541__0_11707 [label="unwind"];
    bb264__0_11707 -> bb265__0_11707 [label="0"];
    bb264__0_11707 -> bb266__0_11707 [label="1"];
    bb264__0_11707 -> bb4__0_11707 [label="otherwise"];
    bb265__0_11707 -> bb268__0_11707 [label="return"];
    bb265__0_11707 -> bb541__0_11707 [label="unwind"];
    bb266__0_11707 -> bb267__0_11707 [label="return"];
    bb266__0_11707 -> bb541__0_11707 [label="unwind"];
    bb267__0_11707 -> bb500__0_11707 [label=""];
    bb268__0_11707 -> bb269__0_11707 [label="return"];
    bb268__0_11707 -> bb541__0_11707 [label="unwind"];
    bb269__0_11707 -> bb270__0_11707 [label="0"];
    bb269__0_11707 -> bb271__0_11707 [label="1"];
    bb269__0_11707 -> bb4__0_11707 [label="otherwise"];
    bb270__0_11707 -> bb273__0_11707 [label="return"];
    bb270__0_11707 -> bb541__0_11707 [label="unwind"];
    bb271__0_11707 -> bb272__0_11707 [label="return"];
    bb271__0_11707 -> bb541__0_11707 [label="unwind"];
    bb272__0_11707 -> bb500__0_11707 [label=""];
    bb273__0_11707 -> bb274__0_11707 [label="return"];
    bb273__0_11707 -> bb541__0_11707 [label="unwind"];
    bb274__0_11707 -> bb275__0_11707 [label="0"];
    bb274__0_11707 -> bb276__0_11707 [label="1"];
    bb274__0_11707 -> bb4__0_11707 [label="otherwise"];
    bb275__0_11707 -> bb278__0_11707 [label="return"];
    bb275__0_11707 -> bb541__0_11707 [label="unwind"];
    bb276__0_11707 -> bb277__0_11707 [label="return"];
    bb276__0_11707 -> bb541__0_11707 [label="unwind"];
    bb277__0_11707 -> bb497__0_11707 [label=""];
    bb278__0_11707 -> bb279__0_11707 [label="return"];
    bb278__0_11707 -> bb541__0_11707 [label="unwind"];
    bb279__0_11707 -> bb280__0_11707 [label="0"];
    bb279__0_11707 -> bb281__0_11707 [label="1"];
    bb279__0_11707 -> bb4__0_11707 [label="otherwise"];
    bb280__0_11707 -> bb283__0_11707 [label="return"];
    bb280__0_11707 -> bb541__0_11707 [label="unwind"];
    bb281__0_11707 -> bb282__0_11707 [label="return"];
    bb281__0_11707 -> bb541__0_11707 [label="unwind"];
    bb282__0_11707 -> bb497__0_11707 [label=""];
    bb283__0_11707 -> bb284__0_11707 [label="return"];
    bb283__0_11707 -> bb541__0_11707 [label="unwind"];
    bb284__0_11707 -> bb285__0_11707 [label="0"];
    bb284__0_11707 -> bb286__0_11707 [label="1"];
    bb284__0_11707 -> bb4__0_11707 [label="otherwise"];
    bb285__0_11707 -> bb288__0_11707 [label="return"];
    bb285__0_11707 -> bb541__0_11707 [label="unwind"];
    bb286__0_11707 -> bb287__0_11707 [label="return"];
    bb286__0_11707 -> bb541__0_11707 [label="unwind"];
    bb287__0_11707 -> bb498__0_11707 [label=""];
    bb288__0_11707 -> bb289__0_11707 [label="return"];
    bb288__0_11707 -> bb541__0_11707 [label="unwind"];
    bb289__0_11707 -> bb290__0_11707 [label="return"];
    bb289__0_11707 -> bb541__0_11707 [label="unwind"];
    bb290__0_11707 -> bb291__0_11707 [label="0"];
    bb290__0_11707 -> bb292__0_11707 [label="1"];
    bb290__0_11707 -> bb4__0_11707 [label="otherwise"];
    bb291__0_11707 -> bb294__0_11707 [label="return"];
    bb291__0_11707 -> bb541__0_11707 [label="unwind"];
    bb292__0_11707 -> bb293__0_11707 [label="return"];
    bb292__0_11707 -> bb541__0_11707 [label="unwind"];
    bb293__0_11707 -> bb496__0_11707 [label=""];
    bb294__0_11707 -> bb295__0_11707 [label="return"];
    bb294__0_11707 -> bb541__0_11707 [label="unwind"];
    bb295__0_11707 -> bb296__0_11707 [label="return"];
    bb295__0_11707 -> bb541__0_11707 [label="unwind"];
    bb296__0_11707 -> bb297__0_11707 [label="0"];
    bb296__0_11707 -> bb298__0_11707 [label="1"];
    bb296__0_11707 -> bb4__0_11707 [label="otherwise"];
    bb297__0_11707 -> bb300__0_11707 [label="return"];
    bb297__0_11707 -> bb541__0_11707 [label="unwind"];
    bb298__0_11707 -> bb299__0_11707 [label="return"];
    bb298__0_11707 -> bb541__0_11707 [label="unwind"];
    bb299__0_11707 -> bb495__0_11707 [label=""];
    bb300__0_11707 -> bb301__0_11707 [label="return"];
    bb300__0_11707 -> bb541__0_11707 [label="unwind"];
    bb301__0_11707 -> bb302__0_11707 [label="return"];
    bb301__0_11707 -> bb541__0_11707 [label="unwind"];
    bb302__0_11707 -> bb303__0_11707 [label="return"];
    bb302__0_11707 -> bb541__0_11707 [label="unwind"];
    bb303__0_11707 -> bb304__0_11707 [label="0"];
    bb303__0_11707 -> bb305__0_11707 [label="1"];
    bb303__0_11707 -> bb4__0_11707 [label="otherwise"];
    bb304__0_11707 -> bb307__0_11707 [label="return"];
    bb304__0_11707 -> bb541__0_11707 [label="unwind"];
    bb305__0_11707 -> bb306__0_11707 [label="return"];
    bb305__0_11707 -> bb541__0_11707 [label="unwind"];
    bb306__0_11707 -> bb494__0_11707 [label=""];
    bb307__0_11707 -> bb308__0_11707 [label="return"];
    bb307__0_11707 -> bb541__0_11707 [label="unwind"];
    bb308__0_11707 -> bb309__0_11707 [label="0"];
    bb308__0_11707 -> bb310__0_11707 [label="1"];
    bb308__0_11707 -> bb4__0_11707 [label="otherwise"];
    bb309__0_11707 -> bb312__0_11707 [label="return"];
    bb309__0_11707 -> bb530__0_11707 [label="unwind"];
    bb310__0_11707 -> bb311__0_11707 [label="return"];
    bb310__0_11707 -> bb557__0_11707 [label="unwind"];
    bb311__0_11707 -> bb493__0_11707 [label=""];
    bb312__0_11707 -> bb313__0_11707 [label="return"];
    bb312__0_11707 -> bb530__0_11707 [label="unwind"];
    bb313__0_11707 -> bb314__0_11707 [label="return"];
    bb313__0_11707 -> bb530__0_11707 [label="unwind"];
    bb314__0_11707 -> bb315__0_11707 [label="0"];
    bb314__0_11707 -> bb316__0_11707 [label="1"];
    bb314__0_11707 -> bb4__0_11707 [label="otherwise"];
    bb315__0_11707 -> bb318__0_11707 [label="return"];
    bb315__0_11707 -> bb530__0_11707 [label="unwind"];
    bb316__0_11707 -> bb317__0_11707 [label="return"];
    bb316__0_11707 -> bb530__0_11707 [label="unwind"];
    bb317__0_11707 -> bb492__0_11707 [label=""];
    bb318__0_11707 -> bb319__0_11707 [label="return"];
    bb318__0_11707 -> bb530__0_11707 [label="unwind"];
    bb319__0_11707 -> bb320__0_11707 [label="return"];
    bb319__0_11707 -> bb530__0_11707 [label="unwind"];
    bb320__0_11707 -> bb321__0_11707 [label="0"];
    bb320__0_11707 -> bb322__0_11707 [label="1"];
    bb320__0_11707 -> bb4__0_11707 [label="otherwise"];
    bb321__0_11707 -> bb324__0_11707 [label="return"];
    bb321__0_11707 -> bb530__0_11707 [label="unwind"];
    bb322__0_11707 -> bb323__0_11707 [label="return"];
    bb322__0_11707 -> bb530__0_11707 [label="unwind"];
    bb323__0_11707 -> bb492__0_11707 [label=""];
    bb324__0_11707 -> bb325__0_11707 [label="return"];
    bb324__0_11707 -> bb530__0_11707 [label="unwind"];
    bb325__0_11707 -> bb326__0_11707 [label="return"];
    bb325__0_11707 -> bb530__0_11707 [label="unwind"];
    bb326__0_11707 -> bb327__0_11707 [label="0"];
    bb326__0_11707 -> bb328__0_11707 [label="1"];
    bb326__0_11707 -> bb4__0_11707 [label="otherwise"];
    bb327__0_11707 -> bb330__0_11707 [label="return"];
    bb327__0_11707 -> bb530__0_11707 [label="unwind"];
    bb328__0_11707 -> bb329__0_11707 [label="return"];
    bb328__0_11707 -> bb530__0_11707 [label="unwind"];
    bb329__0_11707 -> bb491__0_11707 [label=""];
    bb330__0_11707 -> bb331__0_11707 [label="return"];
    bb330__0_11707 -> bb530__0_11707 [label="unwind"];
    bb331__0_11707 -> bb332__0_11707 [label="return"];
    bb331__0_11707 -> bb530__0_11707 [label="unwind"];
    bb332__0_11707 -> bb333__0_11707 [label="0"];
    bb332__0_11707 -> bb334__0_11707 [label="1"];
    bb332__0_11707 -> bb4__0_11707 [label="otherwise"];
    bb333__0_11707 -> bb336__0_11707 [label="return"];
    bb333__0_11707 -> bb530__0_11707 [label="unwind"];
    bb334__0_11707 -> bb335__0_11707 [label="return"];
    bb334__0_11707 -> bb530__0_11707 [label="unwind"];
    bb335__0_11707 -> bb490__0_11707 [label=""];
    bb336__0_11707 -> bb337__0_11707 [label="return"];
    bb336__0_11707 -> bb530__0_11707 [label="unwind"];
    bb337__0_11707 -> bb338__0_11707 [label="return"];
    bb337__0_11707 -> bb530__0_11707 [label="unwind"];
    bb338__0_11707 -> bb339__0_11707 [label="return"];
    bb338__0_11707 -> bb530__0_11707 [label="unwind"];
    bb339__0_11707 -> bb340__0_11707 [label="0"];
    bb339__0_11707 -> bb341__0_11707 [label="1"];
    bb339__0_11707 -> bb4__0_11707 [label="otherwise"];
    bb340__0_11707 -> bb343__0_11707 [label="return"];
    bb340__0_11707 -> bb530__0_11707 [label="unwind"];
    bb341__0_11707 -> bb342__0_11707 [label="return"];
    bb341__0_11707 -> bb530__0_11707 [label="unwind"];
    bb342__0_11707 -> bb490__0_11707 [label=""];
    bb343__0_11707 -> bb344__0_11707 [label="return"];
    bb343__0_11707 -> bb530__0_11707 [label="unwind"];
    bb344__0_11707 -> bb345__0_11707 [label="return"];
    bb344__0_11707 -> bb530__0_11707 [label="unwind"];
    bb345__0_11707 -> bb346__0_11707 [label="0"];
    bb345__0_11707 -> bb347__0_11707 [label="1"];
    bb345__0_11707 -> bb4__0_11707 [label="otherwise"];
    bb346__0_11707 -> bb349__0_11707 [label="return"];
    bb346__0_11707 -> bb530__0_11707 [label="unwind"];
    bb347__0_11707 -> bb348__0_11707 [label="return"];
    bb347__0_11707 -> bb530__0_11707 [label="unwind"];
    bb348__0_11707 -> bb489__0_11707 [label=""];
    bb349__0_11707 -> bb350__0_11707 [label="return"];
    bb349__0_11707 -> bb530__0_11707 [label="unwind"];
    bb350__0_11707 -> bb351__0_11707 [label="return"];
    bb350__0_11707 -> bb530__0_11707 [label="unwind"];
    bb351__0_11707 -> bb352__0_11707 [label="0"];
    bb351__0_11707 -> bb353__0_11707 [label="1"];
    bb351__0_11707 -> bb4__0_11707 [label="otherwise"];
    bb352__0_11707 -> bb355__0_11707 [label="return"];
    bb352__0_11707 -> bb530__0_11707 [label="unwind"];
    bb353__0_11707 -> bb354__0_11707 [label="return"];
    bb353__0_11707 -> bb530__0_11707 [label="unwind"];
    bb354__0_11707 -> bb489__0_11707 [label=""];
    bb355__0_11707 -> bb356__0_11707 [label="return"];
    bb355__0_11707 -> bb530__0_11707 [label="unwind"];
    bb356__0_11707 -> bb357__0_11707 [label="return"];
    bb356__0_11707 -> bb530__0_11707 [label="unwind"];
    bb357__0_11707 -> bb358__0_11707 [label="0"];
    bb357__0_11707 -> bb359__0_11707 [label="1"];
    bb357__0_11707 -> bb4__0_11707 [label="otherwise"];
    bb358__0_11707 -> bb361__0_11707 [label="return"];
    bb358__0_11707 -> bb541__0_11707 [label="unwind"];
    bb359__0_11707 -> bb360__0_11707 [label="return"];
    bb359__0_11707 -> bb530__0_11707 [label="unwind"];
    bb360__0_11707 -> bb489__0_11707 [label=""];
    bb361__0_11707 -> bb362__0_11707 [label="return"];
    bb361__0_11707 -> bb541__0_11707 [label="unwind"];
    bb362__0_11707 -> bb363__0_11707 [label="return"];
    bb362__0_11707 -> bb541__0_11707 [label="unwind"];
    bb363__0_11707 -> bb364__0_11707 [label="return"];
    bb363__0_11707 -> bb541__0_11707 [label="unwind"];
    bb364__0_11707 -> bb365__0_11707 [label="return"];
    bb364__0_11707 -> bb541__0_11707 [label="unwind"];
    bb365__0_11707 -> bb366__0_11707 [label="return"];
    bb365__0_11707 -> bb541__0_11707 [label="unwind"];
    bb366__0_11707 -> bb367__0_11707 [label="0"];
    bb366__0_11707 -> bb368__0_11707 [label="1"];
    bb366__0_11707 -> bb4__0_11707 [label="otherwise"];
    bb367__0_11707 -> bb370__0_11707 [label="return"];
    bb367__0_11707 -> bb541__0_11707 [label="unwind"];
    bb368__0_11707 -> bb369__0_11707 [label="return"];
    bb368__0_11707 -> bb541__0_11707 [label="unwind"];
    bb369__0_11707 -> bb488__0_11707 [label=""];
    bb370__0_11707 -> bb372__0_11707 [label="0"];
    bb370__0_11707 -> bb371__0_11707 [label="otherwise"];
    bb371__0_11707 -> bb380__0_11707 [label=""];
    bb372__0_11707 -> bb373__0_11707 [label="return"];
    bb372__0_11707 -> bb541__0_11707 [label="unwind"];
    bb373__0_11707 -> bb374__0_11707 [label="return"];
    bb373__0_11707 -> bb541__0_11707 [label="unwind"];
    bb374__0_11707 -> bb375__0_11707 [label="return"];
    bb374__0_11707 -> bb541__0_11707 [label="unwind"];
    bb375__0_11707 -> bb376__0_11707 [label="return"];
    bb375__0_11707 -> bb529__0_11707 [label="unwind"];
    bb376__0_11707 -> bb377__0_11707 [label="return"];
    bb376__0_11707 -> bb529__0_11707 [label="unwind"];
    bb377__0_11707 -> bb378__0_11707 [label="return"];
    bb377__0_11707 -> bb541__0_11707 [label="unwind"];
    bb378__0_11707 -> bb379__0_11707 [label="return"];
    bb378__0_11707 -> bb541__0_11707 [label="unwind"];
    bb379__0_11707 -> bb380__0_11707 [label=""];
    bb380__0_11707 -> bb381__0_11707 [label="return"];
    bb380__0_11707 -> bb541__0_11707 [label="unwind"];
    bb381__0_11707 -> bb382__0_11707 [label="0"];
    bb381__0_11707 -> bb383__0_11707 [label="1"];
    bb381__0_11707 -> bb4__0_11707 [label="otherwise"];
    bb382__0_11707 -> bb385__0_11707 [label="return"];
    bb382__0_11707 -> bb541__0_11707 [label="unwind"];
    bb383__0_11707 -> bb384__0_11707 [label="return"];
    bb383__0_11707 -> bb541__0_11707 [label="unwind"];
    bb384__0_11707 -> bb488__0_11707 [label=""];
    bb385__0_11707 -> bb386__0_11707 [label="return"];
    bb385__0_11707 -> bb541__0_11707 [label="unwind"];
    bb386__0_11707 -> bb387__0_11707 [label="success"];
    bb386__0_11707 -> bb541__0_11707 [label="unwind"];
    bb387__0_11707 -> bb388__0_11707 [label="return"];
    bb387__0_11707 -> bb541__0_11707 [label="unwind"];
    bb388__0_11707 -> bb389__0_11707 [label="return"];
    bb388__0_11707 -> bb541__0_11707 [label="unwind"];
    bb389__0_11707 -> bb390__0_11707 [label="return"];
    bb389__0_11707 -> bb541__0_11707 [label="unwind"];
    bb390__0_11707 -> bb391__0_11707 [label="0"];
    bb390__0_11707 -> bb392__0_11707 [label="1"];
    bb390__0_11707 -> bb4__0_11707 [label="otherwise"];
    bb391__0_11707 -> bb394__0_11707 [label="return"];
    bb391__0_11707 -> bb541__0_11707 [label="unwind"];
    bb392__0_11707 -> bb393__0_11707 [label="return"];
    bb392__0_11707 -> bb541__0_11707 [label="unwind"];
    bb393__0_11707 -> bb487__0_11707 [label=""];
    bb394__0_11707 -> bb396__0_11707 [label="0"];
    bb394__0_11707 -> bb395__0_11707 [label="otherwise"];
    bb395__0_11707 -> bb404__0_11707 [label=""];
    bb396__0_11707 -> bb397__0_11707 [label="return"];
    bb396__0_11707 -> bb541__0_11707 [label="unwind"];
    bb397__0_11707 -> bb398__0_11707 [label="return"];
    bb397__0_11707 -> bb541__0_11707 [label="unwind"];
    bb398__0_11707 -> bb399__0_11707 [label="return"];
    bb398__0_11707 -> bb541__0_11707 [label="unwind"];
    bb399__0_11707 -> bb400__0_11707 [label="return"];
    bb399__0_11707 -> bb528__0_11707 [label="unwind"];
    bb400__0_11707 -> bb401__0_11707 [label="return"];
    bb400__0_11707 -> bb528__0_11707 [label="unwind"];
    bb401__0_11707 -> bb402__0_11707 [label="return"];
    bb401__0_11707 -> bb541__0_11707 [label="unwind"];
    bb402__0_11707 -> bb403__0_11707 [label="return"];
    bb402__0_11707 -> bb541__0_11707 [label="unwind"];
    bb403__0_11707 -> bb404__0_11707 [label=""];
    bb404__0_11707 -> bb405__0_11707 [label="return"];
    bb404__0_11707 -> bb541__0_11707 [label="unwind"];
    bb405__0_11707 -> bb406__0_11707 [label="0"];
    bb405__0_11707 -> bb407__0_11707 [label="1"];
    bb405__0_11707 -> bb4__0_11707 [label="otherwise"];
    bb406__0_11707 -> bb409__0_11707 [label="return"];
    bb406__0_11707 -> bb541__0_11707 [label="unwind"];
    bb407__0_11707 -> bb408__0_11707 [label="return"];
    bb407__0_11707 -> bb541__0_11707 [label="unwind"];
    bb408__0_11707 -> bb487__0_11707 [label=""];
    bb409__0_11707 -> bb410__0_11707 [label="return"];
    bb409__0_11707 -> bb541__0_11707 [label="unwind"];
    bb410__0_11707 -> bb411__0_11707 [label="0"];
    bb410__0_11707 -> bb412__0_11707 [label="1"];
    bb410__0_11707 -> bb4__0_11707 [label="otherwise"];
    bb411__0_11707 -> bb414__0_11707 [label="return"];
    bb411__0_11707 -> bb527__0_11707 [label="unwind"];
    bb412__0_11707 -> bb413__0_11707 [label="return"];
    bb412__0_11707 -> bb556__0_11707 [label="unwind"];
    bb413__0_11707 -> bb486__0_11707 [label=""];
    bb414__0_11707 -> bb415__0_11707 [label="return"];
    bb414__0_11707 -> bb527__0_11707 [label="unwind"];
    bb415__0_11707 -> bb417__0_11707 [label="0"];
    bb415__0_11707 -> bb416__0_11707 [label="otherwise"];
    bb416__0_11707 -> bb431__0_11707 [label=""];
    bb417__0_11707 -> bb418__0_11707 [label="return"];
    bb417__0_11707 -> bb527__0_11707 [label="unwind"];
    bb418__0_11707 -> bb419__0_11707 [label="return"];
    bb418__0_11707 -> bb527__0_11707 [label="unwind"];
    bb419__0_11707 -> bb420__0_11707 [label="return"];
    bb419__0_11707 -> bb527__0_11707 [label="unwind"];
    bb420__0_11707 -> bb421__0_11707 [label="return"];
    bb420__0_11707 -> bb526__0_11707 [label="unwind"];
    bb421__0_11707 -> bb422__0_11707 [label="return"];
    bb421__0_11707 -> bb526__0_11707 [label="unwind"];
    bb422__0_11707 -> bb423__0_11707 [label="return"];
    bb422__0_11707 -> bb527__0_11707 [label="unwind"];
    bb423__0_11707 -> bb424__0_11707 [label="return"];
    bb423__0_11707 -> bb527__0_11707 [label="unwind"];
    bb424__0_11707 -> bb425__0_11707 [label="return"];
    bb424__0_11707 -> bb527__0_11707 [label="unwind"];
    bb425__0_11707 -> bb426__0_11707 [label="return"];
    bb425__0_11707 -> bb527__0_11707 [label="unwind"];
    bb426__0_11707 -> bb427__0_11707 [label="return"];
    bb426__0_11707 -> bb527__0_11707 [label="unwind"];
    bb427__0_11707 -> bb428__0_11707 [label="return"];
    bb427__0_11707 -> bb525__0_11707 [label="unwind"];
    bb428__0_11707 -> bb429__0_11707 [label="return"];
    bb428__0_11707 -> bb525__0_11707 [label="unwind"];
    bb429__0_11707 -> bb430__0_11707 [label="return"];
    bb429__0_11707 -> bb527__0_11707 [label="unwind"];
    bb430__0_11707 -> bb431__0_11707 [label=""];
    bb431__0_11707 -> bb432__0_11707 [label="return"];
    bb431__0_11707 -> bb527__0_11707 [label="unwind"];
    bb432__0_11707 -> bb433__0_11707 [label="0"];
    bb432__0_11707 -> bb434__0_11707 [label="1"];
    bb432__0_11707 -> bb4__0_11707 [label="otherwise"];
    bb433__0_11707 -> bb436__0_11707 [label="return"];
    bb433__0_11707 -> bb527__0_11707 [label="unwind"];
    bb434__0_11707 -> bb435__0_11707 [label="return"];
    bb434__0_11707 -> bb527__0_11707 [label="unwind"];
    bb435__0_11707 -> bb485__0_11707 [label=""];
    bb436__0_11707 -> bb437__0_11707 [label="return"];
    bb436__0_11707 -> bb527__0_11707 [label="unwind"];
    bb437__0_11707 -> bb438__0_11707 [label="return"];
    bb437__0_11707 -> bb527__0_11707 [label="unwind"];
    bb438__0_11707 -> bb439__0_11707 [label="return"];
    bb438__0_11707 -> bb527__0_11707 [label="unwind"];
    bb439__0_11707 -> bb440__0_11707 [label="return"];
    bb439__0_11707 -> bb527__0_11707 [label="unwind"];
    bb440__0_11707 -> bb441__0_11707 [label="return"];
    bb440__0_11707 -> bb527__0_11707 [label="unwind"];
    bb441__0_11707 -> bb442__0_11707 [label="return"];
    bb441__0_11707 -> bb527__0_11707 [label="unwind"];
    bb442__0_11707 -> bb443__0_11707 [label="return"];
    bb442__0_11707 -> bb527__0_11707 [label="unwind"];
    bb443__0_11707 -> bb444__0_11707 [label="return"];
    bb443__0_11707 -> bb527__0_11707 [label="unwind"];
    bb444__0_11707 -> bb445__0_11707 [label="return"];
    bb444__0_11707 -> bb527__0_11707 [label="unwind"];
    bb445__0_11707 -> bb446__0_11707 [label="return"];
    bb445__0_11707 -> bb527__0_11707 [label="unwind"];
    bb446__0_11707 -> bb447__0_11707 [label="return"];
    bb446__0_11707 -> bb527__0_11707 [label="unwind"];
    bb447__0_11707 -> bb448__0_11707 [label="return"];
    bb447__0_11707 -> bb527__0_11707 [label="unwind"];
    bb448__0_11707 -> bb449__0_11707 [label="return"];
    bb448__0_11707 -> bb527__0_11707 [label="unwind"];
    bb449__0_11707 -> bb450__0_11707 [label="0"];
    bb449__0_11707 -> bb451__0_11707 [label="1"];
    bb449__0_11707 -> bb4__0_11707 [label="otherwise"];
    bb450__0_11707 -> bb453__0_11707 [label="return"];
    bb450__0_11707 -> bb527__0_11707 [label="unwind"];
    bb451__0_11707 -> bb452__0_11707 [label="return"];
    bb451__0_11707 -> bb527__0_11707 [label="unwind"];
    bb452__0_11707 -> bb484__0_11707 [label=""];
    bb453__0_11707 -> bb454__0_11707 [label="return"];
    bb453__0_11707 -> bb527__0_11707 [label="unwind"];
    bb454__0_11707 -> bb455__0_11707 [label="return"];
    bb454__0_11707 -> bb527__0_11707 [label="unwind"];
    bb455__0_11707 -> bb456__0_11707 [label="return"];
    bb455__0_11707 -> bb527__0_11707 [label="unwind"];
    bb456__0_11707 -> bb457__0_11707 [label="return"];
    bb456__0_11707 -> bb527__0_11707 [label="unwind"];
    bb457__0_11707 -> bb458__0_11707 [label="return"];
    bb457__0_11707 -> bb527__0_11707 [label="unwind"];
    bb458__0_11707 -> bb459__0_11707 [label="return"];
    bb458__0_11707 -> bb527__0_11707 [label="unwind"];
    bb459__0_11707 -> bb460__0_11707 [label="return"];
    bb459__0_11707 -> bb527__0_11707 [label="unwind"];
    bb460__0_11707 -> bb461__0_11707 [label="return"];
    bb460__0_11707 -> bb527__0_11707 [label="unwind"];
    bb461__0_11707 -> bb462__0_11707 [label="return"];
    bb461__0_11707 -> bb527__0_11707 [label="unwind"];
    bb462__0_11707 -> bb463__0_11707 [label="0"];
    bb462__0_11707 -> bb464__0_11707 [label="1"];
    bb462__0_11707 -> bb4__0_11707 [label="otherwise"];
    bb463__0_11707 -> bb466__0_11707 [label="return"];
    bb463__0_11707 -> bb527__0_11707 [label="unwind"];
    bb464__0_11707 -> bb465__0_11707 [label="return"];
    bb464__0_11707 -> bb527__0_11707 [label="unwind"];
    bb465__0_11707 -> bb483__0_11707 [label=""];
    bb466__0_11707 -> bb467__0_11707 [label="return"];
    bb466__0_11707 -> bb527__0_11707 [label="unwind"];
    bb467__0_11707 -> bb468__0_11707 [label="return"];
    bb467__0_11707 -> bb527__0_11707 [label="unwind"];
    bb468__0_11707 -> bb469__0_11707 [label="return"];
    bb468__0_11707 -> bb527__0_11707 [label="unwind"];
    bb469__0_11707 -> bb470__0_11707 [label="return"];
    bb469__0_11707 -> bb527__0_11707 [label="unwind"];
    bb470__0_11707 -> bb471__0_11707 [label="return"];
    bb470__0_11707 -> bb527__0_11707 [label="unwind"];
    bb471__0_11707 -> bb472__0_11707 [label="return"];
    bb471__0_11707 -> bb527__0_11707 [label="unwind"];
    bb472__0_11707 -> bb473__0_11707 [label="return"];
    bb472__0_11707 -> bb527__0_11707 [label="unwind"];
    bb473__0_11707 -> bb474__0_11707 [label="0"];
    bb473__0_11707 -> bb475__0_11707 [label="1"];
    bb473__0_11707 -> bb4__0_11707 [label="otherwise"];
    bb474__0_11707 -> bb477__0_11707 [label="return"];
    bb474__0_11707 -> bb541__0_11707 [label="unwind"];
    bb475__0_11707 -> bb476__0_11707 [label="return"];
    bb475__0_11707 -> bb527__0_11707 [label="unwind"];
    bb476__0_11707 -> bb483__0_11707 [label=""];
    bb477__0_11707 -> bb478__0_11707 [label="return"];
    bb477__0_11707 -> bb542__0_11707 [label="unwind"];
    bb478__0_11707 -> bb479__0_11707 [label="return"];
    bb478__0_11707 -> bb543__0_11707 [label="unwind"];
    bb479__0_11707 -> bb480__0_11707 [label="return"];
    bb479__0_11707 -> bb549__0_11707 [label="unwind"];
    bb480__0_11707 -> bb481__0_11707 [label="return"];
    bb480__0_11707 -> bb550__0_11707 [label="unwind"];
    bb481__0_11707 -> bb482__0_11707 [label="return"];
    bb481__0_11707 -> bb551__0_11707 [label="unwind"];
    bb482__0_11707 -> bb524__0_11707 [label=""];
    bb483__0_11707 -> bb484__0_11707 [label=""];
    bb484__0_11707 -> bb485__0_11707 [label=""];
    bb485__0_11707 -> bb486__0_11707 [label="return"];
    bb485__0_11707 -> bb541__0_11707 [label="unwind"];
    bb486__0_11707 -> bb487__0_11707 [label=""];
    bb487__0_11707 -> bb488__0_11707 [label=""];
    bb488__0_11707 -> bb494__0_11707 [label=""];
    bb489__0_11707 -> bb490__0_11707 [label=""];
    bb490__0_11707 -> bb491__0_11707 [label=""];
    bb491__0_11707 -> bb492__0_11707 [label=""];
    bb492__0_11707 -> bb493__0_11707 [label="return"];
    bb492__0_11707 -> bb541__0_11707 [label="unwind"];
    bb493__0_11707 -> bb494__0_11707 [label=""];
    bb494__0_11707 -> bb495__0_11707 [label=""];
    bb495__0_11707 -> bb496__0_11707 [label=""];
    bb496__0_11707 -> bb499__0_11707 [label=""];
    bb497__0_11707 -> bb498__0_11707 [label=""];
    bb498__0_11707 -> bb499__0_11707 [label=""];
    bb499__0_11707 -> bb501__0_11707 [label=""];
    bb500__0_11707 -> bb501__0_11707 [label=""];
    bb501__0_11707 -> bb512__0_11707 [label=""];
    bb502__0_11707 -> bb506__0_11707 [label=""];
    bb503__0_11707 -> bb504__0_11707 [label=""];
    bb504__0_11707 -> bb505__0_11707 [label=""];
    bb505__0_11707 -> bb506__0_11707 [label=""];
    bb506__0_11707 -> bb512__0_11707 [label=""];
    bb507__0_11707 -> bb508__0_11707 [label=""];
    bb508__0_11707 -> bb510__0_11707 [label=""];
    bb509__0_11707 -> bb510__0_11707 [label=""];
    bb510__0_11707 -> bb511__0_11707 [label="return"];
    bb510__0_11707 -> bb541__0_11707 [label="unwind"];
    bb511__0_11707 -> bb512__0_11707 [label=""];
    bb512__0_11707 -> bb513__0_11707 [label=""];
    bb513__0_11707 -> bb514__0_11707 [label="return"];
    bb513__0_11707 -> bb542__0_11707 [label="unwind"];
    bb514__0_11707 -> bb515__0_11707 [label="return"];
    bb514__0_11707 -> bb543__0_11707 [label="unwind"];
    bb515__0_11707 -> bb516__0_11707 [label="return"];
    bb515__0_11707 -> bb549__0_11707 [label="unwind"];
    bb516__0_11707 -> bb519__0_11707 [label=""];
    bb517__0_11707 -> bb518__0_11707 [label="return"];
    bb517__0_11707 -> bb549__0_11707 [label="unwind"];
    bb518__0_11707 -> bb519__0_11707 [label=""];
    bb519__0_11707 -> bb520__0_11707 [label=""];
    bb520__0_11707 -> bb521__0_11707 [label="return"];
    bb520__0_11707 -> bb550__0_11707 [label="unwind"];
    bb521__0_11707 -> bb522__0_11707 [label="return"];
    bb521__0_11707 -> bb551__0_11707 [label="unwind"];
    bb522__0_11707 -> bb523__0_11707 [label=""];
    bb523__0_11707 -> bb524__0_11707 [label=""];
    bb525__0_11707 -> bb527__0_11707 [label="return"];
    bb526__0_11707 -> bb527__0_11707 [label="return"];
    bb527__0_11707 -> bb541__0_11707 [label="return"];
    bb528__0_11707 -> bb541__0_11707 [label="return"];
    bb529__0_11707 -> bb541__0_11707 [label="return"];
    bb530__0_11707 -> bb541__0_11707 [label="return"];
    bb531__0_11707 -> bb541__0_11707 [label="return"];
    bb532__0_11707 -> bb541__0_11707 [label="return"];
    bb533__0_11707 -> bb541__0_11707 [label="return"];
    bb534__0_11707 -> bb541__0_11707 [label="return"];
    bb535__0_11707 -> bb537__0_11707 [label="return"];
    bb536__0_11707 -> bb537__0_11707 [label="return"];
    bb537__0_11707 -> bb541__0_11707 [label="return"];
    bb538__0_11707 -> bb559__0_11707 [label="return"];
    bb539__0_11707 -> bb560__0_11707 [label="return"];
    bb540__0_11707 -> bb541__0_11707 [label="return"];
    bb541__0_11707 -> bb542__0_11707 [label="return"];
    bb542__0_11707 -> bb543__0_11707 [label="return"];
    bb543__0_11707 -> bb549__0_11707 [label="return"];
    bb544__0_11707 -> bb545__0_11707 [label="return"];
    bb545__0_11707 -> bb549__0_11707 [label="return"];
    bb546__0_11707 -> bb549__0_11707 [label="return"];
    bb547__0_11707 -> bb549__0_11707 [label="return"];
    bb548__0_11707 -> bb549__0_11707 [label="return"];
    bb549__0_11707 -> bb550__0_11707 [label="return"];
    bb550__0_11707 -> bb551__0_11707 [label="return"];
    bb552__0_11707 -> bb108__0_11707 [label="return"];
    bb552__0_11707 -> bb541__0_11707 [label="unwind"];
    bb553__0_11707 -> bb120__0_11707 [label="return"];
    bb553__0_11707 -> bb541__0_11707 [label="unwind"];
    bb554__0_11707 -> bb513__0_11707 [label=""];
    bb555__0_11707 -> bb513__0_11707 [label=""];
    bb556__0_11707 -> bb541__0_11707 [label=""];
    bb557__0_11707 -> bb541__0_11707 [label=""];
    bb558__0_11707 -> bb541__0_11707 [label=""];
    bb559__0_11707 -> bb541__0_11707 [label=""];
    bb560__0_11707 -> bb541__0_11707 [label=""];
    bb561__0_11707 -> bb544__0_11707 [label=""];
    bb562__0_11707 -> bb549__0_11707 [label=""];
    bb563__0_11707 -> bb550__0_11707 [label=""];
    bb564__0_11707 -> bb551__0_11707 [label=""];
    bb565__0_11707 -> bb551__0_11707 [label=""];
    bb566__0_11707 -> bb551__0_11707 [label=""];
}
