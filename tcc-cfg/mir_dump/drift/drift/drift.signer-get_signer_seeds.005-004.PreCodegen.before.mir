// MIR for `get_signer_seeds` before PreCodegen

fn get_signer_seeds(_1: &u8) -> [&[u8]; 2] {
    debug nonce => _1;
    let mut _0: [&[u8]; 2];
    let mut _2: &[u8];
    let _3: &[u8];
    let mut _4: &[u8; 12];
    let _5: &[u8; 12];
    let mut _6: &[u8];
    let _7: &[u8];
    let mut _8: &u8;

    bb0: {
        StorageLive(_2);
        StorageLive(_3);
        StorageLive(_4);
        StorageLive(_5);
        _5 = const b"drift_signer";
        _4 = &(*_5);
        _3 = <[u8; 12] as AsRef<[u8]>>::as_ref(move _4) -> [return: bb1, unwind continue];
    }

    bb1: {
        _2 = &(*_3);
        StorageDead(_4);
        StorageLive(_6);
        StorageLive(_7);
        StorageLive(_8);
        _8 = &(*_1);
        _7 = bytes_of::<u8>(move _8) -> [return: bb2, unwind continue];
    }

    bb2: {
        _6 = &(*_7);
        StorageDead(_8);
        _0 = [move _2, move _6];
        StorageDead(_6);
        StorageDead(_2);
        StorageDead(_7);
        StorageDead(_5);
        StorageDead(_3);
        return;
    }
}

alloc319 (size: 12, align: 1) {
    64 72 69 66 74 5f 73 69 67 6e 65 72             â”‚ drift_signer
}
