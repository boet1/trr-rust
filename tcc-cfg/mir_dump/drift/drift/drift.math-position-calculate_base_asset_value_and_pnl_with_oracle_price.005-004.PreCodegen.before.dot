digraph Mir_0_2665 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_base_asset_value_and_pnl_with_oracle_price(_1: &amp;ReErased state::user::PerpPosition, _2: i64) -&gt; std::result::Result&lt;(u128, i128), error::ErrorCode&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: bool;<br align="left"/>let mut _5: i64;<br align="left"/>let mut _6: !;<br align="left"/>let mut _7: (u128, i128);<br align="left"/>let mut _8: i128;<br align="left"/>let mut _9: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _10: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _11: i64;<br align="left"/>let mut _12: isize;<br align="left"/>let _13: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _14: !;<br align="left"/>let mut _15: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _16: i128;<br align="left"/>let _17: i64;<br align="left"/>let mut _18: bool;<br align="left"/>let mut _19: i64;<br align="left"/>let mut _20: i64;<br align="left"/>let _21: i128;<br align="left"/>let mut _22: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _23: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _24: i128;<br align="left"/>let mut _25: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _26: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _27: i128;<br align="left"/>let mut _28: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _29: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _30: i64;<br align="left"/>let mut _31: isize;<br align="left"/>let _32: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _33: !;<br align="left"/>let mut _34: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _35: i128;<br align="left"/>let mut _36: i128;<br align="left"/>let mut _37: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _38: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _39: i64;<br align="left"/>let mut _40: isize;<br align="left"/>let _41: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _42: !;<br align="left"/>let mut _43: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _44: i128;<br align="left"/>let mut _45: isize;<br align="left"/>let _46: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _47: !;<br align="left"/>let mut _48: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _49: i128;<br align="left"/>let mut _50: isize;<br align="left"/>let _51: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _52: !;<br align="left"/>let mut _53: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _54: i128;<br align="left"/>let _55: i128;<br align="left"/>let mut _56: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _57: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _58: i128;<br align="left"/>let mut _59: i128;<br align="left"/>let mut _60: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _61: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _62: i64;<br align="left"/>let mut _63: isize;<br align="left"/>let _64: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _65: !;<br align="left"/>let mut _66: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _67: i128;<br align="left"/>let mut _68: isize;<br align="left"/>let _69: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _70: !;<br align="left"/>let mut _71: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _72: i128;<br align="left"/>let mut _73: (u128, i128);<br align="left"/>let mut _74: u128;<br align="left"/>let mut _75: i128;<br align="left"/>let mut _76: i128;<br align="left"/>debug market_position =&gt; _1;<br align="left"/>debug oracle_price =&gt; _2;<br align="left"/>debug residual =&gt; _13;<br align="left"/>debug val =&gt; _16;<br align="left"/>debug oracle_price =&gt; _17;<br align="left"/>debug base_asset_value =&gt; _21;<br align="left"/>debug residual =&gt; _32;<br align="left"/>debug val =&gt; _35;<br align="left"/>debug residual =&gt; _41;<br align="left"/>debug val =&gt; _44;<br align="left"/>debug residual =&gt; _46;<br align="left"/>debug val =&gt; _49;<br align="left"/>debug residual =&gt; _51;<br align="left"/>debug val =&gt; _54;<br align="left"/>debug pnl =&gt; _55;<br align="left"/>debug residual =&gt; _64;<br align="left"/>debug val =&gt; _67;<br align="left"/>debug residual =&gt; _69;<br align="left"/>debug val =&gt; _72;<br align="left"/>>;
    bb0__0_2665 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = ((*_1).1: i64)<br/>_4 = Eq(move _5, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _4)</td></tr></table>>];
    bb1__0_2665 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = ((*_1).2: i64)<br/></td></tr><tr><td align="left">_10 = &lt;i64 as Cast&gt;::cast::&lt;i128&gt;(move _11)</td></tr></table>>];
    bb2__0_2665 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/></td></tr><tr><td align="left">_9 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _10)</td></tr></table>>];
    bb3__0_2665 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>_12 = discriminant(_9)<br/></td></tr><tr><td align="left">switchInt(move _12)</td></tr></table>>];
    bb4__0_2665 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_16)<br/>_16 = ((_9 as Continue).0: i128)<br/>_8 = _16<br/>StorageDead(_16)<br/>_7 = (const 0_u128, move _8)<br/>StorageDead(_8)<br/>_0 = std::result::Result::&lt;(u128, i128), error::ErrorCode&gt;::Ok(move _7)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb5__0_2665 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_2665 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = ((_9 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_15)<br/>_15 = _13<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, i128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _15)</td></tr></table>>];
    bb7__0_2665 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_13)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_2665 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_3 = const ()<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_19 = _2<br/>_18 = Gt(move _19, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _18)</td></tr></table>>];
    bb9__0_2665 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageLive(_20)<br/>_20 = _2<br/></td></tr><tr><td align="left">_17 = core::num::&lt;impl i64&gt;::abs(move _20)</td></tr></table>>];
    bb10__0_2665 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>_17 = const 0_i64<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb11__0_2665 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_2665 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>_30 = ((*_1).1: i64)<br/></td></tr><tr><td align="left">_29 = &lt;i64 as Cast&gt;::cast::&lt;i128&gt;(move _30)</td></tr></table>>];
    bb13__0_2665 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/></td></tr><tr><td align="left">_28 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _29)</td></tr></table>>];
    bb14__0_2665 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>_31 = discriminant(_28)<br/></td></tr><tr><td align="left">switchInt(move _31)</td></tr></table>>];
    bb15__0_2665 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = ((_28 as Continue).0: i128)<br/>_27 = _35<br/>StorageDead(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>_39 = _17<br/></td></tr><tr><td align="left">_38 = &lt;i64 as Cast&gt;::cast::&lt;i128&gt;(move _39)</td></tr></table>>];
    bb16__0_2665 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_32)<br/>_32 = ((_28 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_34)<br/>_34 = _32<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, i128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _34)</td></tr></table>>];
    bb17__0_2665 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_32)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_2665 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/></td></tr><tr><td align="left">_37 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _38)</td></tr></table>>];
    bb19__0_2665 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>_40 = discriminant(_37)<br/></td></tr><tr><td align="left">switchInt(move _40)</td></tr></table>>];
    bb20__0_2665 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_44)<br/>_44 = ((_37 as Continue).0: i128)<br/>_36 = _44<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">_26 = &lt;i128 as SafeMath&gt;::safe_mul(move _27, move _36)</td></tr></table>>];
    bb21__0_2665 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_41)<br/>_41 = ((_37 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_43)<br/>_43 = _41<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, i128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _43)</td></tr></table>>];
    bb22__0_2665 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_41)<br/>StorageDead(_36)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_2665 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">_25 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _26)</td></tr></table>>];
    bb24__0_2665 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>_45 = discriminant(_25)<br/></td></tr><tr><td align="left">switchInt(move _45)</td></tr></table>>];
    bb25__0_2665 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_49)<br/>_49 = ((_25 as Continue).0: i128)<br/>_24 = _49<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">_23 = &lt;i128 as SafeMath&gt;::safe_div(move _24, const _)</td></tr></table>>];
    bb26__0_2665 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_46)<br/>_46 = ((_25 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_48)<br/>_48 = _46<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, i128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _48)</td></tr></table>>];
    bb27__0_2665 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_2665 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/></td></tr><tr><td align="left">_22 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _23)</td></tr></table>>];
    bb29__0_2665 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>_50 = discriminant(_22)<br/></td></tr><tr><td align="left">switchInt(move _50)</td></tr></table>>];
    bb30__0_2665 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_54)<br/>_54 = ((_22 as Continue).0: i128)<br/>_21 = _54<br/>StorageDead(_54)<br/>StorageDead(_37)<br/>StorageDead(_28)<br/>StorageDead(_25)<br/>StorageDead(_22)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>_58 = _21<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>_62 = ((*_1).2: i64)<br/></td></tr><tr><td align="left">_61 = &lt;i64 as Cast&gt;::cast::&lt;i128&gt;(move _62)</td></tr></table>>];
    bb31__0_2665 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_51)<br/>_51 = ((_22 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_53)<br/>_53 = _51<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, i128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _53)</td></tr></table>>];
    bb32__0_2665 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_2665 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/></td></tr><tr><td align="left">_60 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _61)</td></tr></table>>];
    bb34__0_2665 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>_63 = discriminant(_60)<br/></td></tr><tr><td align="left">switchInt(move _63)</td></tr></table>>];
    bb35__0_2665 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_67)<br/>_67 = ((_60 as Continue).0: i128)<br/>_59 = _67<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">_57 = &lt;i128 as SafeMath&gt;::safe_add(move _58, move _59)</td></tr></table>>];
    bb36__0_2665 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageLive(_64)<br/>_64 = ((_60 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_66)<br/>_66 = _64<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, i128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _66)</td></tr></table>>];
    bb37__0_2665 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageDead(_64)<br/>StorageDead(_59)<br/>StorageDead(_58)<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_2665 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">_56 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _57)</td></tr></table>>];
    bb39__0_2665 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>_68 = discriminant(_56)<br/></td></tr><tr><td align="left">switchInt(move _68)</td></tr></table>>];
    bb40__0_2665 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageLive(_72)<br/>_72 = ((_56 as Continue).0: i128)<br/>_55 = _72<br/>StorageDead(_72)<br/>StorageDead(_60)<br/>StorageDead(_56)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>_75 = _21<br/></td></tr><tr><td align="left">_74 = core::num::&lt;impl i128&gt;::unsigned_abs(move _75)</td></tr></table>>];
    bb41__0_2665 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageLive(_69)<br/>_69 = ((_56 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_71)<br/>_71 = _69<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, i128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _71)</td></tr></table>>];
    bb42__0_2665 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageDead(_69)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_2665 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageLive(_76)<br/>_76 = _55<br/>_73 = (move _74, move _76)<br/>StorageDead(_76)<br/>StorageDead(_74)<br/>_0 = std::result::Result::&lt;(u128, i128), error::ErrorCode&gt;::Ok(move _73)<br/>StorageDead(_73)<br/>StorageDead(_55)<br/>StorageDead(_21)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_2665 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageDead(_56)<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_2665 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_2665 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_2665 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_25)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_2665 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_2665 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_2665 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2665 -> bb8__0_2665 [label="0"];
    bb0__0_2665 -> bb1__0_2665 [label="otherwise"];
    bb1__0_2665 -> bb2__0_2665 [label="return"];
    bb2__0_2665 -> bb3__0_2665 [label="return"];
    bb3__0_2665 -> bb4__0_2665 [label="0"];
    bb3__0_2665 -> bb6__0_2665 [label="1"];
    bb3__0_2665 -> bb5__0_2665 [label="otherwise"];
    bb4__0_2665 -> bb49__0_2665 [label=""];
    bb6__0_2665 -> bb7__0_2665 [label="return"];
    bb7__0_2665 -> bb49__0_2665 [label=""];
    bb8__0_2665 -> bb10__0_2665 [label="0"];
    bb8__0_2665 -> bb9__0_2665 [label="otherwise"];
    bb9__0_2665 -> bb11__0_2665 [label="return"];
    bb10__0_2665 -> bb12__0_2665 [label=""];
    bb11__0_2665 -> bb12__0_2665 [label=""];
    bb12__0_2665 -> bb13__0_2665 [label="return"];
    bb13__0_2665 -> bb14__0_2665 [label="return"];
    bb14__0_2665 -> bb15__0_2665 [label="0"];
    bb14__0_2665 -> bb16__0_2665 [label="1"];
    bb14__0_2665 -> bb5__0_2665 [label="otherwise"];
    bb15__0_2665 -> bb18__0_2665 [label="return"];
    bb16__0_2665 -> bb17__0_2665 [label="return"];
    bb17__0_2665 -> bb47__0_2665 [label=""];
    bb18__0_2665 -> bb19__0_2665 [label="return"];
    bb19__0_2665 -> bb20__0_2665 [label="0"];
    bb19__0_2665 -> bb21__0_2665 [label="1"];
    bb19__0_2665 -> bb5__0_2665 [label="otherwise"];
    bb20__0_2665 -> bb23__0_2665 [label="return"];
    bb21__0_2665 -> bb22__0_2665 [label="return"];
    bb22__0_2665 -> bb45__0_2665 [label=""];
    bb23__0_2665 -> bb24__0_2665 [label="return"];
    bb24__0_2665 -> bb25__0_2665 [label="0"];
    bb24__0_2665 -> bb26__0_2665 [label="1"];
    bb24__0_2665 -> bb5__0_2665 [label="otherwise"];
    bb25__0_2665 -> bb28__0_2665 [label="return"];
    bb26__0_2665 -> bb27__0_2665 [label="return"];
    bb27__0_2665 -> bb45__0_2665 [label=""];
    bb28__0_2665 -> bb29__0_2665 [label="return"];
    bb29__0_2665 -> bb30__0_2665 [label="0"];
    bb29__0_2665 -> bb31__0_2665 [label="1"];
    bb29__0_2665 -> bb5__0_2665 [label="otherwise"];
    bb30__0_2665 -> bb33__0_2665 [label="return"];
    bb31__0_2665 -> bb32__0_2665 [label="return"];
    bb32__0_2665 -> bb46__0_2665 [label=""];
    bb33__0_2665 -> bb34__0_2665 [label="return"];
    bb34__0_2665 -> bb35__0_2665 [label="0"];
    bb34__0_2665 -> bb36__0_2665 [label="1"];
    bb34__0_2665 -> bb5__0_2665 [label="otherwise"];
    bb35__0_2665 -> bb38__0_2665 [label="return"];
    bb36__0_2665 -> bb37__0_2665 [label="return"];
    bb37__0_2665 -> bb44__0_2665 [label=""];
    bb38__0_2665 -> bb39__0_2665 [label="return"];
    bb39__0_2665 -> bb40__0_2665 [label="0"];
    bb39__0_2665 -> bb41__0_2665 [label="1"];
    bb39__0_2665 -> bb5__0_2665 [label="otherwise"];
    bb40__0_2665 -> bb43__0_2665 [label="return"];
    bb41__0_2665 -> bb42__0_2665 [label="return"];
    bb42__0_2665 -> bb44__0_2665 [label=""];
    bb43__0_2665 -> bb50__0_2665 [label=""];
    bb44__0_2665 -> bb48__0_2665 [label=""];
    bb45__0_2665 -> bb46__0_2665 [label=""];
    bb46__0_2665 -> bb47__0_2665 [label=""];
    bb47__0_2665 -> bb48__0_2665 [label=""];
    bb48__0_2665 -> bb50__0_2665 [label=""];
    bb49__0_2665 -> bb50__0_2665 [label=""];
}
