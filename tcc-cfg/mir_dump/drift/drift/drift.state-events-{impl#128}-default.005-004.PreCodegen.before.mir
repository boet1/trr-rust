// MIR for `state::events::<impl at programs/drift/src/state/events.rs:485:60: 485:67>::default` before PreCodegen

fn state::events::<impl at programs/drift/src/state/events.rs:485:60: 485:67>::default() -> LiquidatePerpPnlForDepositRecord {
    let mut _0: state::events::LiquidatePerpPnlForDepositRecord;
    let mut _1: u16;
    let mut _2: i64;
    let mut _3: u128;
    let mut _4: u16;
    let mut _5: i64;
    let mut _6: u128;

    bb0: {
        StorageLive(_1);
        _1 = <u16 as Default>::default() -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageLive(_2);
        _2 = <i64 as Default>::default() -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageLive(_3);
        _3 = <u128 as Default>::default() -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageLive(_4);
        _4 = <u16 as Default>::default() -> [return: bb4, unwind continue];
    }

    bb4: {
        StorageLive(_5);
        _5 = <i64 as Default>::default() -> [return: bb5, unwind continue];
    }

    bb5: {
        StorageLive(_6);
        _6 = <u128 as Default>::default() -> [return: bb6, unwind continue];
    }

    bb6: {
        _0 = LiquidatePerpPnlForDepositRecord { perp_market_index: move _1, market_oracle_price: move _2, pnl_transfer: move _3, asset_market_index: move _4, asset_price: move _5, asset_transfer: move _6 };
        StorageDead(_6);
        StorageDead(_5);
        StorageDead(_4);
        StorageDead(_3);
        StorageDead(_2);
        StorageDead(_1);
        return;
    }
}
