digraph Mir_0_3595 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn OracleMap::&lt;'a&gt;::contains(_1: &amp;ReErased state::oracle_map::OracleMap&lt;ReErased&gt;, _2: &amp;ReErased anchor_lang::prelude::Pubkey) -&gt; bool<br align="left"/>let mut _3: bool;<br align="left"/>let mut _4: &amp;ReErased std::collections::BTreeMap&lt;anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _5: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _6: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _7: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _8: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _9: anchor_lang::prelude::Pubkey;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug pubkey =&gt; _2;<br align="left"/>>;
    bb0__0_3595 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>_4 = &amp;((*_1).0: std::collections::BTreeMap&lt;anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;)<br/>StorageLive(_5)<br/>_5 = &amp;(*_2)<br/></td></tr><tr><td align="left">_3 = BTreeMap::&lt;anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;::contains_key::&lt;anchor_lang::prelude::Pubkey&gt;(move _4, move _5)</td></tr></table>>];
    bb1__0_3595 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">switchInt(move _3)</td></tr></table>>];
    bb2__0_3595 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageDead(_4)<br/>_0 = const true<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb3__0_3595 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageDead(_4)<br/>StorageLive(_6)<br/>_6 = &amp;_2<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/></td></tr><tr><td align="left">_9 = &lt;anchor_lang::prelude::Pubkey as Default&gt;::default()</td></tr></table>>];
    bb4__0_3595 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">_8 = &amp;_9<br/>_7 = &amp;_8<br/></td></tr><tr><td align="left">_0 = &lt;&amp;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _6, move _7)</td></tr></table>>];
    bb5__0_3595 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb6__0_3595 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_3595 -> bb1__0_3595 [label="return"];
    bb1__0_3595 -> bb3__0_3595 [label="0"];
    bb1__0_3595 -> bb2__0_3595 [label="otherwise"];
    bb2__0_3595 -> bb6__0_3595 [label=""];
    bb3__0_3595 -> bb4__0_3595 [label="return"];
    bb4__0_3595 -> bb5__0_3595 [label="return"];
    bb5__0_3595 -> bb6__0_3595 [label=""];
}
