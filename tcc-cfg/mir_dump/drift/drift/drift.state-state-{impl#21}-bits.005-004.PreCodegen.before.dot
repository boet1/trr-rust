digraph Mir_0_18149 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;state::state::ExchangeStatus as enumflags2::_internal::RawBitFlags&gt;::bits(_1: state::state::ExchangeStatus) -&gt; usize<br align="left"/>let _2: state::state::ExchangeStatus;<br align="left"/>let mut _3: isize;<br align="left"/>let mut _4: u8;<br align="left"/>let mut _5: bool;<br align="left"/>let mut _6: bool;<br align="left"/>let mut _7: bool;<br align="left"/>debug self =&gt; _1;<br align="left"/>>;
    bb0__0_18149 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>_2 = _1<br/>_3 = discriminant(_2)<br/>_4 = _3 as u8 (IntToInt)<br/>_5 = Ge(_4, const 1_u8)<br/>_6 = Le(_4, const 128_u8)<br/>_7 = BitAnd(move _5, move _6)<br/>assume(move _7)<br/>_0 = move _3 as usize (IntToInt)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
}
