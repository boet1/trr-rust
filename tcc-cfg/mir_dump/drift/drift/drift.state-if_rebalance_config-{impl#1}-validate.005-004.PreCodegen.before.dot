digraph Mir_0_3345 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn IfRebalanceConfig::validate(_1: &amp;ReErased state::if_rebalance_config::IfRebalanceConfig) -&gt; std::result::Result&lt;(), error::ErrorCode&gt;<br align="left"/>let _2: ();<br align="left"/>let mut _3: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _4: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _5: bool;<br align="left"/>let mut _6: u16;<br align="left"/>let mut _7: ();<br align="left"/>let _8: error::ErrorCode;<br align="left"/>let _9: ();<br align="left"/>let mut _10: &amp;ReErased str;<br align="left"/>let _11: &amp;ReErased str;<br align="left"/>let mut _12: &amp;ReErased std::string::String;<br align="left"/>let _13: &amp;ReErased std::string::String;<br align="left"/>let _14: std::string::String;<br align="left"/>let _15: std::string::String;<br align="left"/>let mut _16: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _17: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _18: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _19: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _20: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _21: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _22: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _23: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _24: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _25: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _26: &amp;ReErased error::ErrorCode;<br align="left"/>let _27: &amp;ReErased error::ErrorCode;<br align="left"/>let mut _28: error::ErrorCode;<br align="left"/>let mut _29: isize;<br align="left"/>let _30: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _31: !;<br align="left"/>let mut _32: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _33: ();<br align="left"/>let _34: ();<br align="left"/>let mut _35: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _36: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _37: bool;<br align="left"/>let mut _38: u16;<br align="left"/>let mut _39: u16;<br align="left"/>let mut _40: ();<br align="left"/>let _41: error::ErrorCode;<br align="left"/>let _42: ();<br align="left"/>let mut _43: &amp;ReErased str;<br align="left"/>let _44: &amp;ReErased str;<br align="left"/>let mut _45: &amp;ReErased std::string::String;<br align="left"/>let _46: &amp;ReErased std::string::String;<br align="left"/>let _47: std::string::String;<br align="left"/>let _48: std::string::String;<br align="left"/>let mut _49: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _50: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _51: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _52: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _53: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _54: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _55: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _56: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _57: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _58: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _59: &amp;ReErased error::ErrorCode;<br align="left"/>let _60: &amp;ReErased error::ErrorCode;<br align="left"/>let mut _61: error::ErrorCode;<br align="left"/>let mut _62: isize;<br align="left"/>let _63: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _64: !;<br align="left"/>let mut _65: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _66: ();<br align="left"/>let _67: ();<br align="left"/>let mut _68: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _69: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _70: bool;<br align="left"/>let mut _71: u64;<br align="left"/>let mut _72: u64;<br align="left"/>let mut _73: ();<br align="left"/>let _74: error::ErrorCode;<br align="left"/>let _75: ();<br align="left"/>let mut _76: &amp;ReErased str;<br align="left"/>let _77: &amp;ReErased str;<br align="left"/>let mut _78: &amp;ReErased std::string::String;<br align="left"/>let _79: &amp;ReErased std::string::String;<br align="left"/>let _80: std::string::String;<br align="left"/>let _81: std::string::String;<br align="left"/>let mut _82: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _83: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _84: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _85: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _86: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _87: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _88: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _89: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _90: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _91: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _92: &amp;ReErased error::ErrorCode;<br align="left"/>let _93: &amp;ReErased error::ErrorCode;<br align="left"/>let mut _94: error::ErrorCode;<br align="left"/>let mut _95: isize;<br align="left"/>let _96: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _97: !;<br align="left"/>let mut _98: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _99: ();<br align="left"/>let _100: ();<br align="left"/>let mut _101: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _102: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _103: bool;<br align="left"/>let mut _104: u64;<br align="left"/>let mut _105: u64;<br align="left"/>let mut _106: ();<br align="left"/>let _107: error::ErrorCode;<br align="left"/>let _108: ();<br align="left"/>let mut _109: &amp;ReErased str;<br align="left"/>let _110: &amp;ReErased str;<br align="left"/>let mut _111: &amp;ReErased std::string::String;<br align="left"/>let _112: &amp;ReErased std::string::String;<br align="left"/>let _113: std::string::String;<br align="left"/>let _114: std::string::String;<br align="left"/>let mut _115: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _116: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _117: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _118: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _119: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _120: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _121: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _122: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _123: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _124: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _125: &amp;ReErased error::ErrorCode;<br align="left"/>let _126: &amp;ReErased error::ErrorCode;<br align="left"/>let mut _127: error::ErrorCode;<br align="left"/>let mut _128: isize;<br align="left"/>let _129: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _130: !;<br align="left"/>let mut _131: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _132: ();<br align="left"/>let mut _133: ();<br align="left"/>let mut _134: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _135: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _136: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _137: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>debug self =&gt; _1;<br align="left"/>debug error_code =&gt; _8;<br align="left"/>debug res =&gt; _15;<br align="left"/>debug residual =&gt; _30;<br align="left"/>debug val =&gt; _33;<br align="left"/>debug error_code =&gt; _41;<br align="left"/>debug res =&gt; _48;<br align="left"/>debug residual =&gt; _63;<br align="left"/>debug val =&gt; _66;<br align="left"/>debug error_code =&gt; _74;<br align="left"/>debug res =&gt; _81;<br align="left"/>debug residual =&gt; _96;<br align="left"/>debug val =&gt; _99;<br align="left"/>debug error_code =&gt; _107;<br align="left"/>debug res =&gt; _114;<br align="left"/>debug residual =&gt; _129;<br align="left"/>debug val =&gt; _132;<br align="left"/>>;
    bb0__0_3345 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = ((*_1).11: u16)<br/>_5 = Eq(move _6, const 0_u16)<br/></td></tr><tr><td align="left">switchInt(move _5)</td></tr></table>>];
    bb1__0_3345 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageLive(_7)<br/>_7 = ()<br/>_4 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _7)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb2__0_3345 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageLive(_8)<br/>_8 = error::ErrorCode::InvalidIfRebalanceConfig<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_137 = const _<br/>_19 = &amp;(*_137)<br/>_18 = &amp;(*_19)<br/>_17 = move _18 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_18)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_27 = &amp;_8<br/>_26 = &amp;(*_27)<br/></td></tr><tr><td align="left">_25 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _26)</td></tr></table>>];
    bb3__0_3345 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>_24 = [move _25]<br/>StorageDead(_25)<br/>_23 = &amp;_24<br/>_22 = &amp;(*_23)<br/>_21 = move _22 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">_16 = Arguments::&lt;'_&gt;::new_v1(move _17, move _21)</td></tr></table>>];
    bb4__0_3345 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">_15 = format(move _16)</td></tr></table>>];
    bb5__0_3345 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_27)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/>StorageDead(_19)<br/>_14 = move _15<br/>StorageDead(_15)<br/>_13 = &amp;_14<br/>_12 = &amp;(*_13)<br/></td></tr><tr><td align="left">_11 = &lt;String as Deref&gt;::deref(move _12)</td></tr></table>>];
    bb6__0_3345 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">_10 = &amp;(*_11)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">_9 = solana_program::log::sol_log(move _10)</td></tr></table>>];
    bb7__0_3345 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/></td></tr><tr><td align="left">drop(_14)</td></tr></table>>];
    bb8__0_3345 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_11)<br/>StorageDead(_9)<br/>StorageLive(_28)<br/>_28 = _8<br/>_4 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _28)<br/>StorageDead(_28)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_3345 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">_3 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _4)</td></tr></table>>];
    bb10__0_3345 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>_29 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _29)</td></tr></table>>];
    bb11__0_3345 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_33)<br/>_33 = ((_3 as Continue).0: ())<br/>_2 = _33<br/>StorageDead(_33)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>_38 = ((*_1).10: u16)<br/>StorageLive(_39)<br/>_39 = ((*_1).11: u16)<br/>_37 = Ne(move _38, move _39)<br/></td></tr><tr><td align="left">switchInt(move _37)</td></tr></table>>];
    bb12__0_3345 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb13__0_3345 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_30)<br/>_30 = ((_3 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_32)<br/>_32 = _30<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _32)</td></tr></table>>];
    bb14__0_3345 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_30)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_3345 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_38)<br/>StorageLive(_40)<br/>_40 = ()<br/>_36 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _40)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_3345 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_38)<br/>StorageLive(_41)<br/>_41 = error::ErrorCode::InvalidIfRebalanceConfig<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>_136 = const _<br/>_52 = &amp;(*_136)<br/>_51 = &amp;(*_52)<br/>_50 = move _51 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_51)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>_60 = &amp;_41<br/>_59 = &amp;(*_60)<br/></td></tr><tr><td align="left">_58 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _59)</td></tr></table>>];
    bb17__0_3345 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>_57 = [move _58]<br/>StorageDead(_58)<br/>_56 = &amp;_57<br/>_55 = &amp;(*_56)<br/>_54 = move _55 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">_49 = Arguments::&lt;'_&gt;::new_v1(move _50, move _54)</td></tr></table>>];
    bb18__0_3345 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">_48 = format(move _49)</td></tr></table>>];
    bb19__0_3345 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_60)<br/>StorageDead(_57)<br/>StorageDead(_56)<br/>StorageDead(_52)<br/>_47 = move _48<br/>StorageDead(_48)<br/>_46 = &amp;_47<br/>_45 = &amp;(*_46)<br/></td></tr><tr><td align="left">_44 = &lt;String as Deref&gt;::deref(move _45)</td></tr></table>>];
    bb20__0_3345 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">_43 = &amp;(*_44)<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">_42 = solana_program::log::sol_log(move _43)</td></tr></table>>];
    bb21__0_3345 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/></td></tr><tr><td align="left">drop(_47)</td></tr></table>>];
    bb22__0_3345 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_46)<br/>StorageDead(_44)<br/>StorageDead(_42)<br/>StorageLive(_61)<br/>_61 = _41<br/>_36 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _61)<br/>StorageDead(_61)<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_3345 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/></td></tr><tr><td align="left">_35 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _36)</td></tr></table>>];
    bb24__0_3345 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>_62 = discriminant(_35)<br/></td></tr><tr><td align="left">switchInt(move _62)</td></tr></table>>];
    bb25__0_3345 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_66)<br/>_66 = ((_35 as Continue).0: ())<br/>_34 = _66<br/>StorageDead(_66)<br/>StorageDead(_35)<br/>StorageDead(_34)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>_71 = ((*_1).1: u64)<br/>StorageLive(_72)<br/>_72 = ((*_1).2: u64)<br/>_70 = Ge(move _71, move _72)<br/></td></tr><tr><td align="left">switchInt(move _70)</td></tr></table>>];
    bb26__0_3345 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_63)<br/>_63 = ((_35 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_65)<br/>_65 = _63<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _65)</td></tr></table>>];
    bb27__0_3345 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageDead(_63)<br/>StorageDead(_35)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_3345 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_71)<br/>StorageLive(_73)<br/>_73 = ()<br/>_69 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _73)<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_3345 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_71)<br/>StorageLive(_74)<br/>_74 = error::ErrorCode::InvalidIfRebalanceConfig<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>_135 = const _<br/>_85 = &amp;(*_135)<br/>_84 = &amp;(*_85)<br/>_83 = move _84 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_84)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>_93 = &amp;_74<br/>_92 = &amp;(*_93)<br/></td></tr><tr><td align="left">_91 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _92)</td></tr></table>>];
    bb30__0_3345 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>_90 = [move _91]<br/>StorageDead(_91)<br/>_89 = &amp;_90<br/>_88 = &amp;(*_89)<br/>_87 = move _88 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_88)<br/></td></tr><tr><td align="left">_82 = Arguments::&lt;'_&gt;::new_v1(move _83, move _87)</td></tr></table>>];
    bb31__0_3345 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>StorageDead(_83)<br/></td></tr><tr><td align="left">_81 = format(move _82)</td></tr></table>>];
    bb32__0_3345 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>StorageDead(_93)<br/>StorageDead(_90)<br/>StorageDead(_89)<br/>StorageDead(_85)<br/>_80 = move _81<br/>StorageDead(_81)<br/>_79 = &amp;_80<br/>_78 = &amp;(*_79)<br/></td></tr><tr><td align="left">_77 = &lt;String as Deref&gt;::deref(move _78)</td></tr></table>>];
    bb33__0_3345 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">_76 = &amp;(*_77)<br/>StorageDead(_78)<br/></td></tr><tr><td align="left">_75 = solana_program::log::sol_log(move _76)</td></tr></table>>];
    bb34__0_3345 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/></td></tr><tr><td align="left">drop(_80)</td></tr></table>>];
    bb35__0_3345 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>StorageDead(_79)<br/>StorageDead(_77)<br/>StorageDead(_75)<br/>StorageLive(_94)<br/>_94 = _74<br/>_69 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _94)<br/>StorageDead(_94)<br/>StorageDead(_74)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_3345 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/></td></tr><tr><td align="left">_68 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _69)</td></tr></table>>];
    bb37__0_3345 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>_95 = discriminant(_68)<br/></td></tr><tr><td align="left">switchInt(move _95)</td></tr></table>>];
    bb38__0_3345 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_99)<br/>_99 = ((_68 as Continue).0: ())<br/>_67 = _99<br/>StorageDead(_99)<br/>StorageDead(_68)<br/>StorageDead(_67)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>_104 = ((*_1).8: u64)<br/>StorageLive(_105)<br/>_105 = ((*_1).1: u64)<br/>_103 = Le(move _104, move _105)<br/></td></tr><tr><td align="left">switchInt(move _103)</td></tr></table>>];
    bb39__0_3345 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_96)<br/>_96 = ((_68 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_98)<br/>_98 = _96<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _98)</td></tr></table>>];
    bb40__0_3345 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>StorageDead(_96)<br/>StorageDead(_68)<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_3345 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/>StorageDead(_104)<br/>StorageLive(_106)<br/>_106 = ()<br/>_102 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _106)<br/>StorageDead(_106)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_3345 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/>StorageDead(_104)<br/>StorageLive(_107)<br/>_107 = error::ErrorCode::InvalidIfRebalanceConfig<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>_134 = const _<br/>_118 = &amp;(*_134)<br/>_117 = &amp;(*_118)<br/>_116 = move _117 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_117)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>_126 = &amp;_107<br/>_125 = &amp;(*_126)<br/></td></tr><tr><td align="left">_124 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _125)</td></tr></table>>];
    bb43__0_3345 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/>_123 = [move _124]<br/>StorageDead(_124)<br/>_122 = &amp;_123<br/>_121 = &amp;(*_122)<br/>_120 = move _121 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_121)<br/></td></tr><tr><td align="left">_115 = Arguments::&lt;'_&gt;::new_v1(move _116, move _120)</td></tr></table>>];
    bb44__0_3345 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/>StorageDead(_116)<br/></td></tr><tr><td align="left">_114 = format(move _115)</td></tr></table>>];
    bb45__0_3345 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_115)<br/>StorageDead(_126)<br/>StorageDead(_123)<br/>StorageDead(_122)<br/>StorageDead(_118)<br/>_113 = move _114<br/>StorageDead(_114)<br/>_112 = &amp;_113<br/>_111 = &amp;(*_112)<br/></td></tr><tr><td align="left">_110 = &lt;String as Deref&gt;::deref(move _111)</td></tr></table>>];
    bb46__0_3345 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">_109 = &amp;(*_110)<br/>StorageDead(_111)<br/></td></tr><tr><td align="left">_108 = solana_program::log::sol_log(move _109)</td></tr></table>>];
    bb47__0_3345 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/></td></tr><tr><td align="left">drop(_113)</td></tr></table>>];
    bb48__0_3345 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_113)<br/>StorageDead(_112)<br/>StorageDead(_110)<br/>StorageDead(_108)<br/>StorageLive(_127)<br/>_127 = _107<br/>_102 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _127)<br/>StorageDead(_127)<br/>StorageDead(_107)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_3345 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/></td></tr><tr><td align="left">_101 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _102)</td></tr></table>>];
    bb50__0_3345 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>_128 = discriminant(_101)<br/></td></tr><tr><td align="left">switchInt(move _128)</td></tr></table>>];
    bb51__0_3345 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageLive(_132)<br/>_132 = ((_101 as Continue).0: ())<br/>_100 = _132<br/>StorageDead(_132)<br/>StorageDead(_101)<br/>StorageDead(_100)<br/>StorageLive(_133)<br/>_133 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _133)<br/>StorageDead(_133)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb52__0_3345 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageLive(_129)<br/>_129 = ((_101 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_131)<br/>_131 = _129<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _131)</td></tr></table>>];
    bb53__0_3345 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_131)<br/>StorageDead(_129)<br/>StorageDead(_101)<br/>StorageDead(_100)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_3345 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left">return</td></tr></table>>];
    bb55__0_3345 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">55 (cleanup)</td></tr><tr><td align="left">drop(_113)</td></tr></table>>];
    bb56__0_3345 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">56 (cleanup)</td></tr><tr><td align="left">drop(_80)</td></tr></table>>];
    bb57__0_3345 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">57 (cleanup)</td></tr><tr><td align="left">drop(_47)</td></tr></table>>];
    bb58__0_3345 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">58 (cleanup)</td></tr><tr><td align="left">drop(_14)</td></tr></table>>];
    bb59__0_3345 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">59 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_3345 -> bb2__0_3345 [label="0"];
    bb0__0_3345 -> bb1__0_3345 [label="otherwise"];
    bb1__0_3345 -> bb9__0_3345 [label=""];
    bb2__0_3345 -> bb3__0_3345 [label="return"];
    bb3__0_3345 -> bb4__0_3345 [label="return"];
    bb4__0_3345 -> bb5__0_3345 [label="return"];
    bb5__0_3345 -> bb6__0_3345 [label="return"];
    bb5__0_3345 -> bb58__0_3345 [label="unwind"];
    bb6__0_3345 -> bb7__0_3345 [label="return"];
    bb6__0_3345 -> bb58__0_3345 [label="unwind"];
    bb7__0_3345 -> bb8__0_3345 [label="return"];
    bb7__0_3345 -> bb59__0_3345 [label="unwind"];
    bb8__0_3345 -> bb9__0_3345 [label=""];
    bb9__0_3345 -> bb10__0_3345 [label="return"];
    bb10__0_3345 -> bb11__0_3345 [label="0"];
    bb10__0_3345 -> bb13__0_3345 [label="1"];
    bb10__0_3345 -> bb12__0_3345 [label="otherwise"];
    bb11__0_3345 -> bb16__0_3345 [label="0"];
    bb11__0_3345 -> bb15__0_3345 [label="otherwise"];
    bb13__0_3345 -> bb14__0_3345 [label="return"];
    bb14__0_3345 -> bb54__0_3345 [label=""];
    bb15__0_3345 -> bb23__0_3345 [label=""];
    bb16__0_3345 -> bb17__0_3345 [label="return"];
    bb17__0_3345 -> bb18__0_3345 [label="return"];
    bb18__0_3345 -> bb19__0_3345 [label="return"];
    bb19__0_3345 -> bb20__0_3345 [label="return"];
    bb19__0_3345 -> bb57__0_3345 [label="unwind"];
    bb20__0_3345 -> bb21__0_3345 [label="return"];
    bb20__0_3345 -> bb57__0_3345 [label="unwind"];
    bb21__0_3345 -> bb22__0_3345 [label="return"];
    bb21__0_3345 -> bb59__0_3345 [label="unwind"];
    bb22__0_3345 -> bb23__0_3345 [label=""];
    bb23__0_3345 -> bb24__0_3345 [label="return"];
    bb24__0_3345 -> bb25__0_3345 [label="0"];
    bb24__0_3345 -> bb26__0_3345 [label="1"];
    bb24__0_3345 -> bb12__0_3345 [label="otherwise"];
    bb25__0_3345 -> bb29__0_3345 [label="0"];
    bb25__0_3345 -> bb28__0_3345 [label="otherwise"];
    bb26__0_3345 -> bb27__0_3345 [label="return"];
    bb27__0_3345 -> bb54__0_3345 [label=""];
    bb28__0_3345 -> bb36__0_3345 [label=""];
    bb29__0_3345 -> bb30__0_3345 [label="return"];
    bb30__0_3345 -> bb31__0_3345 [label="return"];
    bb31__0_3345 -> bb32__0_3345 [label="return"];
    bb32__0_3345 -> bb33__0_3345 [label="return"];
    bb32__0_3345 -> bb56__0_3345 [label="unwind"];
    bb33__0_3345 -> bb34__0_3345 [label="return"];
    bb33__0_3345 -> bb56__0_3345 [label="unwind"];
    bb34__0_3345 -> bb35__0_3345 [label="return"];
    bb34__0_3345 -> bb59__0_3345 [label="unwind"];
    bb35__0_3345 -> bb36__0_3345 [label=""];
    bb36__0_3345 -> bb37__0_3345 [label="return"];
    bb37__0_3345 -> bb38__0_3345 [label="0"];
    bb37__0_3345 -> bb39__0_3345 [label="1"];
    bb37__0_3345 -> bb12__0_3345 [label="otherwise"];
    bb38__0_3345 -> bb42__0_3345 [label="0"];
    bb38__0_3345 -> bb41__0_3345 [label="otherwise"];
    bb39__0_3345 -> bb40__0_3345 [label="return"];
    bb40__0_3345 -> bb54__0_3345 [label=""];
    bb41__0_3345 -> bb49__0_3345 [label=""];
    bb42__0_3345 -> bb43__0_3345 [label="return"];
    bb43__0_3345 -> bb44__0_3345 [label="return"];
    bb44__0_3345 -> bb45__0_3345 [label="return"];
    bb45__0_3345 -> bb46__0_3345 [label="return"];
    bb45__0_3345 -> bb55__0_3345 [label="unwind"];
    bb46__0_3345 -> bb47__0_3345 [label="return"];
    bb46__0_3345 -> bb55__0_3345 [label="unwind"];
    bb47__0_3345 -> bb48__0_3345 [label="return"];
    bb47__0_3345 -> bb59__0_3345 [label="unwind"];
    bb48__0_3345 -> bb49__0_3345 [label=""];
    bb49__0_3345 -> bb50__0_3345 [label="return"];
    bb50__0_3345 -> bb51__0_3345 [label="0"];
    bb50__0_3345 -> bb52__0_3345 [label="1"];
    bb50__0_3345 -> bb12__0_3345 [label="otherwise"];
    bb51__0_3345 -> bb54__0_3345 [label=""];
    bb52__0_3345 -> bb53__0_3345 [label="return"];
    bb53__0_3345 -> bb54__0_3345 [label=""];
    bb55__0_3345 -> bb59__0_3345 [label="return"];
    bb56__0_3345 -> bb59__0_3345 [label="return"];
    bb57__0_3345 -> bb59__0_3345 [label="return"];
    bb58__0_3345 -> bb59__0_3345 [label="return"];
}
