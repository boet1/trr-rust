digraph Mir_0_1118 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn admin::handle_settle_expired_market(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::admin::AdminUpdatePerpMarket&lt;ReErased&gt;&gt;, _2: u16) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _3: anchor_lang::prelude::Clock;<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _5: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _6: isize;<br align="left"/>let _7: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _8: !;<br align="left"/>let mut _9: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _10: anchor_lang::prelude::Clock;<br align="left"/>let _11: i64;<br align="left"/>let _12: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let _13: state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _14: state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _15: state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _16: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let mut _17: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, instructions::optional_accounts::AccountMaps&lt;ReErased&gt;&gt;;<br align="left"/>let mut _18: std::result::Result&lt;instructions::optional_accounts::AccountMaps&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _19: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _20: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _21: std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _22: std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _23: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _24: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _25: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _26: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _27: u16;<br align="left"/>let mut _28: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _29: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _30: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _31: u64;<br align="left"/>let mut _32: std::option::Option&lt;state::state::OracleGuardRails&gt;;<br align="left"/>let mut _33: state::state::OracleGuardRails;<br align="left"/>let mut _34: &amp;ReErased state::state::State;<br align="left"/>let mut _35: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _36: isize;<br align="left"/>let _37: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _38: !;<br align="left"/>let mut _39: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _40: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let _41: i128;<br align="left"/>let mut _42: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _43: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _44: u16;<br align="left"/>let mut _45: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _46: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _47: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _48: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _49: &amp;ReErased state::state::State;<br align="left"/>let _50: &amp;ReErased state::state::State;<br align="left"/>let mut _51: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _52: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let _53: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let mut _54: isize;<br align="left"/>let _55: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _56: !;<br align="left"/>let mut _57: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _58: i128;<br align="left"/>let _59: ();<br align="left"/>let mut _60: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _61: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _62: u16;<br align="left"/>let mut _63: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _64: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _65: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _66: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _67: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let _68: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _69: &amp;ReErased state::state::State;<br align="left"/>let _70: &amp;ReErased state::state::State;<br align="left"/>let mut _71: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _72: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let _73: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let mut _74: isize;<br align="left"/>let _75: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _76: !;<br align="left"/>let mut _77: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _78: ();<br align="left"/>let mut _79: ();<br align="left"/>let mut _80: &amp;ReErased mut instructions::admin::AdminUpdatePerpMarket&lt;ReErased&gt;;<br align="left"/>let mut _81: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _82: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _83: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _84: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _85: isize;<br align="left"/>let mut _86: isize;<br align="left"/>let mut _87: isize;<br align="left"/>let mut _88: isize;<br align="left"/>let mut _89: isize;<br align="left"/>let mut _90: isize;<br align="left"/>let mut _91: isize;<br align="left"/>let mut _92: isize;<br align="left"/>let mut _93: isize;<br align="left"/>let mut _94: isize;<br align="left"/>let mut _95: isize;<br align="left"/>let mut _96: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _97: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _98: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug market_index =&gt; _2;<br align="left"/>debug clock =&gt; _3;<br align="left"/>debug residual =&gt; _7;<br align="left"/>debug val =&gt; _10;<br align="left"/>debug _now =&gt; _11;<br align="left"/>debug state =&gt; _12;<br align="left"/>debug perp_market_map =&gt; _13;<br align="left"/>debug spot_market_map =&gt; _14;<br align="left"/>debug oracle_map =&gt; _15;<br align="left"/>debug residual =&gt; _37;<br align="left"/>debug val =&gt; _40;<br align="left"/>debug residual =&gt; _55;<br align="left"/>debug val =&gt; _58;<br align="left"/>debug residual =&gt; _75;<br align="left"/>debug val =&gt; _78;<br align="left"/>>;
    bb0__0_1118 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/></td></tr><tr><td align="left">_5 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb1__0_1118 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb2__0_1118 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_6 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _6)</td></tr></table>>];
    bb3__0_1118 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>_10 = move ((_4 as Continue).0: anchor_lang::prelude::Clock)<br/>_3 = move _10<br/>StorageDead(_10)<br/>_85 = discriminant(_4)<br/>StorageDead(_4)<br/>StorageLive(_11)<br/>_11 = (_3.4: i64)<br/>StorageLive(_12)<br/>_80 = deref_copy (_1.1: &amp;mut instructions::admin::AdminUpdatePerpMarket&lt;'_&gt;)<br/>_12 = &amp;((*_80).1: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>_81 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_23 = &amp;(*_81)<br/></td></tr><tr><td align="left">_22 = core::slice::&lt;impl [anchor_lang::prelude::AccountInfo&lt;'_&gt;]&gt;::iter(move _23)</td></tr></table>>];
    bb4__0_1118 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_1118 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_7)<br/>_7 = move ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_9)<br/>_9 = move _7<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _9)</td></tr></table>>];
    bb6__0_1118 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_7)<br/>_91 = discriminant(_4)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_1118 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/></td></tr><tr><td align="left">_21 = &lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as Iterator&gt;::peekable(move _22)</td></tr></table>>];
    bb8__0_1118 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>_20 = &amp;mut _21<br/>_19 = &amp;mut (*_20)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_27 = _2<br/></td></tr><tr><td align="left">_26 = get_writable_perp_market_set(move _27)</td></tr></table>>];
    bb9__0_1118 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>_25 = &amp;_26<br/>_24 = &amp;(*_25)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/></td></tr><tr><td align="left">_30 = get_writable_spot_market_set(const _)</td></tr></table>>];
    bb10__0_1118 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">_29 = &amp;_30<br/>_28 = &amp;(*_29)<br/>StorageLive(_31)<br/>_31 = (_3.0: u64)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>_82 = deref_copy (*_12)<br/>_96 = (((_82.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_35 = &amp;(*_96)<br/></td></tr><tr><td align="left">_34 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _35)</td></tr></table>>];
    bb11__0_1118 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>_33 = ((*_34).7: state::state::OracleGuardRails)<br/>_32 = Option::&lt;state::state::OracleGuardRails&gt;::Some(move _33)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">_18 = load_maps(move _19, move _24, move _28, move _31, move _32)</td></tr></table>>];
    bb12__0_1118 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_31)<br/>StorageDead(_28)<br/>StorageDead(_24)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">_17 = &lt;std::result::Result&lt;AccountMaps&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _18)</td></tr></table>>];
    bb13__0_1118 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>_36 = discriminant(_17)<br/></td></tr><tr><td align="left">switchInt(move _36)</td></tr></table>>];
    bb14__0_1118 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_40)<br/>_40 = move ((_17 as Continue).0: instructions::optional_accounts::AccountMaps&lt;'_&gt;)<br/>_16 = move _40<br/>StorageDead(_40)<br/>StorageLive(_13)<br/>_13 = move (_16.0: state::perp_market_map::PerpMarketMap&lt;'_&gt;)<br/>StorageLive(_14)<br/>_14 = move (_16.1: state::spot_market_map::SpotMarketMap&lt;'_&gt;)<br/>StorageLive(_15)<br/>_15 = move (_16.2: state::oracle_map::OracleMap&lt;'_&gt;)<br/>_89 = discriminant(_17)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">drop(_30)</td></tr></table>>];
    bb15__0_1118 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_37)<br/>_37 = ((_17 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_39)<br/>_39 = _37<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _39)</td></tr></table>>];
    bb16__0_1118 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_37)<br/>_87 = discriminant(_17)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">drop(_30)</td></tr></table>>];
    bb17__0_1118 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">drop(_26)</td></tr></table>>];
    bb18__0_1118 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>_44 = _2<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>_46 = &amp;_13<br/>_45 = &amp;(*_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>_48 = &amp;mut _15<br/>_47 = &amp;mut (*_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>_83 = deref_copy (*_12)<br/>_97 = (((_83.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_51 = &amp;(*_97)<br/></td></tr><tr><td align="left">_50 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _51)</td></tr></table>>];
    bb19__0_1118 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">_49 = &amp;(*_50)<br/>StorageDead(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>_53 = &amp;_3<br/>_52 = &amp;(*_53)<br/></td></tr><tr><td align="left">_43 = update_amm(move _44, move _45, move _47, move _49, move _52)</td></tr></table>>];
    bb20__0_1118 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_49)<br/>StorageDead(_47)<br/>StorageDead(_45)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">_42 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _43)</td></tr></table>>];
    bb21__0_1118 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>_54 = discriminant(_42)<br/></td></tr><tr><td align="left">switchInt(move _54)</td></tr></table>>];
    bb22__0_1118 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_58)<br/>_58 = ((_42 as Continue).0: i128)<br/>_41 = _58<br/>StorageDead(_58)<br/>StorageDead(_53)<br/>StorageDead(_50)<br/>StorageDead(_48)<br/>StorageDead(_46)<br/>StorageDead(_42)<br/>StorageDead(_41)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>_62 = _2<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>_64 = &amp;_13<br/>_63 = &amp;(*_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>_66 = &amp;mut _15<br/>_65 = &amp;mut (*_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>_68 = &amp;_14<br/>_67 = &amp;(*_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>_84 = deref_copy (*_12)<br/>_98 = (((_84.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_71 = &amp;(*_98)<br/></td></tr><tr><td align="left">_70 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _71)</td></tr></table>>];
    bb23__0_1118 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_55)<br/>_55 = ((_42 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_57)<br/>_57 = _55<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _57)</td></tr></table>>];
    bb24__0_1118 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_55)<br/>StorageDead(_53)<br/>StorageDead(_50)<br/>StorageDead(_48)<br/>StorageDead(_46)<br/>StorageDead(_42)<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_1118 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">_69 = &amp;(*_70)<br/>StorageDead(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>_73 = &amp;_3<br/>_72 = &amp;(*_73)<br/></td></tr><tr><td align="left">_61 = controller::repeg::settle_expired_market(move _62, move _63, move _65, move _67, move _69, move _72)</td></tr></table>>];
    bb26__0_1118 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_69)<br/>StorageDead(_67)<br/>StorageDead(_65)<br/>StorageDead(_63)<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">_60 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _61)</td></tr></table>>];
    bb27__0_1118 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>_74 = discriminant(_60)<br/></td></tr><tr><td align="left">switchInt(move _74)</td></tr></table>>];
    bb28__0_1118 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_78)<br/>_78 = ((_60 as Continue).0: ())<br/>_59 = _78<br/>StorageDead(_78)<br/>StorageDead(_73)<br/>StorageDead(_70)<br/>StorageDead(_68)<br/>StorageDead(_66)<br/>StorageDead(_64)<br/>StorageDead(_60)<br/>StorageDead(_59)<br/>StorageLive(_79)<br/>_79 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _79)<br/>StorageDead(_79)<br/></td></tr><tr><td align="left">drop(_15)</td></tr></table>>];
    bb29__0_1118 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_75)<br/>_75 = ((_60 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_77)<br/>_77 = _75<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _77)</td></tr></table>>];
    bb30__0_1118 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>StorageDead(_75)<br/>StorageDead(_73)<br/>StorageDead(_70)<br/>StorageDead(_68)<br/>StorageDead(_66)<br/>StorageDead(_64)<br/>StorageDead(_60)<br/>StorageDead(_59)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_1118 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/></td></tr><tr><td align="left">drop(_14)</td></tr></table>>];
    bb32__0_1118 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/></td></tr><tr><td align="left">drop(_13)</td></tr></table>>];
    bb33__0_1118 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_1118 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left">drop(_15)</td></tr></table>>];
    bb35__0_1118 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/></td></tr><tr><td align="left">drop(_14)</td></tr></table>>];
    bb36__0_1118 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/></td></tr><tr><td align="left">drop(_13)</td></tr></table>>];
    bb37__0_1118 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_1118 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">drop(_26)</td></tr></table>>];
    bb39__0_1118 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_1118 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_1118 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_1118 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left">return</td></tr></table>>];
    bb43__0_1118 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">43 (cleanup)</td></tr><tr><td align="left">drop(_26)</td></tr></table>>];
    bb44__0_1118 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">44 (cleanup)</td></tr><tr><td align="left">drop(_15)</td></tr></table>>];
    bb45__0_1118 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">45 (cleanup)</td></tr><tr><td align="left">drop(_14)</td></tr></table>>];
    bb46__0_1118 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">46 (cleanup)</td></tr><tr><td align="left">drop(_13)</td></tr></table>>];
    bb47__0_1118 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">47 (cleanup)</td></tr><tr><td align="left">drop(_30)</td></tr></table>>];
    bb48__0_1118 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">48 (cleanup)</td></tr><tr><td align="left">drop(_26)</td></tr></table>>];
    bb49__0_1118 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">49 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb50__0_1118 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">50 (cleanup)</td></tr><tr><td align="left" balign="left">_94 = discriminant(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb51__0_1118 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">51 (cleanup)</td></tr><tr><td align="left" balign="left">_95 = discriminant(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_1118 -> bb1__0_1118 [label="return"];
    bb1__0_1118 -> bb2__0_1118 [label="return"];
    bb1__0_1118 -> bb49__0_1118 [label="unwind"];
    bb2__0_1118 -> bb3__0_1118 [label="0"];
    bb2__0_1118 -> bb5__0_1118 [label="1"];
    bb2__0_1118 -> bb4__0_1118 [label="otherwise"];
    bb3__0_1118 -> bb7__0_1118 [label="return"];
    bb5__0_1118 -> bb6__0_1118 [label="return"];
    bb5__0_1118 -> bb51__0_1118 [label="unwind"];
    bb6__0_1118 -> bb41__0_1118 [label=""];
    bb7__0_1118 -> bb8__0_1118 [label="return"];
    bb8__0_1118 -> bb9__0_1118 [label="return"];
    bb9__0_1118 -> bb10__0_1118 [label="return"];
    bb9__0_1118 -> bb48__0_1118 [label="unwind"];
    bb10__0_1118 -> bb11__0_1118 [label="return"];
    bb10__0_1118 -> bb47__0_1118 [label="unwind"];
    bb11__0_1118 -> bb12__0_1118 [label="return"];
    bb11__0_1118 -> bb47__0_1118 [label="unwind"];
    bb12__0_1118 -> bb13__0_1118 [label="return"];
    bb12__0_1118 -> bb47__0_1118 [label="unwind"];
    bb13__0_1118 -> bb14__0_1118 [label="0"];
    bb13__0_1118 -> bb15__0_1118 [label="1"];
    bb13__0_1118 -> bb4__0_1118 [label="otherwise"];
    bb14__0_1118 -> bb17__0_1118 [label="return"];
    bb14__0_1118 -> bb43__0_1118 [label="unwind"];
    bb15__0_1118 -> bb16__0_1118 [label="return"];
    bb15__0_1118 -> bb50__0_1118 [label="unwind"];
    bb16__0_1118 -> bb38__0_1118 [label="return"];
    bb16__0_1118 -> bb48__0_1118 [label="unwind"];
    bb17__0_1118 -> bb18__0_1118 [label="return"];
    bb17__0_1118 -> bb44__0_1118 [label="unwind"];
    bb18__0_1118 -> bb19__0_1118 [label="return"];
    bb18__0_1118 -> bb44__0_1118 [label="unwind"];
    bb19__0_1118 -> bb20__0_1118 [label="return"];
    bb19__0_1118 -> bb44__0_1118 [label="unwind"];
    bb20__0_1118 -> bb21__0_1118 [label="return"];
    bb20__0_1118 -> bb44__0_1118 [label="unwind"];
    bb21__0_1118 -> bb22__0_1118 [label="0"];
    bb21__0_1118 -> bb23__0_1118 [label="1"];
    bb21__0_1118 -> bb4__0_1118 [label="otherwise"];
    bb22__0_1118 -> bb25__0_1118 [label="return"];
    bb22__0_1118 -> bb44__0_1118 [label="unwind"];
    bb23__0_1118 -> bb24__0_1118 [label="return"];
    bb23__0_1118 -> bb44__0_1118 [label="unwind"];
    bb24__0_1118 -> bb34__0_1118 [label=""];
    bb25__0_1118 -> bb26__0_1118 [label="return"];
    bb25__0_1118 -> bb44__0_1118 [label="unwind"];
    bb26__0_1118 -> bb27__0_1118 [label="return"];
    bb26__0_1118 -> bb44__0_1118 [label="unwind"];
    bb27__0_1118 -> bb28__0_1118 [label="0"];
    bb27__0_1118 -> bb29__0_1118 [label="1"];
    bb27__0_1118 -> bb4__0_1118 [label="otherwise"];
    bb28__0_1118 -> bb31__0_1118 [label="return"];
    bb28__0_1118 -> bb45__0_1118 [label="unwind"];
    bb29__0_1118 -> bb30__0_1118 [label="return"];
    bb29__0_1118 -> bb44__0_1118 [label="unwind"];
    bb30__0_1118 -> bb34__0_1118 [label=""];
    bb31__0_1118 -> bb32__0_1118 [label="return"];
    bb31__0_1118 -> bb46__0_1118 [label="unwind"];
    bb32__0_1118 -> bb33__0_1118 [label="return"];
    bb32__0_1118 -> bb49__0_1118 [label="unwind"];
    bb33__0_1118 -> bb42__0_1118 [label=""];
    bb34__0_1118 -> bb35__0_1118 [label="return"];
    bb34__0_1118 -> bb45__0_1118 [label="unwind"];
    bb35__0_1118 -> bb36__0_1118 [label="return"];
    bb35__0_1118 -> bb46__0_1118 [label="unwind"];
    bb36__0_1118 -> bb37__0_1118 [label="return"];
    bb36__0_1118 -> bb49__0_1118 [label="unwind"];
    bb37__0_1118 -> bb40__0_1118 [label=""];
    bb38__0_1118 -> bb39__0_1118 [label="return"];
    bb38__0_1118 -> bb49__0_1118 [label="unwind"];
    bb39__0_1118 -> bb40__0_1118 [label=""];
    bb40__0_1118 -> bb41__0_1118 [label=""];
    bb41__0_1118 -> bb42__0_1118 [label=""];
    bb43__0_1118 -> bb44__0_1118 [label="return"];
    bb44__0_1118 -> bb45__0_1118 [label="return"];
    bb45__0_1118 -> bb46__0_1118 [label="return"];
    bb46__0_1118 -> bb49__0_1118 [label="return"];
    bb47__0_1118 -> bb48__0_1118 [label="return"];
    bb48__0_1118 -> bb49__0_1118 [label="return"];
    bb50__0_1118 -> bb47__0_1118 [label=""];
    bb51__0_1118 -> bb49__0_1118 [label=""];
}
