digraph Mir_0_4417 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn UserStats::update_filler_volume(_1: &amp;ReErased mut state::user::UserStats, _2: u64, _3: i64) -&gt; std::result::Result&lt;(), error::ErrorCode&gt;<br align="left"/>let _4: i64;<br align="left"/>let mut _5: i64;<br align="left"/>let mut _6: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _7: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _8: i64;<br align="left"/>let mut _9: i64;<br align="left"/>let mut _10: isize;<br align="left"/>let _11: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _12: !;<br align="left"/>let mut _13: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _14: i64;<br align="left"/>let mut _15: u64;<br align="left"/>let mut _16: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _17: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _18: u64;<br align="left"/>let mut _19: u64;<br align="left"/>let mut _20: i64;<br align="left"/>let mut _21: isize;<br align="left"/>let _22: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _23: !;<br align="left"/>let mut _24: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _25: u64;<br align="left"/>let mut _26: i64;<br align="left"/>let mut _27: ();<br align="left"/>debug self =&gt; _1;<br align="left"/>debug quote_asset_amount =&gt; _2;<br align="left"/>debug now =&gt; _3;<br align="left"/>debug since_last =&gt; _4;<br align="left"/>debug residual =&gt; _11;<br align="left"/>debug val =&gt; _14;<br align="left"/>debug residual =&gt; _22;<br align="left"/>debug val =&gt; _25;<br align="left"/>>;
    bb0__0_4417 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = _3<br/>StorageLive(_9)<br/>_9 = ((*_1).9: i64)<br/></td></tr><tr><td align="left">_7 = &lt;i64 as SafeMath&gt;::safe_sub(move _8, move _9)</td></tr></table>>];
    bb1__0_4417 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">_6 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _7)</td></tr></table>>];
    bb2__0_4417 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>_10 = discriminant(_6)<br/></td></tr><tr><td align="left">switchInt(move _10)</td></tr></table>>];
    bb3__0_4417 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = ((_6 as Continue).0: i64)<br/>_5 = _14<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">_4 = std::cmp::max::&lt;i64&gt;(const 1_i64, move _5)</td></tr></table>>];
    bb4__0_4417 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_4417 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = ((_6 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_13)<br/>_13 = _11<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _13)</td></tr></table>>];
    bb6__0_4417 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_11)<br/>StorageDead(_5)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_4417 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageDead(_6)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = ((*_1).6: u64)<br/>StorageLive(_19)<br/>_19 = _2<br/>StorageLive(_20)<br/>_20 = _4<br/></td></tr><tr><td align="left">_17 = calculate_rolling_sum(move _18, move _19, move _20, const _)</td></tr></table>>];
    bb8__0_4417 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">_16 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _17)</td></tr></table>>];
    bb9__0_4417 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>_21 = discriminant(_16)<br/></td></tr><tr><td align="left">switchInt(move _21)</td></tr></table>>];
    bb10__0_4417 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_25)<br/>_25 = ((_16 as Continue).0: u64)<br/>_15 = _25<br/>StorageDead(_25)<br/>((*_1).6: u64) = move _15<br/>StorageDead(_15)<br/>StorageDead(_16)<br/>StorageLive(_26)<br/>_26 = _3<br/>((*_1).9: i64) = move _26<br/>StorageDead(_26)<br/>StorageLive(_27)<br/>_27 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _27)<br/>StorageDead(_27)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb11__0_4417 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_22)<br/>_22 = ((_16 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_24)<br/>_24 = _22<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _24)</td></tr></table>>];
    bb12__0_4417 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_22)<br/>StorageDead(_15)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_4417 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_4417 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_4417 -> bb1__0_4417 [label="return"];
    bb1__0_4417 -> bb2__0_4417 [label="return"];
    bb2__0_4417 -> bb3__0_4417 [label="0"];
    bb2__0_4417 -> bb5__0_4417 [label="1"];
    bb2__0_4417 -> bb4__0_4417 [label="otherwise"];
    bb3__0_4417 -> bb7__0_4417 [label="return"];
    bb5__0_4417 -> bb6__0_4417 [label="return"];
    bb6__0_4417 -> bb13__0_4417 [label=""];
    bb7__0_4417 -> bb8__0_4417 [label="return"];
    bb8__0_4417 -> bb9__0_4417 [label="return"];
    bb9__0_4417 -> bb10__0_4417 [label="0"];
    bb9__0_4417 -> bb11__0_4417 [label="1"];
    bb9__0_4417 -> bb4__0_4417 [label="otherwise"];
    bb10__0_4417 -> bb14__0_4417 [label=""];
    bb11__0_4417 -> bb12__0_4417 [label="return"];
    bb12__0_4417 -> bb13__0_4417 [label=""];
    bb13__0_4417 -> bb14__0_4417 [label=""];
}
