digraph Mir_0_1701 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn instructions::user::handle_initialize_fuel_overflow(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::user::InitializeFuelOverflow&lt;ReErased&gt;&gt;) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let mut _2: std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _3: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;;<br align="left"/>let mut _4: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _5: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _6: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let _7: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _8: Closure(DefId(0:11672 ~ drift[d311]::instructions::user::handle_initialize_fuel_overflow::{closure#0}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _9: isize;<br align="left"/>let _10: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _11: !;<br align="left"/>let mut _12: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _13: std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let _14: ();<br align="left"/>let mut _15: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _16: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _17: bool;<br align="left"/>let mut _18: &amp;ReErased state::user::UserStats;<br align="left"/>let _19: &amp;ReErased state::user::UserStats;<br align="left"/>let mut _20: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _21: ();<br align="left"/>let _22: error::ErrorCode;<br align="left"/>let _23: ();<br align="left"/>let mut _24: &amp;ReErased str;<br align="left"/>let _25: &amp;ReErased str;<br align="left"/>let mut _26: &amp;ReErased std::string::String;<br align="left"/>let _27: &amp;ReErased std::string::String;<br align="left"/>let _28: std::string::String;<br align="left"/>let _29: std::string::String;<br align="left"/>let mut _30: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _31: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _32: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _33: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _34: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _35: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _36: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _37: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _38: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _39: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _40: &amp;ReErased error::ErrorCode;<br align="left"/>let _41: &amp;ReErased error::ErrorCode;<br align="left"/>let _42: ();<br align="left"/>let mut _43: &amp;ReErased str;<br align="left"/>let _44: &amp;ReErased str;<br align="left"/>let mut _45: error::ErrorCode;<br align="left"/>let mut _46: isize;<br align="left"/>let _47: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _48: !;<br align="left"/>let mut _49: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _50: ();<br align="left"/>let mut _51: std::cell::RefMut&lt;ReErased, state::user::FuelOverflow&gt;;<br align="left"/>let mut _52: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::FuelOverflow&gt;&gt;;<br align="left"/>let mut _53: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::FuelOverflow&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _54: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::FuelOverflow&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _55: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::FuelOverflow&gt;;<br align="left"/>let mut _56: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::FuelOverflow&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _57: error::ErrorCode;<br align="left"/>let mut _58: isize;<br align="left"/>let _59: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _60: !;<br align="left"/>let mut _61: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _62: std::cell::RefMut&lt;ReErased, state::user::FuelOverflow&gt;;<br align="left"/>let mut _63: state::user::FuelOverflow;<br align="left"/>let mut _64: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _65: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _66: state::user::FuelOverflow;<br align="left"/>let mut _67: &amp;ReErased mut state::user::FuelOverflow;<br align="left"/>let mut _68: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::FuelOverflow&gt;;<br align="left"/>let _69: ();<br align="left"/>let mut _70: &amp;ReErased mut state::user::UserStats;<br align="left"/>let mut _71: &amp;ReErased mut state::user::UserStats;<br align="left"/>let mut _72: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _73: ();<br align="left"/>let mut _74: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _75: &amp;ReErased mut instructions::user::InitializeFuelOverflow&lt;ReErased&gt;;<br align="left"/>let mut _76: &amp;ReErased mut instructions::user::InitializeFuelOverflow&lt;ReErased&gt;;<br align="left"/>let mut _77: &amp;ReErased mut instructions::user::InitializeFuelOverflow&lt;ReErased&gt;;<br align="left"/>let mut _78: isize;<br align="left"/>let mut _79: isize;<br align="left"/>let mut _80: isize;<br align="left"/>let mut _81: isize;<br align="left"/>let mut _82: isize;<br align="left"/>let mut _83: isize;<br align="left"/>let mut _84: isize;<br align="left"/>let mut _85: isize;<br align="left"/>let mut _86: isize;<br align="left"/>let mut _87: isize;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug user_stats =&gt; _2;<br align="left"/>debug residual =&gt; _10;<br align="left"/>debug val =&gt; _13;<br align="left"/>debug error_code =&gt; _22;<br align="left"/>debug res =&gt; _29;<br align="left"/>debug residual =&gt; _47;<br align="left"/>debug val =&gt; _50;<br align="left"/>debug fuel_overflow =&gt; _51;<br align="left"/>debug residual =&gt; _59;<br align="left"/>debug val =&gt; _62;<br align="left"/>>;
    bb0__0_1701 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_75 = deref_copy (_1.1: &amp;mut instructions::user::InitializeFuelOverflow&lt;'_&gt;)<br/>_7 = &amp;((*_75).1: anchor_lang::prelude::AccountLoader&lt;'_, state::user::UserStats&gt;)<br/>_6 = &amp;(*_7)<br/></td></tr><tr><td align="left">_5 = anchor_lang::prelude::AccountLoader::&lt;'_, UserStats&gt;::load_mut(move _6)</td></tr></table>>];
    bb1__0_1701 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageLive(_8)<br/>_8 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_4 = std::result::Result::&lt;RefMut&lt;'_, UserStats&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _5, move _8)</td></tr></table>>];
    bb2__0_1701 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">_3 = &lt;std::result::Result&lt;RefMut&lt;'_, UserStats&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _4)</td></tr></table>>];
    bb3__0_1701 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>_9 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _9)</td></tr></table>>];
    bb4__0_1701 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = move ((_3 as Continue).0: std::cell::RefMut&lt;'_, state::user::UserStats&gt;)<br/>_2 = move _13<br/>StorageDead(_13)<br/>_80 = discriminant(_3)<br/>StorageDead(_7)<br/>StorageDead(_3)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_20 = &amp;_2<br/></td></tr><tr><td align="left">_19 = &lt;RefMut&lt;'_, UserStats&gt; as Deref&gt;::deref(move _20)</td></tr></table>>];
    bb5__0_1701 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_1701 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>_10 = ((_3 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_12)<br/>_12 = _10<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _12)</td></tr></table>>];
    bb7__0_1701 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_10)<br/>_78 = discriminant(_3)<br/>StorageDead(_7)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_1701 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">_18 = &amp;(*_19)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">_17 = UserStats::can_sweep_fuel(move _18)</td></tr></table>>];
    bb9__0_1701 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left">switchInt(move _17)</td></tr></table>>];
    bb10__0_1701 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_18)<br/>StorageLive(_21)<br/>_21 = ()<br/>_16 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _21)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb11__0_1701 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_18)<br/>StorageLive(_22)<br/>_22 = error::ErrorCode::UserFuelOverflowThresholdNotMet<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>_74 = const _<br/>_33 = &amp;(*_74)<br/>_32 = &amp;(*_33)<br/>_31 = move _32 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_32)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>_41 = &amp;_22<br/>_40 = &amp;(*_41)<br/></td></tr><tr><td align="left">_39 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _40)</td></tr></table>>];
    bb12__0_1701 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>_38 = [move _39]<br/>StorageDead(_39)<br/>_37 = &amp;_38<br/>_36 = &amp;(*_37)<br/>_35 = move _36 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">_30 = Arguments::&lt;'_&gt;::new_v1(move _31, move _35)</td></tr></table>>];
    bb13__0_1701 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">_29 = format(move _30)</td></tr></table>>];
    bb14__0_1701 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_41)<br/>StorageDead(_38)<br/>StorageDead(_37)<br/>StorageDead(_33)<br/>_28 = move _29<br/>StorageDead(_29)<br/>_27 = &amp;_28<br/>_26 = &amp;(*_27)<br/></td></tr><tr><td align="left">_25 = &lt;String as Deref&gt;::deref(move _26)</td></tr></table>>];
    bb15__0_1701 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">_24 = &amp;(*_25)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">_23 = solana_program::log::sol_log(move _24)</td></tr></table>>];
    bb16__0_1701 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/></td></tr><tr><td align="left">drop(_28)</td></tr></table>>];
    bb17__0_1701 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_27)<br/>StorageDead(_25)<br/>StorageDead(_23)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>_44 = const &quot;User fuel sweep threshold not met&quot;<br/>_43 = &amp;(*_44)<br/></td></tr><tr><td align="left">_42 = solana_program::log::sol_log(move _43)</td></tr></table>>];
    bb18__0_1701 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_44)<br/>StorageDead(_42)<br/>StorageLive(_45)<br/>_45 = _22<br/>_16 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _45)<br/>StorageDead(_45)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_1701 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/></td></tr><tr><td align="left">_15 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _16)</td></tr></table>>];
    bb20__0_1701 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>_46 = discriminant(_15)<br/></td></tr><tr><td align="left">switchInt(move _46)</td></tr></table>>];
    bb21__0_1701 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_50)<br/>_50 = ((_15 as Continue).0: ())<br/>_14 = _50<br/>StorageDead(_50)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>_76 = deref_copy (_1.1: &amp;mut instructions::user::InitializeFuelOverflow&lt;'_&gt;)<br/>_55 = &amp;((*_76).0: anchor_lang::prelude::AccountLoader&lt;'_, state::user::FuelOverflow&gt;)<br/></td></tr><tr><td align="left">_54 = anchor_lang::prelude::AccountLoader::&lt;'_, FuelOverflow&gt;::load_init(move _55)</td></tr></table>>];
    bb22__0_1701 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>_47 = ((_15 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_49)<br/>_49 = _47<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _49)</td></tr></table>>];
    bb23__0_1701 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_47)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_1701 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>_57 = error::ErrorCode::UnableToLoadAccountLoader<br/>_56 = std::result::Result::&lt;RefMut&lt;'_, FuelOverflow&gt;, error::ErrorCode&gt;::Err(move _57)<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">_53 = std::result::Result::&lt;RefMut&lt;'_, FuelOverflow&gt;, anchor_lang::error::Error&gt;::or::&lt;error::ErrorCode&gt;(move _54, move _56)</td></tr></table>>];
    bb25__0_1701 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">_52 = &lt;std::result::Result&lt;RefMut&lt;'_, FuelOverflow&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _53)</td></tr></table>>];
    bb26__0_1701 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>_58 = discriminant(_52)<br/></td></tr><tr><td align="left">switchInt(move _58)</td></tr></table>>];
    bb27__0_1701 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_62)<br/>_62 = move ((_52 as Continue).0: std::cell::RefMut&lt;'_, state::user::FuelOverflow&gt;)<br/>_51 = move _62<br/>StorageDead(_62)<br/>_84 = discriminant(_52)<br/>StorageDead(_52)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>_77 = deref_copy (_1.1: &amp;mut instructions::user::InitializeFuelOverflow&lt;'_&gt;)<br/>_65 = &amp;((*_77).2: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/></td></tr><tr><td align="left">_64 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::Key&gt;::key(move _65)</td></tr></table>>];
    bb28__0_1701 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_59)<br/>_59 = ((_52 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_61)<br/>_61 = _59<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _61)</td></tr></table>>];
    bb29__0_1701 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_59)<br/>_82 = discriminant(_52)<br/>StorageDead(_52)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_1701 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageLive(_66)<br/></td></tr><tr><td align="left">_66 = &lt;FuelOverflow as Default&gt;::default()</td></tr></table>>];
    bb31__0_1701 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">_63 = FuelOverflow { authority: move _64, fuel_insurance: (_66.1: u128), fuel_deposits: (_66.2: u128), fuel_borrows: (_66.3: u128), fuel_positions: (_66.4: u128), fuel_taker: (_66.5: u128), fuel_maker: (_66.6: u128), last_fuel_sweep_ts: (_66.7: u32), last_reset_ts: (_66.8: u32), padding: (_66.9: [u128; 6]) }<br/>StorageDead(_64)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>_68 = &amp;mut _51<br/></td></tr><tr><td align="left">_67 = &lt;RefMut&lt;'_, FuelOverflow&gt; as DerefMut&gt;::deref_mut(move _68)</td></tr></table>>];
    bb32__0_1701 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>(*_67) = move _63<br/>StorageDead(_63)<br/>StorageDead(_67)<br/>StorageDead(_66)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>_72 = &amp;mut _2<br/></td></tr><tr><td align="left">_71 = &lt;RefMut&lt;'_, UserStats&gt; as DerefMut&gt;::deref_mut(move _72)</td></tr></table>>];
    bb33__0_1701 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">_70 = &amp;mut (*_71)<br/>StorageDead(_72)<br/></td></tr><tr><td align="left">_69 = UserStats::update_fuel_overflow_status(move _70, const true)</td></tr></table>>];
    bb34__0_1701 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_71)<br/>StorageDead(_69)<br/>StorageLive(_73)<br/>_73 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _73)<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">drop(_51)</td></tr></table>>];
    bb35__0_1701 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/></td></tr><tr><td align="left">drop(_2)</td></tr></table>>];
    bb36__0_1701 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_1701 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left">drop(_2)</td></tr></table>>];
    bb38__0_1701 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_1701 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left">return</td></tr></table>>];
    bb40__0_1701 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">40 (cleanup)</td></tr><tr><td align="left">drop(_51)</td></tr></table>>];
    bb41__0_1701 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">41 (cleanup)</td></tr><tr><td align="left">drop(_28)</td></tr></table>>];
    bb42__0_1701 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">42 (cleanup)</td></tr><tr><td align="left">drop(_2)</td></tr></table>>];
    bb43__0_1701 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">43 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb44__0_1701 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">44 (cleanup)</td></tr><tr><td align="left" balign="left">_86 = discriminant(_52)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_1701 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">45 (cleanup)</td></tr><tr><td align="left" balign="left">_87 = discriminant(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_1701 -> bb1__0_1701 [label="return"];
    bb1__0_1701 -> bb2__0_1701 [label="return"];
    bb1__0_1701 -> bb43__0_1701 [label="unwind"];
    bb2__0_1701 -> bb3__0_1701 [label="return"];
    bb2__0_1701 -> bb43__0_1701 [label="unwind"];
    bb3__0_1701 -> bb4__0_1701 [label="0"];
    bb3__0_1701 -> bb6__0_1701 [label="1"];
    bb3__0_1701 -> bb5__0_1701 [label="otherwise"];
    bb4__0_1701 -> bb8__0_1701 [label="return"];
    bb4__0_1701 -> bb42__0_1701 [label="unwind"];
    bb6__0_1701 -> bb7__0_1701 [label="return"];
    bb6__0_1701 -> bb45__0_1701 [label="unwind"];
    bb7__0_1701 -> bb38__0_1701 [label=""];
    bb8__0_1701 -> bb9__0_1701 [label="return"];
    bb8__0_1701 -> bb42__0_1701 [label="unwind"];
    bb9__0_1701 -> bb11__0_1701 [label="0"];
    bb9__0_1701 -> bb10__0_1701 [label="otherwise"];
    bb10__0_1701 -> bb19__0_1701 [label=""];
    bb11__0_1701 -> bb12__0_1701 [label="return"];
    bb11__0_1701 -> bb42__0_1701 [label="unwind"];
    bb12__0_1701 -> bb13__0_1701 [label="return"];
    bb12__0_1701 -> bb42__0_1701 [label="unwind"];
    bb13__0_1701 -> bb14__0_1701 [label="return"];
    bb13__0_1701 -> bb42__0_1701 [label="unwind"];
    bb14__0_1701 -> bb15__0_1701 [label="return"];
    bb14__0_1701 -> bb41__0_1701 [label="unwind"];
    bb15__0_1701 -> bb16__0_1701 [label="return"];
    bb15__0_1701 -> bb41__0_1701 [label="unwind"];
    bb16__0_1701 -> bb17__0_1701 [label="return"];
    bb16__0_1701 -> bb42__0_1701 [label="unwind"];
    bb17__0_1701 -> bb18__0_1701 [label="return"];
    bb17__0_1701 -> bb42__0_1701 [label="unwind"];
    bb18__0_1701 -> bb19__0_1701 [label=""];
    bb19__0_1701 -> bb20__0_1701 [label="return"];
    bb19__0_1701 -> bb42__0_1701 [label="unwind"];
    bb20__0_1701 -> bb21__0_1701 [label="0"];
    bb20__0_1701 -> bb22__0_1701 [label="1"];
    bb20__0_1701 -> bb5__0_1701 [label="otherwise"];
    bb21__0_1701 -> bb24__0_1701 [label="return"];
    bb21__0_1701 -> bb42__0_1701 [label="unwind"];
    bb22__0_1701 -> bb23__0_1701 [label="return"];
    bb22__0_1701 -> bb42__0_1701 [label="unwind"];
    bb23__0_1701 -> bb37__0_1701 [label=""];
    bb24__0_1701 -> bb25__0_1701 [label="return"];
    bb24__0_1701 -> bb42__0_1701 [label="unwind"];
    bb25__0_1701 -> bb26__0_1701 [label="return"];
    bb25__0_1701 -> bb42__0_1701 [label="unwind"];
    bb26__0_1701 -> bb27__0_1701 [label="0"];
    bb26__0_1701 -> bb28__0_1701 [label="1"];
    bb26__0_1701 -> bb5__0_1701 [label="otherwise"];
    bb27__0_1701 -> bb30__0_1701 [label="return"];
    bb27__0_1701 -> bb40__0_1701 [label="unwind"];
    bb28__0_1701 -> bb29__0_1701 [label="return"];
    bb28__0_1701 -> bb44__0_1701 [label="unwind"];
    bb29__0_1701 -> bb37__0_1701 [label=""];
    bb30__0_1701 -> bb31__0_1701 [label="return"];
    bb30__0_1701 -> bb40__0_1701 [label="unwind"];
    bb31__0_1701 -> bb32__0_1701 [label="return"];
    bb31__0_1701 -> bb40__0_1701 [label="unwind"];
    bb32__0_1701 -> bb33__0_1701 [label="return"];
    bb32__0_1701 -> bb40__0_1701 [label="unwind"];
    bb33__0_1701 -> bb34__0_1701 [label="return"];
    bb33__0_1701 -> bb40__0_1701 [label="unwind"];
    bb34__0_1701 -> bb35__0_1701 [label="return"];
    bb34__0_1701 -> bb42__0_1701 [label="unwind"];
    bb35__0_1701 -> bb36__0_1701 [label="return"];
    bb35__0_1701 -> bb43__0_1701 [label="unwind"];
    bb36__0_1701 -> bb39__0_1701 [label=""];
    bb37__0_1701 -> bb38__0_1701 [label="return"];
    bb37__0_1701 -> bb43__0_1701 [label="unwind"];
    bb38__0_1701 -> bb39__0_1701 [label=""];
    bb40__0_1701 -> bb42__0_1701 [label="return"];
    bb41__0_1701 -> bb42__0_1701 [label="return"];
    bb42__0_1701 -> bb43__0_1701 [label="return"];
    bb44__0_1701 -> bb42__0_1701 [label=""];
    bb45__0_1701 -> bb43__0_1701 [label=""];
}
