// MIR for `state::user::<impl at programs/drift/src/state/user.rs:136:1: 136:10>::force_get_spot_position_mut` before PreCodegen

fn state::user::<impl at programs/drift/src/state/user.rs:136:1: 136:10>::force_get_spot_position_mut(_1: &mut User, _2: u16) -> std::result::Result<&mut SpotPosition, error::ErrorCode> {
    debug self => _1;
    debug market_index => _2;
    let mut _0: std::result::Result<&mut state::user::SpotPosition, error::ErrorCode>;
    let mut _3: std::result::Result<usize, error::ErrorCode>;
    let mut _4: std::result::Result<usize, error::ErrorCode>;
    let mut _5: &state::user::User;
    let mut _6: u16;
    let mut _7: {closure@programs/drift/src/state/user.rs:234:22: 234:25};
    let mut _8: &mut &mut state::user::User;
    let mut _9: &u16;
    let mut _10: {closure@programs/drift/src/state/user.rs:235:18: 235:37};

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        StorageLive(_5);
        _5 = &(*_1);
        StorageLive(_6);
        _6 = _2;
        _4 = User::get_spot_position_index(move _5, move _6) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_6);
        StorageDead(_5);
        StorageLive(_7);
        StorageLive(_8);
        _8 = &mut _1;
        StorageLive(_9);
        _9 = &_2;
        _7 = {closure@programs/drift/src/state/user.rs:234:22: 234:25} { self: move _8, market_index: move _9 };
        StorageDead(_9);
        StorageDead(_8);
        _3 = std::result::Result::<usize, error::ErrorCode>::or_else::<error::ErrorCode, {closure@programs/drift/src/state/user.rs:234:22: 234:25}>(move _4, move _7) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_7);
        StorageDead(_4);
        StorageLive(_10);
        _10 = {closure@programs/drift/src/state/user.rs:235:18: 235:37} { self: move _1 };
        _0 = std::result::Result::<usize, error::ErrorCode>::map::<&mut SpotPosition, {closure@programs/drift/src/state/user.rs:235:18: 235:37}>(move _3, move _10) -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageDead(_10);
        StorageDead(_3);
        return;
    }
}
