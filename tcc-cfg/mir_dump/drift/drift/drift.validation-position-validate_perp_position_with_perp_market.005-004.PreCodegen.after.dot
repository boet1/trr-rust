digraph Mir_0_4601 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn validate_perp_position_with_perp_market(_1: &amp;ReErased state::user::PerpPosition, _2: &amp;ReErased state::perp_market::PerpMarket) -&gt; std::result::Result&lt;(), error::ErrorCode&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _5: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _6: bool;<br align="left"/>let mut _7: u16;<br align="left"/>let mut _8: u16;<br align="left"/>let mut _9: ();<br align="left"/>let _10: error::ErrorCode;<br align="left"/>let _11: ();<br align="left"/>let mut _12: &amp;ReErased str;<br align="left"/>let _13: &amp;ReErased str;<br align="left"/>let mut _14: &amp;ReErased std::string::String;<br align="left"/>let _15: &amp;ReErased std::string::String;<br align="left"/>let _16: std::string::String;<br align="left"/>let _17: std::string::String;<br align="left"/>let mut _18: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _19: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _20: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _21: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _22: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _23: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _24: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _25: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _26: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _27: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _28: &amp;ReErased error::ErrorCode;<br align="left"/>let _29: &amp;ReErased error::ErrorCode;<br align="left"/>let _30: ();<br align="left"/>let mut _31: &amp;ReErased str;<br align="left"/>let _32: &amp;ReErased str;<br align="left"/>let mut _33: error::ErrorCode;<br align="left"/>let mut _34: isize;<br align="left"/>let _35: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _36: !;<br align="left"/>let mut _37: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _38: ();<br align="left"/>let _39: ();<br align="left"/>let mut _40: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _41: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _42: bool;<br align="left"/>let mut _43: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _44: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _45: u64;<br align="left"/>let mut _46: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _47: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _48: u64;<br align="left"/>let mut _49: i64;<br align="left"/>let mut _50: isize;<br align="left"/>let _51: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _52: !;<br align="left"/>let mut _53: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _54: u64;<br align="left"/>let mut _55: u64;<br align="left"/>let mut _56: isize;<br align="left"/>let _57: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _58: !;<br align="left"/>let mut _59: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _60: bool;<br align="left"/>let mut _61: ();<br align="left"/>let _62: error::ErrorCode;<br align="left"/>let _63: ();<br align="left"/>let mut _64: &amp;ReErased str;<br align="left"/>let _65: &amp;ReErased str;<br align="left"/>let mut _66: &amp;ReErased std::string::String;<br align="left"/>let _67: &amp;ReErased std::string::String;<br align="left"/>let _68: std::string::String;<br align="left"/>let _69: std::string::String;<br align="left"/>let mut _70: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _71: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _72: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _73: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _74: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _75: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _76: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _77: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _78: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _79: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _80: &amp;ReErased error::ErrorCode;<br align="left"/>let _81: &amp;ReErased error::ErrorCode;<br align="left"/>let _82: ();<br align="left"/>let mut _83: &amp;ReErased str;<br align="left"/>let _84: &amp;ReErased str;<br align="left"/>let mut _85: error::ErrorCode;<br align="left"/>let mut _86: isize;<br align="left"/>let _87: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _88: !;<br align="left"/>let mut _89: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _90: ();<br align="left"/>let mut _91: ();<br align="left"/>let mut _92: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _93: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>debug position =&gt; _1;<br align="left"/>debug market =&gt; _2;<br align="left"/>debug error_code =&gt; _10;<br align="left"/>debug res =&gt; _17;<br align="left"/>debug residual =&gt; _35;<br align="left"/>debug val =&gt; _38;<br align="left"/>debug residual =&gt; _51;<br align="left"/>debug val =&gt; _54;<br align="left"/>debug residual =&gt; _57;<br align="left"/>debug val =&gt; _60;<br align="left"/>debug error_code =&gt; _62;<br align="left"/>debug res =&gt; _69;<br align="left"/>debug residual =&gt; _87;<br align="left"/>debug val =&gt; _90;<br align="left"/>>;
    bb0__0_4601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = ((*_1).13: u16)<br/>StorageLive(_8)<br/>_8 = ((*_2).21: u16)<br/>_6 = Eq(move _7, move _8)<br/></td></tr><tr><td align="left">switchInt(move _6)</td></tr></table>>];
    bb1__0_4601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_7)<br/>StorageLive(_9)<br/>_9 = ()<br/>_5 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _9)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb2__0_4601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_7)<br/>StorageLive(_10)<br/>_10 = error::ErrorCode::InvalidPerpPositionDetected<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_93 = const _<br/>_21 = &amp;(*_93)<br/>_20 = &amp;(*_21)<br/>_19 = move _20 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_20)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_29 = &amp;_10<br/>_28 = &amp;(*_29)<br/></td></tr><tr><td align="left">_27 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _28)</td></tr></table>>];
    bb3__0_4601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>_26 = [move _27]<br/>StorageDead(_27)<br/>_25 = &amp;_26<br/>_24 = &amp;(*_25)<br/>_23 = move _24 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">_18 = Arguments::&lt;'_&gt;::new_v1(move _19, move _23)</td></tr></table>>];
    bb4__0_4601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">_17 = format(move _18)</td></tr></table>>];
    bb5__0_4601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_29)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_21)<br/>_16 = move _17<br/>StorageDead(_17)<br/>_15 = &amp;_16<br/>_14 = &amp;(*_15)<br/></td></tr><tr><td align="left">_13 = &lt;String as Deref&gt;::deref(move _14)</td></tr></table>>];
    bb6__0_4601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">_12 = &amp;(*_13)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">_11 = solana_program::log::sol_log(move _12)</td></tr></table>>];
    bb7__0_4601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/></td></tr><tr><td align="left">drop(_16)</td></tr></table>>];
    bb8__0_4601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_15)<br/>StorageDead(_13)<br/>StorageDead(_11)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>_32 = const &quot;position/market market_index unequal&quot;<br/>_31 = &amp;(*_32)<br/></td></tr><tr><td align="left">_30 = solana_program::log::sol_log(move _31)</td></tr></table>>];
    bb9__0_4601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_32)<br/>StorageDead(_30)<br/>StorageLive(_33)<br/>_33 = _10<br/>_5 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _33)<br/>StorageDead(_33)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_4601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb11__0_4601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_34 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _34)</td></tr></table>>];
    bb12__0_4601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_38)<br/>_38 = ((_4 as Continue).0: ())<br/>_3 = _38<br/>StorageDead(_38)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>_49 = ((*_1).1: i64)<br/></td></tr><tr><td align="left">_48 = core::num::&lt;impl i64&gt;::unsigned_abs(move _49)</td></tr></table>>];
    bb13__0_4601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb14__0_4601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_37)<br/>_37 = _35<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _37)</td></tr></table>>];
    bb15__0_4601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_35)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_4601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/></td></tr><tr><td align="left">_47 = &lt;u64 as Cast&gt;::cast::&lt;u64&gt;(move _48)</td></tr></table>>];
    bb17__0_4601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/></td></tr><tr><td align="left">_46 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _47)</td></tr></table>>];
    bb18__0_4601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>_50 = discriminant(_46)<br/></td></tr><tr><td align="left">switchInt(move _50)</td></tr></table>>];
    bb19__0_4601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_54)<br/>_54 = ((_46 as Continue).0: u64)<br/>_45 = _54<br/>StorageDead(_54)<br/>StorageLive(_55)<br/>_55 = (((*_2).1: state::perp_market::AMM).52: u64)<br/></td></tr><tr><td align="left">_44 = math::orders::is_multiple_of_step_size(move _45, move _55)</td></tr></table>>];
    bb20__0_4601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_51)<br/>_51 = ((_46 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_53)<br/>_53 = _51<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _53)</td></tr></table>>];
    bb21__0_4601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_51)<br/>StorageDead(_45)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_4601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">_43 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _44)</td></tr></table>>];
    bb23__0_4601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>_56 = discriminant(_43)<br/></td></tr><tr><td align="left">switchInt(move _56)</td></tr></table>>];
    bb24__0_4601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_60)<br/>_60 = ((_43 as Continue).0: bool)<br/>_42 = _60<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">switchInt(move _42)</td></tr></table>>];
    bb25__0_4601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_57)<br/>_57 = ((_43 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_59)<br/>_59 = _57<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _59)</td></tr></table>>];
    bb26__0_4601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_4601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_43)<br/>StorageLive(_61)<br/>_61 = ()<br/>_41 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _61)<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_4601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_43)<br/>StorageLive(_62)<br/>_62 = error::ErrorCode::InvalidPerpPositionDetected<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>_92 = const _<br/>_73 = &amp;(*_92)<br/>_72 = &amp;(*_73)<br/>_71 = move _72 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_72)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>_81 = &amp;_62<br/>_80 = &amp;(*_81)<br/></td></tr><tr><td align="left">_79 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _80)</td></tr></table>>];
    bb29__0_4601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>_78 = [move _79]<br/>StorageDead(_79)<br/>_77 = &amp;_78<br/>_76 = &amp;(*_77)<br/>_75 = move _76 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_76)<br/></td></tr><tr><td align="left">_70 = Arguments::&lt;'_&gt;::new_v1(move _71, move _75)</td></tr></table>>];
    bb30__0_4601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">_69 = format(move _70)</td></tr></table>>];
    bb31__0_4601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_81)<br/>StorageDead(_78)<br/>StorageDead(_77)<br/>StorageDead(_73)<br/>_68 = move _69<br/>StorageDead(_69)<br/>_67 = &amp;_68<br/>_66 = &amp;(*_67)<br/></td></tr><tr><td align="left">_65 = &lt;String as Deref&gt;::deref(move _66)</td></tr></table>>];
    bb32__0_4601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">_64 = &amp;(*_65)<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">_63 = solana_program::log::sol_log(move _64)</td></tr></table>>];
    bb33__0_4601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/></td></tr><tr><td align="left">drop(_68)</td></tr></table>>];
    bb34__0_4601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>StorageDead(_67)<br/>StorageDead(_65)<br/>StorageDead(_63)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>_84 = const &quot;position not multiple of stepsize&quot;<br/>_83 = &amp;(*_84)<br/></td></tr><tr><td align="left">_82 = solana_program::log::sol_log(move _83)</td></tr></table>>];
    bb35__0_4601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>StorageDead(_84)<br/>StorageDead(_82)<br/>StorageLive(_85)<br/>_85 = _62<br/>_41 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _85)<br/>StorageDead(_85)<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_4601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/></td></tr><tr><td align="left">_40 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _41)</td></tr></table>>];
    bb37__0_4601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>_86 = discriminant(_40)<br/></td></tr><tr><td align="left">switchInt(move _86)</td></tr></table>>];
    bb38__0_4601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_90)<br/>_90 = ((_40 as Continue).0: ())<br/>_39 = _90<br/>StorageDead(_90)<br/>StorageDead(_40)<br/>StorageDead(_39)<br/>StorageLive(_91)<br/>_91 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _91)<br/>StorageDead(_91)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_4601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_87)<br/>_87 = ((_40 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_89)<br/>_89 = _87<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _89)</td></tr></table>>];
    bb40__0_4601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>StorageDead(_87)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_4601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_43)<br/>StorageDead(_42)<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_4601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_4601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left">return</td></tr></table>>];
    bb44__0_4601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">44 (cleanup)</td></tr><tr><td align="left">drop(_68)</td></tr></table>>];
    bb45__0_4601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">45 (cleanup)</td></tr><tr><td align="left">drop(_16)</td></tr></table>>];
    bb46__0_4601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">46 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_4601 -> bb2__0_4601 [label="0"];
    bb0__0_4601 -> bb1__0_4601 [label="otherwise"];
    bb1__0_4601 -> bb10__0_4601 [label=""];
    bb2__0_4601 -> bb3__0_4601 [label="return"];
    bb3__0_4601 -> bb4__0_4601 [label="return"];
    bb4__0_4601 -> bb5__0_4601 [label="return"];
    bb5__0_4601 -> bb6__0_4601 [label="return"];
    bb5__0_4601 -> bb45__0_4601 [label="unwind"];
    bb6__0_4601 -> bb7__0_4601 [label="return"];
    bb6__0_4601 -> bb45__0_4601 [label="unwind"];
    bb7__0_4601 -> bb8__0_4601 [label="return"];
    bb7__0_4601 -> bb46__0_4601 [label="unwind"];
    bb8__0_4601 -> bb9__0_4601 [label="return"];
    bb9__0_4601 -> bb10__0_4601 [label=""];
    bb10__0_4601 -> bb11__0_4601 [label="return"];
    bb11__0_4601 -> bb12__0_4601 [label="0"];
    bb11__0_4601 -> bb14__0_4601 [label="1"];
    bb11__0_4601 -> bb13__0_4601 [label="otherwise"];
    bb12__0_4601 -> bb16__0_4601 [label="return"];
    bb14__0_4601 -> bb15__0_4601 [label="return"];
    bb15__0_4601 -> bb43__0_4601 [label=""];
    bb16__0_4601 -> bb17__0_4601 [label="return"];
    bb17__0_4601 -> bb18__0_4601 [label="return"];
    bb18__0_4601 -> bb19__0_4601 [label="0"];
    bb18__0_4601 -> bb20__0_4601 [label="1"];
    bb18__0_4601 -> bb13__0_4601 [label="otherwise"];
    bb19__0_4601 -> bb22__0_4601 [label="return"];
    bb20__0_4601 -> bb21__0_4601 [label="return"];
    bb21__0_4601 -> bb41__0_4601 [label=""];
    bb22__0_4601 -> bb23__0_4601 [label="return"];
    bb23__0_4601 -> bb24__0_4601 [label="0"];
    bb23__0_4601 -> bb25__0_4601 [label="1"];
    bb23__0_4601 -> bb13__0_4601 [label="otherwise"];
    bb24__0_4601 -> bb28__0_4601 [label="0"];
    bb24__0_4601 -> bb27__0_4601 [label="otherwise"];
    bb25__0_4601 -> bb26__0_4601 [label="return"];
    bb26__0_4601 -> bb41__0_4601 [label=""];
    bb27__0_4601 -> bb36__0_4601 [label=""];
    bb28__0_4601 -> bb29__0_4601 [label="return"];
    bb29__0_4601 -> bb30__0_4601 [label="return"];
    bb30__0_4601 -> bb31__0_4601 [label="return"];
    bb31__0_4601 -> bb32__0_4601 [label="return"];
    bb31__0_4601 -> bb44__0_4601 [label="unwind"];
    bb32__0_4601 -> bb33__0_4601 [label="return"];
    bb32__0_4601 -> bb44__0_4601 [label="unwind"];
    bb33__0_4601 -> bb34__0_4601 [label="return"];
    bb33__0_4601 -> bb46__0_4601 [label="unwind"];
    bb34__0_4601 -> bb35__0_4601 [label="return"];
    bb35__0_4601 -> bb36__0_4601 [label=""];
    bb36__0_4601 -> bb37__0_4601 [label="return"];
    bb37__0_4601 -> bb38__0_4601 [label="0"];
    bb37__0_4601 -> bb39__0_4601 [label="1"];
    bb37__0_4601 -> bb13__0_4601 [label="otherwise"];
    bb38__0_4601 -> bb43__0_4601 [label=""];
    bb39__0_4601 -> bb40__0_4601 [label="return"];
    bb40__0_4601 -> bb42__0_4601 [label=""];
    bb41__0_4601 -> bb42__0_4601 [label=""];
    bb42__0_4601 -> bb43__0_4601 [label=""];
    bb44__0_4601 -> bb46__0_4601 [label="return"];
    bb45__0_4601 -> bb46__0_4601 [label="return"];
}
