digraph Mir_0_1213 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn if_staker::handle_transfer_protocol_if_shares(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::if_staker::TransferProtocolIfShares&lt;ReErased&gt;&gt;, _2: u16, _3: u128) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _4: i64;<br align="left"/>let mut _5: anchor_lang::prelude::Clock;<br align="left"/>let mut _6: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _7: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _8: isize;<br align="left"/>let _9: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _10: !;<br align="left"/>let mut _11: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _12: anchor_lang::prelude::Clock;<br align="left"/>let _13: ();<br align="left"/>let mut _14: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _15: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _16: bool;<br align="left"/>let mut _17: u16;<br align="left"/>let mut _18: ();<br align="left"/>let _19: error::ErrorCode;<br align="left"/>let _20: ();<br align="left"/>let mut _21: &amp;ReErased str;<br align="left"/>let _22: &amp;ReErased str;<br align="left"/>let mut _23: &amp;ReErased std::string::String;<br align="left"/>let _24: &amp;ReErased std::string::String;<br align="left"/>let _25: std::string::String;<br align="left"/>let _26: std::string::String;<br align="left"/>let mut _27: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _28: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _29: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _30: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _31: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _32: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _33: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _34: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _35: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _36: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _37: &amp;ReErased error::ErrorCode;<br align="left"/>let _38: &amp;ReErased error::ErrorCode;<br align="left"/>let _39: ();<br align="left"/>let mut _40: &amp;ReErased str;<br align="left"/>let _41: &amp;ReErased str;<br align="left"/>let mut _42: error::ErrorCode;<br align="left"/>let mut _43: isize;<br align="left"/>let _44: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _45: !;<br align="left"/>let mut _46: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _47: ();<br align="left"/>let mut _48: std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::ProtocolIfSharesTransferConfig&gt;;<br align="left"/>let mut _49: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::ProtocolIfSharesTransferConfig&gt;&gt;;<br align="left"/>let mut _50: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::ProtocolIfSharesTransferConfig&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _51: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::insurance_fund_stake::ProtocolIfSharesTransferConfig&gt;;<br align="left"/>let mut _52: isize;<br align="left"/>let _53: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _54: !;<br align="left"/>let mut _55: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _56: std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::ProtocolIfSharesTransferConfig&gt;;<br align="left"/>let _57: ();<br align="left"/>let mut _58: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _59: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _60: &amp;ReErased state::insurance_fund_stake::ProtocolIfSharesTransferConfig;<br align="left"/>let _61: &amp;ReErased state::insurance_fund_stake::ProtocolIfSharesTransferConfig;<br align="left"/>let mut _62: &amp;ReErased std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::ProtocolIfSharesTransferConfig&gt;;<br align="left"/>let mut _63: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _64: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _65: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _66: isize;<br align="left"/>let _67: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _68: !;<br align="left"/>let mut _69: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _70: ();<br align="left"/>let _71: ();<br align="left"/>let mut _72: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _73: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _74: &amp;ReErased mut state::insurance_fund_stake::ProtocolIfSharesTransferConfig;<br align="left"/>let mut _75: &amp;ReErased mut state::insurance_fund_stake::ProtocolIfSharesTransferConfig;<br align="left"/>let mut _76: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::ProtocolIfSharesTransferConfig&gt;;<br align="left"/>let mut _77: i64;<br align="left"/>let mut _78: isize;<br align="left"/>let _79: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _80: !;<br align="left"/>let mut _81: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _82: ();<br align="left"/>let _83: ();<br align="left"/>let mut _84: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _85: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _86: &amp;ReErased state::insurance_fund_stake::ProtocolIfSharesTransferConfig;<br align="left"/>let _87: &amp;ReErased state::insurance_fund_stake::ProtocolIfSharesTransferConfig;<br align="left"/>let mut _88: &amp;ReErased std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::ProtocolIfSharesTransferConfig&gt;;<br align="left"/>let mut _89: u128;<br align="left"/>let mut _90: isize;<br align="left"/>let _91: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _92: !;<br align="left"/>let mut _93: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _94: ();<br align="left"/>let mut _95: u128;<br align="left"/>let mut _96: &amp;ReErased mut state::insurance_fund_stake::ProtocolIfSharesTransferConfig;<br align="left"/>let mut _97: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::ProtocolIfSharesTransferConfig&gt;;<br align="left"/>let mut _98: (u128, bool);<br align="left"/>let mut _99: std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let mut _100: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;&gt;;<br align="left"/>let mut _101: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _102: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let mut _103: isize;<br align="left"/>let _104: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _105: !;<br align="left"/>let mut _106: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _107: std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let mut _108: std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _109: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;;<br align="left"/>let mut _110: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _111: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _112: isize;<br align="left"/>let _113: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _114: !;<br align="left"/>let mut _115: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _116: std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _117: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _118: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _119: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _120: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _121: isize;<br align="left"/>let _122: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _123: !;<br align="left"/>let mut _124: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _125: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _126: u64;<br align="left"/>let mut _127: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _128: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _129: u64;<br align="left"/>let mut _130: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _131: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _132: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _133: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _134: u128;<br align="left"/>let mut _135: &amp;ReErased mut state::insurance_fund_stake::InsuranceFundStake;<br align="left"/>let mut _136: &amp;ReErased mut state::insurance_fund_stake::InsuranceFundStake;<br align="left"/>let mut _137: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let mut _138: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let mut _139: &amp;ReErased mut state::user::UserStats;<br align="left"/>let mut _140: &amp;ReErased mut state::user::UserStats;<br align="left"/>let mut _141: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _142: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _143: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _144: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _145: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _146: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _147: i64;<br align="left"/>let mut _148: anchor_lang::prelude::Clock;<br align="left"/>let mut _149: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _150: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _151: isize;<br align="left"/>let _152: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _153: !;<br align="left"/>let mut _154: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _155: anchor_lang::prelude::Clock;<br align="left"/>let mut _156: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _157: &amp;ReErased state::state::State;<br align="left"/>let mut _158: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _159: isize;<br align="left"/>let _160: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _161: !;<br align="left"/>let mut _162: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _163: u64;<br align="left"/>let mut _164: ();<br align="left"/>let mut _165: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _166: &amp;ReErased mut instructions::if_staker::TransferProtocolIfShares&lt;ReErased&gt;;<br align="left"/>let mut _167: &amp;ReErased mut instructions::if_staker::TransferProtocolIfShares&lt;ReErased&gt;;<br align="left"/>let mut _168: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _169: &amp;ReErased mut instructions::if_staker::TransferProtocolIfShares&lt;ReErased&gt;;<br align="left"/>let mut _170: &amp;ReErased mut instructions::if_staker::TransferProtocolIfShares&lt;ReErased&gt;;<br align="left"/>let mut _171: &amp;ReErased mut instructions::if_staker::TransferProtocolIfShares&lt;ReErased&gt;;<br align="left"/>let mut _172: &amp;ReErased mut instructions::if_staker::TransferProtocolIfShares&lt;ReErased&gt;;<br align="left"/>let mut _173: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _174: &amp;ReErased mut instructions::if_staker::TransferProtocolIfShares&lt;ReErased&gt;;<br align="left"/>let mut _175: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _176: bool;<br align="left"/>let mut _177: bool;<br align="left"/>let mut _178: isize;<br align="left"/>let mut _179: isize;<br align="left"/>let mut _180: isize;<br align="left"/>let mut _181: isize;<br align="left"/>let mut _182: isize;<br align="left"/>let mut _183: isize;<br align="left"/>let mut _184: isize;<br align="left"/>let mut _185: isize;<br align="left"/>let mut _186: isize;<br align="left"/>let mut _187: isize;<br align="left"/>let mut _188: isize;<br align="left"/>let mut _189: isize;<br align="left"/>let mut _190: isize;<br align="left"/>let mut _191: isize;<br align="left"/>let mut _192: isize;<br align="left"/>let mut _193: isize;<br align="left"/>let mut _194: isize;<br align="left"/>let mut _195: isize;<br align="left"/>let mut _196: isize;<br align="left"/>let mut _197: isize;<br align="left"/>let mut _198: isize;<br align="left"/>let mut _199: isize;<br align="left"/>let mut _200: isize;<br align="left"/>let mut _201: isize;<br align="left"/>let mut _202: isize;<br align="left"/>let mut _203: isize;<br align="left"/>let mut _204: isize;<br align="left"/>let mut _205: isize;<br align="left"/>let mut _206: isize;<br align="left"/>let mut _207: isize;<br align="left"/>let mut _208: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _209: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug market_index =&gt; _2;<br align="left"/>debug shares =&gt; _3;<br align="left"/>debug now =&gt; _4;<br align="left"/>debug residual =&gt; _9;<br align="left"/>debug val =&gt; _12;<br align="left"/>debug error_code =&gt; _19;<br align="left"/>debug res =&gt; _26;<br align="left"/>debug residual =&gt; _44;<br align="left"/>debug val =&gt; _47;<br align="left"/>debug transfer_config =&gt; _48;<br align="left"/>debug residual =&gt; _53;<br align="left"/>debug val =&gt; _56;<br align="left"/>debug residual =&gt; _67;<br align="left"/>debug val =&gt; _70;<br align="left"/>debug residual =&gt; _79;<br align="left"/>debug val =&gt; _82;<br align="left"/>debug residual =&gt; _91;<br align="left"/>debug val =&gt; _94;<br align="left"/>debug if_stake =&gt; _99;<br align="left"/>debug residual =&gt; _104;<br align="left"/>debug val =&gt; _107;<br align="left"/>debug user_stats =&gt; _108;<br align="left"/>debug residual =&gt; _113;<br align="left"/>debug val =&gt; _116;<br align="left"/>debug spot_market =&gt; _117;<br align="left"/>debug residual =&gt; _122;<br align="left"/>debug val =&gt; _125;<br align="left"/>debug residual =&gt; _152;<br align="left"/>debug val =&gt; _155;<br align="left"/>debug residual =&gt; _160;<br align="left"/>debug val =&gt; _163;<br align="left"/>>;
    bb0__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_177 = const false<br/>_176 = const false<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/></td></tr><tr><td align="left">_7 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb1__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">_6 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _7)</td></tr></table>>];
    bb2__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>_8 = discriminant(_6)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb3__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = move ((_6 as Continue).0: anchor_lang::prelude::Clock)<br/>_5 = move _12<br/>StorageDead(_12)<br/>_4 = (_5.4: i64)<br/>_178 = discriminant(_6)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_17 = _2<br/>_16 = Eq(move _17, const _)<br/></td></tr><tr><td align="left">switchInt(move _16)</td></tr></table>>];
    bb4__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>_9 = move ((_6 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_11)<br/>_11 = move _9<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _11)</td></tr></table>>];
    bb6__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_9)<br/>_200 = discriminant(_6)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageLive(_18)<br/>_18 = ()<br/>_15 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _18)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageLive(_19)<br/>_19 = error::ErrorCode::DefaultError<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>_165 = const _<br/>_30 = &amp;(*_165)<br/>_29 = &amp;(*_30)<br/>_28 = move _29 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_29)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>_38 = &amp;_19<br/>_37 = &amp;(*_38)<br/></td></tr><tr><td align="left">_36 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _37)</td></tr></table>>];
    bb9__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>_35 = [move _36]<br/>StorageDead(_36)<br/>_34 = &amp;_35<br/>_33 = &amp;(*_34)<br/>_32 = move _33 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">_27 = Arguments::&lt;'_&gt;::new_v1(move _28, move _32)</td></tr></table>>];
    bb10__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">_26 = format(move _27)</td></tr></table>>];
    bb11__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_38)<br/>StorageDead(_35)<br/>StorageDead(_34)<br/>StorageDead(_30)<br/>_25 = move _26<br/>StorageDead(_26)<br/>_24 = &amp;_25<br/>_23 = &amp;(*_24)<br/></td></tr><tr><td align="left">_22 = &lt;String as Deref&gt;::deref(move _23)</td></tr></table>>];
    bb12__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">_21 = &amp;(*_22)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">_20 = solana_program::log::sol_log(move _21)</td></tr></table>>];
    bb13__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/></td></tr><tr><td align="left">drop(_25)</td></tr></table>>];
    bb14__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_22)<br/>StorageDead(_20)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>_41 = const &quot;must be if for quote spot market&quot;<br/>_40 = &amp;(*_41)<br/></td></tr><tr><td align="left">_39 = solana_program::log::sol_log(move _40)</td></tr></table>>];
    bb15__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageDead(_41)<br/>StorageDead(_39)<br/>StorageLive(_42)<br/>_42 = _19<br/>_15 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _42)<br/>StorageDead(_42)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/></td></tr><tr><td align="left">_14 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _15)</td></tr></table>>];
    bb17__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>_43 = discriminant(_14)<br/></td></tr><tr><td align="left">switchInt(move _43)</td></tr></table>>];
    bb18__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>_47 = ((_14 as Continue).0: ())<br/>_13 = _47<br/>StorageDead(_47)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>_166 = deref_copy (_1.1: &amp;mut instructions::if_staker::TransferProtocolIfShares&lt;'_&gt;)<br/>_51 = &amp;((*_166).1: anchor_lang::prelude::AccountLoader&lt;'_, state::insurance_fund_stake::ProtocolIfSharesTransferConfig&gt;)<br/></td></tr><tr><td align="left">_50 = anchor_lang::prelude::AccountLoader::&lt;'_, ProtocolIfSharesTransferConfig&gt;::load_mut(move _51)</td></tr></table>>];
    bb19__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_44)<br/>_44 = ((_14 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_46)<br/>_46 = _44<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _46)</td></tr></table>>];
    bb20__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_44)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/></td></tr><tr><td align="left">_49 = &lt;std::result::Result&lt;RefMut&lt;'_, ProtocolIfSharesTransferConfig&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _50)</td></tr></table>>];
    bb22__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>_52 = discriminant(_49)<br/></td></tr><tr><td align="left">switchInt(move _52)</td></tr></table>>];
    bb23__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_56)<br/>_56 = move ((_49 as Continue).0: std::cell::RefMut&lt;'_, state::insurance_fund_stake::ProtocolIfSharesTransferConfig&gt;)<br/>_48 = move _56<br/>StorageDead(_56)<br/>_180 = discriminant(_49)<br/>StorageDead(_49)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>_62 = &amp;_48<br/></td></tr><tr><td align="left">_61 = &lt;RefMut&lt;'_, ProtocolIfSharesTransferConfig&gt; as Deref&gt;::deref(move _62)</td></tr></table>>];
    bb24__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_53)<br/>_53 = move ((_49 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_55)<br/>_55 = move _53<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _55)</td></tr></table>>];
    bb25__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_53)<br/>_198 = discriminant(_49)<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">_60 = &amp;(*_61)<br/>StorageDead(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>_167 = deref_copy (_1.1: &amp;mut instructions::if_staker::TransferProtocolIfShares&lt;'_&gt;)<br/>_65 = &amp;((*_167).0: anchor_lang::prelude::Signer&lt;'_&gt;)<br/></td></tr><tr><td align="left">_64 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as Deref&gt;::deref(move _65)</td></tr></table>>];
    bb27__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>_168 = deref_copy ((*_64).0: &amp;anchor_lang::prelude::Pubkey)<br/>_63 = &amp;(*_168)<br/></td></tr><tr><td align="left">_59 = ProtocolIfSharesTransferConfig::validate_signer(move _60, move _63)</td></tr></table>>];
    bb28__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">_58 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _59)</td></tr></table>>];
    bb29__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>_66 = discriminant(_58)<br/></td></tr><tr><td align="left">switchInt(move _66)</td></tr></table>>];
    bb30__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_70)<br/>_70 = ((_58 as Continue).0: ())<br/>_57 = _70<br/>StorageDead(_70)<br/>StorageDead(_64)<br/>StorageDead(_61)<br/>StorageDead(_58)<br/>StorageDead(_57)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>_76 = &amp;mut _48<br/></td></tr><tr><td align="left">_75 = &lt;RefMut&lt;'_, ProtocolIfSharesTransferConfig&gt; as DerefMut&gt;::deref_mut(move _76)</td></tr></table>>];
    bb31__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_67)<br/>_67 = ((_58 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_69)<br/>_69 = _67<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _69)</td></tr></table>>];
    bb32__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageDead(_67)<br/>StorageDead(_64)<br/>StorageDead(_61)<br/>StorageDead(_58)<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">_74 = &amp;mut (*_75)<br/>StorageDead(_76)<br/>StorageLive(_77)<br/>_77 = _4<br/></td></tr><tr><td align="left">_73 = ProtocolIfSharesTransferConfig::update_epoch(move _74, move _77)</td></tr></table>>];
    bb34__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>StorageDead(_74)<br/></td></tr><tr><td align="left">_72 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _73)</td></tr></table>>];
    bb35__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>_78 = discriminant(_72)<br/></td></tr><tr><td align="left">switchInt(move _78)</td></tr></table>>];
    bb36__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageLive(_82)<br/>_82 = ((_72 as Continue).0: ())<br/>_71 = _82<br/>StorageDead(_82)<br/>StorageDead(_75)<br/>StorageDead(_72)<br/>StorageDead(_71)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>_88 = &amp;_48<br/></td></tr><tr><td align="left">_87 = &lt;RefMut&lt;'_, ProtocolIfSharesTransferConfig&gt; as Deref&gt;::deref(move _88)</td></tr></table>>];
    bb37__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_79)<br/>_79 = ((_72 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_81)<br/>_81 = _79<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _81)</td></tr></table>>];
    bb38__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>StorageDead(_79)<br/>StorageDead(_75)<br/>StorageDead(_72)<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">_86 = &amp;(*_87)<br/>StorageDead(_88)<br/>StorageLive(_89)<br/>_89 = _3<br/></td></tr><tr><td align="left">_85 = ProtocolIfSharesTransferConfig::validate_transfer(move _86, move _89)</td></tr></table>>];
    bb40__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>StorageDead(_86)<br/></td></tr><tr><td align="left">_84 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _85)</td></tr></table>>];
    bb41__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>_90 = discriminant(_84)<br/></td></tr><tr><td align="left">switchInt(move _90)</td></tr></table>>];
    bb42__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageLive(_94)<br/>_94 = ((_84 as Continue).0: ())<br/>_83 = _94<br/>StorageDead(_94)<br/>StorageDead(_87)<br/>StorageDead(_84)<br/>StorageDead(_83)<br/>StorageLive(_95)<br/>_95 = _3<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>_97 = &amp;mut _48<br/></td></tr><tr><td align="left">_96 = &lt;RefMut&lt;'_, ProtocolIfSharesTransferConfig&gt; as DerefMut&gt;::deref_mut(move _97)</td></tr></table>>];
    bb43__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageLive(_91)<br/>_91 = ((_84 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_93)<br/>_93 = _91<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _93)</td></tr></table>>];
    bb44__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageDead(_91)<br/>StorageDead(_87)<br/>StorageDead(_84)<br/>StorageDead(_83)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>_98 = CheckedAdd(((*_96).2: u128), _95)<br/></td></tr><tr><td align="left">assert(!move (_98.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, ((*_96).2: u128), move _95)</td></tr></table>>];
    bb46__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">((*_96).2: u128) = move (_98.0: u128)<br/>StorageDead(_95)<br/>StorageDead(_96)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>_169 = deref_copy (_1.1: &amp;mut instructions::if_staker::TransferProtocolIfShares&lt;'_&gt;)<br/>_102 = &amp;((*_169).4: anchor_lang::prelude::AccountLoader&lt;'_, state::insurance_fund_stake::InsuranceFundStake&gt;)<br/></td></tr><tr><td align="left">_101 = anchor_lang::prelude::AccountLoader::&lt;'_, InsuranceFundStake&gt;::load_mut(move _102)</td></tr></table>>];
    bb47__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/></td></tr><tr><td align="left">_100 = &lt;std::result::Result&lt;RefMut&lt;'_, InsuranceFundStake&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _101)</td></tr></table>>];
    bb48__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/>_103 = discriminant(_100)<br/></td></tr><tr><td align="left">switchInt(move _103)</td></tr></table>>];
    bb49__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageLive(_107)<br/>_107 = move ((_100 as Continue).0: std::cell::RefMut&lt;'_, state::insurance_fund_stake::InsuranceFundStake&gt;)<br/>_99 = move _107<br/>StorageDead(_107)<br/>_182 = discriminant(_100)<br/>StorageDead(_100)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>_170 = deref_copy (_1.1: &amp;mut instructions::if_staker::TransferProtocolIfShares&lt;'_&gt;)<br/>_111 = &amp;((*_170).5: anchor_lang::prelude::AccountLoader&lt;'_, state::user::UserStats&gt;)<br/></td></tr><tr><td align="left">_110 = anchor_lang::prelude::AccountLoader::&lt;'_, UserStats&gt;::load_mut(move _111)</td></tr></table>>];
    bb50__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageLive(_104)<br/>_104 = move ((_100 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_106)<br/>_106 = move _104<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _106)</td></tr></table>>];
    bb51__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/>StorageDead(_104)<br/>_196 = discriminant(_100)<br/>StorageDead(_100)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb52__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/></td></tr><tr><td align="left">_109 = &lt;std::result::Result&lt;RefMut&lt;'_, UserStats&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _110)</td></tr></table>>];
    bb53__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/>_112 = discriminant(_109)<br/></td></tr><tr><td align="left">switchInt(move _112)</td></tr></table>>];
    bb54__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageLive(_116)<br/>_116 = move ((_109 as Continue).0: std::cell::RefMut&lt;'_, state::user::UserStats&gt;)<br/>_108 = move _116<br/>StorageDead(_116)<br/>_184 = discriminant(_109)<br/>StorageDead(_109)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>_171 = deref_copy (_1.1: &amp;mut instructions::if_staker::TransferProtocolIfShares&lt;'_&gt;)<br/>_120 = &amp;((*_171).3: anchor_lang::prelude::AccountLoader&lt;'_, state::spot_market::SpotMarket&gt;)<br/></td></tr><tr><td align="left">_119 = anchor_lang::prelude::AccountLoader::&lt;'_, SpotMarket&gt;::load_mut(move _120)</td></tr></table>>];
    bb55__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageLive(_113)<br/>_113 = move ((_109 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_115)<br/>_115 = move _113<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _115)</td></tr></table>>];
    bb56__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_115)<br/>StorageDead(_113)<br/>_194 = discriminant(_109)<br/>StorageDead(_109)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb57__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/></td></tr><tr><td align="left">_118 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _119)</td></tr></table>>];
    bb58__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/>_121 = discriminant(_118)<br/></td></tr><tr><td align="left">switchInt(move _121)</td></tr></table>>];
    bb59__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageLive(_125)<br/>_125 = move ((_118 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_117 = move _125<br/>StorageDead(_125)<br/>_186 = discriminant(_118)<br/>StorageDead(_118)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>_172 = deref_copy (_1.1: &amp;mut instructions::if_staker::TransferProtocolIfShares&lt;'_&gt;)<br/>_173 = deref_copy ((*_172).7: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_208 = (((_173.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_133 = &amp;(*_208)<br/></td></tr><tr><td align="left">_132 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _133)</td></tr></table>>];
    bb60__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageLive(_122)<br/>_122 = move ((_118 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_124)<br/>_124 = move _122<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _124)</td></tr></table>>];
    bb61__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_124)<br/>StorageDead(_122)<br/>_192 = discriminant(_118)<br/>StorageDead(_118)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">_131 = &amp;(*_132)<br/></td></tr><tr><td align="left">_130 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _131)</td></tr></table>>];
    bb63__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/>StorageDead(_131)<br/>_129 = ((*_130).2: u64)<br/>StorageLive(_134)<br/>_134 = _3<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>_138 = &amp;mut _99<br/>_137 = &amp;mut (*_138)<br/></td></tr><tr><td align="left">_136 = &lt;RefMut&lt;'_, InsuranceFundStake&gt; as DerefMut&gt;::deref_mut(move _137)</td></tr></table>>];
    bb64__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">_135 = &amp;mut (*_136)<br/>StorageDead(_137)<br/>StorageLive(_139)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>_142 = &amp;mut _108<br/>_141 = &amp;mut (*_142)<br/></td></tr><tr><td align="left">_140 = &lt;RefMut&lt;'_, UserStats&gt; as DerefMut&gt;::deref_mut(move _141)</td></tr></table>>];
    bb65__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">_139 = &amp;mut (*_140)<br/>StorageDead(_141)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>_146 = &amp;mut _117<br/>_145 = &amp;mut (*_146)<br/></td></tr><tr><td align="left">_144 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _145)</td></tr></table>>];
    bb66__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">_143 = &amp;mut (*_144)<br/>StorageDead(_145)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>StorageLive(_150)<br/></td></tr><tr><td align="left">_150 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb67__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left">_149 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _150)</td></tr></table>>];
    bb68__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">_176 = const true<br/>_177 = const true<br/>StorageDead(_150)<br/>_151 = discriminant(_149)<br/></td></tr><tr><td align="left">switchInt(move _151)</td></tr></table>>];
    bb69__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageLive(_155)<br/>_155 = move ((_149 as Continue).0: anchor_lang::prelude::Clock)<br/>_148 = move _155<br/>StorageDead(_155)<br/>_147 = (_148.4: i64)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>_174 = deref_copy (_1.1: &amp;mut instructions::if_staker::TransferProtocolIfShares&lt;'_&gt;)<br/>_175 = deref_copy ((*_174).2: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_209 = (((_175.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_158 = &amp;(*_209)<br/></td></tr><tr><td align="left">_157 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _158)</td></tr></table>>];
    bb70__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageLive(_152)<br/>_152 = move ((_149 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_154)<br/>_154 = move _152<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _154)</td></tr></table>>];
    bb71__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_154)<br/>StorageDead(_152)<br/>StorageDead(_147)<br/>StorageDead(_143)<br/>StorageDead(_139)<br/>StorageDead(_135)<br/>StorageDead(_134)<br/>StorageDead(_129)<br/>StorageDead(_128)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb72__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_158)<br/>_156 = ((*_157).3: anchor_lang::prelude::Pubkey)<br/></td></tr><tr><td align="left">_128 = transfer_protocol_insurance_fund_stake(move _129, move _134, move _135, move _139, move _143, move _147, move _156)</td></tr></table>>];
    bb73__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_156)<br/>StorageDead(_147)<br/>StorageDead(_143)<br/>StorageDead(_139)<br/>StorageDead(_135)<br/>StorageDead(_134)<br/>StorageDead(_129)<br/></td></tr><tr><td align="left">_127 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _128)</td></tr></table>>];
    bb74__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>_159 = discriminant(_127)<br/></td></tr><tr><td align="left">switchInt(move _159)</td></tr></table>>];
    bb75__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageLive(_163)<br/>_163 = ((_127 as Continue).0: u64)<br/>_126 = _163<br/>StorageDead(_163)<br/>StorageDead(_157)<br/>_188 = discriminant(_149)<br/>_176 = const false<br/>_177 = const false<br/>StorageDead(_149)<br/>StorageDead(_148)<br/>StorageDead(_146)<br/>StorageDead(_144)<br/>StorageDead(_142)<br/>StorageDead(_140)<br/>StorageDead(_138)<br/>StorageDead(_136)<br/>StorageDead(_132)<br/>StorageDead(_130)<br/>StorageDead(_127)<br/>StorageDead(_126)<br/>StorageLive(_164)<br/>_164 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _164)<br/>StorageDead(_164)<br/></td></tr><tr><td align="left">drop(_117)</td></tr></table>>];
    bb76__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageLive(_160)<br/>_160 = ((_127 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_162)<br/>_162 = _160<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _162)</td></tr></table>>];
    bb77__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_162)<br/>StorageDead(_160)<br/>StorageDead(_157)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb78__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/></td></tr><tr><td align="left">drop(_108)</td></tr></table>>];
    bb79__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/></td></tr><tr><td align="left">drop(_99)</td></tr></table>>];
    bb80__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/></td></tr><tr><td align="left">drop(_48)</td></tr></table>>];
    bb81__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb82__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/></td></tr><tr><td align="left">drop(_108)</td></tr></table>>];
    bb83__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/></td></tr><tr><td align="left">drop(_99)</td></tr></table>>];
    bb84__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb85__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left">drop(_48)</td></tr></table>>];
    bb86__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb87__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb88__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left">return</td></tr></table>>];
    bb89__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">89 (cleanup)</td></tr><tr><td align="left">drop(_117)</td></tr></table>>];
    bb90__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">90 (cleanup)</td></tr><tr><td align="left">drop(_108)</td></tr></table>>];
    bb91__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">91 (cleanup)</td></tr><tr><td align="left">drop(_99)</td></tr></table>>];
    bb92__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">92 (cleanup)</td></tr><tr><td align="left">drop(_48)</td></tr></table>>];
    bb93__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">93 (cleanup)</td></tr><tr><td align="left">drop(_25)</td></tr></table>>];
    bb94__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">94 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb95__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">_190 = discriminant(_149)<br/>_176 = const false<br/>_177 = const false<br/>StorageDead(_149)<br/>StorageDead(_148)<br/>StorageDead(_146)<br/>StorageDead(_144)<br/>StorageDead(_142)<br/>StorageDead(_140)<br/>StorageDead(_138)<br/>StorageDead(_136)<br/>StorageDead(_132)<br/>StorageDead(_130)<br/>StorageDead(_127)<br/>StorageDead(_126)<br/></td></tr><tr><td align="left">drop(_117)</td></tr></table>>];
    bb96__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">96 (cleanup)</td></tr><tr><td align="left" balign="left">_202 = discriminant(_149)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb97__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">97 (cleanup)</td></tr><tr><td align="left" balign="left">_203 = discriminant(_118)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb98__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">98 (cleanup)</td></tr><tr><td align="left" balign="left">_204 = discriminant(_109)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb99__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">99 (cleanup)</td></tr><tr><td align="left" balign="left">_205 = discriminant(_100)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb100__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">100 (cleanup)</td></tr><tr><td align="left" balign="left">_206 = discriminant(_49)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb101__0_1213 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">101 (cleanup)</td></tr><tr><td align="left" balign="left">_207 = discriminant(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_1213 -> bb1__0_1213 [label="return"];
    bb1__0_1213 -> bb2__0_1213 [label="return"];
    bb1__0_1213 -> bb94__0_1213 [label="unwind"];
    bb2__0_1213 -> bb3__0_1213 [label="0"];
    bb2__0_1213 -> bb5__0_1213 [label="1"];
    bb2__0_1213 -> bb4__0_1213 [label="otherwise"];
    bb3__0_1213 -> bb8__0_1213 [label="0"];
    bb3__0_1213 -> bb7__0_1213 [label="otherwise"];
    bb5__0_1213 -> bb6__0_1213 [label="return"];
    bb5__0_1213 -> bb101__0_1213 [label="unwind"];
    bb6__0_1213 -> bb87__0_1213 [label=""];
    bb7__0_1213 -> bb16__0_1213 [label=""];
    bb8__0_1213 -> bb9__0_1213 [label="return"];
    bb9__0_1213 -> bb10__0_1213 [label="return"];
    bb10__0_1213 -> bb11__0_1213 [label="return"];
    bb11__0_1213 -> bb12__0_1213 [label="return"];
    bb11__0_1213 -> bb93__0_1213 [label="unwind"];
    bb12__0_1213 -> bb13__0_1213 [label="return"];
    bb12__0_1213 -> bb93__0_1213 [label="unwind"];
    bb13__0_1213 -> bb14__0_1213 [label="return"];
    bb13__0_1213 -> bb94__0_1213 [label="unwind"];
    bb14__0_1213 -> bb15__0_1213 [label="return"];
    bb15__0_1213 -> bb16__0_1213 [label=""];
    bb16__0_1213 -> bb17__0_1213 [label="return"];
    bb17__0_1213 -> bb18__0_1213 [label="0"];
    bb17__0_1213 -> bb19__0_1213 [label="1"];
    bb17__0_1213 -> bb4__0_1213 [label="otherwise"];
    bb18__0_1213 -> bb21__0_1213 [label="return"];
    bb19__0_1213 -> bb20__0_1213 [label="return"];
    bb20__0_1213 -> bb87__0_1213 [label=""];
    bb21__0_1213 -> bb22__0_1213 [label="return"];
    bb21__0_1213 -> bb94__0_1213 [label="unwind"];
    bb22__0_1213 -> bb23__0_1213 [label="0"];
    bb22__0_1213 -> bb24__0_1213 [label="1"];
    bb22__0_1213 -> bb4__0_1213 [label="otherwise"];
    bb23__0_1213 -> bb26__0_1213 [label="return"];
    bb23__0_1213 -> bb92__0_1213 [label="unwind"];
    bb24__0_1213 -> bb25__0_1213 [label="return"];
    bb24__0_1213 -> bb100__0_1213 [label="unwind"];
    bb25__0_1213 -> bb86__0_1213 [label=""];
    bb26__0_1213 -> bb27__0_1213 [label="return"];
    bb26__0_1213 -> bb92__0_1213 [label="unwind"];
    bb27__0_1213 -> bb28__0_1213 [label="return"];
    bb27__0_1213 -> bb92__0_1213 [label="unwind"];
    bb28__0_1213 -> bb29__0_1213 [label="return"];
    bb28__0_1213 -> bb92__0_1213 [label="unwind"];
    bb29__0_1213 -> bb30__0_1213 [label="0"];
    bb29__0_1213 -> bb31__0_1213 [label="1"];
    bb29__0_1213 -> bb4__0_1213 [label="otherwise"];
    bb30__0_1213 -> bb33__0_1213 [label="return"];
    bb30__0_1213 -> bb92__0_1213 [label="unwind"];
    bb31__0_1213 -> bb32__0_1213 [label="return"];
    bb31__0_1213 -> bb92__0_1213 [label="unwind"];
    bb32__0_1213 -> bb85__0_1213 [label=""];
    bb33__0_1213 -> bb34__0_1213 [label="return"];
    bb33__0_1213 -> bb92__0_1213 [label="unwind"];
    bb34__0_1213 -> bb35__0_1213 [label="return"];
    bb34__0_1213 -> bb92__0_1213 [label="unwind"];
    bb35__0_1213 -> bb36__0_1213 [label="0"];
    bb35__0_1213 -> bb37__0_1213 [label="1"];
    bb35__0_1213 -> bb4__0_1213 [label="otherwise"];
    bb36__0_1213 -> bb39__0_1213 [label="return"];
    bb36__0_1213 -> bb92__0_1213 [label="unwind"];
    bb37__0_1213 -> bb38__0_1213 [label="return"];
    bb37__0_1213 -> bb92__0_1213 [label="unwind"];
    bb38__0_1213 -> bb85__0_1213 [label=""];
    bb39__0_1213 -> bb40__0_1213 [label="return"];
    bb39__0_1213 -> bb92__0_1213 [label="unwind"];
    bb40__0_1213 -> bb41__0_1213 [label="return"];
    bb40__0_1213 -> bb92__0_1213 [label="unwind"];
    bb41__0_1213 -> bb42__0_1213 [label="0"];
    bb41__0_1213 -> bb43__0_1213 [label="1"];
    bb41__0_1213 -> bb4__0_1213 [label="otherwise"];
    bb42__0_1213 -> bb45__0_1213 [label="return"];
    bb42__0_1213 -> bb92__0_1213 [label="unwind"];
    bb43__0_1213 -> bb44__0_1213 [label="return"];
    bb43__0_1213 -> bb92__0_1213 [label="unwind"];
    bb44__0_1213 -> bb85__0_1213 [label=""];
    bb45__0_1213 -> bb46__0_1213 [label="success"];
    bb45__0_1213 -> bb92__0_1213 [label="unwind"];
    bb46__0_1213 -> bb47__0_1213 [label="return"];
    bb46__0_1213 -> bb92__0_1213 [label="unwind"];
    bb47__0_1213 -> bb48__0_1213 [label="return"];
    bb47__0_1213 -> bb92__0_1213 [label="unwind"];
    bb48__0_1213 -> bb49__0_1213 [label="0"];
    bb48__0_1213 -> bb50__0_1213 [label="1"];
    bb48__0_1213 -> bb4__0_1213 [label="otherwise"];
    bb49__0_1213 -> bb52__0_1213 [label="return"];
    bb49__0_1213 -> bb91__0_1213 [label="unwind"];
    bb50__0_1213 -> bb51__0_1213 [label="return"];
    bb50__0_1213 -> bb99__0_1213 [label="unwind"];
    bb51__0_1213 -> bb84__0_1213 [label=""];
    bb52__0_1213 -> bb53__0_1213 [label="return"];
    bb52__0_1213 -> bb91__0_1213 [label="unwind"];
    bb53__0_1213 -> bb54__0_1213 [label="0"];
    bb53__0_1213 -> bb55__0_1213 [label="1"];
    bb53__0_1213 -> bb4__0_1213 [label="otherwise"];
    bb54__0_1213 -> bb57__0_1213 [label="return"];
    bb54__0_1213 -> bb90__0_1213 [label="unwind"];
    bb55__0_1213 -> bb56__0_1213 [label="return"];
    bb55__0_1213 -> bb98__0_1213 [label="unwind"];
    bb56__0_1213 -> bb83__0_1213 [label=""];
    bb57__0_1213 -> bb58__0_1213 [label="return"];
    bb57__0_1213 -> bb90__0_1213 [label="unwind"];
    bb58__0_1213 -> bb59__0_1213 [label="0"];
    bb58__0_1213 -> bb60__0_1213 [label="1"];
    bb58__0_1213 -> bb4__0_1213 [label="otherwise"];
    bb59__0_1213 -> bb62__0_1213 [label="return"];
    bb59__0_1213 -> bb89__0_1213 [label="unwind"];
    bb60__0_1213 -> bb61__0_1213 [label="return"];
    bb60__0_1213 -> bb97__0_1213 [label="unwind"];
    bb61__0_1213 -> bb82__0_1213 [label=""];
    bb62__0_1213 -> bb63__0_1213 [label="return"];
    bb62__0_1213 -> bb89__0_1213 [label="unwind"];
    bb63__0_1213 -> bb64__0_1213 [label="return"];
    bb63__0_1213 -> bb89__0_1213 [label="unwind"];
    bb64__0_1213 -> bb65__0_1213 [label="return"];
    bb64__0_1213 -> bb89__0_1213 [label="unwind"];
    bb65__0_1213 -> bb66__0_1213 [label="return"];
    bb65__0_1213 -> bb89__0_1213 [label="unwind"];
    bb66__0_1213 -> bb67__0_1213 [label="return"];
    bb66__0_1213 -> bb89__0_1213 [label="unwind"];
    bb67__0_1213 -> bb68__0_1213 [label="return"];
    bb67__0_1213 -> bb89__0_1213 [label="unwind"];
    bb68__0_1213 -> bb69__0_1213 [label="0"];
    bb68__0_1213 -> bb70__0_1213 [label="1"];
    bb68__0_1213 -> bb4__0_1213 [label="otherwise"];
    bb69__0_1213 -> bb72__0_1213 [label="return"];
    bb69__0_1213 -> bb96__0_1213 [label="unwind"];
    bb70__0_1213 -> bb71__0_1213 [label="return"];
    bb70__0_1213 -> bb96__0_1213 [label="unwind"];
    bb71__0_1213 -> bb95__0_1213 [label=""];
    bb72__0_1213 -> bb73__0_1213 [label="return"];
    bb72__0_1213 -> bb96__0_1213 [label="unwind"];
    bb73__0_1213 -> bb74__0_1213 [label="return"];
    bb73__0_1213 -> bb96__0_1213 [label="unwind"];
    bb74__0_1213 -> bb75__0_1213 [label="0"];
    bb74__0_1213 -> bb76__0_1213 [label="1"];
    bb74__0_1213 -> bb4__0_1213 [label="otherwise"];
    bb75__0_1213 -> bb78__0_1213 [label="return"];
    bb75__0_1213 -> bb90__0_1213 [label="unwind"];
    bb76__0_1213 -> bb77__0_1213 [label="return"];
    bb76__0_1213 -> bb96__0_1213 [label="unwind"];
    bb77__0_1213 -> bb95__0_1213 [label=""];
    bb78__0_1213 -> bb79__0_1213 [label="return"];
    bb78__0_1213 -> bb91__0_1213 [label="unwind"];
    bb79__0_1213 -> bb80__0_1213 [label="return"];
    bb79__0_1213 -> bb92__0_1213 [label="unwind"];
    bb80__0_1213 -> bb81__0_1213 [label="return"];
    bb80__0_1213 -> bb94__0_1213 [label="unwind"];
    bb81__0_1213 -> bb88__0_1213 [label=""];
    bb82__0_1213 -> bb83__0_1213 [label="return"];
    bb82__0_1213 -> bb91__0_1213 [label="unwind"];
    bb83__0_1213 -> bb84__0_1213 [label="return"];
    bb83__0_1213 -> bb92__0_1213 [label="unwind"];
    bb84__0_1213 -> bb85__0_1213 [label=""];
    bb85__0_1213 -> bb86__0_1213 [label="return"];
    bb85__0_1213 -> bb94__0_1213 [label="unwind"];
    bb86__0_1213 -> bb87__0_1213 [label=""];
    bb87__0_1213 -> bb88__0_1213 [label=""];
    bb89__0_1213 -> bb90__0_1213 [label="return"];
    bb90__0_1213 -> bb91__0_1213 [label="return"];
    bb91__0_1213 -> bb92__0_1213 [label="return"];
    bb92__0_1213 -> bb94__0_1213 [label="return"];
    bb93__0_1213 -> bb94__0_1213 [label="return"];
    bb95__0_1213 -> bb82__0_1213 [label="return"];
    bb95__0_1213 -> bb90__0_1213 [label="unwind"];
    bb96__0_1213 -> bb89__0_1213 [label=""];
    bb97__0_1213 -> bb90__0_1213 [label=""];
    bb98__0_1213 -> bb91__0_1213 [label=""];
    bb99__0_1213 -> bb92__0_1213 [label=""];
    bb100__0_1213 -> bb94__0_1213 [label=""];
    bb101__0_1213 -> bb94__0_1213 [label=""];
}
