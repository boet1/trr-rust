digraph Mir_0_14985 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;i64 as CheckedFloorDiv&gt;::checked_floor_div(_1: &amp;ReErased i64, _2: i64) -&gt; std::option::Option&lt;i64&gt;<br align="left"/>let _3: i64;<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::option::Option&lt;std::convert::Infallible&gt;, i64&gt;;<br align="left"/>let mut _5: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _6: i64;<br align="left"/>let mut _7: i64;<br align="left"/>let mut _8: isize;<br align="left"/>let _9: std::option::Option&lt;std::convert::Infallible&gt;;<br align="left"/>let mut _10: !;<br align="left"/>let mut _11: std::option::Option&lt;std::convert::Infallible&gt;;<br align="left"/>let _12: i64;<br align="left"/>let _13: i64;<br align="left"/>let mut _14: std::ops::ControlFlow&lt;std::option::Option&lt;std::convert::Infallible&gt;, i64&gt;;<br align="left"/>let mut _15: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _16: i64;<br align="left"/>let mut _17: i64;<br align="left"/>let mut _18: isize;<br align="left"/>let _19: std::option::Option&lt;std::convert::Infallible&gt;;<br align="left"/>let mut _20: !;<br align="left"/>let mut _21: std::option::Option&lt;std::convert::Infallible&gt;;<br align="left"/>let _22: i64;<br align="left"/>let mut _23: bool;<br align="left"/>let mut _24: i64;<br align="left"/>let mut _25: i64;<br align="left"/>let mut _26: i64;<br align="left"/>let mut _27: i64;<br align="left"/>let mut _28: i64;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug rhs =&gt; _2;<br align="left"/>debug quotient =&gt; _3;<br align="left"/>debug residual =&gt; _9;<br align="left"/>debug val =&gt; _12;<br align="left"/>debug remainder =&gt; _13;<br align="left"/>debug residual =&gt; _19;<br align="left"/>debug val =&gt; _22;<br align="left"/>>;
    bb0__0_14985 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = (*_1)<br/>StorageLive(_7)<br/>_7 = _2<br/></td></tr><tr><td align="left">_5 = core::num::&lt;impl i64&gt;::checked_div(move _6, move _7)</td></tr></table>>];
    bb1__0_14985 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;Option&lt;i64&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb2__0_14985 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_8 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb3__0_14985 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_4 as Continue).0: i64)<br/>_3 = _12<br/>StorageDead(_12)<br/>StorageDead(_4)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_16 = (*_1)<br/>StorageLive(_17)<br/>_17 = _2<br/></td></tr><tr><td align="left">_15 = core::num::&lt;impl i64&gt;::checked_rem(move _16, move _17)</td></tr></table>>];
    bb4__0_14985 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_14985 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>_9 = ((_4 as Break).0: std::option::Option&lt;std::convert::Infallible&gt;)<br/>StorageLive(_11)<br/>_11 = _9<br/></td></tr><tr><td align="left">_0 = &lt;Option&lt;i64&gt; as FromResidual&lt;Option&lt;Infallible&gt;&gt;&gt;::from_residual(move _11)</td></tr></table>>];
    bb6__0_14985 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_9)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_14985 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">_14 = &lt;Option&lt;i64&gt; as Try&gt;::branch(move _15)</td></tr></table>>];
    bb8__0_14985 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>_18 = discriminant(_14)<br/></td></tr><tr><td align="left">switchInt(move _18)</td></tr></table>>];
    bb9__0_14985 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_22)<br/>_22 = ((_14 as Continue).0: i64)<br/>_13 = _22<br/>StorageDead(_22)<br/>StorageDead(_14)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_24 = _13<br/>StorageLive(_25)<br/></td></tr><tr><td align="left">_25 = &lt;i64 as num_traits::Zero&gt;::zero()</td></tr></table>>];
    bb10__0_14985 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_19)<br/>_19 = ((_14 as Break).0: std::option::Option&lt;std::convert::Infallible&gt;)<br/>StorageLive(_21)<br/>_21 = _19<br/></td></tr><tr><td align="left">_0 = &lt;Option&lt;i64&gt; as FromResidual&lt;Option&lt;Infallible&gt;&gt;&gt;::from_residual(move _21)</td></tr></table>>];
    bb11__0_14985 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_19)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_14985 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">_23 = Ne(move _24, move _25)<br/></td></tr><tr><td align="left">switchInt(move _23)</td></tr></table>>];
    bb13__0_14985 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_24)<br/>StorageLive(_26)<br/>_26 = _3<br/>StorageLive(_27)<br/></td></tr><tr><td align="left">_27 = &lt;i64 as One&gt;::one()</td></tr></table>>];
    bb14__0_14985 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left">_0 = core::num::&lt;impl i64&gt;::checked_sub(move _26, move _27)</td></tr></table>>];
    bb15__0_14985 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_14985 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_24)<br/>StorageLive(_28)<br/>_28 = _3<br/>_0 = Option::&lt;i64&gt;::Some(move _28)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_14985 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_13)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_14985 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_14985 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_14985 -> bb1__0_14985 [label="return"];
    bb1__0_14985 -> bb2__0_14985 [label="return"];
    bb2__0_14985 -> bb3__0_14985 [label="0"];
    bb2__0_14985 -> bb5__0_14985 [label="1"];
    bb2__0_14985 -> bb4__0_14985 [label="otherwise"];
    bb3__0_14985 -> bb7__0_14985 [label="return"];
    bb5__0_14985 -> bb6__0_14985 [label="return"];
    bb6__0_14985 -> bb18__0_14985 [label=""];
    bb7__0_14985 -> bb8__0_14985 [label="return"];
    bb8__0_14985 -> bb9__0_14985 [label="0"];
    bb8__0_14985 -> bb10__0_14985 [label="1"];
    bb8__0_14985 -> bb4__0_14985 [label="otherwise"];
    bb9__0_14985 -> bb12__0_14985 [label="return"];
    bb10__0_14985 -> bb11__0_14985 [label="return"];
    bb11__0_14985 -> bb18__0_14985 [label=""];
    bb12__0_14985 -> bb16__0_14985 [label="0"];
    bb12__0_14985 -> bb13__0_14985 [label="otherwise"];
    bb13__0_14985 -> bb14__0_14985 [label="return"];
    bb14__0_14985 -> bb15__0_14985 [label="return"];
    bb15__0_14985 -> bb17__0_14985 [label=""];
    bb16__0_14985 -> bb17__0_14985 [label=""];
    bb17__0_14985 -> bb19__0_14985 [label=""];
    bb18__0_14985 -> bb19__0_14985 [label=""];
}
