digraph Mir_0_14469 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn U192::from_str_radix(_1: &amp;ReErased str, _2: u32) -&gt; std::result::Result&lt;math::bn::U192, uint::FromStrRadixErr&gt;<br align="left"/>let _3: math::bn::U192;<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, uint::FromDecStrErr&gt;, math::bn::U192&gt;;<br align="left"/>let mut _5: std::result::Result&lt;math::bn::U192, uint::FromDecStrErr&gt;;<br align="left"/>let mut _6: &amp;ReErased str;<br align="left"/>let mut _7: isize;<br align="left"/>let _8: std::result::Result&lt;std::convert::Infallible, uint::FromDecStrErr&gt;;<br align="left"/>let mut _9: !;<br align="left"/>let mut _10: std::result::Result&lt;std::convert::Infallible, uint::FromDecStrErr&gt;;<br align="left"/>let _11: math::bn::U192;<br align="left"/>let mut _12: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, uint::FromHexError&gt;, math::bn::U192&gt;;<br align="left"/>let mut _13: std::result::Result&lt;math::bn::U192, uint::FromHexError&gt;;<br align="left"/>let mut _14: &amp;ReErased str;<br align="left"/>let mut _15: isize;<br align="left"/>let _16: std::result::Result&lt;std::convert::Infallible, uint::FromHexError&gt;;<br align="left"/>let mut _17: !;<br align="left"/>let mut _18: std::result::Result&lt;std::convert::Infallible, uint::FromHexError&gt;;<br align="left"/>let _19: math::bn::U192;<br align="left"/>let mut _20: !;<br align="left"/>let mut _21: uint::FromStrRadixErr;<br align="left"/>let mut _22: math::bn::U192;<br align="left"/>debug txt =&gt; _1;<br align="left"/>debug radix =&gt; _2;<br align="left"/>debug parsed =&gt; _3;<br align="left"/>debug residual =&gt; _8;<br align="left"/>debug val =&gt; _11;<br align="left"/>debug residual =&gt; _16;<br align="left"/>debug val =&gt; _19;<br align="left"/>>;
    bb0__0_14469 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/></td></tr><tr><td align="left">switchInt(_2)</td></tr></table>>];
    bb1__0_14469 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/></td></tr><tr><td align="left">_21 = FromStrRadixErr::unsupported()</td></tr></table>>];
    bb2__0_14469 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = &amp;(*_1)<br/></td></tr><tr><td align="left">_5 = U192::from_dec_str(move _6)</td></tr></table>>];
    bb3__0_14469 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;U192, FromDecStrErr&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb4__0_14469 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_7 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _7)</td></tr></table>>];
    bb5__0_14469 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = ((_4 as Continue).0: math::bn::U192)<br/>_3 = _11<br/>StorageDead(_11)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb6__0_14469 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb7__0_14469 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/>_8 = move ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, uint::FromDecStrErr&gt;)<br/>StorageLive(_10)<br/>_10 = move _8<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;U192, FromStrRadixErr&gt; as FromResidual&lt;std::result::Result&lt;Infallible, FromDecStrErr&gt;&gt;&gt;::from_residual(move _10)</td></tr></table>>];
    bb8__0_14469 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_8)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_14469 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_14 = &amp;(*_1)<br/></td></tr><tr><td align="left">_13 = &lt;U192 as FromStr&gt;::from_str(move _14)</td></tr></table>>];
    bb10__0_14469 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/></td></tr><tr><td align="left">_12 = &lt;std::result::Result&lt;U192, uint::FromHexError&gt; as Try&gt;::branch(move _13)</td></tr></table>>];
    bb11__0_14469 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>_15 = discriminant(_12)<br/></td></tr><tr><td align="left">switchInt(move _15)</td></tr></table>>];
    bb12__0_14469 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_19)<br/>_19 = ((_12 as Continue).0: math::bn::U192)<br/>_3 = _19<br/>StorageDead(_19)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_14469 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_16)<br/>_16 = move ((_12 as Break).0: std::result::Result&lt;std::convert::Infallible, uint::FromHexError&gt;)<br/>StorageLive(_18)<br/>_18 = move _16<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;U192, FromStrRadixErr&gt; as FromResidual&lt;std::result::Result&lt;Infallible, uint::FromHexError&gt;&gt;&gt;::from_residual(move _18)</td></tr></table>>];
    bb14__0_14469 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_16)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_14469 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">_0 = std::result::Result::&lt;U192, FromStrRadixErr&gt;::Err(move _21)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_14469 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_22)<br/>_22 = _3<br/>_0 = std::result::Result::&lt;U192, FromStrRadixErr&gt;::Ok(move _22)<br/>StorageDead(_22)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_14469 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_14469 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_14469 -> bb2__0_14469 [label="10"];
    bb0__0_14469 -> bb9__0_14469 [label="16"];
    bb0__0_14469 -> bb1__0_14469 [label="otherwise"];
    bb1__0_14469 -> bb15__0_14469 [label="return"];
    bb2__0_14469 -> bb3__0_14469 [label="return"];
    bb3__0_14469 -> bb4__0_14469 [label="return"];
    bb4__0_14469 -> bb5__0_14469 [label="0"];
    bb4__0_14469 -> bb7__0_14469 [label="1"];
    bb4__0_14469 -> bb6__0_14469 [label="otherwise"];
    bb5__0_14469 -> bb16__0_14469 [label=""];
    bb7__0_14469 -> bb8__0_14469 [label="return"];
    bb8__0_14469 -> bb17__0_14469 [label=""];
    bb9__0_14469 -> bb10__0_14469 [label="return"];
    bb10__0_14469 -> bb11__0_14469 [label="return"];
    bb11__0_14469 -> bb12__0_14469 [label="0"];
    bb11__0_14469 -> bb13__0_14469 [label="1"];
    bb11__0_14469 -> bb6__0_14469 [label="otherwise"];
    bb12__0_14469 -> bb16__0_14469 [label=""];
    bb13__0_14469 -> bb14__0_14469 [label="return"];
    bb14__0_14469 -> bb17__0_14469 [label=""];
    bb15__0_14469 -> bb17__0_14469 [label=""];
    bb16__0_14469 -> bb18__0_14469 [label=""];
    bb17__0_14469 -> bb18__0_14469 [label=""];
}
