digraph Mir_0_16161 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;FillMode as Debug&gt;::fmt(_1: &amp;ReErased state::fill_mode::FillMode, _2: &amp;ReErased mut std::fmt::Formatter&lt;ReErased&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt;<br align="left"/>let mut _3: isize;<br align="left"/>let mut _4: &amp;ReErased mut std::fmt::Formatter&lt;ReErased&gt;;<br align="left"/>let mut _5: &amp;ReErased str;<br align="left"/>let _6: &amp;ReErased str;<br align="left"/>let mut _7: &amp;ReErased mut std::fmt::Formatter&lt;ReErased&gt;;<br align="left"/>let mut _8: &amp;ReErased str;<br align="left"/>let _9: &amp;ReErased str;<br align="left"/>let _10: &amp;ReErased bool;<br align="left"/>let _11: &amp;ReErased u8;<br align="left"/>let mut _12: &amp;ReErased mut std::fmt::Formatter&lt;ReErased&gt;;<br align="left"/>let mut _13: &amp;ReErased str;<br align="left"/>let _14: &amp;ReErased str;<br align="left"/>let mut _15: &amp;ReErased dyn [Binder(Trait(std::fmt::Debug), [])] + ReErased;<br align="left"/>let mut _16: &amp;ReErased bool;<br align="left"/>let mut _17: &amp;ReErased dyn [Binder(Trait(std::fmt::Debug), [])] + ReErased;<br align="left"/>let mut _18: &amp;ReErased &amp;ReErased u8;<br align="left"/>let _19: &amp;ReErased &amp;ReErased u8;<br align="left"/>let mut _20: &amp;ReErased mut std::fmt::Formatter&lt;ReErased&gt;;<br align="left"/>let mut _21: &amp;ReErased str;<br align="left"/>let _22: &amp;ReErased str;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug f =&gt; _2;<br align="left"/>debug __self_0 =&gt; _10;<br align="left"/>debug __self_1 =&gt; _11;<br align="left"/>>;
    bb0__0_16161 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_3 = discriminant((*_1))<br/></td></tr><tr><td align="left">switchInt(move _3)</td></tr></table>>];
    bb1__0_16161 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_20)<br/>_20 = &amp;mut (*_2)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_22 = const &quot;Liquidation&quot;<br/>_21 = &amp;(*_22)<br/></td></tr><tr><td align="left">_0 = Formatter::&lt;'_&gt;::write_str(move _20, move _21)</td></tr></table>>];
    bb2__0_16161 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb3__0_16161 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>_4 = &amp;mut (*_2)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = const &quot;Fill&quot;<br/>_5 = &amp;(*_6)<br/></td></tr><tr><td align="left">_0 = Formatter::&lt;'_&gt;::write_str(move _4, move _5)</td></tr></table>>];
    bb4__0_16161 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb5__0_16161 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_7)<br/>_7 = &amp;mut (*_2)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = const &quot;PlaceAndMake&quot;<br/>_8 = &amp;(*_9)<br/></td></tr><tr><td align="left">_0 = Formatter::&lt;'_&gt;::write_str(move _7, move _8)</td></tr></table>>];
    bb6__0_16161 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_16161 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>_10 = &amp;(((*_1) as PlaceAndTake).0: bool)<br/>StorageLive(_11)<br/>_11 = &amp;(((*_1) as PlaceAndTake).1: u8)<br/>StorageLive(_12)<br/>_12 = &amp;mut (*_2)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_14 = const &quot;PlaceAndTake&quot;<br/>_13 = &amp;(*_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_16 = &amp;(*_10)<br/>_15 = move _16 as &amp;dyn std::fmt::Debug (PointerCoercion(Unsize))<br/>StorageDead(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_19 = &amp;_11<br/>_18 = &amp;(*_19)<br/>_17 = move _18 as &amp;dyn std::fmt::Debug (PointerCoercion(Unsize))<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">_0 = Formatter::&lt;'_&gt;::debug_tuple_field2_finish(move _12, move _13, move _15, move _17)</td></tr></table>>];
    bb8__0_16161 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_17)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_16161 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_16161 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_16161 -> bb3__0_16161 [label="0"];
    bb0__0_16161 -> bb5__0_16161 [label="1"];
    bb0__0_16161 -> bb7__0_16161 [label="2"];
    bb0__0_16161 -> bb1__0_16161 [label="3"];
    bb0__0_16161 -> bb2__0_16161 [label="otherwise"];
    bb1__0_16161 -> bb9__0_16161 [label="return"];
    bb3__0_16161 -> bb4__0_16161 [label="return"];
    bb4__0_16161 -> bb10__0_16161 [label=""];
    bb5__0_16161 -> bb6__0_16161 [label="return"];
    bb6__0_16161 -> bb10__0_16161 [label=""];
    bb7__0_16161 -> bb8__0_16161 [label="return"];
    bb8__0_16161 -> bb10__0_16161 [label=""];
    bb9__0_16161 -> bb10__0_16161 [label=""];
}
