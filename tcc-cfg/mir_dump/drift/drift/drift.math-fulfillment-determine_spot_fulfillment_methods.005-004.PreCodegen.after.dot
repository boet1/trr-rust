digraph Mir_0_2281 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn determine_spot_fulfillment_methods(_1: &amp;ReErased state::user::Order, _2: &amp;ReErased [(anchor_lang::prelude::Pubkey, usize, u64)], _3: std::option::Option&lt;u64&gt;, _4: bool) -&gt; std::result::Result&lt;std::vec::Vec&lt;state::fulfillment::SpotFulfillmentMethod, std::alloc::Global&gt;, error::ErrorCode&gt;<br align="left"/>let mut _5: std::vec::Vec&lt;state::fulfillment::SpotFulfillmentMethod, std::alloc::Global&gt;;<br align="left"/>let _6: ();<br align="left"/>let mut _7: bool;<br align="left"/>let mut _8: bool;<br align="left"/>let mut _9: !;<br align="left"/>let _10: ();<br align="left"/>let mut _11: &amp;ReErased mut std::vec::Vec&lt;state::fulfillment::SpotFulfillmentMethod, std::alloc::Global&gt;;<br align="left"/>let mut _12: state::fulfillment::SpotFulfillmentMethod;<br align="left"/>let mut _13: std::vec::Vec&lt;state::fulfillment::SpotFulfillmentMethod, std::alloc::Global&gt;;<br align="left"/>let _14: controller::position::PositionDirection;<br align="left"/>let mut _15: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let _16: ();<br align="left"/>let mut _17: std::slice::Iter&lt;ReErased, (anchor_lang::prelude::Pubkey, usize, u64)&gt;;<br align="left"/>let mut _18: std::slice::Iter&lt;ReErased, (anchor_lang::prelude::Pubkey, usize, u64)&gt;;<br align="left"/>let mut _19: &amp;ReErased [(anchor_lang::prelude::Pubkey, usize, u64)];<br align="left"/>let mut _20: std::slice::Iter&lt;ReErased, (anchor_lang::prelude::Pubkey, usize, u64)&gt;;<br align="left"/>let mut _21: ();<br align="left"/>let _22: ();<br align="left"/>let mut _23: std::option::Option&lt;&amp;ReErased (anchor_lang::prelude::Pubkey, usize, u64)&gt;;<br align="left"/>let mut _24: &amp;ReErased mut std::slice::Iter&lt;ReErased, (anchor_lang::prelude::Pubkey, usize, u64)&gt;;<br align="left"/>let mut _25: &amp;ReErased mut std::slice::Iter&lt;ReErased, (anchor_lang::prelude::Pubkey, usize, u64)&gt;;<br align="left"/>let mut _26: isize;<br align="left"/>let mut _27: !;<br align="left"/>let _28: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _29: &amp;ReErased usize;<br align="left"/>let _30: &amp;ReErased u64;<br align="left"/>let _31: bool;<br align="left"/>let mut _32: isize;<br align="left"/>let _33: u64;<br align="left"/>let mut _34: controller::position::PositionDirection;<br align="left"/>let mut _35: u64;<br align="left"/>let mut _36: u64;<br align="left"/>let _37: ();<br align="left"/>let mut _38: bool;<br align="left"/>let mut _39: !;<br align="left"/>let _40: ();<br align="left"/>let mut _41: &amp;ReErased mut std::vec::Vec&lt;state::fulfillment::SpotFulfillmentMethod, std::alloc::Global&gt;;<br align="left"/>let mut _42: state::fulfillment::SpotFulfillmentMethod;<br align="left"/>let mut _43: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _44: u16;<br align="left"/>let mut _45: usize;<br align="left"/>let mut _46: bool;<br align="left"/>let mut _47: usize;<br align="left"/>let mut _48: &amp;ReErased std::vec::Vec&lt;state::fulfillment::SpotFulfillmentMethod, std::alloc::Global&gt;;<br align="left"/>let mut _49: !;<br align="left"/>let mut _50: std::vec::Vec&lt;state::fulfillment::SpotFulfillmentMethod, std::alloc::Global&gt;;<br align="left"/>let mut _51: &amp;ReErased (anchor_lang::prelude::Pubkey, usize, u64);<br align="left"/>let mut _52: &amp;ReErased (anchor_lang::prelude::Pubkey, usize, u64);<br align="left"/>let mut _53: &amp;ReErased (anchor_lang::prelude::Pubkey, usize, u64);<br align="left"/>debug order =&gt; _1;<br align="left"/>debug maker_orders_info =&gt; _2;<br align="left"/>debug limit_price =&gt; _3;<br align="left"/>debug external_fulfillment_params_available =&gt; _4;<br align="left"/>debug fulfillment_methods =&gt; _5;<br align="left"/>debug maker_direction =&gt; _14;<br align="left"/>debug iter =&gt; _20;<br align="left"/>debug maker_key =&gt; _28;<br align="left"/>debug maker_order_index =&gt; _29;<br align="left"/>debug maker_price =&gt; _30;<br align="left"/>debug taker_crosses_maker =&gt; _31;<br align="left"/>debug taker_price =&gt; _33;<br align="left"/>>;
    bb0__0_2281 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/></td></tr><tr><td align="left">_5 = Vec::&lt;SpotFulfillmentMethod&gt;::with_capacity(const 8_usize)</td></tr></table>>];
    bb1__0_2281 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = ((*_1).19: bool)<br/></td></tr><tr><td align="left">switchInt(move _7)</td></tr></table>>];
    bb2__0_2281 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/>_8 = _4<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb3__0_2281 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = &amp;mut _5<br/>StorageLive(_12)<br/>_12 = SpotFulfillmentMethod::ExternalMarket<br/></td></tr><tr><td align="left">_10 = Vec::&lt;SpotFulfillmentMethod&gt;::push(move _11, move _12)</td></tr></table>>];
    bb4__0_2281 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_10)<br/>StorageLive(_13)<br/>_13 = move _5<br/>_0 = std::result::Result::&lt;Vec&lt;SpotFulfillmentMethod&gt;, error::ErrorCode&gt;::Ok(move _13)<br/>StorageDead(_13)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb5__0_2281 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">_6 = const ()<br/>StorageDead(_8)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = &amp;((*_1).17: controller::position::PositionDirection)<br/></td></tr><tr><td align="left">_14 = controller::position::PositionDirection::opposite(move _15)</td></tr></table>>];
    bb6__0_2281 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_19 = &amp;(*_2)<br/></td></tr><tr><td align="left">_18 = core::slice::&lt;impl [(anchor_lang::prelude::Pubkey, usize, u64)]&gt;::iter(move _19)</td></tr></table>>];
    bb7__0_2281 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/></td></tr><tr><td align="left">_17 = &lt;std::slice::Iter&lt;'_, (anchor_lang::prelude::Pubkey, usize, u64)&gt; as IntoIterator&gt;::into_iter(move _18)</td></tr></table>>];
    bb8__0_2281 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageLive(_20)<br/>_20 = move _17<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_2281 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>_25 = &amp;mut _20<br/>_24 = &amp;mut (*_25)<br/></td></tr><tr><td align="left">_23 = &lt;std::slice::Iter&lt;'_, (anchor_lang::prelude::Pubkey, usize, u64)&gt; as Iterator&gt;::next(move _24)</td></tr></table>>];
    bb10__0_2281 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>_26 = discriminant(_23)<br/></td></tr><tr><td align="left">switchInt(move _26)</td></tr></table>>];
    bb11__0_2281 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_28)<br/>_51 = deref_copy ((_23 as Some).0: &amp;(anchor_lang::prelude::Pubkey, usize, u64))<br/>_28 = &amp;((*_51).0: anchor_lang::prelude::Pubkey)<br/>StorageLive(_29)<br/>_52 = deref_copy ((_23 as Some).0: &amp;(anchor_lang::prelude::Pubkey, usize, u64))<br/>_29 = &amp;((*_52).1: usize)<br/>StorageLive(_30)<br/>_53 = deref_copy ((_23 as Some).0: &amp;(anchor_lang::prelude::Pubkey, usize, u64))<br/>_30 = &amp;((*_53).2: u64)<br/>StorageLive(_31)<br/>_32 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _32)</td></tr></table>>];
    bb12__0_2281 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb13__0_2281 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">_16 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_2281 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">_31 = const false<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_2281 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_33)<br/>_33 = ((_3 as Some).0: u64)<br/>StorageLive(_34)<br/>_34 = _14<br/>StorageLive(_35)<br/>_35 = (*_30)<br/>StorageLive(_36)<br/>_36 = _33<br/></td></tr><tr><td align="left">_31 = do_orders_cross(move _34, move _35, move _36)</td></tr></table>>];
    bb16__0_2281 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_35)<br/>StorageDead(_34)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_2281 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_37)<br/>StorageLive(_38)<br/>_38 = _31<br/></td></tr><tr><td align="left">switchInt(move _38)</td></tr></table>>];
    bb18__0_2281 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">_16 = const ()<br/>StorageDead(_38)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_2281 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">_37 = const ()<br/>StorageDead(_38)<br/>StorageDead(_37)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>_41 = &amp;mut _5<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>_43 = (*_28)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>_45 = (*_29)<br/>_44 = move _45 as u16 (IntToInt)<br/>StorageDead(_45)<br/>_42 = SpotFulfillmentMethod::Match(move _43, move _44)<br/>StorageDead(_44)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">_40 = Vec::&lt;SpotFulfillmentMethod&gt;::push(move _41, move _42)</td></tr></table>>];
    bb20__0_2281 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_41)<br/>StorageDead(_40)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>_48 = &amp;_5<br/></td></tr><tr><td align="left">_47 = Vec::&lt;SpotFulfillmentMethod&gt;::len(move _48)</td></tr></table>>];
    bb21__0_2281 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>_46 = Gt(move _47, const 6_usize)<br/></td></tr><tr><td align="left">switchInt(move _46)</td></tr></table>>];
    bb22__0_2281 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>_16 = const ()<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_2281 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>_22 = const ()<br/>StorageDead(_46)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/>StorageDead(_29)<br/>StorageDead(_28)<br/>StorageDead(_25)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/>_21 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_2281 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_30)<br/>StorageDead(_29)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_2281 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/>StorageDead(_20)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/>StorageLive(_50)<br/>_50 = move _5<br/>_0 = std::result::Result::&lt;Vec&lt;SpotFulfillmentMethod&gt;, error::ErrorCode&gt;::Ok(move _50)<br/>StorageDead(_50)<br/>StorageDead(_14)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_2281 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left">return</td></tr></table>>];
    bb27__0_2281 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">27 (cleanup)</td></tr><tr><td align="left">drop(_5)</td></tr></table>>];
    bb28__0_2281 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">28 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_2281 -> bb1__0_2281 [label="return"];
    bb1__0_2281 -> bb2__0_2281 [label="0"];
    bb1__0_2281 -> bb5__0_2281 [label="otherwise"];
    bb2__0_2281 -> bb5__0_2281 [label="0"];
    bb2__0_2281 -> bb3__0_2281 [label="otherwise"];
    bb3__0_2281 -> bb4__0_2281 [label="return"];
    bb3__0_2281 -> bb27__0_2281 [label="unwind"];
    bb4__0_2281 -> bb26__0_2281 [label=""];
    bb5__0_2281 -> bb6__0_2281 [label="return"];
    bb5__0_2281 -> bb27__0_2281 [label="unwind"];
    bb6__0_2281 -> bb7__0_2281 [label="return"];
    bb6__0_2281 -> bb27__0_2281 [label="unwind"];
    bb7__0_2281 -> bb8__0_2281 [label="return"];
    bb7__0_2281 -> bb27__0_2281 [label="unwind"];
    bb8__0_2281 -> bb9__0_2281 [label=""];
    bb9__0_2281 -> bb10__0_2281 [label="return"];
    bb9__0_2281 -> bb27__0_2281 [label="unwind"];
    bb10__0_2281 -> bb13__0_2281 [label="0"];
    bb10__0_2281 -> bb11__0_2281 [label="1"];
    bb10__0_2281 -> bb12__0_2281 [label="otherwise"];
    bb11__0_2281 -> bb14__0_2281 [label="0"];
    bb11__0_2281 -> bb15__0_2281 [label="1"];
    bb11__0_2281 -> bb12__0_2281 [label="otherwise"];
    bb13__0_2281 -> bb25__0_2281 [label=""];
    bb14__0_2281 -> bb17__0_2281 [label=""];
    bb15__0_2281 -> bb16__0_2281 [label="return"];
    bb15__0_2281 -> bb27__0_2281 [label="unwind"];
    bb16__0_2281 -> bb17__0_2281 [label=""];
    bb17__0_2281 -> bb18__0_2281 [label="0"];
    bb17__0_2281 -> bb19__0_2281 [label="otherwise"];
    bb18__0_2281 -> bb24__0_2281 [label=""];
    bb19__0_2281 -> bb20__0_2281 [label="return"];
    bb19__0_2281 -> bb27__0_2281 [label="unwind"];
    bb20__0_2281 -> bb21__0_2281 [label="return"];
    bb20__0_2281 -> bb27__0_2281 [label="unwind"];
    bb21__0_2281 -> bb23__0_2281 [label="0"];
    bb21__0_2281 -> bb22__0_2281 [label="otherwise"];
    bb22__0_2281 -> bb24__0_2281 [label=""];
    bb23__0_2281 -> bb9__0_2281 [label=""];
    bb24__0_2281 -> bb25__0_2281 [label=""];
    bb25__0_2281 -> bb26__0_2281 [label=""];
    bb27__0_2281 -> bb28__0_2281 [label="return"];
}
