// MIR for `admin::handle_initialize_pyth_pull_oracle` after PreCodegen

fn admin::handle_initialize_pyth_pull_oracle(_1: anchor_lang::context::Context<'_, '_, '_, '_, admin::InitPythPullPriceFeed<'_>>, _2: [u8; 32]) -> std::result::Result<(), anchor_lang::error::Error> {
    debug ctx => _1;
    debug feed_id => _2;
    let mut _0: std::result::Result<(), anchor_lang::error::Error>;
    let _3: anchor_lang::prelude::AccountInfo<'_>;
    let mut _4: &anchor_lang::prelude::Program<'_, pyth_solana_receiver_sdk::program::PythSolanaReceiver>;
    let mut _6: anchor_lang::prelude::AccountInfo<'_>;
    let mut _7: &anchor_lang::prelude::Signer<'_>;
    let mut _8: anchor_lang::prelude::AccountInfo<'_>;
    let mut _9: &anchor_lang::prelude::AccountInfo<'_>;
    let mut _10: anchor_lang::prelude::AccountInfo<'_>;
    let mut _11: &anchor_lang::prelude::Program<'_, anchor_lang::system_program::System>;
    let mut _12: anchor_lang::prelude::AccountInfo<'_>;
    let mut _13: &anchor_lang::prelude::AccountInfo<'_>;
    let _15: [&[u8]; 3];
    let mut _16: &[u8];
    let _17: &[u8];
    let mut _18: &[u8; 32];
    let mut _19: &[u8];
    let mut _20: &[u8; 1];
    let _21: &[u8; 1];
    let _22: [u8; 1];
    let mut _23: u8;
    let _25: [&[&[u8]]; 1];
    let mut _26: &[&[u8]];
    let _27: &[&[u8]];
    let mut _28: &[&[u8]; 3];
    let mut _29: std::ops::RangeFull;
    let mut _31: anchor_lang::prelude::AccountInfo<'_>;
    let mut _32: pyth_solana_receiver_sdk::cpi::accounts::InitPriceUpdate<'_>;
    let mut _33: &[&[&[u8]]];
    let mut _34: &[&[&[u8]]; 1];
    let _35: ();
    let mut _36: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, anchor_lang::error::Error>>;
    let mut _37: std::result::Result<(), anchor_lang::error::Error>;
    let mut _38: anchor_lang::context::CpiContext<'_, '_, '_, '_, pyth_solana_receiver_sdk::cpi::accounts::InitPriceUpdate<'_>>;
    let mut _39: [u8; 32];
    let mut _40: isize;
    let mut _42: !;
    let mut _43: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>;
    let mut _45: ();
    let mut _46: &mut instructions::admin::InitPythPullPriceFeed<'_>;
    let mut _47: &mut instructions::admin::InitPythPullPriceFeed<'_>;
    let mut _48: &mut instructions::admin::InitPythPullPriceFeed<'_>;
    let mut _49: &mut instructions::admin::InitPythPullPriceFeed<'_>;
    let mut _50: &mut instructions::admin::InitPythPullPriceFeed<'_>;
    let mut _51: bool;
    let mut _52: bool;
    let mut _53: isize;
    let mut _54: isize;
    let mut _55: isize;
    let mut _56: isize;
    let mut _57: isize;
    scope 1 {
        debug cpi_program => _3;
        let _5: pyth_solana_receiver_sdk::cpi::accounts::InitPriceUpdate<'_>;
        scope 2 {
            debug cpi_accounts => _5;
            let _14: &[&[u8]; 3];
            scope 3 {
                debug seeds => _14;
                let _24: &[&[&[u8]]; 1];
                scope 4 {
                    debug signer_seeds => _24;
                    let _30: anchor_lang::context::CpiContext<'_, '_, '_, '_, pyth_solana_receiver_sdk::cpi::accounts::InitPriceUpdate<'_>>;
                    scope 5 {
                        debug cpi_context => _30;
                        let _41: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>;
                        let _44: ();
                        scope 6 {
                            debug residual => _41;
                            scope 7 {
                            }
                        }
                        scope 8 {
                            debug val => _44;
                            scope 9 {
                            }
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _52 = const false;
        _51 = const false;
        StorageLive(_3);
        StorageLive(_4);
        _46 = deref_copy (_1.1: &mut instructions::admin::InitPythPullPriceFeed<'_>);
        _4 = &((*_46).1: anchor_lang::prelude::Program<'_, pyth_solana_receiver_sdk::program::PythSolanaReceiver>);
        _52 = const true;
        _3 = <anchor_lang::prelude::Program<'_, PythSolanaReceiver> as anchor_lang::ToAccountInfo<'_>>::to_account_info(move _4) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_4);
        StorageLive(_5);
        StorageLive(_6);
        StorageLive(_7);
        _47 = deref_copy (_1.1: &mut instructions::admin::InitPythPullPriceFeed<'_>);
        _7 = &((*_47).0: anchor_lang::prelude::Signer<'_>);
        _6 = <anchor_lang::prelude::Signer<'_> as anchor_lang::ToAccountInfo<'_>>::to_account_info(move _7) -> [return: bb2, unwind: bb24];
    }

    bb2: {
        StorageDead(_7);
        StorageLive(_8);
        StorageLive(_9);
        _48 = deref_copy (_1.1: &mut instructions::admin::InitPythPullPriceFeed<'_>);
        _9 = &((*_48).2: anchor_lang::prelude::AccountInfo<'_>);
        _8 = <anchor_lang::prelude::AccountInfo<'_> as anchor_lang::ToAccountInfo<'_>>::to_account_info(move _9) -> [return: bb3, unwind: bb18];
    }

    bb3: {
        StorageDead(_9);
        StorageLive(_10);
        StorageLive(_11);
        _49 = deref_copy (_1.1: &mut instructions::admin::InitPythPullPriceFeed<'_>);
        _11 = &((*_49).3: anchor_lang::prelude::Program<'_, anchor_lang::system_program::System>);
        _10 = <anchor_lang::prelude::Program<'_, anchor_lang::system_program::System> as anchor_lang::ToAccountInfo<'_>>::to_account_info(move _11) -> [return: bb4, unwind: bb17];
    }

    bb4: {
        StorageDead(_11);
        StorageLive(_12);
        StorageLive(_13);
        _50 = deref_copy (_1.1: &mut instructions::admin::InitPythPullPriceFeed<'_>);
        _13 = &((*_50).2: anchor_lang::prelude::AccountInfo<'_>);
        _12 = <anchor_lang::prelude::AccountInfo<'_> as anchor_lang::ToAccountInfo<'_>>::to_account_info(move _13) -> [return: bb5, unwind: bb16];
    }

    bb5: {
        StorageDead(_13);
        _51 = const true;
        _5 = InitPriceUpdate::<'_> { payer: move _6, price_update_account: move _8, system_program: move _10, write_authority: move _12 };
        StorageDead(_12);
        StorageDead(_10);
        StorageDead(_8);
        StorageDead(_6);
        StorageLive(_14);
        StorageLive(_15);
        StorageLive(_16);
        StorageLive(_17);
        StorageLive(_18);
        _18 = &_2;
        _17 = <[u8; 32] as AsRef<[u8]>>::as_ref(move _18) -> [return: bb6, unwind: bb22];
    }

    bb6: {
        _16 = &(*_17);
        StorageDead(_18);
        StorageLive(_19);
        StorageLive(_20);
        StorageLive(_21);
        StorageLive(_22);
        StorageLive(_23);
        _23 = ((_1.3: instructions::admin::InitPythPullPriceFeedBumps).0: u8);
        _22 = [move _23];
        StorageDead(_23);
        _21 = &_22;
        _20 = &(*_21);
        _19 = move _20 as &[u8] (PointerCoercion(Unsize));
        StorageDead(_20);
        _15 = [const _, move _16, move _19];
        StorageDead(_19);
        StorageDead(_16);
        _14 = &_15;
        StorageDead(_21);
        StorageDead(_17);
        StorageLive(_24);
        StorageLive(_25);
        StorageLive(_26);
        StorageLive(_27);
        StorageLive(_28);
        _28 = &(*_14);
        StorageLive(_29);
        _29 = RangeFull;
        _27 = <[&[u8]; 3] as Index<RangeFull>>::index(move _28, move _29) -> [return: bb7, unwind: bb22];
    }

    bb7: {
        StorageDead(_29);
        StorageDead(_28);
        _26 = &(*_27);
        _25 = [move _26];
        StorageDead(_26);
        _24 = &_25;
        StorageLive(_30);
        StorageLive(_31);
        _52 = const false;
        _31 = move _3;
        StorageLive(_32);
        _51 = const false;
        _32 = move _5;
        StorageLive(_33);
        StorageLive(_34);
        _34 = &(*_24);
        _33 = move _34 as &[&[&[u8]]] (PointerCoercion(Unsize));
        StorageDead(_34);
        _30 = anchor_lang::context::CpiContext::<'_, '_, '_, '_, InitPriceUpdate<'_>>::new_with_signer(move _31, move _32, move _33) -> [return: bb8, unwind: bb22];
    }

    bb8: {
        StorageDead(_33);
        StorageDead(_32);
        StorageDead(_31);
        StorageLive(_35);
        StorageLive(_36);
        StorageLive(_37);
        StorageLive(_38);
        _38 = move _30;
        StorageLive(_39);
        _39 = _2;
        _37 = init_price_update(move _38, move _39) -> [return: bb9, unwind: bb22];
    }

    bb9: {
        StorageDead(_39);
        StorageDead(_38);
        _36 = <std::result::Result<(), anchor_lang::error::Error> as Try>::branch(move _37) -> [return: bb10, unwind: bb22];
    }

    bb10: {
        StorageDead(_37);
        _40 = discriminant(_36);
        switchInt(move _40) -> [0: bb11, 1: bb13, otherwise: bb12];
    }

    bb11: {
        StorageLive(_44);
        _44 = ((_36 as Continue).0: ());
        _35 = _44;
        StorageDead(_44);
        _53 = discriminant(_36);
        StorageDead(_36);
        StorageDead(_35);
        StorageLive(_45);
        _45 = ();
        _0 = std::result::Result::<(), anchor_lang::error::Error>::Ok(move _45);
        StorageDead(_45);
        StorageDead(_30);
        StorageDead(_27);
        StorageDead(_25);
        StorageDead(_24);
        StorageDead(_22);
        StorageDead(_15);
        StorageDead(_14);
        _51 = const false;
        StorageDead(_5);
        _52 = const false;
        StorageDead(_3);
        goto -> bb15;
    }

    bb12: {
        unreachable;
    }

    bb13: {
        StorageLive(_41);
        _41 = move ((_36 as Break).0: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>);
        StorageLive(_43);
        _43 = move _41;
        _0 = <std::result::Result<(), anchor_lang::error::Error> as FromResidual<std::result::Result<Infallible, anchor_lang::error::Error>>>::from_residual(move _43) -> [return: bb14, unwind: bb20];
    }

    bb14: {
        StorageDead(_43);
        StorageDead(_41);
        _55 = discriminant(_36);
        StorageDead(_36);
        StorageDead(_35);
        StorageDead(_30);
        StorageDead(_27);
        StorageDead(_25);
        StorageDead(_24);
        StorageDead(_22);
        StorageDead(_15);
        StorageDead(_14);
        _51 = const false;
        StorageDead(_5);
        _52 = const false;
        StorageDead(_3);
        goto -> bb15;
    }

    bb15: {
        return;
    }

    bb16 (cleanup): {
        drop(_10) -> [return: bb17, unwind terminate(cleanup)];
    }

    bb17 (cleanup): {
        drop(_8) -> [return: bb18, unwind terminate(cleanup)];
    }

    bb18 (cleanup): {
        drop(_6) -> [return: bb24, unwind terminate(cleanup)];
    }

    bb19 (cleanup): {
        resume;
    }

    bb20 (cleanup): {
        _57 = discriminant(_36);
        goto -> bb22;
    }

    bb21 (cleanup): {
        drop(_5) -> [return: bb24, unwind terminate(cleanup)];
    }

    bb22 (cleanup): {
        switchInt(_51) -> [0: bb24, otherwise: bb21];
    }

    bb23 (cleanup): {
        drop(_3) -> [return: bb19, unwind terminate(cleanup)];
    }

    bb24 (cleanup): {
        switchInt(_52) -> [0: bb19, otherwise: bb23];
    }
}
