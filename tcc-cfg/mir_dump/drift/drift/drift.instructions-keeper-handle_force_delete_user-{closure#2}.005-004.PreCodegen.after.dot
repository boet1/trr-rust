digraph Mir_0_1384 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn keeper::handle_force_delete_user::{closure#2}(_1: &amp;ReErased mut Closure(DefId(0:1384 ~ drift[d311]::instructions::keeper::handle_force_delete_user::{closure#2}), [ReErased, ReErased, i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;,)) -&gt; bool, [Region(BrAnon)]), (&amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey,)]), _2: &amp;ReErased &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;) -&gt; bool<br align="left"/>let mut _3: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _4: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _5: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _6: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _7: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _8: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _9: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _10: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _11: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>debug acc =&gt; _2;<br align="left"/>debug spot_market_mint =&gt; (*((*_1).0: &amp;&amp;anchor_lang::prelude::Pubkey));<br align="left"/>>;
    bb0__0_1384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_9 = deref_copy (*_2)<br/>_5 = &amp;(*_9)<br/></td></tr><tr><td align="left">_4 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::Key&gt;::key(move _5)</td></tr></table>>];
    bb1__0_1384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_3 = &amp;_4<br/>StorageDead(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_10 = deref_copy ((*_1).0: &amp;&amp;anchor_lang::prelude::Pubkey)<br/>_11 = deref_copy (*_10)<br/>_8 = &amp;(*_11)<br/></td></tr><tr><td align="left">_7 = &lt;anchor_lang::prelude::Pubkey as anchor_lang::Key&gt;::key(move _8)</td></tr></table>>];
    bb2__0_1384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">_6 = &amp;_7<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">_0 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _3, move _6)</td></tr></table>>];
    bb3__0_1384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_6)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_1384 -> bb1__0_1384 [label="return"];
    bb1__0_1384 -> bb2__0_1384 [label="return"];
    bb2__0_1384 -> bb3__0_1384 [label="return"];
}
