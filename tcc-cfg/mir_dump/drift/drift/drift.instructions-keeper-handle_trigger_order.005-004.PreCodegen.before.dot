digraph Mir_0_9204 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn keeper::handle_trigger_order(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::keeper::TriggerOrder&lt;ReErased&gt;&gt;, _2: u32) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _5: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _6: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _7: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _8: isize;<br align="left"/>let _9: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _10: !;<br align="left"/>let mut _11: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _12: ();<br align="left"/>let _13: state::user::MarketType;<br align="left"/>let _14: u16;<br align="left"/>let mut _15: (state::user::MarketType, u16);<br align="left"/>let mut _16: std::option::Option&lt;&amp;ReErased state::user::Order&gt;;<br align="left"/>let mut _17: &amp;ReErased state::user::User;<br align="left"/>let _18: &amp;ReErased state::user::User;<br align="left"/>let mut _19: &amp;ReErased std::cell::Ref&lt;ReErased, state::user::User&gt;;<br align="left"/>let _20: std::cell::Ref&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _21: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _22: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _23: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::user::User&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _24: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _25: Closure(DefId(0:9207 ~ drift[d311]::instructions::keeper::handle_trigger_order::{closure#0}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _26: isize;<br align="left"/>let _27: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _28: !;<br align="left"/>let mut _29: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _30: std::cell::Ref&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _31: u32;<br align="left"/>let mut _32: isize;<br align="left"/>let _33: &amp;ReErased state::user::Order;<br align="left"/>let mut _34: state::user::MarketType;<br align="left"/>let mut _35: u16;<br align="left"/>let mut _36: !;<br align="left"/>let _37: ();<br align="left"/>let mut _38: &amp;ReErased str;<br align="left"/>let _39: &amp;ReErased str;<br align="left"/>let mut _40: &amp;ReErased std::string::String;<br align="left"/>let _41: &amp;ReErased std::string::String;<br align="left"/>let _42: std::string::String;<br align="left"/>let _43: std::string::String;<br align="left"/>let mut _44: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _45: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _46: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _47: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _48: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _49: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _50: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _51: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _52: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _53: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _54: &amp;ReErased u32;<br align="left"/>let _55: &amp;ReErased u32;<br align="left"/>let mut _56: ();<br align="left"/>let _57: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _58: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _59: (std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;, std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;);<br align="left"/>let mut _60: isize;<br align="left"/>let mut _61: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _62: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _63: std::vec::Vec&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _64: std::boxed::Box&lt;[u16], std::alloc::Global&gt;;<br align="left"/>let mut _65: std::boxed::Box&lt;[u16; 2_usize], std::alloc::Global&gt;;<br align="left"/>let mut _66: usize;<br align="left"/>let mut _67: usize;<br align="left"/>let mut _68: *mut u8;<br align="left"/>let mut _69: std::boxed::Box&lt;[u16; 2_usize], std::alloc::Global&gt;;<br align="left"/>let mut _70: u16;<br align="left"/>let mut _71: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _72: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _73: state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _74: state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _75: state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _76: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let mut _77: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, instructions::optional_accounts::AccountMaps&lt;ReErased&gt;&gt;;<br align="left"/>let mut _78: std::result::Result&lt;instructions::optional_accounts::AccountMaps&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _79: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _80: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _81: std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _82: std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _83: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _84: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _85: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _86: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _87: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _88: u64;<br align="left"/>let mut _89: anchor_lang::prelude::Clock;<br align="left"/>let mut _90: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _91: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _92: isize;<br align="left"/>let _93: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _94: !;<br align="left"/>let mut _95: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _96: anchor_lang::prelude::Clock;<br align="left"/>let mut _97: std::option::Option&lt;state::state::OracleGuardRails&gt;;<br align="left"/>let mut _98: isize;<br align="left"/>let _99: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _100: !;<br align="left"/>let mut _101: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _102: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let _103: ();<br align="left"/>let mut _104: isize;<br align="left"/>let mut _105: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _106: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _107: u32;<br align="left"/>let mut _108: &amp;ReErased state::state::State;<br align="left"/>let _109: &amp;ReErased state::state::State;<br align="left"/>let mut _110: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _111: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _112: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _113: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _114: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let _115: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _116: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _117: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _118: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _119: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _120: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _121: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _122: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let _123: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let _124: anchor_lang::prelude::Clock;<br align="left"/>let mut _125: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _126: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _127: isize;<br align="left"/>let _128: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _129: !;<br align="left"/>let mut _130: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _131: anchor_lang::prelude::Clock;<br align="left"/>let mut _132: isize;<br align="left"/>let _133: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _134: !;<br align="left"/>let mut _135: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _136: ();<br align="left"/>let mut _137: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _138: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _139: u32;<br align="left"/>let mut _140: &amp;ReErased state::state::State;<br align="left"/>let _141: &amp;ReErased state::state::State;<br align="left"/>let mut _142: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _143: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _144: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _145: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _146: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let _147: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _148: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _149: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _150: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _151: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _152: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _153: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _154: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let _155: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let _156: anchor_lang::prelude::Clock;<br align="left"/>let mut _157: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _158: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _159: isize;<br align="left"/>let _160: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _161: !;<br align="left"/>let mut _162: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _163: anchor_lang::prelude::Clock;<br align="left"/>let mut _164: isize;<br align="left"/>let _165: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _166: !;<br align="left"/>let mut _167: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _168: ();<br align="left"/>let mut _169: ();<br align="left"/>let mut _170: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _171: &amp;ReErased mut instructions::keeper::TriggerOrder&lt;ReErased&gt;;<br align="left"/>let mut _172: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _173: &amp;ReErased mut instructions::keeper::TriggerOrder&lt;ReErased&gt;;<br align="left"/>let mut _174: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _175: &amp;ReErased mut instructions::keeper::TriggerOrder&lt;ReErased&gt;;<br align="left"/>let mut _176: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _177: &amp;ReErased mut instructions::keeper::TriggerOrder&lt;ReErased&gt;;<br align="left"/>let mut _178: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _179: &amp;ReErased mut instructions::keeper::TriggerOrder&lt;ReErased&gt;;<br align="left"/>let mut _180: &amp;ReErased mut instructions::keeper::TriggerOrder&lt;ReErased&gt;;<br align="left"/>let mut _181: &amp;ReErased mut instructions::keeper::TriggerOrder&lt;ReErased&gt;;<br align="left"/>let mut _182: &amp;ReErased mut instructions::keeper::TriggerOrder&lt;ReErased&gt;;<br align="left"/>let mut _183: bool;<br align="left"/>let mut _184: bool;<br align="left"/>let mut _185: bool;<br align="left"/>let mut _186: bool;<br align="left"/>let mut _187: bool;<br align="left"/>let mut _188: bool;<br align="left"/>let mut _189: bool;<br align="left"/>let mut _190: isize;<br align="left"/>let mut _191: isize;<br align="left"/>let mut _192: isize;<br align="left"/>let mut _193: isize;<br align="left"/>let mut _194: isize;<br align="left"/>let mut _195: isize;<br align="left"/>let mut _196: isize;<br align="left"/>let mut _197: isize;<br align="left"/>let mut _198: isize;<br align="left"/>let mut _199: isize;<br align="left"/>let mut _200: isize;<br align="left"/>let mut _201: isize;<br align="left"/>let mut _202: isize;<br align="left"/>let mut _203: isize;<br align="left"/>let mut _204: isize;<br align="left"/>let mut _205: isize;<br align="left"/>let mut _206: isize;<br align="left"/>let mut _207: isize;<br align="left"/>let mut _208: isize;<br align="left"/>let mut _209: isize;<br align="left"/>let mut _210: isize;<br align="left"/>let mut _211: isize;<br align="left"/>let mut _212: isize;<br align="left"/>let mut _213: isize;<br align="left"/>let mut _214: isize;<br align="left"/>let mut _215: isize;<br align="left"/>let mut _216: isize;<br align="left"/>let mut _217: isize;<br align="left"/>let mut _218: isize;<br align="left"/>let mut _219: isize;<br align="left"/>let mut _220: isize;<br align="left"/>let mut _221: isize;<br align="left"/>let mut _222: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _223: *const [u16; 2_usize];<br align="left"/>let mut _224: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _225: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _226: *const ();<br align="left"/>let mut _227: usize;<br align="left"/>let mut _228: usize;<br align="left"/>let mut _229: usize;<br align="left"/>let mut _230: usize;<br align="left"/>let mut _231: bool;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug order_id =&gt; _2;<br align="left"/>debug residual =&gt; _9;<br align="left"/>debug val =&gt; _12;<br align="left"/>debug market_type =&gt; _13;<br align="left"/>debug market_index =&gt; _14;<br align="left"/>debug residual =&gt; _27;<br align="left"/>debug val =&gt; _30;<br align="left"/>debug order =&gt; _33;<br align="left"/>debug res =&gt; _43;<br align="left"/>debug writeable_perp_markets =&gt; _57;<br align="left"/>debug writeable_spot_markets =&gt; _58;<br align="left"/>debug perp_market_map =&gt; _73;<br align="left"/>debug spot_market_map =&gt; _74;<br align="left"/>debug oracle_map =&gt; _75;<br align="left"/>debug residual =&gt; _93;<br align="left"/>debug val =&gt; _96;<br align="left"/>debug residual =&gt; _99;<br align="left"/>debug val =&gt; _102;<br align="left"/>debug residual =&gt; _128;<br align="left"/>debug val =&gt; _131;<br align="left"/>debug residual =&gt; _133;<br align="left"/>debug val =&gt; _136;<br align="left"/>debug residual =&gt; _160;<br align="left"/>debug val =&gt; _163;<br align="left"/>debug residual =&gt; _165;<br align="left"/>debug val =&gt; _168;<br align="left"/>>;
    bb0__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_189 = const false<br/>_188 = const false<br/>_187 = const false<br/>_186 = const false<br/>_185 = const false<br/>_184 = const false<br/>_183 = const false<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_171 = deref_copy (_1.1: &amp;mut instructions::keeper::TriggerOrder&lt;'_&gt;)<br/>_7 = &amp;((*_171).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_172 = deref_copy (*_7)<br/>_222 = (((_172.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_6 = &amp;(*_222)<br/></td></tr><tr><td align="left">_5 = constraints::exchange_not_paused(move _6)</td></tr></table>>];
    bb1__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb2__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_8 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb3__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_4 as Continue).0: ())<br/>_3 = _12<br/>StorageDead(_12)<br/>_190 = discriminant(_4)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_173 = deref_copy (_1.1: &amp;mut instructions::keeper::TriggerOrder&lt;'_&gt;)<br/>_24 = &amp;((*_173).3: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_23 = anchor_lang::prelude::AccountLoader::&lt;'_, User&gt;::load(move _24)</td></tr></table>>];
    bb4__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>_9 = move ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_11)<br/>_11 = move _9<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _11)</td></tr></table>>];
    bb6__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_9)<br/>_212 = discriminant(_4)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageLive(_25)<br/>_25 = {closure@programs/drift/src/macros.rs:70:40: 70:43}<br/></td></tr><tr><td align="left">_22 = std::result::Result::&lt;Ref&lt;'_, User&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:70:40: 70:43}&gt;(move _23, move _25)</td></tr></table>>];
    bb8__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">_21 = &lt;std::result::Result&lt;Ref&lt;'_, User&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _22)</td></tr></table>>];
    bb9__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">_189 = const true<br/>StorageDead(_22)<br/>_26 = discriminant(_21)<br/></td></tr><tr><td align="left">switchInt(move _26)</td></tr></table>>];
    bb10__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_30)<br/>_30 = move ((_21 as Continue).0: std::cell::Ref&lt;'_, state::user::User&gt;)<br/>_20 = move _30<br/>StorageDead(_30)<br/>_19 = &amp;_20<br/></td></tr><tr><td align="left">_18 = &lt;Ref&lt;'_, User&gt; as Deref&gt;::deref(move _19)</td></tr></table>>];
    bb11__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_27)<br/>_27 = ((_21 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_29)<br/>_29 = _27<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _29)</td></tr></table>>];
    bb12__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_27)<br/>StorageDead(_19)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">_17 = &amp;(*_18)<br/>StorageDead(_19)<br/>StorageLive(_31)<br/>_31 = _2<br/></td></tr><tr><td align="left">_16 = User::get_order(move _17, move _31)</td></tr></table>>];
    bb14__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_17)<br/>_32 = discriminant(_16)<br/></td></tr><tr><td align="left">switchInt(move _32)</td></tr></table>>];
    bb15__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>_170 = const _<br/>_47 = &amp;(*_170)<br/>_46 = &amp;(*_47)<br/>_45 = move _46 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_46)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>_55 = &amp;_2<br/>_54 = &amp;(*_55)<br/></td></tr><tr><td align="left">_53 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u32&gt;(move _54)</td></tr></table>>];
    bb16__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_33)<br/>_33 = ((_16 as Some).0: &amp;state::user::Order)<br/>StorageLive(_34)<br/>_34 = ((*_33).14: state::user::MarketType)<br/>StorageLive(_35)<br/>_35 = ((*_33).11: u16)<br/>_15 = (move _34, move _35)<br/>StorageDead(_35)<br/>StorageDead(_34)<br/>StorageDead(_33)<br/>StorageLive(_13)<br/>_13 = (_15.0: state::user::MarketType)<br/>StorageLive(_14)<br/>_14 = (_15.1: u16)<br/></td></tr><tr><td align="left">drop(_20)</td></tr></table>>];
    bb17__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>_52 = [move _53]<br/>StorageDead(_53)<br/>_51 = &amp;_52<br/>_50 = &amp;(*_51)<br/>_49 = move _50 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">_44 = Arguments::&lt;'_&gt;::new_v1(move _45, move _49)</td></tr></table>>];
    bb18__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">_43 = format(move _44)</td></tr></table>>];
    bb19__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_55)<br/>StorageDead(_52)<br/>StorageDead(_51)<br/>StorageDead(_47)<br/>_42 = move _43<br/>StorageDead(_43)<br/>_41 = &amp;_42<br/>_40 = &amp;(*_41)<br/></td></tr><tr><td align="left">_39 = &lt;String as Deref&gt;::deref(move _40)</td></tr></table>>];
    bb20__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">_38 = &amp;(*_39)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">_37 = solana_program::log::sol_log(move _38)</td></tr></table>>];
    bb21__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/></td></tr><tr><td align="left">drop(_42)</td></tr></table>>];
    bb22__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_41)<br/>StorageDead(_39)<br/>StorageDead(_37)<br/>StorageLive(_56)<br/>_56 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _56)<br/>StorageDead(_56)<br/></td></tr><tr><td align="left">drop(_20)</td></tr></table>>];
    bb23__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_71)<br/></td></tr><tr><td align="left">_71 = BTreeSet::&lt;u16&gt;::new()</td></tr></table>>];
    bb24__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_61)<br/></td></tr><tr><td align="left">_61 = BTreeSet::&lt;u16&gt;::new()</td></tr></table>>];
    bb25__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>_66 = SizeOf([u16; 2])<br/>_67 = AlignOf([u16; 2])<br/></td></tr><tr><td align="left">_68 = alloc::alloc::exchange_malloc(move _66, move _67)</td></tr></table>>];
    bb26__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_69)<br/>_69 = ShallowInitBox(move _68, [u16; 2])<br/>StorageLive(_70)<br/>_70 = _14<br/>_223 = (((_69.0: std::ptr::Unique&lt;[u16; 2]&gt;).0: std::ptr::NonNull&lt;[u16; 2]&gt;).0: *const [u16; 2])<br/>_226 = _223 as *const () (PtrToPtr)<br/>_227 = _226 as usize (Transmute)<br/>_228 = AlignOf([u16; 2])<br/>_229 = Sub(_228, const 1_usize)<br/>_230 = BitAnd(_227, _229)<br/>_231 = Eq(_230, const 0_usize)<br/></td></tr><tr><td align="left">assert(_231, &quot;misaligned pointer dereference: address must be a multiple of {} but is {}&quot;, _228, _227)</td></tr></table>>];
    bb27__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/></td></tr><tr><td align="left">_62 = get_writable_spot_market_set_from_many(move _63)</td></tr></table>>];
    bb28__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>_59 = (move _61, move _62)<br/>StorageDead(_62)<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_72)<br/></td></tr><tr><td align="left">_72 = BTreeSet::&lt;u16&gt;::new()</td></tr></table>>];
    bb30__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">_59 = (move _71, move _72)<br/>StorageDead(_72)<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_57)<br/>_57 = move (_59.0: std::collections::BTreeSet&lt;u16&gt;)<br/>StorageLive(_58)<br/>_58 = move (_59.1: std::collections::BTreeSet&lt;u16&gt;)<br/>StorageDead(_59)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>_174 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_83 = &amp;(*_174)<br/></td></tr><tr><td align="left">_82 = core::slice::&lt;impl [anchor_lang::prelude::AccountInfo&lt;'_&gt;]&gt;::iter(move _83)</td></tr></table>>];
    bb32__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/></td></tr><tr><td align="left">_81 = &lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as Iterator&gt;::peekable(move _82)</td></tr></table>>];
    bb33__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>_80 = &amp;mut _81<br/>_79 = &amp;mut (*_80)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>_85 = &amp;_57<br/>_84 = &amp;(*_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>_87 = &amp;_58<br/>_86 = &amp;(*_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/></td></tr><tr><td align="left">_91 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb34__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left">_90 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _91)</td></tr></table>>];
    bb35__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">_187 = const true<br/>_188 = const true<br/>StorageDead(_91)<br/>_92 = discriminant(_90)<br/></td></tr><tr><td align="left">switchInt(move _92)</td></tr></table>>];
    bb36__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageLive(_96)<br/>_96 = move ((_90 as Continue).0: anchor_lang::prelude::Clock)<br/>_89 = move _96<br/>StorageDead(_96)<br/>_88 = (_89.0: u64)<br/>StorageLive(_97)<br/>_97 = Option::&lt;state::state::OracleGuardRails&gt;::None<br/></td></tr><tr><td align="left">_78 = load_maps(move _79, move _84, move _86, move _88, move _97)</td></tr></table>>];
    bb37__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_93)<br/>_93 = move ((_90 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_95)<br/>_95 = move _93<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _95)</td></tr></table>>];
    bb38__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/>StorageDead(_93)<br/>StorageDead(_88)<br/>StorageDead(_86)<br/>StorageDead(_84)<br/>StorageDead(_79)<br/>StorageDead(_78)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>StorageDead(_88)<br/>StorageDead(_86)<br/>StorageDead(_84)<br/>StorageDead(_79)<br/></td></tr><tr><td align="left">_77 = &lt;std::result::Result&lt;AccountMaps&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _78)</td></tr></table>>];
    bb40__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>_98 = discriminant(_77)<br/></td></tr><tr><td align="left">switchInt(move _98)</td></tr></table>>];
    bb41__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageLive(_102)<br/>_102 = move ((_77 as Continue).0: instructions::optional_accounts::AccountMaps&lt;'_&gt;)<br/>_76 = move _102<br/>StorageDead(_102)<br/>StorageLive(_73)<br/>_73 = move (_76.0: state::perp_market_map::PerpMarketMap&lt;'_&gt;)<br/>StorageLive(_74)<br/>_74 = move (_76.1: state::spot_market_map::SpotMarketMap&lt;'_&gt;)<br/>StorageLive(_75)<br/>_75 = move (_76.2: state::oracle_map::OracleMap&lt;'_&gt;)<br/>_196 = discriminant(_77)<br/>_198 = discriminant(_90)<br/>_187 = const false<br/>_188 = const false<br/>StorageDead(_90)<br/>StorageDead(_89)<br/>StorageDead(_87)<br/>StorageDead(_85)<br/>StorageDead(_81)<br/>StorageDead(_80)<br/>StorageDead(_77)<br/>StorageDead(_76)<br/>StorageLive(_103)<br/>_104 = discriminant(_13)<br/></td></tr><tr><td align="left">switchInt(move _104)</td></tr></table>>];
    bb42__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageLive(_99)<br/>_99 = ((_77 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_101)<br/>_101 = _99<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _101)</td></tr></table>>];
    bb43__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/>StorageDead(_99)<br/>_194 = discriminant(_77)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>_139 = _2<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>_175 = deref_copy (_1.1: &amp;mut instructions::keeper::TriggerOrder&lt;'_&gt;)<br/>_143 = &amp;((*_175).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_176 = deref_copy (*_143)<br/>_224 = (((_176.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_142 = &amp;(*_224)<br/></td></tr><tr><td align="left">_141 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _142)</td></tr></table>>];
    bb45__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>_107 = _2<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>_177 = deref_copy (_1.1: &amp;mut instructions::keeper::TriggerOrder&lt;'_&gt;)<br/>_111 = &amp;((*_177).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_178 = deref_copy (*_111)<br/>_225 = (((_178.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_110 = &amp;(*_225)<br/></td></tr><tr><td align="left">_109 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _110)</td></tr></table>>];
    bb46__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">_108 = &amp;(*_109)<br/>StorageDead(_110)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>_179 = deref_copy (_1.1: &amp;mut instructions::keeper::TriggerOrder&lt;'_&gt;)<br/>_113 = &amp;((*_179).3: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/>_112 = &amp;(*_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>_115 = &amp;_74<br/>_114 = &amp;(*_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>_117 = &amp;_73<br/>_116 = &amp;(*_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>_119 = &amp;mut _75<br/>_118 = &amp;mut (*_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>_180 = deref_copy (_1.1: &amp;mut instructions::keeper::TriggerOrder&lt;'_&gt;)<br/>_121 = &amp;((*_180).2: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/>_120 = &amp;(*_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/></td></tr><tr><td align="left">_126 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb47__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left">_125 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _126)</td></tr></table>>];
    bb48__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">_185 = const true<br/>_186 = const true<br/>StorageDead(_126)<br/>_127 = discriminant(_125)<br/></td></tr><tr><td align="left">switchInt(move _127)</td></tr></table>>];
    bb49__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageLive(_131)<br/>_131 = move ((_125 as Continue).0: anchor_lang::prelude::Clock)<br/>_124 = move _131<br/>StorageDead(_131)<br/>_123 = &amp;_124<br/>_122 = &amp;(*_123)<br/></td></tr><tr><td align="left">_106 = controller::orders::trigger_order(move _107, move _108, move _112, move _114, move _116, move _118, move _120, move _122)</td></tr></table>>];
    bb50__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageLive(_128)<br/>_128 = move ((_125 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_130)<br/>_130 = move _128<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _130)</td></tr></table>>];
    bb51__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_130)<br/>StorageDead(_128)<br/>StorageDead(_122)<br/>StorageDead(_120)<br/>StorageDead(_118)<br/>StorageDead(_116)<br/>StorageDead(_114)<br/>StorageDead(_112)<br/>StorageDead(_108)<br/>StorageDead(_107)<br/>StorageDead(_106)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb52__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/>StorageDead(_120)<br/>StorageDead(_118)<br/>StorageDead(_116)<br/>StorageDead(_114)<br/>StorageDead(_112)<br/>StorageDead(_108)<br/>StorageDead(_107)<br/></td></tr><tr><td align="left">_105 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _106)</td></tr></table>>];
    bb53__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/>_132 = discriminant(_105)<br/></td></tr><tr><td align="left">switchInt(move _132)</td></tr></table>>];
    bb54__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageLive(_136)<br/>_136 = ((_105 as Continue).0: ())<br/>_103 = _136<br/>StorageDead(_136)<br/>_200 = discriminant(_125)<br/>_185 = const false<br/>_186 = const false<br/>StorageDead(_125)<br/>StorageDead(_124)<br/>StorageDead(_123)<br/>StorageDead(_121)<br/>StorageDead(_119)<br/>StorageDead(_117)<br/>StorageDead(_115)<br/>StorageDead(_113)<br/>StorageDead(_111)<br/>StorageDead(_109)<br/>StorageDead(_105)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb55__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageLive(_133)<br/>_133 = ((_105 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_135)<br/>_135 = _133<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _135)</td></tr></table>>];
    bb56__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_135)<br/>StorageDead(_133)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb57__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">_140 = &amp;(*_141)<br/>StorageDead(_142)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>_181 = deref_copy (_1.1: &amp;mut instructions::keeper::TriggerOrder&lt;'_&gt;)<br/>_145 = &amp;((*_181).3: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/>_144 = &amp;(*_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>_147 = &amp;_74<br/>_146 = &amp;(*_147)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>_149 = &amp;_73<br/>_148 = &amp;(*_149)<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>_151 = &amp;mut _75<br/>_150 = &amp;mut (*_151)<br/>StorageLive(_152)<br/>StorageLive(_153)<br/>_182 = deref_copy (_1.1: &amp;mut instructions::keeper::TriggerOrder&lt;'_&gt;)<br/>_153 = &amp;((*_182).2: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/>_152 = &amp;(*_153)<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/></td></tr><tr><td align="left">_158 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb58__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left">_157 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _158)</td></tr></table>>];
    bb59__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">_183 = const true<br/>_184 = const true<br/>StorageDead(_158)<br/>_159 = discriminant(_157)<br/></td></tr><tr><td align="left">switchInt(move _159)</td></tr></table>>];
    bb60__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageLive(_163)<br/>_163 = move ((_157 as Continue).0: anchor_lang::prelude::Clock)<br/>_156 = move _163<br/>StorageDead(_163)<br/>_155 = &amp;_156<br/>_154 = &amp;(*_155)<br/></td></tr><tr><td align="left">_138 = trigger_spot_order(move _139, move _140, move _144, move _146, move _148, move _150, move _152, move _154)</td></tr></table>>];
    bb61__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageLive(_160)<br/>_160 = move ((_157 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_162)<br/>_162 = move _160<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _162)</td></tr></table>>];
    bb62__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_162)<br/>StorageDead(_160)<br/>StorageDead(_154)<br/>StorageDead(_152)<br/>StorageDead(_150)<br/>StorageDead(_148)<br/>StorageDead(_146)<br/>StorageDead(_144)<br/>StorageDead(_140)<br/>StorageDead(_139)<br/>StorageDead(_138)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb63__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_154)<br/>StorageDead(_152)<br/>StorageDead(_150)<br/>StorageDead(_148)<br/>StorageDead(_146)<br/>StorageDead(_144)<br/>StorageDead(_140)<br/>StorageDead(_139)<br/></td></tr><tr><td align="left">_137 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _138)</td></tr></table>>];
    bb64__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/>_164 = discriminant(_137)<br/></td></tr><tr><td align="left">switchInt(move _164)</td></tr></table>>];
    bb65__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageLive(_168)<br/>_168 = ((_137 as Continue).0: ())<br/>_103 = _168<br/>StorageDead(_168)<br/>_202 = discriminant(_157)<br/>_183 = const false<br/>_184 = const false<br/>StorageDead(_157)<br/>StorageDead(_156)<br/>StorageDead(_155)<br/>StorageDead(_153)<br/>StorageDead(_151)<br/>StorageDead(_149)<br/>StorageDead(_147)<br/>StorageDead(_145)<br/>StorageDead(_143)<br/>StorageDead(_141)<br/>StorageDead(_137)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb66__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageLive(_165)<br/>_165 = ((_137 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_167)<br/>_167 = _165<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _167)</td></tr></table>>];
    bb67__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_167)<br/>StorageDead(_165)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>StorageLive(_169)<br/>_169 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _169)<br/>StorageDead(_169)<br/></td></tr><tr><td align="left">drop(_75)</td></tr></table>>];
    bb69__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/></td></tr><tr><td align="left">drop(_74)</td></tr></table>>];
    bb70__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/></td></tr><tr><td align="left">drop(_73)</td></tr></table>>];
    bb71__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/></td></tr><tr><td align="left">drop(_58)</td></tr></table>>];
    bb72__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/></td></tr><tr><td align="left">drop(_57)</td></tr></table>>];
    bb73__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb74__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/></td></tr><tr><td align="left">drop(_75)</td></tr></table>>];
    bb75__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/></td></tr><tr><td align="left">drop(_74)</td></tr></table>>];
    bb76__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/></td></tr><tr><td align="left">drop(_73)</td></tr></table>>];
    bb77__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb78__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">_208 = discriminant(_90)<br/>_187 = const false<br/>_188 = const false<br/>StorageDead(_90)<br/>StorageDead(_89)<br/>StorageDead(_87)<br/>StorageDead(_85)<br/>StorageDead(_81)<br/>StorageDead(_80)<br/>StorageDead(_77)<br/>StorageDead(_76)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb79__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left">drop(_58)</td></tr></table>>];
    bb80__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/></td></tr><tr><td align="left">drop(_57)</td></tr></table>>];
    bb81__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb82__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left">return</td></tr></table>>];
    bb83__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">83 (cleanup)</td></tr><tr><td align="left">drop(_75)</td></tr></table>>];
    bb84__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">84 (cleanup)</td></tr><tr><td align="left">drop(_74)</td></tr></table>>];
    bb85__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">85 (cleanup)</td></tr><tr><td align="left">drop(_73)</td></tr></table>>];
    bb86__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">86 (cleanup)</td></tr><tr><td align="left">drop(_58)</td></tr></table>>];
    bb87__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">87 (cleanup)</td></tr><tr><td align="left">drop(_57)</td></tr></table>>];
    bb88__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">88 (cleanup)</td></tr><tr><td align="left">drop(_71)</td></tr></table>>];
    bb89__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">89 (cleanup)</td></tr><tr><td align="left">drop(_61)</td></tr></table>>];
    bb90__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">90 (cleanup)</td></tr><tr><td align="left">drop(_42)</td></tr></table>>];
    bb91__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">91 (cleanup)</td></tr><tr><td align="left">drop(_20)</td></tr></table>>];
    bb92__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">92 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb93__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">_192 = discriminant(_21)<br/>_189 = const false<br/>StorageDead(_21)<br/>StorageDead(_20)<br/>StorageDead(_18)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/>StorageLive(_59)<br/>_60 = discriminant(_13)<br/></td></tr><tr><td align="left">switchInt(move _60)</td></tr></table>>];
    bb94__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">_204 = discriminant(_157)<br/>_183 = const false<br/>_184 = const false<br/>StorageDead(_157)<br/>StorageDead(_156)<br/>StorageDead(_155)<br/>StorageDead(_153)<br/>StorageDead(_151)<br/>StorageDead(_149)<br/>StorageDead(_147)<br/>StorageDead(_145)<br/>StorageDead(_143)<br/>StorageDead(_141)<br/>StorageDead(_137)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb95__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">_206 = discriminant(_125)<br/>_185 = const false<br/>_186 = const false<br/>StorageDead(_125)<br/>StorageDead(_124)<br/>StorageDead(_123)<br/>StorageDead(_121)<br/>StorageDead(_119)<br/>StorageDead(_117)<br/>StorageDead(_115)<br/>StorageDead(_113)<br/>StorageDead(_111)<br/>StorageDead(_109)<br/>StorageDead(_105)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb96__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">_210 = discriminant(_21)<br/>_189 = const false<br/>StorageDead(_21)<br/>StorageDead(_20)<br/>StorageDead(_18)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb97__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">97 (cleanup)</td></tr><tr><td align="left" balign="left">_214 = discriminant(_157)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb98__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">98 (cleanup)</td></tr><tr><td align="left" balign="left">_215 = discriminant(_125)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb99__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">99 (cleanup)</td></tr><tr><td align="left" balign="left">_218 = discriminant(_77)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb100__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">100 (cleanup)</td></tr><tr><td align="left" balign="left">_219 = discriminant(_90)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb101__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">101 (cleanup)</td></tr><tr><td align="left" balign="left">_220 = discriminant(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb102__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">102 (cleanup)</td></tr><tr><td align="left" balign="left">_221 = discriminant(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb103__0_9204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">(*_223) = [const _, move _70]<br/>StorageDead(_70)<br/>_65 = move _69<br/>_64 = move _65 as std::boxed::Box&lt;[u16]&gt; (PointerCoercion(Unsize))<br/>StorageDead(_69)<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">_63 = std::slice::&lt;impl [u16]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _64)</td></tr></table>>];
    bb0__0_9204 -> bb1__0_9204 [label="return"];
    bb1__0_9204 -> bb2__0_9204 [label="return"];
    bb1__0_9204 -> bb92__0_9204 [label="unwind"];
    bb2__0_9204 -> bb3__0_9204 [label="0"];
    bb2__0_9204 -> bb5__0_9204 [label="1"];
    bb2__0_9204 -> bb4__0_9204 [label="otherwise"];
    bb3__0_9204 -> bb7__0_9204 [label="return"];
    bb5__0_9204 -> bb6__0_9204 [label="return"];
    bb5__0_9204 -> bb102__0_9204 [label="unwind"];
    bb6__0_9204 -> bb82__0_9204 [label=""];
    bb7__0_9204 -> bb8__0_9204 [label="return"];
    bb7__0_9204 -> bb92__0_9204 [label="unwind"];
    bb8__0_9204 -> bb9__0_9204 [label="return"];
    bb8__0_9204 -> bb92__0_9204 [label="unwind"];
    bb9__0_9204 -> bb10__0_9204 [label="0"];
    bb9__0_9204 -> bb11__0_9204 [label="1"];
    bb9__0_9204 -> bb4__0_9204 [label="otherwise"];
    bb10__0_9204 -> bb13__0_9204 [label="return"];
    bb10__0_9204 -> bb91__0_9204 [label="unwind"];
    bb11__0_9204 -> bb12__0_9204 [label="return"];
    bb11__0_9204 -> bb101__0_9204 [label="unwind"];
    bb12__0_9204 -> bb96__0_9204 [label=""];
    bb13__0_9204 -> bb14__0_9204 [label="return"];
    bb13__0_9204 -> bb91__0_9204 [label="unwind"];
    bb14__0_9204 -> bb15__0_9204 [label="0"];
    bb14__0_9204 -> bb16__0_9204 [label="1"];
    bb14__0_9204 -> bb4__0_9204 [label="otherwise"];
    bb15__0_9204 -> bb17__0_9204 [label="return"];
    bb15__0_9204 -> bb91__0_9204 [label="unwind"];
    bb16__0_9204 -> bb93__0_9204 [label="return"];
    bb16__0_9204 -> bb101__0_9204 [label="unwind"];
    bb17__0_9204 -> bb18__0_9204 [label="return"];
    bb17__0_9204 -> bb91__0_9204 [label="unwind"];
    bb18__0_9204 -> bb19__0_9204 [label="return"];
    bb18__0_9204 -> bb91__0_9204 [label="unwind"];
    bb19__0_9204 -> bb20__0_9204 [label="return"];
    bb19__0_9204 -> bb90__0_9204 [label="unwind"];
    bb20__0_9204 -> bb21__0_9204 [label="return"];
    bb20__0_9204 -> bb90__0_9204 [label="unwind"];
    bb21__0_9204 -> bb22__0_9204 [label="return"];
    bb21__0_9204 -> bb91__0_9204 [label="unwind"];
    bb22__0_9204 -> bb96__0_9204 [label="return"];
    bb22__0_9204 -> bb101__0_9204 [label="unwind"];
    bb23__0_9204 -> bb29__0_9204 [label="return"];
    bb24__0_9204 -> bb25__0_9204 [label="return"];
    bb25__0_9204 -> bb26__0_9204 [label="return"];
    bb25__0_9204 -> bb89__0_9204 [label="unwind"];
    bb26__0_9204 -> bb103__0_9204 [label="success"];
    bb27__0_9204 -> bb28__0_9204 [label="return"];
    bb27__0_9204 -> bb89__0_9204 [label="unwind"];
    bb28__0_9204 -> bb31__0_9204 [label=""];
    bb29__0_9204 -> bb30__0_9204 [label="return"];
    bb29__0_9204 -> bb88__0_9204 [label="unwind"];
    bb30__0_9204 -> bb31__0_9204 [label=""];
    bb31__0_9204 -> bb32__0_9204 [label="return"];
    bb31__0_9204 -> bb86__0_9204 [label="unwind"];
    bb32__0_9204 -> bb33__0_9204 [label="return"];
    bb32__0_9204 -> bb86__0_9204 [label="unwind"];
    bb33__0_9204 -> bb34__0_9204 [label="return"];
    bb33__0_9204 -> bb86__0_9204 [label="unwind"];
    bb34__0_9204 -> bb35__0_9204 [label="return"];
    bb34__0_9204 -> bb86__0_9204 [label="unwind"];
    bb35__0_9204 -> bb36__0_9204 [label="0"];
    bb35__0_9204 -> bb37__0_9204 [label="1"];
    bb35__0_9204 -> bb4__0_9204 [label="otherwise"];
    bb36__0_9204 -> bb39__0_9204 [label="return"];
    bb36__0_9204 -> bb100__0_9204 [label="unwind"];
    bb37__0_9204 -> bb38__0_9204 [label="return"];
    bb37__0_9204 -> bb100__0_9204 [label="unwind"];
    bb38__0_9204 -> bb78__0_9204 [label=""];
    bb39__0_9204 -> bb40__0_9204 [label="return"];
    bb39__0_9204 -> bb100__0_9204 [label="unwind"];
    bb40__0_9204 -> bb41__0_9204 [label="0"];
    bb40__0_9204 -> bb42__0_9204 [label="1"];
    bb40__0_9204 -> bb4__0_9204 [label="otherwise"];
    bb41__0_9204 -> bb44__0_9204 [label="0"];
    bb41__0_9204 -> bb45__0_9204 [label="1"];
    bb41__0_9204 -> bb4__0_9204 [label="otherwise"];
    bb42__0_9204 -> bb43__0_9204 [label="return"];
    bb42__0_9204 -> bb99__0_9204 [label="unwind"];
    bb43__0_9204 -> bb78__0_9204 [label=""];
    bb44__0_9204 -> bb57__0_9204 [label="return"];
    bb44__0_9204 -> bb83__0_9204 [label="unwind"];
    bb45__0_9204 -> bb46__0_9204 [label="return"];
    bb45__0_9204 -> bb83__0_9204 [label="unwind"];
    bb46__0_9204 -> bb47__0_9204 [label="return"];
    bb46__0_9204 -> bb83__0_9204 [label="unwind"];
    bb47__0_9204 -> bb48__0_9204 [label="return"];
    bb47__0_9204 -> bb83__0_9204 [label="unwind"];
    bb48__0_9204 -> bb49__0_9204 [label="0"];
    bb48__0_9204 -> bb50__0_9204 [label="1"];
    bb48__0_9204 -> bb4__0_9204 [label="otherwise"];
    bb49__0_9204 -> bb52__0_9204 [label="return"];
    bb49__0_9204 -> bb98__0_9204 [label="unwind"];
    bb50__0_9204 -> bb51__0_9204 [label="return"];
    bb50__0_9204 -> bb98__0_9204 [label="unwind"];
    bb51__0_9204 -> bb95__0_9204 [label=""];
    bb52__0_9204 -> bb53__0_9204 [label="return"];
    bb52__0_9204 -> bb98__0_9204 [label="unwind"];
    bb53__0_9204 -> bb54__0_9204 [label="0"];
    bb53__0_9204 -> bb55__0_9204 [label="1"];
    bb53__0_9204 -> bb4__0_9204 [label="otherwise"];
    bb54__0_9204 -> bb68__0_9204 [label=""];
    bb55__0_9204 -> bb56__0_9204 [label="return"];
    bb55__0_9204 -> bb98__0_9204 [label="unwind"];
    bb56__0_9204 -> bb95__0_9204 [label=""];
    bb57__0_9204 -> bb58__0_9204 [label="return"];
    bb57__0_9204 -> bb83__0_9204 [label="unwind"];
    bb58__0_9204 -> bb59__0_9204 [label="return"];
    bb58__0_9204 -> bb83__0_9204 [label="unwind"];
    bb59__0_9204 -> bb60__0_9204 [label="0"];
    bb59__0_9204 -> bb61__0_9204 [label="1"];
    bb59__0_9204 -> bb4__0_9204 [label="otherwise"];
    bb60__0_9204 -> bb63__0_9204 [label="return"];
    bb60__0_9204 -> bb97__0_9204 [label="unwind"];
    bb61__0_9204 -> bb62__0_9204 [label="return"];
    bb61__0_9204 -> bb97__0_9204 [label="unwind"];
    bb62__0_9204 -> bb94__0_9204 [label=""];
    bb63__0_9204 -> bb64__0_9204 [label="return"];
    bb63__0_9204 -> bb97__0_9204 [label="unwind"];
    bb64__0_9204 -> bb65__0_9204 [label="0"];
    bb64__0_9204 -> bb66__0_9204 [label="1"];
    bb64__0_9204 -> bb4__0_9204 [label="otherwise"];
    bb65__0_9204 -> bb68__0_9204 [label=""];
    bb66__0_9204 -> bb67__0_9204 [label="return"];
    bb66__0_9204 -> bb97__0_9204 [label="unwind"];
    bb67__0_9204 -> bb94__0_9204 [label=""];
    bb68__0_9204 -> bb69__0_9204 [label="return"];
    bb68__0_9204 -> bb84__0_9204 [label="unwind"];
    bb69__0_9204 -> bb70__0_9204 [label="return"];
    bb69__0_9204 -> bb85__0_9204 [label="unwind"];
    bb70__0_9204 -> bb71__0_9204 [label="return"];
    bb70__0_9204 -> bb86__0_9204 [label="unwind"];
    bb71__0_9204 -> bb72__0_9204 [label="return"];
    bb71__0_9204 -> bb87__0_9204 [label="unwind"];
    bb72__0_9204 -> bb73__0_9204 [label="return"];
    bb72__0_9204 -> bb92__0_9204 [label="unwind"];
    bb73__0_9204 -> bb82__0_9204 [label=""];
    bb74__0_9204 -> bb75__0_9204 [label="return"];
    bb74__0_9204 -> bb84__0_9204 [label="unwind"];
    bb75__0_9204 -> bb76__0_9204 [label="return"];
    bb75__0_9204 -> bb85__0_9204 [label="unwind"];
    bb76__0_9204 -> bb77__0_9204 [label="return"];
    bb76__0_9204 -> bb86__0_9204 [label="unwind"];
    bb77__0_9204 -> bb79__0_9204 [label=""];
    bb78__0_9204 -> bb79__0_9204 [label=""];
    bb79__0_9204 -> bb80__0_9204 [label="return"];
    bb79__0_9204 -> bb87__0_9204 [label="unwind"];
    bb80__0_9204 -> bb81__0_9204 [label="return"];
    bb80__0_9204 -> bb92__0_9204 [label="unwind"];
    bb81__0_9204 -> bb82__0_9204 [label=""];
    bb83__0_9204 -> bb84__0_9204 [label="return"];
    bb84__0_9204 -> bb85__0_9204 [label="return"];
    bb85__0_9204 -> bb86__0_9204 [label="return"];
    bb86__0_9204 -> bb87__0_9204 [label="return"];
    bb87__0_9204 -> bb92__0_9204 [label="return"];
    bb88__0_9204 -> bb92__0_9204 [label="return"];
    bb89__0_9204 -> bb92__0_9204 [label="return"];
    bb90__0_9204 -> bb91__0_9204 [label="return"];
    bb91__0_9204 -> bb101__0_9204 [label="return"];
    bb93__0_9204 -> bb24__0_9204 [label="0"];
    bb93__0_9204 -> bb23__0_9204 [label="1"];
    bb93__0_9204 -> bb4__0_9204 [label="otherwise"];
    bb94__0_9204 -> bb74__0_9204 [label=""];
    bb95__0_9204 -> bb74__0_9204 [label=""];
    bb96__0_9204 -> bb82__0_9204 [label=""];
    bb97__0_9204 -> bb83__0_9204 [label=""];
    bb98__0_9204 -> bb83__0_9204 [label=""];
    bb99__0_9204 -> bb100__0_9204 [label=""];
    bb100__0_9204 -> bb86__0_9204 [label=""];
    bb101__0_9204 -> bb92__0_9204 [label=""];
    bb102__0_9204 -> bb92__0_9204 [label=""];
    bb103__0_9204 -> bb27__0_9204 [label="return"];
    bb103__0_9204 -> bb89__0_9204 [label="unwind"];
}
