digraph Mir_0_13539 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;instructions::user::DeleteUser&lt;'info&gt; as anchor_lang::AccountsExit&lt;'info&gt;&gt;::exit(_1: &amp;ReErased instructions::user::DeleteUser&lt;ReErased&gt;, _2: &amp;ReErased anchor_lang::prelude::Pubkey) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _3: ();<br align="left"/>let _4: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let _5: ();<br align="left"/>let mut _6: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _7: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _8: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _9: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _10: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _11: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _12: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _13: Closure(DefId(0:13540 ~ drift[d311]::instructions::user::{impl#181}::exit::{closure#0}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _14: isize;<br align="left"/>let _15: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _16: !;<br align="left"/>let mut _17: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _18: ();<br align="left"/>let _19: ();<br align="left"/>let mut _20: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _21: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _22: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _23: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let _24: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _25: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _26: Closure(DefId(0:13541 ~ drift[d311]::instructions::user::{impl#181}::exit::{closure#1}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _27: isize;<br align="left"/>let _28: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _29: !;<br align="left"/>let mut _30: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _31: ();<br align="left"/>let _32: ();<br align="left"/>let mut _33: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _34: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _35: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _36: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let _37: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _38: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _39: Closure(DefId(0:13542 ~ drift[d311]::instructions::user::{impl#181}::exit::{closure#2}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _40: isize;<br align="left"/>let _41: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _42: !;<br align="left"/>let mut _43: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _44: ();<br align="left"/>let _45: ();<br align="left"/>let mut _46: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _47: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _48: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _49: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let _50: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _51: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _52: Closure(DefId(0:13543 ~ drift[d311]::instructions::user::{impl#181}::exit::{closure#3}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _53: isize;<br align="left"/>let _54: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _55: !;<br align="left"/>let mut _56: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _57: ();<br align="left"/>let mut _58: ();<br align="left"/>let mut _59: isize;<br align="left"/>let mut _60: isize;<br align="left"/>let mut _61: isize;<br align="left"/>let mut _62: isize;<br align="left"/>let mut _63: isize;<br align="left"/>let mut _64: isize;<br align="left"/>let mut _65: isize;<br align="left"/>let mut _66: isize;<br align="left"/>let mut _67: isize;<br align="left"/>let mut _68: isize;<br align="left"/>let mut _69: isize;<br align="left"/>let mut _70: isize;<br align="left"/>let mut _71: isize;<br align="left"/>let mut _72: isize;<br align="left"/>let mut _73: isize;<br align="left"/>let mut _74: isize;<br align="left"/>let mut _75: isize;<br align="left"/>let mut _76: isize;<br align="left"/>let mut _77: isize;<br align="left"/>let mut _78: isize;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug program_id =&gt; _2;<br align="left"/>debug authority =&gt; _4;<br align="left"/>debug residual =&gt; _15;<br align="left"/>debug val =&gt; _18;<br align="left"/>debug residual =&gt; _28;<br align="left"/>debug val =&gt; _31;<br align="left"/>debug residual =&gt; _41;<br align="left"/>debug val =&gt; _44;<br align="left"/>debug residual =&gt; _54;<br align="left"/>debug val =&gt; _57;<br align="left"/>>;
    bb0__0_13539 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>_4 = &amp;((*_1).3: anchor_lang::prelude::Signer&lt;'_&gt;)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = &amp;((*_1).0: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/>_9 = &amp;(*_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = &amp;(*_4)<br/></td></tr><tr><td align="left">_11 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::ToAccountInfo&lt;'_&gt;&gt;::to_account_info(move _12)</td></tr></table>>];
    bb1__0_13539 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/></td></tr><tr><td align="left">_8 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt; as AccountsClose&lt;'_&gt;&gt;::close(move _9, move _11)</td></tr></table>>];
    bb2__0_13539 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_9)<br/>StorageLive(_13)<br/>_13 = {closure@programs/drift/src/instructions/user.rs:4463:10: 4463:18}<br/></td></tr><tr><td align="left">_7 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/user.rs:4463:10: 4463:18}&gt;(move _8, move _13)</td></tr></table>>];
    bb3__0_13539 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">_6 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _7)</td></tr></table>>];
    bb4__0_13539 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>_14 = discriminant(_6)<br/></td></tr><tr><td align="left">switchInt(move _14)</td></tr></table>>];
    bb5__0_13539 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_18)<br/>_18 = ((_6 as Continue).0: ())<br/>_5 = _18<br/>StorageDead(_18)<br/>_59 = discriminant(_6)<br/>StorageDead(_10)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>_3 = const ()<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_24 = &amp;((*_1).1: anchor_lang::prelude::AccountLoader&lt;'_, state::user::UserStats&gt;)<br/>_23 = &amp;(*_24)<br/>StorageLive(_25)<br/>_25 = &amp;(*_2)<br/></td></tr><tr><td align="left">_22 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, UserStats&gt; as anchor_lang::AccountsExit&lt;'_&gt;&gt;::exit(move _23, move _25)</td></tr></table>>];
    bb6__0_13539 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb7__0_13539 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_15)<br/>_15 = move ((_6 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_17)<br/>_17 = move _15<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _17)</td></tr></table>>];
    bb8__0_13539 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_15)<br/>_73 = discriminant(_6)<br/>StorageDead(_10)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_13539 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_23)<br/>StorageLive(_26)<br/>_26 = {closure@programs/drift/src/instructions/user.rs:4463:10: 4463:18}<br/></td></tr><tr><td align="left">_21 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/user.rs:4463:10: 4463:18}&gt;(move _22, move _26)</td></tr></table>>];
    bb10__0_13539 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">_20 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _21)</td></tr></table>>];
    bb11__0_13539 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>_27 = discriminant(_20)<br/></td></tr><tr><td align="left">switchInt(move _27)</td></tr></table>>];
    bb12__0_13539 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_31)<br/>_31 = ((_20 as Continue).0: ())<br/>_19 = _31<br/>StorageDead(_31)<br/>_61 = discriminant(_20)<br/>StorageDead(_24)<br/>StorageDead(_20)<br/>StorageDead(_19)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>_37 = &amp;((*_1).2: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_36 = &amp;(*_37)<br/>StorageLive(_38)<br/>_38 = &amp;(*_2)<br/></td></tr><tr><td align="left">_35 = &lt;Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt; as anchor_lang::AccountsExit&lt;'_&gt;&gt;::exit(move _36, move _38)</td></tr></table>>];
    bb13__0_13539 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_28)<br/>_28 = move ((_20 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_30)<br/>_30 = move _28<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _30)</td></tr></table>>];
    bb14__0_13539 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_28)<br/>_71 = discriminant(_20)<br/>StorageDead(_24)<br/>StorageDead(_20)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_13539 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_36)<br/>StorageLive(_39)<br/>_39 = {closure@programs/drift/src/instructions/user.rs:4463:10: 4463:18}<br/></td></tr><tr><td align="left">_34 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/user.rs:4463:10: 4463:18}&gt;(move _35, move _39)</td></tr></table>>];
    bb16__0_13539 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">_33 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _34)</td></tr></table>>];
    bb17__0_13539 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>_40 = discriminant(_33)<br/></td></tr><tr><td align="left">switchInt(move _40)</td></tr></table>>];
    bb18__0_13539 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_44)<br/>_44 = ((_33 as Continue).0: ())<br/>_32 = _44<br/>StorageDead(_44)<br/>_63 = discriminant(_33)<br/>StorageDead(_37)<br/>StorageDead(_33)<br/>StorageDead(_32)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>_50 = &amp;((*_1).3: anchor_lang::prelude::Signer&lt;'_&gt;)<br/>_49 = &amp;(*_50)<br/>StorageLive(_51)<br/>_51 = &amp;(*_2)<br/></td></tr><tr><td align="left">_48 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::AccountsExit&lt;'_&gt;&gt;::exit(move _49, move _51)</td></tr></table>>];
    bb19__0_13539 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_41)<br/>_41 = move ((_33 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_43)<br/>_43 = move _41<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _43)</td></tr></table>>];
    bb20__0_13539 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_41)<br/>_69 = discriminant(_33)<br/>StorageDead(_37)<br/>StorageDead(_33)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_13539 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageDead(_49)<br/>StorageLive(_52)<br/>_52 = {closure@programs/drift/src/instructions/user.rs:4463:10: 4463:18}<br/></td></tr><tr><td align="left">_47 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/user.rs:4463:10: 4463:18}&gt;(move _48, move _52)</td></tr></table>>];
    bb22__0_13539 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">_46 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _47)</td></tr></table>>];
    bb23__0_13539 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>_53 = discriminant(_46)<br/></td></tr><tr><td align="left">switchInt(move _53)</td></tr></table>>];
    bb24__0_13539 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_57)<br/>_57 = ((_46 as Continue).0: ())<br/>_45 = _57<br/>StorageDead(_57)<br/>_65 = discriminant(_46)<br/>StorageDead(_50)<br/>StorageDead(_46)<br/>StorageDead(_45)<br/>StorageLive(_58)<br/>_58 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _58)<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_13539 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_54)<br/>_54 = move ((_46 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_56)<br/>_56 = move _54<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _56)</td></tr></table>>];
    bb26__0_13539 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_54)<br/>_67 = discriminant(_46)<br/>StorageDead(_50)<br/>StorageDead(_46)<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_13539 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left">return</td></tr></table>>];
    bb28__0_13539 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">28 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb29__0_13539 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">29 (cleanup)</td></tr><tr><td align="left" balign="left">_75 = discriminant(_46)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_13539 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">30 (cleanup)</td></tr><tr><td align="left" balign="left">_76 = discriminant(_33)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_13539 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">31 (cleanup)</td></tr><tr><td align="left" balign="left">_77 = discriminant(_20)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_13539 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">32 (cleanup)</td></tr><tr><td align="left" balign="left">_78 = discriminant(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_13539 -> bb1__0_13539 [label="return"];
    bb1__0_13539 -> bb2__0_13539 [label="return"];
    bb1__0_13539 -> bb28__0_13539 [label="unwind"];
    bb2__0_13539 -> bb3__0_13539 [label="return"];
    bb2__0_13539 -> bb28__0_13539 [label="unwind"];
    bb3__0_13539 -> bb4__0_13539 [label="return"];
    bb3__0_13539 -> bb28__0_13539 [label="unwind"];
    bb4__0_13539 -> bb5__0_13539 [label="0"];
    bb4__0_13539 -> bb7__0_13539 [label="1"];
    bb4__0_13539 -> bb6__0_13539 [label="otherwise"];
    bb5__0_13539 -> bb9__0_13539 [label="return"];
    bb7__0_13539 -> bb8__0_13539 [label="return"];
    bb7__0_13539 -> bb32__0_13539 [label="unwind"];
    bb8__0_13539 -> bb27__0_13539 [label=""];
    bb9__0_13539 -> bb10__0_13539 [label="return"];
    bb9__0_13539 -> bb28__0_13539 [label="unwind"];
    bb10__0_13539 -> bb11__0_13539 [label="return"];
    bb10__0_13539 -> bb28__0_13539 [label="unwind"];
    bb11__0_13539 -> bb12__0_13539 [label="0"];
    bb11__0_13539 -> bb13__0_13539 [label="1"];
    bb11__0_13539 -> bb6__0_13539 [label="otherwise"];
    bb12__0_13539 -> bb15__0_13539 [label="return"];
    bb13__0_13539 -> bb14__0_13539 [label="return"];
    bb13__0_13539 -> bb31__0_13539 [label="unwind"];
    bb14__0_13539 -> bb27__0_13539 [label=""];
    bb15__0_13539 -> bb16__0_13539 [label="return"];
    bb15__0_13539 -> bb28__0_13539 [label="unwind"];
    bb16__0_13539 -> bb17__0_13539 [label="return"];
    bb16__0_13539 -> bb28__0_13539 [label="unwind"];
    bb17__0_13539 -> bb18__0_13539 [label="0"];
    bb17__0_13539 -> bb19__0_13539 [label="1"];
    bb17__0_13539 -> bb6__0_13539 [label="otherwise"];
    bb18__0_13539 -> bb21__0_13539 [label="return"];
    bb19__0_13539 -> bb20__0_13539 [label="return"];
    bb19__0_13539 -> bb30__0_13539 [label="unwind"];
    bb20__0_13539 -> bb27__0_13539 [label=""];
    bb21__0_13539 -> bb22__0_13539 [label="return"];
    bb21__0_13539 -> bb28__0_13539 [label="unwind"];
    bb22__0_13539 -> bb23__0_13539 [label="return"];
    bb22__0_13539 -> bb28__0_13539 [label="unwind"];
    bb23__0_13539 -> bb24__0_13539 [label="0"];
    bb23__0_13539 -> bb25__0_13539 [label="1"];
    bb23__0_13539 -> bb6__0_13539 [label="otherwise"];
    bb24__0_13539 -> bb27__0_13539 [label=""];
    bb25__0_13539 -> bb26__0_13539 [label="return"];
    bb25__0_13539 -> bb29__0_13539 [label="unwind"];
    bb26__0_13539 -> bb27__0_13539 [label=""];
    bb29__0_13539 -> bb28__0_13539 [label=""];
    bb30__0_13539 -> bb28__0_13539 [label=""];
    bb31__0_13539 -> bb28__0_13539 [label=""];
    bb32__0_13539 -> bb28__0_13539 [label=""];
}
