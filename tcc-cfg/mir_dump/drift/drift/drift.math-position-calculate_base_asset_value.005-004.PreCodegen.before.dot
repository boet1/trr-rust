digraph Mir_0_2662 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_base_asset_value(_1: i128, _2: &amp;ReErased state::perp_market::AMM) -&gt; std::result::Result&lt;u128, error::ErrorCode&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: bool;<br align="left"/>let mut _5: i128;<br align="left"/>let mut _6: !;<br align="left"/>let _7: controller::amm::SwapDirection;<br align="left"/>let mut _8: i128;<br align="left"/>let _9: u128;<br align="left"/>let _10: u128;<br align="left"/>let mut _11: (u128, u128);<br align="left"/>let mut _12: u128;<br align="left"/>let mut _13: u128;<br align="left"/>let _14: u128;<br align="left"/>let _15: u128;<br align="left"/>let _16: u128;<br align="left"/>let mut _17: (u128, u128);<br align="left"/>let mut _18: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (u128, u128)&gt;;<br align="left"/>let mut _19: std::result::Result&lt;(u128, u128), error::ErrorCode&gt;;<br align="left"/>let mut _20: u128;<br align="left"/>let mut _21: i128;<br align="left"/>let mut _22: u128;<br align="left"/>let mut _23: controller::amm::SwapDirection;<br align="left"/>let mut _24: u128;<br align="left"/>let mut _25: isize;<br align="left"/>let _26: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _27: !;<br align="left"/>let mut _28: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _29: (u128, u128);<br align="left"/>let _30: u128;<br align="left"/>let mut _31: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _32: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _33: u128;<br align="left"/>let mut _34: u128;<br align="left"/>let mut _35: controller::amm::SwapDirection;<br align="left"/>let mut _36: u128;<br align="left"/>let mut _37: isize;<br align="left"/>let _38: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _39: !;<br align="left"/>let mut _40: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _41: u128;<br align="left"/>let mut _42: u128;<br align="left"/>debug base_asset_amount =&gt; _1;<br align="left"/>debug amm =&gt; _2;<br align="left"/>debug swap_direction =&gt; _7;<br align="left"/>debug base_asset_reserve =&gt; _9;<br align="left"/>debug quote_asset_reserve =&gt; _10;<br align="left"/>debug amm_lp_shares =&gt; _14;<br align="left"/>debug new_quote_asset_reserve =&gt; _15;<br align="left"/>debug _new_base_asset_reserve =&gt; _16;<br align="left"/>debug residual =&gt; _26;<br align="left"/>debug val =&gt; _29;<br align="left"/>debug base_asset_value =&gt; _30;<br align="left"/>debug residual =&gt; _38;<br align="left"/>debug val =&gt; _41;<br align="left"/>>;
    bb0__0_2662 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = _1<br/>_4 = Eq(move _5, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _4)</td></tr></table>>];
    bb1__0_2662 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_0 = std::result::Result::&lt;u128, error::ErrorCode&gt;::Ok(const 0_u128)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb2__0_2662 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_3 = const ()<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = _1<br/></td></tr><tr><td align="left">_7 = swap_direction_to_close_position(move _8)</td></tr></table>>];
    bb3__0_2662 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = ((*_2).5: u128)<br/>StorageLive(_13)<br/>_13 = ((*_2).6: u128)<br/>_11 = (move _12, move _13)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageLive(_9)<br/>_9 = (_11.0: u128)<br/>StorageLive(_10)<br/>_10 = (_11.1: u128)<br/>StorageDead(_11)<br/>StorageLive(_14)<br/>_14 = ((*_2).10: u128)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_21 = _1<br/></td></tr><tr><td align="left">_20 = core::num::&lt;impl i128&gt;::unsigned_abs(move _21)</td></tr></table>>];
    bb4__0_2662 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageLive(_22)<br/>_22 = _9<br/>StorageLive(_23)<br/>_23 = _7<br/>StorageLive(_24)<br/>_24 = _14<br/></td></tr><tr><td align="left">_19 = calculate_swap_output(move _20, move _22, move _23, move _24)</td></tr></table>>];
    bb5__0_2662 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">_18 = &lt;std::result::Result&lt;(u128, u128), error::ErrorCode&gt; as Try&gt;::branch(move _19)</td></tr></table>>];
    bb6__0_2662 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>_25 = discriminant(_18)<br/></td></tr><tr><td align="left">switchInt(move _25)</td></tr></table>>];
    bb7__0_2662 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_29)<br/>_29 = ((_18 as Continue).0: (u128, u128))<br/>_17 = _29<br/>StorageDead(_29)<br/>StorageLive(_15)<br/>_15 = (_17.0: u128)<br/>StorageLive(_16)<br/>_16 = (_17.1: u128)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>_33 = _10<br/>StorageLive(_34)<br/>_34 = _15<br/>StorageLive(_35)<br/>_35 = _7<br/>StorageLive(_36)<br/>_36 = ((*_2).11: u128)<br/></td></tr><tr><td align="left">_32 = calculate_quote_asset_amount_swapped(move _33, move _34, move _35, move _36)</td></tr></table>>];
    bb8__0_2662 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb9__0_2662 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_26)<br/>_26 = ((_18 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_28)<br/>_28 = _26<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _28)</td></tr></table>>];
    bb10__0_2662 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_26)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb11__0_2662 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_35)<br/>StorageDead(_34)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">_31 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _32)</td></tr></table>>];
    bb12__0_2662 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>_37 = discriminant(_31)<br/></td></tr><tr><td align="left">switchInt(move _37)</td></tr></table>>];
    bb13__0_2662 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_41)<br/>_41 = ((_31 as Continue).0: u128)<br/>_30 = _41<br/>StorageDead(_41)<br/>StorageDead(_31)<br/>StorageLive(_42)<br/>_42 = _30<br/>_0 = std::result::Result::&lt;u128, error::ErrorCode&gt;::Ok(move _42)<br/>StorageDead(_42)<br/>StorageDead(_30)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_2662 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_38)<br/>_38 = ((_31 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_40)<br/>_40 = _38<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _40)</td></tr></table>>];
    bb15__0_2662 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageDead(_38)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_2662 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_2662 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2662 -> bb2__0_2662 [label="0"];
    bb0__0_2662 -> bb1__0_2662 [label="otherwise"];
    bb1__0_2662 -> bb17__0_2662 [label=""];
    bb2__0_2662 -> bb3__0_2662 [label="return"];
    bb3__0_2662 -> bb4__0_2662 [label="return"];
    bb4__0_2662 -> bb5__0_2662 [label="return"];
    bb5__0_2662 -> bb6__0_2662 [label="return"];
    bb6__0_2662 -> bb7__0_2662 [label="0"];
    bb6__0_2662 -> bb9__0_2662 [label="1"];
    bb6__0_2662 -> bb8__0_2662 [label="otherwise"];
    bb7__0_2662 -> bb11__0_2662 [label="return"];
    bb9__0_2662 -> bb10__0_2662 [label="return"];
    bb10__0_2662 -> bb16__0_2662 [label=""];
    bb11__0_2662 -> bb12__0_2662 [label="return"];
    bb12__0_2662 -> bb13__0_2662 [label="0"];
    bb12__0_2662 -> bb14__0_2662 [label="1"];
    bb12__0_2662 -> bb8__0_2662 [label="otherwise"];
    bb13__0_2662 -> bb17__0_2662 [label=""];
    bb14__0_2662 -> bb15__0_2662 [label="return"];
    bb15__0_2662 -> bb16__0_2662 [label=""];
    bb16__0_2662 -> bb17__0_2662 [label=""];
}
