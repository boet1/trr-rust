digraph Mir_0_4346 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn SpotPosition::get_signed_token_amount(_1: &amp;ReErased state::user::SpotPosition, _2: &amp;ReErased state::spot_market::SpotMarket) -&gt; std::result::Result&lt;i128, error::ErrorCode&gt;<br align="left"/>let mut _3: u128;<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _5: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _6: u128;<br align="left"/>let mut _7: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _8: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _9: u64;<br align="left"/>let mut _10: isize;<br align="left"/>let _11: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _12: !;<br align="left"/>let mut _13: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _14: u128;<br align="left"/>let mut _15: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _16: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _17: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _18: isize;<br align="left"/>let _19: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _20: !;<br align="left"/>let mut _21: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _22: u128;<br align="left"/>let mut _23: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _24: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug spot_market =&gt; _2;<br align="left"/>debug residual =&gt; _11;<br align="left"/>debug val =&gt; _14;<br align="left"/>debug residual =&gt; _19;<br align="left"/>debug val =&gt; _22;<br align="left"/>>;
    bb0__0_4346 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = ((*_1).0: u64)<br/></td></tr><tr><td align="left">_8 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _9)</td></tr></table>>];
    bb1__0_4346 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _8)</td></tr></table>>];
    bb2__0_4346 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_10 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _10)</td></tr></table>>];
    bb3__0_4346 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = ((_7 as Continue).0: u128)<br/>_6 = _14<br/>StorageDead(_14)<br/>StorageLive(_15)<br/>_15 = &amp;(*_2)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_17 = &amp;((*_1).5: state::spot_market::SpotBalanceType)<br/>_16 = &amp;(*_17)<br/></td></tr><tr><td align="left">_5 = get_token_amount(move _6, move _15, move _16)</td></tr></table>>];
    bb4__0_4346 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_4346 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = ((_7 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_13)<br/>_13 = _11<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _13)</td></tr></table>>];
    bb6__0_4346 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_11)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_4346 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_15)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb8__0_4346 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_18 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _18)</td></tr></table>>];
    bb9__0_4346 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_22)<br/>_22 = ((_4 as Continue).0: u128)<br/>_3 = _22<br/>StorageDead(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_24 = &amp;((*_1).5: state::spot_market::SpotBalanceType)<br/>_23 = &amp;(*_24)<br/></td></tr><tr><td align="left">_0 = get_signed_token_amount(move _3, move _23)</td></tr></table>>];
    bb10__0_4346 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_19)<br/>_19 = ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_21)<br/>_21 = _19<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _21)</td></tr></table>>];
    bb11__0_4346 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_19)<br/>StorageDead(_3)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_4346 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_3)<br/>StorageDead(_24)<br/>StorageDead(_17)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_4346 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_4346 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_4346 -> bb1__0_4346 [label="return"];
    bb1__0_4346 -> bb2__0_4346 [label="return"];
    bb2__0_4346 -> bb3__0_4346 [label="0"];
    bb2__0_4346 -> bb5__0_4346 [label="1"];
    bb2__0_4346 -> bb4__0_4346 [label="otherwise"];
    bb3__0_4346 -> bb7__0_4346 [label="return"];
    bb5__0_4346 -> bb6__0_4346 [label="return"];
    bb6__0_4346 -> bb13__0_4346 [label=""];
    bb7__0_4346 -> bb8__0_4346 [label="return"];
    bb8__0_4346 -> bb9__0_4346 [label="0"];
    bb8__0_4346 -> bb10__0_4346 [label="1"];
    bb8__0_4346 -> bb4__0_4346 [label="otherwise"];
    bb9__0_4346 -> bb12__0_4346 [label="return"];
    bb10__0_4346 -> bb11__0_4346 [label="return"];
    bb11__0_4346 -> bb13__0_4346 [label=""];
    bb12__0_4346 -> bb14__0_4346 [label=""];
    bb13__0_4346 -> bb14__0_4346 [label=""];
}
