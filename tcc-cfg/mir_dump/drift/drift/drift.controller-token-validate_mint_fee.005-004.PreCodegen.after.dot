digraph Mir_0_856 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn validate_mint_fee(_1: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _2: std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _3: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;&gt;;<br align="left"/>let mut _4: std::result::Result&lt;std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _5: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _6: isize;<br align="left"/>let _7: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _8: !;<br align="left"/>let mut _9: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _10: std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let _11: anchor_spl::token_2022::spl_token_2022::extension::StateWithExtensions&lt;ReErased, anchor_spl::token_2022::spl_token_2022::state::Mint&gt;;<br align="left"/>let mut _12: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_spl::token_2022::spl_token_2022::extension::StateWithExtensions&lt;ReErased, anchor_spl::token_2022::spl_token_2022::state::Mint&gt;&gt;;<br align="left"/>let mut _13: std::result::Result&lt;anchor_spl::token_2022::spl_token_2022::extension::StateWithExtensions&lt;ReErased, anchor_spl::token_2022::spl_token_2022::state::Mint&gt;, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _14: &amp;ReErased [u8];<br align="left"/>let _15: &amp;ReErased &amp;ReErased mut [u8];<br align="left"/>let mut _16: &amp;ReErased std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let _17: &amp;ReErased std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _18: isize;<br align="left"/>let _19: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _20: !;<br align="left"/>let mut _21: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _22: anchor_spl::token_2022::spl_token_2022::extension::StateWithExtensions&lt;ReErased, anchor_spl::token_2022::spl_token_2022::state::Mint&gt;;<br align="left"/>let _23: ();<br align="left"/>let mut _24: std::result::Result&lt;&amp;ReErased anchor_spl::token_2022::spl_token_2022::extension::transfer_fee::TransferFeeConfig, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _25: &amp;ReErased anchor_spl::token_2022::spl_token_2022::extension::StateWithExtensions&lt;ReErased, anchor_spl::token_2022::spl_token_2022::state::Mint&gt;;<br align="left"/>let mut _26: isize;<br align="left"/>let _27: &amp;ReErased anchor_spl::token_2022::spl_token_2022::extension::transfer_fee::TransferFeeConfig;<br align="left"/>let _28: u16;<br align="left"/>let mut _29: spl_pod::primitives::PodU16;<br align="left"/>let mut _30: &amp;ReErased anchor_spl::token_2022::spl_token_2022::extension::transfer_fee::TransferFee;<br align="left"/>let mut _31: &amp;ReErased anchor_spl::token_2022::spl_token_2022::extension::transfer_fee::TransferFeeConfig;<br align="left"/>let mut _32: u64;<br align="left"/>let mut _33: anchor_lang::prelude::Clock;<br align="left"/>let mut _34: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _35: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _36: isize;<br align="left"/>let _37: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _38: !;<br align="left"/>let mut _39: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _40: anchor_lang::prelude::Clock;<br align="left"/>let mut _41: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _42: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _43: bool;<br align="left"/>let mut _44: u16;<br align="left"/>let mut _45: ();<br align="left"/>let _46: error::ErrorCode;<br align="left"/>let _47: ();<br align="left"/>let mut _48: &amp;ReErased str;<br align="left"/>let _49: &amp;ReErased str;<br align="left"/>let mut _50: &amp;ReErased std::string::String;<br align="left"/>let _51: &amp;ReErased std::string::String;<br align="left"/>let _52: std::string::String;<br align="left"/>let _53: std::string::String;<br align="left"/>let mut _54: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _55: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _56: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _57: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _58: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _59: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _60: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _61: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _62: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _63: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _64: &amp;ReErased error::ErrorCode;<br align="left"/>let _65: &amp;ReErased error::ErrorCode;<br align="left"/>let mut _66: error::ErrorCode;<br align="left"/>let mut _67: isize;<br align="left"/>let _68: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _69: !;<br align="left"/>let mut _70: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _71: ();<br align="left"/>let mut _72: ();<br align="left"/>let mut _73: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _74: &amp;ReErased mut [u8];<br align="left"/>let mut _75: bool;<br align="left"/>let mut _76: bool;<br align="left"/>let mut _77: isize;<br align="left"/>let mut _78: isize;<br align="left"/>let mut _79: isize;<br align="left"/>let mut _80: isize;<br align="left"/>let mut _81: isize;<br align="left"/>let mut _82: isize;<br align="left"/>let mut _83: isize;<br align="left"/>let mut _84: isize;<br align="left"/>let mut _85: isize;<br align="left"/>let mut _86: isize;<br align="left"/>let mut _87: isize;<br align="left"/>let mut _88: isize;<br align="left"/>let mut _89: isize;<br align="left"/>let mut _90: isize;<br align="left"/>let mut _91: isize;<br align="left"/>debug account_info =&gt; _1;<br align="left"/>debug mint_data =&gt; _2;<br align="left"/>debug residual =&gt; _7;<br align="left"/>debug val =&gt; _10;<br align="left"/>debug mint_with_extension =&gt; _11;<br align="left"/>debug residual =&gt; _19;<br align="left"/>debug val =&gt; _22;<br align="left"/>debug fee_config =&gt; _27;<br align="left"/>debug fee =&gt; _28;<br align="left"/>debug residual =&gt; _37;<br align="left"/>debug val =&gt; _40;<br align="left"/>debug error_code =&gt; _46;<br align="left"/>debug res =&gt; _53;<br align="left"/>debug residual =&gt; _68;<br align="left"/>debug val =&gt; _71;<br align="left"/>>;
    bb0__0_856 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_76 = const false<br/>_75 = const false<br/>StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = &amp;(*_1)<br/></td></tr><tr><td align="left">_4 = anchor_lang::prelude::AccountInfo::&lt;'_&gt;::try_borrow_data(move _5)</td></tr></table>>];
    bb1__0_856 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">_3 = &lt;std::result::Result&lt;Ref&lt;'_, &amp;mut [u8]&gt;, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _4)</td></tr></table>>];
    bb2__0_856 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>_6 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _6)</td></tr></table>>];
    bb3__0_856 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>_10 = move ((_3 as Continue).0: std::cell::Ref&lt;'_, &amp;mut [u8]&gt;)<br/>_2 = move _10<br/>StorageDead(_10)<br/>_77 = discriminant(_3)<br/>StorageDead(_3)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_17 = &amp;_2<br/>_16 = &amp;(*_17)<br/></td></tr><tr><td align="left">_15 = &lt;Ref&lt;'_, &amp;mut [u8]&gt; as Deref&gt;::deref(move _16)</td></tr></table>>];
    bb4__0_856 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_856 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_7)<br/>_7 = move ((_3 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_9)<br/>_9 = move _7<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _9)</td></tr></table>>];
    bb6__0_856 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_7)<br/>_87 = discriminant(_3)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_856 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">_74 = deref_copy (*_15)<br/>_14 = &amp;(*_74)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">_13 = StateWithExtensions::&lt;'_, anchor_spl::token_2022::spl_token_2022::state::Mint&gt;::unpack(move _14)</td></tr></table>>];
    bb8__0_856 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/></td></tr><tr><td align="left">_12 = &lt;std::result::Result&lt;StateWithExtensions&lt;'_, anchor_spl::token_2022::spl_token_2022::state::Mint&gt;, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _13)</td></tr></table>>];
    bb9__0_856 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>_18 = discriminant(_12)<br/></td></tr><tr><td align="left">switchInt(move _18)</td></tr></table>>];
    bb10__0_856 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_22)<br/>_22 = move ((_12 as Continue).0: anchor_spl::token_2022::spl_token_2022::extension::StateWithExtensions&lt;'_, anchor_spl::token_2022::spl_token_2022::state::Mint&gt;)<br/>_11 = move _22<br/>StorageDead(_22)<br/>_79 = discriminant(_12)<br/>StorageDead(_17)<br/>StorageDead(_15)<br/>StorageDead(_12)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>_25 = &amp;_11<br/></td></tr><tr><td align="left">_24 = &lt;StateWithExtensions&lt;'_, anchor_spl::token_2022::spl_token_2022::state::Mint&gt; as BaseStateWithExtensions&lt;anchor_spl::token_2022::spl_token_2022::state::Mint&gt;&gt;::get_extension::&lt;anchor_spl::token_2022::spl_token_2022::extension::transfer_fee::TransferFeeConfig&gt;(move _25)</td></tr></table>>];
    bb11__0_856 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_19)<br/>_19 = move ((_12 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_21)<br/>_21 = move _19<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _21)</td></tr></table>>];
    bb12__0_856 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_19)<br/>_85 = discriminant(_12)<br/>StorageDead(_17)<br/>StorageDead(_15)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_856 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>_26 = discriminant(_24)<br/></td></tr><tr><td align="left">switchInt(move _26)</td></tr></table>>];
    bb14__0_856 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_27)<br/>_27 = ((_24 as Ok).0: &amp;anchor_spl::token_2022::spl_token_2022::extension::transfer_fee::TransferFeeConfig)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>_31 = &amp;(*_27)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/></td></tr><tr><td align="left">_35 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb15__0_856 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left">_34 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _35)</td></tr></table>>];
    bb16__0_856 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">_75 = const true<br/>_76 = const true<br/>StorageDead(_35)<br/>_36 = discriminant(_34)<br/></td></tr><tr><td align="left">switchInt(move _36)</td></tr></table>>];
    bb17__0_856 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_40)<br/>_40 = move ((_34 as Continue).0: anchor_lang::prelude::Clock)<br/>_33 = move _40<br/>StorageDead(_40)<br/>_32 = (_33.2: u64)<br/></td></tr><tr><td align="left">_30 = anchor_spl::token_2022::spl_token_2022::extension::transfer_fee::TransferFeeConfig::get_epoch_fee(move _31, move _32)</td></tr></table>>];
    bb18__0_856 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_37)<br/>_37 = move ((_34 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_39)<br/>_39 = move _37<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _39)</td></tr></table>>];
    bb19__0_856 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_37)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/>StorageDead(_29)<br/>_83 = discriminant(_34)<br/>_75 = const false<br/>_76 = const false<br/>StorageDead(_34)<br/>StorageDead(_33)<br/>StorageDead(_30)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_856 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_31)<br/>_29 = ((*_30).2: spl_pod::primitives::PodU16)<br/></td></tr><tr><td align="left">_28 = &lt;u16 as From&lt;spl_pod::primitives::PodU16&gt;&gt;::from(move _29)</td></tr></table>>];
    bb21__0_856 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>_81 = discriminant(_34)<br/>_75 = const false<br/>_76 = const false<br/>StorageDead(_34)<br/>StorageDead(_33)<br/>StorageDead(_30)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>_44 = _28<br/>_43 = Eq(move _44, const 0_u16)<br/></td></tr><tr><td align="left">switchInt(move _43)</td></tr></table>>];
    bb22__0_856 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageLive(_45)<br/>_45 = ()<br/>_42 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _45)<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_856 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageLive(_46)<br/>_46 = error::ErrorCode::NonZeroTransferFee<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>_73 = const _<br/>_57 = &amp;(*_73)<br/>_56 = &amp;(*_57)<br/>_55 = move _56 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_56)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>_65 = &amp;_46<br/>_64 = &amp;(*_65)<br/></td></tr><tr><td align="left">_63 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _64)</td></tr></table>>];
    bb24__0_856 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>_62 = [move _63]<br/>StorageDead(_63)<br/>_61 = &amp;_62<br/>_60 = &amp;(*_61)<br/>_59 = move _60 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">_54 = Arguments::&lt;'_&gt;::new_v1(move _55, move _59)</td></tr></table>>];
    bb25__0_856 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">_53 = format(move _54)</td></tr></table>>];
    bb26__0_856 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_65)<br/>StorageDead(_62)<br/>StorageDead(_61)<br/>StorageDead(_57)<br/>_52 = move _53<br/>StorageDead(_53)<br/>_51 = &amp;_52<br/>_50 = &amp;(*_51)<br/></td></tr><tr><td align="left">_49 = &lt;String as Deref&gt;::deref(move _50)</td></tr></table>>];
    bb27__0_856 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">_48 = &amp;(*_49)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">_47 = solana_program::log::sol_log(move _48)</td></tr></table>>];
    bb28__0_856 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/></td></tr><tr><td align="left">drop(_52)</td></tr></table>>];
    bb29__0_856 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_51)<br/>StorageDead(_49)<br/>StorageDead(_47)<br/>StorageLive(_66)<br/>_66 = _46<br/>_42 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _66)<br/>StorageDead(_66)<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_856 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/></td></tr><tr><td align="left">_41 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _42)</td></tr></table>>];
    bb31__0_856 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>_67 = discriminant(_41)<br/></td></tr><tr><td align="left">switchInt(move _67)</td></tr></table>>];
    bb32__0_856 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_71)<br/>_71 = ((_41 as Continue).0: ())<br/>_23 = _71<br/>StorageDead(_71)<br/>StorageDead(_28)<br/>StorageDead(_41)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_856 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageLive(_68)<br/>_68 = ((_41 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_70)<br/>_70 = _68<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _70)</td></tr></table>>];
    bb34__0_856 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_68)<br/>StorageDead(_28)<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_856 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">_23 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_856 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left">drop(_24)</td></tr></table>>];
    bb37__0_856 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_23)<br/>StorageLive(_72)<br/>_72 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _72)<br/>StorageDead(_72)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">drop(_2)</td></tr></table>>];
    bb38__0_856 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_856 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/></td></tr><tr><td align="left">drop(_24)</td></tr></table>>];
    bb40__0_856 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_856 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/></td></tr><tr><td align="left">drop(_2)</td></tr></table>>];
    bb42__0_856 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_856 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left">return</td></tr></table>>];
    bb44__0_856 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">44 (cleanup)</td></tr><tr><td align="left">drop(_52)</td></tr></table>>];
    bb45__0_856 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">45 (cleanup)</td></tr><tr><td align="left">drop(_24)</td></tr></table>>];
    bb46__0_856 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">46 (cleanup)</td></tr><tr><td align="left">drop(_2)</td></tr></table>>];
    bb47__0_856 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">47 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb48__0_856 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">48 (cleanup)</td></tr><tr><td align="left" balign="left">_89 = discriminant(_34)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_856 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">49 (cleanup)</td></tr><tr><td align="left" balign="left">_90 = discriminant(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_856 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">50 (cleanup)</td></tr><tr><td align="left" balign="left">_91 = discriminant(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_856 -> bb1__0_856 [label="return"];
    bb1__0_856 -> bb2__0_856 [label="return"];
    bb1__0_856 -> bb47__0_856 [label="unwind"];
    bb2__0_856 -> bb3__0_856 [label="0"];
    bb2__0_856 -> bb5__0_856 [label="1"];
    bb2__0_856 -> bb4__0_856 [label="otherwise"];
    bb3__0_856 -> bb7__0_856 [label="return"];
    bb3__0_856 -> bb46__0_856 [label="unwind"];
    bb5__0_856 -> bb6__0_856 [label="return"];
    bb5__0_856 -> bb50__0_856 [label="unwind"];
    bb6__0_856 -> bb42__0_856 [label=""];
    bb7__0_856 -> bb8__0_856 [label="return"];
    bb7__0_856 -> bb46__0_856 [label="unwind"];
    bb8__0_856 -> bb9__0_856 [label="return"];
    bb8__0_856 -> bb46__0_856 [label="unwind"];
    bb9__0_856 -> bb10__0_856 [label="0"];
    bb9__0_856 -> bb11__0_856 [label="1"];
    bb9__0_856 -> bb4__0_856 [label="otherwise"];
    bb10__0_856 -> bb13__0_856 [label="return"];
    bb10__0_856 -> bb46__0_856 [label="unwind"];
    bb11__0_856 -> bb12__0_856 [label="return"];
    bb11__0_856 -> bb49__0_856 [label="unwind"];
    bb12__0_856 -> bb41__0_856 [label=""];
    bb13__0_856 -> bb14__0_856 [label="0"];
    bb13__0_856 -> bb35__0_856 [label="otherwise"];
    bb14__0_856 -> bb15__0_856 [label="return"];
    bb14__0_856 -> bb45__0_856 [label="unwind"];
    bb15__0_856 -> bb16__0_856 [label="return"];
    bb15__0_856 -> bb45__0_856 [label="unwind"];
    bb16__0_856 -> bb17__0_856 [label="0"];
    bb16__0_856 -> bb18__0_856 [label="1"];
    bb16__0_856 -> bb4__0_856 [label="otherwise"];
    bb17__0_856 -> bb20__0_856 [label="return"];
    bb17__0_856 -> bb48__0_856 [label="unwind"];
    bb18__0_856 -> bb19__0_856 [label="return"];
    bb18__0_856 -> bb48__0_856 [label="unwind"];
    bb19__0_856 -> bb39__0_856 [label=""];
    bb20__0_856 -> bb21__0_856 [label="return"];
    bb20__0_856 -> bb48__0_856 [label="unwind"];
    bb21__0_856 -> bb23__0_856 [label="0"];
    bb21__0_856 -> bb22__0_856 [label="otherwise"];
    bb22__0_856 -> bb30__0_856 [label=""];
    bb23__0_856 -> bb24__0_856 [label="return"];
    bb23__0_856 -> bb45__0_856 [label="unwind"];
    bb24__0_856 -> bb25__0_856 [label="return"];
    bb24__0_856 -> bb45__0_856 [label="unwind"];
    bb25__0_856 -> bb26__0_856 [label="return"];
    bb25__0_856 -> bb45__0_856 [label="unwind"];
    bb26__0_856 -> bb27__0_856 [label="return"];
    bb26__0_856 -> bb44__0_856 [label="unwind"];
    bb27__0_856 -> bb28__0_856 [label="return"];
    bb27__0_856 -> bb44__0_856 [label="unwind"];
    bb28__0_856 -> bb29__0_856 [label="return"];
    bb28__0_856 -> bb45__0_856 [label="unwind"];
    bb29__0_856 -> bb30__0_856 [label=""];
    bb30__0_856 -> bb31__0_856 [label="return"];
    bb30__0_856 -> bb45__0_856 [label="unwind"];
    bb31__0_856 -> bb32__0_856 [label="0"];
    bb31__0_856 -> bb33__0_856 [label="1"];
    bb31__0_856 -> bb4__0_856 [label="otherwise"];
    bb32__0_856 -> bb36__0_856 [label=""];
    bb33__0_856 -> bb34__0_856 [label="return"];
    bb33__0_856 -> bb45__0_856 [label="unwind"];
    bb34__0_856 -> bb39__0_856 [label=""];
    bb35__0_856 -> bb36__0_856 [label=""];
    bb36__0_856 -> bb37__0_856 [label="return"];
    bb36__0_856 -> bb46__0_856 [label="unwind"];
    bb37__0_856 -> bb38__0_856 [label="return"];
    bb37__0_856 -> bb47__0_856 [label="unwind"];
    bb38__0_856 -> bb43__0_856 [label=""];
    bb39__0_856 -> bb40__0_856 [label="return"];
    bb39__0_856 -> bb46__0_856 [label="unwind"];
    bb40__0_856 -> bb41__0_856 [label=""];
    bb41__0_856 -> bb42__0_856 [label="return"];
    bb41__0_856 -> bb47__0_856 [label="unwind"];
    bb42__0_856 -> bb43__0_856 [label=""];
    bb44__0_856 -> bb45__0_856 [label="return"];
    bb45__0_856 -> bb46__0_856 [label="return"];
    bb46__0_856 -> bb47__0_856 [label="return"];
    bb48__0_856 -> bb45__0_856 [label=""];
    bb49__0_856 -> bb46__0_856 [label=""];
    bb50__0_856 -> bb47__0_856 [label=""];
}
