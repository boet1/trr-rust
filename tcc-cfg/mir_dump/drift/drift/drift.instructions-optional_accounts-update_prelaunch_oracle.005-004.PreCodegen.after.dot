digraph Mir_0_1442 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn instructions::optional_accounts::update_prelaunch_oracle(_1: &amp;ReErased state::perp_market::PerpMarket, _2: &amp;ReErased state::oracle_map::OracleMap&lt;ReErased&gt;, _3: u64) -&gt; std::result::Result&lt;(), error::ErrorCode&gt;<br align="left"/>let _4: ();<br align="left"/>let mut _5: bool;<br align="left"/>let mut _6: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let mut _7: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let _8: state::oracle::OracleSource;<br align="left"/>let mut _9: !;<br align="left"/>let mut _10: ();<br align="left"/>let _11: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _12: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _13: std::result::Result&lt;anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _14: &amp;ReErased state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _15: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _16: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _17: isize;<br align="left"/>let _18: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _19: !;<br align="left"/>let mut _20: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _21: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _22: std::cell::RefMut&lt;ReErased, state::oracle::PrelaunchOracle&gt;;<br align="left"/>let mut _23: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::oracle::PrelaunchOracle&gt;&gt;;<br align="left"/>let mut _24: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::oracle::PrelaunchOracle&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _25: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::oracle::PrelaunchOracle&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _26: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _27: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _28: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::oracle::PrelaunchOracle&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _29: error::ErrorCode;<br align="left"/>let mut _30: isize;<br align="left"/>let _31: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _32: !;<br align="left"/>let mut _33: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _34: std::cell::RefMut&lt;ReErased, state::oracle::PrelaunchOracle&gt;;<br align="left"/>let _35: ();<br align="left"/>let mut _36: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _37: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _38: &amp;ReErased mut state::oracle::PrelaunchOracle;<br align="left"/>let mut _39: &amp;ReErased mut state::oracle::PrelaunchOracle;<br align="left"/>let mut _40: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::oracle::PrelaunchOracle&gt;;<br align="left"/>let mut _41: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _42: u64;<br align="left"/>let mut _43: isize;<br align="left"/>let _44: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _45: !;<br align="left"/>let mut _46: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _47: ();<br align="left"/>let mut _48: ();<br align="left"/>let mut _49: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let mut _50: isize;<br align="left"/>let mut _51: isize;<br align="left"/>let mut _52: isize;<br align="left"/>let mut _53: isize;<br align="left"/>let mut _54: isize;<br align="left"/>let mut _55: isize;<br align="left"/>let mut _56: isize;<br align="left"/>let mut _57: isize;<br align="left"/>let mut _58: isize;<br align="left"/>let mut _59: isize;<br align="left"/>debug perp_market =&gt; _1;<br align="left"/>debug oracle_map =&gt; _2;<br align="left"/>debug slot =&gt; _3;<br align="left"/>debug oracle_account_info =&gt; _11;<br align="left"/>debug residual =&gt; _18;<br align="left"/>debug val =&gt; _21;<br align="left"/>debug oracle =&gt; _22;<br align="left"/>debug residual =&gt; _31;<br align="left"/>debug val =&gt; _34;<br align="left"/>debug residual =&gt; _44;<br align="left"/>debug val =&gt; _47;<br align="left"/>>;
    bb0__0_1442 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = &amp;(((*_1).1: state::perp_market::AMM).72: state::oracle::OracleSource)<br/>StorageLive(_7)<br/>_49 = const _<br/>_7 = &amp;(*_49)<br/></td></tr><tr><td align="left">_5 = &lt;state::oracle::OracleSource as PartialEq&gt;::ne(move _6, move _7)</td></tr></table>>];
    bb1__0_1442 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">switchInt(move _5)</td></tr></table>>];
    bb2__0_1442 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_6)<br/>StorageLive(_10)<br/>_10 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _10)<br/>StorageDead(_10)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb3__0_1442 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_6)<br/>_4 = const ()<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_14 = &amp;(*_2)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_16 = &amp;(((*_1).1: state::perp_market::AMM).0: anchor_lang::prelude::Pubkey)<br/>_15 = &amp;(*_16)<br/></td></tr><tr><td align="left">_13 = OracleMap::&lt;'_&gt;::get_account_info(move _14, move _15)</td></tr></table>>];
    bb4__0_1442 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">_12 = &lt;std::result::Result&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _13)</td></tr></table>>];
    bb5__0_1442 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>_17 = discriminant(_12)<br/></td></tr><tr><td align="left">switchInt(move _17)</td></tr></table>>];
    bb6__0_1442 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = move ((_12 as Continue).0: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_11 = move _21<br/>StorageDead(_21)<br/>_52 = discriminant(_12)<br/>StorageDead(_16)<br/>StorageDead(_12)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_27 = &amp;_11<br/>_26 = &amp;(*_27)<br/></td></tr><tr><td align="left">_25 = load_ref_mut::&lt;PrelaunchOracle&gt;(move _26)</td></tr></table>>];
    bb7__0_1442 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb8__0_1442 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_18)<br/>_18 = ((_12 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_20)<br/>_20 = _18<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _20)</td></tr></table>>];
    bb9__0_1442 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_18)<br/>_50 = discriminant(_12)<br/>StorageDead(_16)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_1442 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_29 = error::ErrorCode::UnableToLoadOracle<br/>_28 = std::result::Result::&lt;RefMut&lt;'_, PrelaunchOracle&gt;, error::ErrorCode&gt;::Err(move _29)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">_24 = std::result::Result::&lt;RefMut&lt;'_, PrelaunchOracle&gt;, anchor_lang::error::Error&gt;::or::&lt;error::ErrorCode&gt;(move _25, move _28)</td></tr></table>>];
    bb11__0_1442 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">_23 = &lt;std::result::Result&lt;RefMut&lt;'_, PrelaunchOracle&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _24)</td></tr></table>>];
    bb12__0_1442 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>_30 = discriminant(_23)<br/></td></tr><tr><td align="left">switchInt(move _30)</td></tr></table>>];
    bb13__0_1442 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_34)<br/>_34 = move ((_23 as Continue).0: std::cell::RefMut&lt;'_, state::oracle::PrelaunchOracle&gt;)<br/>_22 = move _34<br/>StorageDead(_34)<br/>_56 = discriminant(_23)<br/>StorageDead(_27)<br/>StorageDead(_23)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_40 = &amp;mut _22<br/></td></tr><tr><td align="left">_39 = &lt;RefMut&lt;'_, PrelaunchOracle&gt; as DerefMut&gt;::deref_mut(move _40)</td></tr></table>>];
    bb14__0_1442 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_31)<br/>_31 = ((_23 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_33)<br/>_33 = _31<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _33)</td></tr></table>>];
    bb15__0_1442 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_31)<br/>_54 = discriminant(_23)<br/>StorageDead(_27)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_1442 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">_38 = &amp;mut (*_39)<br/>StorageDead(_40)<br/>StorageLive(_41)<br/>_41 = &amp;(*_1)<br/>StorageLive(_42)<br/>_42 = _3<br/></td></tr><tr><td align="left">_37 = PrelaunchOracle::update(move _38, move _41, move _42)</td></tr></table>>];
    bb17__0_1442 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_41)<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">_36 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _37)</td></tr></table>>];
    bb18__0_1442 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>_43 = discriminant(_36)<br/></td></tr><tr><td align="left">switchInt(move _43)</td></tr></table>>];
    bb19__0_1442 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>_47 = ((_36 as Continue).0: ())<br/>_35 = _47<br/>StorageDead(_47)<br/>StorageDead(_39)<br/>StorageDead(_36)<br/>StorageDead(_35)<br/>StorageLive(_48)<br/>_48 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _48)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">drop(_22)</td></tr></table>>];
    bb20__0_1442 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_44)<br/>_44 = ((_36 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_46)<br/>_46 = _44<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _46)</td></tr></table>>];
    bb21__0_1442 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_44)<br/>StorageDead(_39)<br/>StorageDead(_36)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">drop(_22)</td></tr></table>>];
    bb22__0_1442 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/></td></tr><tr><td align="left">drop(_11)</td></tr></table>>];
    bb23__0_1442 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_1442 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/></td></tr><tr><td align="left">drop(_11)</td></tr></table>>];
    bb25__0_1442 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_1442 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left">return</td></tr></table>>];
    bb27__0_1442 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">27 (cleanup)</td></tr><tr><td align="left">drop(_22)</td></tr></table>>];
    bb28__0_1442 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">28 (cleanup)</td></tr><tr><td align="left">drop(_11)</td></tr></table>>];
    bb29__0_1442 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">29 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb30__0_1442 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">30 (cleanup)</td></tr><tr><td align="left" balign="left">_58 = discriminant(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_1442 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">31 (cleanup)</td></tr><tr><td align="left" balign="left">_59 = discriminant(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_1442 -> bb1__0_1442 [label="return"];
    bb1__0_1442 -> bb3__0_1442 [label="0"];
    bb1__0_1442 -> bb2__0_1442 [label="otherwise"];
    bb2__0_1442 -> bb26__0_1442 [label=""];
    bb3__0_1442 -> bb4__0_1442 [label="return"];
    bb4__0_1442 -> bb5__0_1442 [label="return"];
    bb4__0_1442 -> bb29__0_1442 [label="unwind"];
    bb5__0_1442 -> bb6__0_1442 [label="0"];
    bb5__0_1442 -> bb8__0_1442 [label="1"];
    bb5__0_1442 -> bb7__0_1442 [label="otherwise"];
    bb6__0_1442 -> bb10__0_1442 [label="return"];
    bb6__0_1442 -> bb28__0_1442 [label="unwind"];
    bb8__0_1442 -> bb9__0_1442 [label="return"];
    bb8__0_1442 -> bb31__0_1442 [label="unwind"];
    bb9__0_1442 -> bb25__0_1442 [label=""];
    bb10__0_1442 -> bb11__0_1442 [label="return"];
    bb10__0_1442 -> bb28__0_1442 [label="unwind"];
    bb11__0_1442 -> bb12__0_1442 [label="return"];
    bb11__0_1442 -> bb28__0_1442 [label="unwind"];
    bb12__0_1442 -> bb13__0_1442 [label="0"];
    bb12__0_1442 -> bb14__0_1442 [label="1"];
    bb12__0_1442 -> bb7__0_1442 [label="otherwise"];
    bb13__0_1442 -> bb16__0_1442 [label="return"];
    bb13__0_1442 -> bb27__0_1442 [label="unwind"];
    bb14__0_1442 -> bb15__0_1442 [label="return"];
    bb14__0_1442 -> bb30__0_1442 [label="unwind"];
    bb15__0_1442 -> bb24__0_1442 [label=""];
    bb16__0_1442 -> bb17__0_1442 [label="return"];
    bb16__0_1442 -> bb27__0_1442 [label="unwind"];
    bb17__0_1442 -> bb18__0_1442 [label="return"];
    bb17__0_1442 -> bb27__0_1442 [label="unwind"];
    bb18__0_1442 -> bb19__0_1442 [label="0"];
    bb18__0_1442 -> bb20__0_1442 [label="1"];
    bb18__0_1442 -> bb7__0_1442 [label="otherwise"];
    bb19__0_1442 -> bb22__0_1442 [label="return"];
    bb19__0_1442 -> bb28__0_1442 [label="unwind"];
    bb20__0_1442 -> bb21__0_1442 [label="return"];
    bb20__0_1442 -> bb27__0_1442 [label="unwind"];
    bb21__0_1442 -> bb24__0_1442 [label="return"];
    bb21__0_1442 -> bb28__0_1442 [label="unwind"];
    bb22__0_1442 -> bb23__0_1442 [label="return"];
    bb22__0_1442 -> bb29__0_1442 [label="unwind"];
    bb23__0_1442 -> bb26__0_1442 [label=""];
    bb24__0_1442 -> bb25__0_1442 [label="return"];
    bb24__0_1442 -> bb29__0_1442 [label="unwind"];
    bb25__0_1442 -> bb26__0_1442 [label=""];
    bb27__0_1442 -> bb28__0_1442 [label="return"];
    bb28__0_1442 -> bb29__0_1442 [label="return"];
    bb30__0_1442 -> bb28__0_1442 [label=""];
    bb31__0_1442 -> bb29__0_1442 [label=""];
}
