digraph Mir_0_5633 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn admin::handle_update_perp_market_max_slippage_ratio(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::admin::AdminUpdatePerpMarket&lt;ReErased&gt;&gt;, _2: u16) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _5: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _6: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _7: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _8: isize;<br align="left"/>let _9: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _10: !;<br align="left"/>let mut _11: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _12: ();<br align="left"/>let _13: ();<br align="left"/>let mut _14: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _15: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _16: bool;<br align="left"/>let mut _17: u16;<br align="left"/>let mut _18: ();<br align="left"/>let _19: error::ErrorCode;<br align="left"/>let _20: ();<br align="left"/>let mut _21: &amp;ReErased str;<br align="left"/>let _22: &amp;ReErased str;<br align="left"/>let mut _23: &amp;ReErased std::string::String;<br align="left"/>let _24: &amp;ReErased std::string::String;<br align="left"/>let _25: std::string::String;<br align="left"/>let _26: std::string::String;<br align="left"/>let mut _27: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _28: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _29: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _30: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _31: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _32: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _33: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _34: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _35: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _36: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _37: &amp;ReErased error::ErrorCode;<br align="left"/>let _38: &amp;ReErased error::ErrorCode;<br align="left"/>let mut _39: error::ErrorCode;<br align="left"/>let mut _40: isize;<br align="left"/>let _41: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _42: !;<br align="left"/>let mut _43: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _44: ();<br align="left"/>let _45: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _46: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _47: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _48: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _49: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _50: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _51: Closure(DefId(0:5634 ~ drift[d311]::instructions::admin::handle_update_perp_market_max_slippage_ratio::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _52: isize;<br align="left"/>let _53: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _54: !;<br align="left"/>let mut _55: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _56: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _57: ();<br align="left"/>let mut _58: &amp;ReErased str;<br align="left"/>let _59: &amp;ReErased str;<br align="left"/>let mut _60: &amp;ReErased std::string::String;<br align="left"/>let _61: &amp;ReErased std::string::String;<br align="left"/>let _62: std::string::String;<br align="left"/>let _63: std::string::String;<br align="left"/>let mut _64: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _65: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _66: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _67: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _68: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _69: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _70: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _71: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _72: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _73: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _74: &amp;ReErased u16;<br align="left"/>let _75: &amp;ReErased u16;<br align="left"/>let _76: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _77: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _78: ();<br align="left"/>let mut _79: &amp;ReErased str;<br align="left"/>let _80: &amp;ReErased str;<br align="left"/>let mut _81: &amp;ReErased std::string::String;<br align="left"/>let _82: &amp;ReErased std::string::String;<br align="left"/>let _83: std::string::String;<br align="left"/>let _84: std::string::String;<br align="left"/>let mut _85: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _86: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _87: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _88: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _89: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _90: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _91: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _92: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _93: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _94: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _95: &amp;ReErased u16;<br align="left"/>let _96: &amp;ReErased u16;<br align="left"/>let _97: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _98: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _99: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _100: &amp;ReErased u16;<br align="left"/>let _101: &amp;ReErased u16;<br align="left"/>let mut _102: u16;<br align="left"/>let mut _103: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _104: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _105: ();<br align="left"/>let mut _106: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _107: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _108: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _109: &amp;ReErased mut instructions::admin::AdminUpdatePerpMarket&lt;ReErased&gt;;<br align="left"/>let mut _110: &amp;ReErased mut instructions::admin::AdminUpdatePerpMarket&lt;ReErased&gt;;<br align="left"/>let mut _111: isize;<br align="left"/>let mut _112: isize;<br align="left"/>let mut _113: isize;<br align="left"/>let mut _114: isize;<br align="left"/>let mut _115: isize;<br align="left"/>let mut _116: isize;<br align="left"/>let mut _117: isize;<br align="left"/>let mut _118: isize;<br align="left"/>let mut _119: isize;<br align="left"/>let mut _120: isize;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug max_slippage_ratio =&gt; _2;<br align="left"/>debug residual =&gt; _9;<br align="left"/>debug val =&gt; _12;<br align="left"/>debug error_code =&gt; _19;<br align="left"/>debug res =&gt; _26;<br align="left"/>debug residual =&gt; _41;<br align="left"/>debug val =&gt; _44;<br align="left"/>debug perp_market =&gt; _45;<br align="left"/>debug residual =&gt; _53;<br align="left"/>debug val =&gt; _56;<br align="left"/>debug res =&gt; _63;<br align="left"/>debug res =&gt; _84;<br align="left"/>>;
    bb0__0_5633 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_109 = deref_copy (_1.1: &amp;mut instructions::admin::AdminUpdatePerpMarket&lt;'_&gt;)<br/>_7 = &amp;((*_109).2: anchor_lang::prelude::AccountLoader&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_6 = &amp;(*_7)<br/></td></tr><tr><td align="left">_5 = constraints::perp_market_valid(move _6)</td></tr></table>>];
    bb1__0_5633 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb2__0_5633 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_8 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb3__0_5633 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_4 as Continue).0: ())<br/>_3 = _12<br/>StorageDead(_12)<br/>_111 = discriminant(_4)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_17 = _2<br/>_16 = Gt(move _17, const 0_u16)<br/></td></tr><tr><td align="left">switchInt(move _16)</td></tr></table>>];
    bb4__0_5633 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_5633 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>_9 = move ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_11)<br/>_11 = move _9<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _11)</td></tr></table>>];
    bb6__0_5633 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_9)<br/>_117 = discriminant(_4)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_5633 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageLive(_18)<br/>_18 = ()<br/>_15 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _18)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_5633 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageLive(_19)<br/>_19 = error::ErrorCode::DefaultError<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>_108 = const _<br/>_30 = &amp;(*_108)<br/>_29 = &amp;(*_30)<br/>_28 = move _29 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_29)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>_38 = &amp;_19<br/>_37 = &amp;(*_38)<br/></td></tr><tr><td align="left">_36 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _37)</td></tr></table>>];
    bb9__0_5633 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>_35 = [move _36]<br/>StorageDead(_36)<br/>_34 = &amp;_35<br/>_33 = &amp;(*_34)<br/>_32 = move _33 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">_27 = Arguments::&lt;'_&gt;::new_v1(move _28, move _32)</td></tr></table>>];
    bb10__0_5633 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">_26 = format(move _27)</td></tr></table>>];
    bb11__0_5633 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_38)<br/>StorageDead(_35)<br/>StorageDead(_34)<br/>StorageDead(_30)<br/>_25 = move _26<br/>StorageDead(_26)<br/>_24 = &amp;_25<br/>_23 = &amp;(*_24)<br/></td></tr><tr><td align="left">_22 = &lt;String as Deref&gt;::deref(move _23)</td></tr></table>>];
    bb12__0_5633 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">_21 = &amp;(*_22)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">_20 = solana_program::log::sol_log(move _21)</td></tr></table>>];
    bb13__0_5633 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/></td></tr><tr><td align="left">drop(_25)</td></tr></table>>];
    bb14__0_5633 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_22)<br/>StorageDead(_20)<br/>StorageLive(_39)<br/>_39 = _19<br/>_15 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _39)<br/>StorageDead(_39)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_5633 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/></td></tr><tr><td align="left">_14 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _15)</td></tr></table>>];
    bb16__0_5633 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>_40 = discriminant(_14)<br/></td></tr><tr><td align="left">switchInt(move _40)</td></tr></table>>];
    bb17__0_5633 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_44)<br/>_44 = ((_14 as Continue).0: ())<br/>_13 = _44<br/>StorageDead(_44)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>_110 = deref_copy (_1.1: &amp;mut instructions::admin::AdminUpdatePerpMarket&lt;'_&gt;)<br/>_50 = &amp;((*_110).2: anchor_lang::prelude::AccountLoader&lt;'_, state::perp_market::PerpMarket&gt;)<br/></td></tr><tr><td align="left">_49 = anchor_lang::prelude::AccountLoader::&lt;'_, PerpMarket&gt;::load_mut(move _50)</td></tr></table>>];
    bb18__0_5633 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_41)<br/>_41 = ((_14 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_43)<br/>_43 = _41<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _43)</td></tr></table>>];
    bb19__0_5633 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_41)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_5633 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageLive(_51)<br/>_51 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_48 = std::result::Result::&lt;RefMut&lt;'_, PerpMarket&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _49, move _51)</td></tr></table>>];
    bb21__0_5633 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">_47 = &lt;std::result::Result&lt;RefMut&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _48)</td></tr></table>>];
    bb22__0_5633 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>_52 = discriminant(_47)<br/></td></tr><tr><td align="left">switchInt(move _52)</td></tr></table>>];
    bb23__0_5633 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_56)<br/>_56 = move ((_47 as Continue).0: std::cell::RefMut&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_46 = move _56<br/>StorageDead(_56)<br/>_45 = &amp;mut _46<br/>_115 = discriminant(_47)<br/>StorageDead(_47)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>_107 = const _<br/>_67 = &amp;(*_107)<br/>_66 = &amp;(*_67)<br/>_65 = move _66 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_66)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>_77 = &amp;(*_45)<br/></td></tr><tr><td align="left">_76 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _77)</td></tr></table>>];
    bb24__0_5633 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_53)<br/>_53 = ((_47 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_55)<br/>_55 = _53<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _55)</td></tr></table>>];
    bb25__0_5633 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_53)<br/>_113 = discriminant(_47)<br/>StorageDead(_47)<br/>StorageDead(_46)<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_5633 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>_75 = &amp;((*_76).21: u16)<br/>_74 = &amp;(*_75)<br/></td></tr><tr><td align="left">_73 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _74)</td></tr></table>>];
    bb27__0_5633 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>_72 = [move _73]<br/>StorageDead(_73)<br/>_71 = &amp;_72<br/>_70 = &amp;(*_71)<br/>_69 = move _70 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_70)<br/></td></tr><tr><td align="left">_64 = Arguments::&lt;'_&gt;::new_v1(move _65, move _69)</td></tr></table>>];
    bb28__0_5633 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">_63 = format(move _64)</td></tr></table>>];
    bb29__0_5633 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageDead(_76)<br/>StorageDead(_75)<br/>StorageDead(_72)<br/>StorageDead(_71)<br/>StorageDead(_67)<br/>_62 = move _63<br/>StorageDead(_63)<br/>_61 = &amp;_62<br/>_60 = &amp;(*_61)<br/></td></tr><tr><td align="left">_59 = &lt;String as Deref&gt;::deref(move _60)</td></tr></table>>];
    bb30__0_5633 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">_58 = &amp;(*_59)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">_57 = solana_program::log::sol_log(move _58)</td></tr></table>>];
    bb31__0_5633 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/></td></tr><tr><td align="left">drop(_62)</td></tr></table>>];
    bb32__0_5633 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageDead(_61)<br/>StorageDead(_59)<br/>StorageDead(_57)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>_106 = const _<br/>_88 = &amp;(*_106)<br/>_87 = &amp;(*_88)<br/>_86 = move _87 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_87)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>_98 = &amp;(*_45)<br/></td></tr><tr><td align="left">_97 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _98)</td></tr></table>>];
    bb33__0_5633 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>_96 = &amp;(((*_97).1: state::perp_market::AMM).69: u16)<br/>_95 = &amp;(*_96)<br/></td></tr><tr><td align="left">_94 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;u16&gt;(move _95)</td></tr></table>>];
    bb34__0_5633 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>_101 = &amp;_2<br/>_100 = &amp;(*_101)<br/></td></tr><tr><td align="left">_99 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;u16&gt;(move _100)</td></tr></table>>];
    bb35__0_5633 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>_93 = [move _94, move _99]<br/>StorageDead(_99)<br/>StorageDead(_94)<br/>_92 = &amp;_93<br/>_91 = &amp;(*_92)<br/>_90 = move _91 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_91)<br/></td></tr><tr><td align="left">_85 = Arguments::&lt;'_&gt;::new_v1(move _86, move _90)</td></tr></table>>];
    bb36__0_5633 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>StorageDead(_86)<br/></td></tr><tr><td align="left">_84 = format(move _85)</td></tr></table>>];
    bb37__0_5633 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>StorageDead(_101)<br/>StorageDead(_97)<br/>StorageDead(_96)<br/>StorageDead(_93)<br/>StorageDead(_92)<br/>StorageDead(_88)<br/>_83 = move _84<br/>StorageDead(_84)<br/>_82 = &amp;_83<br/>_81 = &amp;(*_82)<br/></td></tr><tr><td align="left">_80 = &lt;String as Deref&gt;::deref(move _81)</td></tr></table>>];
    bb38__0_5633 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">_79 = &amp;(*_80)<br/>StorageDead(_81)<br/></td></tr><tr><td align="left">_78 = solana_program::log::sol_log(move _79)</td></tr></table>>];
    bb39__0_5633 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/></td></tr><tr><td align="left">drop(_83)</td></tr></table>>];
    bb40__0_5633 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>StorageDead(_82)<br/>StorageDead(_80)<br/>StorageDead(_78)<br/>StorageLive(_102)<br/>_102 = _2<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>_104 = &amp;mut (*_45)<br/></td></tr><tr><td align="left">_103 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _104)</td></tr></table>>];
    bb41__0_5633 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/>(((*_103).1: state::perp_market::AMM).69: u16) = move _102<br/>StorageDead(_102)<br/>StorageDead(_103)<br/>StorageLive(_105)<br/>_105 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _105)<br/>StorageDead(_105)<br/></td></tr><tr><td align="left">drop(_46)</td></tr></table>>];
    bb42__0_5633 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_5633 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left">return</td></tr></table>>];
    bb44__0_5633 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">44 (cleanup)</td></tr><tr><td align="left">drop(_83)</td></tr></table>>];
    bb45__0_5633 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">45 (cleanup)</td></tr><tr><td align="left">drop(_62)</td></tr></table>>];
    bb46__0_5633 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">46 (cleanup)</td></tr><tr><td align="left">drop(_46)</td></tr></table>>];
    bb47__0_5633 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">47 (cleanup)</td></tr><tr><td align="left">drop(_25)</td></tr></table>>];
    bb48__0_5633 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">48 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb49__0_5633 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">49 (cleanup)</td></tr><tr><td align="left" balign="left">_119 = discriminant(_47)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_5633 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">50 (cleanup)</td></tr><tr><td align="left" balign="left">_120 = discriminant(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_5633 -> bb1__0_5633 [label="return"];
    bb1__0_5633 -> bb2__0_5633 [label="return"];
    bb1__0_5633 -> bb48__0_5633 [label="unwind"];
    bb2__0_5633 -> bb3__0_5633 [label="0"];
    bb2__0_5633 -> bb5__0_5633 [label="1"];
    bb2__0_5633 -> bb4__0_5633 [label="otherwise"];
    bb3__0_5633 -> bb8__0_5633 [label="0"];
    bb3__0_5633 -> bb7__0_5633 [label="otherwise"];
    bb5__0_5633 -> bb6__0_5633 [label="return"];
    bb5__0_5633 -> bb50__0_5633 [label="unwind"];
    bb6__0_5633 -> bb43__0_5633 [label=""];
    bb7__0_5633 -> bb15__0_5633 [label=""];
    bb8__0_5633 -> bb9__0_5633 [label="return"];
    bb9__0_5633 -> bb10__0_5633 [label="return"];
    bb10__0_5633 -> bb11__0_5633 [label="return"];
    bb11__0_5633 -> bb12__0_5633 [label="return"];
    bb11__0_5633 -> bb47__0_5633 [label="unwind"];
    bb12__0_5633 -> bb13__0_5633 [label="return"];
    bb12__0_5633 -> bb47__0_5633 [label="unwind"];
    bb13__0_5633 -> bb14__0_5633 [label="return"];
    bb13__0_5633 -> bb48__0_5633 [label="unwind"];
    bb14__0_5633 -> bb15__0_5633 [label=""];
    bb15__0_5633 -> bb16__0_5633 [label="return"];
    bb16__0_5633 -> bb17__0_5633 [label="0"];
    bb16__0_5633 -> bb18__0_5633 [label="1"];
    bb16__0_5633 -> bb4__0_5633 [label="otherwise"];
    bb17__0_5633 -> bb20__0_5633 [label="return"];
    bb18__0_5633 -> bb19__0_5633 [label="return"];
    bb19__0_5633 -> bb43__0_5633 [label=""];
    bb20__0_5633 -> bb21__0_5633 [label="return"];
    bb20__0_5633 -> bb48__0_5633 [label="unwind"];
    bb21__0_5633 -> bb22__0_5633 [label="return"];
    bb21__0_5633 -> bb48__0_5633 [label="unwind"];
    bb22__0_5633 -> bb23__0_5633 [label="0"];
    bb22__0_5633 -> bb24__0_5633 [label="1"];
    bb22__0_5633 -> bb4__0_5633 [label="otherwise"];
    bb23__0_5633 -> bb26__0_5633 [label="return"];
    bb23__0_5633 -> bb46__0_5633 [label="unwind"];
    bb24__0_5633 -> bb25__0_5633 [label="return"];
    bb24__0_5633 -> bb49__0_5633 [label="unwind"];
    bb25__0_5633 -> bb43__0_5633 [label=""];
    bb26__0_5633 -> bb27__0_5633 [label="return"];
    bb26__0_5633 -> bb46__0_5633 [label="unwind"];
    bb27__0_5633 -> bb28__0_5633 [label="return"];
    bb27__0_5633 -> bb46__0_5633 [label="unwind"];
    bb28__0_5633 -> bb29__0_5633 [label="return"];
    bb28__0_5633 -> bb46__0_5633 [label="unwind"];
    bb29__0_5633 -> bb30__0_5633 [label="return"];
    bb29__0_5633 -> bb45__0_5633 [label="unwind"];
    bb30__0_5633 -> bb31__0_5633 [label="return"];
    bb30__0_5633 -> bb45__0_5633 [label="unwind"];
    bb31__0_5633 -> bb32__0_5633 [label="return"];
    bb31__0_5633 -> bb46__0_5633 [label="unwind"];
    bb32__0_5633 -> bb33__0_5633 [label="return"];
    bb32__0_5633 -> bb46__0_5633 [label="unwind"];
    bb33__0_5633 -> bb34__0_5633 [label="return"];
    bb33__0_5633 -> bb46__0_5633 [label="unwind"];
    bb34__0_5633 -> bb35__0_5633 [label="return"];
    bb34__0_5633 -> bb46__0_5633 [label="unwind"];
    bb35__0_5633 -> bb36__0_5633 [label="return"];
    bb35__0_5633 -> bb46__0_5633 [label="unwind"];
    bb36__0_5633 -> bb37__0_5633 [label="return"];
    bb36__0_5633 -> bb46__0_5633 [label="unwind"];
    bb37__0_5633 -> bb38__0_5633 [label="return"];
    bb37__0_5633 -> bb44__0_5633 [label="unwind"];
    bb38__0_5633 -> bb39__0_5633 [label="return"];
    bb38__0_5633 -> bb44__0_5633 [label="unwind"];
    bb39__0_5633 -> bb40__0_5633 [label="return"];
    bb39__0_5633 -> bb46__0_5633 [label="unwind"];
    bb40__0_5633 -> bb41__0_5633 [label="return"];
    bb40__0_5633 -> bb46__0_5633 [label="unwind"];
    bb41__0_5633 -> bb42__0_5633 [label="return"];
    bb41__0_5633 -> bb48__0_5633 [label="unwind"];
    bb42__0_5633 -> bb43__0_5633 [label=""];
    bb44__0_5633 -> bb46__0_5633 [label="return"];
    bb45__0_5633 -> bb46__0_5633 [label="return"];
    bb46__0_5633 -> bb48__0_5633 [label="return"];
    bb47__0_5633 -> bb48__0_5633 [label="return"];
    bb49__0_5633 -> bb48__0_5633 [label=""];
    bb50__0_5633 -> bb48__0_5633 [label=""];
}
