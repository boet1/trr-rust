digraph Mir_0_2519 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn block_operation(_1: &amp;ReErased state::perp_market::PerpMarket, _2: &amp;ReErased state::oracle::OraclePriceData, _3: &amp;ReErased state::state::OracleGuardRails, _4: u64, _5: u64) -&gt; std::result::Result&lt;bool, error::ErrorCode&gt;<br align="left"/>let _6: math::oracle::OracleValidity;<br align="left"/>let _7: bool;<br align="left"/>let mut _8: math::oracle::OracleStatus;<br align="left"/>let mut _9: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, math::oracle::OracleStatus&gt;;<br align="left"/>let mut _10: std::result::Result&lt;math::oracle::OracleStatus, error::ErrorCode&gt;;<br align="left"/>let mut _11: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _12: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _13: &amp;ReErased state::state::OracleGuardRails;<br align="left"/>let mut _14: u64;<br align="left"/>let mut _15: isize;<br align="left"/>let _16: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _17: !;<br align="left"/>let mut _18: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _19: math::oracle::OracleStatus;<br align="left"/>let _20: bool;<br align="left"/>let mut _21: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _22: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _23: math::oracle::OracleValidity;<br align="left"/>let mut _24: std::option::Option&lt;math::oracle::DriftAction&gt;;<br align="left"/>let mut _25: math::oracle::DriftAction;<br align="left"/>let mut _26: isize;<br align="left"/>let _27: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _28: !;<br align="left"/>let mut _29: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _30: bool;<br align="left"/>let _31: u64;<br align="left"/>let mut _32: u64;<br align="left"/>let mut _33: u64;<br align="left"/>let _34: bool;<br align="left"/>let mut _35: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _36: state::paused_operations::PerpOperation;<br align="left"/>let _37: bool;<br align="left"/>let mut _38: bool;<br align="left"/>let mut _39: u64;<br align="left"/>let mut _40: u64;<br align="left"/>let mut _41: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _42: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _43: i64;<br align="left"/>let mut _44: isize;<br align="left"/>let _45: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _46: !;<br align="left"/>let mut _47: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _48: u64;<br align="left"/>let mut _49: bool;<br align="left"/>let mut _50: bool;<br align="left"/>let mut _51: bool;<br align="left"/>debug market =&gt; _1;<br align="left"/>debug oracle_price_data =&gt; _2;<br align="left"/>debug guard_rails =&gt; _3;<br align="left"/>debug reserve_price =&gt; _4;<br align="left"/>debug slot =&gt; _5;<br align="left"/>debug oracle_validity =&gt; _6;<br align="left"/>debug is_oracle_mark_too_divergent =&gt; _7;<br align="left"/>debug residual =&gt; _16;<br align="left"/>debug val =&gt; _19;<br align="left"/>debug is_oracle_valid =&gt; _20;<br align="left"/>debug residual =&gt; _27;<br align="left"/>debug val =&gt; _30;<br align="left"/>debug slots_since_amm_update =&gt; _31;<br align="left"/>debug funding_paused_on_market =&gt; _34;<br align="left"/>debug block =&gt; _37;<br align="left"/>debug residual =&gt; _45;<br align="left"/>debug val =&gt; _48;<br align="left"/>>;
    bb0__0_2519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = &amp;(*_1)<br/>StorageLive(_12)<br/>_12 = &amp;(*_2)<br/>StorageLive(_13)<br/>_13 = &amp;(*_3)<br/>StorageLive(_14)<br/>_14 = _4<br/></td></tr><tr><td align="left">_10 = get_oracle_status(move _11, move _12, move _13, move _14)</td></tr></table>>];
    bb1__0_2519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">_9 = &lt;std::result::Result&lt;OracleStatus, error::ErrorCode&gt; as Try&gt;::branch(move _10)</td></tr></table>>];
    bb2__0_2519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>_15 = discriminant(_9)<br/></td></tr><tr><td align="left">switchInt(move _15)</td></tr></table>>];
    bb3__0_2519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_19)<br/>_19 = ((_9 as Continue).0: math::oracle::OracleStatus)<br/>_8 = _19<br/>StorageDead(_19)<br/>StorageLive(_6)<br/>_6 = (_8.3: math::oracle::OracleValidity)<br/>StorageLive(_7)<br/>_7 = (_8.2: bool)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>_23 = _6<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>_25 = DriftAction::UpdateFunding<br/>_24 = Option::&lt;DriftAction&gt;::Some(move _25)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">_22 = is_oracle_valid_for_action(move _23, move _24)</td></tr></table>>];
    bb4__0_2519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_2519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_16)<br/>_16 = ((_9 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_18)<br/>_18 = _16<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _18)</td></tr></table>>];
    bb6__0_2519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_16)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_2519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">_21 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _22)</td></tr></table>>];
    bb8__0_2519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>_26 = discriminant(_21)<br/></td></tr><tr><td align="left">switchInt(move _26)</td></tr></table>>];
    bb9__0_2519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_30)<br/>_30 = ((_21 as Continue).0: bool)<br/>_20 = _30<br/>StorageDead(_30)<br/>StorageDead(_21)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>_32 = _5<br/>StorageLive(_33)<br/>_33 = (((*_1).1: state::perp_market::AMM).47: u64)<br/></td></tr><tr><td align="left">_31 = core::num::&lt;impl u64&gt;::saturating_sub(move _32, move _33)</td></tr></table>>];
    bb10__0_2519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_27)<br/>_27 = ((_21 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_29)<br/>_29 = _27<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _29)</td></tr></table>>];
    bb11__0_2519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_27)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_2519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_32)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>_35 = &amp;(*_1)<br/>StorageLive(_36)<br/>_36 = PerpOperation::UpdateFunding<br/></td></tr><tr><td align="left">_34 = PerpMarket::is_operation_paused(move _35, move _36)</td></tr></table>>];
    bb13__0_2519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_35)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>_39 = _31<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>_43 = (((*_1).1: state::perp_market::AMM).51: i64)<br/></td></tr><tr><td align="left">_42 = &lt;i64 as Cast&gt;::cast::&lt;u64&gt;(move _43)</td></tr></table>>];
    bb14__0_2519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/></td></tr><tr><td align="left">_41 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _42)</td></tr></table>>];
    bb15__0_2519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>_44 = discriminant(_41)<br/></td></tr><tr><td align="left">switchInt(move _44)</td></tr></table>>];
    bb16__0_2519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_48)<br/>_48 = ((_41 as Continue).0: u64)<br/>_40 = _48<br/>StorageDead(_48)<br/>_38 = Gt(move _39, move _40)<br/></td></tr><tr><td align="left">switchInt(move _38)</td></tr></table>>];
    bb17__0_2519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_45)<br/>_45 = ((_41 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_47)<br/>_47 = _45<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _47)</td></tr></table>>];
    bb18__0_2519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_45)<br/>StorageDead(_41)<br/>StorageDead(_40)<br/>StorageDead(_39)<br/>StorageDead(_38)<br/>StorageDead(_37)<br/>StorageDead(_34)<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_2519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_40)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_2519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_40)<br/>StorageDead(_39)<br/>StorageLive(_49)<br/>_49 = _20<br/></td></tr><tr><td align="left">switchInt(move _49)</td></tr></table>>];
    bb21__0_2519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_50)<br/>_50 = _7<br/></td></tr><tr><td align="left">switchInt(move _50)</td></tr></table>>];
    bb22__0_2519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">_37 = const true<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_2519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">_37 = _34<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_2519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageDead(_49)<br/>StorageDead(_38)<br/>StorageLive(_51)<br/>_51 = _37<br/>_0 = std::result::Result::&lt;bool, error::ErrorCode&gt;::Ok(move _51)<br/>StorageDead(_51)<br/>StorageDead(_37)<br/>StorageDead(_34)<br/>StorageDead(_31)<br/>StorageDead(_20)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_2519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_2519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2519 -> bb1__0_2519 [label="return"];
    bb1__0_2519 -> bb2__0_2519 [label="return"];
    bb2__0_2519 -> bb3__0_2519 [label="0"];
    bb2__0_2519 -> bb5__0_2519 [label="1"];
    bb2__0_2519 -> bb4__0_2519 [label="otherwise"];
    bb3__0_2519 -> bb7__0_2519 [label="return"];
    bb5__0_2519 -> bb6__0_2519 [label="return"];
    bb6__0_2519 -> bb26__0_2519 [label=""];
    bb7__0_2519 -> bb8__0_2519 [label="return"];
    bb8__0_2519 -> bb9__0_2519 [label="0"];
    bb8__0_2519 -> bb10__0_2519 [label="1"];
    bb8__0_2519 -> bb4__0_2519 [label="otherwise"];
    bb9__0_2519 -> bb12__0_2519 [label="return"];
    bb10__0_2519 -> bb11__0_2519 [label="return"];
    bb11__0_2519 -> bb25__0_2519 [label=""];
    bb12__0_2519 -> bb13__0_2519 [label="return"];
    bb13__0_2519 -> bb14__0_2519 [label="return"];
    bb14__0_2519 -> bb15__0_2519 [label="return"];
    bb15__0_2519 -> bb16__0_2519 [label="0"];
    bb15__0_2519 -> bb17__0_2519 [label="1"];
    bb15__0_2519 -> bb4__0_2519 [label="otherwise"];
    bb16__0_2519 -> bb20__0_2519 [label="0"];
    bb16__0_2519 -> bb19__0_2519 [label="otherwise"];
    bb17__0_2519 -> bb18__0_2519 [label="return"];
    bb18__0_2519 -> bb25__0_2519 [label=""];
    bb19__0_2519 -> bb22__0_2519 [label=""];
    bb20__0_2519 -> bb22__0_2519 [label="0"];
    bb20__0_2519 -> bb21__0_2519 [label="otherwise"];
    bb21__0_2519 -> bb23__0_2519 [label="0"];
    bb21__0_2519 -> bb22__0_2519 [label="otherwise"];
    bb22__0_2519 -> bb24__0_2519 [label=""];
    bb23__0_2519 -> bb24__0_2519 [label=""];
    bb24__0_2519 -> bb26__0_2519 [label=""];
    bb25__0_2519 -> bb26__0_2519 [label=""];
}
