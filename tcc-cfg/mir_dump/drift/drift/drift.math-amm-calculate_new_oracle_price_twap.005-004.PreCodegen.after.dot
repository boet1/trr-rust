digraph Mir_0_1801 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_new_oracle_price_twap(_1: &amp;ReErased state::perp_market::AMM, _2: i64, _3: i64, _4: math::amm::TwapPeriod) -&gt; std::result::Result&lt;i64, error::ErrorCode&gt;<br align="left"/>let _5: u64;<br align="left"/>let _6: i64;<br align="left"/>let mut _7: (u64, i64);<br align="left"/>let mut _8: isize;<br align="left"/>let mut _9: u64;<br align="left"/>let mut _10: i64;<br align="left"/>let mut _11: u64;<br align="left"/>let mut _12: i64;<br align="left"/>let _13: i64;<br align="left"/>let mut _14: isize;<br align="left"/>let _15: i64;<br align="left"/>let mut _16: i64;<br align="left"/>let mut _17: bool;<br align="left"/>let mut _18: i64;<br align="left"/>let mut _19: i64;<br align="left"/>let mut _20: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _21: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _22: i64;<br align="left"/>let mut _23: i64;<br align="left"/>let mut _24: isize;<br align="left"/>let _25: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _26: !;<br align="left"/>let mut _27: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _28: i64;<br align="left"/>let _29: i64;<br align="left"/>let mut _30: i64;<br align="left"/>let mut _31: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _32: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _33: i64;<br align="left"/>let mut _34: i64;<br align="left"/>let mut _35: isize;<br align="left"/>let _36: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _37: !;<br align="left"/>let mut _38: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _39: i64;<br align="left"/>let _40: i64;<br align="left"/>let mut _41: bool;<br align="left"/>let mut _42: i64;<br align="left"/>let mut _43: i64;<br align="left"/>let _44: i64;<br align="left"/>let mut _45: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _46: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _47: i64;<br align="left"/>let mut _48: i64;<br align="left"/>let mut _49: isize;<br align="left"/>let _50: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _51: !;<br align="left"/>let mut _52: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _53: i64;<br align="left"/>let _54: ();<br align="left"/>let mut _55: &amp;ReErased str;<br align="left"/>let _56: &amp;ReErased str;<br align="left"/>let mut _57: &amp;ReErased std::string::String;<br align="left"/>let _58: &amp;ReErased std::string::String;<br align="left"/>let _59: std::string::String;<br align="left"/>let _60: std::string::String;<br align="left"/>let mut _61: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _62: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _63: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _64: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _65: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _66: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _67: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _68: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _69: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _70: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _71: &amp;ReErased i64;<br align="left"/>let _72: &amp;ReErased i64;<br align="left"/>let _73: i64;<br align="left"/>let mut _74: i64;<br align="left"/>let mut _75: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _76: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _77: i64;<br align="left"/>let mut _78: i64;<br align="left"/>let mut _79: isize;<br align="left"/>let _80: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _81: !;<br align="left"/>let mut _82: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _83: i64;<br align="left"/>let mut _84: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _85: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _86: i64;<br align="left"/>let mut _87: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _88: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _89: u64;<br align="left"/>let mut _90: isize;<br align="left"/>let _91: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _92: !;<br align="left"/>let mut _93: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _94: i64;<br align="left"/>let mut _95: i64;<br align="left"/>let mut _96: i64;<br align="left"/>let mut _97: i64;<br align="left"/>let mut _98: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _99: isize;<br align="left"/>let _100: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _101: !;<br align="left"/>let mut _102: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _103: i64;<br align="left"/>let mut _104: i64;<br align="left"/>let mut _105: i64;<br align="left"/>let mut _106: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _107: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _108: i64;<br align="left"/>let mut _109: isize;<br align="left"/>let _110: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _111: !;<br align="left"/>let mut _112: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _113: i64;<br align="left"/>let mut _114: i64;<br align="left"/>let mut _115: i64;<br align="left"/>let mut _116: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _117: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>debug amm =&gt; _1;<br align="left"/>debug now =&gt; _2;<br align="left"/>debug oracle_price =&gt; _3;<br align="left"/>debug twap_period =&gt; _4;<br align="left"/>debug last_mark_twap =&gt; _5;<br align="left"/>debug last_oracle_twap =&gt; _6;<br align="left"/>debug period =&gt; _13;<br align="left"/>debug since_last =&gt; _15;<br align="left"/>debug residual =&gt; _25;<br align="left"/>debug val =&gt; _28;<br align="left"/>debug from_start =&gt; _29;<br align="left"/>debug residual =&gt; _36;<br align="left"/>debug val =&gt; _39;<br align="left"/>debug interpolated_oracle_price =&gt; _40;<br align="left"/>debug since_last_valid =&gt; _44;<br align="left"/>debug residual =&gt; _50;<br align="left"/>debug val =&gt; _53;<br align="left"/>debug res =&gt; _60;<br align="left"/>debug from_start_valid =&gt; _73;<br align="left"/>debug residual =&gt; _80;<br align="left"/>debug val =&gt; _83;<br align="left"/>debug residual =&gt; _91;<br align="left"/>debug val =&gt; _94;<br align="left"/>debug residual =&gt; _100;<br align="left"/>debug val =&gt; _103;<br align="left"/>debug residual =&gt; _110;<br align="left"/>debug val =&gt; _113;<br align="left"/>>;
    bb0__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_7)<br/>_8 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb1__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = ((*_1).46: u64)<br/>StorageLive(_12)<br/>_12 = (((*_1).1: state::oracle::HistoricalOracleData).4: i64)<br/>_7 = (move _11, move _12)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb2__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb3__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>_9 = ((*_1).45: u64)<br/>StorageLive(_10)<br/>_10 = (((*_1).1: state::oracle::HistoricalOracleData).3: i64)<br/>_7 = (move _9, move _10)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb4__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>_5 = (_7.0: u64)<br/>StorageLive(_6)<br/>_6 = (_7.1: i64)<br/>StorageDead(_7)<br/>StorageLive(_13)<br/>_14 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _14)</td></tr></table>>];
    bb5__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">_13 = const _ as i64 (IntToInt)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb6__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">_13 = ((*_1).51: i64)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = _13<br/>_17 = Eq(move _18, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _17)</td></tr></table>>];
    bb8__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>_16 = const 1_i64<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>_16 = const 0_i64<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_22 = _2<br/>StorageLive(_23)<br/>_23 = (((*_1).1: state::oracle::HistoricalOracleData).5: i64)<br/></td></tr><tr><td align="left">_21 = &lt;i64 as SafeMath&gt;::safe_sub(move _22, move _23)</td></tr></table>>];
    bb11__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">_20 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _21)</td></tr></table>>];
    bb12__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>_24 = discriminant(_20)<br/></td></tr><tr><td align="left">switchInt(move _24)</td></tr></table>>];
    bb13__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_28)<br/>_28 = ((_20 as Continue).0: i64)<br/>_19 = _28<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">_15 = std::cmp::max::&lt;i64&gt;(move _16, move _19)</td></tr></table>>];
    bb14__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_25)<br/>_25 = ((_20 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_27)<br/>_27 = _25<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _27)</td></tr></table>>];
    bb15__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_25)<br/>StorageDead(_19)<br/>StorageDead(_16)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_16)<br/>StorageDead(_20)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>_33 = _13<br/>StorageLive(_34)<br/>_34 = _15<br/></td></tr><tr><td align="left">_32 = &lt;i64 as SafeMath&gt;::safe_sub(move _33, move _34)</td></tr></table>>];
    bb17__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">_31 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _32)</td></tr></table>>];
    bb18__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>_35 = discriminant(_31)<br/></td></tr><tr><td align="left">switchInt(move _35)</td></tr></table>>];
    bb19__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_39)<br/>_39 = ((_31 as Continue).0: i64)<br/>_30 = _39<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">_29 = std::cmp::max::&lt;i64&gt;(const 0_i64, move _30)</td></tr></table>>];
    bb20__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_36)<br/>_36 = ((_31 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_38)<br/>_38 = _36<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _38)</td></tr></table>>];
    bb21__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_36)<br/>StorageDead(_30)<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_31)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>_42 = ((*_1).62: i64)<br/>StorageLive(_43)<br/>_43 = (((*_1).1: state::oracle::HistoricalOracleData).5: i64)<br/>_41 = Gt(move _42, move _43)<br/></td></tr><tr><td align="left">switchInt(move _41)</td></tr></table>>];
    bb23__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_42)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>_47 = ((*_1).62: i64)<br/>StorageLive(_48)<br/>_48 = (((*_1).1: state::oracle::HistoricalOracleData).5: i64)<br/></td></tr><tr><td align="left">_46 = &lt;i64 as SafeMath&gt;::safe_sub(move _47, move _48)</td></tr></table>>];
    bb24__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">_45 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _46)</td></tr></table>>];
    bb25__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>_49 = discriminant(_45)<br/></td></tr><tr><td align="left">switchInt(move _49)</td></tr></table>>];
    bb26__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_53)<br/>_53 = ((_45 as Continue).0: i64)<br/>_44 = _53<br/>StorageDead(_53)<br/>StorageDead(_45)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>_117 = const _<br/>_64 = &amp;(*_117)<br/>_63 = &amp;(*_64)<br/>_62 = move _63 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_63)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>_72 = &amp;_44<br/>_71 = &amp;(*_72)<br/></td></tr><tr><td align="left">_70 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;i64&gt;(move _71)</td></tr></table>>];
    bb27__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_50)<br/>_50 = ((_45 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_52)<br/>_52 = _50<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _52)</td></tr></table>>];
    bb28__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_50)<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>_69 = [move _70]<br/>StorageDead(_70)<br/>_68 = &amp;_69<br/>_67 = &amp;(*_68)<br/>_66 = move _67 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">_61 = Arguments::&lt;'_&gt;::new_v1(move _62, move _66)</td></tr></table>>];
    bb30__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">_60 = format(move _61)</td></tr></table>>];
    bb31__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_72)<br/>StorageDead(_69)<br/>StorageDead(_68)<br/>StorageDead(_64)<br/>_59 = move _60<br/>StorageDead(_60)<br/>_58 = &amp;_59<br/>_57 = &amp;(*_58)<br/></td></tr><tr><td align="left">_56 = &lt;String as Deref&gt;::deref(move _57)</td></tr></table>>];
    bb32__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">_55 = &amp;(*_56)<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">_54 = solana_program::log::sol_log(move _55)</td></tr></table>>];
    bb33__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/></td></tr><tr><td align="left">drop(_59)</td></tr></table>>];
    bb34__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_58)<br/>StorageDead(_56)<br/>StorageDead(_54)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>_77 = _13<br/>StorageLive(_78)<br/>_78 = _44<br/></td></tr><tr><td align="left">_76 = &lt;i64 as SafeMath&gt;::safe_sub(move _77, move _78)</td></tr></table>>];
    bb35__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>StorageDead(_77)<br/></td></tr><tr><td align="left">_75 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _76)</td></tr></table>>];
    bb36__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>_79 = discriminant(_75)<br/></td></tr><tr><td align="left">switchInt(move _79)</td></tr></table>>];
    bb37__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_83)<br/>_83 = ((_75 as Continue).0: i64)<br/>_74 = _83<br/>StorageDead(_83)<br/></td></tr><tr><td align="left">_73 = std::cmp::max::&lt;i64&gt;(const 1_i64, move _74)</td></tr></table>>];
    bb38__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_80)<br/>_80 = ((_75 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_82)<br/>_82 = _80<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _82)</td></tr></table>>];
    bb39__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>StorageDead(_80)<br/>StorageDead(_74)<br/>StorageDead(_75)<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageDead(_75)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>_89 = _5<br/></td></tr><tr><td align="left">_88 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _89)</td></tr></table>>];
    bb41__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/></td></tr><tr><td align="left">_87 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _88)</td></tr></table>>];
    bb42__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>_90 = discriminant(_87)<br/></td></tr><tr><td align="left">switchInt(move _90)</td></tr></table>>];
    bb43__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageLive(_94)<br/>_94 = ((_87 as Continue).0: i64)<br/>_86 = _94<br/>StorageDead(_94)<br/>StorageLive(_95)<br/>_95 = _3<br/>StorageLive(_96)<br/>_96 = _44<br/>StorageLive(_97)<br/>_97 = _73<br/>StorageLive(_98)<br/>_98 = Option::&lt;i64&gt;::None<br/></td></tr><tr><td align="left">_85 = calculate_weighted_average(move _86, move _95, move _96, move _97, move _98)</td></tr></table>>];
    bb44__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_91)<br/>_91 = ((_87 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_93)<br/>_93 = _91<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _93)</td></tr></table>>];
    bb45__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageDead(_91)<br/>StorageDead(_86)<br/>StorageDead(_85)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>StorageDead(_97)<br/>StorageDead(_96)<br/>StorageDead(_95)<br/>StorageDead(_86)<br/></td></tr><tr><td align="left">_84 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _85)</td></tr></table>>];
    bb47__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>_99 = discriminant(_84)<br/></td></tr><tr><td align="left">switchInt(move _99)</td></tr></table>>];
    bb48__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageLive(_103)<br/>_103 = ((_84 as Continue).0: i64)<br/>_40 = _103<br/>StorageDead(_103)<br/>StorageDead(_73)<br/>StorageDead(_44)<br/>StorageDead(_87)<br/>StorageDead(_84)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageLive(_100)<br/>_100 = ((_84 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_102)<br/>_102 = _100<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _102)</td></tr></table>>];
    bb50__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>StorageDead(_100)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb51__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_42)<br/>_40 = _3<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb52__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageLive(_104)<br/>_104 = _40<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>_108 = _6<br/></td></tr><tr><td align="left">_107 = &lt;i64 as Cast&gt;::cast::&lt;i64&gt;(move _108)</td></tr></table>>];
    bb53__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/></td></tr><tr><td align="left">_106 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _107)</td></tr></table>>];
    bb54__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>_109 = discriminant(_106)<br/></td></tr><tr><td align="left">switchInt(move _109)</td></tr></table>>];
    bb55__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageLive(_113)<br/>_113 = ((_106 as Continue).0: i64)<br/>_105 = _113<br/>StorageDead(_113)<br/>StorageLive(_114)<br/>_114 = _15<br/>StorageLive(_115)<br/>_115 = _29<br/>StorageLive(_116)<br/>_116 = Option::&lt;i64&gt;::None<br/></td></tr><tr><td align="left">_0 = calculate_weighted_average(move _104, move _105, move _114, move _115, move _116)</td></tr></table>>];
    bb56__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageLive(_110)<br/>_110 = ((_106 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_112)<br/>_112 = _110<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _112)</td></tr></table>>];
    bb57__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>StorageDead(_110)<br/>StorageDead(_105)<br/>StorageDead(_104)<br/>StorageDead(_40)<br/>StorageDead(_29)<br/>StorageDead(_15)<br/>StorageDead(_13)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageDead(_106)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb58__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_116)<br/>StorageDead(_115)<br/>StorageDead(_114)<br/>StorageDead(_105)<br/>StorageDead(_104)<br/>StorageDead(_40)<br/>StorageDead(_29)<br/>StorageDead(_15)<br/>StorageDead(_13)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageDead(_106)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>StorageDead(_44)<br/>StorageDead(_87)<br/>StorageDead(_84)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb60__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb61__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb63__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_13)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb64__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left">return</td></tr></table>>];
    bb65__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">65 (cleanup)</td></tr><tr><td align="left">drop(_59)</td></tr></table>>];
    bb66__0_1801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">66 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_1801 -> bb3__0_1801 [label="0"];
    bb0__0_1801 -> bb1__0_1801 [label="1"];
    bb0__0_1801 -> bb2__0_1801 [label="otherwise"];
    bb1__0_1801 -> bb4__0_1801 [label=""];
    bb3__0_1801 -> bb4__0_1801 [label=""];
    bb4__0_1801 -> bb6__0_1801 [label="0"];
    bb4__0_1801 -> bb5__0_1801 [label="1"];
    bb4__0_1801 -> bb2__0_1801 [label="otherwise"];
    bb5__0_1801 -> bb7__0_1801 [label=""];
    bb6__0_1801 -> bb7__0_1801 [label=""];
    bb7__0_1801 -> bb9__0_1801 [label="0"];
    bb7__0_1801 -> bb8__0_1801 [label="otherwise"];
    bb8__0_1801 -> bb10__0_1801 [label=""];
    bb9__0_1801 -> bb10__0_1801 [label=""];
    bb10__0_1801 -> bb11__0_1801 [label="return"];
    bb11__0_1801 -> bb12__0_1801 [label="return"];
    bb12__0_1801 -> bb13__0_1801 [label="0"];
    bb12__0_1801 -> bb14__0_1801 [label="1"];
    bb12__0_1801 -> bb2__0_1801 [label="otherwise"];
    bb13__0_1801 -> bb16__0_1801 [label="return"];
    bb14__0_1801 -> bb15__0_1801 [label="return"];
    bb15__0_1801 -> bb63__0_1801 [label=""];
    bb16__0_1801 -> bb17__0_1801 [label="return"];
    bb17__0_1801 -> bb18__0_1801 [label="return"];
    bb18__0_1801 -> bb19__0_1801 [label="0"];
    bb18__0_1801 -> bb20__0_1801 [label="1"];
    bb18__0_1801 -> bb2__0_1801 [label="otherwise"];
    bb19__0_1801 -> bb22__0_1801 [label="return"];
    bb20__0_1801 -> bb21__0_1801 [label="return"];
    bb21__0_1801 -> bb62__0_1801 [label=""];
    bb22__0_1801 -> bb51__0_1801 [label="0"];
    bb22__0_1801 -> bb23__0_1801 [label="otherwise"];
    bb23__0_1801 -> bb24__0_1801 [label="return"];
    bb24__0_1801 -> bb25__0_1801 [label="return"];
    bb25__0_1801 -> bb26__0_1801 [label="0"];
    bb25__0_1801 -> bb27__0_1801 [label="1"];
    bb25__0_1801 -> bb2__0_1801 [label="otherwise"];
    bb26__0_1801 -> bb29__0_1801 [label="return"];
    bb27__0_1801 -> bb28__0_1801 [label="return"];
    bb28__0_1801 -> bb60__0_1801 [label=""];
    bb29__0_1801 -> bb30__0_1801 [label="return"];
    bb30__0_1801 -> bb31__0_1801 [label="return"];
    bb31__0_1801 -> bb32__0_1801 [label="return"];
    bb31__0_1801 -> bb65__0_1801 [label="unwind"];
    bb32__0_1801 -> bb33__0_1801 [label="return"];
    bb32__0_1801 -> bb65__0_1801 [label="unwind"];
    bb33__0_1801 -> bb34__0_1801 [label="return"];
    bb33__0_1801 -> bb66__0_1801 [label="unwind"];
    bb34__0_1801 -> bb35__0_1801 [label="return"];
    bb35__0_1801 -> bb36__0_1801 [label="return"];
    bb36__0_1801 -> bb37__0_1801 [label="0"];
    bb36__0_1801 -> bb38__0_1801 [label="1"];
    bb36__0_1801 -> bb2__0_1801 [label="otherwise"];
    bb37__0_1801 -> bb40__0_1801 [label="return"];
    bb38__0_1801 -> bb39__0_1801 [label="return"];
    bb39__0_1801 -> bb60__0_1801 [label=""];
    bb40__0_1801 -> bb41__0_1801 [label="return"];
    bb41__0_1801 -> bb42__0_1801 [label="return"];
    bb42__0_1801 -> bb43__0_1801 [label="0"];
    bb42__0_1801 -> bb44__0_1801 [label="1"];
    bb42__0_1801 -> bb2__0_1801 [label="otherwise"];
    bb43__0_1801 -> bb46__0_1801 [label="return"];
    bb44__0_1801 -> bb45__0_1801 [label="return"];
    bb45__0_1801 -> bb59__0_1801 [label=""];
    bb46__0_1801 -> bb47__0_1801 [label="return"];
    bb47__0_1801 -> bb48__0_1801 [label="0"];
    bb47__0_1801 -> bb49__0_1801 [label="1"];
    bb47__0_1801 -> bb2__0_1801 [label="otherwise"];
    bb48__0_1801 -> bb52__0_1801 [label=""];
    bb49__0_1801 -> bb50__0_1801 [label="return"];
    bb50__0_1801 -> bb59__0_1801 [label=""];
    bb51__0_1801 -> bb52__0_1801 [label=""];
    bb52__0_1801 -> bb53__0_1801 [label="return"];
    bb53__0_1801 -> bb54__0_1801 [label="return"];
    bb54__0_1801 -> bb55__0_1801 [label="0"];
    bb54__0_1801 -> bb56__0_1801 [label="1"];
    bb54__0_1801 -> bb2__0_1801 [label="otherwise"];
    bb55__0_1801 -> bb58__0_1801 [label="return"];
    bb56__0_1801 -> bb57__0_1801 [label="return"];
    bb57__0_1801 -> bb64__0_1801 [label=""];
    bb58__0_1801 -> bb64__0_1801 [label=""];
    bb59__0_1801 -> bb61__0_1801 [label=""];
    bb60__0_1801 -> bb61__0_1801 [label=""];
    bb61__0_1801 -> bb62__0_1801 [label=""];
    bb62__0_1801 -> bb63__0_1801 [label=""];
    bb63__0_1801 -> bb64__0_1801 [label=""];
    bb65__0_1801 -> bb66__0_1801 [label="return"];
}
