digraph Mir_0_3831 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn AMM::amm_has_low_enough_inventory(_1: &amp;ReErased state::perp_market::AMM, _2: bool) -&gt; std::result::Result&lt;bool, error::ErrorCode&gt;<br align="left"/>let mut _3: bool;<br align="left"/>let _4: i128;<br align="left"/>let _5: i128;<br align="left"/>let mut _6: (i128, i128);<br align="left"/>let mut _7: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (i128, i128)&gt;;<br align="left"/>let mut _8: std::result::Result&lt;(i128, i128), error::ErrorCode&gt;;<br align="left"/>let mut _9: u128;<br align="left"/>let mut _10: u128;<br align="left"/>let mut _11: u128;<br align="left"/>let mut _12: isize;<br align="left"/>let _13: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _14: !;<br align="left"/>let mut _15: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _16: (i128, i128);<br align="left"/>let _17: i128;<br align="left"/>let mut _18: i128;<br align="left"/>let mut _19: i128;<br align="left"/>let mut _20: i128;<br align="left"/>let mut _21: bool;<br align="left"/>let mut _22: i128;<br align="left"/>let mut _23: i128;<br align="left"/>let mut _24: i128;<br align="left"/>let mut _25: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _26: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _27: i128;<br align="left"/>let mut _28: isize;<br align="left"/>let _29: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _30: !;<br align="left"/>let mut _31: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _32: i128;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug amm_wants_to_jit_make =&gt; _2;<br align="left"/>debug max_bids =&gt; _4;<br align="left"/>debug max_asks =&gt; _5;<br align="left"/>debug residual =&gt; _13;<br align="left"/>debug val =&gt; _16;<br align="left"/>debug protocol_owned_min_side_liquidity =&gt; _17;<br align="left"/>debug residual =&gt; _29;<br align="left"/>debug val =&gt; _32;<br align="left"/>>;
    bb0__0_3831 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>_3 = _2<br/></td></tr><tr><td align="left">switchInt(move _3)</td></tr></table>>];
    bb1__0_3831 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = ((*_1).5: u128)<br/>StorageLive(_10)<br/>_10 = ((*_1).8: u128)<br/>StorageLive(_11)<br/>_11 = ((*_1).9: u128)<br/></td></tr><tr><td align="left">_8 = _calculate_market_open_bids_asks(move _9, move _10, move _11)</td></tr></table>>];
    bb2__0_3831 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = &lt;std::result::Result&lt;(i128, i128), error::ErrorCode&gt; as Try&gt;::branch(move _8)</td></tr></table>>];
    bb3__0_3831 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_12 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _12)</td></tr></table>>];
    bb4__0_3831 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_16)<br/>_16 = ((_7 as Continue).0: (i128, i128))<br/>_6 = _16<br/>StorageDead(_16)<br/>StorageLive(_4)<br/>_4 = (_6.0: i128)<br/>StorageLive(_5)<br/>_5 = (_6.1: i128)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = _4<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_20 = _5<br/></td></tr><tr><td align="left">_19 = core::num::&lt;impl i128&gt;::abs(move _20)</td></tr></table>>];
    bb5__0_3831 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_3831 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = ((_7 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_15)<br/>_15 = _13<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _15)</td></tr></table>>];
    bb7__0_3831 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_13)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_3831 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/></td></tr><tr><td align="left">_17 = &lt;i128 as Ord&gt;::min(move _18, move _19)</td></tr></table>>];
    bb9__0_3831 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_18)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>_23 = ((*_1).15: i128)<br/></td></tr><tr><td align="left">_22 = core::num::&lt;impl i128&gt;::abs(move _23)</td></tr></table>>];
    bb10__0_3831 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_27 = _17<br/></td></tr><tr><td align="left">_26 = &lt;i128 as SafeMath&gt;::safe_div(move _27, const 10_i128)</td></tr></table>>];
    bb11__0_3831 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/></td></tr><tr><td align="left">_25 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _26)</td></tr></table>>];
    bb12__0_3831 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>_28 = discriminant(_25)<br/></td></tr><tr><td align="left">switchInt(move _28)</td></tr></table>>];
    bb13__0_3831 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_32)<br/>_32 = ((_25 as Continue).0: i128)<br/>_24 = _32<br/>StorageDead(_32)<br/>_21 = Lt(move _22, move _24)<br/>StorageDead(_24)<br/>StorageDead(_22)<br/>_0 = std::result::Result::&lt;bool, error::ErrorCode&gt;::Ok(move _21)<br/>StorageDead(_21)<br/>StorageDead(_17)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_3831 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_29)<br/>_29 = ((_25 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_31)<br/>_31 = _29<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _31)</td></tr></table>>];
    bb15__0_3831 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_29)<br/>StorageDead(_24)<br/>StorageDead(_22)<br/>StorageDead(_21)<br/>StorageDead(_17)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_3831 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">_0 = std::result::Result::&lt;bool, error::ErrorCode&gt;::Ok(const true)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_3831 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_3831 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_3831 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_3831 -> bb16__0_3831 [label="0"];
    bb0__0_3831 -> bb1__0_3831 [label="otherwise"];
    bb1__0_3831 -> bb2__0_3831 [label="return"];
    bb2__0_3831 -> bb3__0_3831 [label="return"];
    bb3__0_3831 -> bb4__0_3831 [label="0"];
    bb3__0_3831 -> bb6__0_3831 [label="1"];
    bb3__0_3831 -> bb5__0_3831 [label="otherwise"];
    bb4__0_3831 -> bb8__0_3831 [label="return"];
    bb6__0_3831 -> bb7__0_3831 [label="return"];
    bb7__0_3831 -> bb18__0_3831 [label=""];
    bb8__0_3831 -> bb9__0_3831 [label="return"];
    bb9__0_3831 -> bb10__0_3831 [label="return"];
    bb10__0_3831 -> bb11__0_3831 [label="return"];
    bb11__0_3831 -> bb12__0_3831 [label="return"];
    bb12__0_3831 -> bb13__0_3831 [label="0"];
    bb12__0_3831 -> bb14__0_3831 [label="1"];
    bb12__0_3831 -> bb5__0_3831 [label="otherwise"];
    bb13__0_3831 -> bb17__0_3831 [label=""];
    bb14__0_3831 -> bb15__0_3831 [label="return"];
    bb15__0_3831 -> bb18__0_3831 [label=""];
    bb16__0_3831 -> bb17__0_3831 [label=""];
    bb17__0_3831 -> bb19__0_3831 [label=""];
    bb18__0_3831 -> bb19__0_3831 [label=""];
}
