digraph Mir_0_9303 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn keeper::handle_resolve_spot_bankruptcy(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::keeper::ResolveBankruptcy&lt;ReErased&gt;&gt;, _2: u16) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _5: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _6: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _7: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _8: isize;<br align="left"/>let _9: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _10: !;<br align="left"/>let mut _11: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _12: ();<br align="left"/>let _13: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let _14: anchor_lang::prelude::Clock;<br align="left"/>let mut _15: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _16: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _17: isize;<br align="left"/>let _18: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _19: !;<br align="left"/>let mut _20: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _21: anchor_lang::prelude::Clock;<br align="left"/>let _22: i64;<br align="left"/>let _23: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _24: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _25: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _26: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _27: ();<br align="left"/>let mut _28: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _29: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _30: bool;<br align="left"/>let mut _31: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _32: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _33: ();<br align="left"/>let _34: error::ErrorCode;<br align="left"/>let _35: ();<br align="left"/>let mut _36: &amp;ReErased str;<br align="left"/>let _37: &amp;ReErased str;<br align="left"/>let mut _38: &amp;ReErased std::string::String;<br align="left"/>let _39: &amp;ReErased std::string::String;<br align="left"/>let _40: std::string::String;<br align="left"/>let _41: std::string::String;<br align="left"/>let mut _42: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _43: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _44: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _45: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _46: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _47: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _48: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _49: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _50: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _51: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _52: &amp;ReErased error::ErrorCode;<br align="left"/>let _53: &amp;ReErased error::ErrorCode;<br align="left"/>let mut _54: error::ErrorCode;<br align="left"/>let mut _55: isize;<br align="left"/>let _56: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _57: !;<br align="left"/>let mut _58: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _59: ();<br align="left"/>let _60: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _61: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _62: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _63: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _64: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _65: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _66: Closure(DefId(0:9306 ~ drift[d311]::instructions::keeper::handle_resolve_spot_bankruptcy::{closure#0}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _67: isize;<br align="left"/>let _68: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _69: !;<br align="left"/>let mut _70: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _71: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _72: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _73: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _74: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _75: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _76: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _77: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _78: Closure(DefId(0:9307 ~ drift[d311]::instructions::keeper::handle_resolve_spot_bankruptcy::{closure#1}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _79: isize;<br align="left"/>let _80: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _81: !;<br align="left"/>let mut _82: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _83: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _84: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _85: std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _86: std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _87: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let _88: state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _89: state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _90: state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _91: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let mut _92: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, instructions::optional_accounts::AccountMaps&lt;ReErased&gt;&gt;;<br align="left"/>let mut _93: std::result::Result&lt;instructions::optional_accounts::AccountMaps&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _94: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _95: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _96: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _97: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _98: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _99: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _100: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _101: u16;<br align="left"/>let mut _102: u64;<br align="left"/>let mut _103: std::option::Option&lt;state::state::OracleGuardRails&gt;;<br align="left"/>let mut _104: state::state::OracleGuardRails;<br align="left"/>let mut _105: &amp;ReErased state::state::State;<br align="left"/>let mut _106: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _107: isize;<br align="left"/>let _108: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _109: !;<br align="left"/>let mut _110: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _111: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let _112: std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let mut _113: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;&gt;;<br align="left"/>let mut _114: std::result::Result&lt;std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _115: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _116: isize;<br align="left"/>let _117: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _118: !;<br align="left"/>let mut _119: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _120: std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let _121: ();<br align="left"/>let _122: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _123: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _124: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _125: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _126: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _127: &amp;ReErased u16;<br align="left"/>let _128: &amp;ReErased u16;<br align="left"/>let mut _129: isize;<br align="left"/>let _130: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _131: !;<br align="left"/>let mut _132: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _133: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _134: std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _135: &amp;ReErased std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let _136: std::option::Option&lt;&amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;&gt;;<br align="left"/>let mut _137: bool;<br align="left"/>let mut _138: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _139: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _140: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _141: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let _142: ();<br align="left"/>let mut _143: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _144: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _145: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let _146: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _147: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let _148: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _149: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _150: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _151: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _152: i64;<br align="left"/>let mut _153: &amp;ReErased anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let _154: &amp;ReErased anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let mut _155: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _156: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _157: &amp;ReErased state::state::State;<br align="left"/>let _158: &amp;ReErased state::state::State;<br align="left"/>let mut _159: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _160: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let _161: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let mut _162: std::option::Option&lt;&amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;&gt;;<br align="left"/>let mut _163: isize;<br align="left"/>let _164: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _165: !;<br align="left"/>let mut _166: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _167: ();<br align="left"/>let _168: ();<br align="left"/>let mut _169: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _170: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _171: &amp;ReErased mut anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _172: isize;<br align="left"/>let _173: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _174: !;<br align="left"/>let mut _175: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _176: ();<br align="left"/>let _177: ();<br align="left"/>let mut _178: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _179: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _180: &amp;ReErased mut anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _181: isize;<br align="left"/>let _182: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _183: !;<br align="left"/>let mut _184: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _185: ();<br align="left"/>let _186: i64;<br align="left"/>let mut _187: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _188: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _189: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _190: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _191: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _192: u64;<br align="left"/>let mut _193: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _194: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _195: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _196: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _197: isize;<br align="left"/>let _198: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _199: !;<br align="left"/>let mut _200: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _201: i64;<br align="left"/>let _202: u64;<br align="left"/>let mut _203: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _204: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _205: u16;<br align="left"/>let mut _206: &amp;ReErased mut state::user::User;<br align="left"/>let mut _207: &amp;ReErased mut state::user::User;<br align="left"/>let mut _208: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _209: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _210: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _211: &amp;ReErased mut state::user::User;<br align="left"/>let mut _212: &amp;ReErased mut state::user::User;<br align="left"/>let mut _213: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _214: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _215: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _216: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _217: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _218: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let _219: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _220: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _221: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _222: i64;<br align="left"/>let mut _223: u64;<br align="left"/>let mut _224: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _225: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _226: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _227: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _228: isize;<br align="left"/>let _229: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _230: !;<br align="left"/>let mut _231: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _232: u64;<br align="left"/>let _233: ();<br align="left"/>let mut _234: bool;<br align="left"/>let mut _235: u64;<br align="left"/>let _236: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _237: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _238: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _239: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _240: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _241: &amp;ReErased u16;<br align="left"/>let _242: &amp;ReErased u16;<br align="left"/>let mut _243: isize;<br align="left"/>let _244: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _245: !;<br align="left"/>let mut _246: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _247: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _248: std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _249: &amp;ReErased std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let _250: std::option::Option&lt;&amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;&gt;;<br align="left"/>let mut _251: bool;<br align="left"/>let mut _252: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _253: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _254: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _255: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let _256: ();<br align="left"/>let mut _257: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _258: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _259: &amp;ReErased anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let _260: &amp;ReErased anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let mut _261: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let _262: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _263: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let _264: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _265: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _266: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _267: u8;<br align="left"/>let mut _268: &amp;ReErased state::state::State;<br align="left"/>let mut _269: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _270: u64;<br align="left"/>let mut _271: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let _272: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let mut _273: std::option::Option&lt;&amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;&gt;;<br align="left"/>let mut _274: isize;<br align="left"/>let _275: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _276: !;<br align="left"/>let mut _277: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _278: ();<br align="left"/>let _279: ();<br align="left"/>let mut _280: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _281: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _282: bool;<br align="left"/>let mut _283: u64;<br align="left"/>let mut _284: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _285: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _286: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _287: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _288: ();<br align="left"/>let _289: error::ErrorCode;<br align="left"/>let _290: ();<br align="left"/>let mut _291: &amp;ReErased str;<br align="left"/>let _292: &amp;ReErased str;<br align="left"/>let mut _293: &amp;ReErased std::string::String;<br align="left"/>let _294: &amp;ReErased std::string::String;<br align="left"/>let _295: std::string::String;<br align="left"/>let _296: std::string::String;<br align="left"/>let mut _297: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _298: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _299: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _300: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _301: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _302: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _303: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _304: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _305: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _306: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _307: &amp;ReErased error::ErrorCode;<br align="left"/>let _308: &amp;ReErased error::ErrorCode;<br align="left"/>let _309: ();<br align="left"/>let mut _310: &amp;ReErased str;<br align="left"/>let _311: &amp;ReErased str;<br align="left"/>let mut _312: error::ErrorCode;<br align="left"/>let mut _313: isize;<br align="left"/>let _314: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _315: !;<br align="left"/>let mut _316: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _317: ();<br align="left"/>let _318: ();<br align="left"/>let _319: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _320: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _321: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _322: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _323: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _324: &amp;ReErased u16;<br align="left"/>let _325: &amp;ReErased u16;<br align="left"/>let mut _326: isize;<br align="left"/>let _327: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _328: !;<br align="left"/>let mut _329: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _330: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _331: ();<br align="left"/>let mut _332: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _333: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _334: &amp;ReErased mut anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _335: isize;<br align="left"/>let _336: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _337: !;<br align="left"/>let mut _338: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _339: ();<br align="left"/>let _340: i64;<br align="left"/>let mut _341: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _342: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _343: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _344: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _345: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _346: u64;<br align="left"/>let mut _347: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _348: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _349: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _350: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _351: isize;<br align="left"/>let _352: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _353: !;<br align="left"/>let mut _354: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _355: i64;<br align="left"/>let mut _356: ();<br align="left"/>let mut _357: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _358: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _359: &amp;ReErased mut instructions::keeper::ResolveBankruptcy&lt;ReErased&gt;;<br align="left"/>let mut _360: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _361: &amp;ReErased mut instructions::keeper::ResolveBankruptcy&lt;ReErased&gt;;<br align="left"/>let mut _362: &amp;ReErased mut instructions::keeper::ResolveBankruptcy&lt;ReErased&gt;;<br align="left"/>let mut _363: &amp;ReErased mut instructions::keeper::ResolveBankruptcy&lt;ReErased&gt;;<br align="left"/>let mut _364: &amp;ReErased mut instructions::keeper::ResolveBankruptcy&lt;ReErased&gt;;<br align="left"/>let mut _365: &amp;ReErased mut instructions::keeper::ResolveBankruptcy&lt;ReErased&gt;;<br align="left"/>let mut _366: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _367: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _368: &amp;ReErased mut instructions::keeper::ResolveBankruptcy&lt;ReErased&gt;;<br align="left"/>let mut _369: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _370: &amp;ReErased mut instructions::keeper::ResolveBankruptcy&lt;ReErased&gt;;<br align="left"/>let mut _371: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _372: &amp;ReErased mut instructions::keeper::ResolveBankruptcy&lt;ReErased&gt;;<br align="left"/>let mut _373: &amp;ReErased mut instructions::keeper::ResolveBankruptcy&lt;ReErased&gt;;<br align="left"/>let mut _374: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _375: &amp;ReErased mut instructions::keeper::ResolveBankruptcy&lt;ReErased&gt;;<br align="left"/>let mut _376: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _377: &amp;ReErased mut instructions::keeper::ResolveBankruptcy&lt;ReErased&gt;;<br align="left"/>let mut _378: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _379: &amp;ReErased mut instructions::keeper::ResolveBankruptcy&lt;ReErased&gt;;<br align="left"/>let mut _380: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _381: &amp;ReErased mut instructions::keeper::ResolveBankruptcy&lt;ReErased&gt;;<br align="left"/>let mut _382: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _383: &amp;ReErased mut instructions::keeper::ResolveBankruptcy&lt;ReErased&gt;;<br align="left"/>let mut _384: &amp;ReErased mut instructions::keeper::ResolveBankruptcy&lt;ReErased&gt;;<br align="left"/>let mut _385: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _386: &amp;ReErased mut instructions::keeper::ResolveBankruptcy&lt;ReErased&gt;;<br align="left"/>let mut _387: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _388: &amp;ReErased mut instructions::keeper::ResolveBankruptcy&lt;ReErased&gt;;<br align="left"/>let mut _389: &amp;ReErased mut instructions::keeper::ResolveBankruptcy&lt;ReErased&gt;;<br align="left"/>let mut _390: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _391: &amp;ReErased mut instructions::keeper::ResolveBankruptcy&lt;ReErased&gt;;<br align="left"/>let mut _392: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _393: &amp;ReErased mut instructions::keeper::ResolveBankruptcy&lt;ReErased&gt;;<br align="left"/>let mut _394: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _395: &amp;ReErased mut instructions::keeper::ResolveBankruptcy&lt;ReErased&gt;;<br align="left"/>let mut _396: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _397: isize;<br align="left"/>let mut _398: isize;<br align="left"/>let mut _399: isize;<br align="left"/>let mut _400: isize;<br align="left"/>let mut _401: isize;<br align="left"/>let mut _402: isize;<br align="left"/>let mut _403: isize;<br align="left"/>let mut _404: isize;<br align="left"/>let mut _405: isize;<br align="left"/>let mut _406: isize;<br align="left"/>let mut _407: isize;<br align="left"/>let mut _408: isize;<br align="left"/>let mut _409: isize;<br align="left"/>let mut _410: isize;<br align="left"/>let mut _411: isize;<br align="left"/>let mut _412: isize;<br align="left"/>let mut _413: isize;<br align="left"/>let mut _414: isize;<br align="left"/>let mut _415: isize;<br align="left"/>let mut _416: isize;<br align="left"/>let mut _417: isize;<br align="left"/>let mut _418: isize;<br align="left"/>let mut _419: isize;<br align="left"/>let mut _420: isize;<br align="left"/>let mut _421: isize;<br align="left"/>let mut _422: isize;<br align="left"/>let mut _423: isize;<br align="left"/>let mut _424: isize;<br align="left"/>let mut _425: isize;<br align="left"/>let mut _426: isize;<br align="left"/>let mut _427: isize;<br align="left"/>let mut _428: isize;<br align="left"/>let mut _429: isize;<br align="left"/>let mut _430: isize;<br align="left"/>let mut _431: isize;<br align="left"/>let mut _432: isize;<br align="left"/>let mut _433: isize;<br align="left"/>let mut _434: isize;<br align="left"/>let mut _435: isize;<br align="left"/>let mut _436: isize;<br align="left"/>let mut _437: isize;<br align="left"/>let mut _438: isize;<br align="left"/>let mut _439: isize;<br align="left"/>let mut _440: isize;<br align="left"/>let mut _441: isize;<br align="left"/>let mut _442: isize;<br align="left"/>let mut _443: isize;<br align="left"/>let mut _444: isize;<br align="left"/>let mut _445: isize;<br align="left"/>let mut _446: isize;<br align="left"/>let mut _447: isize;<br align="left"/>let mut _448: isize;<br align="left"/>let mut _449: isize;<br align="left"/>let mut _450: isize;<br align="left"/>let mut _451: isize;<br align="left"/>let mut _452: isize;<br align="left"/>let mut _453: isize;<br align="left"/>let mut _454: isize;<br align="left"/>let mut _455: isize;<br align="left"/>let mut _456: isize;<br align="left"/>let mut _457: isize;<br align="left"/>let mut _458: isize;<br align="left"/>let mut _459: isize;<br align="left"/>let mut _460: isize;<br align="left"/>let mut _461: isize;<br align="left"/>let mut _462: isize;<br align="left"/>let mut _463: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _464: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _465: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _466: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _467: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _468: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _469: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _470: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _471: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _472: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _473: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _474: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _475: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _476: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _477: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug market_index =&gt; _2;<br align="left"/>debug residual =&gt; _9;<br align="left"/>debug val =&gt; _12;<br align="left"/>debug state =&gt; _13;<br align="left"/>debug clock =&gt; _14;<br align="left"/>debug residual =&gt; _18;<br align="left"/>debug val =&gt; _21;<br align="left"/>debug now =&gt; _22;<br align="left"/>debug user_key =&gt; _23;<br align="left"/>debug liquidator_key =&gt; _25;<br align="left"/>debug error_code =&gt; _34;<br align="left"/>debug res =&gt; _41;<br align="left"/>debug residual =&gt; _56;<br align="left"/>debug val =&gt; _59;<br align="left"/>debug user =&gt; _60;<br align="left"/>debug residual =&gt; _68;<br align="left"/>debug val =&gt; _71;<br align="left"/>debug liquidator =&gt; _72;<br align="left"/>debug residual =&gt; _80;<br align="left"/>debug val =&gt; _83;<br align="left"/>debug remaining_accounts_iter =&gt; _84;<br align="left"/>debug perp_market_map =&gt; _88;<br align="left"/>debug spot_market_map =&gt; _89;<br align="left"/>debug oracle_map =&gt; _90;<br align="left"/>debug residual =&gt; _108;<br align="left"/>debug val =&gt; _111;<br align="left"/>debug mint =&gt; _112;<br align="left"/>debug residual =&gt; _117;<br align="left"/>debug val =&gt; _120;<br align="left"/>debug spot_market =&gt; _122;<br align="left"/>debug residual =&gt; _130;<br align="left"/>debug val =&gt; _133;<br align="left"/>debug transfer_hook_remaining_accounts_iter =&gt; _134;<br align="left"/>debug remaining_accounts =&gt; _136;<br align="left"/>debug residual =&gt; _164;<br align="left"/>debug val =&gt; _167;<br align="left"/>debug residual =&gt; _173;<br align="left"/>debug val =&gt; _176;<br align="left"/>debug residual =&gt; _182;<br align="left"/>debug val =&gt; _185;<br align="left"/>debug residual =&gt; _198;<br align="left"/>debug val =&gt; _201;<br align="left"/>debug pay_from_insurance =&gt; _202;<br align="left"/>debug residual =&gt; _229;<br align="left"/>debug val =&gt; _232;<br align="left"/>debug spot_market =&gt; _236;<br align="left"/>debug residual =&gt; _244;<br align="left"/>debug val =&gt; _247;<br align="left"/>debug transfer_hook_remaining_accounts_iter =&gt; _248;<br align="left"/>debug remaining_accounts =&gt; _250;<br align="left"/>debug residual =&gt; _275;<br align="left"/>debug val =&gt; _278;<br align="left"/>debug error_code =&gt; _289;<br align="left"/>debug res =&gt; _296;<br align="left"/>debug residual =&gt; _314;<br align="left"/>debug val =&gt; _317;<br align="left"/>debug spot_market =&gt; _319;<br align="left"/>debug residual =&gt; _327;<br align="left"/>debug val =&gt; _330;<br align="left"/>debug residual =&gt; _336;<br align="left"/>debug val =&gt; _339;<br align="left"/>debug residual =&gt; _352;<br align="left"/>debug val =&gt; _355;<br align="left"/>>;
    bb0__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_359 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolveBankruptcy&lt;'_&gt;)<br/>_7 = &amp;((*_359).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_360 = deref_copy (*_7)<br/>_463 = (((_360.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_6 = &amp;(*_463)<br/></td></tr><tr><td align="left">_5 = constraints::withdraw_not_paused(move _6)</td></tr></table>>];
    bb1__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb2__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_8 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb3__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_4 as Continue).0: ())<br/>_3 = _12<br/>StorageDead(_12)<br/>_397 = discriminant(_4)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_13)<br/>_361 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolveBankruptcy&lt;'_&gt;)<br/>_13 = &amp;((*_361).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/></td></tr><tr><td align="left">_16 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb4__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>_9 = move ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_11)<br/>_11 = move _9<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _11)</td></tr></table>>];
    bb6__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_9)<br/>_447 = discriminant(_4)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">_15 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _16)</td></tr></table>>];
    bb8__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>_17 = discriminant(_15)<br/></td></tr><tr><td align="left">switchInt(move _17)</td></tr></table>>];
    bb9__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = move ((_15 as Continue).0: anchor_lang::prelude::Clock)<br/>_14 = move _21<br/>StorageDead(_21)<br/>_399 = discriminant(_15)<br/>StorageDead(_15)<br/>StorageLive(_22)<br/>_22 = (_14.4: i64)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_362 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolveBankruptcy&lt;'_&gt;)<br/>_24 = &amp;((*_362).4: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_23 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt; as anchor_lang::Key&gt;::key(move _24)</td></tr></table>>];
    bb10__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_18)<br/>_18 = move ((_15 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_20)<br/>_20 = move _18<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _20)</td></tr></table>>];
    bb11__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_18)<br/>_445 = discriminant(_15)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_363 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolveBankruptcy&lt;'_&gt;)<br/>_26 = &amp;((*_363).2: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_25 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt; as anchor_lang::Key&gt;::key(move _26)</td></tr></table>>];
    bb13__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>_31 = &amp;_23<br/>StorageLive(_32)<br/>_32 = &amp;_25<br/></td></tr><tr><td align="left">_30 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _31, move _32)</td></tr></table>>];
    bb14__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left">switchInt(move _30)</td></tr></table>>];
    bb15__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_31)<br/>StorageLive(_33)<br/>_33 = ()<br/>_29 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _33)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_31)<br/>StorageLive(_34)<br/>_34 = error::ErrorCode::UserCantLiquidateThemself<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>_358 = const _<br/>_45 = &amp;(*_358)<br/>_44 = &amp;(*_45)<br/>_43 = move _44 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_44)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>_53 = &amp;_34<br/>_52 = &amp;(*_53)<br/></td></tr><tr><td align="left">_51 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _52)</td></tr></table>>];
    bb17__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>_50 = [move _51]<br/>StorageDead(_51)<br/>_49 = &amp;_50<br/>_48 = &amp;(*_49)<br/>_47 = move _48 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">_42 = Arguments::&lt;'_&gt;::new_v1(move _43, move _47)</td></tr></table>>];
    bb18__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">_41 = format(move _42)</td></tr></table>>];
    bb19__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_53)<br/>StorageDead(_50)<br/>StorageDead(_49)<br/>StorageDead(_45)<br/>_40 = move _41<br/>StorageDead(_41)<br/>_39 = &amp;_40<br/>_38 = &amp;(*_39)<br/></td></tr><tr><td align="left">_37 = &lt;String as Deref&gt;::deref(move _38)</td></tr></table>>];
    bb20__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">_36 = &amp;(*_37)<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">_35 = solana_program::log::sol_log(move _36)</td></tr></table>>];
    bb21__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/></td></tr><tr><td align="left">drop(_40)</td></tr></table>>];
    bb22__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageDead(_39)<br/>StorageDead(_37)<br/>StorageDead(_35)<br/>StorageLive(_54)<br/>_54 = _34<br/>_29 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _54)<br/>StorageDead(_54)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/></td></tr><tr><td align="left">_28 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _29)</td></tr></table>>];
    bb24__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>_55 = discriminant(_28)<br/></td></tr><tr><td align="left">switchInt(move _55)</td></tr></table>>];
    bb25__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_59)<br/>_59 = ((_28 as Continue).0: ())<br/>_27 = _59<br/>StorageDead(_59)<br/>StorageDead(_28)<br/>StorageDead(_27)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>_364 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolveBankruptcy&lt;'_&gt;)<br/>_65 = &amp;((*_364).4: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_64 = anchor_lang::prelude::AccountLoader::&lt;'_, User&gt;::load_mut(move _65)</td></tr></table>>];
    bb26__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_56)<br/>_56 = ((_28 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_58)<br/>_58 = _56<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _58)</td></tr></table>>];
    bb27__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageDead(_56)<br/>StorageDead(_28)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageLive(_66)<br/>_66 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_63 = std::result::Result::&lt;RefMut&lt;'_, User&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _64, move _66)</td></tr></table>>];
    bb29__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageDead(_64)<br/></td></tr><tr><td align="left">_62 = &lt;std::result::Result&lt;RefMut&lt;'_, User&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _63)</td></tr></table>>];
    bb30__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>_67 = discriminant(_62)<br/></td></tr><tr><td align="left">switchInt(move _67)</td></tr></table>>];
    bb31__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_71)<br/>_71 = move ((_62 as Continue).0: std::cell::RefMut&lt;'_, state::user::User&gt;)<br/>_61 = move _71<br/>StorageDead(_71)<br/>_60 = &amp;mut _61<br/>_403 = discriminant(_62)<br/>StorageDead(_62)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>_365 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolveBankruptcy&lt;'_&gt;)<br/>_77 = &amp;((*_365).2: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_76 = anchor_lang::prelude::AccountLoader::&lt;'_, User&gt;::load_mut(move _77)</td></tr></table>>];
    bb32__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_68)<br/>_68 = ((_62 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_70)<br/>_70 = _68<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _70)</td></tr></table>>];
    bb33__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_68)<br/>_401 = discriminant(_62)<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>StorageLive(_78)<br/>_78 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_75 = std::result::Result::&lt;RefMut&lt;'_, User&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _76, move _78)</td></tr></table>>];
    bb35__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>StorageDead(_76)<br/></td></tr><tr><td align="left">_74 = &lt;std::result::Result&lt;RefMut&lt;'_, User&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _75)</td></tr></table>>];
    bb36__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>_79 = discriminant(_74)<br/></td></tr><tr><td align="left">switchInt(move _79)</td></tr></table>>];
    bb37__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_83)<br/>_83 = move ((_74 as Continue).0: std::cell::RefMut&lt;'_, state::user::User&gt;)<br/>_73 = move _83<br/>StorageDead(_83)<br/>_72 = &amp;mut _73<br/>_407 = discriminant(_74)<br/>StorageDead(_74)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>_366 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_87 = &amp;(*_366)<br/></td></tr><tr><td align="left">_86 = core::slice::&lt;impl [anchor_lang::prelude::AccountInfo&lt;'_&gt;]&gt;::iter(move _87)</td></tr></table>>];
    bb38__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_80)<br/>_80 = ((_74 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_82)<br/>_82 = _80<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _82)</td></tr></table>>];
    bb39__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>StorageDead(_80)<br/>_405 = discriminant(_74)<br/>StorageDead(_74)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/></td></tr><tr><td align="left">_85 = &lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as Iterator&gt;::peekable(move _86)</td></tr></table>>];
    bb41__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>_84 = &amp;mut _85<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>_94 = &amp;mut (*_84)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/></td></tr><tr><td align="left">_97 = BTreeSet::&lt;u16&gt;::new()</td></tr></table>>];
    bb42__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">_96 = &amp;_97<br/>_95 = &amp;(*_96)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>_101 = _2<br/></td></tr><tr><td align="left">_100 = get_writable_spot_market_set(move _101)</td></tr></table>>];
    bb43__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/>_99 = &amp;_100<br/>_98 = &amp;(*_99)<br/>StorageLive(_102)<br/>_102 = (_14.0: u64)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>_367 = deref_copy (*_13)<br/>_464 = (((_367.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_106 = &amp;(*_464)<br/></td></tr><tr><td align="left">_105 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _106)</td></tr></table>>];
    bb44__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/>_104 = ((*_105).7: state::state::OracleGuardRails)<br/>_103 = Option::&lt;state::state::OracleGuardRails&gt;::Some(move _104)<br/>StorageDead(_104)<br/></td></tr><tr><td align="left">_93 = load_maps(move _94, move _95, move _98, move _102, move _103)</td></tr></table>>];
    bb45__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>StorageDead(_102)<br/>StorageDead(_98)<br/>StorageDead(_95)<br/>StorageDead(_94)<br/></td></tr><tr><td align="left">_92 = &lt;std::result::Result&lt;AccountMaps&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _93)</td></tr></table>>];
    bb46__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>_107 = discriminant(_92)<br/></td></tr><tr><td align="left">switchInt(move _107)</td></tr></table>>];
    bb47__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageLive(_111)<br/>_111 = move ((_92 as Continue).0: instructions::optional_accounts::AccountMaps&lt;'_&gt;)<br/>_91 = move _111<br/>StorageDead(_111)<br/>StorageLive(_88)<br/>_88 = move (_91.0: state::perp_market_map::PerpMarketMap&lt;'_&gt;)<br/>StorageLive(_89)<br/>_89 = move (_91.1: state::spot_market_map::SpotMarketMap&lt;'_&gt;)<br/>StorageLive(_90)<br/>_90 = move (_91.2: state::oracle_map::OracleMap&lt;'_&gt;)<br/>_411 = discriminant(_92)<br/>StorageDead(_105)<br/></td></tr><tr><td align="left">drop(_100)</td></tr></table>>];
    bb48__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageLive(_108)<br/>_108 = ((_92 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_110)<br/>_110 = _108<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _110)</td></tr></table>>];
    bb49__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/>StorageDead(_108)<br/>_409 = discriminant(_92)<br/>StorageDead(_105)<br/></td></tr><tr><td align="left">drop(_100)</td></tr></table>>];
    bb50__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>StorageDead(_99)<br/></td></tr><tr><td align="left">drop(_97)</td></tr></table>>];
    bb51__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>StorageDead(_96)<br/>StorageDead(_92)<br/>StorageDead(_91)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>_115 = &amp;mut (*_84)<br/></td></tr><tr><td align="left">_114 = get_token_mint(move _115)</td></tr></table>>];
    bb52__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_115)<br/></td></tr><tr><td align="left">_113 = &lt;std::result::Result&lt;Option&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt;&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _114)</td></tr></table>>];
    bb53__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/>_116 = discriminant(_113)<br/></td></tr><tr><td align="left">switchInt(move _116)</td></tr></table>>];
    bb54__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageLive(_120)<br/>_120 = move ((_113 as Continue).0: std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt;&gt;)<br/>_112 = move _120<br/>StorageDead(_120)<br/>StorageDead(_113)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>_126 = &amp;_89<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>_128 = &amp;_2<br/>_127 = &amp;(*_128)<br/></td></tr><tr><td align="left">_125 = SpotMarketMap::&lt;'_&gt;::get_ref_mut(move _126, move _127)</td></tr></table>>];
    bb55__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageLive(_117)<br/>_117 = ((_113 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_119)<br/>_119 = _117<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _119)</td></tr></table>>];
    bb56__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/>StorageDead(_117)<br/>StorageDead(_113)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb57__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/>StorageDead(_126)<br/></td></tr><tr><td align="left">_124 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _125)</td></tr></table>>];
    bb58__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/>_129 = discriminant(_124)<br/></td></tr><tr><td align="left">switchInt(move _129)</td></tr></table>>];
    bb59__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageLive(_133)<br/>_133 = move ((_124 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_123 = move _133<br/>StorageDead(_133)<br/>_122 = &amp;mut _123<br/>_415 = discriminant(_124)<br/>StorageDead(_128)<br/>StorageDead(_124)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>_135 = &amp;(*_84)<br/></td></tr><tr><td align="left">_134 = &lt;Peekable&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt; as Clone&gt;::clone(move _135)</td></tr></table>>];
    bb60__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageLive(_130)<br/>_130 = ((_124 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_132)<br/>_132 = _130<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _132)</td></tr></table>>];
    bb61__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_132)<br/>StorageDead(_130)<br/>_413 = discriminant(_124)<br/>StorageDead(_128)<br/>StorageDead(_124)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_135)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>StorageLive(_140)<br/>_140 = &amp;(*_122)<br/></td></tr><tr><td align="left">_139 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _140)</td></tr></table>>];
    bb63__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">_138 = &amp;(*_139)<br/>StorageDead(_140)<br/></td></tr><tr><td align="left">_137 = SpotMarket::has_transfer_hook(move _138)</td></tr></table>>];
    bb64__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left">switchInt(move _137)</td></tr></table>>];
    bb65__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_139)<br/>StorageDead(_138)<br/>StorageLive(_141)<br/>_141 = &amp;mut _134<br/>_136 = Option::&lt;&amp;mut Peekable&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;&gt;::Some(move _141)<br/>StorageDead(_141)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb66__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_139)<br/>StorageDead(_138)<br/>_136 = Option::&lt;&amp;mut Peekable&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;&gt;::None<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb67__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_137)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>_368 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolveBankruptcy&lt;'_&gt;)<br/>_146 = &amp;((*_368).6: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_369 = deref_copy (*_146)<br/>_465 = (((_369.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_145 = &amp;(*_465)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>_370 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolveBankruptcy&lt;'_&gt;)<br/>_148 = &amp;((*_370).7: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_371 = deref_copy (*_148)<br/>_466 = (((_371.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_147 = &amp;(*_466)<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>_151 = &amp;mut (*_122)<br/></td></tr><tr><td align="left">_150 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _151)</td></tr></table>>];
    bb68__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">_149 = &amp;mut (*_150)<br/>StorageDead(_151)<br/>StorageLive(_152)<br/>_152 = _22<br/>StorageLive(_153)<br/>StorageLive(_154)<br/>_372 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolveBankruptcy&lt;'_&gt;)<br/>_154 = &amp;((*_372).9: anchor_lang::prelude::Interface&lt;'_, anchor_spl::token_interface::TokenInterface&gt;)<br/>_153 = &amp;(*_154)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>_373 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolveBankruptcy&lt;'_&gt;)<br/>_156 = &amp;((*_373).8: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_155 = &amp;(*_156)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>_374 = deref_copy (*_13)<br/>_467 = (((_374.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_159 = &amp;(*_467)<br/></td></tr><tr><td align="left">_158 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _159)</td></tr></table>>];
    bb69__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">_157 = &amp;(*_158)<br/>StorageDead(_159)<br/>StorageLive(_160)<br/>StorageLive(_161)<br/>_161 = &amp;_112<br/>_160 = &amp;(*_161)<br/>StorageLive(_162)<br/>_162 = move _136<br/></td></tr><tr><td align="left">_144 = attempt_settle_revenue_to_insurance_fund(move _145, move _147, move _149, move _152, move _153, move _155, move _157, move _160, move _162)</td></tr></table>>];
    bb70__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_162)<br/>StorageDead(_160)<br/>StorageDead(_157)<br/>StorageDead(_155)<br/>StorageDead(_153)<br/>StorageDead(_152)<br/>StorageDead(_149)<br/>StorageDead(_147)<br/>StorageDead(_145)<br/></td></tr><tr><td align="left">_143 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _144)</td></tr></table>>];
    bb71__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_144)<br/>_163 = discriminant(_143)<br/></td></tr><tr><td align="left">switchInt(move _163)</td></tr></table>>];
    bb72__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageLive(_167)<br/>_167 = ((_143 as Continue).0: ())<br/>_142 = _167<br/>StorageDead(_167)<br/>_417 = discriminant(_143)<br/>StorageDead(_161)<br/>StorageDead(_158)<br/>StorageDead(_156)<br/>StorageDead(_154)<br/>StorageDead(_150)<br/>StorageDead(_148)<br/>StorageDead(_146)<br/>StorageDead(_143)<br/>StorageDead(_142)<br/>StorageLive(_168)<br/>StorageLive(_169)<br/>StorageLive(_170)<br/>StorageLive(_171)<br/>_375 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolveBankruptcy&lt;'_&gt;)<br/>_376 = deref_copy ((*_375).6: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_468 = (((_376.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_171 = &amp;mut (*_468)<br/></td></tr><tr><td align="left">_170 = anchor_lang::prelude::InterfaceAccount::&lt;'_, anchor_spl::token_interface::TokenAccount&gt;::reload(move _171)</td></tr></table>>];
    bb73__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageLive(_164)<br/>_164 = move ((_143 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_166)<br/>_166 = move _164<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _166)</td></tr></table>>];
    bb74__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_166)<br/>StorageDead(_164)<br/>_443 = discriminant(_143)<br/>StorageDead(_161)<br/>StorageDead(_158)<br/>StorageDead(_156)<br/>StorageDead(_154)<br/>StorageDead(_150)<br/>StorageDead(_148)<br/>StorageDead(_146)<br/>StorageDead(_143)<br/>StorageDead(_142)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb75__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_171)<br/></td></tr><tr><td align="left">_169 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _170)</td></tr></table>>];
    bb76__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_170)<br/>_172 = discriminant(_169)<br/></td></tr><tr><td align="left">switchInt(move _172)</td></tr></table>>];
    bb77__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageLive(_176)<br/>_176 = ((_169 as Continue).0: ())<br/>_168 = _176<br/>StorageDead(_176)<br/>_419 = discriminant(_169)<br/>StorageDead(_169)<br/>StorageDead(_168)<br/>StorageLive(_177)<br/>StorageLive(_178)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>_377 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolveBankruptcy&lt;'_&gt;)<br/>_378 = deref_copy ((*_377).7: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_469 = (((_378.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_180 = &amp;mut (*_469)<br/></td></tr><tr><td align="left">_179 = anchor_lang::prelude::InterfaceAccount::&lt;'_, anchor_spl::token_interface::TokenAccount&gt;::reload(move _180)</td></tr></table>>];
    bb78__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageLive(_173)<br/>_173 = move ((_169 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_175)<br/>_175 = move _173<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _175)</td></tr></table>>];
    bb79__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_175)<br/>StorageDead(_173)<br/>_441 = discriminant(_169)<br/>StorageDead(_169)<br/>StorageDead(_168)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb80__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_180)<br/></td></tr><tr><td align="left">_178 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _179)</td></tr></table>>];
    bb81__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_179)<br/>_181 = discriminant(_178)<br/></td></tr><tr><td align="left">switchInt(move _181)</td></tr></table>>];
    bb82__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageLive(_185)<br/>_185 = ((_178 as Continue).0: ())<br/>_177 = _185<br/>StorageDead(_185)<br/>_421 = discriminant(_178)<br/>StorageDead(_178)<br/>StorageDead(_177)<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>StorageLive(_189)<br/>StorageLive(_190)<br/>StorageLive(_191)<br/>_191 = &amp;(*_122)<br/></td></tr><tr><td align="left">_190 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _191)</td></tr></table>>];
    bb83__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageLive(_182)<br/>_182 = move ((_178 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_184)<br/>_184 = move _182<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _184)</td></tr></table>>];
    bb84__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_184)<br/>StorageDead(_182)<br/>_439 = discriminant(_178)<br/>StorageDead(_178)<br/>StorageDead(_177)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb85__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">_189 = &amp;(*_190)<br/>StorageDead(_191)<br/>StorageLive(_192)<br/>StorageLive(_193)<br/>StorageLive(_194)<br/>StorageLive(_195)<br/>StorageLive(_196)<br/>_379 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolveBankruptcy&lt;'_&gt;)<br/>_380 = deref_copy ((*_379).6: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_470 = (((_380.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_196 = &amp;(*_470)<br/></td></tr><tr><td align="left">_195 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _196)</td></tr></table>>];
    bb86__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">_194 = &amp;(*_195)<br/></td></tr><tr><td align="left">_193 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _194)</td></tr></table>>];
    bb87__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_196)<br/>StorageDead(_194)<br/>_192 = ((*_193).2: u64)<br/></td></tr><tr><td align="left">_188 = validate_spot_market_vault_amount(move _189, move _192)</td></tr></table>>];
    bb88__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_192)<br/>StorageDead(_189)<br/></td></tr><tr><td align="left">_187 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _188)</td></tr></table>>];
    bb89__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_188)<br/>_197 = discriminant(_187)<br/></td></tr><tr><td align="left">switchInt(move _197)</td></tr></table>>];
    bb90__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageLive(_201)<br/>_201 = ((_187 as Continue).0: i64)<br/>_186 = _201<br/>StorageDead(_201)<br/>StorageDead(_195)<br/>StorageDead(_193)<br/>StorageDead(_190)<br/>StorageDead(_187)<br/>StorageDead(_186)<br/>_121 = const ()<br/>StorageDead(_136)<br/>StorageDead(_134)<br/></td></tr><tr><td align="left">drop(_123)</td></tr></table>>];
    bb91__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageLive(_198)<br/>_198 = ((_187 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_200)<br/>_200 = _198<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _200)</td></tr></table>>];
    bb92__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_200)<br/>StorageDead(_198)<br/>StorageDead(_195)<br/>StorageDead(_193)<br/>StorageDead(_190)<br/>StorageDead(_187)<br/>StorageDead(_186)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb93__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/>StorageDead(_122)<br/>StorageDead(_121)<br/>StorageLive(_202)<br/>StorageLive(_203)<br/>StorageLive(_204)<br/>StorageLive(_205)<br/>_205 = _2<br/>StorageLive(_206)<br/>StorageLive(_207)<br/>StorageLive(_208)<br/>_208 = &amp;mut (*_60)<br/></td></tr><tr><td align="left">_207 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _208)</td></tr></table>>];
    bb94__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">_206 = &amp;mut (*_207)<br/>StorageDead(_208)<br/>StorageLive(_209)<br/>StorageLive(_210)<br/>_210 = &amp;_23<br/>_209 = &amp;(*_210)<br/>StorageLive(_211)<br/>StorageLive(_212)<br/>StorageLive(_213)<br/>_213 = &amp;mut (*_72)<br/></td></tr><tr><td align="left">_212 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _213)</td></tr></table>>];
    bb95__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">_211 = &amp;mut (*_212)<br/>StorageDead(_213)<br/>StorageLive(_214)<br/>StorageLive(_215)<br/>_215 = &amp;_25<br/>_214 = &amp;(*_215)<br/>StorageLive(_216)<br/>StorageLive(_217)<br/>_217 = &amp;_88<br/>_216 = &amp;(*_217)<br/>StorageLive(_218)<br/>StorageLive(_219)<br/>_219 = &amp;_89<br/>_218 = &amp;(*_219)<br/>StorageLive(_220)<br/>StorageLive(_221)<br/>_221 = &amp;mut _90<br/>_220 = &amp;mut (*_221)<br/>StorageLive(_222)<br/>_222 = _22<br/>StorageLive(_223)<br/>StorageLive(_224)<br/>StorageLive(_225)<br/>StorageLive(_226)<br/>StorageLive(_227)<br/>_381 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolveBankruptcy&lt;'_&gt;)<br/>_382 = deref_copy ((*_381).7: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_471 = (((_382.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_227 = &amp;(*_471)<br/></td></tr><tr><td align="left">_226 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _227)</td></tr></table>>];
    bb96__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">_225 = &amp;(*_226)<br/></td></tr><tr><td align="left">_224 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _225)</td></tr></table>>];
    bb97__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_227)<br/>StorageDead(_225)<br/>_223 = ((*_224).2: u64)<br/></td></tr><tr><td align="left">_204 = controller::liquidation::resolve_spot_bankruptcy(move _205, move _206, move _209, move _211, move _214, move _216, move _218, move _220, move _222, move _223)</td></tr></table>>];
    bb98__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_223)<br/>StorageDead(_222)<br/>StorageDead(_220)<br/>StorageDead(_218)<br/>StorageDead(_216)<br/>StorageDead(_214)<br/>StorageDead(_211)<br/>StorageDead(_209)<br/>StorageDead(_206)<br/>StorageDead(_205)<br/></td></tr><tr><td align="left">_203 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _204)</td></tr></table>>];
    bb99__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageDead(_204)<br/>_228 = discriminant(_203)<br/></td></tr><tr><td align="left">switchInt(move _228)</td></tr></table>>];
    bb100__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageLive(_232)<br/>_232 = ((_203 as Continue).0: u64)<br/>_202 = _232<br/>StorageDead(_232)<br/>StorageDead(_226)<br/>StorageDead(_224)<br/>StorageDead(_221)<br/>StorageDead(_219)<br/>StorageDead(_217)<br/>StorageDead(_215)<br/>StorageDead(_212)<br/>StorageDead(_210)<br/>StorageDead(_207)<br/>StorageDead(_203)<br/>StorageLive(_233)<br/>StorageLive(_234)<br/>StorageLive(_235)<br/>_235 = _202<br/>_234 = Gt(move _235, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _234)</td></tr></table>>];
    bb101__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageLive(_229)<br/>_229 = ((_203 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_231)<br/>_231 = _229<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _231)</td></tr></table>>];
    bb102__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_231)<br/>StorageDead(_229)<br/>StorageDead(_226)<br/>StorageDead(_224)<br/>StorageDead(_221)<br/>StorageDead(_219)<br/>StorageDead(_217)<br/>StorageDead(_215)<br/>StorageDead(_212)<br/>StorageDead(_210)<br/>StorageDead(_207)<br/>StorageDead(_203)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb103__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_235)<br/>StorageLive(_236)<br/>StorageLive(_237)<br/>StorageLive(_238)<br/>StorageLive(_239)<br/>StorageLive(_240)<br/>_240 = &amp;_89<br/>StorageLive(_241)<br/>StorageLive(_242)<br/>_242 = &amp;_2<br/>_241 = &amp;(*_242)<br/></td></tr><tr><td align="left">_239 = SpotMarketMap::&lt;'_&gt;::get_ref(move _240, move _241)</td></tr></table>>];
    bb104__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_235)<br/>_233 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb105__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_241)<br/>StorageDead(_240)<br/></td></tr><tr><td align="left">_238 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _239)</td></tr></table>>];
    bb106__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_239)<br/>_243 = discriminant(_238)<br/></td></tr><tr><td align="left">switchInt(move _243)</td></tr></table>>];
    bb107__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageLive(_247)<br/>_247 = move ((_238 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_237 = move _247<br/>StorageDead(_247)<br/>_236 = &amp;_237<br/>_425 = discriminant(_238)<br/>StorageDead(_242)<br/>StorageDead(_238)<br/>StorageLive(_248)<br/>StorageLive(_249)<br/>_249 = &amp;(*_84)<br/></td></tr><tr><td align="left">_248 = &lt;Peekable&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt; as Clone&gt;::clone(move _249)</td></tr></table>>];
    bb108__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageLive(_244)<br/>_244 = ((_238 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_246)<br/>_246 = _244<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _246)</td></tr></table>>];
    bb109__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageDead(_246)<br/>StorageDead(_244)<br/>_423 = discriminant(_238)<br/>StorageDead(_242)<br/>StorageDead(_238)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb110__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_249)<br/>StorageLive(_250)<br/>StorageLive(_251)<br/>StorageLive(_252)<br/>StorageLive(_253)<br/>StorageLive(_254)<br/>_254 = &amp;(*_236)<br/></td></tr><tr><td align="left">_253 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _254)</td></tr></table>>];
    bb111__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">_252 = &amp;(*_253)<br/>StorageDead(_254)<br/></td></tr><tr><td align="left">_251 = SpotMarket::has_transfer_hook(move _252)</td></tr></table>>];
    bb112__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left">switchInt(move _251)</td></tr></table>>];
    bb113__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageDead(_253)<br/>StorageDead(_252)<br/>StorageLive(_255)<br/>_255 = &amp;mut _248<br/>_250 = Option::&lt;&amp;mut Peekable&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;&gt;::Some(move _255)<br/>StorageDead(_255)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb114__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageDead(_253)<br/>StorageDead(_252)<br/>_250 = Option::&lt;&amp;mut Peekable&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;&gt;::None<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb115__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageDead(_251)<br/>StorageLive(_256)<br/>StorageLive(_257)<br/>StorageLive(_258)<br/>StorageLive(_259)<br/>StorageLive(_260)<br/>_383 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolveBankruptcy&lt;'_&gt;)<br/>_260 = &amp;((*_383).9: anchor_lang::prelude::Interface&lt;'_, anchor_spl::token_interface::TokenInterface&gt;)<br/>_259 = &amp;(*_260)<br/>StorageLive(_261)<br/>StorageLive(_262)<br/>_384 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolveBankruptcy&lt;'_&gt;)<br/>_262 = &amp;((*_384).7: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_385 = deref_copy (*_262)<br/>_472 = (((_385.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_261 = &amp;(*_472)<br/>StorageLive(_263)<br/>StorageLive(_264)<br/>_386 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolveBankruptcy&lt;'_&gt;)<br/>_264 = &amp;((*_386).6: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_387 = deref_copy (*_264)<br/>_473 = (((_387.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_263 = &amp;(*_473)<br/>StorageLive(_265)<br/>StorageLive(_266)<br/>_388 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolveBankruptcy&lt;'_&gt;)<br/>_266 = &amp;((*_388).8: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_265 = &amp;(*_266)<br/>StorageLive(_267)<br/>StorageLive(_268)<br/>StorageLive(_269)<br/>_389 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolveBankruptcy&lt;'_&gt;)<br/>_390 = deref_copy ((*_389).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_474 = (((_390.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_269 = &amp;(*_474)<br/></td></tr><tr><td align="left">_268 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _269)</td></tr></table>>];
    bb116__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_269)<br/>_267 = ((*_268).15: u8)<br/>StorageLive(_270)<br/>_270 = _202<br/>StorageLive(_271)<br/>StorageLive(_272)<br/>_272 = &amp;_112<br/>_271 = &amp;(*_272)<br/>StorageLive(_273)<br/>_273 = move _250<br/></td></tr><tr><td align="left">_258 = send_from_program_vault(move _259, move _261, move _263, move _265, move _267, move _270, move _271, move _273)</td></tr></table>>];
    bb117__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageDead(_273)<br/>StorageDead(_271)<br/>StorageDead(_270)<br/>StorageDead(_267)<br/>StorageDead(_265)<br/>StorageDead(_263)<br/>StorageDead(_261)<br/>StorageDead(_259)<br/></td></tr><tr><td align="left">_257 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _258)</td></tr></table>>];
    bb118__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageDead(_258)<br/>_274 = discriminant(_257)<br/></td></tr><tr><td align="left">switchInt(move _274)</td></tr></table>>];
    bb119__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageLive(_278)<br/>_278 = ((_257 as Continue).0: ())<br/>_256 = _278<br/>StorageDead(_278)<br/>_427 = discriminant(_257)<br/>StorageDead(_272)<br/>StorageDead(_268)<br/>StorageDead(_266)<br/>StorageDead(_264)<br/>StorageDead(_262)<br/>StorageDead(_260)<br/>StorageDead(_257)<br/>StorageDead(_256)<br/>StorageLive(_279)<br/>StorageLive(_280)<br/>StorageLive(_281)<br/>StorageLive(_282)<br/>StorageLive(_283)<br/>StorageLive(_284)<br/>StorageLive(_285)<br/>StorageLive(_286)<br/>StorageLive(_287)<br/>_391 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolveBankruptcy&lt;'_&gt;)<br/>_392 = deref_copy ((*_391).7: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_475 = (((_392.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_287 = &amp;(*_475)<br/></td></tr><tr><td align="left">_286 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _287)</td></tr></table>>];
    bb120__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageLive(_275)<br/>_275 = move ((_257 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_277)<br/>_277 = move _275<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _277)</td></tr></table>>];
    bb121__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageDead(_277)<br/>StorageDead(_275)<br/>_437 = discriminant(_257)<br/>StorageDead(_272)<br/>StorageDead(_268)<br/>StorageDead(_266)<br/>StorageDead(_264)<br/>StorageDead(_262)<br/>StorageDead(_260)<br/>StorageDead(_257)<br/>StorageDead(_256)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb122__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">_285 = &amp;(*_286)<br/></td></tr><tr><td align="left">_284 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _285)</td></tr></table>>];
    bb123__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageDead(_287)<br/>StorageDead(_285)<br/>_283 = ((*_284).2: u64)<br/>_282 = Gt(move _283, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _282)</td></tr></table>>];
    bb124__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageDead(_286)<br/>StorageDead(_284)<br/>StorageDead(_283)<br/>StorageLive(_288)<br/>_288 = ()<br/>_281 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _288)<br/>StorageDead(_288)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb125__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageDead(_286)<br/>StorageDead(_284)<br/>StorageDead(_283)<br/>StorageLive(_289)<br/>_289 = error::ErrorCode::InvalidIFDetected<br/>StorageLive(_290)<br/>StorageLive(_291)<br/>StorageLive(_292)<br/>StorageLive(_293)<br/>StorageLive(_294)<br/>StorageLive(_295)<br/>StorageLive(_296)<br/>StorageLive(_297)<br/>StorageLive(_298)<br/>StorageLive(_299)<br/>StorageLive(_300)<br/>_357 = const _<br/>_300 = &amp;(*_357)<br/>_299 = &amp;(*_300)<br/>_298 = move _299 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_299)<br/>StorageLive(_302)<br/>StorageLive(_303)<br/>StorageLive(_304)<br/>StorageLive(_305)<br/>StorageLive(_306)<br/>StorageLive(_307)<br/>StorageLive(_308)<br/>_308 = &amp;_289<br/>_307 = &amp;(*_308)<br/></td></tr><tr><td align="left">_306 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _307)</td></tr></table>>];
    bb126__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageDead(_307)<br/>_305 = [move _306]<br/>StorageDead(_306)<br/>_304 = &amp;_305<br/>_303 = &amp;(*_304)<br/>_302 = move _303 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_303)<br/></td></tr><tr><td align="left">_297 = Arguments::&lt;'_&gt;::new_v1(move _298, move _302)</td></tr></table>>];
    bb127__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageDead(_302)<br/>StorageDead(_298)<br/></td></tr><tr><td align="left">_296 = format(move _297)</td></tr></table>>];
    bb128__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageDead(_297)<br/>StorageDead(_308)<br/>StorageDead(_305)<br/>StorageDead(_304)<br/>StorageDead(_300)<br/>_295 = move _296<br/>StorageDead(_296)<br/>_294 = &amp;_295<br/>_293 = &amp;(*_294)<br/></td></tr><tr><td align="left">_292 = &lt;String as Deref&gt;::deref(move _293)</td></tr></table>>];
    bb129__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">_291 = &amp;(*_292)<br/>StorageDead(_293)<br/></td></tr><tr><td align="left">_290 = solana_program::log::sol_log(move _291)</td></tr></table>>];
    bb130__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageDead(_291)<br/></td></tr><tr><td align="left">drop(_295)</td></tr></table>>];
    bb131__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageDead(_295)<br/>StorageDead(_294)<br/>StorageDead(_292)<br/>StorageDead(_290)<br/>StorageLive(_309)<br/>StorageLive(_310)<br/>StorageLive(_311)<br/>_311 = const &quot;insurance_fund_vault.amount must remain &gt; 0&quot;<br/>_310 = &amp;(*_311)<br/></td></tr><tr><td align="left">_309 = solana_program::log::sol_log(move _310)</td></tr></table>>];
    bb132__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageDead(_310)<br/>StorageDead(_311)<br/>StorageDead(_309)<br/>StorageLive(_312)<br/>_312 = _289<br/>_281 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _312)<br/>StorageDead(_312)<br/>StorageDead(_289)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb133__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageDead(_282)<br/></td></tr><tr><td align="left">_280 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _281)</td></tr></table>>];
    bb134__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageDead(_281)<br/>_313 = discriminant(_280)<br/></td></tr><tr><td align="left">switchInt(move _313)</td></tr></table>>];
    bb135__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageLive(_317)<br/>_317 = ((_280 as Continue).0: ())<br/>_279 = _317<br/>StorageDead(_317)<br/>StorageDead(_280)<br/>StorageDead(_279)<br/>_233 = const ()<br/>StorageDead(_250)<br/>StorageDead(_248)<br/></td></tr><tr><td align="left">drop(_237)</td></tr></table>>];
    bb136__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageLive(_314)<br/>_314 = ((_280 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_316)<br/>_316 = _314<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _316)</td></tr></table>>];
    bb137__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">StorageDead(_316)<br/>StorageDead(_314)<br/>StorageDead(_280)<br/>StorageDead(_279)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb138__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">StorageDead(_237)<br/>StorageDead(_236)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb139__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">StorageDead(_234)<br/>StorageDead(_233)<br/>StorageLive(_318)<br/>StorageLive(_319)<br/>StorageLive(_320)<br/>StorageLive(_321)<br/>StorageLive(_322)<br/>StorageLive(_323)<br/>_323 = &amp;_89<br/>StorageLive(_324)<br/>StorageLive(_325)<br/>_325 = &amp;_2<br/>_324 = &amp;(*_325)<br/></td></tr><tr><td align="left">_322 = SpotMarketMap::&lt;'_&gt;::get_ref_mut(move _323, move _324)</td></tr></table>>];
    bb140__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">StorageDead(_324)<br/>StorageDead(_323)<br/></td></tr><tr><td align="left">_321 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _322)</td></tr></table>>];
    bb141__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">StorageDead(_322)<br/>_326 = discriminant(_321)<br/></td></tr><tr><td align="left">switchInt(move _326)</td></tr></table>>];
    bb142__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageLive(_330)<br/>_330 = move ((_321 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_320 = move _330<br/>StorageDead(_330)<br/>_319 = &amp;mut _320<br/>_431 = discriminant(_321)<br/>StorageDead(_325)<br/>StorageDead(_321)<br/>StorageLive(_331)<br/>StorageLive(_332)<br/>StorageLive(_333)<br/>StorageLive(_334)<br/>_393 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolveBankruptcy&lt;'_&gt;)<br/>_394 = deref_copy ((*_393).6: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_476 = (((_394.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_334 = &amp;mut (*_476)<br/></td></tr><tr><td align="left">_333 = anchor_lang::prelude::InterfaceAccount::&lt;'_, anchor_spl::token_interface::TokenAccount&gt;::reload(move _334)</td></tr></table>>];
    bb143__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageLive(_327)<br/>_327 = ((_321 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_329)<br/>_329 = _327<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _329)</td></tr></table>>];
    bb144__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">StorageDead(_329)<br/>StorageDead(_327)<br/>_429 = discriminant(_321)<br/>StorageDead(_325)<br/>StorageDead(_321)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb145__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageDead(_334)<br/></td></tr><tr><td align="left">_332 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _333)</td></tr></table>>];
    bb146__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">StorageDead(_333)<br/>_335 = discriminant(_332)<br/></td></tr><tr><td align="left">switchInt(move _335)</td></tr></table>>];
    bb147__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left" balign="left">StorageLive(_339)<br/>_339 = ((_332 as Continue).0: ())<br/>_331 = _339<br/>StorageDead(_339)<br/>_433 = discriminant(_332)<br/>StorageDead(_332)<br/>StorageDead(_331)<br/>StorageLive(_340)<br/>StorageLive(_341)<br/>StorageLive(_342)<br/>StorageLive(_343)<br/>StorageLive(_344)<br/>StorageLive(_345)<br/>_345 = &amp;(*_319)<br/></td></tr><tr><td align="left">_344 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _345)</td></tr></table>>];
    bb148__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left" balign="left">StorageLive(_336)<br/>_336 = move ((_332 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_338)<br/>_338 = move _336<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _338)</td></tr></table>>];
    bb149__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">149</td></tr><tr><td align="left" balign="left">StorageDead(_338)<br/>StorageDead(_336)<br/>_435 = discriminant(_332)<br/>StorageDead(_332)<br/>StorageDead(_331)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb150__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">150</td></tr><tr><td align="left" balign="left">_343 = &amp;(*_344)<br/>StorageDead(_345)<br/>StorageLive(_346)<br/>StorageLive(_347)<br/>StorageLive(_348)<br/>StorageLive(_349)<br/>StorageLive(_350)<br/>_395 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolveBankruptcy&lt;'_&gt;)<br/>_396 = deref_copy ((*_395).6: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_477 = (((_396.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_350 = &amp;(*_477)<br/></td></tr><tr><td align="left">_349 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _350)</td></tr></table>>];
    bb151__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">151</td></tr><tr><td align="left" balign="left">_348 = &amp;(*_349)<br/></td></tr><tr><td align="left">_347 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _348)</td></tr></table>>];
    bb152__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">152</td></tr><tr><td align="left" balign="left">StorageDead(_350)<br/>StorageDead(_348)<br/>_346 = ((*_347).2: u64)<br/></td></tr><tr><td align="left">_342 = validate_spot_market_vault_amount(move _343, move _346)</td></tr></table>>];
    bb153__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">153</td></tr><tr><td align="left" balign="left">StorageDead(_346)<br/>StorageDead(_343)<br/></td></tr><tr><td align="left">_341 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _342)</td></tr></table>>];
    bb154__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">154</td></tr><tr><td align="left" balign="left">StorageDead(_342)<br/>_351 = discriminant(_341)<br/></td></tr><tr><td align="left">switchInt(move _351)</td></tr></table>>];
    bb155__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">155</td></tr><tr><td align="left" balign="left">StorageLive(_355)<br/>_355 = ((_341 as Continue).0: i64)<br/>_340 = _355<br/>StorageDead(_355)<br/>StorageDead(_349)<br/>StorageDead(_347)<br/>StorageDead(_344)<br/>StorageDead(_341)<br/>StorageDead(_340)<br/>_318 = const ()<br/></td></tr><tr><td align="left">drop(_320)</td></tr></table>>];
    bb156__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">156</td></tr><tr><td align="left" balign="left">StorageLive(_352)<br/>_352 = ((_341 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_354)<br/>_354 = _352<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _354)</td></tr></table>>];
    bb157__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">157</td></tr><tr><td align="left" balign="left">StorageDead(_354)<br/>StorageDead(_352)<br/>StorageDead(_349)<br/>StorageDead(_347)<br/>StorageDead(_344)<br/>StorageDead(_341)<br/>StorageDead(_340)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb158__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">158</td></tr><tr><td align="left" balign="left">StorageDead(_320)<br/>StorageDead(_319)<br/>StorageDead(_318)<br/>StorageLive(_356)<br/>_356 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _356)<br/>StorageDead(_356)<br/>StorageDead(_202)<br/>StorageDead(_112)<br/></td></tr><tr><td align="left">drop(_90)</td></tr></table>>];
    bb159__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">159</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/></td></tr><tr><td align="left">drop(_89)</td></tr></table>>];
    bb160__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">160</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/></td></tr><tr><td align="left">drop(_88)</td></tr></table>>];
    bb161__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">161</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>StorageDead(_85)<br/>StorageDead(_84)<br/></td></tr><tr><td align="left">drop(_73)</td></tr></table>>];
    bb162__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">162</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>StorageDead(_72)<br/></td></tr><tr><td align="left">drop(_61)</td></tr></table>>];
    bb163__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">163</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_60)<br/>StorageDead(_25)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb164__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">164</td></tr><tr><td align="left">drop(_320)</td></tr></table>>];
    bb165__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">165</td></tr><tr><td align="left" balign="left">StorageDead(_320)<br/>StorageDead(_319)<br/>StorageDead(_318)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb166__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">166</td></tr><tr><td align="left" balign="left">StorageDead(_250)<br/>StorageDead(_248)<br/></td></tr><tr><td align="left">drop(_237)</td></tr></table>>];
    bb167__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">167</td></tr><tr><td align="left" balign="left">StorageDead(_237)<br/>StorageDead(_236)<br/>StorageDead(_234)<br/>StorageDead(_233)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb168__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">168</td></tr><tr><td align="left" balign="left">StorageDead(_202)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb169__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">169</td></tr><tr><td align="left" balign="left">StorageDead(_136)<br/>StorageDead(_134)<br/></td></tr><tr><td align="left">drop(_123)</td></tr></table>>];
    bb170__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">170</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/>StorageDead(_122)<br/>StorageDead(_121)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb171__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">171</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/></td></tr><tr><td align="left">drop(_90)</td></tr></table>>];
    bb172__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">172</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/></td></tr><tr><td align="left">drop(_89)</td></tr></table>>];
    bb173__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">173</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/></td></tr><tr><td align="left">drop(_88)</td></tr></table>>];
    bb174__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">174</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb175__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">175</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>StorageDead(_99)<br/></td></tr><tr><td align="left">drop(_97)</td></tr></table>>];
    bb176__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">176</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>StorageDead(_96)<br/>StorageDead(_92)<br/>StorageDead(_91)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb177__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">177</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>StorageDead(_84)<br/></td></tr><tr><td align="left">drop(_73)</td></tr></table>>];
    bb178__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">178</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>StorageDead(_72)<br/></td></tr><tr><td align="left">drop(_61)</td></tr></table>>];
    bb179__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">179</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb180__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">180</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb181__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">181</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb182__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">182</td></tr><tr><td align="left">return</td></tr></table>>];
    bb183__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">183 (cleanup)</td></tr><tr><td align="left">drop(_320)</td></tr></table>>];
    bb184__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">184 (cleanup)</td></tr><tr><td align="left">drop(_295)</td></tr></table>>];
    bb185__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">185 (cleanup)</td></tr><tr><td align="left">drop(_237)</td></tr></table>>];
    bb186__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">186 (cleanup)</td></tr><tr><td align="left">drop(_123)</td></tr></table>>];
    bb187__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">187 (cleanup)</td></tr><tr><td align="left">drop(_97)</td></tr></table>>];
    bb188__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">188 (cleanup)</td></tr><tr><td align="left">drop(_90)</td></tr></table>>];
    bb189__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">189 (cleanup)</td></tr><tr><td align="left">drop(_89)</td></tr></table>>];
    bb190__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">190 (cleanup)</td></tr><tr><td align="left">drop(_88)</td></tr></table>>];
    bb191__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">191 (cleanup)</td></tr><tr><td align="left">drop(_100)</td></tr></table>>];
    bb192__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">192 (cleanup)</td></tr><tr><td align="left">drop(_97)</td></tr></table>>];
    bb193__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">193 (cleanup)</td></tr><tr><td align="left">drop(_73)</td></tr></table>>];
    bb194__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">194 (cleanup)</td></tr><tr><td align="left">drop(_61)</td></tr></table>>];
    bb195__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">195 (cleanup)</td></tr><tr><td align="left">drop(_40)</td></tr></table>>];
    bb196__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">196 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb197__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">197 (cleanup)</td></tr><tr><td align="left" balign="left">_449 = discriminant(_332)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb198__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">198 (cleanup)</td></tr><tr><td align="left" balign="left">_450 = discriminant(_321)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb199__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">199 (cleanup)</td></tr><tr><td align="left" balign="left">_451 = discriminant(_257)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb200__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">200 (cleanup)</td></tr><tr><td align="left" balign="left">_452 = discriminant(_238)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb201__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">201 (cleanup)</td></tr><tr><td align="left" balign="left">_453 = discriminant(_178)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb202__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">202 (cleanup)</td></tr><tr><td align="left" balign="left">_454 = discriminant(_169)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb203__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">203 (cleanup)</td></tr><tr><td align="left" balign="left">_455 = discriminant(_143)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb204__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">204 (cleanup)</td></tr><tr><td align="left" balign="left">_456 = discriminant(_124)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb205__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">205 (cleanup)</td></tr><tr><td align="left" balign="left">_458 = discriminant(_92)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb206__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">206 (cleanup)</td></tr><tr><td align="left" balign="left">_459 = discriminant(_74)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb207__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">207 (cleanup)</td></tr><tr><td align="left" balign="left">_460 = discriminant(_62)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb208__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">208 (cleanup)</td></tr><tr><td align="left" balign="left">_461 = discriminant(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb209__0_9303 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">209 (cleanup)</td></tr><tr><td align="left" balign="left">_462 = discriminant(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_9303 -> bb1__0_9303 [label="return"];
    bb1__0_9303 -> bb2__0_9303 [label="return"];
    bb1__0_9303 -> bb196__0_9303 [label="unwind"];
    bb2__0_9303 -> bb3__0_9303 [label="0"];
    bb2__0_9303 -> bb5__0_9303 [label="1"];
    bb2__0_9303 -> bb4__0_9303 [label="otherwise"];
    bb3__0_9303 -> bb7__0_9303 [label="return"];
    bb5__0_9303 -> bb6__0_9303 [label="return"];
    bb5__0_9303 -> bb209__0_9303 [label="unwind"];
    bb6__0_9303 -> bb182__0_9303 [label=""];
    bb7__0_9303 -> bb8__0_9303 [label="return"];
    bb7__0_9303 -> bb196__0_9303 [label="unwind"];
    bb8__0_9303 -> bb9__0_9303 [label="0"];
    bb8__0_9303 -> bb10__0_9303 [label="1"];
    bb8__0_9303 -> bb4__0_9303 [label="otherwise"];
    bb9__0_9303 -> bb12__0_9303 [label="return"];
    bb10__0_9303 -> bb11__0_9303 [label="return"];
    bb10__0_9303 -> bb208__0_9303 [label="unwind"];
    bb11__0_9303 -> bb181__0_9303 [label=""];
    bb12__0_9303 -> bb13__0_9303 [label="return"];
    bb13__0_9303 -> bb14__0_9303 [label="return"];
    bb14__0_9303 -> bb16__0_9303 [label="0"];
    bb14__0_9303 -> bb15__0_9303 [label="otherwise"];
    bb15__0_9303 -> bb23__0_9303 [label=""];
    bb16__0_9303 -> bb17__0_9303 [label="return"];
    bb17__0_9303 -> bb18__0_9303 [label="return"];
    bb18__0_9303 -> bb19__0_9303 [label="return"];
    bb19__0_9303 -> bb20__0_9303 [label="return"];
    bb19__0_9303 -> bb195__0_9303 [label="unwind"];
    bb20__0_9303 -> bb21__0_9303 [label="return"];
    bb20__0_9303 -> bb195__0_9303 [label="unwind"];
    bb21__0_9303 -> bb22__0_9303 [label="return"];
    bb21__0_9303 -> bb196__0_9303 [label="unwind"];
    bb22__0_9303 -> bb23__0_9303 [label=""];
    bb23__0_9303 -> bb24__0_9303 [label="return"];
    bb24__0_9303 -> bb25__0_9303 [label="0"];
    bb24__0_9303 -> bb26__0_9303 [label="1"];
    bb24__0_9303 -> bb4__0_9303 [label="otherwise"];
    bb25__0_9303 -> bb28__0_9303 [label="return"];
    bb26__0_9303 -> bb27__0_9303 [label="return"];
    bb27__0_9303 -> bb180__0_9303 [label=""];
    bb28__0_9303 -> bb29__0_9303 [label="return"];
    bb28__0_9303 -> bb196__0_9303 [label="unwind"];
    bb29__0_9303 -> bb30__0_9303 [label="return"];
    bb29__0_9303 -> bb196__0_9303 [label="unwind"];
    bb30__0_9303 -> bb31__0_9303 [label="0"];
    bb30__0_9303 -> bb32__0_9303 [label="1"];
    bb30__0_9303 -> bb4__0_9303 [label="otherwise"];
    bb31__0_9303 -> bb34__0_9303 [label="return"];
    bb31__0_9303 -> bb194__0_9303 [label="unwind"];
    bb32__0_9303 -> bb33__0_9303 [label="return"];
    bb32__0_9303 -> bb207__0_9303 [label="unwind"];
    bb33__0_9303 -> bb179__0_9303 [label=""];
    bb34__0_9303 -> bb35__0_9303 [label="return"];
    bb34__0_9303 -> bb194__0_9303 [label="unwind"];
    bb35__0_9303 -> bb36__0_9303 [label="return"];
    bb35__0_9303 -> bb194__0_9303 [label="unwind"];
    bb36__0_9303 -> bb37__0_9303 [label="0"];
    bb36__0_9303 -> bb38__0_9303 [label="1"];
    bb36__0_9303 -> bb4__0_9303 [label="otherwise"];
    bb37__0_9303 -> bb40__0_9303 [label="return"];
    bb37__0_9303 -> bb193__0_9303 [label="unwind"];
    bb38__0_9303 -> bb39__0_9303 [label="return"];
    bb38__0_9303 -> bb206__0_9303 [label="unwind"];
    bb39__0_9303 -> bb178__0_9303 [label=""];
    bb40__0_9303 -> bb41__0_9303 [label="return"];
    bb40__0_9303 -> bb193__0_9303 [label="unwind"];
    bb41__0_9303 -> bb42__0_9303 [label="return"];
    bb41__0_9303 -> bb193__0_9303 [label="unwind"];
    bb42__0_9303 -> bb43__0_9303 [label="return"];
    bb42__0_9303 -> bb192__0_9303 [label="unwind"];
    bb43__0_9303 -> bb44__0_9303 [label="return"];
    bb43__0_9303 -> bb191__0_9303 [label="unwind"];
    bb44__0_9303 -> bb45__0_9303 [label="return"];
    bb44__0_9303 -> bb191__0_9303 [label="unwind"];
    bb45__0_9303 -> bb46__0_9303 [label="return"];
    bb45__0_9303 -> bb191__0_9303 [label="unwind"];
    bb46__0_9303 -> bb47__0_9303 [label="0"];
    bb46__0_9303 -> bb48__0_9303 [label="1"];
    bb46__0_9303 -> bb4__0_9303 [label="otherwise"];
    bb47__0_9303 -> bb50__0_9303 [label="return"];
    bb47__0_9303 -> bb187__0_9303 [label="unwind"];
    bb48__0_9303 -> bb49__0_9303 [label="return"];
    bb48__0_9303 -> bb205__0_9303 [label="unwind"];
    bb49__0_9303 -> bb175__0_9303 [label="return"];
    bb49__0_9303 -> bb192__0_9303 [label="unwind"];
    bb50__0_9303 -> bb51__0_9303 [label="return"];
    bb50__0_9303 -> bb188__0_9303 [label="unwind"];
    bb51__0_9303 -> bb52__0_9303 [label="return"];
    bb51__0_9303 -> bb188__0_9303 [label="unwind"];
    bb52__0_9303 -> bb53__0_9303 [label="return"];
    bb52__0_9303 -> bb188__0_9303 [label="unwind"];
    bb53__0_9303 -> bb54__0_9303 [label="0"];
    bb53__0_9303 -> bb55__0_9303 [label="1"];
    bb53__0_9303 -> bb4__0_9303 [label="otherwise"];
    bb54__0_9303 -> bb57__0_9303 [label="return"];
    bb54__0_9303 -> bb188__0_9303 [label="unwind"];
    bb55__0_9303 -> bb56__0_9303 [label="return"];
    bb55__0_9303 -> bb188__0_9303 [label="unwind"];
    bb56__0_9303 -> bb171__0_9303 [label=""];
    bb57__0_9303 -> bb58__0_9303 [label="return"];
    bb57__0_9303 -> bb188__0_9303 [label="unwind"];
    bb58__0_9303 -> bb59__0_9303 [label="0"];
    bb58__0_9303 -> bb60__0_9303 [label="1"];
    bb58__0_9303 -> bb4__0_9303 [label="otherwise"];
    bb59__0_9303 -> bb62__0_9303 [label="return"];
    bb59__0_9303 -> bb186__0_9303 [label="unwind"];
    bb60__0_9303 -> bb61__0_9303 [label="return"];
    bb60__0_9303 -> bb204__0_9303 [label="unwind"];
    bb61__0_9303 -> bb170__0_9303 [label=""];
    bb62__0_9303 -> bb63__0_9303 [label="return"];
    bb62__0_9303 -> bb186__0_9303 [label="unwind"];
    bb63__0_9303 -> bb64__0_9303 [label="return"];
    bb63__0_9303 -> bb186__0_9303 [label="unwind"];
    bb64__0_9303 -> bb66__0_9303 [label="0"];
    bb64__0_9303 -> bb65__0_9303 [label="otherwise"];
    bb65__0_9303 -> bb67__0_9303 [label=""];
    bb66__0_9303 -> bb67__0_9303 [label=""];
    bb67__0_9303 -> bb68__0_9303 [label="return"];
    bb67__0_9303 -> bb186__0_9303 [label="unwind"];
    bb68__0_9303 -> bb69__0_9303 [label="return"];
    bb68__0_9303 -> bb186__0_9303 [label="unwind"];
    bb69__0_9303 -> bb70__0_9303 [label="return"];
    bb69__0_9303 -> bb186__0_9303 [label="unwind"];
    bb70__0_9303 -> bb71__0_9303 [label="return"];
    bb70__0_9303 -> bb186__0_9303 [label="unwind"];
    bb71__0_9303 -> bb72__0_9303 [label="0"];
    bb71__0_9303 -> bb73__0_9303 [label="1"];
    bb71__0_9303 -> bb4__0_9303 [label="otherwise"];
    bb72__0_9303 -> bb75__0_9303 [label="return"];
    bb72__0_9303 -> bb186__0_9303 [label="unwind"];
    bb73__0_9303 -> bb74__0_9303 [label="return"];
    bb73__0_9303 -> bb203__0_9303 [label="unwind"];
    bb74__0_9303 -> bb169__0_9303 [label=""];
    bb75__0_9303 -> bb76__0_9303 [label="return"];
    bb75__0_9303 -> bb186__0_9303 [label="unwind"];
    bb76__0_9303 -> bb77__0_9303 [label="0"];
    bb76__0_9303 -> bb78__0_9303 [label="1"];
    bb76__0_9303 -> bb4__0_9303 [label="otherwise"];
    bb77__0_9303 -> bb80__0_9303 [label="return"];
    bb77__0_9303 -> bb186__0_9303 [label="unwind"];
    bb78__0_9303 -> bb79__0_9303 [label="return"];
    bb78__0_9303 -> bb202__0_9303 [label="unwind"];
    bb79__0_9303 -> bb169__0_9303 [label=""];
    bb80__0_9303 -> bb81__0_9303 [label="return"];
    bb80__0_9303 -> bb186__0_9303 [label="unwind"];
    bb81__0_9303 -> bb82__0_9303 [label="0"];
    bb81__0_9303 -> bb83__0_9303 [label="1"];
    bb81__0_9303 -> bb4__0_9303 [label="otherwise"];
    bb82__0_9303 -> bb85__0_9303 [label="return"];
    bb82__0_9303 -> bb186__0_9303 [label="unwind"];
    bb83__0_9303 -> bb84__0_9303 [label="return"];
    bb83__0_9303 -> bb201__0_9303 [label="unwind"];
    bb84__0_9303 -> bb169__0_9303 [label=""];
    bb85__0_9303 -> bb86__0_9303 [label="return"];
    bb85__0_9303 -> bb186__0_9303 [label="unwind"];
    bb86__0_9303 -> bb87__0_9303 [label="return"];
    bb86__0_9303 -> bb186__0_9303 [label="unwind"];
    bb87__0_9303 -> bb88__0_9303 [label="return"];
    bb87__0_9303 -> bb186__0_9303 [label="unwind"];
    bb88__0_9303 -> bb89__0_9303 [label="return"];
    bb88__0_9303 -> bb186__0_9303 [label="unwind"];
    bb89__0_9303 -> bb90__0_9303 [label="0"];
    bb89__0_9303 -> bb91__0_9303 [label="1"];
    bb89__0_9303 -> bb4__0_9303 [label="otherwise"];
    bb90__0_9303 -> bb93__0_9303 [label="return"];
    bb90__0_9303 -> bb188__0_9303 [label="unwind"];
    bb91__0_9303 -> bb92__0_9303 [label="return"];
    bb91__0_9303 -> bb186__0_9303 [label="unwind"];
    bb92__0_9303 -> bb169__0_9303 [label=""];
    bb93__0_9303 -> bb94__0_9303 [label="return"];
    bb93__0_9303 -> bb188__0_9303 [label="unwind"];
    bb94__0_9303 -> bb95__0_9303 [label="return"];
    bb94__0_9303 -> bb188__0_9303 [label="unwind"];
    bb95__0_9303 -> bb96__0_9303 [label="return"];
    bb95__0_9303 -> bb188__0_9303 [label="unwind"];
    bb96__0_9303 -> bb97__0_9303 [label="return"];
    bb96__0_9303 -> bb188__0_9303 [label="unwind"];
    bb97__0_9303 -> bb98__0_9303 [label="return"];
    bb97__0_9303 -> bb188__0_9303 [label="unwind"];
    bb98__0_9303 -> bb99__0_9303 [label="return"];
    bb98__0_9303 -> bb188__0_9303 [label="unwind"];
    bb99__0_9303 -> bb100__0_9303 [label="0"];
    bb99__0_9303 -> bb101__0_9303 [label="1"];
    bb99__0_9303 -> bb4__0_9303 [label="otherwise"];
    bb100__0_9303 -> bb104__0_9303 [label="0"];
    bb100__0_9303 -> bb103__0_9303 [label="otherwise"];
    bb101__0_9303 -> bb102__0_9303 [label="return"];
    bb101__0_9303 -> bb188__0_9303 [label="unwind"];
    bb102__0_9303 -> bb168__0_9303 [label=""];
    bb103__0_9303 -> bb105__0_9303 [label="return"];
    bb103__0_9303 -> bb188__0_9303 [label="unwind"];
    bb104__0_9303 -> bb139__0_9303 [label=""];
    bb105__0_9303 -> bb106__0_9303 [label="return"];
    bb105__0_9303 -> bb188__0_9303 [label="unwind"];
    bb106__0_9303 -> bb107__0_9303 [label="0"];
    bb106__0_9303 -> bb108__0_9303 [label="1"];
    bb106__0_9303 -> bb4__0_9303 [label="otherwise"];
    bb107__0_9303 -> bb110__0_9303 [label="return"];
    bb107__0_9303 -> bb185__0_9303 [label="unwind"];
    bb108__0_9303 -> bb109__0_9303 [label="return"];
    bb108__0_9303 -> bb200__0_9303 [label="unwind"];
    bb109__0_9303 -> bb167__0_9303 [label=""];
    bb110__0_9303 -> bb111__0_9303 [label="return"];
    bb110__0_9303 -> bb185__0_9303 [label="unwind"];
    bb111__0_9303 -> bb112__0_9303 [label="return"];
    bb111__0_9303 -> bb185__0_9303 [label="unwind"];
    bb112__0_9303 -> bb114__0_9303 [label="0"];
    bb112__0_9303 -> bb113__0_9303 [label="otherwise"];
    bb113__0_9303 -> bb115__0_9303 [label=""];
    bb114__0_9303 -> bb115__0_9303 [label=""];
    bb115__0_9303 -> bb116__0_9303 [label="return"];
    bb115__0_9303 -> bb185__0_9303 [label="unwind"];
    bb116__0_9303 -> bb117__0_9303 [label="return"];
    bb116__0_9303 -> bb185__0_9303 [label="unwind"];
    bb117__0_9303 -> bb118__0_9303 [label="return"];
    bb117__0_9303 -> bb185__0_9303 [label="unwind"];
    bb118__0_9303 -> bb119__0_9303 [label="0"];
    bb118__0_9303 -> bb120__0_9303 [label="1"];
    bb118__0_9303 -> bb4__0_9303 [label="otherwise"];
    bb119__0_9303 -> bb122__0_9303 [label="return"];
    bb119__0_9303 -> bb185__0_9303 [label="unwind"];
    bb120__0_9303 -> bb121__0_9303 [label="return"];
    bb120__0_9303 -> bb199__0_9303 [label="unwind"];
    bb121__0_9303 -> bb166__0_9303 [label=""];
    bb122__0_9303 -> bb123__0_9303 [label="return"];
    bb122__0_9303 -> bb185__0_9303 [label="unwind"];
    bb123__0_9303 -> bb125__0_9303 [label="0"];
    bb123__0_9303 -> bb124__0_9303 [label="otherwise"];
    bb124__0_9303 -> bb133__0_9303 [label=""];
    bb125__0_9303 -> bb126__0_9303 [label="return"];
    bb125__0_9303 -> bb185__0_9303 [label="unwind"];
    bb126__0_9303 -> bb127__0_9303 [label="return"];
    bb126__0_9303 -> bb185__0_9303 [label="unwind"];
    bb127__0_9303 -> bb128__0_9303 [label="return"];
    bb127__0_9303 -> bb185__0_9303 [label="unwind"];
    bb128__0_9303 -> bb129__0_9303 [label="return"];
    bb128__0_9303 -> bb184__0_9303 [label="unwind"];
    bb129__0_9303 -> bb130__0_9303 [label="return"];
    bb129__0_9303 -> bb184__0_9303 [label="unwind"];
    bb130__0_9303 -> bb131__0_9303 [label="return"];
    bb130__0_9303 -> bb185__0_9303 [label="unwind"];
    bb131__0_9303 -> bb132__0_9303 [label="return"];
    bb131__0_9303 -> bb185__0_9303 [label="unwind"];
    bb132__0_9303 -> bb133__0_9303 [label=""];
    bb133__0_9303 -> bb134__0_9303 [label="return"];
    bb133__0_9303 -> bb185__0_9303 [label="unwind"];
    bb134__0_9303 -> bb135__0_9303 [label="0"];
    bb134__0_9303 -> bb136__0_9303 [label="1"];
    bb134__0_9303 -> bb4__0_9303 [label="otherwise"];
    bb135__0_9303 -> bb138__0_9303 [label="return"];
    bb135__0_9303 -> bb188__0_9303 [label="unwind"];
    bb136__0_9303 -> bb137__0_9303 [label="return"];
    bb136__0_9303 -> bb185__0_9303 [label="unwind"];
    bb137__0_9303 -> bb166__0_9303 [label=""];
    bb138__0_9303 -> bb139__0_9303 [label=""];
    bb139__0_9303 -> bb140__0_9303 [label="return"];
    bb139__0_9303 -> bb188__0_9303 [label="unwind"];
    bb140__0_9303 -> bb141__0_9303 [label="return"];
    bb140__0_9303 -> bb188__0_9303 [label="unwind"];
    bb141__0_9303 -> bb142__0_9303 [label="0"];
    bb141__0_9303 -> bb143__0_9303 [label="1"];
    bb141__0_9303 -> bb4__0_9303 [label="otherwise"];
    bb142__0_9303 -> bb145__0_9303 [label="return"];
    bb142__0_9303 -> bb183__0_9303 [label="unwind"];
    bb143__0_9303 -> bb144__0_9303 [label="return"];
    bb143__0_9303 -> bb198__0_9303 [label="unwind"];
    bb144__0_9303 -> bb165__0_9303 [label=""];
    bb145__0_9303 -> bb146__0_9303 [label="return"];
    bb145__0_9303 -> bb183__0_9303 [label="unwind"];
    bb146__0_9303 -> bb147__0_9303 [label="0"];
    bb146__0_9303 -> bb148__0_9303 [label="1"];
    bb146__0_9303 -> bb4__0_9303 [label="otherwise"];
    bb147__0_9303 -> bb150__0_9303 [label="return"];
    bb147__0_9303 -> bb183__0_9303 [label="unwind"];
    bb148__0_9303 -> bb149__0_9303 [label="return"];
    bb148__0_9303 -> bb197__0_9303 [label="unwind"];
    bb149__0_9303 -> bb164__0_9303 [label=""];
    bb150__0_9303 -> bb151__0_9303 [label="return"];
    bb150__0_9303 -> bb183__0_9303 [label="unwind"];
    bb151__0_9303 -> bb152__0_9303 [label="return"];
    bb151__0_9303 -> bb183__0_9303 [label="unwind"];
    bb152__0_9303 -> bb153__0_9303 [label="return"];
    bb152__0_9303 -> bb183__0_9303 [label="unwind"];
    bb153__0_9303 -> bb154__0_9303 [label="return"];
    bb153__0_9303 -> bb183__0_9303 [label="unwind"];
    bb154__0_9303 -> bb155__0_9303 [label="0"];
    bb154__0_9303 -> bb156__0_9303 [label="1"];
    bb154__0_9303 -> bb4__0_9303 [label="otherwise"];
    bb155__0_9303 -> bb158__0_9303 [label="return"];
    bb155__0_9303 -> bb188__0_9303 [label="unwind"];
    bb156__0_9303 -> bb157__0_9303 [label="return"];
    bb156__0_9303 -> bb183__0_9303 [label="unwind"];
    bb157__0_9303 -> bb164__0_9303 [label=""];
    bb158__0_9303 -> bb159__0_9303 [label="return"];
    bb158__0_9303 -> bb189__0_9303 [label="unwind"];
    bb159__0_9303 -> bb160__0_9303 [label="return"];
    bb159__0_9303 -> bb190__0_9303 [label="unwind"];
    bb160__0_9303 -> bb161__0_9303 [label="return"];
    bb160__0_9303 -> bb193__0_9303 [label="unwind"];
    bb161__0_9303 -> bb162__0_9303 [label="return"];
    bb161__0_9303 -> bb194__0_9303 [label="unwind"];
    bb162__0_9303 -> bb163__0_9303 [label="return"];
    bb162__0_9303 -> bb196__0_9303 [label="unwind"];
    bb163__0_9303 -> bb182__0_9303 [label=""];
    bb164__0_9303 -> bb165__0_9303 [label="return"];
    bb164__0_9303 -> bb188__0_9303 [label="unwind"];
    bb165__0_9303 -> bb168__0_9303 [label=""];
    bb166__0_9303 -> bb167__0_9303 [label="return"];
    bb166__0_9303 -> bb188__0_9303 [label="unwind"];
    bb167__0_9303 -> bb168__0_9303 [label=""];
    bb168__0_9303 -> bb171__0_9303 [label=""];
    bb169__0_9303 -> bb170__0_9303 [label="return"];
    bb169__0_9303 -> bb188__0_9303 [label="unwind"];
    bb170__0_9303 -> bb171__0_9303 [label=""];
    bb171__0_9303 -> bb172__0_9303 [label="return"];
    bb171__0_9303 -> bb189__0_9303 [label="unwind"];
    bb172__0_9303 -> bb173__0_9303 [label="return"];
    bb172__0_9303 -> bb190__0_9303 [label="unwind"];
    bb173__0_9303 -> bb174__0_9303 [label="return"];
    bb173__0_9303 -> bb193__0_9303 [label="unwind"];
    bb174__0_9303 -> bb177__0_9303 [label=""];
    bb175__0_9303 -> bb176__0_9303 [label="return"];
    bb175__0_9303 -> bb193__0_9303 [label="unwind"];
    bb176__0_9303 -> bb177__0_9303 [label=""];
    bb177__0_9303 -> bb178__0_9303 [label="return"];
    bb177__0_9303 -> bb194__0_9303 [label="unwind"];
    bb178__0_9303 -> bb179__0_9303 [label="return"];
    bb178__0_9303 -> bb196__0_9303 [label="unwind"];
    bb179__0_9303 -> bb180__0_9303 [label=""];
    bb180__0_9303 -> bb181__0_9303 [label=""];
    bb181__0_9303 -> bb182__0_9303 [label=""];
    bb183__0_9303 -> bb188__0_9303 [label="return"];
    bb184__0_9303 -> bb185__0_9303 [label="return"];
    bb185__0_9303 -> bb188__0_9303 [label="return"];
    bb186__0_9303 -> bb188__0_9303 [label="return"];
    bb187__0_9303 -> bb188__0_9303 [label="return"];
    bb188__0_9303 -> bb189__0_9303 [label="return"];
    bb189__0_9303 -> bb190__0_9303 [label="return"];
    bb190__0_9303 -> bb193__0_9303 [label="return"];
    bb191__0_9303 -> bb192__0_9303 [label="return"];
    bb192__0_9303 -> bb193__0_9303 [label="return"];
    bb193__0_9303 -> bb194__0_9303 [label="return"];
    bb194__0_9303 -> bb196__0_9303 [label="return"];
    bb195__0_9303 -> bb196__0_9303 [label="return"];
    bb197__0_9303 -> bb183__0_9303 [label=""];
    bb198__0_9303 -> bb188__0_9303 [label=""];
    bb199__0_9303 -> bb185__0_9303 [label=""];
    bb200__0_9303 -> bb188__0_9303 [label=""];
    bb201__0_9303 -> bb186__0_9303 [label=""];
    bb202__0_9303 -> bb186__0_9303 [label=""];
    bb203__0_9303 -> bb186__0_9303 [label=""];
    bb204__0_9303 -> bb188__0_9303 [label=""];
    bb205__0_9303 -> bb191__0_9303 [label=""];
    bb206__0_9303 -> bb194__0_9303 [label=""];
    bb207__0_9303 -> bb196__0_9303 [label=""];
    bb208__0_9303 -> bb196__0_9303 [label=""];
    bb209__0_9303 -> bb196__0_9303 [label=""];
}
