digraph Mir_0_1683 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn instructions::user::handle_initialize_user_stats(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::user::InitializeUserStats&lt;ReErased&gt;&gt;) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _2: anchor_lang::prelude::Clock;<br align="left"/>let mut _3: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _4: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _5: isize;<br align="left"/>let _6: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _7: !;<br align="left"/>let mut _8: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _9: anchor_lang::prelude::Clock;<br align="left"/>let mut _10: std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _11: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;;<br align="left"/>let mut _12: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _13: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _14: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _15: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _16: error::ErrorCode;<br align="left"/>let mut _17: isize;<br align="left"/>let _18: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _19: !;<br align="left"/>let mut _20: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _21: std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _22: state::user::UserStats;<br align="left"/>let mut _23: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _24: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _25: i64;<br align="left"/>let mut _26: i64;<br align="left"/>let mut _27: i64;<br align="left"/>let mut _28: u32;<br align="left"/>let mut _29: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _30: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _31: i64;<br align="left"/>let mut _32: isize;<br align="left"/>let _33: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _34: !;<br align="left"/>let mut _35: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _36: u32;<br align="left"/>let mut _37: state::user::UserStats;<br align="left"/>let mut _38: &amp;ReErased mut state::user::UserStats;<br align="left"/>let mut _39: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let _40: &amp;ReErased mut std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let _41: ();<br align="left"/>let mut _42: u64;<br align="left"/>let mut _43: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _44: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _45: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _46: u64;<br align="left"/>let mut _47: &amp;ReErased state::state::State;<br align="left"/>let mut _48: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _49: Closure(DefId(0:11669 ~ drift[d311]::instructions::user::handle_initialize_user_stats::{closure#0}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn(()) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _50: isize;<br align="left"/>let _51: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _52: !;<br align="left"/>let mut _53: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _54: u64;<br align="left"/>let mut _55: &amp;ReErased mut state::state::State;<br align="left"/>let mut _56: &amp;ReErased mut anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _57: u64;<br align="left"/>let mut _58: &amp;ReErased state::state::State;<br align="left"/>let _59: &amp;ReErased state::state::State;<br align="left"/>let mut _60: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _61: ();<br align="left"/>let mut _62: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _63: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _64: bool;<br align="left"/>let mut _65: u64;<br align="left"/>let mut _66: bool;<br align="left"/>let mut _67: u64;<br align="left"/>let mut _68: &amp;ReErased state::state::State;<br align="left"/>let mut _69: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _70: u64;<br align="left"/>let mut _71: ();<br align="left"/>let _72: error::ErrorCode;<br align="left"/>let _73: ();<br align="left"/>let mut _74: &amp;ReErased str;<br align="left"/>let _75: &amp;ReErased str;<br align="left"/>let mut _76: &amp;ReErased std::string::String;<br align="left"/>let _77: &amp;ReErased std::string::String;<br align="left"/>let _78: std::string::String;<br align="left"/>let _79: std::string::String;<br align="left"/>let mut _80: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _81: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _82: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _83: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _84: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _85: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _86: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _87: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _88: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _89: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _90: &amp;ReErased error::ErrorCode;<br align="left"/>let _91: &amp;ReErased error::ErrorCode;<br align="left"/>let mut _92: error::ErrorCode;<br align="left"/>let mut _93: isize;<br align="left"/>let _94: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _95: !;<br align="left"/>let mut _96: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _97: ();<br align="left"/>let mut _98: ();<br align="left"/>let mut _99: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _100: &amp;ReErased mut instructions::user::InitializeUserStats&lt;ReErased&gt;;<br align="left"/>let mut _101: &amp;ReErased mut instructions::user::InitializeUserStats&lt;ReErased&gt;;<br align="left"/>let mut _102: &amp;ReErased mut instructions::user::InitializeUserStats&lt;ReErased&gt;;<br align="left"/>let mut _103: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _104: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _105: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _106: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _107: isize;<br align="left"/>let mut _108: isize;<br align="left"/>let mut _109: isize;<br align="left"/>let mut _110: isize;<br align="left"/>let mut _111: isize;<br align="left"/>let mut _112: isize;<br align="left"/>let mut _113: isize;<br align="left"/>let mut _114: isize;<br align="left"/>let mut _115: isize;<br align="left"/>let mut _116: isize;<br align="left"/>let mut _117: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _118: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _119: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _120: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug clock =&gt; _2;<br align="left"/>debug residual =&gt; _6;<br align="left"/>debug val =&gt; _9;<br align="left"/>debug user_stats =&gt; _10;<br align="left"/>debug residual =&gt; _18;<br align="left"/>debug val =&gt; _21;<br align="left"/>debug residual =&gt; _33;<br align="left"/>debug val =&gt; _36;<br align="left"/>debug state =&gt; _40;<br align="left"/>debug residual =&gt; _51;<br align="left"/>debug val =&gt; _54;<br align="left"/>debug max_number_of_sub_accounts =&gt; _57;<br align="left"/>debug error_code =&gt; _72;<br align="left"/>debug res =&gt; _79;<br align="left"/>debug residual =&gt; _94;<br align="left"/>debug val =&gt; _97;<br align="left"/>>;
    bb0__0_1683 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/></td></tr><tr><td align="left">_4 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb1__0_1683 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">_3 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _4)</td></tr></table>>];
    bb2__0_1683 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>_5 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _5)</td></tr></table>>];
    bb3__0_1683 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>_9 = move ((_3 as Continue).0: anchor_lang::prelude::Clock)<br/>_2 = move _9<br/>StorageDead(_9)<br/>_107 = discriminant(_3)<br/>StorageDead(_3)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_100 = deref_copy (_1.1: &amp;mut instructions::user::InitializeUserStats&lt;'_&gt;)<br/>_14 = &amp;((*_100).0: anchor_lang::prelude::AccountLoader&lt;'_, state::user::UserStats&gt;)<br/></td></tr><tr><td align="left">_13 = anchor_lang::prelude::AccountLoader::&lt;'_, UserStats&gt;::load_init(move _14)</td></tr></table>>];
    bb4__0_1683 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_1683 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_6)<br/>_6 = move ((_3 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_8)<br/>_8 = move _6<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _8)</td></tr></table>>];
    bb6__0_1683 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_6)<br/>_113 = discriminant(_3)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_1683 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_16 = error::ErrorCode::UnableToLoadAccountLoader<br/>_15 = std::result::Result::&lt;RefMut&lt;'_, UserStats&gt;, error::ErrorCode&gt;::Err(move _16)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">_12 = std::result::Result::&lt;RefMut&lt;'_, UserStats&gt;, anchor_lang::error::Error&gt;::or::&lt;error::ErrorCode&gt;(move _13, move _15)</td></tr></table>>];
    bb8__0_1683 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">_11 = &lt;std::result::Result&lt;RefMut&lt;'_, UserStats&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _12)</td></tr></table>>];
    bb9__0_1683 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>_17 = discriminant(_11)<br/></td></tr><tr><td align="left">switchInt(move _17)</td></tr></table>>];
    bb10__0_1683 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = move ((_11 as Continue).0: std::cell::RefMut&lt;'_, state::user::UserStats&gt;)<br/>_10 = move _21<br/>StorageDead(_21)<br/>_111 = discriminant(_11)<br/>StorageDead(_11)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_101 = deref_copy (_1.1: &amp;mut instructions::user::InitializeUserStats&lt;'_&gt;)<br/>_24 = &amp;((*_101).2: anchor_lang::prelude::Signer&lt;'_&gt;)<br/></td></tr><tr><td align="left">_23 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::Key&gt;::key(move _24)</td></tr></table>>];
    bb11__0_1683 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_18)<br/>_18 = ((_11 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_20)<br/>_20 = _18<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _20)</td></tr></table>>];
    bb12__0_1683 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_18)<br/>_109 = discriminant(_11)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_1683 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageLive(_25)<br/>_25 = (_2.4: i64)<br/>StorageLive(_26)<br/>_26 = (_2.4: i64)<br/>StorageLive(_27)<br/>_27 = (_2.4: i64)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>_31 = (_2.4: i64)<br/></td></tr><tr><td align="left">_30 = &lt;i64 as Cast&gt;::cast::&lt;u32&gt;(move _31)</td></tr></table>>];
    bb14__0_1683 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/></td></tr><tr><td align="left">_29 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _30)</td></tr></table>>];
    bb15__0_1683 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>_32 = discriminant(_29)<br/></td></tr><tr><td align="left">switchInt(move _32)</td></tr></table>>];
    bb16__0_1683 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_36)<br/>_36 = ((_29 as Continue).0: u32)<br/>_28 = _36<br/>StorageDead(_36)<br/>StorageLive(_37)<br/></td></tr><tr><td align="left">_37 = &lt;UserStats as Default&gt;::default()</td></tr></table>>];
    bb17__0_1683 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_33)<br/>_33 = ((_29 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_35)<br/>_35 = _33<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _35)</td></tr></table>>];
    bb18__0_1683 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_33)<br/>StorageDead(_28)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_1683 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">_22 = UserStats { authority: move _23, referrer: (_37.1: anchor_lang::prelude::Pubkey), fees: (_37.2: state::user::UserFees), next_epoch_ts: (_37.3: i64), maker_volume_30d: (_37.4: u64), taker_volume_30d: (_37.5: u64), filler_volume_30d: (_37.6: u64), last_maker_volume_30d_ts: move _26, last_taker_volume_30d_ts: move _25, last_filler_volume_30d_ts: move _27, if_staked_quote_asset_amount: (_37.10: u64), number_of_sub_accounts: const 0_u16, number_of_sub_accounts_created: (_37.12: u16), referrer_status: (_37.13: u8), disable_update_perp_bid_ask_twap: (_37.14: bool), padding1: (_37.15: [u8; 1]), fuel_overflow_status: (_37.16: u8), fuel_insurance: (_37.17: u32), fuel_deposits: (_37.18: u32), fuel_borrows: (_37.19: u32), fuel_positions: (_37.20: u32), fuel_taker: (_37.21: u32), fuel_maker: (_37.22: u32), if_staked_gov_token_amount: (_37.23: u64), last_fuel_if_bonus_update_ts: move _28, padding: (_37.25: [u8; 12]) }<br/>StorageDead(_28)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_23)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>_39 = &amp;mut _10<br/></td></tr><tr><td align="left">_38 = &lt;RefMut&lt;'_, UserStats&gt; as DerefMut&gt;::deref_mut(move _39)</td></tr></table>>];
    bb20__0_1683 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>(*_38) = move _22<br/>StorageDead(_22)<br/>StorageDead(_38)<br/>StorageDead(_37)<br/>StorageDead(_29)<br/>StorageLive(_40)<br/>_102 = deref_copy (_1.1: &amp;mut instructions::user::InitializeUserStats&lt;'_&gt;)<br/>_40 = &amp;mut ((*_102).1: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>_103 = deref_copy (*_40)<br/>_117 = (((_103.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_48 = &amp;(*_117)<br/></td></tr><tr><td align="left">_47 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _48)</td></tr></table>>];
    bb21__0_1683 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>_46 = ((*_47).8: u64)<br/></td></tr><tr><td align="left">_45 = core::num::&lt;impl u64&gt;::checked_add(move _46, const 1_u64)</td></tr></table>>];
    bb22__0_1683 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageLive(_49)<br/>_49 = {closure@programs/drift/src/error.rs:658:9: 658:11}<br/></td></tr><tr><td align="left">_44 = Option::&lt;u64&gt;::ok_or_else::&lt;error::ErrorCode, {closure@programs/drift/src/error.rs:658:9: 658:11}&gt;(move _45, move _49)</td></tr></table>>];
    bb23__0_1683 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">_43 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _44)</td></tr></table>>];
    bb24__0_1683 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>_50 = discriminant(_43)<br/></td></tr><tr><td align="left">switchInt(move _50)</td></tr></table>>];
    bb25__0_1683 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_54)<br/>_54 = ((_43 as Continue).0: u64)<br/>_42 = _54<br/>StorageDead(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>_104 = deref_copy (*_40)<br/>_118 = (((_104.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_56 = &amp;mut (*_118)<br/></td></tr><tr><td align="left">_55 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as DerefMut&gt;::deref_mut(move _56)</td></tr></table>>];
    bb26__0_1683 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_51)<br/>_51 = ((_43 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_53)<br/>_53 = _51<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _53)</td></tr></table>>];
    bb27__0_1683 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_51)<br/>StorageDead(_42)<br/>StorageDead(_47)<br/>StorageDead(_43)<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_1683 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>((*_55).8: u64) = move _42<br/>_41 = const ()<br/>StorageDead(_42)<br/>StorageDead(_55)<br/>StorageDead(_47)<br/>StorageDead(_43)<br/>StorageDead(_41)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>_105 = deref_copy (*_40)<br/>_119 = (((_105.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_60 = &amp;(*_119)<br/></td></tr><tr><td align="left">_59 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _60)</td></tr></table>>];
    bb29__0_1683 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">_58 = &amp;(*_59)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">_57 = state::state::State::max_number_of_sub_accounts(move _58)</td></tr></table>>];
    bb30__0_1683 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageDead(_59)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>_65 = _57<br/>_64 = Eq(move _65, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _64)</td></tr></table>>];
    bb31__0_1683 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_1683 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>_106 = deref_copy (*_40)<br/>_120 = (((_106.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_69 = &amp;(*_120)<br/></td></tr><tr><td align="left">_68 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _69)</td></tr></table>>];
    bb33__0_1683 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>_67 = ((*_68).8: u64)<br/>StorageLive(_70)<br/>_70 = _57<br/>_66 = Le(move _67, move _70)<br/></td></tr><tr><td align="left">switchInt(move _66)</td></tr></table>>];
    bb34__0_1683 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_68)<br/>StorageDead(_67)<br/>StorageLive(_71)<br/>_71 = ()<br/>_63 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _71)<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_1683 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_68)<br/>StorageDead(_67)<br/>StorageLive(_72)<br/>_72 = error::ErrorCode::MaxNumberOfUsers<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>_99 = const _<br/>_83 = &amp;(*_99)<br/>_82 = &amp;(*_83)<br/>_81 = move _82 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_82)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>_91 = &amp;_72<br/>_90 = &amp;(*_91)<br/></td></tr><tr><td align="left">_89 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _90)</td></tr></table>>];
    bb36__0_1683 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>_88 = [move _89]<br/>StorageDead(_89)<br/>_87 = &amp;_88<br/>_86 = &amp;(*_87)<br/>_85 = move _86 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_86)<br/></td></tr><tr><td align="left">_80 = Arguments::&lt;'_&gt;::new_v1(move _81, move _85)</td></tr></table>>];
    bb37__0_1683 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>StorageDead(_81)<br/></td></tr><tr><td align="left">_79 = format(move _80)</td></tr></table>>];
    bb38__0_1683 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>StorageDead(_91)<br/>StorageDead(_88)<br/>StorageDead(_87)<br/>StorageDead(_83)<br/>_78 = move _79<br/>StorageDead(_79)<br/>_77 = &amp;_78<br/>_76 = &amp;(*_77)<br/></td></tr><tr><td align="left">_75 = &lt;String as Deref&gt;::deref(move _76)</td></tr></table>>];
    bb39__0_1683 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">_74 = &amp;(*_75)<br/>StorageDead(_76)<br/></td></tr><tr><td align="left">_73 = solana_program::log::sol_log(move _74)</td></tr></table>>];
    bb40__0_1683 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/></td></tr><tr><td align="left">drop(_78)</td></tr></table>>];
    bb41__0_1683 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>StorageDead(_77)<br/>StorageDead(_75)<br/>StorageDead(_73)<br/>StorageLive(_92)<br/>_92 = _72<br/>_63 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _92)<br/>StorageDead(_92)<br/>StorageDead(_72)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_1683 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageDead(_64)<br/></td></tr><tr><td align="left">_62 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _63)</td></tr></table>>];
    bb43__0_1683 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>_93 = discriminant(_62)<br/></td></tr><tr><td align="left">switchInt(move _93)</td></tr></table>>];
    bb44__0_1683 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_97)<br/>_97 = ((_62 as Continue).0: ())<br/>_61 = _97<br/>StorageDead(_97)<br/>StorageDead(_62)<br/>StorageDead(_61)<br/>StorageLive(_98)<br/>_98 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _98)<br/>StorageDead(_98)<br/>StorageDead(_57)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">drop(_10)</td></tr></table>>];
    bb45__0_1683 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageLive(_94)<br/>_94 = ((_62 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_96)<br/>_96 = _94<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _96)</td></tr></table>>];
    bb46__0_1683 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>StorageDead(_94)<br/>StorageDead(_62)<br/>StorageDead(_61)<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_1683 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_1683 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_1683 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left">drop(_10)</td></tr></table>>];
    bb50__0_1683 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb51__0_1683 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb52__0_1683 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left">return</td></tr></table>>];
    bb53__0_1683 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">53 (cleanup)</td></tr><tr><td align="left">drop(_78)</td></tr></table>>];
    bb54__0_1683 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">54 (cleanup)</td></tr><tr><td align="left">drop(_10)</td></tr></table>>];
    bb55__0_1683 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">55 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb56__0_1683 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">56 (cleanup)</td></tr><tr><td align="left" balign="left">_115 = discriminant(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb57__0_1683 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">57 (cleanup)</td></tr><tr><td align="left" balign="left">_116 = discriminant(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_1683 -> bb1__0_1683 [label="return"];
    bb1__0_1683 -> bb2__0_1683 [label="return"];
    bb1__0_1683 -> bb55__0_1683 [label="unwind"];
    bb2__0_1683 -> bb3__0_1683 [label="0"];
    bb2__0_1683 -> bb5__0_1683 [label="1"];
    bb2__0_1683 -> bb4__0_1683 [label="otherwise"];
    bb3__0_1683 -> bb7__0_1683 [label="return"];
    bb5__0_1683 -> bb6__0_1683 [label="return"];
    bb5__0_1683 -> bb57__0_1683 [label="unwind"];
    bb6__0_1683 -> bb51__0_1683 [label=""];
    bb7__0_1683 -> bb8__0_1683 [label="return"];
    bb7__0_1683 -> bb55__0_1683 [label="unwind"];
    bb8__0_1683 -> bb9__0_1683 [label="return"];
    bb8__0_1683 -> bb55__0_1683 [label="unwind"];
    bb9__0_1683 -> bb10__0_1683 [label="0"];
    bb9__0_1683 -> bb11__0_1683 [label="1"];
    bb9__0_1683 -> bb4__0_1683 [label="otherwise"];
    bb10__0_1683 -> bb13__0_1683 [label="return"];
    bb10__0_1683 -> bb54__0_1683 [label="unwind"];
    bb11__0_1683 -> bb12__0_1683 [label="return"];
    bb11__0_1683 -> bb56__0_1683 [label="unwind"];
    bb12__0_1683 -> bb50__0_1683 [label=""];
    bb13__0_1683 -> bb14__0_1683 [label="return"];
    bb13__0_1683 -> bb54__0_1683 [label="unwind"];
    bb14__0_1683 -> bb15__0_1683 [label="return"];
    bb14__0_1683 -> bb54__0_1683 [label="unwind"];
    bb15__0_1683 -> bb16__0_1683 [label="0"];
    bb15__0_1683 -> bb17__0_1683 [label="1"];
    bb15__0_1683 -> bb4__0_1683 [label="otherwise"];
    bb16__0_1683 -> bb19__0_1683 [label="return"];
    bb16__0_1683 -> bb54__0_1683 [label="unwind"];
    bb17__0_1683 -> bb18__0_1683 [label="return"];
    bb17__0_1683 -> bb54__0_1683 [label="unwind"];
    bb18__0_1683 -> bb49__0_1683 [label=""];
    bb19__0_1683 -> bb20__0_1683 [label="return"];
    bb19__0_1683 -> bb54__0_1683 [label="unwind"];
    bb20__0_1683 -> bb21__0_1683 [label="return"];
    bb20__0_1683 -> bb54__0_1683 [label="unwind"];
    bb21__0_1683 -> bb22__0_1683 [label="return"];
    bb21__0_1683 -> bb54__0_1683 [label="unwind"];
    bb22__0_1683 -> bb23__0_1683 [label="return"];
    bb22__0_1683 -> bb54__0_1683 [label="unwind"];
    bb23__0_1683 -> bb24__0_1683 [label="return"];
    bb23__0_1683 -> bb54__0_1683 [label="unwind"];
    bb24__0_1683 -> bb25__0_1683 [label="0"];
    bb24__0_1683 -> bb26__0_1683 [label="1"];
    bb24__0_1683 -> bb4__0_1683 [label="otherwise"];
    bb25__0_1683 -> bb28__0_1683 [label="return"];
    bb25__0_1683 -> bb54__0_1683 [label="unwind"];
    bb26__0_1683 -> bb27__0_1683 [label="return"];
    bb26__0_1683 -> bb54__0_1683 [label="unwind"];
    bb27__0_1683 -> bb48__0_1683 [label=""];
    bb28__0_1683 -> bb29__0_1683 [label="return"];
    bb28__0_1683 -> bb54__0_1683 [label="unwind"];
    bb29__0_1683 -> bb30__0_1683 [label="return"];
    bb29__0_1683 -> bb54__0_1683 [label="unwind"];
    bb30__0_1683 -> bb32__0_1683 [label="0"];
    bb30__0_1683 -> bb31__0_1683 [label="otherwise"];
    bb31__0_1683 -> bb34__0_1683 [label=""];
    bb32__0_1683 -> bb33__0_1683 [label="return"];
    bb32__0_1683 -> bb54__0_1683 [label="unwind"];
    bb33__0_1683 -> bb35__0_1683 [label="0"];
    bb33__0_1683 -> bb34__0_1683 [label="otherwise"];
    bb34__0_1683 -> bb42__0_1683 [label=""];
    bb35__0_1683 -> bb36__0_1683 [label="return"];
    bb35__0_1683 -> bb54__0_1683 [label="unwind"];
    bb36__0_1683 -> bb37__0_1683 [label="return"];
    bb36__0_1683 -> bb54__0_1683 [label="unwind"];
    bb37__0_1683 -> bb38__0_1683 [label="return"];
    bb37__0_1683 -> bb54__0_1683 [label="unwind"];
    bb38__0_1683 -> bb39__0_1683 [label="return"];
    bb38__0_1683 -> bb53__0_1683 [label="unwind"];
    bb39__0_1683 -> bb40__0_1683 [label="return"];
    bb39__0_1683 -> bb53__0_1683 [label="unwind"];
    bb40__0_1683 -> bb41__0_1683 [label="return"];
    bb40__0_1683 -> bb54__0_1683 [label="unwind"];
    bb41__0_1683 -> bb42__0_1683 [label=""];
    bb42__0_1683 -> bb43__0_1683 [label="return"];
    bb42__0_1683 -> bb54__0_1683 [label="unwind"];
    bb43__0_1683 -> bb44__0_1683 [label="0"];
    bb43__0_1683 -> bb45__0_1683 [label="1"];
    bb43__0_1683 -> bb4__0_1683 [label="otherwise"];
    bb44__0_1683 -> bb47__0_1683 [label="return"];
    bb44__0_1683 -> bb55__0_1683 [label="unwind"];
    bb45__0_1683 -> bb46__0_1683 [label="return"];
    bb45__0_1683 -> bb54__0_1683 [label="unwind"];
    bb46__0_1683 -> bb48__0_1683 [label=""];
    bb47__0_1683 -> bb52__0_1683 [label=""];
    bb48__0_1683 -> bb49__0_1683 [label=""];
    bb49__0_1683 -> bb50__0_1683 [label="return"];
    bb49__0_1683 -> bb55__0_1683 [label="unwind"];
    bb50__0_1683 -> bb51__0_1683 [label=""];
    bb51__0_1683 -> bb52__0_1683 [label=""];
    bb53__0_1683 -> bb54__0_1683 [label="return"];
    bb54__0_1683 -> bb55__0_1683 [label="return"];
    bb56__0_1683 -> bb55__0_1683 [label=""];
    bb57__0_1683 -> bb55__0_1683 [label=""];
}
