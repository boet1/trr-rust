digraph Mir_0_1697 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn instructions::user::handle_change_signed_msg_ws_delegate_status(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::user::ChangeSignedMsgWsDelegateStatus&lt;ReErased&gt;&gt;, _2: anchor_lang::prelude::Pubkey, _3: bool) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _4: ();<br align="left"/>let mut _5: bool;<br align="left"/>let _6: ();<br align="left"/>let mut _7: &amp;ReErased mut std::vec::Vec&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _8: &amp;ReErased mut state::signed_msg_user::SignedMsgWsDelegates;<br align="left"/>let mut _9: &amp;ReErased mut anchor_lang::prelude::Account&lt;ReErased, state::signed_msg_user::SignedMsgWsDelegates&gt;;<br align="left"/>let mut _10: anchor_lang::prelude::Pubkey;<br align="left"/>let _11: ();<br align="left"/>let mut _12: &amp;ReErased mut std::vec::Vec&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _13: &amp;ReErased mut state::signed_msg_user::SignedMsgWsDelegates;<br align="left"/>let mut _14: &amp;ReErased mut anchor_lang::prelude::Account&lt;ReErased, state::signed_msg_user::SignedMsgWsDelegates&gt;;<br align="left"/>let mut _15: Closure(DefId(0:1700 ~ drift[d311]::instructions::user::handle_change_signed_msg_ws_delegate_status::{closure#0}), [ReErased, ReErased, i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) anchor_lang::prelude::Pubkey,)) -&gt; bool, [Region(BrAnon)]), (&amp;ReErased anchor_lang::prelude::Pubkey,)]);<br align="left"/>let mut _16: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _17: ();<br align="left"/>let mut _18: &amp;ReErased mut instructions::user::ChangeSignedMsgWsDelegateStatus&lt;ReErased&gt;;<br align="left"/>let mut _19: &amp;ReErased mut instructions::user::ChangeSignedMsgWsDelegateStatus&lt;ReErased&gt;;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug delegate =&gt; _2;<br align="left"/>debug add =&gt; _3;<br align="left"/>>;
    bb0__0_1697 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = _3<br/></td></tr><tr><td align="left">switchInt(move _5)</td></tr></table>>];
    bb1__0_1697 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_18 = deref_copy (_1.1: &amp;mut instructions::user::ChangeSignedMsgWsDelegateStatus&lt;'_&gt;)<br/>_9 = &amp;mut ((*_18).0: anchor_lang::prelude::Account&lt;'_, state::signed_msg_user::SignedMsgWsDelegates&gt;)<br/></td></tr><tr><td align="left">_8 = &lt;anchor_lang::prelude::Account&lt;'_, SignedMsgWsDelegates&gt; as DerefMut&gt;::deref_mut(move _9)</td></tr></table>>];
    bb2__0_1697 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>_7 = &amp;mut ((*_8).0: std::vec::Vec&lt;anchor_lang::prelude::Pubkey&gt;)<br/>StorageLive(_10)<br/>_10 = _2<br/></td></tr><tr><td align="left">_6 = Vec::&lt;anchor_lang::prelude::Pubkey&gt;::push(move _7, move _10)</td></tr></table>>];
    bb3__0_1697 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_7)<br/>StorageDead(_8)<br/>StorageDead(_6)<br/>_4 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb4__0_1697 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_19 = deref_copy (_1.1: &amp;mut instructions::user::ChangeSignedMsgWsDelegateStatus&lt;'_&gt;)<br/>_14 = &amp;mut ((*_19).0: anchor_lang::prelude::Account&lt;'_, state::signed_msg_user::SignedMsgWsDelegates&gt;)<br/></td></tr><tr><td align="left">_13 = &lt;anchor_lang::prelude::Account&lt;'_, SignedMsgWsDelegates&gt; as DerefMut&gt;::deref_mut(move _14)</td></tr></table>>];
    bb5__0_1697 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>_12 = &amp;mut ((*_13).0: std::vec::Vec&lt;anchor_lang::prelude::Pubkey&gt;)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_16 = &amp;_2<br/>_15 = {closure@programs/drift/src/instructions/user.rs:369:21: 369:30} { delegate: move _16 }<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">_11 = Vec::&lt;anchor_lang::prelude::Pubkey&gt;::retain::&lt;{closure@programs/drift/src/instructions/user.rs:369:21: 369:30}&gt;(move _12, move _15)</td></tr></table>>];
    bb6__0_1697 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_12)<br/>StorageDead(_13)<br/>StorageDead(_11)<br/>_4 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_1697 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageDead(_4)<br/>StorageLive(_17)<br/>_17 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _17)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_1697 -> bb4__0_1697 [label="0"];
    bb0__0_1697 -> bb1__0_1697 [label="otherwise"];
    bb1__0_1697 -> bb2__0_1697 [label="return"];
    bb2__0_1697 -> bb3__0_1697 [label="return"];
    bb3__0_1697 -> bb7__0_1697 [label=""];
    bb4__0_1697 -> bb5__0_1697 [label="return"];
    bb5__0_1697 -> bb6__0_1697 [label="return"];
    bb6__0_1697 -> bb7__0_1697 [label=""];
}
