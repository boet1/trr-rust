digraph Mir_0_17934 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;state::spot_market::SpotFulfillmentConfigStatus as BorshDeserialize&gt;::deserialize_reader(_1: &amp;ReErased mut R/#0) -&gt; std::result::Result&lt;state::spot_market::SpotFulfillmentConfigStatus, std::io::Error&gt;<br align="left"/>let _2: u8;<br align="left"/>let mut _3: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, u8&gt;;<br align="left"/>let mut _4: std::result::Result&lt;u8, std::io::Error&gt;;<br align="left"/>let mut _5: &amp;ReErased mut R/#0;<br align="left"/>let mut _6: isize;<br align="left"/>let _7: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _8: !;<br align="left"/>let mut _9: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _10: u8;<br align="left"/>let mut _11: &amp;ReErased mut R/#0;<br align="left"/>let mut _12: u8;<br align="left"/>let mut _13: isize;<br align="left"/>let mut _14: isize;<br align="left"/>let mut _15: isize;<br align="left"/>let mut _16: isize;<br align="left"/>let mut _17: isize;<br align="left"/>debug reader =&gt; _1;<br align="left"/>debug tag =&gt; _2;<br align="left"/>debug residual =&gt; _7;<br align="left"/>debug val =&gt; _10;<br align="left"/>>;
    bb0__0_17934 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_4 = &lt;u8 as BorshDeserialize&gt;::deserialize_reader::&lt;R&gt;(move _5)</td></tr></table>>];
    bb1__0_17934 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">_3 = &lt;std::result::Result&lt;u8, std::io::Error&gt; as Try&gt;::branch(move _4)</td></tr></table>>];
    bb2__0_17934 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>_6 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _6)</td></tr></table>>];
    bb3__0_17934 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>_10 = ((_3 as Continue).0: u8)<br/>_2 = _10<br/>StorageDead(_10)<br/>_13 = discriminant(_3)<br/>StorageDead(_3)<br/>StorageLive(_11)<br/>_11 = &amp;mut (*_1)<br/>StorageLive(_12)<br/>_12 = _2<br/></td></tr><tr><td align="left">_0 = &lt;state::spot_market::SpotFulfillmentConfigStatus as EnumExt&gt;::deserialize_variant::&lt;R&gt;(move _11, move _12)</td></tr></table>>];
    bb4__0_17934 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_17934 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_7)<br/>_7 = move ((_3 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_9)<br/>_9 = move _7<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;state::spot_market::SpotFulfillmentConfigStatus, std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _9)</td></tr></table>>];
    bb6__0_17934 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_7)<br/>_15 = discriminant(_3)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_17934 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_17934 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left">return</td></tr></table>>];
    bb9__0_17934 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">9 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb10__0_17934 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">10 (cleanup)</td></tr><tr><td align="left" balign="left">_17 = discriminant(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_17934 -> bb1__0_17934 [label="return"];
    bb1__0_17934 -> bb2__0_17934 [label="return"];
    bb1__0_17934 -> bb9__0_17934 [label="unwind"];
    bb2__0_17934 -> bb3__0_17934 [label="0"];
    bb2__0_17934 -> bb5__0_17934 [label="1"];
    bb2__0_17934 -> bb4__0_17934 [label="otherwise"];
    bb3__0_17934 -> bb7__0_17934 [label="return"];
    bb5__0_17934 -> bb6__0_17934 [label="return"];
    bb5__0_17934 -> bb10__0_17934 [label="unwind"];
    bb6__0_17934 -> bb8__0_17934 [label=""];
    bb7__0_17934 -> bb8__0_17934 [label=""];
    bb10__0_17934 -> bb9__0_17934 [label=""];
}
