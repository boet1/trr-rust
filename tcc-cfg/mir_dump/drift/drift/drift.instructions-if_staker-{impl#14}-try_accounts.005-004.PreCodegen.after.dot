digraph Mir_0_8718 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;if_staker::RequestRemoveInsuranceFundStake&lt;'info&gt; as anchor_lang::Accounts&lt;'info, RequestRemoveInsuranceFundStakeBumps&gt;&gt;::try_accounts(_1: &amp;ReErased anchor_lang::prelude::Pubkey, _2: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;], _3: &amp;ReErased [u8], _4: &amp;ReErased mut instructions::if_staker::RequestRemoveInsuranceFundStakeBumps, _5: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;) -&gt; std::result::Result&lt;instructions::if_staker::RequestRemoveInsuranceFundStake&lt;ReErased&gt;, anchor_lang::error::Error&gt;<br align="left"/>let mut _6: &amp;ReErased [u8];<br align="left"/>let _7: u16;<br align="left"/>let mut _8: &lt;instructions::if_staker::RequestRemoveInsuranceFundStake&lt;'info&gt; as anchor_lang::Accounts&lt;'info, instructions::if_staker::RequestRemoveInsuranceFundStakeBumps&gt;&gt;::try_accounts::__Args;<br align="left"/>let mut _9: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::ErrorCode&gt;, &lt;instructions::if_staker::RequestRemoveInsuranceFundStake&lt;'info&gt; as anchor_lang::Accounts&lt;'info, instructions::if_staker::RequestRemoveInsuranceFundStakeBumps&gt;&gt;::try_accounts::__Args&gt;;<br align="left"/>let mut _10: std::result::Result&lt;&lt;instructions::if_staker::RequestRemoveInsuranceFundStake&lt;'info&gt; as anchor_lang::Accounts&lt;'info, instructions::if_staker::RequestRemoveInsuranceFundStakeBumps&gt;&gt;::try_accounts::__Args, anchor_lang::error::ErrorCode&gt;;<br align="left"/>let mut _11: std::result::Result&lt;&lt;instructions::if_staker::RequestRemoveInsuranceFundStake&lt;'info&gt; as anchor_lang::Accounts&lt;'info, instructions::if_staker::RequestRemoveInsuranceFundStakeBumps&gt;&gt;::try_accounts::__Args, std::io::Error&gt;;<br align="left"/>let mut _12: &amp;ReErased mut &amp;ReErased [u8];<br align="left"/>let mut _13: &amp;ReErased mut &amp;ReErased [u8];<br align="left"/>let mut _14: Closure(DefId(0:8719 ~ drift[d311]::instructions::if_staker::{impl#14}::try_accounts::{closure#0}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((std::io::Error,)) -&gt; anchor_lang::error::ErrorCode, []), ()]);<br align="left"/>let mut _15: isize;<br align="left"/>let _16: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::ErrorCode&gt;;<br align="left"/>let mut _17: !;<br align="left"/>let mut _18: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::ErrorCode&gt;;<br align="left"/>let _19: &lt;instructions::if_staker::RequestRemoveInsuranceFundStake&lt;'info&gt; as anchor_lang::Accounts&lt;'info, instructions::if_staker::RequestRemoveInsuranceFundStakeBumps&gt;&gt;::try_accounts::__Args;<br align="left"/>let _20: anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _21: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _22: std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _23: std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _24: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _25: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _26: &amp;ReErased [u8];<br align="left"/>let mut _27: &amp;ReErased mut instructions::if_staker::RequestRemoveInsuranceFundStakeBumps;<br align="left"/>let mut _28: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _29: Closure(DefId(0:8720 ~ drift[d311]::instructions::if_staker::{impl#14}::try_accounts::{closure#1}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _30: isize;<br align="left"/>let _31: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _32: !;<br align="left"/>let mut _33: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _34: anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _35: anchor_lang::prelude::AccountLoader&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let mut _36: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, anchor_lang::prelude::AccountLoader&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;&gt;;<br align="left"/>let mut _37: std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _38: std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _39: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _40: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _41: &amp;ReErased [u8];<br align="left"/>let mut _42: &amp;ReErased mut instructions::if_staker::RequestRemoveInsuranceFundStakeBumps;<br align="left"/>let mut _43: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _44: Closure(DefId(0:8721 ~ drift[d311]::instructions::if_staker::{impl#14}::try_accounts::{closure#2}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _45: isize;<br align="left"/>let _46: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _47: !;<br align="left"/>let mut _48: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _49: anchor_lang::prelude::AccountLoader&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let _50: anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _51: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;&gt;;<br align="left"/>let mut _52: std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _53: std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _54: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _55: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _56: &amp;ReErased [u8];<br align="left"/>let mut _57: &amp;ReErased mut instructions::if_staker::RequestRemoveInsuranceFundStakeBumps;<br align="left"/>let mut _58: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _59: Closure(DefId(0:8722 ~ drift[d311]::instructions::if_staker::{impl#14}::try_accounts::{closure#3}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _60: isize;<br align="left"/>let _61: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _62: !;<br align="left"/>let mut _63: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _64: anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let _65: anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _66: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, anchor_lang::prelude::Signer&lt;ReErased&gt;&gt;;<br align="left"/>let mut _67: std::result::Result&lt;anchor_lang::prelude::Signer&lt;ReErased&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _68: std::result::Result&lt;anchor_lang::prelude::Signer&lt;ReErased&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _69: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _70: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _71: &amp;ReErased [u8];<br align="left"/>let mut _72: &amp;ReErased mut instructions::if_staker::RequestRemoveInsuranceFundStakeBumps;<br align="left"/>let mut _73: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _74: Closure(DefId(0:8723 ~ drift[d311]::instructions::if_staker::{impl#14}::try_accounts::{closure#4}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _75: isize;<br align="left"/>let _76: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _77: !;<br align="left"/>let mut _78: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _79: anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let _80: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _81: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;&gt;;<br align="left"/>let mut _82: std::result::Result&lt;std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _83: std::result::Result&lt;std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _84: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _85: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _86: &amp;ReErased [u8];<br align="left"/>let mut _87: &amp;ReErased mut instructions::if_staker::RequestRemoveInsuranceFundStakeBumps;<br align="left"/>let mut _88: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _89: Closure(DefId(0:8724 ~ drift[d311]::instructions::if_staker::{impl#14}::try_accounts::{closure#5}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _90: isize;<br align="left"/>let _91: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _92: !;<br align="left"/>let mut _93: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _94: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let _95: anchor_lang::prelude::Pubkey;<br align="left"/>let _96: u8;<br align="left"/>let mut _97: (anchor_lang::prelude::Pubkey, u8);<br align="left"/>let mut _98: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let mut _99: &amp;ReErased [&amp;ReErased [u8]; 2_usize];<br align="left"/>let _100: &amp;ReErased [&amp;ReErased [u8]; 2_usize];<br align="left"/>let _101: [&amp;ReErased [u8]; 2_usize];<br align="left"/>let mut _102: &amp;ReErased [u8];<br align="left"/>let mut _103: &amp;ReErased [u8; 11_usize];<br align="left"/>let _104: &amp;ReErased [u8; 11_usize];<br align="left"/>let mut _105: &amp;ReErased [u8];<br align="left"/>let _106: &amp;ReErased [u8];<br align="left"/>let mut _107: &amp;ReErased [u8; 2_usize];<br align="left"/>let _108: [u8; 2_usize];<br align="left"/>let mut _109: u16;<br align="left"/>let mut _110: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _111: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _112: u8;<br align="left"/>let _113: ();<br align="left"/>let mut _114: bool;<br align="left"/>let mut _115: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _116: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _117: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _118: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _119: !;<br align="left"/>let mut _120: anchor_lang::error::Error;<br align="left"/>let mut _121: anchor_lang::error::Error;<br align="left"/>let mut _122: anchor_lang::error::Error;<br align="left"/>let mut _123: anchor_lang::error::ErrorCode;<br align="left"/>let mut _124: (anchor_lang::prelude::Pubkey, anchor_lang::prelude::Pubkey);<br align="left"/>let mut _125: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _126: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _127: anchor_lang::prelude::Pubkey;<br align="left"/>let _128: ();<br align="left"/>let mut _129: bool;<br align="left"/>let mut _130: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _131: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _132: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _133: !;<br align="left"/>let mut _134: anchor_lang::error::Error;<br align="left"/>let mut _135: anchor_lang::error::Error;<br align="left"/>let mut _136: anchor_lang::error::ErrorCode;<br align="left"/>let _137: ();<br align="left"/>let mut _138: bool;<br align="left"/>let mut _139: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _140: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let _141: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let mut _142: !;<br align="left"/>let mut _143: anchor_lang::error::Error;<br align="left"/>let mut _144: anchor_lang::error::Error;<br align="left"/>let mut _145: anchor_lang::error::ErrorCode;<br align="left"/>let _146: ();<br align="left"/>let _147: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _148: &amp;ReErased state::insurance_fund_stake::InsuranceFundStake;<br align="left"/>let mut _149: &amp;ReErased std::cell::Ref&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let _150: std::cell::Ref&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let mut _151: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::Ref&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;&gt;;<br align="left"/>let mut _152: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _153: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let mut _154: isize;<br align="left"/>let _155: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _156: !;<br align="left"/>let mut _157: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _158: std::cell::Ref&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let _159: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _160: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _161: bool;<br align="left"/>let mut _162: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _163: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _164: !;<br align="left"/>let mut _165: anchor_lang::error::Error;<br align="left"/>let mut _166: anchor_lang::error::Error;<br align="left"/>let mut _167: anchor_lang::error::Error;<br align="left"/>let mut _168: anchor_lang::error::ErrorCode;<br align="left"/>let mut _169: (anchor_lang::prelude::Pubkey, anchor_lang::prelude::Pubkey);<br align="left"/>let mut _170: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _171: anchor_lang::prelude::Pubkey;<br align="left"/>let _172: ();<br align="left"/>let mut _173: bool;<br align="left"/>let mut _174: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _175: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let _176: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _177: !;<br align="left"/>let mut _178: anchor_lang::error::Error;<br align="left"/>let mut _179: anchor_lang::error::Error;<br align="left"/>let mut _180: anchor_lang::error::ErrorCode;<br align="left"/>let _181: ();<br align="left"/>let _182: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _183: &amp;ReErased state::user::UserStats;<br align="left"/>let mut _184: &amp;ReErased std::cell::Ref&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let _185: std::cell::Ref&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _186: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::Ref&lt;ReErased, state::user::UserStats&gt;&gt;;<br align="left"/>let mut _187: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::user::UserStats&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _188: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _189: isize;<br align="left"/>let _190: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _191: !;<br align="left"/>let mut _192: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _193: std::cell::Ref&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let _194: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _195: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _196: bool;<br align="left"/>let mut _197: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _198: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _199: !;<br align="left"/>let mut _200: anchor_lang::error::Error;<br align="left"/>let mut _201: anchor_lang::error::Error;<br align="left"/>let mut _202: anchor_lang::error::Error;<br align="left"/>let mut _203: anchor_lang::error::ErrorCode;<br align="left"/>let mut _204: (anchor_lang::prelude::Pubkey, anchor_lang::prelude::Pubkey);<br align="left"/>let mut _205: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _206: anchor_lang::prelude::Pubkey;<br align="left"/>let _207: anchor_lang::prelude::Pubkey;<br align="left"/>let _208: u8;<br align="left"/>let mut _209: (anchor_lang::prelude::Pubkey, u8);<br align="left"/>let mut _210: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let mut _211: &amp;ReErased [&amp;ReErased [u8]; 2_usize];<br align="left"/>let _212: &amp;ReErased [&amp;ReErased [u8]; 2_usize];<br align="left"/>let _213: [&amp;ReErased [u8]; 2_usize];<br align="left"/>let mut _214: &amp;ReErased [u8];<br align="left"/>let _215: &amp;ReErased [u8];<br align="left"/>let mut _216: &amp;ReErased [u8; 20_usize];<br align="left"/>let _217: &amp;ReErased [u8; 20_usize];<br align="left"/>let mut _218: &amp;ReErased [u8];<br align="left"/>let _219: &amp;ReErased [u8];<br align="left"/>let mut _220: &amp;ReErased [u8; 2_usize];<br align="left"/>let _221: [u8; 2_usize];<br align="left"/>let mut _222: u16;<br align="left"/>let mut _223: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _224: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _225: u8;<br align="left"/>let _226: ();<br align="left"/>let mut _227: bool;<br align="left"/>let mut _228: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _229: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _230: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _231: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _232: !;<br align="left"/>let mut _233: anchor_lang::error::Error;<br align="left"/>let mut _234: anchor_lang::error::Error;<br align="left"/>let mut _235: anchor_lang::error::Error;<br align="left"/>let mut _236: anchor_lang::error::ErrorCode;<br align="left"/>let mut _237: (anchor_lang::prelude::Pubkey, anchor_lang::prelude::Pubkey);<br align="left"/>let mut _238: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _239: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _240: anchor_lang::prelude::Pubkey;<br align="left"/>let _241: ();<br align="left"/>let mut _242: bool;<br align="left"/>let mut _243: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _244: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let _245: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _246: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _247: !;<br align="left"/>let mut _248: anchor_lang::error::Error;<br align="left"/>let mut _249: anchor_lang::error::Error;<br align="left"/>let mut _250: anchor_lang::error::ErrorCode;<br align="left"/>let mut _251: instructions::if_staker::RequestRemoveInsuranceFundStake&lt;ReErased&gt;;<br align="left"/>let mut _252: anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _253: anchor_lang::prelude::AccountLoader&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let mut _254: anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _255: anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _256: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _257: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _258: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _259: bool;<br align="left"/>let mut _260: bool;<br align="left"/>let mut _261: bool;<br align="left"/>let mut _262: bool;<br align="left"/>let mut _263: bool;<br align="left"/>let mut _264: bool;<br align="left"/>let mut _265: isize;<br align="left"/>let mut _266: isize;<br align="left"/>let mut _267: isize;<br align="left"/>let mut _268: isize;<br align="left"/>let mut _269: isize;<br align="left"/>let mut _270: isize;<br align="left"/>let mut _271: isize;<br align="left"/>let mut _272: isize;<br align="left"/>let mut _273: isize;<br align="left"/>let mut _274: isize;<br align="left"/>let mut _275: isize;<br align="left"/>let mut _276: isize;<br align="left"/>let mut _277: isize;<br align="left"/>let mut _278: isize;<br align="left"/>let mut _279: isize;<br align="left"/>let mut _280: isize;<br align="left"/>let mut _281: isize;<br align="left"/>let mut _282: isize;<br align="left"/>let mut _283: isize;<br align="left"/>let mut _284: isize;<br align="left"/>let mut _285: isize;<br align="left"/>let mut _286: isize;<br align="left"/>let mut _287: isize;<br align="left"/>let mut _288: isize;<br align="left"/>let mut _289: isize;<br align="left"/>let mut _290: isize;<br align="left"/>let mut _291: isize;<br align="left"/>let mut _292: isize;<br align="left"/>let mut _293: isize;<br align="left"/>let mut _294: isize;<br align="left"/>let mut _295: isize;<br align="left"/>let mut _296: isize;<br align="left"/>let mut _297: isize;<br align="left"/>let mut _298: isize;<br align="left"/>let mut _299: isize;<br align="left"/>let mut _300: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _301: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>debug __program_id =&gt; _1;<br align="left"/>debug __accounts =&gt; _2;<br align="left"/>debug __ix_data =&gt; _3;<br align="left"/>debug __bumps =&gt; _4;<br align="left"/>debug __reallocs =&gt; _5;<br align="left"/>debug __ix_data =&gt; _6;<br align="left"/>debug market_index =&gt; _7;<br align="left"/>debug residual =&gt; _16;<br align="left"/>debug val =&gt; _19;<br align="left"/>debug spot_market =&gt; _20;<br align="left"/>debug residual =&gt; _31;<br align="left"/>debug val =&gt; _34;<br align="left"/>debug insurance_fund_stake =&gt; _35;<br align="left"/>debug residual =&gt; _46;<br align="left"/>debug val =&gt; _49;<br align="left"/>debug user_stats =&gt; _50;<br align="left"/>debug residual =&gt; _61;<br align="left"/>debug val =&gt; _64;<br align="left"/>debug authority =&gt; _65;<br align="left"/>debug residual =&gt; _76;<br align="left"/>debug val =&gt; _79;<br align="left"/>debug insurance_fund_vault =&gt; _80;<br align="left"/>debug residual =&gt; _91;<br align="left"/>debug val =&gt; _94;<br align="left"/>debug __pda_address =&gt; _95;<br align="left"/>debug __bump =&gt; _96;<br align="left"/>debug my_key =&gt; _147;<br align="left"/>debug residual =&gt; _155;<br align="left"/>debug val =&gt; _158;<br align="left"/>debug target_key =&gt; _159;<br align="left"/>debug my_key =&gt; _182;<br align="left"/>debug residual =&gt; _190;<br align="left"/>debug val =&gt; _193;<br align="left"/>debug target_key =&gt; _194;<br align="left"/>debug __pda_address =&gt; _207;<br align="left"/>debug __bump =&gt; _208;<br align="left"/>>;
    bb0__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_264 = const false<br/>_259 = const false<br/>_263 = const false<br/>_262 = const false<br/>_261 = const false<br/>_260 = const false<br/>StorageLive(_6)<br/>_6 = _3<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>_13 = &amp;mut _6<br/>_12 = &amp;mut (*_13)<br/></td></tr><tr><td align="left">_11 = &lt;&lt;if_staker::RequestRemoveInsuranceFundStake&lt;'info&gt; as anchor_lang::Accounts&lt;'info, RequestRemoveInsuranceFundStakeBumps&gt;&gt;::try_accounts::__Args as BorshDeserialize&gt;::deserialize(move _12)</td></tr></table>>];
    bb1__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageLive(_14)<br/>_14 = {closure@programs/drift/src/instructions/if_staker.rs:906:10: 906:18}<br/></td></tr><tr><td align="left">_10 = std::result::Result::&lt;&lt;if_staker::RequestRemoveInsuranceFundStake&lt;'info&gt; as anchor_lang::Accounts&lt;'info, RequestRemoveInsuranceFundStakeBumps&gt;&gt;::try_accounts::__Args, std::io::Error&gt;::map_err::&lt;anchor_lang::error::ErrorCode, {closure@programs/drift/src/instructions/if_staker.rs:906:10: 906:18}&gt;(move _11, move _14)</td></tr></table>>];
    bb2__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">_9 = &lt;std::result::Result&lt;&lt;if_staker::RequestRemoveInsuranceFundStake&lt;'info&gt; as anchor_lang::Accounts&lt;'info, RequestRemoveInsuranceFundStakeBumps&gt;&gt;::try_accounts::__Args, anchor_lang::error::ErrorCode&gt; as Try&gt;::branch(move _10)</td></tr></table>>];
    bb3__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>_15 = discriminant(_9)<br/></td></tr><tr><td align="left">switchInt(move _15)</td></tr></table>>];
    bb4__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_19)<br/>_19 = move ((_9 as Continue).0: &lt;instructions::if_staker::RequestRemoveInsuranceFundStake&lt;'info&gt; as anchor_lang::Accounts&lt;'info, instructions::if_staker::RequestRemoveInsuranceFundStakeBumps&gt;&gt;::try_accounts::__Args)<br/>_8 = move _19<br/>StorageDead(_19)<br/>StorageLive(_7)<br/>_7 = (_8.0: u16)<br/>StorageDead(_13)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_24 = &amp;(*_1)<br/>StorageLive(_25)<br/>_25 = &amp;mut (*_2)<br/>StorageLive(_26)<br/>_26 = &amp;(*_6)<br/>StorageLive(_27)<br/>_27 = &amp;mut (*_4)<br/>StorageLive(_28)<br/>_28 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_23 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, SpotMarket&gt; as anchor_lang::Accounts&lt;'_, RequestRemoveInsuranceFundStakeBumps&gt;&gt;::try_accounts(move _24, move _25, move _26, move _27, move _28)</td></tr></table>>];
    bb5__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_16)<br/>_16 = ((_9 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::ErrorCode&gt;)<br/>StorageLive(_18)<br/>_18 = _16<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;if_staker::RequestRemoveInsuranceFundStake&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::ErrorCode&gt;&gt;&gt;::from_residual(move _18)</td></tr></table>>];
    bb7__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_16)<br/>StorageDead(_13)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/>StorageLive(_29)<br/>_29 = {closure@programs/drift/src/instructions/if_staker.rs:906:10: 906:18}<br/></td></tr><tr><td align="left">_22 = std::result::Result::&lt;anchor_lang::prelude::AccountLoader&lt;'_, SpotMarket&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/if_staker.rs:906:10: 906:18}&gt;(move _23, move _29)</td></tr></table>>];
    bb9__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">_21 = &lt;std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;'_, SpotMarket&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _22)</td></tr></table>>];
    bb10__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>_30 = discriminant(_21)<br/></td></tr><tr><td align="left">switchInt(move _30)</td></tr></table>>];
    bb11__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_34)<br/>_34 = move ((_21 as Continue).0: anchor_lang::prelude::AccountLoader&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_20 = move _34<br/>StorageDead(_34)<br/>_265 = discriminant(_21)<br/>StorageDead(_21)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>_39 = &amp;(*_1)<br/>StorageLive(_40)<br/>_40 = &amp;mut (*_2)<br/>StorageLive(_41)<br/>_41 = &amp;(*_6)<br/>StorageLive(_42)<br/>_42 = &amp;mut (*_4)<br/>StorageLive(_43)<br/>_43 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_38 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, InsuranceFundStake&gt; as anchor_lang::Accounts&lt;'_, RequestRemoveInsuranceFundStakeBumps&gt;&gt;::try_accounts(move _39, move _40, move _41, move _42, move _43)</td></tr></table>>];
    bb12__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_31)<br/>_31 = move ((_21 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_33)<br/>_33 = move _31<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;if_staker::RequestRemoveInsuranceFundStake&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _33)</td></tr></table>>];
    bb13__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_31)<br/>_291 = discriminant(_21)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_42)<br/>StorageDead(_41)<br/>StorageDead(_40)<br/>StorageDead(_39)<br/>StorageLive(_44)<br/>_44 = {closure@programs/drift/src/instructions/if_staker.rs:906:10: 906:18}<br/></td></tr><tr><td align="left">_37 = std::result::Result::&lt;anchor_lang::prelude::AccountLoader&lt;'_, InsuranceFundStake&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/if_staker.rs:906:10: 906:18}&gt;(move _38, move _44)</td></tr></table>>];
    bb15__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">_36 = &lt;std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;'_, InsuranceFundStake&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _37)</td></tr></table>>];
    bb16__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>_45 = discriminant(_36)<br/></td></tr><tr><td align="left">switchInt(move _45)</td></tr></table>>];
    bb17__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_49)<br/>_49 = move ((_36 as Continue).0: anchor_lang::prelude::AccountLoader&lt;'_, state::insurance_fund_stake::InsuranceFundStake&gt;)<br/>_35 = move _49<br/>StorageDead(_49)<br/>_267 = discriminant(_36)<br/>StorageDead(_36)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>_54 = &amp;(*_1)<br/>StorageLive(_55)<br/>_55 = &amp;mut (*_2)<br/>StorageLive(_56)<br/>_56 = &amp;(*_6)<br/>StorageLive(_57)<br/>_57 = &amp;mut (*_4)<br/>StorageLive(_58)<br/>_58 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_53 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, UserStats&gt; as anchor_lang::Accounts&lt;'_, RequestRemoveInsuranceFundStakeBumps&gt;&gt;::try_accounts(move _54, move _55, move _56, move _57, move _58)</td></tr></table>>];
    bb18__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_46)<br/>_46 = move ((_36 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_48)<br/>_48 = move _46<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;if_staker::RequestRemoveInsuranceFundStake&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _48)</td></tr></table>>];
    bb19__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageDead(_46)<br/>_289 = discriminant(_36)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageDead(_57)<br/>StorageDead(_56)<br/>StorageDead(_55)<br/>StorageDead(_54)<br/>StorageLive(_59)<br/>_59 = {closure@programs/drift/src/instructions/if_staker.rs:906:10: 906:18}<br/></td></tr><tr><td align="left">_52 = std::result::Result::&lt;anchor_lang::prelude::AccountLoader&lt;'_, UserStats&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/if_staker.rs:906:10: 906:18}&gt;(move _53, move _59)</td></tr></table>>];
    bb21__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">_51 = &lt;std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;'_, UserStats&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _52)</td></tr></table>>];
    bb22__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>_60 = discriminant(_51)<br/></td></tr><tr><td align="left">switchInt(move _60)</td></tr></table>>];
    bb23__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_64)<br/>_64 = move ((_51 as Continue).0: anchor_lang::prelude::AccountLoader&lt;'_, state::user::UserStats&gt;)<br/>_50 = move _64<br/>StorageDead(_64)<br/>_269 = discriminant(_51)<br/>StorageDead(_51)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>_69 = &amp;(*_1)<br/>StorageLive(_70)<br/>_70 = &amp;mut (*_2)<br/>StorageLive(_71)<br/>_71 = &amp;(*_6)<br/>StorageLive(_72)<br/>_72 = &amp;mut (*_4)<br/>StorageLive(_73)<br/>_73 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_68 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::Accounts&lt;'_, RequestRemoveInsuranceFundStakeBumps&gt;&gt;::try_accounts(move _69, move _70, move _71, move _72, move _73)</td></tr></table>>];
    bb24__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_61)<br/>_61 = move ((_51 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_63)<br/>_63 = move _61<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;if_staker::RequestRemoveInsuranceFundStake&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _63)</td></tr></table>>];
    bb25__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_61)<br/>_287 = discriminant(_51)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>StorageDead(_72)<br/>StorageDead(_71)<br/>StorageDead(_70)<br/>StorageDead(_69)<br/>StorageLive(_74)<br/>_74 = {closure@programs/drift/src/instructions/if_staker.rs:906:10: 906:18}<br/></td></tr><tr><td align="left">_67 = std::result::Result::&lt;anchor_lang::prelude::Signer&lt;'_&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/if_staker.rs:906:10: 906:18}&gt;(move _68, move _74)</td></tr></table>>];
    bb27__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageDead(_68)<br/></td></tr><tr><td align="left">_66 = &lt;std::result::Result&lt;anchor_lang::prelude::Signer&lt;'_&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _67)</td></tr></table>>];
    bb28__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>_75 = discriminant(_66)<br/></td></tr><tr><td align="left">switchInt(move _75)</td></tr></table>>];
    bb29__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_79)<br/>_79 = move ((_66 as Continue).0: anchor_lang::prelude::Signer&lt;'_&gt;)<br/>_65 = move _79<br/>StorageDead(_79)<br/>_271 = discriminant(_66)<br/>StorageDead(_66)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>_84 = &amp;(*_1)<br/>StorageLive(_85)<br/>_85 = &amp;mut (*_2)<br/>StorageLive(_86)<br/>_86 = &amp;(*_6)<br/>StorageLive(_87)<br/>_87 = &amp;mut (*_4)<br/>StorageLive(_88)<br/>_88 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_83 = &lt;Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt; as anchor_lang::Accounts&lt;'_, RequestRemoveInsuranceFundStakeBumps&gt;&gt;::try_accounts(move _84, move _85, move _86, move _87, move _88)</td></tr></table>>];
    bb30__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_76)<br/>_76 = move ((_66 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_78)<br/>_78 = move _76<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;if_staker::RequestRemoveInsuranceFundStake&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _78)</td></tr></table>>];
    bb31__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>StorageDead(_76)<br/>_285 = discriminant(_66)<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>StorageDead(_87)<br/>StorageDead(_86)<br/>StorageDead(_85)<br/>StorageDead(_84)<br/>StorageLive(_89)<br/>_89 = {closure@programs/drift/src/instructions/if_staker.rs:906:10: 906:18}<br/></td></tr><tr><td align="left">_82 = std::result::Result::&lt;Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/if_staker.rs:906:10: 906:18}&gt;(move _83, move _89)</td></tr></table>>];
    bb33__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>StorageDead(_83)<br/></td></tr><tr><td align="left">_81 = &lt;std::result::Result&lt;Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _82)</td></tr></table>>];
    bb34__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>_90 = discriminant(_81)<br/></td></tr><tr><td align="left">switchInt(move _90)</td></tr></table>>];
    bb35__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_94)<br/>_94 = move ((_81 as Continue).0: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_80 = move _94<br/>StorageDead(_94)<br/>_273 = discriminant(_81)<br/>StorageDead(_81)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>_104 = const b&quot;spot_market&quot;<br/>_103 = &amp;(*_104)<br/>_102 = move _103 as &amp;[u8] (PointerCoercion(Unsize))<br/>StorageDead(_103)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>_109 = _7<br/></td></tr><tr><td align="left">_108 = core::num::&lt;impl u16&gt;::to_le_bytes(move _109)</td></tr></table>>];
    bb36__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageLive(_91)<br/>_91 = move ((_81 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_93)<br/>_93 = move _91<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;if_staker::RequestRemoveInsuranceFundStake&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _93)</td></tr></table>>];
    bb37__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageDead(_91)<br/>_283 = discriminant(_81)<br/>StorageDead(_81)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">_107 = &amp;_108<br/>StorageDead(_109)<br/></td></tr><tr><td align="left">_106 = &lt;[u8; 2] as AsRef&lt;[u8]&gt;&gt;::as_ref(move _107)</td></tr></table>>];
    bb39__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">_105 = &amp;(*_106)<br/>StorageDead(_107)<br/>_101 = [move _102, move _105]<br/>StorageDead(_105)<br/>StorageDead(_102)<br/>_100 = &amp;_101<br/>_99 = &amp;(*_100)<br/>_98 = move _99 as &amp;[&amp;[u8]] (PointerCoercion(Unsize))<br/>StorageDead(_99)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>_111 = &amp;_1<br/>_257 = deref_copy (*_111)<br/>_110 = &amp;(*_257)<br/></td></tr><tr><td align="left">_97 = anchor_lang::prelude::Pubkey::find_program_address(move _98, move _110)</td></tr></table>>];
    bb40__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/>StorageDead(_98)<br/>StorageLive(_95)<br/>_95 = (_97.0: anchor_lang::prelude::Pubkey)<br/>StorageLive(_96)<br/>_96 = (_97.1: u8)<br/>StorageDead(_111)<br/>StorageDead(_108)<br/>StorageDead(_106)<br/>StorageDead(_104)<br/>StorageDead(_101)<br/>StorageDead(_100)<br/>StorageDead(_97)<br/>StorageLive(_112)<br/>_112 = _96<br/>((*_4).0: u8) = move _112<br/>StorageDead(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>_117 = &amp;_20<br/></td></tr><tr><td align="left">_116 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, SpotMarket&gt; as anchor_lang::Key&gt;::key(move _117)</td></tr></table>>];
    bb41__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">_115 = &amp;_116<br/>StorageDead(_117)<br/>StorageLive(_118)<br/>_118 = &amp;_95<br/></td></tr><tr><td align="left">_114 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _115, move _118)</td></tr></table>>];
    bb42__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left">switchInt(move _114)</td></tr></table>>];
    bb43__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>StorageDead(_116)<br/>StorageDead(_115)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>_123 = ConstraintSeeds<br/></td></tr><tr><td align="left">_122 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _123)</td></tr></table>>];
    bb44__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/></td></tr><tr><td align="left">_121 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _122, const &quot;spot_market&quot;)</td></tr></table>>];
    bb45__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">_264 = const true<br/>StorageDead(_122)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>_126 = &amp;_20<br/></td></tr><tr><td align="left">_125 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, SpotMarket&gt; as anchor_lang::Key&gt;::key(move _126)</td></tr></table>>];
    bb46__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/>StorageLive(_127)<br/>_127 = _95<br/>_124 = (move _125, move _127)<br/>StorageDead(_127)<br/>StorageDead(_125)<br/>_264 = const false<br/></td></tr><tr><td align="left">_120 = anchor_lang::error::Error::with_pubkeys(move _121, move _124)</td></tr></table>>];
    bb47__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_124)<br/>_264 = const false<br/>StorageDead(_121)<br/>_0 = std::result::Result::&lt;if_staker::RequestRemoveInsuranceFundStake&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _120)<br/>StorageDead(_120)<br/>StorageDead(_114)<br/>StorageDead(_113)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>StorageDead(_116)<br/>StorageDead(_115)<br/>_113 = const ()<br/>StorageDead(_114)<br/>StorageDead(_113)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>_132 = &amp;_20<br/>_131 = &amp;(*_132)<br/></td></tr><tr><td align="left">_130 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, SpotMarket&gt; as AsRef&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;::as_ref(move _131)</td></tr></table>>];
    bb49__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_131)<br/>_129 = ((*_130).6: bool)<br/></td></tr><tr><td align="left">switchInt(move _129)</td></tr></table>>];
    bb50__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_132)<br/>StorageDead(_130)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>_136 = ConstraintMut<br/></td></tr><tr><td align="left">_135 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _136)</td></tr></table>>];
    bb51__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_136)<br/></td></tr><tr><td align="left">_134 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _135, const &quot;spot_market&quot;)</td></tr></table>>];
    bb52__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_135)<br/>_0 = std::result::Result::&lt;if_staker::RequestRemoveInsuranceFundStake&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _134)<br/>StorageDead(_134)<br/>StorageDead(_129)<br/>StorageDead(_128)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_132)<br/>StorageDead(_130)<br/>_128 = const ()<br/>StorageDead(_129)<br/>StorageDead(_128)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>_141 = &amp;_35<br/>_140 = &amp;(*_141)<br/></td></tr><tr><td align="left">_139 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, InsuranceFundStake&gt; as AsRef&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;::as_ref(move _140)</td></tr></table>>];
    bb54__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_140)<br/>_138 = ((*_139).6: bool)<br/></td></tr><tr><td align="left">switchInt(move _138)</td></tr></table>>];
    bb55__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_141)<br/>StorageDead(_139)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>_145 = ConstraintMut<br/></td></tr><tr><td align="left">_144 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _145)</td></tr></table>>];
    bb56__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_145)<br/></td></tr><tr><td align="left">_143 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _144, const &quot;insurance_fund_stake&quot;)</td></tr></table>>];
    bb57__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_144)<br/>_0 = std::result::Result::&lt;if_staker::RequestRemoveInsuranceFundStake&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _143)<br/>StorageDead(_143)<br/>StorageDead(_138)<br/>StorageDead(_137)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb58__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_141)<br/>StorageDead(_139)<br/>_137 = const ()<br/>StorageDead(_138)<br/>StorageDead(_137)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>StorageLive(_152)<br/>StorageLive(_153)<br/>_153 = &amp;_35<br/></td></tr><tr><td align="left">_152 = anchor_lang::prelude::AccountLoader::&lt;'_, InsuranceFundStake&gt;::load(move _153)</td></tr></table>>];
    bb59__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_153)<br/></td></tr><tr><td align="left">_151 = &lt;std::result::Result&lt;Ref&lt;'_, InsuranceFundStake&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _152)</td></tr></table>>];
    bb60__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">_262 = const true<br/>_263 = const true<br/>StorageDead(_152)<br/>_154 = discriminant(_151)<br/></td></tr><tr><td align="left">switchInt(move _154)</td></tr></table>>];
    bb61__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageLive(_158)<br/>_158 = move ((_151 as Continue).0: std::cell::Ref&lt;'_, state::insurance_fund_stake::InsuranceFundStake&gt;)<br/>_150 = move _158<br/>StorageDead(_158)<br/>_149 = &amp;_150<br/></td></tr><tr><td align="left">_148 = &lt;Ref&lt;'_, InsuranceFundStake&gt; as Deref&gt;::deref(move _149)</td></tr></table>>];
    bb62__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageLive(_155)<br/>_155 = move ((_151 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_157)<br/>_157 = move _155<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;if_staker::RequestRemoveInsuranceFundStake&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _157)</td></tr></table>>];
    bb63__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_157)<br/>StorageDead(_155)<br/>StorageDead(_149)<br/>_281 = discriminant(_151)<br/>_262 = const false<br/>_263 = const false<br/>StorageDead(_151)<br/>StorageDead(_150)<br/>StorageDead(_148)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb64__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_149)<br/>_147 = ((*_148).0: anchor_lang::prelude::Pubkey)<br/></td></tr><tr><td align="left">drop(_150)</td></tr></table>>];
    bb65__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_160)<br/>StorageLive(_161)<br/>StorageLive(_162)<br/>_162 = &amp;_147<br/>StorageLive(_163)<br/>_163 = &amp;_159<br/></td></tr><tr><td align="left">_161 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _162, move _163)</td></tr></table>>];
    bb66__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left">switchInt(move _161)</td></tr></table>>];
    bb67__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_163)<br/>StorageDead(_162)<br/>StorageLive(_165)<br/>StorageLive(_166)<br/>StorageLive(_167)<br/>StorageLive(_168)<br/>_168 = ConstraintHasOne<br/></td></tr><tr><td align="left">_167 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _168)</td></tr></table>>];
    bb68__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_168)<br/></td></tr><tr><td align="left">_166 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _167, const &quot;insurance_fund_stake&quot;)</td></tr></table>>];
    bb69__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_167)<br/>StorageLive(_169)<br/>StorageLive(_170)<br/>_170 = _147<br/>StorageLive(_171)<br/>_171 = _159<br/>_169 = (move _170, move _171)<br/>StorageDead(_171)<br/>StorageDead(_170)<br/></td></tr><tr><td align="left">_165 = anchor_lang::error::Error::with_pubkeys(move _166, move _169)</td></tr></table>>];
    bb70__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_169)<br/>StorageDead(_166)<br/>_0 = std::result::Result::&lt;if_staker::RequestRemoveInsuranceFundStake&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _165)<br/>StorageDead(_165)<br/>StorageDead(_161)<br/>StorageDead(_159)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb71__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_163)<br/>StorageDead(_162)<br/>_146 = const ()<br/>StorageDead(_161)<br/>StorageDead(_159)<br/>StorageDead(_147)<br/>StorageDead(_146)<br/>StorageLive(_172)<br/>StorageLive(_173)<br/>StorageLive(_174)<br/>StorageLive(_175)<br/>StorageLive(_176)<br/>_176 = &amp;_50<br/>_175 = &amp;(*_176)<br/></td></tr><tr><td align="left">_174 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, UserStats&gt; as AsRef&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;::as_ref(move _175)</td></tr></table>>];
    bb72__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_175)<br/>_173 = ((*_174).6: bool)<br/></td></tr><tr><td align="left">switchInt(move _173)</td></tr></table>>];
    bb73__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_176)<br/>StorageDead(_174)<br/>StorageLive(_178)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>_180 = ConstraintMut<br/></td></tr><tr><td align="left">_179 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _180)</td></tr></table>>];
    bb74__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_180)<br/></td></tr><tr><td align="left">_178 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _179, const &quot;user_stats&quot;)</td></tr></table>>];
    bb75__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_179)<br/>_0 = std::result::Result::&lt;if_staker::RequestRemoveInsuranceFundStake&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _178)<br/>StorageDead(_178)<br/>StorageDead(_173)<br/>StorageDead(_172)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb76__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_176)<br/>StorageDead(_174)<br/>_172 = const ()<br/>StorageDead(_173)<br/>StorageDead(_172)<br/>StorageLive(_181)<br/>StorageLive(_182)<br/>StorageLive(_183)<br/>StorageLive(_184)<br/>StorageLive(_185)<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>_188 = &amp;_50<br/></td></tr><tr><td align="left">_187 = anchor_lang::prelude::AccountLoader::&lt;'_, UserStats&gt;::load(move _188)</td></tr></table>>];
    bb77__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_188)<br/></td></tr><tr><td align="left">_186 = &lt;std::result::Result&lt;Ref&lt;'_, UserStats&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _187)</td></tr></table>>];
    bb78__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">_260 = const true<br/>_261 = const true<br/>StorageDead(_187)<br/>_189 = discriminant(_186)<br/></td></tr><tr><td align="left">switchInt(move _189)</td></tr></table>>];
    bb79__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageLive(_193)<br/>_193 = move ((_186 as Continue).0: std::cell::Ref&lt;'_, state::user::UserStats&gt;)<br/>_185 = move _193<br/>StorageDead(_193)<br/>_184 = &amp;_185<br/></td></tr><tr><td align="left">_183 = &lt;Ref&lt;'_, UserStats&gt; as Deref&gt;::deref(move _184)</td></tr></table>>];
    bb80__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageLive(_190)<br/>_190 = move ((_186 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_192)<br/>_192 = move _190<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;if_staker::RequestRemoveInsuranceFundStake&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _192)</td></tr></table>>];
    bb81__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_192)<br/>StorageDead(_190)<br/>StorageDead(_184)<br/>_279 = discriminant(_186)<br/>_260 = const false<br/>_261 = const false<br/>StorageDead(_186)<br/>StorageDead(_185)<br/>StorageDead(_183)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb82__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_184)<br/>_182 = ((*_183).0: anchor_lang::prelude::Pubkey)<br/></td></tr><tr><td align="left">drop(_185)</td></tr></table>>];
    bb83__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_195)<br/>StorageLive(_196)<br/>StorageLive(_197)<br/>_197 = &amp;_182<br/>StorageLive(_198)<br/>_198 = &amp;_194<br/></td></tr><tr><td align="left">_196 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _197, move _198)</td></tr></table>>];
    bb84__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left">switchInt(move _196)</td></tr></table>>];
    bb85__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_198)<br/>StorageDead(_197)<br/>StorageLive(_200)<br/>StorageLive(_201)<br/>StorageLive(_202)<br/>StorageLive(_203)<br/>_203 = ConstraintHasOne<br/></td></tr><tr><td align="left">_202 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _203)</td></tr></table>>];
    bb86__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_203)<br/></td></tr><tr><td align="left">_201 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _202, const &quot;user_stats&quot;)</td></tr></table>>];
    bb87__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_202)<br/>StorageLive(_204)<br/>StorageLive(_205)<br/>_205 = _182<br/>StorageLive(_206)<br/>_206 = _194<br/>_204 = (move _205, move _206)<br/>StorageDead(_206)<br/>StorageDead(_205)<br/></td></tr><tr><td align="left">_200 = anchor_lang::error::Error::with_pubkeys(move _201, move _204)</td></tr></table>>];
    bb88__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_204)<br/>StorageDead(_201)<br/>_0 = std::result::Result::&lt;if_staker::RequestRemoveInsuranceFundStake&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _200)<br/>StorageDead(_200)<br/>StorageDead(_196)<br/>StorageDead(_194)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb89__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_198)<br/>StorageDead(_197)<br/>_181 = const ()<br/>StorageDead(_196)<br/>StorageDead(_194)<br/>StorageDead(_182)<br/>StorageDead(_181)<br/>StorageLive(_209)<br/>StorageLive(_210)<br/>StorageLive(_211)<br/>StorageLive(_212)<br/>StorageLive(_213)<br/>StorageLive(_214)<br/>StorageLive(_215)<br/>StorageLive(_216)<br/>StorageLive(_217)<br/>_217 = const b&quot;insurance_fund_vault&quot;<br/>_216 = &amp;(*_217)<br/></td></tr><tr><td align="left">_215 = &lt;[u8; 20] as AsRef&lt;[u8]&gt;&gt;::as_ref(move _216)</td></tr></table>>];
    bb90__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">_214 = &amp;(*_215)<br/>StorageDead(_216)<br/>StorageLive(_218)<br/>StorageLive(_219)<br/>StorageLive(_220)<br/>StorageLive(_221)<br/>StorageLive(_222)<br/>_222 = _7<br/></td></tr><tr><td align="left">_221 = core::num::&lt;impl u16&gt;::to_le_bytes(move _222)</td></tr></table>>];
    bb91__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">_220 = &amp;_221<br/>StorageDead(_222)<br/></td></tr><tr><td align="left">_219 = &lt;[u8; 2] as AsRef&lt;[u8]&gt;&gt;::as_ref(move _220)</td></tr></table>>];
    bb92__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">_218 = &amp;(*_219)<br/>StorageDead(_220)<br/>_213 = [move _214, move _218]<br/>StorageDead(_218)<br/>StorageDead(_214)<br/>_212 = &amp;_213<br/>_211 = &amp;(*_212)<br/>_210 = move _211 as &amp;[&amp;[u8]] (PointerCoercion(Unsize))<br/>StorageDead(_211)<br/>StorageLive(_223)<br/>StorageLive(_224)<br/>_224 = &amp;_1<br/>_258 = deref_copy (*_224)<br/>_223 = &amp;(*_258)<br/></td></tr><tr><td align="left">_209 = anchor_lang::prelude::Pubkey::find_program_address(move _210, move _223)</td></tr></table>>];
    bb93__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_223)<br/>StorageDead(_210)<br/>StorageLive(_207)<br/>_207 = (_209.0: anchor_lang::prelude::Pubkey)<br/>StorageLive(_208)<br/>_208 = (_209.1: u8)<br/>StorageDead(_224)<br/>StorageDead(_221)<br/>StorageDead(_219)<br/>StorageDead(_217)<br/>StorageDead(_215)<br/>StorageDead(_213)<br/>StorageDead(_212)<br/>StorageDead(_209)<br/>StorageLive(_225)<br/>_225 = _208<br/>((*_4).1: u8) = move _225<br/>StorageDead(_225)<br/>StorageLive(_226)<br/>StorageLive(_227)<br/>StorageLive(_228)<br/>StorageLive(_229)<br/>StorageLive(_230)<br/>_300 = (((_80.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_230 = &amp;(*_300)<br/></td></tr><tr><td align="left">_229 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as anchor_lang::Key&gt;::key(move _230)</td></tr></table>>];
    bb94__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">_228 = &amp;_229<br/>StorageDead(_230)<br/>StorageLive(_231)<br/>_231 = &amp;_207<br/></td></tr><tr><td align="left">_227 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _228, move _231)</td></tr></table>>];
    bb95__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left">switchInt(move _227)</td></tr></table>>];
    bb96__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_231)<br/>StorageDead(_229)<br/>StorageDead(_228)<br/>StorageLive(_233)<br/>StorageLive(_234)<br/>StorageLive(_235)<br/>StorageLive(_236)<br/>_236 = ConstraintSeeds<br/></td></tr><tr><td align="left">_235 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _236)</td></tr></table>>];
    bb97__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_236)<br/></td></tr><tr><td align="left">_234 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _235, const &quot;insurance_fund_vault&quot;)</td></tr></table>>];
    bb98__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">_259 = const true<br/>StorageDead(_235)<br/>StorageLive(_237)<br/>StorageLive(_238)<br/>StorageLive(_239)<br/>_301 = (((_80.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_239 = &amp;(*_301)<br/></td></tr><tr><td align="left">_238 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as anchor_lang::Key&gt;::key(move _239)</td></tr></table>>];
    bb99__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageDead(_239)<br/>StorageLive(_240)<br/>_240 = _207<br/>_237 = (move _238, move _240)<br/>StorageDead(_240)<br/>StorageDead(_238)<br/>_259 = const false<br/></td></tr><tr><td align="left">_233 = anchor_lang::error::Error::with_pubkeys(move _234, move _237)</td></tr></table>>];
    bb100__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_237)<br/>_259 = const false<br/>StorageDead(_234)<br/>_0 = std::result::Result::&lt;if_staker::RequestRemoveInsuranceFundStake&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _233)<br/>StorageDead(_233)<br/>StorageDead(_227)<br/>StorageDead(_226)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb101__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_231)<br/>StorageDead(_229)<br/>StorageDead(_228)<br/>_226 = const ()<br/>StorageDead(_227)<br/>StorageDead(_226)<br/>StorageLive(_241)<br/>StorageLive(_242)<br/>StorageLive(_243)<br/>StorageLive(_244)<br/>StorageLive(_245)<br/>StorageLive(_246)<br/>_246 = &amp;_80<br/></td></tr><tr><td align="left">_245 = &lt;Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt; as AsRef&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;&gt;::as_ref(move _246)</td></tr></table>>];
    bb102__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">_244 = &amp;(*_245)<br/>StorageDead(_246)<br/></td></tr><tr><td align="left">_243 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as AsRef&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;::as_ref(move _244)</td></tr></table>>];
    bb103__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_244)<br/>_242 = ((*_243).6: bool)<br/></td></tr><tr><td align="left">switchInt(move _242)</td></tr></table>>];
    bb104__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_245)<br/>StorageDead(_243)<br/>StorageLive(_248)<br/>StorageLive(_249)<br/>StorageLive(_250)<br/>_250 = ConstraintMut<br/></td></tr><tr><td align="left">_249 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _250)</td></tr></table>>];
    bb105__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_250)<br/></td></tr><tr><td align="left">_248 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _249, const &quot;insurance_fund_vault&quot;)</td></tr></table>>];
    bb106__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_249)<br/>_0 = std::result::Result::&lt;if_staker::RequestRemoveInsuranceFundStake&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _248)<br/>StorageDead(_248)<br/>StorageDead(_242)<br/>StorageDead(_241)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb107__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_245)<br/>StorageDead(_243)<br/>_241 = const ()<br/>StorageDead(_242)<br/>StorageDead(_241)<br/>StorageLive(_251)<br/>StorageLive(_252)<br/>_252 = move _20<br/>StorageLive(_253)<br/>_253 = move _35<br/>StorageLive(_254)<br/>_254 = move _50<br/>StorageLive(_255)<br/>_255 = move _65<br/>StorageLive(_256)<br/>_256 = move _80<br/>_251 = if_staker::RequestRemoveInsuranceFundStake::&lt;'_&gt; { spot_market: move _252, insurance_fund_stake: move _253, user_stats: move _254, authority: move _255, insurance_fund_vault: move _256 }<br/>StorageDead(_256)<br/>StorageDead(_255)<br/>StorageDead(_254)<br/>StorageDead(_253)<br/>StorageDead(_252)<br/>_0 = std::result::Result::&lt;if_staker::RequestRemoveInsuranceFundStake&lt;'_&gt;, anchor_lang::error::Error&gt;::Ok(move _251)<br/>StorageDead(_251)<br/>StorageDead(_208)<br/>StorageDead(_207)<br/>StorageDead(_96)<br/>StorageDead(_95)<br/>StorageDead(_80)<br/>StorageDead(_65)<br/>StorageDead(_50)<br/>StorageDead(_35)<br/>StorageDead(_20)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb108__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageDead(_208)<br/>StorageDead(_207)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb109__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageDead(_182)<br/>StorageDead(_181)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb110__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_147)<br/>StorageDead(_146)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb111__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>StorageDead(_95)<br/></td></tr><tr><td align="left">drop(_80)</td></tr></table>>];
    bb112__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb113__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb114__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb115__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb116__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb117__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb118__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left">return</td></tr></table>>];
    bb119__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">119 (cleanup)</td></tr><tr><td align="left">drop(_185)</td></tr></table>>];
    bb120__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">120 (cleanup)</td></tr><tr><td align="left">drop(_150)</td></tr></table>>];
    bb121__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">121 (cleanup)</td></tr><tr><td align="left">drop(_80)</td></tr></table>>];
    bb122__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">122 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb123__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">_275 = discriminant(_151)<br/>_262 = const false<br/>_263 = const false<br/>StorageDead(_151)<br/>StorageDead(_150)<br/>StorageDead(_148)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>_160 = &amp;_65<br/></td></tr><tr><td align="left">_159 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::Key&gt;::key(move _160)</td></tr></table>>];
    bb124__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">_277 = discriminant(_186)<br/>_260 = const false<br/>_261 = const false<br/>StorageDead(_186)<br/>StorageDead(_185)<br/>StorageDead(_183)<br/>StorageLive(_194)<br/>StorageLive(_195)<br/>_195 = &amp;_65<br/></td></tr><tr><td align="left">_194 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::Key&gt;::key(move _195)</td></tr></table>>];
    bb125__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">125 (cleanup)</td></tr><tr><td align="left">drop(_234)</td></tr></table>>];
    bb126__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">126 (cleanup)</td></tr><tr><td align="left">switchInt(_259)</td></tr></table>>];
    bb127__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">127 (cleanup)</td></tr><tr><td align="left" balign="left">_293 = discriminant(_186)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb128__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">128 (cleanup)</td></tr><tr><td align="left" balign="left">_294 = discriminant(_151)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb129__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">129 (cleanup)</td></tr><tr><td align="left">drop(_121)</td></tr></table>>];
    bb130__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">130 (cleanup)</td></tr><tr><td align="left">switchInt(_264)</td></tr></table>>];
    bb131__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">131 (cleanup)</td></tr><tr><td align="left" balign="left">_295 = discriminant(_81)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb132__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">132 (cleanup)</td></tr><tr><td align="left" balign="left">_296 = discriminant(_66)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb133__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">133 (cleanup)</td></tr><tr><td align="left" balign="left">_297 = discriminant(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb134__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">134 (cleanup)</td></tr><tr><td align="left" balign="left">_298 = discriminant(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb135__0_8718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">135 (cleanup)</td></tr><tr><td align="left" balign="left">_299 = discriminant(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_8718 -> bb1__0_8718 [label="return"];
    bb1__0_8718 -> bb2__0_8718 [label="return"];
    bb1__0_8718 -> bb122__0_8718 [label="unwind"];
    bb2__0_8718 -> bb3__0_8718 [label="return"];
    bb3__0_8718 -> bb4__0_8718 [label="0"];
    bb3__0_8718 -> bb6__0_8718 [label="1"];
    bb3__0_8718 -> bb5__0_8718 [label="otherwise"];
    bb4__0_8718 -> bb8__0_8718 [label="return"];
    bb6__0_8718 -> bb7__0_8718 [label="return"];
    bb7__0_8718 -> bb117__0_8718 [label=""];
    bb8__0_8718 -> bb9__0_8718 [label="return"];
    bb8__0_8718 -> bb122__0_8718 [label="unwind"];
    bb9__0_8718 -> bb10__0_8718 [label="return"];
    bb9__0_8718 -> bb122__0_8718 [label="unwind"];
    bb10__0_8718 -> bb11__0_8718 [label="0"];
    bb10__0_8718 -> bb12__0_8718 [label="1"];
    bb10__0_8718 -> bb5__0_8718 [label="otherwise"];
    bb11__0_8718 -> bb14__0_8718 [label="return"];
    bb12__0_8718 -> bb13__0_8718 [label="return"];
    bb12__0_8718 -> bb135__0_8718 [label="unwind"];
    bb13__0_8718 -> bb116__0_8718 [label=""];
    bb14__0_8718 -> bb15__0_8718 [label="return"];
    bb14__0_8718 -> bb122__0_8718 [label="unwind"];
    bb15__0_8718 -> bb16__0_8718 [label="return"];
    bb15__0_8718 -> bb122__0_8718 [label="unwind"];
    bb16__0_8718 -> bb17__0_8718 [label="0"];
    bb16__0_8718 -> bb18__0_8718 [label="1"];
    bb16__0_8718 -> bb5__0_8718 [label="otherwise"];
    bb17__0_8718 -> bb20__0_8718 [label="return"];
    bb18__0_8718 -> bb19__0_8718 [label="return"];
    bb18__0_8718 -> bb134__0_8718 [label="unwind"];
    bb19__0_8718 -> bb115__0_8718 [label=""];
    bb20__0_8718 -> bb21__0_8718 [label="return"];
    bb20__0_8718 -> bb122__0_8718 [label="unwind"];
    bb21__0_8718 -> bb22__0_8718 [label="return"];
    bb21__0_8718 -> bb122__0_8718 [label="unwind"];
    bb22__0_8718 -> bb23__0_8718 [label="0"];
    bb22__0_8718 -> bb24__0_8718 [label="1"];
    bb22__0_8718 -> bb5__0_8718 [label="otherwise"];
    bb23__0_8718 -> bb26__0_8718 [label="return"];
    bb24__0_8718 -> bb25__0_8718 [label="return"];
    bb24__0_8718 -> bb133__0_8718 [label="unwind"];
    bb25__0_8718 -> bb114__0_8718 [label=""];
    bb26__0_8718 -> bb27__0_8718 [label="return"];
    bb26__0_8718 -> bb122__0_8718 [label="unwind"];
    bb27__0_8718 -> bb28__0_8718 [label="return"];
    bb27__0_8718 -> bb122__0_8718 [label="unwind"];
    bb28__0_8718 -> bb29__0_8718 [label="0"];
    bb28__0_8718 -> bb30__0_8718 [label="1"];
    bb28__0_8718 -> bb5__0_8718 [label="otherwise"];
    bb29__0_8718 -> bb32__0_8718 [label="return"];
    bb30__0_8718 -> bb31__0_8718 [label="return"];
    bb30__0_8718 -> bb132__0_8718 [label="unwind"];
    bb31__0_8718 -> bb113__0_8718 [label=""];
    bb32__0_8718 -> bb33__0_8718 [label="return"];
    bb32__0_8718 -> bb122__0_8718 [label="unwind"];
    bb33__0_8718 -> bb34__0_8718 [label="return"];
    bb33__0_8718 -> bb122__0_8718 [label="unwind"];
    bb34__0_8718 -> bb35__0_8718 [label="0"];
    bb34__0_8718 -> bb36__0_8718 [label="1"];
    bb34__0_8718 -> bb5__0_8718 [label="otherwise"];
    bb35__0_8718 -> bb38__0_8718 [label="return"];
    bb35__0_8718 -> bb121__0_8718 [label="unwind"];
    bb36__0_8718 -> bb37__0_8718 [label="return"];
    bb36__0_8718 -> bb131__0_8718 [label="unwind"];
    bb37__0_8718 -> bb112__0_8718 [label=""];
    bb38__0_8718 -> bb39__0_8718 [label="return"];
    bb38__0_8718 -> bb121__0_8718 [label="unwind"];
    bb39__0_8718 -> bb40__0_8718 [label="return"];
    bb39__0_8718 -> bb121__0_8718 [label="unwind"];
    bb40__0_8718 -> bb41__0_8718 [label="return"];
    bb40__0_8718 -> bb121__0_8718 [label="unwind"];
    bb41__0_8718 -> bb42__0_8718 [label="return"];
    bb41__0_8718 -> bb121__0_8718 [label="unwind"];
    bb42__0_8718 -> bb48__0_8718 [label="0"];
    bb42__0_8718 -> bb43__0_8718 [label="otherwise"];
    bb43__0_8718 -> bb44__0_8718 [label="return"];
    bb43__0_8718 -> bb121__0_8718 [label="unwind"];
    bb44__0_8718 -> bb45__0_8718 [label="return"];
    bb44__0_8718 -> bb121__0_8718 [label="unwind"];
    bb45__0_8718 -> bb46__0_8718 [label="return"];
    bb45__0_8718 -> bb130__0_8718 [label="unwind"];
    bb46__0_8718 -> bb47__0_8718 [label="return"];
    bb46__0_8718 -> bb130__0_8718 [label="unwind"];
    bb47__0_8718 -> bb111__0_8718 [label=""];
    bb48__0_8718 -> bb49__0_8718 [label="return"];
    bb48__0_8718 -> bb121__0_8718 [label="unwind"];
    bb49__0_8718 -> bb50__0_8718 [label="0"];
    bb49__0_8718 -> bb53__0_8718 [label="otherwise"];
    bb50__0_8718 -> bb51__0_8718 [label="return"];
    bb50__0_8718 -> bb121__0_8718 [label="unwind"];
    bb51__0_8718 -> bb52__0_8718 [label="return"];
    bb51__0_8718 -> bb121__0_8718 [label="unwind"];
    bb52__0_8718 -> bb111__0_8718 [label=""];
    bb53__0_8718 -> bb54__0_8718 [label="return"];
    bb53__0_8718 -> bb121__0_8718 [label="unwind"];
    bb54__0_8718 -> bb55__0_8718 [label="0"];
    bb54__0_8718 -> bb58__0_8718 [label="otherwise"];
    bb55__0_8718 -> bb56__0_8718 [label="return"];
    bb55__0_8718 -> bb121__0_8718 [label="unwind"];
    bb56__0_8718 -> bb57__0_8718 [label="return"];
    bb56__0_8718 -> bb121__0_8718 [label="unwind"];
    bb57__0_8718 -> bb111__0_8718 [label=""];
    bb58__0_8718 -> bb59__0_8718 [label="return"];
    bb58__0_8718 -> bb121__0_8718 [label="unwind"];
    bb59__0_8718 -> bb60__0_8718 [label="return"];
    bb59__0_8718 -> bb121__0_8718 [label="unwind"];
    bb60__0_8718 -> bb61__0_8718 [label="0"];
    bb60__0_8718 -> bb62__0_8718 [label="1"];
    bb60__0_8718 -> bb5__0_8718 [label="otherwise"];
    bb61__0_8718 -> bb64__0_8718 [label="return"];
    bb61__0_8718 -> bb120__0_8718 [label="unwind"];
    bb62__0_8718 -> bb63__0_8718 [label="return"];
    bb62__0_8718 -> bb128__0_8718 [label="unwind"];
    bb63__0_8718 -> bb110__0_8718 [label=""];
    bb64__0_8718 -> bb123__0_8718 [label="return"];
    bb64__0_8718 -> bb128__0_8718 [label="unwind"];
    bb65__0_8718 -> bb66__0_8718 [label="return"];
    bb65__0_8718 -> bb121__0_8718 [label="unwind"];
    bb66__0_8718 -> bb71__0_8718 [label="0"];
    bb66__0_8718 -> bb67__0_8718 [label="otherwise"];
    bb67__0_8718 -> bb68__0_8718 [label="return"];
    bb67__0_8718 -> bb121__0_8718 [label="unwind"];
    bb68__0_8718 -> bb69__0_8718 [label="return"];
    bb68__0_8718 -> bb121__0_8718 [label="unwind"];
    bb69__0_8718 -> bb70__0_8718 [label="return"];
    bb69__0_8718 -> bb121__0_8718 [label="unwind"];
    bb70__0_8718 -> bb110__0_8718 [label=""];
    bb71__0_8718 -> bb72__0_8718 [label="return"];
    bb71__0_8718 -> bb121__0_8718 [label="unwind"];
    bb72__0_8718 -> bb73__0_8718 [label="0"];
    bb72__0_8718 -> bb76__0_8718 [label="otherwise"];
    bb73__0_8718 -> bb74__0_8718 [label="return"];
    bb73__0_8718 -> bb121__0_8718 [label="unwind"];
    bb74__0_8718 -> bb75__0_8718 [label="return"];
    bb74__0_8718 -> bb121__0_8718 [label="unwind"];
    bb75__0_8718 -> bb111__0_8718 [label=""];
    bb76__0_8718 -> bb77__0_8718 [label="return"];
    bb76__0_8718 -> bb121__0_8718 [label="unwind"];
    bb77__0_8718 -> bb78__0_8718 [label="return"];
    bb77__0_8718 -> bb121__0_8718 [label="unwind"];
    bb78__0_8718 -> bb79__0_8718 [label="0"];
    bb78__0_8718 -> bb80__0_8718 [label="1"];
    bb78__0_8718 -> bb5__0_8718 [label="otherwise"];
    bb79__0_8718 -> bb82__0_8718 [label="return"];
    bb79__0_8718 -> bb119__0_8718 [label="unwind"];
    bb80__0_8718 -> bb81__0_8718 [label="return"];
    bb80__0_8718 -> bb127__0_8718 [label="unwind"];
    bb81__0_8718 -> bb109__0_8718 [label=""];
    bb82__0_8718 -> bb124__0_8718 [label="return"];
    bb82__0_8718 -> bb127__0_8718 [label="unwind"];
    bb83__0_8718 -> bb84__0_8718 [label="return"];
    bb83__0_8718 -> bb121__0_8718 [label="unwind"];
    bb84__0_8718 -> bb89__0_8718 [label="0"];
    bb84__0_8718 -> bb85__0_8718 [label="otherwise"];
    bb85__0_8718 -> bb86__0_8718 [label="return"];
    bb85__0_8718 -> bb121__0_8718 [label="unwind"];
    bb86__0_8718 -> bb87__0_8718 [label="return"];
    bb86__0_8718 -> bb121__0_8718 [label="unwind"];
    bb87__0_8718 -> bb88__0_8718 [label="return"];
    bb87__0_8718 -> bb121__0_8718 [label="unwind"];
    bb88__0_8718 -> bb109__0_8718 [label=""];
    bb89__0_8718 -> bb90__0_8718 [label="return"];
    bb89__0_8718 -> bb121__0_8718 [label="unwind"];
    bb90__0_8718 -> bb91__0_8718 [label="return"];
    bb90__0_8718 -> bb121__0_8718 [label="unwind"];
    bb91__0_8718 -> bb92__0_8718 [label="return"];
    bb91__0_8718 -> bb121__0_8718 [label="unwind"];
    bb92__0_8718 -> bb93__0_8718 [label="return"];
    bb92__0_8718 -> bb121__0_8718 [label="unwind"];
    bb93__0_8718 -> bb94__0_8718 [label="return"];
    bb93__0_8718 -> bb121__0_8718 [label="unwind"];
    bb94__0_8718 -> bb95__0_8718 [label="return"];
    bb94__0_8718 -> bb121__0_8718 [label="unwind"];
    bb95__0_8718 -> bb101__0_8718 [label="0"];
    bb95__0_8718 -> bb96__0_8718 [label="otherwise"];
    bb96__0_8718 -> bb97__0_8718 [label="return"];
    bb96__0_8718 -> bb121__0_8718 [label="unwind"];
    bb97__0_8718 -> bb98__0_8718 [label="return"];
    bb97__0_8718 -> bb121__0_8718 [label="unwind"];
    bb98__0_8718 -> bb99__0_8718 [label="return"];
    bb98__0_8718 -> bb126__0_8718 [label="unwind"];
    bb99__0_8718 -> bb100__0_8718 [label="return"];
    bb99__0_8718 -> bb126__0_8718 [label="unwind"];
    bb100__0_8718 -> bb108__0_8718 [label=""];
    bb101__0_8718 -> bb102__0_8718 [label="return"];
    bb101__0_8718 -> bb121__0_8718 [label="unwind"];
    bb102__0_8718 -> bb103__0_8718 [label="return"];
    bb102__0_8718 -> bb121__0_8718 [label="unwind"];
    bb103__0_8718 -> bb104__0_8718 [label="0"];
    bb103__0_8718 -> bb107__0_8718 [label="otherwise"];
    bb104__0_8718 -> bb105__0_8718 [label="return"];
    bb104__0_8718 -> bb121__0_8718 [label="unwind"];
    bb105__0_8718 -> bb106__0_8718 [label="return"];
    bb105__0_8718 -> bb121__0_8718 [label="unwind"];
    bb106__0_8718 -> bb108__0_8718 [label=""];
    bb107__0_8718 -> bb118__0_8718 [label=""];
    bb108__0_8718 -> bb111__0_8718 [label=""];
    bb109__0_8718 -> bb111__0_8718 [label=""];
    bb110__0_8718 -> bb111__0_8718 [label=""];
    bb111__0_8718 -> bb112__0_8718 [label="return"];
    bb111__0_8718 -> bb122__0_8718 [label="unwind"];
    bb112__0_8718 -> bb113__0_8718 [label=""];
    bb113__0_8718 -> bb114__0_8718 [label=""];
    bb114__0_8718 -> bb115__0_8718 [label=""];
    bb115__0_8718 -> bb116__0_8718 [label=""];
    bb116__0_8718 -> bb117__0_8718 [label=""];
    bb117__0_8718 -> bb118__0_8718 [label=""];
    bb119__0_8718 -> bb127__0_8718 [label="return"];
    bb120__0_8718 -> bb128__0_8718 [label="return"];
    bb121__0_8718 -> bb122__0_8718 [label="return"];
    bb123__0_8718 -> bb65__0_8718 [label="return"];
    bb123__0_8718 -> bb121__0_8718 [label="unwind"];
    bb124__0_8718 -> bb83__0_8718 [label="return"];
    bb124__0_8718 -> bb121__0_8718 [label="unwind"];
    bb125__0_8718 -> bb121__0_8718 [label="return"];
    bb126__0_8718 -> bb121__0_8718 [label="0"];
    bb126__0_8718 -> bb125__0_8718 [label="otherwise"];
    bb127__0_8718 -> bb121__0_8718 [label=""];
    bb128__0_8718 -> bb121__0_8718 [label=""];
    bb129__0_8718 -> bb121__0_8718 [label="return"];
    bb130__0_8718 -> bb121__0_8718 [label="0"];
    bb130__0_8718 -> bb129__0_8718 [label="otherwise"];
    bb131__0_8718 -> bb122__0_8718 [label=""];
    bb132__0_8718 -> bb122__0_8718 [label=""];
    bb133__0_8718 -> bb122__0_8718 [label=""];
    bb134__0_8718 -> bb122__0_8718 [label=""];
    bb135__0_8718 -> bb122__0_8718 [label=""];
}
