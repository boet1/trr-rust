digraph Mir_0_9321 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn keeper::handle_update_spot_market_cumulative_interest(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::keeper::UpdateSpotMarketCumulativeInterest&lt;ReErased&gt;&gt;) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _2: ();<br align="left"/>let mut _3: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _4: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _5: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _6: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _7: isize;<br align="left"/>let _8: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _9: !;<br align="left"/>let mut _10: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _11: ();<br align="left"/>let _12: ();<br align="left"/>let mut _13: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _14: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _15: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _16: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _17: isize;<br align="left"/>let _18: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _19: !;<br align="left"/>let mut _20: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _21: ();<br align="left"/>let _22: ();<br align="left"/>let mut _23: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _24: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _25: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _26: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _27: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _28: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _29: isize;<br align="left"/>let _30: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _31: !;<br align="left"/>let mut _32: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _33: ();<br align="left"/>let _34: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _35: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _36: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _37: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _38: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _39: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _40: Closure(DefId(0:9322 ~ drift[d311]::instructions::keeper::handle_update_spot_market_cumulative_interest::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _41: isize;<br align="left"/>let _42: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _43: !;<br align="left"/>let mut _44: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _45: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _46: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let _47: anchor_lang::prelude::Clock;<br align="left"/>let mut _48: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _49: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _50: isize;<br align="left"/>let _51: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _52: !;<br align="left"/>let mut _53: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _54: anchor_lang::prelude::Clock;<br align="left"/>let _55: i64;<br align="left"/>let _56: u64;<br align="left"/>let mut _57: state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _58: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::oracle_map::OracleMap&lt;ReErased&gt;&gt;;<br align="left"/>let mut _59: std::result::Result&lt;state::oracle_map::OracleMap&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _60: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _61: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _62: u64;<br align="left"/>let mut _63: std::option::Option&lt;state::state::OracleGuardRails&gt;;<br align="left"/>let mut _64: state::state::OracleGuardRails;<br align="left"/>let mut _65: &amp;ReErased state::state::State;<br align="left"/>let mut _66: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _67: isize;<br align="left"/>let _68: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _69: !;<br align="left"/>let mut _70: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _71: state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let _72: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _73: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _74: std::result::Result&lt;&amp;ReErased state::oracle::OraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _75: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _76: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _77: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _78: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _79: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _80: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _81: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _82: isize;<br align="left"/>let _83: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _84: !;<br align="left"/>let mut _85: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _86: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _87: ();<br align="left"/>let mut _88: bool;<br align="left"/>let mut _89: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _90: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _91: &amp;ReErased state::state::State;<br align="left"/>let _92: &amp;ReErased state::state::State;<br align="left"/>let mut _93: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _94: isize;<br align="left"/>let _95: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _96: !;<br align="left"/>let mut _97: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _98: bool;<br align="left"/>let _99: ();<br align="left"/>let mut _100: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _101: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _102: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _103: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _104: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _105: std::option::Option&lt;&amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _106: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _107: i64;<br align="left"/>let mut _108: isize;<br align="left"/>let _109: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _110: !;<br align="left"/>let mut _111: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _112: ();<br align="left"/>let _113: ();<br align="left"/>let mut _114: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _115: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _116: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _117: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _118: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _119: std::option::Option&lt;&amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _120: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _121: i64;<br align="left"/>let mut _122: isize;<br align="left"/>let _123: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _124: !;<br align="left"/>let mut _125: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _126: ();<br align="left"/>let _127: i64;<br align="left"/>let mut _128: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _129: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _130: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _131: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _132: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _133: u64;<br align="left"/>let mut _134: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _135: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _136: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _137: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _138: isize;<br align="left"/>let _139: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _140: !;<br align="left"/>let mut _141: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _142: i64;<br align="left"/>let mut _143: ();<br align="left"/>let mut _144: &amp;ReErased mut instructions::keeper::UpdateSpotMarketCumulativeInterest&lt;ReErased&gt;;<br align="left"/>let mut _145: &amp;ReErased mut instructions::keeper::UpdateSpotMarketCumulativeInterest&lt;ReErased&gt;;<br align="left"/>let mut _146: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _147: &amp;ReErased mut instructions::keeper::UpdateSpotMarketCumulativeInterest&lt;ReErased&gt;;<br align="left"/>let mut _148: &amp;ReErased mut instructions::keeper::UpdateSpotMarketCumulativeInterest&lt;ReErased&gt;;<br align="left"/>let mut _149: &amp;ReErased mut instructions::keeper::UpdateSpotMarketCumulativeInterest&lt;ReErased&gt;;<br align="left"/>let mut _150: &amp;ReErased mut instructions::keeper::UpdateSpotMarketCumulativeInterest&lt;ReErased&gt;;<br align="left"/>let mut _151: &amp;ReErased mut instructions::keeper::UpdateSpotMarketCumulativeInterest&lt;ReErased&gt;;<br align="left"/>let mut _152: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _153: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _154: &amp;ReErased mut instructions::keeper::UpdateSpotMarketCumulativeInterest&lt;ReErased&gt;;<br align="left"/>let mut _155: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _156: isize;<br align="left"/>let mut _157: isize;<br align="left"/>let mut _158: isize;<br align="left"/>let mut _159: isize;<br align="left"/>let mut _160: isize;<br align="left"/>let mut _161: isize;<br align="left"/>let mut _162: isize;<br align="left"/>let mut _163: isize;<br align="left"/>let mut _164: isize;<br align="left"/>let mut _165: isize;<br align="left"/>let mut _166: isize;<br align="left"/>let mut _167: isize;<br align="left"/>let mut _168: isize;<br align="left"/>let mut _169: isize;<br align="left"/>let mut _170: isize;<br align="left"/>let mut _171: isize;<br align="left"/>let mut _172: isize;<br align="left"/>let mut _173: isize;<br align="left"/>let mut _174: isize;<br align="left"/>let mut _175: isize;<br align="left"/>let mut _176: isize;<br align="left"/>let mut _177: isize;<br align="left"/>let mut _178: isize;<br align="left"/>let mut _179: isize;<br align="left"/>let mut _180: isize;<br align="left"/>let mut _181: isize;<br align="left"/>let mut _182: isize;<br align="left"/>let mut _183: isize;<br align="left"/>let mut _184: isize;<br align="left"/>let mut _185: isize;<br align="left"/>let mut _186: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _187: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _188: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _189: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug residual =&gt; _8;<br align="left"/>debug val =&gt; _11;<br align="left"/>debug residual =&gt; _18;<br align="left"/>debug val =&gt; _21;<br align="left"/>debug residual =&gt; _30;<br align="left"/>debug val =&gt; _33;<br align="left"/>debug spot_market =&gt; _34;<br align="left"/>debug residual =&gt; _42;<br align="left"/>debug val =&gt; _45;<br align="left"/>debug state =&gt; _46;<br align="left"/>debug clock =&gt; _47;<br align="left"/>debug residual =&gt; _51;<br align="left"/>debug val =&gt; _54;<br align="left"/>debug now =&gt; _55;<br align="left"/>debug clock_slot =&gt; _56;<br align="left"/>debug oracle_map =&gt; _57;<br align="left"/>debug residual =&gt; _68;<br align="left"/>debug val =&gt; _71;<br align="left"/>debug oracle_price_data =&gt; _72;<br align="left"/>debug residual =&gt; _83;<br align="left"/>debug val =&gt; _86;<br align="left"/>debug residual =&gt; _95;<br align="left"/>debug val =&gt; _98;<br align="left"/>debug residual =&gt; _109;<br align="left"/>debug val =&gt; _112;<br align="left"/>debug residual =&gt; _123;<br align="left"/>debug val =&gt; _126;<br align="left"/>debug residual =&gt; _139;<br align="left"/>debug val =&gt; _142;<br align="left"/>>;
    bb0__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_144 = deref_copy (_1.1: &amp;mut instructions::keeper::UpdateSpotMarketCumulativeInterest&lt;'_&gt;)<br/>_6 = &amp;((*_144).1: anchor_lang::prelude::AccountLoader&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_5 = &amp;(*_6)<br/></td></tr><tr><td align="left">_4 = constraints::spot_market_valid(move _5)</td></tr></table>>];
    bb1__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">_3 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _4)</td></tr></table>>];
    bb2__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>_7 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _7)</td></tr></table>>];
    bb3__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = ((_3 as Continue).0: ())<br/>_2 = _11<br/>StorageDead(_11)<br/>_156 = discriminant(_3)<br/>StorageDead(_6)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_145 = deref_copy (_1.1: &amp;mut instructions::keeper::UpdateSpotMarketCumulativeInterest&lt;'_&gt;)<br/>_16 = &amp;((*_145).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_146 = deref_copy (*_16)<br/>_186 = (((_146.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_15 = &amp;(*_186)<br/></td></tr><tr><td align="left">_14 = constraints::exchange_not_paused(move _15)</td></tr></table>>];
    bb4__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/>_8 = move ((_3 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_10)<br/>_10 = move _8<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _10)</td></tr></table>>];
    bb6__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_8)<br/>_178 = discriminant(_3)<br/>StorageDead(_6)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/></td></tr><tr><td align="left">_13 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _14)</td></tr></table>>];
    bb8__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>_17 = discriminant(_13)<br/></td></tr><tr><td align="left">switchInt(move _17)</td></tr></table>>];
    bb9__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = ((_13 as Continue).0: ())<br/>_12 = _21<br/>StorageDead(_21)<br/>_158 = discriminant(_13)<br/>StorageDead(_16)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_147 = deref_copy (_1.1: &amp;mut instructions::keeper::UpdateSpotMarketCumulativeInterest&lt;'_&gt;)<br/>_26 = &amp;((*_147).2: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_25 = &amp;(*_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>_148 = deref_copy (_1.1: &amp;mut instructions::keeper::UpdateSpotMarketCumulativeInterest&lt;'_&gt;)<br/>_28 = &amp;((*_148).1: anchor_lang::prelude::AccountLoader&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_27 = &amp;(*_28)<br/></td></tr><tr><td align="left">_24 = constraints::valid_oracle_for_spot_market(move _25, move _27)</td></tr></table>>];
    bb10__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_18)<br/>_18 = move ((_13 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_20)<br/>_20 = move _18<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _20)</td></tr></table>>];
    bb11__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_18)<br/>_176 = discriminant(_13)<br/>StorageDead(_16)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">_23 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _24)</td></tr></table>>];
    bb13__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>_29 = discriminant(_23)<br/></td></tr><tr><td align="left">switchInt(move _29)</td></tr></table>>];
    bb14__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_33)<br/>_33 = ((_23 as Continue).0: ())<br/>_22 = _33<br/>StorageDead(_33)<br/>_160 = discriminant(_23)<br/>StorageDead(_28)<br/>StorageDead(_26)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>_149 = deref_copy (_1.1: &amp;mut instructions::keeper::UpdateSpotMarketCumulativeInterest&lt;'_&gt;)<br/>_39 = &amp;((*_149).1: anchor_lang::prelude::AccountLoader&lt;'_, state::spot_market::SpotMarket&gt;)<br/></td></tr><tr><td align="left">_38 = anchor_lang::prelude::AccountLoader::&lt;'_, SpotMarket&gt;::load_mut(move _39)</td></tr></table>>];
    bb15__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_30)<br/>_30 = move ((_23 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_32)<br/>_32 = move _30<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _32)</td></tr></table>>];
    bb16__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_30)<br/>_174 = discriminant(_23)<br/>StorageDead(_28)<br/>StorageDead(_26)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageLive(_40)<br/>_40 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_37 = std::result::Result::&lt;RefMut&lt;'_, SpotMarket&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _38, move _40)</td></tr></table>>];
    bb18__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">_36 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _37)</td></tr></table>>];
    bb19__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>_41 = discriminant(_36)<br/></td></tr><tr><td align="left">switchInt(move _41)</td></tr></table>>];
    bb20__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_45)<br/>_45 = move ((_36 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_35 = move _45<br/>StorageDead(_45)<br/>_34 = &amp;mut _35<br/>_164 = discriminant(_36)<br/>StorageDead(_36)<br/>StorageLive(_46)<br/>_150 = deref_copy (_1.1: &amp;mut instructions::keeper::UpdateSpotMarketCumulativeInterest&lt;'_&gt;)<br/>_46 = &amp;((*_150).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/></td></tr><tr><td align="left">_49 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb21__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_42)<br/>_42 = ((_36 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_44)<br/>_44 = _42<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _44)</td></tr></table>>];
    bb22__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_42)<br/>_162 = discriminant(_36)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left">_48 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _49)</td></tr></table>>];
    bb24__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>_50 = discriminant(_48)<br/></td></tr><tr><td align="left">switchInt(move _50)</td></tr></table>>];
    bb25__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_54)<br/>_54 = move ((_48 as Continue).0: anchor_lang::prelude::Clock)<br/>_47 = move _54<br/>StorageDead(_54)<br/>_166 = discriminant(_48)<br/>StorageDead(_48)<br/>StorageLive(_55)<br/>_55 = (_47.4: i64)<br/>StorageLive(_56)<br/>_56 = (_47.0: u64)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>_151 = deref_copy (_1.1: &amp;mut instructions::keeper::UpdateSpotMarketCumulativeInterest&lt;'_&gt;)<br/>_61 = &amp;((*_151).2: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_60 = &amp;(*_61)<br/>StorageLive(_62)<br/>_62 = _56<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>_152 = deref_copy (*_46)<br/>_187 = (((_152.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_66 = &amp;(*_187)<br/></td></tr><tr><td align="left">_65 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _66)</td></tr></table>>];
    bb26__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_51)<br/>_51 = move ((_48 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_53)<br/>_53 = move _51<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _53)</td></tr></table>>];
    bb27__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_51)<br/>_172 = discriminant(_48)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>_64 = ((*_65).7: state::state::OracleGuardRails)<br/>_63 = Option::&lt;state::state::OracleGuardRails&gt;::Some(move _64)<br/>StorageDead(_64)<br/></td></tr><tr><td align="left">_59 = OracleMap::&lt;'_&gt;::load_one(move _60, move _62, move _63)</td></tr></table>>];
    bb29__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_62)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">_58 = &lt;std::result::Result&lt;OracleMap&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _59)</td></tr></table>>];
    bb30__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>_67 = discriminant(_58)<br/></td></tr><tr><td align="left">switchInt(move _67)</td></tr></table>>];
    bb31__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_71)<br/>_71 = move ((_58 as Continue).0: state::oracle_map::OracleMap&lt;'_&gt;)<br/>_57 = move _71<br/>StorageDead(_71)<br/>_170 = discriminant(_58)<br/>StorageDead(_65)<br/>StorageDead(_61)<br/>StorageDead(_58)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>_75 = &amp;mut _57<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>_81 = &amp;(*_34)<br/></td></tr><tr><td align="left">_80 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _81)</td></tr></table>>];
    bb32__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_68)<br/>_68 = ((_58 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_70)<br/>_70 = _68<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _70)</td></tr></table>>];
    bb33__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_68)<br/>_168 = discriminant(_58)<br/>StorageDead(_65)<br/>StorageDead(_61)<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">_79 = &amp;(*_80)<br/>StorageDead(_81)<br/></td></tr><tr><td align="left">_78 = SpotMarket::oracle_id(move _79)</td></tr></table>>];
    bb35__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>_77 = &amp;_78<br/>_76 = &amp;(*_77)<br/></td></tr><tr><td align="left">_74 = OracleMap::&lt;'_&gt;::get_price_data(move _75, move _76)</td></tr></table>>];
    bb36__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>StorageDead(_75)<br/></td></tr><tr><td align="left">_73 = &lt;std::result::Result&lt;&amp;OraclePriceData, error::ErrorCode&gt; as Try&gt;::branch(move _74)</td></tr></table>>];
    bb37__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>_82 = discriminant(_73)<br/></td></tr><tr><td align="left">switchInt(move _82)</td></tr></table>>];
    bb38__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_86)<br/>_86 = ((_73 as Continue).0: &amp;state::oracle::OraclePriceData)<br/>_72 = _86<br/>StorageDead(_86)<br/>StorageDead(_80)<br/>StorageDead(_78)<br/>StorageDead(_77)<br/>StorageDead(_73)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>_153 = deref_copy (*_46)<br/>_188 = (((_153.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_93 = &amp;(*_188)<br/></td></tr><tr><td align="left">_92 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _93)</td></tr></table>>];
    bb39__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_83)<br/>_83 = ((_73 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_85)<br/>_85 = _83<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _85)</td></tr></table>>];
    bb40__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>StorageDead(_83)<br/>StorageDead(_80)<br/>StorageDead(_78)<br/>StorageDead(_77)<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">_91 = &amp;(*_92)<br/>StorageDead(_93)<br/></td></tr><tr><td align="left">_90 = state::state::State::funding_paused(move _91)</td></tr></table>>];
    bb42__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/></td></tr><tr><td align="left">_89 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _90)</td></tr></table>>];
    bb43__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>_94 = discriminant(_89)<br/></td></tr><tr><td align="left">switchInt(move _94)</td></tr></table>>];
    bb44__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_98)<br/>_98 = ((_89 as Continue).0: bool)<br/>_88 = _98<br/>StorageDead(_98)<br/></td></tr><tr><td align="left">switchInt(move _88)</td></tr></table>>];
    bb45__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageLive(_95)<br/>_95 = ((_89 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_97)<br/>_97 = _95<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _97)</td></tr></table>>];
    bb46__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>StorageDead(_95)<br/>StorageDead(_92)<br/>StorageDead(_89)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>StorageDead(_89)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>_118 = &amp;mut (*_34)<br/></td></tr><tr><td align="left">_117 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _118)</td></tr></table>>];
    bb48__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>StorageDead(_89)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>_104 = &amp;mut (*_34)<br/></td></tr><tr><td align="left">_103 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _104)</td></tr></table>>];
    bb49__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">_102 = &amp;mut (*_103)<br/>StorageDead(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>_106 = &amp;(*_72)<br/>_105 = Option::&lt;&amp;OraclePriceData&gt;::Some(move _106)<br/>StorageDead(_106)<br/>StorageLive(_107)<br/>_107 = _55<br/></td></tr><tr><td align="left">_101 = controller::spot_balance::update_spot_market_cumulative_interest(move _102, move _105, move _107)</td></tr></table>>];
    bb50__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>StorageDead(_105)<br/>StorageDead(_102)<br/></td></tr><tr><td align="left">_100 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _101)</td></tr></table>>];
    bb51__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/>_108 = discriminant(_100)<br/></td></tr><tr><td align="left">switchInt(move _108)</td></tr></table>>];
    bb52__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageLive(_112)<br/>_112 = ((_100 as Continue).0: ())<br/>_99 = _112<br/>StorageDead(_112)<br/>StorageDead(_103)<br/>StorageDead(_100)<br/>StorageDead(_99)<br/>_87 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageLive(_109)<br/>_109 = ((_100 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_111)<br/>_111 = _109<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _111)</td></tr></table>>];
    bb54__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/>StorageDead(_109)<br/>StorageDead(_103)<br/>StorageDead(_100)<br/>StorageDead(_99)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb55__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">_116 = &amp;mut (*_117)<br/>StorageDead(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>_120 = &amp;(*_72)<br/>_119 = Option::&lt;&amp;OraclePriceData&gt;::Some(move _120)<br/>StorageDead(_120)<br/>StorageLive(_121)<br/>_121 = _55<br/></td></tr><tr><td align="left">_115 = update_spot_market_twap_stats(move _116, move _119, move _121)</td></tr></table>>];
    bb56__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_121)<br/>StorageDead(_119)<br/>StorageDead(_116)<br/></td></tr><tr><td align="left">_114 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _115)</td></tr></table>>];
    bb57__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_115)<br/>_122 = discriminant(_114)<br/></td></tr><tr><td align="left">switchInt(move _122)</td></tr></table>>];
    bb58__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageLive(_126)<br/>_126 = ((_114 as Continue).0: ())<br/>_113 = _126<br/>StorageDead(_126)<br/>StorageDead(_117)<br/>StorageDead(_114)<br/>StorageDead(_113)<br/>_87 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageLive(_123)<br/>_123 = ((_114 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_125)<br/>_125 = _123<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _125)</td></tr></table>>];
    bb60__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/>StorageDead(_123)<br/>StorageDead(_117)<br/>StorageDead(_114)<br/>StorageDead(_113)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb61__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>StorageDead(_87)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>_132 = &amp;(*_34)<br/></td></tr><tr><td align="left">_131 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _132)</td></tr></table>>];
    bb62__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">_130 = &amp;(*_131)<br/>StorageDead(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>_154 = deref_copy (_1.1: &amp;mut instructions::keeper::UpdateSpotMarketCumulativeInterest&lt;'_&gt;)<br/>_155 = deref_copy ((*_154).3: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_189 = (((_155.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_137 = &amp;(*_189)<br/></td></tr><tr><td align="left">_136 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _137)</td></tr></table>>];
    bb63__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">_135 = &amp;(*_136)<br/></td></tr><tr><td align="left">_134 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _135)</td></tr></table>>];
    bb64__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_137)<br/>StorageDead(_135)<br/>_133 = ((*_134).2: u64)<br/></td></tr><tr><td align="left">_129 = validate_spot_market_vault_amount(move _130, move _133)</td></tr></table>>];
    bb65__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/>StorageDead(_130)<br/></td></tr><tr><td align="left">_128 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _129)</td></tr></table>>];
    bb66__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_129)<br/>_138 = discriminant(_128)<br/></td></tr><tr><td align="left">switchInt(move _138)</td></tr></table>>];
    bb67__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageLive(_142)<br/>_142 = ((_128 as Continue).0: i64)<br/>_127 = _142<br/>StorageDead(_142)<br/>StorageDead(_136)<br/>StorageDead(_134)<br/>StorageDead(_131)<br/>StorageDead(_128)<br/>StorageDead(_127)<br/>StorageLive(_143)<br/>_143 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _143)<br/>StorageDead(_143)<br/>StorageDead(_72)<br/></td></tr><tr><td align="left">drop(_57)</td></tr></table>>];
    bb68__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageLive(_139)<br/>_139 = ((_128 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_141)<br/>_141 = _139<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _141)</td></tr></table>>];
    bb69__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_141)<br/>StorageDead(_139)<br/>StorageDead(_136)<br/>StorageDead(_134)<br/>StorageDead(_131)<br/>StorageDead(_128)<br/>StorageDead(_127)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb70__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_56)<br/>StorageDead(_55)<br/>StorageDead(_47)<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">drop(_35)</td></tr></table>>];
    bb71__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb72__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>StorageDead(_87)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb73__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/></td></tr><tr><td align="left">drop(_57)</td></tr></table>>];
    bb74__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_56)<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb75__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">drop(_35)</td></tr></table>>];
    bb76__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb77__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left">return</td></tr></table>>];
    bb78__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">78 (cleanup)</td></tr><tr><td align="left">drop(_57)</td></tr></table>>];
    bb79__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">79 (cleanup)</td></tr><tr><td align="left">drop(_35)</td></tr></table>>];
    bb80__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">80 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb81__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">81 (cleanup)</td></tr><tr><td align="left" balign="left">_180 = discriminant(_58)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb82__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">82 (cleanup)</td></tr><tr><td align="left" balign="left">_181 = discriminant(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb83__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">83 (cleanup)</td></tr><tr><td align="left" balign="left">_182 = discriminant(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb84__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">84 (cleanup)</td></tr><tr><td align="left" balign="left">_183 = discriminant(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb85__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">85 (cleanup)</td></tr><tr><td align="left" balign="left">_184 = discriminant(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb86__0_9321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">86 (cleanup)</td></tr><tr><td align="left" balign="left">_185 = discriminant(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_9321 -> bb1__0_9321 [label="return"];
    bb1__0_9321 -> bb2__0_9321 [label="return"];
    bb1__0_9321 -> bb80__0_9321 [label="unwind"];
    bb2__0_9321 -> bb3__0_9321 [label="0"];
    bb2__0_9321 -> bb5__0_9321 [label="1"];
    bb2__0_9321 -> bb4__0_9321 [label="otherwise"];
    bb3__0_9321 -> bb7__0_9321 [label="return"];
    bb5__0_9321 -> bb6__0_9321 [label="return"];
    bb5__0_9321 -> bb86__0_9321 [label="unwind"];
    bb6__0_9321 -> bb77__0_9321 [label=""];
    bb7__0_9321 -> bb8__0_9321 [label="return"];
    bb7__0_9321 -> bb80__0_9321 [label="unwind"];
    bb8__0_9321 -> bb9__0_9321 [label="0"];
    bb8__0_9321 -> bb10__0_9321 [label="1"];
    bb8__0_9321 -> bb4__0_9321 [label="otherwise"];
    bb9__0_9321 -> bb12__0_9321 [label="return"];
    bb10__0_9321 -> bb11__0_9321 [label="return"];
    bb10__0_9321 -> bb85__0_9321 [label="unwind"];
    bb11__0_9321 -> bb77__0_9321 [label=""];
    bb12__0_9321 -> bb13__0_9321 [label="return"];
    bb12__0_9321 -> bb80__0_9321 [label="unwind"];
    bb13__0_9321 -> bb14__0_9321 [label="0"];
    bb13__0_9321 -> bb15__0_9321 [label="1"];
    bb13__0_9321 -> bb4__0_9321 [label="otherwise"];
    bb14__0_9321 -> bb17__0_9321 [label="return"];
    bb15__0_9321 -> bb16__0_9321 [label="return"];
    bb15__0_9321 -> bb84__0_9321 [label="unwind"];
    bb16__0_9321 -> bb77__0_9321 [label=""];
    bb17__0_9321 -> bb18__0_9321 [label="return"];
    bb17__0_9321 -> bb80__0_9321 [label="unwind"];
    bb18__0_9321 -> bb19__0_9321 [label="return"];
    bb18__0_9321 -> bb80__0_9321 [label="unwind"];
    bb19__0_9321 -> bb20__0_9321 [label="0"];
    bb19__0_9321 -> bb21__0_9321 [label="1"];
    bb19__0_9321 -> bb4__0_9321 [label="otherwise"];
    bb20__0_9321 -> bb23__0_9321 [label="return"];
    bb20__0_9321 -> bb79__0_9321 [label="unwind"];
    bb21__0_9321 -> bb22__0_9321 [label="return"];
    bb21__0_9321 -> bb83__0_9321 [label="unwind"];
    bb22__0_9321 -> bb76__0_9321 [label=""];
    bb23__0_9321 -> bb24__0_9321 [label="return"];
    bb23__0_9321 -> bb79__0_9321 [label="unwind"];
    bb24__0_9321 -> bb25__0_9321 [label="0"];
    bb24__0_9321 -> bb26__0_9321 [label="1"];
    bb24__0_9321 -> bb4__0_9321 [label="otherwise"];
    bb25__0_9321 -> bb28__0_9321 [label="return"];
    bb25__0_9321 -> bb79__0_9321 [label="unwind"];
    bb26__0_9321 -> bb27__0_9321 [label="return"];
    bb26__0_9321 -> bb82__0_9321 [label="unwind"];
    bb27__0_9321 -> bb75__0_9321 [label=""];
    bb28__0_9321 -> bb29__0_9321 [label="return"];
    bb28__0_9321 -> bb79__0_9321 [label="unwind"];
    bb29__0_9321 -> bb30__0_9321 [label="return"];
    bb29__0_9321 -> bb79__0_9321 [label="unwind"];
    bb30__0_9321 -> bb31__0_9321 [label="0"];
    bb30__0_9321 -> bb32__0_9321 [label="1"];
    bb30__0_9321 -> bb4__0_9321 [label="otherwise"];
    bb31__0_9321 -> bb34__0_9321 [label="return"];
    bb31__0_9321 -> bb78__0_9321 [label="unwind"];
    bb32__0_9321 -> bb33__0_9321 [label="return"];
    bb32__0_9321 -> bb81__0_9321 [label="unwind"];
    bb33__0_9321 -> bb74__0_9321 [label=""];
    bb34__0_9321 -> bb35__0_9321 [label="return"];
    bb34__0_9321 -> bb78__0_9321 [label="unwind"];
    bb35__0_9321 -> bb36__0_9321 [label="return"];
    bb35__0_9321 -> bb78__0_9321 [label="unwind"];
    bb36__0_9321 -> bb37__0_9321 [label="return"];
    bb36__0_9321 -> bb78__0_9321 [label="unwind"];
    bb37__0_9321 -> bb38__0_9321 [label="0"];
    bb37__0_9321 -> bb39__0_9321 [label="1"];
    bb37__0_9321 -> bb4__0_9321 [label="otherwise"];
    bb38__0_9321 -> bb41__0_9321 [label="return"];
    bb38__0_9321 -> bb78__0_9321 [label="unwind"];
    bb39__0_9321 -> bb40__0_9321 [label="return"];
    bb39__0_9321 -> bb78__0_9321 [label="unwind"];
    bb40__0_9321 -> bb73__0_9321 [label=""];
    bb41__0_9321 -> bb42__0_9321 [label="return"];
    bb41__0_9321 -> bb78__0_9321 [label="unwind"];
    bb42__0_9321 -> bb43__0_9321 [label="return"];
    bb42__0_9321 -> bb78__0_9321 [label="unwind"];
    bb43__0_9321 -> bb44__0_9321 [label="0"];
    bb43__0_9321 -> bb45__0_9321 [label="1"];
    bb43__0_9321 -> bb4__0_9321 [label="otherwise"];
    bb44__0_9321 -> bb48__0_9321 [label="0"];
    bb44__0_9321 -> bb47__0_9321 [label="otherwise"];
    bb45__0_9321 -> bb46__0_9321 [label="return"];
    bb45__0_9321 -> bb78__0_9321 [label="unwind"];
    bb46__0_9321 -> bb72__0_9321 [label=""];
    bb47__0_9321 -> bb55__0_9321 [label="return"];
    bb47__0_9321 -> bb78__0_9321 [label="unwind"];
    bb48__0_9321 -> bb49__0_9321 [label="return"];
    bb48__0_9321 -> bb78__0_9321 [label="unwind"];
    bb49__0_9321 -> bb50__0_9321 [label="return"];
    bb49__0_9321 -> bb78__0_9321 [label="unwind"];
    bb50__0_9321 -> bb51__0_9321 [label="return"];
    bb50__0_9321 -> bb78__0_9321 [label="unwind"];
    bb51__0_9321 -> bb52__0_9321 [label="0"];
    bb51__0_9321 -> bb53__0_9321 [label="1"];
    bb51__0_9321 -> bb4__0_9321 [label="otherwise"];
    bb52__0_9321 -> bb61__0_9321 [label=""];
    bb53__0_9321 -> bb54__0_9321 [label="return"];
    bb53__0_9321 -> bb78__0_9321 [label="unwind"];
    bb54__0_9321 -> bb72__0_9321 [label=""];
    bb55__0_9321 -> bb56__0_9321 [label="return"];
    bb55__0_9321 -> bb78__0_9321 [label="unwind"];
    bb56__0_9321 -> bb57__0_9321 [label="return"];
    bb56__0_9321 -> bb78__0_9321 [label="unwind"];
    bb57__0_9321 -> bb58__0_9321 [label="0"];
    bb57__0_9321 -> bb59__0_9321 [label="1"];
    bb57__0_9321 -> bb4__0_9321 [label="otherwise"];
    bb58__0_9321 -> bb61__0_9321 [label=""];
    bb59__0_9321 -> bb60__0_9321 [label="return"];
    bb59__0_9321 -> bb78__0_9321 [label="unwind"];
    bb60__0_9321 -> bb72__0_9321 [label=""];
    bb61__0_9321 -> bb62__0_9321 [label="return"];
    bb61__0_9321 -> bb78__0_9321 [label="unwind"];
    bb62__0_9321 -> bb63__0_9321 [label="return"];
    bb62__0_9321 -> bb78__0_9321 [label="unwind"];
    bb63__0_9321 -> bb64__0_9321 [label="return"];
    bb63__0_9321 -> bb78__0_9321 [label="unwind"];
    bb64__0_9321 -> bb65__0_9321 [label="return"];
    bb64__0_9321 -> bb78__0_9321 [label="unwind"];
    bb65__0_9321 -> bb66__0_9321 [label="return"];
    bb65__0_9321 -> bb78__0_9321 [label="unwind"];
    bb66__0_9321 -> bb67__0_9321 [label="0"];
    bb66__0_9321 -> bb68__0_9321 [label="1"];
    bb66__0_9321 -> bb4__0_9321 [label="otherwise"];
    bb67__0_9321 -> bb70__0_9321 [label="return"];
    bb67__0_9321 -> bb79__0_9321 [label="unwind"];
    bb68__0_9321 -> bb69__0_9321 [label="return"];
    bb68__0_9321 -> bb78__0_9321 [label="unwind"];
    bb69__0_9321 -> bb73__0_9321 [label=""];
    bb70__0_9321 -> bb71__0_9321 [label="return"];
    bb70__0_9321 -> bb80__0_9321 [label="unwind"];
    bb71__0_9321 -> bb77__0_9321 [label=""];
    bb72__0_9321 -> bb73__0_9321 [label=""];
    bb73__0_9321 -> bb74__0_9321 [label="return"];
    bb73__0_9321 -> bb79__0_9321 [label="unwind"];
    bb74__0_9321 -> bb75__0_9321 [label=""];
    bb75__0_9321 -> bb76__0_9321 [label="return"];
    bb75__0_9321 -> bb80__0_9321 [label="unwind"];
    bb76__0_9321 -> bb77__0_9321 [label=""];
    bb78__0_9321 -> bb79__0_9321 [label="return"];
    bb79__0_9321 -> bb80__0_9321 [label="return"];
    bb81__0_9321 -> bb79__0_9321 [label=""];
    bb82__0_9321 -> bb79__0_9321 [label=""];
    bb83__0_9321 -> bb80__0_9321 [label=""];
    bb84__0_9321 -> bb80__0_9321 [label=""];
    bb85__0_9321 -> bb80__0_9321 [label=""];
    bb86__0_9321 -> bb80__0_9321 [label=""];
}
