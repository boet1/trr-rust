digraph Mir_0_2382 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_liability_transfer_to_cover_margin_shortage(_1: u128, _2: u32, _3: u32, _4: u32, _5: u32, _6: u32, _7: i64, _8: u32) -&gt; std::result::Result&lt;u128, error::ErrorCode&gt;<br align="left"/>let _9: ();<br align="left"/>let mut _10: bool;<br align="left"/>let mut _11: u32;<br align="left"/>let mut _12: u32;<br align="left"/>let mut _13: !;<br align="left"/>let _14: u128;<br align="left"/>let _15: u128;<br align="left"/>let mut _16: (u128, u128);<br align="left"/>let mut _17: bool;<br align="left"/>let mut _18: u32;<br align="left"/>let mut _19: u128;<br align="left"/>let mut _20: u32;<br align="left"/>let mut _21: u32;<br align="left"/>let mut _22: (u32, bool);<br align="left"/>let mut _23: u128;<br align="left"/>let mut _24: u32;<br align="left"/>let mut _25: u32;<br align="left"/>let mut _26: (u32, bool);<br align="left"/>let _27: u128;<br align="left"/>let mut _28: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _29: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _30: u128;<br align="left"/>let mut _31: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _32: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _33: u32;<br align="left"/>let mut _34: isize;<br align="left"/>let _35: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _36: !;<br align="left"/>let mut _37: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _38: u128;<br align="left"/>let mut _39: isize;<br align="left"/>let _40: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _41: !;<br align="left"/>let mut _42: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _43: u128;<br align="left"/>let _44: u128;<br align="left"/>let mut _45: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _46: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _47: u128;<br align="left"/>let mut _48: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _49: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _50: u128;<br align="left"/>let mut _51: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _52: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _53: u128;<br align="left"/>let mut _54: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _55: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _56: u32;<br align="left"/>let mut _57: isize;<br align="left"/>let _58: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _59: !;<br align="left"/>let mut _60: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _61: u128;<br align="left"/>let mut _62: isize;<br align="left"/>let _63: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _64: !;<br align="left"/>let mut _65: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _66: u128;<br align="left"/>let mut _67: u128;<br align="left"/>let mut _68: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _69: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _70: u32;<br align="left"/>let mut _71: isize;<br align="left"/>let _72: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _73: !;<br align="left"/>let mut _74: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _75: u128;<br align="left"/>let mut _76: isize;<br align="left"/>let _77: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _78: !;<br align="left"/>let mut _79: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _80: u128;<br align="left"/>let mut _81: u128;<br align="left"/>let mut _82: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _83: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _84: u32;<br align="left"/>let mut _85: isize;<br align="left"/>let _86: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _87: !;<br align="left"/>let mut _88: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _89: u128;<br align="left"/>let mut _90: isize;<br align="left"/>let _91: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _92: !;<br align="left"/>let mut _93: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _94: u128;<br align="left"/>let _95: ();<br align="left"/>let mut _96: bool;<br align="left"/>let mut _97: u128;<br align="left"/>let mut _98: u128;<br align="left"/>let mut _99: !;<br align="left"/>let mut _100: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _101: u128;<br align="left"/>let mut _102: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _103: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _104: u128;<br align="left"/>let mut _105: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _106: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _107: u128;<br align="left"/>let mut _108: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _109: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _110: u128;<br align="left"/>let mut _111: u128;<br align="left"/>let mut _112: isize;<br align="left"/>let _113: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _114: !;<br align="left"/>let mut _115: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _116: u128;<br align="left"/>let mut _117: u128;<br align="left"/>let mut _118: u128;<br align="left"/>let mut _119: (u128, bool);<br align="left"/>let mut _120: (u128, bool);<br align="left"/>let mut _121: isize;<br align="left"/>let _122: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _123: !;<br align="left"/>let mut _124: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _125: u128;<br align="left"/>let mut _126: u128;<br align="left"/>let mut _127: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _128: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _129: u128;<br align="left"/>let mut _130: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _131: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _132: u128;<br align="left"/>let mut _133: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _134: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _135: i64;<br align="left"/>let mut _136: isize;<br align="left"/>let _137: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _138: !;<br align="left"/>let mut _139: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _140: u128;<br align="left"/>let mut _141: u128;<br align="left"/>let mut _142: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _143: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _144: u128;<br align="left"/>let mut _145: u128;<br align="left"/>let mut _146: isize;<br align="left"/>let _147: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _148: !;<br align="left"/>let mut _149: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _150: u128;<br align="left"/>let mut _151: isize;<br align="left"/>let _152: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _153: !;<br align="left"/>let mut _154: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _155: u128;<br align="left"/>let mut _156: u128;<br align="left"/>let mut _157: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _158: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _159: u128;<br align="left"/>let mut _160: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _161: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _162: u128;<br align="left"/>let mut _163: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _164: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _165: u128;<br align="left"/>let mut _166: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _167: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _168: u128;<br align="left"/>let mut _169: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _170: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _171: i64;<br align="left"/>let mut _172: isize;<br align="left"/>let _173: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _174: !;<br align="left"/>let mut _175: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _176: u128;<br align="left"/>let mut _177: u128;<br align="left"/>let mut _178: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _179: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _180: u32;<br align="left"/>let mut _181: isize;<br align="left"/>let _182: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _183: !;<br align="left"/>let mut _184: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _185: u128;<br align="left"/>let mut _186: isize;<br align="left"/>let _187: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _188: !;<br align="left"/>let mut _189: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _190: u128;<br align="left"/>let mut _191: isize;<br align="left"/>let _192: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _193: !;<br align="left"/>let mut _194: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _195: u128;<br align="left"/>let mut _196: u128;<br align="left"/>let mut _197: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _198: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _199: u32;<br align="left"/>let mut _200: isize;<br align="left"/>let _201: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _202: !;<br align="left"/>let mut _203: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _204: u128;<br align="left"/>let mut _205: isize;<br align="left"/>let _206: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _207: !;<br align="left"/>let mut _208: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _209: u128;<br align="left"/>let mut _210: isize;<br align="left"/>let _211: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _212: !;<br align="left"/>let mut _213: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _214: u128;<br align="left"/>let mut _215: isize;<br align="left"/>let _216: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _217: !;<br align="left"/>let mut _218: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _219: u128;<br align="left"/>let mut _220: isize;<br align="left"/>let _221: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _222: !;<br align="left"/>let mut _223: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _224: u128;<br align="left"/>let mut _225: u128;<br align="left"/>let mut _226: Closure(DefId(0:2383 ~ drift[d311]::math::liquidation::calculate_liability_transfer_to_cover_margin_shortage::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((u128,)) -&gt; u128, []), ()]);<br align="left"/>debug margin_shortage =&gt; _1;<br align="left"/>debug asset_weight =&gt; _2;<br align="left"/>debug asset_liquidation_multiplier =&gt; _3;<br align="left"/>debug liability_weight =&gt; _4;<br align="left"/>debug liability_liquidation_multiplier =&gt; _5;<br align="left"/>debug liability_decimals =&gt; _6;<br align="left"/>debug liability_price =&gt; _7;<br align="left"/>debug if_liquidation_fee =&gt; _8;<br align="left"/>debug numerator_scale =&gt; _14;<br align="left"/>debug denominator_scale =&gt; _15;<br align="left"/>debug liability_weight_component =&gt; _27;<br align="left"/>debug residual =&gt; _35;<br align="left"/>debug val =&gt; _38;<br align="left"/>debug residual =&gt; _40;<br align="left"/>debug val =&gt; _43;<br align="left"/>debug asset_weight_component =&gt; _44;<br align="left"/>debug residual =&gt; _58;<br align="left"/>debug val =&gt; _61;<br align="left"/>debug residual =&gt; _63;<br align="left"/>debug val =&gt; _66;<br align="left"/>debug residual =&gt; _72;<br align="left"/>debug val =&gt; _75;<br align="left"/>debug residual =&gt; _77;<br align="left"/>debug val =&gt; _80;<br align="left"/>debug residual =&gt; _86;<br align="left"/>debug val =&gt; _89;<br align="left"/>debug residual =&gt; _91;<br align="left"/>debug val =&gt; _94;<br align="left"/>debug residual =&gt; _113;<br align="left"/>debug val =&gt; _116;<br align="left"/>debug residual =&gt; _122;<br align="left"/>debug val =&gt; _125;<br align="left"/>debug residual =&gt; _137;<br align="left"/>debug val =&gt; _140;<br align="left"/>debug residual =&gt; _147;<br align="left"/>debug val =&gt; _150;<br align="left"/>debug residual =&gt; _152;<br align="left"/>debug val =&gt; _155;<br align="left"/>debug residual =&gt; _173;<br align="left"/>debug val =&gt; _176;<br align="left"/>debug residual =&gt; _182;<br align="left"/>debug val =&gt; _185;<br align="left"/>debug residual =&gt; _187;<br align="left"/>debug val =&gt; _190;<br align="left"/>debug residual =&gt; _192;<br align="left"/>debug val =&gt; _195;<br align="left"/>debug residual =&gt; _201;<br align="left"/>debug val =&gt; _204;<br align="left"/>debug residual =&gt; _206;<br align="left"/>debug val =&gt; _209;<br align="left"/>debug residual =&gt; _211;<br align="left"/>debug val =&gt; _214;<br align="left"/>debug residual =&gt; _216;<br align="left"/>debug val =&gt; _219;<br align="left"/>debug residual =&gt; _221;<br align="left"/>debug val =&gt; _224;<br align="left"/>>;
    bb0__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = _2<br/>StorageLive(_12)<br/>_12 = _4<br/>_10 = Ge(move _11, move _12)<br/></td></tr><tr><td align="left">switchInt(move _10)</td></tr></table>>];
    bb1__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_11)<br/>_0 = std::result::Result::&lt;u128, error::ErrorCode&gt;::Ok(const _)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb2__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_11)<br/>_9 = const ()<br/>StorageDead(_10)<br/>StorageDead(_9)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = _6<br/>_17 = Gt(move _18, const 6_u32)<br/></td></tr><tr><td align="left">switchInt(move _17)</td></tr></table>>];
    bb3__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_21 = _6<br/>_22 = CheckedSub(_21, const 6_u32)<br/></td></tr><tr><td align="left">assert(!move (_22.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, move _21, const 6_u32)</td></tr></table>>];
    bb4__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>_25 = _6<br/>_26 = CheckedSub(const 6_u32, _25)<br/></td></tr><tr><td align="left">assert(!move (_26.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, const 6_u32, move _25)</td></tr></table>>];
    bb5__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">_20 = move (_22.0: u32)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">_19 = core::num::&lt;impl u128&gt;::pow(const 10_u128, move _20)</td></tr></table>>];
    bb6__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>_16 = (move _19, const 1_u128)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">_24 = move (_26.0: u32)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">_23 = core::num::&lt;impl u128&gt;::pow(const 10_u128, move _24)</td></tr></table>>];
    bb8__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>_16 = (const 1_u128, move _23)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageLive(_14)<br/>_14 = (_16.0: u128)<br/>StorageLive(_15)<br/>_15 = (_16.1: u128)<br/>StorageDead(_16)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>_33 = _4<br/></td></tr><tr><td align="left">_32 = &lt;u32 as Cast&gt;::cast::&lt;u128&gt;(move _33)</td></tr></table>>];
    bb10__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/></td></tr><tr><td align="left">_31 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _32)</td></tr></table>>];
    bb11__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>_34 = discriminant(_31)<br/></td></tr><tr><td align="left">switchInt(move _34)</td></tr></table>>];
    bb12__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_38)<br/>_38 = ((_31 as Continue).0: u128)<br/>_30 = _38<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">_29 = &lt;u128 as SafeMath&gt;::safe_mul(move _30, const 10_u128)</td></tr></table>>];
    bb13__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb14__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = ((_31 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_37)<br/>_37 = _35<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _37)</td></tr></table>>];
    bb15__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_35)<br/>StorageDead(_30)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/></td></tr><tr><td align="left">_28 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _29)</td></tr></table>>];
    bb17__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>_39 = discriminant(_28)<br/></td></tr><tr><td align="left">switchInt(move _39)</td></tr></table>>];
    bb18__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_43)<br/>_43 = ((_28 as Continue).0: u128)<br/>_27 = _43<br/>StorageDead(_43)<br/>StorageDead(_31)<br/>StorageDead(_28)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>_56 = _2<br/></td></tr><tr><td align="left">_55 = &lt;u32 as Cast&gt;::cast::&lt;u128&gt;(move _56)</td></tr></table>>];
    bb19__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_40)<br/>_40 = ((_28 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_42)<br/>_42 = _40<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _42)</td></tr></table>>];
    bb20__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/></td></tr><tr><td align="left">_54 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _55)</td></tr></table>>];
    bb22__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>_57 = discriminant(_54)<br/></td></tr><tr><td align="left">switchInt(move _57)</td></tr></table>>];
    bb23__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_61)<br/>_61 = ((_54 as Continue).0: u128)<br/>_53 = _61<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">_52 = &lt;u128 as SafeMath&gt;::safe_mul(move _53, const 10_u128)</td></tr></table>>];
    bb24__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_58)<br/>_58 = ((_54 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_60)<br/>_60 = _58<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _60)</td></tr></table>>];
    bb25__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageDead(_58)<br/>StorageDead(_53)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/></td></tr><tr><td align="left">_51 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _52)</td></tr></table>>];
    bb27__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>_62 = discriminant(_51)<br/></td></tr><tr><td align="left">switchInt(move _62)</td></tr></table>>];
    bb28__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_66)<br/>_66 = ((_51 as Continue).0: u128)<br/>_50 = _66<br/>StorageDead(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>_70 = _3<br/></td></tr><tr><td align="left">_69 = &lt;u32 as Cast&gt;::cast::&lt;u128&gt;(move _70)</td></tr></table>>];
    bb29__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_63)<br/>_63 = ((_51 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_65)<br/>_65 = _63<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _65)</td></tr></table>>];
    bb30__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageDead(_63)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/></td></tr><tr><td align="left">_68 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _69)</td></tr></table>>];
    bb32__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>_71 = discriminant(_68)<br/></td></tr><tr><td align="left">switchInt(move _71)</td></tr></table>>];
    bb33__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageLive(_75)<br/>_75 = ((_68 as Continue).0: u128)<br/>_67 = _75<br/>StorageDead(_75)<br/></td></tr><tr><td align="left">_49 = &lt;u128 as SafeMath&gt;::safe_mul(move _50, move _67)</td></tr></table>>];
    bb34__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_72)<br/>_72 = ((_68 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_74)<br/>_74 = _72<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _74)</td></tr></table>>];
    bb35__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageDead(_72)<br/>StorageDead(_67)<br/>StorageDead(_50)<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">_48 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _49)</td></tr></table>>];
    bb37__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>_76 = discriminant(_48)<br/></td></tr><tr><td align="left">switchInt(move _76)</td></tr></table>>];
    bb38__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_80)<br/>_80 = ((_48 as Continue).0: u128)<br/>_47 = _80<br/>StorageDead(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>_84 = _5<br/></td></tr><tr><td align="left">_83 = &lt;u32 as Cast&gt;::cast::&lt;u128&gt;(move _84)</td></tr></table>>];
    bb39__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_77)<br/>_77 = ((_48 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_79)<br/>_79 = _77<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _79)</td></tr></table>>];
    bb40__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageDead(_77)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/></td></tr><tr><td align="left">_82 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _83)</td></tr></table>>];
    bb42__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>_85 = discriminant(_82)<br/></td></tr><tr><td align="left">switchInt(move _85)</td></tr></table>>];
    bb43__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageLive(_89)<br/>_89 = ((_82 as Continue).0: u128)<br/>_81 = _89<br/>StorageDead(_89)<br/></td></tr><tr><td align="left">_46 = &lt;u128 as SafeMath&gt;::safe_div(move _47, move _81)</td></tr></table>>];
    bb44__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_86)<br/>_86 = ((_82 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_88)<br/>_88 = _86<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _88)</td></tr></table>>];
    bb45__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>StorageDead(_86)<br/>StorageDead(_81)<br/>StorageDead(_47)<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">_45 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _46)</td></tr></table>>];
    bb47__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>_90 = discriminant(_45)<br/></td></tr><tr><td align="left">switchInt(move _90)</td></tr></table>>];
    bb48__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageLive(_94)<br/>_94 = ((_45 as Continue).0: u128)<br/>_44 = _94<br/>StorageDead(_94)<br/>StorageDead(_82)<br/>StorageDead(_68)<br/>StorageDead(_54)<br/>StorageDead(_51)<br/>StorageDead(_48)<br/>StorageDead(_45)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>_97 = _44<br/>StorageLive(_98)<br/>_98 = _27<br/>_96 = Ge(move _97, move _98)<br/></td></tr><tr><td align="left">switchInt(move _96)</td></tr></table>>];
    bb49__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageLive(_91)<br/>_91 = ((_45 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_93)<br/>_93 = _91<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _93)</td></tr></table>>];
    bb50__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageDead(_91)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb51__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>StorageDead(_97)<br/>_0 = std::result::Result::&lt;u128, error::ErrorCode&gt;::Ok(const _)<br/>StorageDead(_96)<br/>StorageDead(_95)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb52__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>StorageDead(_97)<br/>_95 = const ()<br/>StorageDead(_96)<br/>StorageDead(_95)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>_110 = _1<br/>StorageLive(_111)<br/>_111 = _14<br/></td></tr><tr><td align="left">_109 = &lt;u128 as SafeMath&gt;::safe_mul(move _110, move _111)</td></tr></table>>];
    bb53__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/>StorageDead(_110)<br/></td></tr><tr><td align="left">_108 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _109)</td></tr></table>>];
    bb54__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/>_112 = discriminant(_108)<br/></td></tr><tr><td align="left">switchInt(move _112)</td></tr></table>>];
    bb55__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageLive(_116)<br/>_116 = ((_108 as Continue).0: u128)<br/>_107 = _116<br/>StorageDead(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>_119 = CheckedMul(const _, const _)<br/></td></tr><tr><td align="left">assert(!move (_119.1: bool), &quot;attempt to compute `{} * {}`, which would overflow&quot;, const _, const _)</td></tr></table>>];
    bb56__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageLive(_113)<br/>_113 = ((_108 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_115)<br/>_115 = _113<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _115)</td></tr></table>>];
    bb57__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_115)<br/>StorageDead(_113)<br/>StorageDead(_107)<br/>StorageDead(_106)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb58__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">_118 = move (_119.0: u128)<br/>_120 = CheckedMul(_118, const 10_u128)<br/></td></tr><tr><td align="left">assert(!move (_120.1: bool), &quot;attempt to compute `{} * {}`, which would overflow&quot;, move _118, const 10_u128)</td></tr></table>>];
    bb59__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">_117 = move (_120.0: u128)<br/>StorageDead(_118)<br/></td></tr><tr><td align="left">_106 = &lt;u128 as SafeMath&gt;::safe_mul(move _107, move _117)</td></tr></table>>];
    bb60__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/>StorageDead(_107)<br/></td></tr><tr><td align="left">_105 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _106)</td></tr></table>>];
    bb61__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/>_121 = discriminant(_105)<br/></td></tr><tr><td align="left">switchInt(move _121)</td></tr></table>>];
    bb62__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageLive(_125)<br/>_125 = ((_105 as Continue).0: u128)<br/>_104 = _125<br/>StorageDead(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>_135 = _7<br/></td></tr><tr><td align="left">_134 = &lt;i64 as Cast&gt;::cast::&lt;u128&gt;(move _135)</td></tr></table>>];
    bb63__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageLive(_122)<br/>_122 = ((_105 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_124)<br/>_124 = _122<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _124)</td></tr></table>>];
    bb64__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_124)<br/>StorageDead(_122)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb65__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_135)<br/></td></tr><tr><td align="left">_133 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _134)</td></tr></table>>];
    bb66__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_134)<br/>_136 = discriminant(_133)<br/></td></tr><tr><td align="left">switchInt(move _136)</td></tr></table>>];
    bb67__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageLive(_140)<br/>_140 = ((_133 as Continue).0: u128)<br/>_132 = _140<br/>StorageDead(_140)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>_144 = _27<br/>StorageLive(_145)<br/>_145 = _44<br/></td></tr><tr><td align="left">_143 = &lt;u128 as SafeMath&gt;::safe_sub(move _144, move _145)</td></tr></table>>];
    bb68__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageLive(_137)<br/>_137 = ((_133 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_139)<br/>_139 = _137<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _139)</td></tr></table>>];
    bb69__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_139)<br/>StorageDead(_137)<br/>StorageDead(_132)<br/>StorageDead(_131)<br/>StorageDead(_129)<br/>StorageDead(_128)<br/>StorageDead(_126)<br/>StorageDead(_104)<br/>StorageDead(_103)<br/>StorageDead(_101)<br/>StorageDead(_100)<br/>StorageDead(_44)<br/>StorageDead(_27)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb70__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_145)<br/>StorageDead(_144)<br/></td></tr><tr><td align="left">_142 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _143)</td></tr></table>>];
    bb71__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_143)<br/>_146 = discriminant(_142)<br/></td></tr><tr><td align="left">switchInt(move _146)</td></tr></table>>];
    bb72__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageLive(_150)<br/>_150 = ((_142 as Continue).0: u128)<br/>_141 = _150<br/>StorageDead(_150)<br/></td></tr><tr><td align="left">_131 = &lt;u128 as SafeMath&gt;::safe_mul(move _132, move _141)</td></tr></table>>];
    bb73__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageLive(_147)<br/>_147 = ((_142 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_149)<br/>_149 = _147<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _149)</td></tr></table>>];
    bb74__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_149)<br/>StorageDead(_147)<br/>StorageDead(_141)<br/>StorageDead(_132)<br/>StorageDead(_131)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb75__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_141)<br/>StorageDead(_132)<br/></td></tr><tr><td align="left">_130 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _131)</td></tr></table>>];
    bb76__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_131)<br/>_151 = discriminant(_130)<br/></td></tr><tr><td align="left">switchInt(move _151)</td></tr></table>>];
    bb77__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageLive(_155)<br/>_155 = ((_130 as Continue).0: u128)<br/>_129 = _155<br/>StorageDead(_155)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>StorageLive(_161)<br/>StorageLive(_162)<br/>StorageLive(_163)<br/>StorageLive(_164)<br/>StorageLive(_165)<br/>StorageLive(_166)<br/>StorageLive(_167)<br/>StorageLive(_168)<br/>StorageLive(_169)<br/>StorageLive(_170)<br/>StorageLive(_171)<br/>_171 = _7<br/></td></tr><tr><td align="left">_170 = &lt;i64 as Cast&gt;::cast::&lt;u128&gt;(move _171)</td></tr></table>>];
    bb78__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageLive(_152)<br/>_152 = ((_130 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_154)<br/>_154 = _152<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _154)</td></tr></table>>];
    bb79__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_154)<br/>StorageDead(_152)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb80__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_171)<br/></td></tr><tr><td align="left">_169 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _170)</td></tr></table>>];
    bb81__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_170)<br/>_172 = discriminant(_169)<br/></td></tr><tr><td align="left">switchInt(move _172)</td></tr></table>>];
    bb82__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageLive(_176)<br/>_176 = ((_169 as Continue).0: u128)<br/>_168 = _176<br/>StorageDead(_176)<br/>StorageLive(_177)<br/>StorageLive(_178)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>_180 = _8<br/></td></tr><tr><td align="left">_179 = &lt;u32 as Cast&gt;::cast::&lt;u128&gt;(move _180)</td></tr></table>>];
    bb83__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageLive(_173)<br/>_173 = ((_169 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_175)<br/>_175 = _173<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _175)</td></tr></table>>];
    bb84__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_175)<br/>StorageDead(_173)<br/>StorageDead(_168)<br/>StorageDead(_167)<br/>StorageDead(_165)<br/>StorageDead(_164)<br/>StorageDead(_162)<br/>StorageDead(_161)<br/>StorageDead(_159)<br/>StorageDead(_158)<br/>StorageDead(_156)<br/>StorageDead(_129)<br/>StorageDead(_128)<br/>StorageDead(_126)<br/>StorageDead(_104)<br/>StorageDead(_103)<br/>StorageDead(_101)<br/>StorageDead(_100)<br/>StorageDead(_44)<br/>StorageDead(_27)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb85__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_180)<br/></td></tr><tr><td align="left">_178 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _179)</td></tr></table>>];
    bb86__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_179)<br/>_181 = discriminant(_178)<br/></td></tr><tr><td align="left">switchInt(move _181)</td></tr></table>>];
    bb87__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageLive(_185)<br/>_185 = ((_178 as Continue).0: u128)<br/>_177 = _185<br/>StorageDead(_185)<br/></td></tr><tr><td align="left">_167 = &lt;u128 as SafeMath&gt;::safe_mul(move _168, move _177)</td></tr></table>>];
    bb88__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageLive(_182)<br/>_182 = ((_178 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_184)<br/>_184 = _182<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _184)</td></tr></table>>];
    bb89__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_184)<br/>StorageDead(_182)<br/>StorageDead(_177)<br/>StorageDead(_168)<br/>StorageDead(_167)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb90__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_177)<br/>StorageDead(_168)<br/></td></tr><tr><td align="left">_166 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _167)</td></tr></table>>];
    bb91__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_167)<br/>_186 = discriminant(_166)<br/></td></tr><tr><td align="left">switchInt(move _186)</td></tr></table>>];
    bb92__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageLive(_190)<br/>_190 = ((_166 as Continue).0: u128)<br/>_165 = _190<br/>StorageDead(_190)<br/></td></tr><tr><td align="left">_164 = &lt;u128 as SafeMath&gt;::safe_div(move _165, const _)</td></tr></table>>];
    bb93__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageLive(_187)<br/>_187 = ((_166 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_189)<br/>_189 = _187<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _189)</td></tr></table>>];
    bb94__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_189)<br/>StorageDead(_187)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb95__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_165)<br/></td></tr><tr><td align="left">_163 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _164)</td></tr></table>>];
    bb96__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_164)<br/>_191 = discriminant(_163)<br/></td></tr><tr><td align="left">switchInt(move _191)</td></tr></table>>];
    bb97__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageLive(_195)<br/>_195 = ((_163 as Continue).0: u128)<br/>_162 = _195<br/>StorageDead(_195)<br/>StorageLive(_196)<br/>StorageLive(_197)<br/>StorageLive(_198)<br/>StorageLive(_199)<br/>_199 = _4<br/></td></tr><tr><td align="left">_198 = &lt;u32 as Cast&gt;::cast::&lt;u128&gt;(move _199)</td></tr></table>>];
    bb98__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageLive(_192)<br/>_192 = ((_163 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_194)<br/>_194 = _192<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _194)</td></tr></table>>];
    bb99__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageDead(_194)<br/>StorageDead(_192)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb100__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_199)<br/></td></tr><tr><td align="left">_197 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _198)</td></tr></table>>];
    bb101__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_198)<br/>_200 = discriminant(_197)<br/></td></tr><tr><td align="left">switchInt(move _200)</td></tr></table>>];
    bb102__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageLive(_204)<br/>_204 = ((_197 as Continue).0: u128)<br/>_196 = _204<br/>StorageDead(_204)<br/></td></tr><tr><td align="left">_161 = &lt;u128 as SafeMath&gt;::safe_mul(move _162, move _196)</td></tr></table>>];
    bb103__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageLive(_201)<br/>_201 = ((_197 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_203)<br/>_203 = _201<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _203)</td></tr></table>>];
    bb104__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_203)<br/>StorageDead(_201)<br/>StorageDead(_196)<br/>StorageDead(_162)<br/>StorageDead(_161)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb105__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_196)<br/>StorageDead(_162)<br/></td></tr><tr><td align="left">_160 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _161)</td></tr></table>>];
    bb106__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_161)<br/>_205 = discriminant(_160)<br/></td></tr><tr><td align="left">switchInt(move _205)</td></tr></table>>];
    bb107__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageLive(_209)<br/>_209 = ((_160 as Continue).0: u128)<br/>_159 = _209<br/>StorageDead(_209)<br/></td></tr><tr><td align="left">_158 = &lt;u128 as SafeMath&gt;::safe_mul(move _159, const 10_u128)</td></tr></table>>];
    bb108__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageLive(_206)<br/>_206 = ((_160 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_208)<br/>_208 = _206<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _208)</td></tr></table>>];
    bb109__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageDead(_208)<br/>StorageDead(_206)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb110__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_159)<br/></td></tr><tr><td align="left">_157 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _158)</td></tr></table>>];
    bb111__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_158)<br/>_210 = discriminant(_157)<br/></td></tr><tr><td align="left">switchInt(move _210)</td></tr></table>>];
    bb112__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageLive(_214)<br/>_214 = ((_157 as Continue).0: u128)<br/>_156 = _214<br/>StorageDead(_214)<br/></td></tr><tr><td align="left">_128 = &lt;u128 as SafeMath&gt;::safe_sub(move _129, move _156)</td></tr></table>>];
    bb113__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageLive(_211)<br/>_211 = ((_157 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_213)<br/>_213 = _211<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _213)</td></tr></table>>];
    bb114__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageDead(_213)<br/>StorageDead(_211)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb115__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageDead(_156)<br/>StorageDead(_129)<br/></td></tr><tr><td align="left">_127 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _128)</td></tr></table>>];
    bb116__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>_215 = discriminant(_127)<br/></td></tr><tr><td align="left">switchInt(move _215)</td></tr></table>>];
    bb117__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageLive(_219)<br/>_219 = ((_127 as Continue).0: u128)<br/>_126 = _219<br/>StorageDead(_219)<br/></td></tr><tr><td align="left">_103 = &lt;u128 as SafeMath&gt;::safe_div(move _104, move _126)</td></tr></table>>];
    bb118__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageLive(_216)<br/>_216 = ((_127 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_218)<br/>_218 = _216<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _218)</td></tr></table>>];
    bb119__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageDead(_218)<br/>StorageDead(_216)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb120__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/>StorageDead(_104)<br/></td></tr><tr><td align="left">_102 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _103)</td></tr></table>>];
    bb121__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>_220 = discriminant(_102)<br/></td></tr><tr><td align="left">switchInt(move _220)</td></tr></table>>];
    bb122__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageLive(_224)<br/>_224 = ((_102 as Continue).0: u128)<br/>_101 = _224<br/>StorageDead(_224)<br/>StorageLive(_225)<br/>_225 = _15<br/></td></tr><tr><td align="left">_100 = &lt;u128 as SafeMath&gt;::safe_div(move _101, move _225)</td></tr></table>>];
    bb123__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageLive(_221)<br/>_221 = ((_102 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_223)<br/>_223 = _221<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _223)</td></tr></table>>];
    bb124__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageDead(_223)<br/>StorageDead(_221)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb125__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageDead(_225)<br/>StorageDead(_101)<br/>StorageLive(_226)<br/>_226 = {closure@programs/drift/src/math/liquidation.rs:117:14: 117:17}<br/></td></tr><tr><td align="left">_0 = std::result::Result::&lt;u128, error::ErrorCode&gt;::map::&lt;u128, {closure@programs/drift/src/math/liquidation.rs:117:14: 117:17}&gt;(move _100, move _226)</td></tr></table>>];
    bb126__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageDead(_226)<br/>StorageDead(_100)<br/>StorageDead(_44)<br/>StorageDead(_27)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_197)<br/>StorageDead(_178)<br/>StorageDead(_169)<br/>StorageDead(_166)<br/>StorageDead(_163)<br/>StorageDead(_160)<br/>StorageDead(_157)<br/>StorageDead(_142)<br/>StorageDead(_133)<br/>StorageDead(_130)<br/>StorageDead(_127)<br/>StorageDead(_108)<br/>StorageDead(_105)<br/>StorageDead(_102)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb127__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageDead(_159)<br/>StorageDead(_158)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb128__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageDead(_156)<br/>StorageDead(_129)<br/>StorageDead(_128)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb129__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/>StorageDead(_104)<br/>StorageDead(_103)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb130__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/>StorageDead(_100)<br/>StorageDead(_44)<br/>StorageDead(_27)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_197)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb131__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageDead(_165)<br/>StorageDead(_164)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb132__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageDead(_162)<br/>StorageDead(_161)<br/>StorageDead(_159)<br/>StorageDead(_158)<br/>StorageDead(_156)<br/>StorageDead(_129)<br/>StorageDead(_128)<br/>StorageDead(_126)<br/>StorageDead(_104)<br/>StorageDead(_103)<br/>StorageDead(_101)<br/>StorageDead(_100)<br/>StorageDead(_44)<br/>StorageDead(_27)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb133__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageDead(_178)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb134__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageDead(_169)<br/>StorageDead(_166)<br/>StorageDead(_163)<br/>StorageDead(_160)<br/>StorageDead(_157)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb135__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageDead(_129)<br/>StorageDead(_128)<br/>StorageDead(_126)<br/>StorageDead(_104)<br/>StorageDead(_103)<br/>StorageDead(_101)<br/>StorageDead(_100)<br/>StorageDead(_44)<br/>StorageDead(_27)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb136__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageDead(_142)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb137__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/>StorageDead(_130)<br/>StorageDead(_127)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb138__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/>StorageDead(_103)<br/>StorageDead(_101)<br/>StorageDead(_100)<br/>StorageDead(_44)<br/>StorageDead(_27)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb139__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/>StorageDead(_105)<br/>StorageDead(_102)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb140__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb141__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb142__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb143__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageDead(_49)<br/>StorageDead(_47)<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb144__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_51)<br/>StorageDead(_48)<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb145__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb146__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb147__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb148__0_2382 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2382 -> bb2__0_2382 [label="0"];
    bb0__0_2382 -> bb1__0_2382 [label="otherwise"];
    bb1__0_2382 -> bb148__0_2382 [label=""];
    bb2__0_2382 -> bb4__0_2382 [label="0"];
    bb2__0_2382 -> bb3__0_2382 [label="otherwise"];
    bb3__0_2382 -> bb5__0_2382 [label="success"];
    bb4__0_2382 -> bb7__0_2382 [label="success"];
    bb5__0_2382 -> bb6__0_2382 [label="return"];
    bb6__0_2382 -> bb9__0_2382 [label=""];
    bb7__0_2382 -> bb8__0_2382 [label="return"];
    bb8__0_2382 -> bb9__0_2382 [label=""];
    bb9__0_2382 -> bb10__0_2382 [label="return"];
    bb10__0_2382 -> bb11__0_2382 [label="return"];
    bb11__0_2382 -> bb12__0_2382 [label="0"];
    bb11__0_2382 -> bb14__0_2382 [label="1"];
    bb11__0_2382 -> bb13__0_2382 [label="otherwise"];
    bb12__0_2382 -> bb16__0_2382 [label="return"];
    bb14__0_2382 -> bb15__0_2382 [label="return"];
    bb15__0_2382 -> bb146__0_2382 [label=""];
    bb16__0_2382 -> bb17__0_2382 [label="return"];
    bb17__0_2382 -> bb18__0_2382 [label="0"];
    bb17__0_2382 -> bb19__0_2382 [label="1"];
    bb17__0_2382 -> bb13__0_2382 [label="otherwise"];
    bb18__0_2382 -> bb21__0_2382 [label="return"];
    bb19__0_2382 -> bb20__0_2382 [label="return"];
    bb20__0_2382 -> bb146__0_2382 [label=""];
    bb21__0_2382 -> bb22__0_2382 [label="return"];
    bb22__0_2382 -> bb23__0_2382 [label="0"];
    bb22__0_2382 -> bb24__0_2382 [label="1"];
    bb22__0_2382 -> bb13__0_2382 [label="otherwise"];
    bb23__0_2382 -> bb26__0_2382 [label="return"];
    bb24__0_2382 -> bb25__0_2382 [label="return"];
    bb25__0_2382 -> bb143__0_2382 [label=""];
    bb26__0_2382 -> bb27__0_2382 [label="return"];
    bb27__0_2382 -> bb28__0_2382 [label="0"];
    bb27__0_2382 -> bb29__0_2382 [label="1"];
    bb27__0_2382 -> bb13__0_2382 [label="otherwise"];
    bb28__0_2382 -> bb31__0_2382 [label="return"];
    bb29__0_2382 -> bb30__0_2382 [label="return"];
    bb30__0_2382 -> bb143__0_2382 [label=""];
    bb31__0_2382 -> bb32__0_2382 [label="return"];
    bb32__0_2382 -> bb33__0_2382 [label="0"];
    bb32__0_2382 -> bb34__0_2382 [label="1"];
    bb32__0_2382 -> bb13__0_2382 [label="otherwise"];
    bb33__0_2382 -> bb36__0_2382 [label="return"];
    bb34__0_2382 -> bb35__0_2382 [label="return"];
    bb35__0_2382 -> bb141__0_2382 [label=""];
    bb36__0_2382 -> bb37__0_2382 [label="return"];
    bb37__0_2382 -> bb38__0_2382 [label="0"];
    bb37__0_2382 -> bb39__0_2382 [label="1"];
    bb37__0_2382 -> bb13__0_2382 [label="otherwise"];
    bb38__0_2382 -> bb41__0_2382 [label="return"];
    bb39__0_2382 -> bb40__0_2382 [label="return"];
    bb40__0_2382 -> bb141__0_2382 [label=""];
    bb41__0_2382 -> bb42__0_2382 [label="return"];
    bb42__0_2382 -> bb43__0_2382 [label="0"];
    bb42__0_2382 -> bb44__0_2382 [label="1"];
    bb42__0_2382 -> bb13__0_2382 [label="otherwise"];
    bb43__0_2382 -> bb46__0_2382 [label="return"];
    bb44__0_2382 -> bb45__0_2382 [label="return"];
    bb45__0_2382 -> bb140__0_2382 [label=""];
    bb46__0_2382 -> bb47__0_2382 [label="return"];
    bb47__0_2382 -> bb48__0_2382 [label="0"];
    bb47__0_2382 -> bb49__0_2382 [label="1"];
    bb47__0_2382 -> bb13__0_2382 [label="otherwise"];
    bb48__0_2382 -> bb52__0_2382 [label="0"];
    bb48__0_2382 -> bb51__0_2382 [label="otherwise"];
    bb49__0_2382 -> bb50__0_2382 [label="return"];
    bb50__0_2382 -> bb140__0_2382 [label=""];
    bb51__0_2382 -> bb145__0_2382 [label=""];
    bb52__0_2382 -> bb53__0_2382 [label="return"];
    bb53__0_2382 -> bb54__0_2382 [label="return"];
    bb54__0_2382 -> bb55__0_2382 [label="0"];
    bb54__0_2382 -> bb56__0_2382 [label="1"];
    bb54__0_2382 -> bb13__0_2382 [label="otherwise"];
    bb55__0_2382 -> bb58__0_2382 [label="success"];
    bb56__0_2382 -> bb57__0_2382 [label="return"];
    bb57__0_2382 -> bb138__0_2382 [label=""];
    bb58__0_2382 -> bb59__0_2382 [label="success"];
    bb59__0_2382 -> bb60__0_2382 [label="return"];
    bb60__0_2382 -> bb61__0_2382 [label="return"];
    bb61__0_2382 -> bb62__0_2382 [label="0"];
    bb61__0_2382 -> bb63__0_2382 [label="1"];
    bb61__0_2382 -> bb13__0_2382 [label="otherwise"];
    bb62__0_2382 -> bb65__0_2382 [label="return"];
    bb63__0_2382 -> bb64__0_2382 [label="return"];
    bb64__0_2382 -> bb138__0_2382 [label=""];
    bb65__0_2382 -> bb66__0_2382 [label="return"];
    bb66__0_2382 -> bb67__0_2382 [label="0"];
    bb66__0_2382 -> bb68__0_2382 [label="1"];
    bb66__0_2382 -> bb13__0_2382 [label="otherwise"];
    bb67__0_2382 -> bb70__0_2382 [label="return"];
    bb68__0_2382 -> bb69__0_2382 [label="return"];
    bb69__0_2382 -> bb137__0_2382 [label=""];
    bb70__0_2382 -> bb71__0_2382 [label="return"];
    bb71__0_2382 -> bb72__0_2382 [label="0"];
    bb71__0_2382 -> bb73__0_2382 [label="1"];
    bb71__0_2382 -> bb13__0_2382 [label="otherwise"];
    bb72__0_2382 -> bb75__0_2382 [label="return"];
    bb73__0_2382 -> bb74__0_2382 [label="return"];
    bb74__0_2382 -> bb135__0_2382 [label=""];
    bb75__0_2382 -> bb76__0_2382 [label="return"];
    bb76__0_2382 -> bb77__0_2382 [label="0"];
    bb76__0_2382 -> bb78__0_2382 [label="1"];
    bb76__0_2382 -> bb13__0_2382 [label="otherwise"];
    bb77__0_2382 -> bb80__0_2382 [label="return"];
    bb78__0_2382 -> bb79__0_2382 [label="return"];
    bb79__0_2382 -> bb135__0_2382 [label=""];
    bb80__0_2382 -> bb81__0_2382 [label="return"];
    bb81__0_2382 -> bb82__0_2382 [label="0"];
    bb81__0_2382 -> bb83__0_2382 [label="1"];
    bb81__0_2382 -> bb13__0_2382 [label="otherwise"];
    bb82__0_2382 -> bb85__0_2382 [label="return"];
    bb83__0_2382 -> bb84__0_2382 [label="return"];
    bb84__0_2382 -> bb134__0_2382 [label=""];
    bb85__0_2382 -> bb86__0_2382 [label="return"];
    bb86__0_2382 -> bb87__0_2382 [label="0"];
    bb86__0_2382 -> bb88__0_2382 [label="1"];
    bb86__0_2382 -> bb13__0_2382 [label="otherwise"];
    bb87__0_2382 -> bb90__0_2382 [label="return"];
    bb88__0_2382 -> bb89__0_2382 [label="return"];
    bb89__0_2382 -> bb131__0_2382 [label=""];
    bb90__0_2382 -> bb91__0_2382 [label="return"];
    bb91__0_2382 -> bb92__0_2382 [label="0"];
    bb91__0_2382 -> bb93__0_2382 [label="1"];
    bb91__0_2382 -> bb13__0_2382 [label="otherwise"];
    bb92__0_2382 -> bb95__0_2382 [label="return"];
    bb93__0_2382 -> bb94__0_2382 [label="return"];
    bb94__0_2382 -> bb131__0_2382 [label=""];
    bb95__0_2382 -> bb96__0_2382 [label="return"];
    bb96__0_2382 -> bb97__0_2382 [label="0"];
    bb96__0_2382 -> bb98__0_2382 [label="1"];
    bb96__0_2382 -> bb13__0_2382 [label="otherwise"];
    bb97__0_2382 -> bb100__0_2382 [label="return"];
    bb98__0_2382 -> bb99__0_2382 [label="return"];
    bb99__0_2382 -> bb132__0_2382 [label=""];
    bb100__0_2382 -> bb101__0_2382 [label="return"];
    bb101__0_2382 -> bb102__0_2382 [label="0"];
    bb101__0_2382 -> bb103__0_2382 [label="1"];
    bb101__0_2382 -> bb13__0_2382 [label="otherwise"];
    bb102__0_2382 -> bb105__0_2382 [label="return"];
    bb103__0_2382 -> bb104__0_2382 [label="return"];
    bb104__0_2382 -> bb127__0_2382 [label=""];
    bb105__0_2382 -> bb106__0_2382 [label="return"];
    bb106__0_2382 -> bb107__0_2382 [label="0"];
    bb106__0_2382 -> bb108__0_2382 [label="1"];
    bb106__0_2382 -> bb13__0_2382 [label="otherwise"];
    bb107__0_2382 -> bb110__0_2382 [label="return"];
    bb108__0_2382 -> bb109__0_2382 [label="return"];
    bb109__0_2382 -> bb127__0_2382 [label=""];
    bb110__0_2382 -> bb111__0_2382 [label="return"];
    bb111__0_2382 -> bb112__0_2382 [label="0"];
    bb111__0_2382 -> bb113__0_2382 [label="1"];
    bb111__0_2382 -> bb13__0_2382 [label="otherwise"];
    bb112__0_2382 -> bb115__0_2382 [label="return"];
    bb113__0_2382 -> bb114__0_2382 [label="return"];
    bb114__0_2382 -> bb128__0_2382 [label=""];
    bb115__0_2382 -> bb116__0_2382 [label="return"];
    bb116__0_2382 -> bb117__0_2382 [label="0"];
    bb116__0_2382 -> bb118__0_2382 [label="1"];
    bb116__0_2382 -> bb13__0_2382 [label="otherwise"];
    bb117__0_2382 -> bb120__0_2382 [label="return"];
    bb118__0_2382 -> bb119__0_2382 [label="return"];
    bb119__0_2382 -> bb129__0_2382 [label=""];
    bb120__0_2382 -> bb121__0_2382 [label="return"];
    bb121__0_2382 -> bb122__0_2382 [label="0"];
    bb121__0_2382 -> bb123__0_2382 [label="1"];
    bb121__0_2382 -> bb13__0_2382 [label="otherwise"];
    bb122__0_2382 -> bb125__0_2382 [label="return"];
    bb123__0_2382 -> bb124__0_2382 [label="return"];
    bb124__0_2382 -> bb130__0_2382 [label=""];
    bb125__0_2382 -> bb126__0_2382 [label="return"];
    bb126__0_2382 -> bb148__0_2382 [label=""];
    bb127__0_2382 -> bb128__0_2382 [label=""];
    bb128__0_2382 -> bb129__0_2382 [label=""];
    bb129__0_2382 -> bb130__0_2382 [label=""];
    bb130__0_2382 -> bb133__0_2382 [label=""];
    bb131__0_2382 -> bb132__0_2382 [label=""];
    bb132__0_2382 -> bb133__0_2382 [label=""];
    bb133__0_2382 -> bb134__0_2382 [label=""];
    bb134__0_2382 -> bb136__0_2382 [label=""];
    bb135__0_2382 -> bb136__0_2382 [label=""];
    bb136__0_2382 -> bb137__0_2382 [label=""];
    bb137__0_2382 -> bb139__0_2382 [label=""];
    bb138__0_2382 -> bb139__0_2382 [label=""];
    bb139__0_2382 -> bb148__0_2382 [label=""];
    bb140__0_2382 -> bb142__0_2382 [label=""];
    bb141__0_2382 -> bb142__0_2382 [label=""];
    bb142__0_2382 -> bb144__0_2382 [label=""];
    bb143__0_2382 -> bb144__0_2382 [label=""];
    bb144__0_2382 -> bb145__0_2382 [label=""];
    bb145__0_2382 -> bb147__0_2382 [label=""];
    bb146__0_2382 -> bb147__0_2382 [label=""];
    bb147__0_2382 -> bb148__0_2382 [label=""];
}
