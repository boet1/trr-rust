digraph Mir_0_748 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn controller::repeg::settle_expired_market(_1: u16, _2: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;, _3: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;, _4: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;, _5: &amp;ReErased state::state::State, _6: &amp;ReErased anchor_lang::prelude::Clock) -&gt; std::result::Result&lt;(), error::ErrorCode&gt;<br align="left"/>let _7: i64;<br align="left"/>let _8: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _9: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _10: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _11: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _12: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _13: &amp;ReErased u16;<br align="left"/>let _14: &amp;ReErased u16;<br align="left"/>let mut _15: isize;<br align="left"/>let _16: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _17: !;<br align="left"/>let mut _18: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _19: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _20: ();<br align="left"/>let mut _21: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _22: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _23: bool;<br align="left"/>let mut _24: i64;<br align="left"/>let mut _25: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _26: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _27: ();<br align="left"/>let _28: error::ErrorCode;<br align="left"/>let _29: ();<br align="left"/>let mut _30: &amp;ReErased str;<br align="left"/>let _31: &amp;ReErased str;<br align="left"/>let mut _32: &amp;ReErased std::string::String;<br align="left"/>let _33: &amp;ReErased std::string::String;<br align="left"/>let _34: std::string::String;<br align="left"/>let _35: std::string::String;<br align="left"/>let mut _36: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _37: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _38: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _39: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _40: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _41: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _42: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _43: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _44: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _45: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _46: &amp;ReErased error::ErrorCode;<br align="left"/>let _47: &amp;ReErased error::ErrorCode;<br align="left"/>let _48: ();<br align="left"/>let mut _49: &amp;ReErased str;<br align="left"/>let _50: &amp;ReErased str;<br align="left"/>let mut _51: error::ErrorCode;<br align="left"/>let mut _52: isize;<br align="left"/>let _53: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _54: !;<br align="left"/>let mut _55: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _56: ();<br align="left"/>let _57: ();<br align="left"/>let mut _58: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _59: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _60: bool;<br align="left"/>let mut _61: i64;<br align="left"/>let mut _62: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _63: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _64: i64;<br align="left"/>let mut _65: ();<br align="left"/>let _66: error::ErrorCode;<br align="left"/>let _67: ();<br align="left"/>let mut _68: &amp;ReErased str;<br align="left"/>let _69: &amp;ReErased str;<br align="left"/>let mut _70: &amp;ReErased std::string::String;<br align="left"/>let _71: &amp;ReErased std::string::String;<br align="left"/>let _72: std::string::String;<br align="left"/>let _73: std::string::String;<br align="left"/>let mut _74: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _75: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _76: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _77: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _78: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _79: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _80: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _81: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _82: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _83: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _84: &amp;ReErased error::ErrorCode;<br align="left"/>let _85: &amp;ReErased error::ErrorCode;<br align="left"/>let _86: ();<br align="left"/>let mut _87: &amp;ReErased str;<br align="left"/>let _88: &amp;ReErased str;<br align="left"/>let mut _89: &amp;ReErased std::string::String;<br align="left"/>let _90: &amp;ReErased std::string::String;<br align="left"/>let _91: std::string::String;<br align="left"/>let _92: std::string::String;<br align="left"/>let mut _93: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _94: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _95: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _96: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _97: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _98: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _99: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _100: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _101: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _102: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _103: &amp;ReErased i64;<br align="left"/>let _104: &amp;ReErased i64;<br align="left"/>let _105: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _106: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _107: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _108: &amp;ReErased i64;<br align="left"/>let _109: &amp;ReErased i64;<br align="left"/>let mut _110: error::ErrorCode;<br align="left"/>let mut _111: isize;<br align="left"/>let _112: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _113: !;<br align="left"/>let mut _114: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _115: ();<br align="left"/>let _116: ();<br align="left"/>let mut _117: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _118: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _119: bool;<br align="left"/>let mut _120: i128;<br align="left"/>let mut _121: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _122: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _123: ();<br align="left"/>let _124: error::ErrorCode;<br align="left"/>let _125: ();<br align="left"/>let mut _126: &amp;ReErased str;<br align="left"/>let _127: &amp;ReErased str;<br align="left"/>let mut _128: &amp;ReErased std::string::String;<br align="left"/>let _129: &amp;ReErased std::string::String;<br align="left"/>let _130: std::string::String;<br align="left"/>let _131: std::string::String;<br align="left"/>let mut _132: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _133: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _134: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _135: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _136: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _137: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _138: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _139: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _140: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _141: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _142: &amp;ReErased error::ErrorCode;<br align="left"/>let _143: &amp;ReErased error::ErrorCode;<br align="left"/>let _144: ();<br align="left"/>let mut _145: &amp;ReErased str;<br align="left"/>let _146: &amp;ReErased str;<br align="left"/>let mut _147: error::ErrorCode;<br align="left"/>let mut _148: isize;<br align="left"/>let _149: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _150: !;<br align="left"/>let mut _151: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _152: ();<br align="left"/>let _153: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _154: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _155: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _156: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _157: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _158: &amp;ReErased u16;<br align="left"/>let _159: &amp;ReErased u16;<br align="left"/>let _160: u16;<br align="left"/>let mut _161: isize;<br align="left"/>let _162: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _163: !;<br align="left"/>let mut _164: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _165: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _166: i128;<br align="left"/>let mut _167: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _168: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _169: u128;<br align="left"/>let mut _170: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _171: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _172: u128;<br align="left"/>let mut _173: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _174: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _175: u128;<br align="left"/>let mut _176: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _177: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _178: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _179: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _180: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _181: isize;<br align="left"/>let _182: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _183: !;<br align="left"/>let mut _184: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _185: u128;<br align="left"/>let mut _186: u128;<br align="left"/>let mut _187: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _188: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _189: isize;<br align="left"/>let _190: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _191: !;<br align="left"/>let mut _192: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _193: u128;<br align="left"/>let mut _194: u128;<br align="left"/>let mut _195: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _196: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _197: isize;<br align="left"/>let _198: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _199: !;<br align="left"/>let mut _200: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _201: u128;<br align="left"/>let mut _202: isize;<br align="left"/>let _203: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _204: !;<br align="left"/>let mut _205: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _206: i128;<br align="left"/>let _207: i128;<br align="left"/>let mut _208: i128;<br align="left"/>let mut _209: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _210: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _211: i128;<br align="left"/>let mut _212: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _213: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _214: i128;<br align="left"/>let mut _215: isize;<br align="left"/>let _216: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _217: !;<br align="left"/>let mut _218: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _219: i128;<br align="left"/>let _220: i128;<br align="left"/>let mut _221: i128;<br align="left"/>let mut _222: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _223: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _224: i128;<br align="left"/>let mut _225: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _226: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _227: u128;<br align="left"/>let mut _228: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _229: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _230: u128;<br align="left"/>let mut _231: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _232: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _233: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _234: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _235: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _236: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _237: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _238: state::spot_market::SpotBalanceType;<br align="left"/>let mut _239: isize;<br align="left"/>let _240: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _241: !;<br align="left"/>let mut _242: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _243: u128;<br align="left"/>let mut _244: isize;<br align="left"/>let _245: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _246: !;<br align="left"/>let mut _247: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _248: i128;<br align="left"/>let mut _249: i128;<br align="left"/>let mut _250: isize;<br align="left"/>let _251: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _252: !;<br align="left"/>let mut _253: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _254: i128;<br align="left"/>let _255: i128;<br align="left"/>let mut _256: i128;<br align="left"/>let mut _257: i128;<br align="left"/>let _258: ();<br align="left"/>let mut _259: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _260: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _261: u128;<br align="left"/>let mut _262: i128;<br align="left"/>let mut _263: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _264: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _265: state::spot_market::SpotBalanceType;<br align="left"/>let mut _266: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _267: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _268: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _269: &amp;ReErased mut dyn [Binder(Trait(state::spot_market::SpotBalance), [])] + ReErased;<br align="left"/>let mut _270: &amp;ReErased mut state::perp_market::PoolBalance;<br align="left"/>let mut _271: &amp;ReErased mut state::perp_market::PoolBalance;<br align="left"/>let mut _272: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _273: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _274: isize;<br align="left"/>let _275: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _276: !;<br align="left"/>let mut _277: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _278: ();<br align="left"/>let _279: ();<br align="left"/>let mut _280: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _281: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _282: u128;<br align="left"/>let mut _283: i128;<br align="left"/>let mut _284: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _285: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _286: state::spot_market::SpotBalanceType;<br align="left"/>let mut _287: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _288: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _289: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _290: &amp;ReErased mut dyn [Binder(Trait(state::spot_market::SpotBalance), [])] + ReErased;<br align="left"/>let mut _291: &amp;ReErased mut state::perp_market::PoolBalance;<br align="left"/>let mut _292: &amp;ReErased mut state::perp_market::PoolBalance;<br align="left"/>let mut _293: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _294: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _295: isize;<br align="left"/>let _296: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _297: !;<br align="left"/>let mut _298: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _299: ();<br align="left"/>let _300: ();<br align="left"/>let mut _301: bool;<br align="left"/>let mut _302: i128;<br align="left"/>let _303: u128;<br align="left"/>let _304: u128;<br align="left"/>let mut _305: (u128, u128);<br align="left"/>let mut _306: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (u128, u128)&gt;;<br align="left"/>let mut _307: std::result::Result&lt;(u128, u128), error::ErrorCode&gt;;<br align="left"/>let mut _308: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _309: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _310: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _311: i128;<br align="left"/>let mut _312: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _313: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _314: i128;<br align="left"/>let mut _315: isize;<br align="left"/>let _316: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _317: !;<br align="left"/>let mut _318: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _319: i128;<br align="left"/>let mut _320: i128;<br align="left"/>let mut _321: (i128, bool);<br align="left"/>let mut _322: isize;<br align="left"/>let _323: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _324: !;<br align="left"/>let mut _325: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _326: (u128, u128);<br align="left"/>let _327: math::bn::U192;<br align="left"/>let mut _328: math::bn::U192;<br align="left"/>let mut _329: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, math::bn::U192&gt;;<br align="left"/>let mut _330: std::result::Result&lt;math::bn::U192, error::ErrorCode&gt;;<br align="left"/>let mut _331: math::bn::U192;<br align="left"/>let mut _332: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, math::bn::U192&gt;;<br align="left"/>let mut _333: std::result::Result&lt;math::bn::U192, error::ErrorCode&gt;;<br align="left"/>let mut _334: math::bn::U192;<br align="left"/>let mut _335: u128;<br align="left"/>let mut _336: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _337: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _338: math::bn::U192;<br align="left"/>let mut _339: u128;<br align="left"/>let mut _340: isize;<br align="left"/>let _341: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _342: !;<br align="left"/>let mut _343: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _344: math::bn::U192;<br align="left"/>let mut _345: math::bn::U192;<br align="left"/>let mut _346: u128;<br align="left"/>let mut _347: isize;<br align="left"/>let _348: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _349: !;<br align="left"/>let mut _350: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _351: math::bn::U192;<br align="left"/>let mut _352: math::bn::U192;<br align="left"/>let _353: math::cp_curve::UpdateKResult;<br align="left"/>let mut _354: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, math::cp_curve::UpdateKResult&gt;;<br align="left"/>let mut _355: std::result::Result&lt;math::cp_curve::UpdateKResult, error::ErrorCode&gt;;<br align="left"/>let mut _356: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _357: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _358: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _359: math::bn::U192;<br align="left"/>let mut _360: isize;<br align="left"/>let _361: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _362: !;<br align="left"/>let mut _363: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _364: math::cp_curve::UpdateKResult;<br align="left"/>let _365: i128;<br align="left"/>let mut _366: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _367: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _368: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _369: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _370: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _371: &amp;ReErased math::cp_curve::UpdateKResult;<br align="left"/>let _372: &amp;ReErased math::cp_curve::UpdateKResult;<br align="left"/>let mut _373: isize;<br align="left"/>let _374: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _375: !;<br align="left"/>let mut _376: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _377: i128;<br align="left"/>let _378: bool;<br align="left"/>let mut _379: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _380: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _381: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _382: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _383: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _384: i128;<br align="left"/>let mut _385: isize;<br align="left"/>let _386: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _387: !;<br align="left"/>let mut _388: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _389: bool;<br align="left"/>let _390: ();<br align="left"/>let mut _391: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _392: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _393: bool;<br align="left"/>let mut _394: ();<br align="left"/>let _395: error::ErrorCode;<br align="left"/>let _396: ();<br align="left"/>let mut _397: &amp;ReErased str;<br align="left"/>let _398: &amp;ReErased str;<br align="left"/>let mut _399: &amp;ReErased std::string::String;<br align="left"/>let _400: &amp;ReErased std::string::String;<br align="left"/>let _401: std::string::String;<br align="left"/>let _402: std::string::String;<br align="left"/>let mut _403: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _404: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _405: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _406: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _407: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _408: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _409: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _410: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _411: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _412: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _413: &amp;ReErased error::ErrorCode;<br align="left"/>let _414: &amp;ReErased error::ErrorCode;<br align="left"/>let _415: ();<br align="left"/>let mut _416: &amp;ReErased str;<br align="left"/>let _417: &amp;ReErased str;<br align="left"/>let mut _418: error::ErrorCode;<br align="left"/>let mut _419: isize;<br align="left"/>let _420: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _421: !;<br align="left"/>let mut _422: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _423: ();<br align="left"/>let mut _424: bool;<br align="left"/>let _425: ();<br align="left"/>let mut _426: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _427: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _428: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _429: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _430: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _431: &amp;ReErased math::cp_curve::UpdateKResult;<br align="left"/>let _432: &amp;ReErased math::cp_curve::UpdateKResult;<br align="left"/>let mut _433: isize;<br align="left"/>let _434: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _435: !;<br align="left"/>let mut _436: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _437: ();<br align="left"/>let _438: ();<br align="left"/>let mut _439: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _440: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _441: bool;<br align="left"/>let mut _442: u128;<br align="left"/>let mut _443: u32;<br align="left"/>let mut _444: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _445: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _446: ();<br align="left"/>let _447: error::ErrorCode;<br align="left"/>let _448: ();<br align="left"/>let mut _449: &amp;ReErased str;<br align="left"/>let _450: &amp;ReErased str;<br align="left"/>let mut _451: &amp;ReErased std::string::String;<br align="left"/>let _452: &amp;ReErased std::string::String;<br align="left"/>let _453: std::string::String;<br align="left"/>let _454: std::string::String;<br align="left"/>let mut _455: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _456: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _457: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _458: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _459: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _460: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _461: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _462: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _463: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _464: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _465: &amp;ReErased error::ErrorCode;<br align="left"/>let _466: &amp;ReErased error::ErrorCode;<br align="left"/>let _467: ();<br align="left"/>let mut _468: &amp;ReErased str;<br align="left"/>let _469: &amp;ReErased str;<br align="left"/>let mut _470: error::ErrorCode;<br align="left"/>let mut _471: isize;<br align="left"/>let _472: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _473: !;<br align="left"/>let mut _474: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _475: ();<br align="left"/>let _476: i64;<br align="left"/>let mut _477: bool;<br align="left"/>let mut _478: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let _479: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _480: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _481: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let _482: state::oracle::OracleSource;<br align="left"/>let mut _483: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _484: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _485: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _486: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _487: ();<br align="left"/>let _488: ();<br align="left"/>let mut _489: &amp;ReErased str;<br align="left"/>let _490: &amp;ReErased str;<br align="left"/>let mut _491: &amp;ReErased std::string::String;<br align="left"/>let _492: &amp;ReErased std::string::String;<br align="left"/>let _493: std::string::String;<br align="left"/>let _494: std::string::String;<br align="left"/>let mut _495: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _496: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _497: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _498: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _499: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _500: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _501: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _502: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _503: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _504: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _505: &amp;ReErased i64;<br align="left"/>let _506: &amp;ReErased i64;<br align="left"/>let _507: ();<br align="left"/>let mut _508: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _509: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _510: bool;<br align="left"/>let mut _511: i64;<br align="left"/>let mut _512: ();<br align="left"/>let _513: error::ErrorCode;<br align="left"/>let _514: ();<br align="left"/>let mut _515: &amp;ReErased str;<br align="left"/>let _516: &amp;ReErased str;<br align="left"/>let mut _517: &amp;ReErased std::string::String;<br align="left"/>let _518: &amp;ReErased std::string::String;<br align="left"/>let _519: std::string::String;<br align="left"/>let _520: std::string::String;<br align="left"/>let mut _521: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _522: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _523: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _524: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _525: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _526: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _527: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _528: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _529: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _530: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _531: &amp;ReErased error::ErrorCode;<br align="left"/>let _532: &amp;ReErased error::ErrorCode;<br align="left"/>let _533: ();<br align="left"/>let mut _534: &amp;ReErased str;<br align="left"/>let _535: &amp;ReErased str;<br align="left"/>let mut _536: &amp;ReErased std::string::String;<br align="left"/>let _537: &amp;ReErased std::string::String;<br align="left"/>let _538: std::string::String;<br align="left"/>let _539: std::string::String;<br align="left"/>let mut _540: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _541: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _542: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _543: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _544: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _545: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _546: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _547: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _548: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _549: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _550: &amp;ReErased i64;<br align="left"/>let _551: &amp;ReErased i64;<br align="left"/>let mut _552: error::ErrorCode;<br align="left"/>let mut _553: isize;<br align="left"/>let _554: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _555: !;<br align="left"/>let mut _556: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _557: ();<br align="left"/>let _558: u128;<br align="left"/>let mut _559: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _560: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _561: u128;<br align="left"/>let mut _562: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _563: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _564: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _565: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _566: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _567: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _568: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _569: &amp;ReErased state::perp_market::PoolBalance;<br align="left"/>let _570: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _571: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _572: isize;<br align="left"/>let _573: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _574: !;<br align="left"/>let mut _575: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _576: u128;<br align="left"/>let _577: u128;<br align="left"/>let mut _578: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _579: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _580: u128;<br align="left"/>let mut _581: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _582: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _583: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _584: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _585: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _586: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _587: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _588: &amp;ReErased state::perp_market::PoolBalance;<br align="left"/>let _589: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _590: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _591: isize;<br align="left"/>let _592: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _593: !;<br align="left"/>let mut _594: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _595: u128;<br align="left"/>let _596: i128;<br align="left"/>let mut _597: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _598: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _599: u128;<br align="left"/>let mut _600: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _601: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _602: u128;<br align="left"/>let mut _603: u128;<br align="left"/>let mut _604: isize;<br align="left"/>let _605: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _606: !;<br align="left"/>let mut _607: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _608: u128;<br align="left"/>let mut _609: isize;<br align="left"/>let _610: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _611: !;<br align="left"/>let mut _612: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _613: i128;<br align="left"/>let _614: ();<br align="left"/>let _615: ();<br align="left"/>let mut _616: &amp;ReErased str;<br align="left"/>let _617: &amp;ReErased str;<br align="left"/>let mut _618: &amp;ReErased std::string::String;<br align="left"/>let _619: &amp;ReErased std::string::String;<br align="left"/>let _620: std::string::String;<br align="left"/>let _621: std::string::String;<br align="left"/>let mut _622: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _623: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _624: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _625: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _626: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _627: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _628: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _629: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _630: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _631: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _632: &amp;ReErased u16;<br align="left"/>let _633: &amp;ReErased u16;<br align="left"/>let _634: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _635: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _636: ();<br align="left"/>let _637: ();<br align="left"/>let mut _638: &amp;ReErased str;<br align="left"/>let _639: &amp;ReErased str;<br align="left"/>let mut _640: &amp;ReErased std::string::String;<br align="left"/>let _641: &amp;ReErased std::string::String;<br align="left"/>let _642: std::string::String;<br align="left"/>let _643: std::string::String;<br align="left"/>let mut _644: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _645: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _646: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _647: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _648: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _649: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _650: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _651: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _652: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _653: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _654: &amp;ReErased i128;<br align="left"/>let _655: &amp;ReErased i128;<br align="left"/>let _656: i64;<br align="left"/>let mut _657: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _658: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _659: &amp;ReErased state::perp_market::AMM;<br align="left"/>let _660: &amp;ReErased state::perp_market::AMM;<br align="left"/>let _661: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _662: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _663: i64;<br align="left"/>let mut _664: i128;<br align="left"/>let mut _665: isize;<br align="left"/>let _666: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _667: !;<br align="left"/>let mut _668: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _669: i64;<br align="left"/>let mut _670: i64;<br align="left"/>let mut _671: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _672: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _673: state::perp_market::MarketStatus;<br align="left"/>let mut _674: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _675: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _676: ();<br align="left"/>let _677: ();<br align="left"/>let mut _678: &amp;ReErased str;<br align="left"/>let _679: &amp;ReErased str;<br align="left"/>let mut _680: &amp;ReErased std::string::String;<br align="left"/>let _681: &amp;ReErased std::string::String;<br align="left"/>let _682: std::string::String;<br align="left"/>let _683: std::string::String;<br align="left"/>let mut _684: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _685: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _686: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _687: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _688: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _689: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _690: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _691: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _692: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _693: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _694: &amp;ReErased i64;<br align="left"/>let _695: &amp;ReErased i64;<br align="left"/>let _696: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _697: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _698: ();<br align="left"/>let mut _699: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _700: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _701: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _702: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _703: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _704: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _705: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let mut _706: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _707: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _708: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _709: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _710: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _711: &amp;ReErased u16;<br align="left"/>let mut _712: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _713: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _714: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _715: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _716: isize;<br align="left"/>let mut _717: isize;<br align="left"/>let mut _718: isize;<br align="left"/>let mut _719: isize;<br align="left"/>let mut _720: isize;<br align="left"/>let mut _721: isize;<br align="left"/>let mut _722: isize;<br align="left"/>let mut _723: isize;<br align="left"/>let mut _724: isize;<br align="left"/>let mut _725: isize;<br align="left"/>debug market_index =&gt; _1;<br align="left"/>debug market_map =&gt; _2;<br align="left"/>debug _oracle_map =&gt; _3;<br align="left"/>debug spot_market_map =&gt; _4;<br align="left"/>debug _state =&gt; _5;<br align="left"/>debug clock =&gt; _6;<br align="left"/>debug now =&gt; _7;<br align="left"/>debug market =&gt; _8;<br align="left"/>debug residual =&gt; _16;<br align="left"/>debug val =&gt; _19;<br align="left"/>debug error_code =&gt; _28;<br align="left"/>debug res =&gt; _35;<br align="left"/>debug residual =&gt; _53;<br align="left"/>debug val =&gt; _56;<br align="left"/>debug error_code =&gt; _66;<br align="left"/>debug res =&gt; _73;<br align="left"/>debug res =&gt; _92;<br align="left"/>debug residual =&gt; _112;<br align="left"/>debug val =&gt; _115;<br align="left"/>debug error_code =&gt; _124;<br align="left"/>debug res =&gt; _131;<br align="left"/>debug residual =&gt; _149;<br align="left"/>debug val =&gt; _152;<br align="left"/>debug spot_market =&gt; _153;<br align="left"/>debug residual =&gt; _162;<br align="left"/>debug val =&gt; _165;<br align="left"/>debug fee_reserved_for_protocol =&gt; _166;<br align="left"/>debug residual =&gt; _182;<br align="left"/>debug val =&gt; _185;<br align="left"/>debug residual =&gt; _190;<br align="left"/>debug val =&gt; _193;<br align="left"/>debug residual =&gt; _198;<br align="left"/>debug val =&gt; _201;<br align="left"/>debug residual =&gt; _203;<br align="left"/>debug val =&gt; _206;<br align="left"/>debug budget =&gt; _207;<br align="left"/>debug residual =&gt; _216;<br align="left"/>debug val =&gt; _219;<br align="left"/>debug available_fee_pool =&gt; _220;<br align="left"/>debug residual =&gt; _240;<br align="left"/>debug val =&gt; _243;<br align="left"/>debug residual =&gt; _245;<br align="left"/>debug val =&gt; _248;<br align="left"/>debug residual =&gt; _251;<br align="left"/>debug val =&gt; _254;<br align="left"/>debug fee_pool_transfer =&gt; _255;<br align="left"/>debug residual =&gt; _275;<br align="left"/>debug val =&gt; _278;<br align="left"/>debug residual =&gt; _296;<br align="left"/>debug val =&gt; _299;<br align="left"/>debug k_scale_numerator =&gt; _303;<br align="left"/>debug k_scale_denominator =&gt; _304;<br align="left"/>debug residual =&gt; _316;<br align="left"/>debug val =&gt; _319;<br align="left"/>debug residual =&gt; _323;<br align="left"/>debug val =&gt; _326;<br align="left"/>debug new_sqrt_k =&gt; _327;<br align="left"/>debug residual =&gt; _341;<br align="left"/>debug val =&gt; _344;<br align="left"/>debug residual =&gt; _348;<br align="left"/>debug val =&gt; _351;<br align="left"/>debug update_k_result =&gt; _353;<br align="left"/>debug residual =&gt; _361;<br align="left"/>debug val =&gt; _364;<br align="left"/>debug adjustment_cost =&gt; _365;<br align="left"/>debug residual =&gt; _374;<br align="left"/>debug val =&gt; _377;<br align="left"/>debug cost_applied =&gt; _378;<br align="left"/>debug residual =&gt; _386;<br align="left"/>debug val =&gt; _389;<br align="left"/>debug error_code =&gt; _395;<br align="left"/>debug res =&gt; _402;<br align="left"/>debug residual =&gt; _420;<br align="left"/>debug val =&gt; _423;<br align="left"/>debug residual =&gt; _434;<br align="left"/>debug val =&gt; _437;<br align="left"/>debug error_code =&gt; _447;<br align="left"/>debug res =&gt; _454;<br align="left"/>debug residual =&gt; _472;<br align="left"/>debug val =&gt; _475;<br align="left"/>debug target_expiry_price =&gt; _476;<br align="left"/>debug res =&gt; _494;<br align="left"/>debug error_code =&gt; _513;<br align="left"/>debug res =&gt; _520;<br align="left"/>debug res =&gt; _539;<br align="left"/>debug residual =&gt; _554;<br align="left"/>debug val =&gt; _557;<br align="left"/>debug pnl_pool_token_amount =&gt; _558;<br align="left"/>debug residual =&gt; _573;<br align="left"/>debug val =&gt; _576;<br align="left"/>debug fee_pool_token_amount =&gt; _577;<br align="left"/>debug residual =&gt; _592;<br align="left"/>debug val =&gt; _595;<br align="left"/>debug total_excess_balance =&gt; _596;<br align="left"/>debug residual =&gt; _605;<br align="left"/>debug val =&gt; _608;<br align="left"/>debug residual =&gt; _610;<br align="left"/>debug val =&gt; _613;<br align="left"/>debug res =&gt; _621;<br align="left"/>debug res =&gt; _643;<br align="left"/>debug expiry_price =&gt; _656;<br align="left"/>debug residual =&gt; _666;<br align="left"/>debug val =&gt; _669;<br align="left"/>debug res =&gt; _683;<br align="left"/>>;
    bb0__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_7)<br/>_7 = ((*_6).4: i64)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = &amp;(*_2)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_14 = &amp;_1<br/>_13 = &amp;(*_14)<br/></td></tr><tr><td align="left">_11 = PerpMarketMap::&lt;'_&gt;::get_ref_mut(move _12, move _13)</td></tr></table>>];
    bb1__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">_10 = &lt;std::result::Result&lt;RefMut&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _11)</td></tr></table>>];
    bb2__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>_15 = discriminant(_10)<br/></td></tr><tr><td align="left">switchInt(move _15)</td></tr></table>>];
    bb3__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_19)<br/>_19 = move ((_10 as Continue).0: std::cell::RefMut&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_9 = move _19<br/>StorageDead(_19)<br/>_8 = &amp;mut _9<br/>_718 = discriminant(_10)<br/>StorageDead(_14)<br/>StorageDead(_10)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_26 = &amp;(*_8)<br/></td></tr><tr><td align="left">_25 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _26)</td></tr></table>>];
    bb4__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_16)<br/>_16 = ((_10 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_18)<br/>_18 = _16<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _18)</td></tr></table>>];
    bb6__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_16)<br/>_716 = discriminant(_10)<br/>StorageDead(_14)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>_24 = ((*_25).6: i64)<br/>_23 = Ne(move _24, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _23)</td></tr></table>>];
    bb8__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_24)<br/>StorageLive(_27)<br/>_27 = ()<br/>_22 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _27)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_24)<br/>StorageLive(_28)<br/>_28 = error::ErrorCode::MarketSettlementAttemptOnActiveMarket<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>_715 = const _<br/>_39 = &amp;(*_715)<br/>_38 = &amp;(*_39)<br/>_37 = move _38 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_38)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>_47 = &amp;_28<br/>_46 = &amp;(*_47)<br/></td></tr><tr><td align="left">_45 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _46)</td></tr></table>>];
    bb10__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>_44 = [move _45]<br/>StorageDead(_45)<br/>_43 = &amp;_44<br/>_42 = &amp;(*_43)<br/>_41 = move _42 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">_36 = Arguments::&lt;'_&gt;::new_v1(move _37, move _41)</td></tr></table>>];
    bb11__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">_35 = format(move _36)</td></tr></table>>];
    bb12__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_47)<br/>StorageDead(_44)<br/>StorageDead(_43)<br/>StorageDead(_39)<br/>_34 = move _35<br/>StorageDead(_35)<br/>_33 = &amp;_34<br/>_32 = &amp;(*_33)<br/></td></tr><tr><td align="left">_31 = &lt;String as Deref&gt;::deref(move _32)</td></tr></table>>];
    bb13__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">_30 = &amp;(*_31)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">_29 = solana_program::log::sol_log(move _30)</td></tr></table>>];
    bb14__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/></td></tr><tr><td align="left">drop(_34)</td></tr></table>>];
    bb15__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_33)<br/>StorageDead(_31)<br/>StorageDead(_29)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>_50 = const &quot;Market isn't set to expire&quot;<br/>_49 = &amp;(*_50)<br/></td></tr><tr><td align="left">_48 = solana_program::log::sol_log(move _49)</td></tr></table>>];
    bb16__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_50)<br/>StorageDead(_48)<br/>StorageLive(_51)<br/>_51 = _28<br/>_22 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _51)<br/>StorageDead(_51)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/></td></tr><tr><td align="left">_21 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _22)</td></tr></table>>];
    bb18__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>_52 = discriminant(_21)<br/></td></tr><tr><td align="left">switchInt(move _52)</td></tr></table>>];
    bb19__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_56)<br/>_56 = ((_21 as Continue).0: ())<br/>_20 = _56<br/>StorageDead(_56)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>_63 = &amp;(*_8)<br/></td></tr><tr><td align="left">_62 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _63)</td></tr></table>>];
    bb20__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_53)<br/>_53 = ((_21 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_55)<br/>_55 = _53<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _55)</td></tr></table>>];
    bb21__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_53)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>_61 = ((*_62).6: i64)<br/>StorageLive(_64)<br/>_64 = _7<br/>_60 = Le(move _61, move _64)<br/></td></tr><tr><td align="left">switchInt(move _60)</td></tr></table>>];
    bb23__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageDead(_62)<br/>StorageDead(_61)<br/>StorageLive(_65)<br/>_65 = ()<br/>_59 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _65)<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageDead(_62)<br/>StorageDead(_61)<br/>StorageLive(_66)<br/>_66 = error::ErrorCode::MarketSettlementAttemptTooEarly<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>_714 = const _<br/>_77 = &amp;(*_714)<br/>_76 = &amp;(*_77)<br/>_75 = move _76 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_76)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>_85 = &amp;_66<br/>_84 = &amp;(*_85)<br/></td></tr><tr><td align="left">_83 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _84)</td></tr></table>>];
    bb25__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>_82 = [move _83]<br/>StorageDead(_83)<br/>_81 = &amp;_82<br/>_80 = &amp;(*_81)<br/>_79 = move _80 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_80)<br/></td></tr><tr><td align="left">_74 = Arguments::&lt;'_&gt;::new_v1(move _75, move _79)</td></tr></table>>];
    bb26__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageDead(_75)<br/></td></tr><tr><td align="left">_73 = format(move _74)</td></tr></table>>];
    bb27__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageDead(_85)<br/>StorageDead(_82)<br/>StorageDead(_81)<br/>StorageDead(_77)<br/>_72 = move _73<br/>StorageDead(_73)<br/>_71 = &amp;_72<br/>_70 = &amp;(*_71)<br/></td></tr><tr><td align="left">_69 = &lt;String as Deref&gt;::deref(move _70)</td></tr></table>>];
    bb28__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">_68 = &amp;(*_69)<br/>StorageDead(_70)<br/></td></tr><tr><td align="left">_67 = solana_program::log::sol_log(move _68)</td></tr></table>>];
    bb29__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/></td></tr><tr><td align="left">drop(_72)</td></tr></table>>];
    bb30__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_71)<br/>StorageDead(_69)<br/>StorageDead(_67)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>_713 = const _<br/>_96 = &amp;(*_713)<br/>_95 = &amp;(*_96)<br/>_94 = move _95 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_95)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>_106 = &amp;(*_8)<br/></td></tr><tr><td align="left">_105 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _106)</td></tr></table>>];
    bb31__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/>_104 = &amp;((*_105).6: i64)<br/>_103 = &amp;(*_104)<br/></td></tr><tr><td align="left">_102 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i64&gt;(move _103)</td></tr></table>>];
    bb32__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>_109 = &amp;_7<br/>_108 = &amp;(*_109)<br/></td></tr><tr><td align="left">_107 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i64&gt;(move _108)</td></tr></table>>];
    bb33__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/>_101 = [move _102, move _107]<br/>StorageDead(_107)<br/>StorageDead(_102)<br/>_100 = &amp;_101<br/>_99 = &amp;(*_100)<br/>_98 = move _99 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_99)<br/></td></tr><tr><td align="left">_93 = Arguments::&lt;'_&gt;::new_v1(move _94, move _98)</td></tr></table>>];
    bb34__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>StorageDead(_94)<br/></td></tr><tr><td align="left">_92 = format(move _93)</td></tr></table>>];
    bb35__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageDead(_109)<br/>StorageDead(_105)<br/>StorageDead(_104)<br/>StorageDead(_101)<br/>StorageDead(_100)<br/>StorageDead(_96)<br/>_91 = move _92<br/>StorageDead(_92)<br/>_90 = &amp;_91<br/>_89 = &amp;(*_90)<br/></td></tr><tr><td align="left">_88 = &lt;String as Deref&gt;::deref(move _89)</td></tr></table>>];
    bb36__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">_87 = &amp;(*_88)<br/>StorageDead(_89)<br/></td></tr><tr><td align="left">_86 = solana_program::log::sol_log(move _87)</td></tr></table>>];
    bb37__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/></td></tr><tr><td align="left">drop(_91)</td></tr></table>>];
    bb38__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/>StorageDead(_90)<br/>StorageDead(_88)<br/>StorageDead(_86)<br/>StorageLive(_110)<br/>_110 = _66<br/>_59 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _110)<br/>StorageDead(_110)<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/></td></tr><tr><td align="left">_58 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _59)</td></tr></table>>];
    bb40__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>_111 = discriminant(_58)<br/></td></tr><tr><td align="left">switchInt(move _111)</td></tr></table>>];
    bb41__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageLive(_115)<br/>_115 = ((_58 as Continue).0: ())<br/>_57 = _115<br/>StorageDead(_115)<br/>StorageDead(_58)<br/>StorageDead(_57)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>_122 = &amp;(*_8)<br/></td></tr><tr><td align="left">_121 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _122)</td></tr></table>>];
    bb42__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageLive(_112)<br/>_112 = ((_58 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_114)<br/>_114 = _112<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _114)</td></tr></table>>];
    bb43__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/>StorageDead(_112)<br/>StorageDead(_58)<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/>_120 = (((*_121).1: state::perp_market::AMM).16: i128)<br/>_119 = Eq(move _120, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _119)</td></tr></table>>];
    bb45__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_121)<br/>StorageDead(_120)<br/>StorageLive(_123)<br/>_123 = ()<br/>_118 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _123)<br/>StorageDead(_123)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_121)<br/>StorageDead(_120)<br/>StorageLive(_124)<br/>_124 = error::ErrorCode::MarketSettlementRequiresSettledLP<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>_712 = const _<br/>_135 = &amp;(*_712)<br/>_134 = &amp;(*_135)<br/>_133 = move _134 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_134)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>_143 = &amp;_124<br/>_142 = &amp;(*_143)<br/></td></tr><tr><td align="left">_141 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _142)</td></tr></table>>];
    bb47__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_142)<br/>_140 = [move _141]<br/>StorageDead(_141)<br/>_139 = &amp;_140<br/>_138 = &amp;(*_139)<br/>_137 = move _138 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_138)<br/></td></tr><tr><td align="left">_132 = Arguments::&lt;'_&gt;::new_v1(move _133, move _137)</td></tr></table>>];
    bb48__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_137)<br/>StorageDead(_133)<br/></td></tr><tr><td align="left">_131 = format(move _132)</td></tr></table>>];
    bb49__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_132)<br/>StorageDead(_143)<br/>StorageDead(_140)<br/>StorageDead(_139)<br/>StorageDead(_135)<br/>_130 = move _131<br/>StorageDead(_131)<br/>_129 = &amp;_130<br/>_128 = &amp;(*_129)<br/></td></tr><tr><td align="left">_127 = &lt;String as Deref&gt;::deref(move _128)</td></tr></table>>];
    bb50__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">_126 = &amp;(*_127)<br/>StorageDead(_128)<br/></td></tr><tr><td align="left">_125 = solana_program::log::sol_log(move _126)</td></tr></table>>];
    bb51__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/></td></tr><tr><td align="left">drop(_130)</td></tr></table>>];
    bb52__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_130)<br/>StorageDead(_129)<br/>StorageDead(_127)<br/>StorageDead(_125)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>_146 = const &quot;Outstanding LP in market&quot;<br/>_145 = &amp;(*_146)<br/></td></tr><tr><td align="left">_144 = solana_program::log::sol_log(move _145)</td></tr></table>>];
    bb53__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_145)<br/>StorageDead(_146)<br/>StorageDead(_144)<br/>StorageLive(_147)<br/>_147 = _124<br/>_118 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _147)<br/>StorageDead(_147)<br/>StorageDead(_124)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/></td></tr><tr><td align="left">_117 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _118)</td></tr></table>>];
    bb55__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>_148 = discriminant(_117)<br/></td></tr><tr><td align="left">switchInt(move _148)</td></tr></table>>];
    bb56__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageLive(_152)<br/>_152 = ((_117 as Continue).0: ())<br/>_116 = _152<br/>StorageDead(_152)<br/>StorageDead(_117)<br/>StorageDead(_116)<br/>StorageLive(_153)<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>_157 = &amp;(*_4)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>_711 = const _<br/>_159 = &amp;(*_711)<br/>_158 = &amp;(*_159)<br/></td></tr><tr><td align="left">_156 = SpotMarketMap::&lt;'_&gt;::get_ref_mut(move _157, move _158)</td></tr></table>>];
    bb57__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageLive(_149)<br/>_149 = ((_117 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_151)<br/>_151 = _149<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _151)</td></tr></table>>];
    bb58__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_151)<br/>StorageDead(_149)<br/>StorageDead(_117)<br/>StorageDead(_116)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_158)<br/>StorageDead(_157)<br/></td></tr><tr><td align="left">_155 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _156)</td></tr></table>>];
    bb60__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_156)<br/>_161 = discriminant(_155)<br/></td></tr><tr><td align="left">switchInt(move _161)</td></tr></table>>];
    bb61__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageLive(_165)<br/>_165 = move ((_155 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_154 = move _165<br/>StorageDead(_165)<br/>_153 = &amp;mut _154<br/>_722 = discriminant(_155)<br/>StorageDead(_159)<br/>StorageDead(_155)<br/>StorageLive(_166)<br/>StorageLive(_167)<br/>StorageLive(_168)<br/>StorageLive(_169)<br/>StorageLive(_170)<br/>StorageLive(_171)<br/>StorageLive(_172)<br/>StorageLive(_173)<br/>StorageLive(_174)<br/>StorageLive(_175)<br/>StorageLive(_176)<br/>StorageLive(_177)<br/>StorageLive(_178)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>_180 = &amp;(*_8)<br/></td></tr><tr><td align="left">_179 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _180)</td></tr></table>>];
    bb62__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageLive(_162)<br/>_162 = ((_155 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_164)<br/>_164 = _162<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _164)</td></tr></table>>];
    bb63__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_164)<br/>StorageDead(_162)<br/>_720 = discriminant(_155)<br/>StorageDead(_159)<br/>StorageDead(_155)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb64__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">_178 = &amp;(*_179)<br/>StorageDead(_180)<br/></td></tr><tr><td align="left">_177 = get_total_fee_lower_bound(move _178)</td></tr></table>>];
    bb65__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_178)<br/></td></tr><tr><td align="left">_176 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _177)</td></tr></table>>];
    bb66__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_177)<br/>_181 = discriminant(_176)<br/></td></tr><tr><td align="left">switchInt(move _181)</td></tr></table>>];
    bb67__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageLive(_185)<br/>_185 = ((_176 as Continue).0: u128)<br/>_175 = _185<br/>StorageDead(_185)<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>_188 = &amp;(*_8)<br/></td></tr><tr><td align="left">_187 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _188)</td></tr></table>>];
    bb68__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageLive(_182)<br/>_182 = ((_176 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_184)<br/>_184 = _182<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _184)</td></tr></table>>];
    bb69__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_184)<br/>StorageDead(_182)<br/>StorageDead(_175)<br/>StorageDead(_174)<br/>StorageDead(_172)<br/>StorageDead(_171)<br/>StorageDead(_169)<br/>StorageDead(_168)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb70__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_188)<br/>_186 = (((*_187).1: state::perp_market::AMM).33: u128)<br/></td></tr><tr><td align="left">_174 = &lt;u128 as SafeMath&gt;::safe_add(move _175, move _186)</td></tr></table>>];
    bb71__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_186)<br/>StorageDead(_175)<br/></td></tr><tr><td align="left">_173 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _174)</td></tr></table>>];
    bb72__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_174)<br/>_189 = discriminant(_173)<br/></td></tr><tr><td align="left">switchInt(move _189)</td></tr></table>>];
    bb73__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageLive(_193)<br/>_193 = ((_173 as Continue).0: u128)<br/>_172 = _193<br/>StorageDead(_193)<br/>StorageLive(_194)<br/>StorageLive(_195)<br/>StorageLive(_196)<br/>_196 = &amp;(*_8)<br/></td></tr><tr><td align="left">_195 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _196)</td></tr></table>>];
    bb74__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageLive(_190)<br/>_190 = ((_173 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_192)<br/>_192 = _190<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _192)</td></tr></table>>];
    bb75__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_192)<br/>StorageDead(_190)<br/>StorageDead(_172)<br/>StorageDead(_171)<br/>StorageDead(_169)<br/>StorageDead(_168)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb76__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_196)<br/>_194 = (((*_195).1: state::perp_market::AMM).32: u128)<br/></td></tr><tr><td align="left">_171 = &lt;u128 as SafeMath&gt;::safe_sub(move _172, move _194)</td></tr></table>>];
    bb77__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_194)<br/>StorageDead(_172)<br/></td></tr><tr><td align="left">_170 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _171)</td></tr></table>>];
    bb78__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_171)<br/>_197 = discriminant(_170)<br/></td></tr><tr><td align="left">switchInt(move _197)</td></tr></table>>];
    bb79__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageLive(_201)<br/>_201 = ((_170 as Continue).0: u128)<br/>_169 = _201<br/>StorageDead(_201)<br/></td></tr><tr><td align="left">_168 = &lt;u128 as Cast&gt;::cast::&lt;i128&gt;(move _169)</td></tr></table>>];
    bb80__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageLive(_198)<br/>_198 = ((_170 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_200)<br/>_200 = _198<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _200)</td></tr></table>>];
    bb81__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_200)<br/>StorageDead(_198)<br/>StorageDead(_169)<br/>StorageDead(_168)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb82__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_169)<br/></td></tr><tr><td align="left">_167 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _168)</td></tr></table>>];
    bb83__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_168)<br/>_202 = discriminant(_167)<br/></td></tr><tr><td align="left">switchInt(move _202)</td></tr></table>>];
    bb84__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageLive(_206)<br/>_206 = ((_167 as Continue).0: i128)<br/>_166 = _206<br/>StorageDead(_206)<br/>StorageDead(_195)<br/>StorageDead(_187)<br/>StorageDead(_179)<br/>StorageDead(_176)<br/>StorageDead(_173)<br/>StorageDead(_170)<br/>StorageDead(_167)<br/>StorageLive(_207)<br/>StorageLive(_208)<br/>StorageLive(_209)<br/>StorageLive(_210)<br/>StorageLive(_211)<br/>StorageLive(_212)<br/>StorageLive(_213)<br/>_213 = &amp;(*_8)<br/></td></tr><tr><td align="left">_212 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _213)</td></tr></table>>];
    bb85__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageLive(_203)<br/>_203 = ((_167 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_205)<br/>_205 = _203<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _205)</td></tr></table>>];
    bb86__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_205)<br/>StorageDead(_203)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb87__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_213)<br/>_211 = (((*_212).1: state::perp_market::AMM).31: i128)<br/>StorageLive(_214)<br/>_214 = _166<br/></td></tr><tr><td align="left">_210 = &lt;i128 as SafeMath&gt;::safe_sub(move _211, move _214)</td></tr></table>>];
    bb88__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_214)<br/>StorageDead(_211)<br/></td></tr><tr><td align="left">_209 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _210)</td></tr></table>>];
    bb89__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_210)<br/>_215 = discriminant(_209)<br/></td></tr><tr><td align="left">switchInt(move _215)</td></tr></table>>];
    bb90__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageLive(_219)<br/>_219 = ((_209 as Continue).0: i128)<br/>_208 = _219<br/>StorageDead(_219)<br/></td></tr><tr><td align="left">_207 = &lt;i128 as Ord&gt;::max(move _208, const 0_i128)</td></tr></table>>];
    bb91__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageLive(_216)<br/>_216 = ((_209 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_218)<br/>_218 = _216<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _218)</td></tr></table>>];
    bb92__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_218)<br/>StorageDead(_216)<br/>StorageDead(_208)<br/>StorageDead(_212)<br/>StorageDead(_209)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb93__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_208)<br/>StorageDead(_212)<br/>StorageDead(_209)<br/>StorageLive(_220)<br/>StorageLive(_221)<br/>StorageLive(_222)<br/>StorageLive(_223)<br/>StorageLive(_224)<br/>StorageLive(_225)<br/>StorageLive(_226)<br/>StorageLive(_227)<br/>StorageLive(_228)<br/>StorageLive(_229)<br/>StorageLive(_230)<br/>StorageLive(_231)<br/>StorageLive(_232)<br/>_232 = &amp;(*_8)<br/></td></tr><tr><td align="left">_231 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _232)</td></tr></table>>];
    bb94__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_232)<br/>_230 = ((((*_231).1: state::perp_market::AMM).4: state::perp_market::PoolBalance).0: u128)<br/>StorageLive(_233)<br/>StorageLive(_234)<br/>StorageLive(_235)<br/>_235 = &amp;(*_153)<br/></td></tr><tr><td align="left">_234 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _235)</td></tr></table>>];
    bb95__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">_233 = &amp;(*_234)<br/>StorageDead(_235)<br/>StorageLive(_236)<br/>StorageLive(_237)<br/>_710 = const _<br/>_237 = &amp;(*_710)<br/>_236 = &amp;(*_237)<br/></td></tr><tr><td align="left">_229 = get_token_amount(move _230, move _233, move _236)</td></tr></table>>];
    bb96__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_236)<br/>StorageDead(_233)<br/>StorageDead(_230)<br/></td></tr><tr><td align="left">_228 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _229)</td></tr></table>>];
    bb97__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_229)<br/>_239 = discriminant(_228)<br/></td></tr><tr><td align="left">switchInt(move _239)</td></tr></table>>];
    bb98__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageLive(_243)<br/>_243 = ((_228 as Continue).0: u128)<br/>_227 = _243<br/>StorageDead(_243)<br/></td></tr><tr><td align="left">_226 = &lt;u128 as Cast&gt;::cast::&lt;i128&gt;(move _227)</td></tr></table>>];
    bb99__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageLive(_240)<br/>_240 = ((_228 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_242)<br/>_242 = _240<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _242)</td></tr></table>>];
    bb100__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_242)<br/>StorageDead(_240)<br/>StorageDead(_227)<br/>StorageDead(_226)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb101__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_227)<br/></td></tr><tr><td align="left">_225 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _226)</td></tr></table>>];
    bb102__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_226)<br/>_244 = discriminant(_225)<br/></td></tr><tr><td align="left">switchInt(move _244)</td></tr></table>>];
    bb103__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageLive(_248)<br/>_248 = ((_225 as Continue).0: i128)<br/>_224 = _248<br/>StorageDead(_248)<br/>StorageLive(_249)<br/>_249 = _166<br/></td></tr><tr><td align="left">_223 = &lt;i128 as SafeMath&gt;::safe_sub(move _224, move _249)</td></tr></table>>];
    bb104__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageLive(_245)<br/>_245 = ((_225 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_247)<br/>_247 = _245<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _247)</td></tr></table>>];
    bb105__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_247)<br/>StorageDead(_245)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb106__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_249)<br/>StorageDead(_224)<br/></td></tr><tr><td align="left">_222 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _223)</td></tr></table>>];
    bb107__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_223)<br/>_250 = discriminant(_222)<br/></td></tr><tr><td align="left">switchInt(move _250)</td></tr></table>>];
    bb108__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageLive(_254)<br/>_254 = ((_222 as Continue).0: i128)<br/>_221 = _254<br/>StorageDead(_254)<br/></td></tr><tr><td align="left">_220 = &lt;i128 as Ord&gt;::max(move _221, const 0_i128)</td></tr></table>>];
    bb109__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageLive(_251)<br/>_251 = ((_222 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_253)<br/>_253 = _251<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _253)</td></tr></table>>];
    bb110__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_253)<br/>StorageDead(_251)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb111__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_221)<br/>StorageDead(_237)<br/>StorageDead(_234)<br/>StorageDead(_231)<br/>StorageDead(_228)<br/>StorageDead(_225)<br/>StorageDead(_222)<br/>StorageLive(_255)<br/>StorageLive(_256)<br/>_256 = _207<br/>StorageLive(_257)<br/>_257 = _220<br/></td></tr><tr><td align="left">_255 = &lt;i128 as Ord&gt;::min(move _256, move _257)</td></tr></table>>];
    bb112__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageDead(_257)<br/>StorageDead(_256)<br/>StorageLive(_258)<br/>StorageLive(_259)<br/>StorageLive(_260)<br/>StorageLive(_261)<br/>StorageLive(_262)<br/>_262 = _255<br/></td></tr><tr><td align="left">_261 = core::num::&lt;impl i128&gt;::unsigned_abs(move _262)</td></tr></table>>];
    bb113__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageDead(_262)<br/>StorageLive(_263)<br/>StorageLive(_264)<br/>_709 = const _<br/>_264 = &amp;(*_709)<br/>_263 = &amp;(*_264)<br/>StorageLive(_266)<br/>StorageLive(_267)<br/>StorageLive(_268)<br/>_268 = &amp;mut (*_153)<br/></td></tr><tr><td align="left">_267 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _268)</td></tr></table>>];
    bb114__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">_266 = &amp;mut (*_267)<br/>StorageDead(_268)<br/>StorageLive(_269)<br/>StorageLive(_270)<br/>StorageLive(_271)<br/>StorageLive(_272)<br/>StorageLive(_273)<br/>_273 = &amp;mut (*_8)<br/></td></tr><tr><td align="left">_272 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _273)</td></tr></table>>];
    bb115__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageDead(_273)<br/>_271 = &amp;mut (((*_272).1: state::perp_market::AMM).4: state::perp_market::PoolBalance)<br/>_270 = &amp;mut (*_271)<br/>_269 = move _270 as &amp;mut dyn state::spot_market::SpotBalance (PointerCoercion(Unsize))<br/>StorageDead(_270)<br/></td></tr><tr><td align="left">_260 = update_spot_balances(move _261, move _263, move _266, move _269, const false)</td></tr></table>>];
    bb116__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_269)<br/>StorageDead(_266)<br/>StorageDead(_263)<br/>StorageDead(_261)<br/></td></tr><tr><td align="left">_259 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _260)</td></tr></table>>];
    bb117__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageDead(_260)<br/>_274 = discriminant(_259)<br/></td></tr><tr><td align="left">switchInt(move _274)</td></tr></table>>];
    bb118__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageLive(_278)<br/>_278 = ((_259 as Continue).0: ())<br/>_258 = _278<br/>StorageDead(_278)<br/>StorageDead(_272)<br/>StorageDead(_271)<br/>StorageDead(_267)<br/>StorageDead(_264)<br/>StorageDead(_259)<br/>StorageDead(_258)<br/>StorageLive(_279)<br/>StorageLive(_280)<br/>StorageLive(_281)<br/>StorageLive(_282)<br/>StorageLive(_283)<br/>_283 = _255<br/></td></tr><tr><td align="left">_282 = core::num::&lt;impl i128&gt;::unsigned_abs(move _283)</td></tr></table>>];
    bb119__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageLive(_275)<br/>_275 = ((_259 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_277)<br/>_277 = _275<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _277)</td></tr></table>>];
    bb120__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageDead(_277)<br/>StorageDead(_275)<br/>StorageDead(_272)<br/>StorageDead(_271)<br/>StorageDead(_267)<br/>StorageDead(_264)<br/>StorageDead(_259)<br/>StorageDead(_258)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb121__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageDead(_283)<br/>StorageLive(_284)<br/>StorageLive(_285)<br/>_708 = const _<br/>_285 = &amp;(*_708)<br/>_284 = &amp;(*_285)<br/>StorageLive(_287)<br/>StorageLive(_288)<br/>StorageLive(_289)<br/>_289 = &amp;mut (*_153)<br/></td></tr><tr><td align="left">_288 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _289)</td></tr></table>>];
    bb122__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">_287 = &amp;mut (*_288)<br/>StorageDead(_289)<br/>StorageLive(_290)<br/>StorageLive(_291)<br/>StorageLive(_292)<br/>StorageLive(_293)<br/>StorageLive(_294)<br/>_294 = &amp;mut (*_8)<br/></td></tr><tr><td align="left">_293 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _294)</td></tr></table>>];
    bb123__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageDead(_294)<br/>_292 = &amp;mut ((*_293).2: state::perp_market::PoolBalance)<br/>_291 = &amp;mut (*_292)<br/>_290 = move _291 as &amp;mut dyn state::spot_market::SpotBalance (PointerCoercion(Unsize))<br/>StorageDead(_291)<br/></td></tr><tr><td align="left">_281 = update_spot_balances(move _282, move _284, move _287, move _290, const false)</td></tr></table>>];
    bb124__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageDead(_290)<br/>StorageDead(_287)<br/>StorageDead(_284)<br/>StorageDead(_282)<br/></td></tr><tr><td align="left">_280 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _281)</td></tr></table>>];
    bb125__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageDead(_281)<br/>_295 = discriminant(_280)<br/></td></tr><tr><td align="left">switchInt(move _295)</td></tr></table>>];
    bb126__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageLive(_299)<br/>_299 = ((_280 as Continue).0: ())<br/>_279 = _299<br/>StorageDead(_299)<br/>StorageDead(_293)<br/>StorageDead(_292)<br/>StorageDead(_288)<br/>StorageDead(_285)<br/>StorageDead(_280)<br/>StorageDead(_279)<br/>StorageLive(_300)<br/>StorageLive(_301)<br/>StorageLive(_302)<br/>_302 = _207<br/>_301 = Gt(move _302, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _301)</td></tr></table>>];
    bb127__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageLive(_296)<br/>_296 = ((_280 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_298)<br/>_298 = _296<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _298)</td></tr></table>>];
    bb128__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageDead(_298)<br/>StorageDead(_296)<br/>StorageDead(_293)<br/>StorageDead(_292)<br/>StorageDead(_288)<br/>StorageDead(_285)<br/>StorageDead(_280)<br/>StorageDead(_279)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb129__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">StorageDead(_302)<br/>StorageLive(_305)<br/>StorageLive(_306)<br/>StorageLive(_307)<br/>StorageLive(_308)<br/>StorageLive(_309)<br/>StorageLive(_310)<br/>_310 = &amp;mut (*_8)<br/></td></tr><tr><td align="left">_309 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _310)</td></tr></table>>];
    bb130__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageDead(_302)<br/>_300 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb131__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">_308 = &amp;mut (*_309)<br/>StorageDead(_310)<br/>StorageLive(_311)<br/>StorageLive(_312)<br/>StorageLive(_313)<br/>StorageLive(_314)<br/>_314 = _207<br/></td></tr><tr><td align="left">_313 = &lt;i128 as Cast&gt;::cast::&lt;i128&gt;(move _314)</td></tr></table>>];
    bb132__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageDead(_314)<br/></td></tr><tr><td align="left">_312 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _313)</td></tr></table>>];
    bb133__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageDead(_313)<br/>_315 = discriminant(_312)<br/></td></tr><tr><td align="left">switchInt(move _315)</td></tr></table>>];
    bb134__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageLive(_319)<br/>_319 = ((_312 as Continue).0: i128)<br/>_311 = _319<br/>StorageDead(_319)<br/>StorageLive(_320)<br/>_321 = CheckedMul(const _, const 100_i128)<br/></td></tr><tr><td align="left">assert(!move (_321.1: bool), &quot;attempt to compute `{} * {}`, which would overflow&quot;, const _, const 100_i128)</td></tr></table>>];
    bb135__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageLive(_316)<br/>_316 = ((_312 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_318)<br/>_318 = _316<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _318)</td></tr></table>>];
    bb136__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageDead(_318)<br/>StorageDead(_316)<br/>StorageDead(_311)<br/>StorageDead(_308)<br/>StorageDead(_307)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb137__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">_320 = move (_321.0: i128)<br/></td></tr><tr><td align="left">_307 = calculate_budgeted_k_scale(move _308, move _311, move _320, const _)</td></tr></table>>];
    bb138__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">StorageDead(_320)<br/>StorageDead(_311)<br/>StorageDead(_308)<br/></td></tr><tr><td align="left">_306 = &lt;std::result::Result&lt;(u128, u128), error::ErrorCode&gt; as Try&gt;::branch(move _307)</td></tr></table>>];
    bb139__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">StorageDead(_307)<br/>_322 = discriminant(_306)<br/></td></tr><tr><td align="left">switchInt(move _322)</td></tr></table>>];
    bb140__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">StorageLive(_326)<br/>_326 = ((_306 as Continue).0: (u128, u128))<br/>_305 = _326<br/>StorageDead(_326)<br/>StorageLive(_303)<br/>_303 = (_305.0: u128)<br/>StorageLive(_304)<br/>_304 = (_305.1: u128)<br/>StorageDead(_312)<br/>StorageDead(_309)<br/>StorageDead(_306)<br/>StorageDead(_305)<br/>StorageLive(_327)<br/>StorageLive(_328)<br/>StorageLive(_329)<br/>StorageLive(_330)<br/>StorageLive(_331)<br/>StorageLive(_332)<br/>StorageLive(_333)<br/>StorageLive(_334)<br/>StorageLive(_335)<br/>StorageLive(_336)<br/>StorageLive(_337)<br/>_337 = &amp;(*_8)<br/></td></tr><tr><td align="left">_336 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _337)</td></tr></table>>];
    bb141__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">StorageLive(_323)<br/>_323 = ((_306 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_325)<br/>_325 = _323<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _325)</td></tr></table>>];
    bb142__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageDead(_325)<br/>StorageDead(_323)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb143__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageDead(_337)<br/>_335 = (((*_336).1: state::perp_market::AMM).10: u128)<br/></td></tr><tr><td align="left">_334 = &lt;U192 as From&lt;u128&gt;&gt;::from(move _335)</td></tr></table>>];
    bb144__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">StorageDead(_335)<br/>StorageLive(_338)<br/>StorageLive(_339)<br/>_339 = _303<br/></td></tr><tr><td align="left">_338 = &lt;U192 as From&lt;u128&gt;&gt;::from(move _339)</td></tr></table>>];
    bb145__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageDead(_339)<br/></td></tr><tr><td align="left">_333 = &lt;U192 as SafeMath&gt;::safe_mul(move _334, move _338)</td></tr></table>>];
    bb146__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">StorageDead(_338)<br/>StorageDead(_334)<br/></td></tr><tr><td align="left">_332 = &lt;std::result::Result&lt;U192, error::ErrorCode&gt; as Try&gt;::branch(move _333)</td></tr></table>>];
    bb147__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left" balign="left">StorageDead(_333)<br/>_340 = discriminant(_332)<br/></td></tr><tr><td align="left">switchInt(move _340)</td></tr></table>>];
    bb148__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left" balign="left">StorageLive(_344)<br/>_344 = ((_332 as Continue).0: math::bn::U192)<br/>_331 = _344<br/>StorageDead(_344)<br/>StorageLive(_345)<br/>StorageLive(_346)<br/>_346 = _304<br/></td></tr><tr><td align="left">_345 = &lt;U192 as From&lt;u128&gt;&gt;::from(move _346)</td></tr></table>>];
    bb149__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">149</td></tr><tr><td align="left" balign="left">StorageLive(_341)<br/>_341 = ((_332 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_343)<br/>_343 = _341<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _343)</td></tr></table>>];
    bb150__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">150</td></tr><tr><td align="left" balign="left">StorageDead(_343)<br/>StorageDead(_341)<br/>StorageDead(_331)<br/>StorageDead(_330)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb151__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">151</td></tr><tr><td align="left" balign="left">StorageDead(_346)<br/></td></tr><tr><td align="left">_330 = &lt;U192 as SafeMath&gt;::safe_div(move _331, move _345)</td></tr></table>>];
    bb152__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">152</td></tr><tr><td align="left" balign="left">StorageDead(_345)<br/>StorageDead(_331)<br/></td></tr><tr><td align="left">_329 = &lt;std::result::Result&lt;U192, error::ErrorCode&gt; as Try&gt;::branch(move _330)</td></tr></table>>];
    bb153__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">153</td></tr><tr><td align="left" balign="left">StorageDead(_330)<br/>_347 = discriminant(_329)<br/></td></tr><tr><td align="left">switchInt(move _347)</td></tr></table>>];
    bb154__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">154</td></tr><tr><td align="left" balign="left">StorageLive(_351)<br/>_351 = ((_329 as Continue).0: math::bn::U192)<br/>_328 = _351<br/>StorageDead(_351)<br/>StorageLive(_352)<br/></td></tr><tr><td align="left">_352 = &lt;U192 as From&lt;u128&gt;&gt;::from(const _)</td></tr></table>>];
    bb155__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">155</td></tr><tr><td align="left" balign="left">StorageLive(_348)<br/>_348 = ((_329 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_350)<br/>_350 = _348<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _350)</td></tr></table>>];
    bb156__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">156</td></tr><tr><td align="left" balign="left">StorageDead(_350)<br/>StorageDead(_348)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb157__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">157</td></tr><tr><td align="left">_327 = &lt;U192 as Ord&gt;::min(move _328, move _352)</td></tr></table>>];
    bb158__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">158</td></tr><tr><td align="left" balign="left">StorageDead(_352)<br/>StorageDead(_328)<br/>StorageDead(_336)<br/>StorageDead(_332)<br/>StorageDead(_329)<br/>StorageLive(_353)<br/>StorageLive(_354)<br/>StorageLive(_355)<br/>StorageLive(_356)<br/>StorageLive(_357)<br/>StorageLive(_358)<br/>_358 = &amp;(*_8)<br/></td></tr><tr><td align="left">_357 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _358)</td></tr></table>>];
    bb159__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">159</td></tr><tr><td align="left" balign="left">_356 = &amp;(*_357)<br/>StorageDead(_358)<br/>StorageLive(_359)<br/>_359 = _327<br/></td></tr><tr><td align="left">_355 = get_update_k_result(move _356, move _359, const true)</td></tr></table>>];
    bb160__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">160</td></tr><tr><td align="left" balign="left">StorageDead(_359)<br/>StorageDead(_356)<br/></td></tr><tr><td align="left">_354 = &lt;std::result::Result&lt;UpdateKResult, error::ErrorCode&gt; as Try&gt;::branch(move _355)</td></tr></table>>];
    bb161__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">161</td></tr><tr><td align="left" balign="left">StorageDead(_355)<br/>_360 = discriminant(_354)<br/></td></tr><tr><td align="left">switchInt(move _360)</td></tr></table>>];
    bb162__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">162</td></tr><tr><td align="left" balign="left">StorageLive(_364)<br/>_364 = move ((_354 as Continue).0: math::cp_curve::UpdateKResult)<br/>_353 = move _364<br/>StorageDead(_364)<br/>StorageDead(_357)<br/>StorageDead(_354)<br/>StorageLive(_365)<br/>StorageLive(_366)<br/>StorageLive(_367)<br/>StorageLive(_368)<br/>StorageLive(_369)<br/>StorageLive(_370)<br/>_370 = &amp;mut (*_8)<br/></td></tr><tr><td align="left">_369 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _370)</td></tr></table>>];
    bb163__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">163</td></tr><tr><td align="left" balign="left">StorageLive(_361)<br/>_361 = ((_354 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_363)<br/>_363 = _361<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _363)</td></tr></table>>];
    bb164__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">164</td></tr><tr><td align="left" balign="left">StorageDead(_363)<br/>StorageDead(_361)<br/>StorageDead(_357)<br/>StorageDead(_354)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb165__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">165</td></tr><tr><td align="left" balign="left">_368 = &amp;mut (*_369)<br/>StorageDead(_370)<br/>StorageLive(_371)<br/>StorageLive(_372)<br/>_372 = &amp;_353<br/>_371 = &amp;(*_372)<br/></td></tr><tr><td align="left">_367 = adjust_k_cost(move _368, move _371)</td></tr></table>>];
    bb166__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">166</td></tr><tr><td align="left" balign="left">StorageDead(_371)<br/>StorageDead(_368)<br/></td></tr><tr><td align="left">_366 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _367)</td></tr></table>>];
    bb167__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">167</td></tr><tr><td align="left" balign="left">StorageDead(_367)<br/>_373 = discriminant(_366)<br/></td></tr><tr><td align="left">switchInt(move _373)</td></tr></table>>];
    bb168__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">168</td></tr><tr><td align="left" balign="left">StorageLive(_377)<br/>_377 = ((_366 as Continue).0: i128)<br/>_365 = _377<br/>StorageDead(_377)<br/>StorageDead(_372)<br/>StorageDead(_369)<br/>StorageDead(_366)<br/>StorageLive(_378)<br/>StorageLive(_379)<br/>StorageLive(_380)<br/>StorageLive(_381)<br/>StorageLive(_382)<br/>StorageLive(_383)<br/>_383 = &amp;mut (*_8)<br/></td></tr><tr><td align="left">_382 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _383)</td></tr></table>>];
    bb169__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">169</td></tr><tr><td align="left" balign="left">StorageLive(_374)<br/>_374 = ((_366 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_376)<br/>_376 = _374<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _376)</td></tr></table>>];
    bb170__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">170</td></tr><tr><td align="left" balign="left">StorageDead(_376)<br/>StorageDead(_374)<br/>StorageDead(_372)<br/>StorageDead(_369)<br/>StorageDead(_366)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb171__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">171</td></tr><tr><td align="left" balign="left">_381 = &amp;mut (*_382)<br/>StorageDead(_383)<br/>StorageLive(_384)<br/>_384 = _365<br/></td></tr><tr><td align="left">_380 = apply_cost_to_market(move _381, move _384, const true)</td></tr></table>>];
    bb172__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">172</td></tr><tr><td align="left" balign="left">StorageDead(_384)<br/>StorageDead(_381)<br/></td></tr><tr><td align="left">_379 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _380)</td></tr></table>>];
    bb173__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">173</td></tr><tr><td align="left" balign="left">StorageDead(_380)<br/>_385 = discriminant(_379)<br/></td></tr><tr><td align="left">switchInt(move _385)</td></tr></table>>];
    bb174__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">174</td></tr><tr><td align="left" balign="left">StorageLive(_389)<br/>_389 = ((_379 as Continue).0: bool)<br/>_378 = _389<br/>StorageDead(_389)<br/>StorageDead(_382)<br/>StorageDead(_379)<br/>StorageLive(_390)<br/>StorageLive(_391)<br/>StorageLive(_392)<br/>StorageLive(_393)<br/>_393 = _378<br/></td></tr><tr><td align="left">switchInt(move _393)</td></tr></table>>];
    bb175__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">175</td></tr><tr><td align="left" balign="left">StorageLive(_386)<br/>_386 = ((_379 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_388)<br/>_388 = _386<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _388)</td></tr></table>>];
    bb176__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">176</td></tr><tr><td align="left" balign="left">StorageDead(_388)<br/>StorageDead(_386)<br/>StorageDead(_382)<br/>StorageDead(_379)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb177__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">177</td></tr><tr><td align="left" balign="left">StorageLive(_394)<br/>_394 = ()<br/>_392 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _394)<br/>StorageDead(_394)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb178__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">178</td></tr><tr><td align="left" balign="left">StorageLive(_395)<br/>_395 = error::ErrorCode::InvalidUpdateK<br/>StorageLive(_396)<br/>StorageLive(_397)<br/>StorageLive(_398)<br/>StorageLive(_399)<br/>StorageLive(_400)<br/>StorageLive(_401)<br/>StorageLive(_402)<br/>StorageLive(_403)<br/>StorageLive(_404)<br/>StorageLive(_405)<br/>StorageLive(_406)<br/>_707 = const _<br/>_406 = &amp;(*_707)<br/>_405 = &amp;(*_406)<br/>_404 = move _405 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_405)<br/>StorageLive(_408)<br/>StorageLive(_409)<br/>StorageLive(_410)<br/>StorageLive(_411)<br/>StorageLive(_412)<br/>StorageLive(_413)<br/>StorageLive(_414)<br/>_414 = &amp;_395<br/>_413 = &amp;(*_414)<br/></td></tr><tr><td align="left">_412 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _413)</td></tr></table>>];
    bb179__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">179</td></tr><tr><td align="left" balign="left">StorageDead(_413)<br/>_411 = [move _412]<br/>StorageDead(_412)<br/>_410 = &amp;_411<br/>_409 = &amp;(*_410)<br/>_408 = move _409 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_409)<br/></td></tr><tr><td align="left">_403 = Arguments::&lt;'_&gt;::new_v1(move _404, move _408)</td></tr></table>>];
    bb180__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">180</td></tr><tr><td align="left" balign="left">StorageDead(_408)<br/>StorageDead(_404)<br/></td></tr><tr><td align="left">_402 = format(move _403)</td></tr></table>>];
    bb181__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">181</td></tr><tr><td align="left" balign="left">StorageDead(_403)<br/>StorageDead(_414)<br/>StorageDead(_411)<br/>StorageDead(_410)<br/>StorageDead(_406)<br/>_401 = move _402<br/>StorageDead(_402)<br/>_400 = &amp;_401<br/>_399 = &amp;(*_400)<br/></td></tr><tr><td align="left">_398 = &lt;String as Deref&gt;::deref(move _399)</td></tr></table>>];
    bb182__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">182</td></tr><tr><td align="left" balign="left">_397 = &amp;(*_398)<br/>StorageDead(_399)<br/></td></tr><tr><td align="left">_396 = solana_program::log::sol_log(move _397)</td></tr></table>>];
    bb183__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">183</td></tr><tr><td align="left" balign="left">StorageDead(_397)<br/></td></tr><tr><td align="left">drop(_401)</td></tr></table>>];
    bb184__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">184</td></tr><tr><td align="left" balign="left">StorageDead(_401)<br/>StorageDead(_400)<br/>StorageDead(_398)<br/>StorageDead(_396)<br/>StorageLive(_415)<br/>StorageLive(_416)<br/>StorageLive(_417)<br/>_417 = const &quot;Issue applying k increase on market&quot;<br/>_416 = &amp;(*_417)<br/></td></tr><tr><td align="left">_415 = solana_program::log::sol_log(move _416)</td></tr></table>>];
    bb185__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">185</td></tr><tr><td align="left" balign="left">StorageDead(_416)<br/>StorageDead(_417)<br/>StorageDead(_415)<br/>StorageLive(_418)<br/>_418 = _395<br/>_392 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _418)<br/>StorageDead(_418)<br/>StorageDead(_395)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb186__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">186</td></tr><tr><td align="left" balign="left">StorageDead(_393)<br/></td></tr><tr><td align="left">_391 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _392)</td></tr></table>>];
    bb187__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">187</td></tr><tr><td align="left" balign="left">StorageDead(_392)<br/>_419 = discriminant(_391)<br/></td></tr><tr><td align="left">switchInt(move _419)</td></tr></table>>];
    bb188__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">188</td></tr><tr><td align="left" balign="left">StorageLive(_423)<br/>_423 = ((_391 as Continue).0: ())<br/>_390 = _423<br/>StorageDead(_423)<br/>StorageDead(_391)<br/>StorageDead(_390)<br/>StorageLive(_424)<br/>_424 = _378<br/></td></tr><tr><td align="left">switchInt(move _424)</td></tr></table>>];
    bb189__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">189</td></tr><tr><td align="left" balign="left">StorageLive(_420)<br/>_420 = ((_391 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_422)<br/>_422 = _420<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _422)</td></tr></table>>];
    bb190__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">190</td></tr><tr><td align="left" balign="left">StorageDead(_422)<br/>StorageDead(_420)<br/>StorageDead(_391)<br/>StorageDead(_390)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb191__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">191</td></tr><tr><td align="left" balign="left">StorageLive(_425)<br/>StorageLive(_426)<br/>StorageLive(_427)<br/>StorageLive(_428)<br/>StorageLive(_429)<br/>StorageLive(_430)<br/>_430 = &amp;mut (*_8)<br/></td></tr><tr><td align="left">_429 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _430)</td></tr></table>>];
    bb192__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">192</td></tr><tr><td align="left" balign="left">_300 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb193__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">193</td></tr><tr><td align="left" balign="left">_428 = &amp;mut (*_429)<br/>StorageDead(_430)<br/>StorageLive(_431)<br/>StorageLive(_432)<br/>_432 = &amp;_353<br/>_431 = &amp;(*_432)<br/></td></tr><tr><td align="left">_427 = cp_curve::update_k(move _428, move _431)</td></tr></table>>];
    bb194__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">194</td></tr><tr><td align="left" balign="left">StorageDead(_431)<br/>StorageDead(_428)<br/></td></tr><tr><td align="left">_426 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _427)</td></tr></table>>];
    bb195__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">195</td></tr><tr><td align="left" balign="left">StorageDead(_427)<br/>_433 = discriminant(_426)<br/></td></tr><tr><td align="left">switchInt(move _433)</td></tr></table>>];
    bb196__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">196</td></tr><tr><td align="left" balign="left">StorageLive(_437)<br/>_437 = ((_426 as Continue).0: ())<br/>_425 = _437<br/>StorageDead(_437)<br/>StorageDead(_432)<br/>StorageDead(_429)<br/>StorageDead(_426)<br/>StorageDead(_425)<br/>_300 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb197__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">197</td></tr><tr><td align="left" balign="left">StorageLive(_434)<br/>_434 = ((_426 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_436)<br/>_436 = _434<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _436)</td></tr></table>>];
    bb198__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">198</td></tr><tr><td align="left" balign="left">StorageDead(_436)<br/>StorageDead(_434)<br/>StorageDead(_432)<br/>StorageDead(_429)<br/>StorageDead(_426)<br/>StorageDead(_425)<br/>StorageDead(_424)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb199__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">199</td></tr><tr><td align="left" balign="left">StorageDead(_424)<br/>StorageDead(_378)<br/>StorageDead(_365)<br/>StorageDead(_353)<br/>StorageDead(_327)<br/>StorageDead(_304)<br/>StorageDead(_303)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb200__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">200</td></tr><tr><td align="left" balign="left">StorageDead(_301)<br/>StorageDead(_300)<br/>StorageLive(_438)<br/>StorageLive(_439)<br/>StorageLive(_440)<br/>StorageLive(_441)<br/>StorageLive(_442)<br/>StorageLive(_443)<br/>StorageLive(_444)<br/>StorageLive(_445)<br/>_445 = &amp;(*_153)<br/></td></tr><tr><td align="left">_444 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _445)</td></tr></table>>];
    bb201__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">201</td></tr><tr><td align="left" balign="left">StorageDead(_445)<br/>_443 = ((*_444).41: u32)<br/></td></tr><tr><td align="left">_442 = core::num::&lt;impl u128&gt;::pow(const 10_u128, move _443)</td></tr></table>>];
    bb202__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">202</td></tr><tr><td align="left" balign="left">StorageDead(_443)<br/>_441 = Eq(move _442, const _)<br/></td></tr><tr><td align="left">switchInt(move _441)</td></tr></table>>];
    bb203__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">203</td></tr><tr><td align="left" balign="left">StorageDead(_444)<br/>StorageDead(_442)<br/>StorageLive(_446)<br/>_446 = ()<br/>_440 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _446)<br/>StorageDead(_446)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb204__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">204</td></tr><tr><td align="left" balign="left">StorageDead(_444)<br/>StorageDead(_442)<br/>StorageLive(_447)<br/>_447 = error::ErrorCode::UnsupportedSpotMarket<br/>StorageLive(_448)<br/>StorageLive(_449)<br/>StorageLive(_450)<br/>StorageLive(_451)<br/>StorageLive(_452)<br/>StorageLive(_453)<br/>StorageLive(_454)<br/>StorageLive(_455)<br/>StorageLive(_456)<br/>StorageLive(_457)<br/>StorageLive(_458)<br/>_706 = const _<br/>_458 = &amp;(*_706)<br/>_457 = &amp;(*_458)<br/>_456 = move _457 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_457)<br/>StorageLive(_460)<br/>StorageLive(_461)<br/>StorageLive(_462)<br/>StorageLive(_463)<br/>StorageLive(_464)<br/>StorageLive(_465)<br/>StorageLive(_466)<br/>_466 = &amp;_447<br/>_465 = &amp;(*_466)<br/></td></tr><tr><td align="left">_464 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _465)</td></tr></table>>];
    bb205__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">205</td></tr><tr><td align="left" balign="left">StorageDead(_465)<br/>_463 = [move _464]<br/>StorageDead(_464)<br/>_462 = &amp;_463<br/>_461 = &amp;(*_462)<br/>_460 = move _461 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_461)<br/></td></tr><tr><td align="left">_455 = Arguments::&lt;'_&gt;::new_v1(move _456, move _460)</td></tr></table>>];
    bb206__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">206</td></tr><tr><td align="left" balign="left">StorageDead(_460)<br/>StorageDead(_456)<br/></td></tr><tr><td align="left">_454 = format(move _455)</td></tr></table>>];
    bb207__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">207</td></tr><tr><td align="left" balign="left">StorageDead(_455)<br/>StorageDead(_466)<br/>StorageDead(_463)<br/>StorageDead(_462)<br/>StorageDead(_458)<br/>_453 = move _454<br/>StorageDead(_454)<br/>_452 = &amp;_453<br/>_451 = &amp;(*_452)<br/></td></tr><tr><td align="left">_450 = &lt;String as Deref&gt;::deref(move _451)</td></tr></table>>];
    bb208__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">208</td></tr><tr><td align="left" balign="left">_449 = &amp;(*_450)<br/>StorageDead(_451)<br/></td></tr><tr><td align="left">_448 = solana_program::log::sol_log(move _449)</td></tr></table>>];
    bb209__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">209</td></tr><tr><td align="left" balign="left">StorageDead(_449)<br/></td></tr><tr><td align="left">drop(_453)</td></tr></table>>];
    bb210__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">210</td></tr><tr><td align="left" balign="left">StorageDead(_453)<br/>StorageDead(_452)<br/>StorageDead(_450)<br/>StorageDead(_448)<br/>StorageLive(_467)<br/>StorageLive(_468)<br/>StorageLive(_469)<br/>_469 = const &quot;Only support bank.decimals == QUOTE_PRECISION&quot;<br/>_468 = &amp;(*_469)<br/></td></tr><tr><td align="left">_467 = solana_program::log::sol_log(move _468)</td></tr></table>>];
    bb211__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">211</td></tr><tr><td align="left" balign="left">StorageDead(_468)<br/>StorageDead(_469)<br/>StorageDead(_467)<br/>StorageLive(_470)<br/>_470 = _447<br/>_440 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _470)<br/>StorageDead(_470)<br/>StorageDead(_447)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb212__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">212</td></tr><tr><td align="left" balign="left">StorageDead(_441)<br/></td></tr><tr><td align="left">_439 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _440)</td></tr></table>>];
    bb213__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">213</td></tr><tr><td align="left" balign="left">StorageDead(_440)<br/>_471 = discriminant(_439)<br/></td></tr><tr><td align="left">switchInt(move _471)</td></tr></table>>];
    bb214__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">214</td></tr><tr><td align="left" balign="left">StorageLive(_475)<br/>_475 = ((_439 as Continue).0: ())<br/>_438 = _475<br/>StorageDead(_475)<br/>StorageDead(_439)<br/>StorageDead(_438)<br/>StorageLive(_476)<br/>StorageLive(_477)<br/>StorageLive(_478)<br/>StorageLive(_479)<br/>StorageLive(_480)<br/>_480 = &amp;(*_8)<br/></td></tr><tr><td align="left">_479 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _480)</td></tr></table>>];
    bb215__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">215</td></tr><tr><td align="left" balign="left">StorageLive(_472)<br/>_472 = ((_439 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_474)<br/>_474 = _472<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _474)</td></tr></table>>];
    bb216__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">216</td></tr><tr><td align="left" balign="left">StorageDead(_474)<br/>StorageDead(_472)<br/>StorageDead(_439)<br/>StorageDead(_438)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb217__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">217</td></tr><tr><td align="left" balign="left">StorageDead(_480)<br/>_478 = &amp;(((*_479).1: state::perp_market::AMM).72: state::oracle::OracleSource)<br/>StorageLive(_481)<br/>_705 = const _<br/>_481 = &amp;(*_705)<br/></td></tr><tr><td align="left">_477 = &lt;state::oracle::OracleSource as PartialEq&gt;::eq(move _478, move _481)</td></tr></table>>];
    bb218__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">218</td></tr><tr><td align="left">switchInt(move _477)</td></tr></table>>];
    bb219__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">219</td></tr><tr><td align="left" balign="left">StorageDead(_481)<br/>StorageDead(_479)<br/>StorageDead(_478)<br/>StorageLive(_483)<br/>StorageLive(_484)<br/>_484 = &amp;(*_8)<br/></td></tr><tr><td align="left">_483 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _484)</td></tr></table>>];
    bb220__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">220</td></tr><tr><td align="left" balign="left">StorageDead(_484)<br/>_476 = ((((*_483).1: state::perp_market::AMM).1: state::oracle::HistoricalOracleData).0: i64)<br/>StorageDead(_483)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb221__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">221</td></tr><tr><td align="left" balign="left">StorageDead(_481)<br/>StorageDead(_479)<br/>StorageDead(_478)<br/>StorageLive(_485)<br/>StorageLive(_486)<br/>_486 = &amp;(*_8)<br/></td></tr><tr><td align="left">_485 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _486)</td></tr></table>>];
    bb222__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">222</td></tr><tr><td align="left" balign="left">StorageDead(_486)<br/>_476 = ((((*_485).1: state::perp_market::AMM).1: state::oracle::HistoricalOracleData).3: i64)<br/>StorageDead(_485)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb223__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">223</td></tr><tr><td align="left" balign="left">StorageDead(_477)<br/>StorageLive(_487)<br/>StorageLive(_488)<br/>StorageLive(_489)<br/>StorageLive(_490)<br/>StorageLive(_491)<br/>StorageLive(_492)<br/>StorageLive(_493)<br/>StorageLive(_494)<br/>StorageLive(_495)<br/>StorageLive(_496)<br/>StorageLive(_497)<br/>StorageLive(_498)<br/>_704 = const _<br/>_498 = &amp;(*_704)<br/>_497 = &amp;(*_498)<br/>_496 = move _497 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_497)<br/>StorageLive(_500)<br/>StorageLive(_501)<br/>StorageLive(_502)<br/>StorageLive(_503)<br/>StorageLive(_504)<br/>StorageLive(_505)<br/>StorageLive(_506)<br/>_506 = &amp;_476<br/>_505 = &amp;(*_506)<br/></td></tr><tr><td align="left">_504 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i64&gt;(move _505)</td></tr></table>>];
    bb224__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">224</td></tr><tr><td align="left" balign="left">StorageDead(_505)<br/>_503 = [move _504]<br/>StorageDead(_504)<br/>_502 = &amp;_503<br/>_501 = &amp;(*_502)<br/>_500 = move _501 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_501)<br/></td></tr><tr><td align="left">_495 = Arguments::&lt;'_&gt;::new_v1(move _496, move _500)</td></tr></table>>];
    bb225__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">225</td></tr><tr><td align="left" balign="left">StorageDead(_500)<br/>StorageDead(_496)<br/></td></tr><tr><td align="left">_494 = format(move _495)</td></tr></table>>];
    bb226__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">226</td></tr><tr><td align="left" balign="left">StorageDead(_495)<br/>StorageDead(_506)<br/>StorageDead(_503)<br/>StorageDead(_502)<br/>StorageDead(_498)<br/>_493 = move _494<br/>StorageDead(_494)<br/>_492 = &amp;_493<br/>_491 = &amp;(*_492)<br/></td></tr><tr><td align="left">_490 = &lt;String as Deref&gt;::deref(move _491)</td></tr></table>>];
    bb227__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">227</td></tr><tr><td align="left" balign="left">_489 = &amp;(*_490)<br/>StorageDead(_491)<br/></td></tr><tr><td align="left">_488 = solana_program::log::sol_log(move _489)</td></tr></table>>];
    bb228__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">228</td></tr><tr><td align="left" balign="left">StorageDead(_489)<br/></td></tr><tr><td align="left">drop(_493)</td></tr></table>>];
    bb229__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">229</td></tr><tr><td align="left" balign="left">StorageDead(_493)<br/>StorageDead(_492)<br/>StorageDead(_490)<br/>StorageDead(_488)<br/>_487 = const ()<br/>StorageDead(_487)<br/>StorageLive(_507)<br/>StorageLive(_508)<br/>StorageLive(_509)<br/>StorageLive(_510)<br/>StorageLive(_511)<br/>_511 = _476<br/>_510 = Gt(move _511, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _510)</td></tr></table>>];
    bb230__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">230</td></tr><tr><td align="left" balign="left">StorageDead(_511)<br/>StorageLive(_512)<br/>_512 = ()<br/>_509 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _512)<br/>StorageDead(_512)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb231__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">231</td></tr><tr><td align="left" balign="left">StorageDead(_511)<br/>StorageLive(_513)<br/>_513 = error::ErrorCode::MarketSettlementTargetPriceInvalid<br/>StorageLive(_514)<br/>StorageLive(_515)<br/>StorageLive(_516)<br/>StorageLive(_517)<br/>StorageLive(_518)<br/>StorageLive(_519)<br/>StorageLive(_520)<br/>StorageLive(_521)<br/>StorageLive(_522)<br/>StorageLive(_523)<br/>StorageLive(_524)<br/>_703 = const _<br/>_524 = &amp;(*_703)<br/>_523 = &amp;(*_524)<br/>_522 = move _523 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_523)<br/>StorageLive(_526)<br/>StorageLive(_527)<br/>StorageLive(_528)<br/>StorageLive(_529)<br/>StorageLive(_530)<br/>StorageLive(_531)<br/>StorageLive(_532)<br/>_532 = &amp;_513<br/>_531 = &amp;(*_532)<br/></td></tr><tr><td align="left">_530 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _531)</td></tr></table>>];
    bb232__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">232</td></tr><tr><td align="left" balign="left">StorageDead(_531)<br/>_529 = [move _530]<br/>StorageDead(_530)<br/>_528 = &amp;_529<br/>_527 = &amp;(*_528)<br/>_526 = move _527 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_527)<br/></td></tr><tr><td align="left">_521 = Arguments::&lt;'_&gt;::new_v1(move _522, move _526)</td></tr></table>>];
    bb233__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">233</td></tr><tr><td align="left" balign="left">StorageDead(_526)<br/>StorageDead(_522)<br/></td></tr><tr><td align="left">_520 = format(move _521)</td></tr></table>>];
    bb234__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">234</td></tr><tr><td align="left" balign="left">StorageDead(_521)<br/>StorageDead(_532)<br/>StorageDead(_529)<br/>StorageDead(_528)<br/>StorageDead(_524)<br/>_519 = move _520<br/>StorageDead(_520)<br/>_518 = &amp;_519<br/>_517 = &amp;(*_518)<br/></td></tr><tr><td align="left">_516 = &lt;String as Deref&gt;::deref(move _517)</td></tr></table>>];
    bb235__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">235</td></tr><tr><td align="left" balign="left">_515 = &amp;(*_516)<br/>StorageDead(_517)<br/></td></tr><tr><td align="left">_514 = solana_program::log::sol_log(move _515)</td></tr></table>>];
    bb236__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">236</td></tr><tr><td align="left" balign="left">StorageDead(_515)<br/></td></tr><tr><td align="left">drop(_519)</td></tr></table>>];
    bb237__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">237</td></tr><tr><td align="left" balign="left">StorageDead(_519)<br/>StorageDead(_518)<br/>StorageDead(_516)<br/>StorageDead(_514)<br/>StorageLive(_533)<br/>StorageLive(_534)<br/>StorageLive(_535)<br/>StorageLive(_536)<br/>StorageLive(_537)<br/>StorageLive(_538)<br/>StorageLive(_539)<br/>StorageLive(_540)<br/>StorageLive(_541)<br/>StorageLive(_542)<br/>StorageLive(_543)<br/>_702 = const _<br/>_543 = &amp;(*_702)<br/>_542 = &amp;(*_543)<br/>_541 = move _542 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_542)<br/>StorageLive(_545)<br/>StorageLive(_546)<br/>StorageLive(_547)<br/>StorageLive(_548)<br/>StorageLive(_549)<br/>StorageLive(_550)<br/>StorageLive(_551)<br/>_551 = &amp;_476<br/>_550 = &amp;(*_551)<br/></td></tr><tr><td align="left">_549 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i64&gt;(move _550)</td></tr></table>>];
    bb238__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">238</td></tr><tr><td align="left" balign="left">StorageDead(_550)<br/>_548 = [move _549]<br/>StorageDead(_549)<br/>_547 = &amp;_548<br/>_546 = &amp;(*_547)<br/>_545 = move _546 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_546)<br/></td></tr><tr><td align="left">_540 = Arguments::&lt;'_&gt;::new_v1(move _541, move _545)</td></tr></table>>];
    bb239__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">239</td></tr><tr><td align="left" balign="left">StorageDead(_545)<br/>StorageDead(_541)<br/></td></tr><tr><td align="left">_539 = format(move _540)</td></tr></table>>];
    bb240__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">240</td></tr><tr><td align="left" balign="left">StorageDead(_540)<br/>StorageDead(_551)<br/>StorageDead(_548)<br/>StorageDead(_547)<br/>StorageDead(_543)<br/>_538 = move _539<br/>StorageDead(_539)<br/>_537 = &amp;_538<br/>_536 = &amp;(*_537)<br/></td></tr><tr><td align="left">_535 = &lt;String as Deref&gt;::deref(move _536)</td></tr></table>>];
    bb241__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">241</td></tr><tr><td align="left" balign="left">_534 = &amp;(*_535)<br/>StorageDead(_536)<br/></td></tr><tr><td align="left">_533 = solana_program::log::sol_log(move _534)</td></tr></table>>];
    bb242__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">242</td></tr><tr><td align="left" balign="left">StorageDead(_534)<br/></td></tr><tr><td align="left">drop(_538)</td></tr></table>>];
    bb243__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">243</td></tr><tr><td align="left" balign="left">StorageDead(_538)<br/>StorageDead(_537)<br/>StorageDead(_535)<br/>StorageDead(_533)<br/>StorageLive(_552)<br/>_552 = _513<br/>_509 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _552)<br/>StorageDead(_552)<br/>StorageDead(_513)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb244__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">244</td></tr><tr><td align="left" balign="left">StorageDead(_510)<br/></td></tr><tr><td align="left">_508 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _509)</td></tr></table>>];
    bb245__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">245</td></tr><tr><td align="left" balign="left">StorageDead(_509)<br/>_553 = discriminant(_508)<br/></td></tr><tr><td align="left">switchInt(move _553)</td></tr></table>>];
    bb246__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">246</td></tr><tr><td align="left" balign="left">StorageLive(_557)<br/>_557 = ((_508 as Continue).0: ())<br/>_507 = _557<br/>StorageDead(_557)<br/>StorageDead(_508)<br/>StorageDead(_507)<br/>StorageLive(_558)<br/>StorageLive(_559)<br/>StorageLive(_560)<br/>StorageLive(_561)<br/>StorageLive(_562)<br/>StorageLive(_563)<br/>_563 = &amp;(*_8)<br/></td></tr><tr><td align="left">_562 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _563)</td></tr></table>>];
    bb247__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">247</td></tr><tr><td align="left" balign="left">StorageLive(_554)<br/>_554 = ((_508 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_556)<br/>_556 = _554<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _556)</td></tr></table>>];
    bb248__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">248</td></tr><tr><td align="left" balign="left">StorageDead(_556)<br/>StorageDead(_554)<br/>StorageDead(_508)<br/>StorageDead(_507)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb249__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">249</td></tr><tr><td align="left" balign="left">StorageDead(_563)<br/>_561 = (((*_562).2: state::perp_market::PoolBalance).0: u128)<br/>StorageLive(_564)<br/>StorageLive(_565)<br/>StorageLive(_566)<br/>_566 = &amp;(*_153)<br/></td></tr><tr><td align="left">_565 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _566)</td></tr></table>>];
    bb250__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">250</td></tr><tr><td align="left" balign="left">_564 = &amp;(*_565)<br/>StorageDead(_566)<br/>StorageLive(_567)<br/>StorageLive(_568)<br/>StorageLive(_569)<br/>StorageLive(_570)<br/>StorageLive(_571)<br/>_571 = &amp;(*_8)<br/></td></tr><tr><td align="left">_570 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _571)</td></tr></table>>];
    bb251__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">251</td></tr><tr><td align="left" balign="left">StorageDead(_571)<br/>_569 = &amp;((*_570).2: state::perp_market::PoolBalance)<br/></td></tr><tr><td align="left">_568 = &lt;PoolBalance as SpotBalance&gt;::balance_type(move _569)</td></tr></table>>];
    bb252__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">252</td></tr><tr><td align="left" balign="left">_567 = &amp;(*_568)<br/>StorageDead(_569)<br/></td></tr><tr><td align="left">_560 = get_token_amount(move _561, move _564, move _567)</td></tr></table>>];
    bb253__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">253</td></tr><tr><td align="left" balign="left">StorageDead(_567)<br/>StorageDead(_564)<br/>StorageDead(_561)<br/></td></tr><tr><td align="left">_559 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _560)</td></tr></table>>];
    bb254__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">254</td></tr><tr><td align="left" balign="left">StorageDead(_560)<br/>_572 = discriminant(_559)<br/></td></tr><tr><td align="left">switchInt(move _572)</td></tr></table>>];
    bb255__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">255</td></tr><tr><td align="left" balign="left">StorageLive(_576)<br/>_576 = ((_559 as Continue).0: u128)<br/>_558 = _576<br/>StorageDead(_576)<br/>StorageDead(_570)<br/>StorageDead(_568)<br/>StorageDead(_565)<br/>StorageDead(_562)<br/>StorageDead(_559)<br/>StorageLive(_577)<br/>StorageLive(_578)<br/>StorageLive(_579)<br/>StorageLive(_580)<br/>StorageLive(_581)<br/>StorageLive(_582)<br/>_582 = &amp;(*_8)<br/></td></tr><tr><td align="left">_581 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _582)</td></tr></table>>];
    bb256__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">256</td></tr><tr><td align="left" balign="left">StorageLive(_573)<br/>_573 = ((_559 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_575)<br/>_575 = _573<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _575)</td></tr></table>>];
    bb257__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">257</td></tr><tr><td align="left" balign="left">StorageDead(_575)<br/>StorageDead(_573)<br/>StorageDead(_570)<br/>StorageDead(_568)<br/>StorageDead(_565)<br/>StorageDead(_562)<br/>StorageDead(_559)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb258__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">258</td></tr><tr><td align="left" balign="left">StorageDead(_582)<br/>_580 = ((((*_581).1: state::perp_market::AMM).4: state::perp_market::PoolBalance).0: u128)<br/>StorageLive(_583)<br/>StorageLive(_584)<br/>StorageLive(_585)<br/>_585 = &amp;(*_153)<br/></td></tr><tr><td align="left">_584 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _585)</td></tr></table>>];
    bb259__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">259</td></tr><tr><td align="left" balign="left">_583 = &amp;(*_584)<br/>StorageDead(_585)<br/>StorageLive(_586)<br/>StorageLive(_587)<br/>StorageLive(_588)<br/>StorageLive(_589)<br/>StorageLive(_590)<br/>_590 = &amp;(*_8)<br/></td></tr><tr><td align="left">_589 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _590)</td></tr></table>>];
    bb260__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">260</td></tr><tr><td align="left" balign="left">StorageDead(_590)<br/>_588 = &amp;(((*_589).1: state::perp_market::AMM).4: state::perp_market::PoolBalance)<br/></td></tr><tr><td align="left">_587 = &lt;PoolBalance as SpotBalance&gt;::balance_type(move _588)</td></tr></table>>];
    bb261__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">261</td></tr><tr><td align="left" balign="left">_586 = &amp;(*_587)<br/>StorageDead(_588)<br/></td></tr><tr><td align="left">_579 = get_token_amount(move _580, move _583, move _586)</td></tr></table>>];
    bb262__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">262</td></tr><tr><td align="left" balign="left">StorageDead(_586)<br/>StorageDead(_583)<br/>StorageDead(_580)<br/></td></tr><tr><td align="left">_578 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _579)</td></tr></table>>];
    bb263__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">263</td></tr><tr><td align="left" balign="left">StorageDead(_579)<br/>_591 = discriminant(_578)<br/></td></tr><tr><td align="left">switchInt(move _591)</td></tr></table>>];
    bb264__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">264</td></tr><tr><td align="left" balign="left">StorageLive(_595)<br/>_595 = ((_578 as Continue).0: u128)<br/>_577 = _595<br/>StorageDead(_595)<br/>StorageDead(_589)<br/>StorageDead(_587)<br/>StorageDead(_584)<br/>StorageDead(_581)<br/>StorageDead(_578)<br/>StorageLive(_596)<br/>StorageLive(_597)<br/>StorageLive(_598)<br/>StorageLive(_599)<br/>StorageLive(_600)<br/>StorageLive(_601)<br/>StorageLive(_602)<br/>_602 = _558<br/>StorageLive(_603)<br/>_603 = _577<br/></td></tr><tr><td align="left">_601 = &lt;u128 as SafeMath&gt;::safe_add(move _602, move _603)</td></tr></table>>];
    bb265__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">265</td></tr><tr><td align="left" balign="left">StorageLive(_592)<br/>_592 = ((_578 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_594)<br/>_594 = _592<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _594)</td></tr></table>>];
    bb266__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">266</td></tr><tr><td align="left" balign="left">StorageDead(_594)<br/>StorageDead(_592)<br/>StorageDead(_589)<br/>StorageDead(_587)<br/>StorageDead(_584)<br/>StorageDead(_581)<br/>StorageDead(_578)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb267__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">267</td></tr><tr><td align="left" balign="left">StorageDead(_603)<br/>StorageDead(_602)<br/></td></tr><tr><td align="left">_600 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _601)</td></tr></table>>];
    bb268__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">268</td></tr><tr><td align="left" balign="left">StorageDead(_601)<br/>_604 = discriminant(_600)<br/></td></tr><tr><td align="left">switchInt(move _604)</td></tr></table>>];
    bb269__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">269</td></tr><tr><td align="left" balign="left">StorageLive(_608)<br/>_608 = ((_600 as Continue).0: u128)<br/>_599 = _608<br/>StorageDead(_608)<br/></td></tr><tr><td align="left">_598 = &lt;u128 as Cast&gt;::cast::&lt;i128&gt;(move _599)</td></tr></table>>];
    bb270__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">270</td></tr><tr><td align="left" balign="left">StorageLive(_605)<br/>_605 = ((_600 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_607)<br/>_607 = _605<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _607)</td></tr></table>>];
    bb271__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">271</td></tr><tr><td align="left" balign="left">StorageDead(_607)<br/>StorageDead(_605)<br/>StorageDead(_599)<br/>StorageDead(_598)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb272__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">272</td></tr><tr><td align="left" balign="left">StorageDead(_599)<br/></td></tr><tr><td align="left">_597 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _598)</td></tr></table>>];
    bb273__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">273</td></tr><tr><td align="left" balign="left">StorageDead(_598)<br/>_609 = discriminant(_597)<br/></td></tr><tr><td align="left">switchInt(move _609)</td></tr></table>>];
    bb274__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">274</td></tr><tr><td align="left" balign="left">StorageLive(_613)<br/>_613 = ((_597 as Continue).0: i128)<br/>_596 = _613<br/>StorageDead(_613)<br/>StorageDead(_600)<br/>StorageDead(_597)<br/>StorageLive(_614)<br/>StorageLive(_615)<br/>StorageLive(_616)<br/>StorageLive(_617)<br/>StorageLive(_618)<br/>StorageLive(_619)<br/>StorageLive(_620)<br/>StorageLive(_621)<br/>StorageLive(_622)<br/>StorageLive(_623)<br/>StorageLive(_624)<br/>StorageLive(_625)<br/>_701 = const _<br/>_625 = &amp;(*_701)<br/>_624 = &amp;(*_625)<br/>_623 = move _624 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_624)<br/>StorageLive(_627)<br/>StorageLive(_628)<br/>StorageLive(_629)<br/>StorageLive(_630)<br/>StorageLive(_631)<br/>StorageLive(_632)<br/>StorageLive(_633)<br/>StorageLive(_634)<br/>StorageLive(_635)<br/>_635 = &amp;(*_8)<br/></td></tr><tr><td align="left">_634 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _635)</td></tr></table>>];
    bb275__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">275</td></tr><tr><td align="left" balign="left">StorageLive(_610)<br/>_610 = ((_597 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_612)<br/>_612 = _610<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _612)</td></tr></table>>];
    bb276__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">276</td></tr><tr><td align="left" balign="left">StorageDead(_612)<br/>StorageDead(_610)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb277__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">277</td></tr><tr><td align="left" balign="left">StorageDead(_635)<br/>_633 = &amp;((*_634).21: u16)<br/>_632 = &amp;(*_633)<br/></td></tr><tr><td align="left">_631 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _632)</td></tr></table>>];
    bb278__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">278</td></tr><tr><td align="left" balign="left">StorageDead(_632)<br/>_630 = [move _631]<br/>StorageDead(_631)<br/>_629 = &amp;_630<br/>_628 = &amp;(*_629)<br/>_627 = move _628 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_628)<br/></td></tr><tr><td align="left">_622 = Arguments::&lt;'_&gt;::new_v1(move _623, move _627)</td></tr></table>>];
    bb279__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">279</td></tr><tr><td align="left" balign="left">StorageDead(_627)<br/>StorageDead(_623)<br/></td></tr><tr><td align="left">_621 = format(move _622)</td></tr></table>>];
    bb280__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">280</td></tr><tr><td align="left" balign="left">StorageDead(_622)<br/>StorageDead(_634)<br/>StorageDead(_633)<br/>StorageDead(_630)<br/>StorageDead(_629)<br/>StorageDead(_625)<br/>_620 = move _621<br/>StorageDead(_621)<br/>_619 = &amp;_620<br/>_618 = &amp;(*_619)<br/></td></tr><tr><td align="left">_617 = &lt;String as Deref&gt;::deref(move _618)</td></tr></table>>];
    bb281__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">281</td></tr><tr><td align="left" balign="left">_616 = &amp;(*_617)<br/>StorageDead(_618)<br/></td></tr><tr><td align="left">_615 = solana_program::log::sol_log(move _616)</td></tr></table>>];
    bb282__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">282</td></tr><tr><td align="left" balign="left">StorageDead(_616)<br/></td></tr><tr><td align="left">drop(_620)</td></tr></table>>];
    bb283__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">283</td></tr><tr><td align="left" balign="left">StorageDead(_620)<br/>StorageDead(_619)<br/>StorageDead(_617)<br/>StorageDead(_615)<br/>_614 = const ()<br/>StorageDead(_614)<br/>StorageLive(_636)<br/>StorageLive(_637)<br/>StorageLive(_638)<br/>StorageLive(_639)<br/>StorageLive(_640)<br/>StorageLive(_641)<br/>StorageLive(_642)<br/>StorageLive(_643)<br/>StorageLive(_644)<br/>StorageLive(_645)<br/>StorageLive(_646)<br/>StorageLive(_647)<br/>_700 = const _<br/>_647 = &amp;(*_700)<br/>_646 = &amp;(*_647)<br/>_645 = move _646 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_646)<br/>StorageLive(_649)<br/>StorageLive(_650)<br/>StorageLive(_651)<br/>StorageLive(_652)<br/>StorageLive(_653)<br/>StorageLive(_654)<br/>StorageLive(_655)<br/>_655 = &amp;_596<br/>_654 = &amp;(*_655)<br/></td></tr><tr><td align="left">_653 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i128&gt;(move _654)</td></tr></table>>];
    bb284__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">284</td></tr><tr><td align="left" balign="left">StorageDead(_654)<br/>_652 = [move _653]<br/>StorageDead(_653)<br/>_651 = &amp;_652<br/>_650 = &amp;(*_651)<br/>_649 = move _650 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_650)<br/></td></tr><tr><td align="left">_644 = Arguments::&lt;'_&gt;::new_v1(move _645, move _649)</td></tr></table>>];
    bb285__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">285</td></tr><tr><td align="left" balign="left">StorageDead(_649)<br/>StorageDead(_645)<br/></td></tr><tr><td align="left">_643 = format(move _644)</td></tr></table>>];
    bb286__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">286</td></tr><tr><td align="left" balign="left">StorageDead(_644)<br/>StorageDead(_655)<br/>StorageDead(_652)<br/>StorageDead(_651)<br/>StorageDead(_647)<br/>_642 = move _643<br/>StorageDead(_643)<br/>_641 = &amp;_642<br/>_640 = &amp;(*_641)<br/></td></tr><tr><td align="left">_639 = &lt;String as Deref&gt;::deref(move _640)</td></tr></table>>];
    bb287__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">287</td></tr><tr><td align="left" balign="left">_638 = &amp;(*_639)<br/>StorageDead(_640)<br/></td></tr><tr><td align="left">_637 = solana_program::log::sol_log(move _638)</td></tr></table>>];
    bb288__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">288</td></tr><tr><td align="left" balign="left">StorageDead(_638)<br/></td></tr><tr><td align="left">drop(_642)</td></tr></table>>];
    bb289__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">289</td></tr><tr><td align="left" balign="left">StorageDead(_642)<br/>StorageDead(_641)<br/>StorageDead(_639)<br/>StorageDead(_637)<br/>_636 = const ()<br/>StorageDead(_636)<br/>StorageLive(_656)<br/>StorageLive(_657)<br/>StorageLive(_658)<br/>StorageLive(_659)<br/>StorageLive(_660)<br/>StorageLive(_661)<br/>StorageLive(_662)<br/>_662 = &amp;(*_8)<br/></td></tr><tr><td align="left">_661 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _662)</td></tr></table>>];
    bb290__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">290</td></tr><tr><td align="left" balign="left">StorageDead(_662)<br/>_660 = &amp;((*_661).1: state::perp_market::AMM)<br/>_659 = &amp;(*_660)<br/>StorageLive(_663)<br/>_663 = _476<br/>StorageLive(_664)<br/>_664 = _596<br/></td></tr><tr><td align="left">_658 = calculate_expiry_price(move _659, move _663, move _664)</td></tr></table>>];
    bb291__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">291</td></tr><tr><td align="left" balign="left">StorageDead(_664)<br/>StorageDead(_663)<br/>StorageDead(_659)<br/></td></tr><tr><td align="left">_657 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _658)</td></tr></table>>];
    bb292__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">292</td></tr><tr><td align="left" balign="left">StorageDead(_658)<br/>_665 = discriminant(_657)<br/></td></tr><tr><td align="left">switchInt(move _665)</td></tr></table>>];
    bb293__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">293</td></tr><tr><td align="left" balign="left">StorageLive(_669)<br/>_669 = ((_657 as Continue).0: i64)<br/>_656 = _669<br/>StorageDead(_669)<br/>StorageDead(_661)<br/>StorageDead(_660)<br/>StorageDead(_657)<br/>StorageLive(_670)<br/>_670 = _656<br/>StorageLive(_671)<br/>StorageLive(_672)<br/>_672 = &amp;mut (*_8)<br/></td></tr><tr><td align="left">_671 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _672)</td></tr></table>>];
    bb294__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">294</td></tr><tr><td align="left" balign="left">StorageLive(_666)<br/>_666 = ((_657 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_668)<br/>_668 = _666<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _668)</td></tr></table>>];
    bb295__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">295</td></tr><tr><td align="left" balign="left">StorageDead(_668)<br/>StorageDead(_666)<br/>StorageDead(_661)<br/>StorageDead(_660)<br/>StorageDead(_657)<br/>StorageDead(_656)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb296__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">296</td></tr><tr><td align="left" balign="left">StorageDead(_672)<br/>((*_671).7: i64) = move _670<br/>StorageDead(_670)<br/>StorageDead(_671)<br/>StorageLive(_673)<br/>_673 = state::perp_market::MarketStatus::Settlement<br/>StorageLive(_674)<br/>StorageLive(_675)<br/>_675 = &amp;mut (*_8)<br/></td></tr><tr><td align="left">_674 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _675)</td></tr></table>>];
    bb297__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">297</td></tr><tr><td align="left" balign="left">StorageDead(_675)<br/>((*_674).22: state::perp_market::MarketStatus) = move _673<br/>StorageDead(_673)<br/>StorageDead(_674)<br/>StorageLive(_676)<br/>StorageLive(_677)<br/>StorageLive(_678)<br/>StorageLive(_679)<br/>StorageLive(_680)<br/>StorageLive(_681)<br/>StorageLive(_682)<br/>StorageLive(_683)<br/>StorageLive(_684)<br/>StorageLive(_685)<br/>StorageLive(_686)<br/>StorageLive(_687)<br/>_699 = const _<br/>_687 = &amp;(*_699)<br/>_686 = &amp;(*_687)<br/>_685 = move _686 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_686)<br/>StorageLive(_689)<br/>StorageLive(_690)<br/>StorageLive(_691)<br/>StorageLive(_692)<br/>StorageLive(_693)<br/>StorageLive(_694)<br/>StorageLive(_695)<br/>StorageLive(_696)<br/>StorageLive(_697)<br/>_697 = &amp;(*_8)<br/></td></tr><tr><td align="left">_696 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _697)</td></tr></table>>];
    bb298__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">298</td></tr><tr><td align="left" balign="left">StorageDead(_697)<br/>_695 = &amp;((*_696).7: i64)<br/>_694 = &amp;(*_695)<br/></td></tr><tr><td align="left">_693 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i64&gt;(move _694)</td></tr></table>>];
    bb299__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">299</td></tr><tr><td align="left" balign="left">StorageDead(_694)<br/>_692 = [move _693]<br/>StorageDead(_693)<br/>_691 = &amp;_692<br/>_690 = &amp;(*_691)<br/>_689 = move _690 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_690)<br/></td></tr><tr><td align="left">_684 = Arguments::&lt;'_&gt;::new_v1(move _685, move _689)</td></tr></table>>];
    bb300__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">300</td></tr><tr><td align="left" balign="left">StorageDead(_689)<br/>StorageDead(_685)<br/></td></tr><tr><td align="left">_683 = format(move _684)</td></tr></table>>];
    bb301__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">301</td></tr><tr><td align="left" balign="left">StorageDead(_684)<br/>StorageDead(_696)<br/>StorageDead(_695)<br/>StorageDead(_692)<br/>StorageDead(_691)<br/>StorageDead(_687)<br/>_682 = move _683<br/>StorageDead(_683)<br/>_681 = &amp;_682<br/>_680 = &amp;(*_681)<br/></td></tr><tr><td align="left">_679 = &lt;String as Deref&gt;::deref(move _680)</td></tr></table>>];
    bb302__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">302</td></tr><tr><td align="left" balign="left">_678 = &amp;(*_679)<br/>StorageDead(_680)<br/></td></tr><tr><td align="left">_677 = solana_program::log::sol_log(move _678)</td></tr></table>>];
    bb303__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">303</td></tr><tr><td align="left" balign="left">StorageDead(_678)<br/></td></tr><tr><td align="left">drop(_682)</td></tr></table>>];
    bb304__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">304</td></tr><tr><td align="left" balign="left">StorageDead(_682)<br/>StorageDead(_681)<br/>StorageDead(_679)<br/>StorageDead(_677)<br/>_676 = const ()<br/>StorageDead(_676)<br/>StorageLive(_698)<br/>_698 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _698)<br/>StorageDead(_698)<br/>StorageDead(_656)<br/>StorageDead(_596)<br/>StorageDead(_577)<br/>StorageDead(_558)<br/>StorageDead(_476)<br/>StorageDead(_255)<br/>StorageDead(_220)<br/>StorageDead(_207)<br/>StorageDead(_166)<br/></td></tr><tr><td align="left">drop(_154)</td></tr></table>>];
    bb305__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">305</td></tr><tr><td align="left" balign="left">StorageDead(_154)<br/>StorageDead(_153)<br/></td></tr><tr><td align="left">drop(_9)</td></tr></table>>];
    bb306__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">306</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb307__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">307</td></tr><tr><td align="left" balign="left">StorageDead(_600)<br/>StorageDead(_597)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb308__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">308</td></tr><tr><td align="left" balign="left">StorageDead(_596)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb309__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">309</td></tr><tr><td align="left" balign="left">StorageDead(_577)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb310__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">310</td></tr><tr><td align="left" balign="left">StorageDead(_558)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb311__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">311</td></tr><tr><td align="left" balign="left">StorageDead(_476)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb312__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">312</td></tr><tr><td align="left" balign="left">StorageDead(_378)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb313__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">313</td></tr><tr><td align="left" balign="left">StorageDead(_365)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb314__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">314</td></tr><tr><td align="left" balign="left">StorageDead(_353)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb315__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">315</td></tr><tr><td align="left" balign="left">StorageDead(_328)<br/>StorageDead(_336)<br/>StorageDead(_332)<br/>StorageDead(_329)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb316__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">316</td></tr><tr><td align="left" balign="left">StorageDead(_327)<br/>StorageDead(_304)<br/>StorageDead(_303)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb317__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">317</td></tr><tr><td align="left" balign="left">StorageDead(_312)<br/>StorageDead(_309)<br/>StorageDead(_306)<br/>StorageDead(_305)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb318__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">318</td></tr><tr><td align="left" balign="left">StorageDead(_301)<br/>StorageDead(_300)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb319__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">319</td></tr><tr><td align="left" balign="left">StorageDead(_255)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb320__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">320</td></tr><tr><td align="left" balign="left">StorageDead(_224)<br/>StorageDead(_223)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb321__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">321</td></tr><tr><td align="left" balign="left">StorageDead(_221)<br/>StorageDead(_237)<br/>StorageDead(_234)<br/>StorageDead(_231)<br/>StorageDead(_228)<br/>StorageDead(_225)<br/>StorageDead(_222)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb322__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">322</td></tr><tr><td align="left" balign="left">StorageDead(_220)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb323__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">323</td></tr><tr><td align="left" balign="left">StorageDead(_207)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb324__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">324</td></tr><tr><td align="left" balign="left">StorageDead(_195)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb325__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">325</td></tr><tr><td align="left" balign="left">StorageDead(_187)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb326__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">326</td></tr><tr><td align="left" balign="left">StorageDead(_179)<br/>StorageDead(_176)<br/>StorageDead(_173)<br/>StorageDead(_170)<br/>StorageDead(_167)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb327__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">327</td></tr><tr><td align="left" balign="left">StorageDead(_166)<br/></td></tr><tr><td align="left">drop(_154)</td></tr></table>>];
    bb328__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">328</td></tr><tr><td align="left" balign="left">StorageDead(_154)<br/>StorageDead(_153)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb329__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">329</td></tr><tr><td align="left">drop(_9)</td></tr></table>>];
    bb330__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">330</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb331__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">331</td></tr><tr><td align="left">return</td></tr></table>>];
    bb332__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">332 (cleanup)</td></tr><tr><td align="left">drop(_682)</td></tr></table>>];
    bb333__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">333 (cleanup)</td></tr><tr><td align="left">drop(_642)</td></tr></table>>];
    bb334__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">334 (cleanup)</td></tr><tr><td align="left">drop(_620)</td></tr></table>>];
    bb335__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">335 (cleanup)</td></tr><tr><td align="left">drop(_538)</td></tr></table>>];
    bb336__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">336 (cleanup)</td></tr><tr><td align="left">drop(_519)</td></tr></table>>];
    bb337__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">337 (cleanup)</td></tr><tr><td align="left">drop(_493)</td></tr></table>>];
    bb338__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">338 (cleanup)</td></tr><tr><td align="left">drop(_453)</td></tr></table>>];
    bb339__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">339 (cleanup)</td></tr><tr><td align="left">drop(_401)</td></tr></table>>];
    bb340__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">340 (cleanup)</td></tr><tr><td align="left">drop(_154)</td></tr></table>>];
    bb341__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">341 (cleanup)</td></tr><tr><td align="left">drop(_130)</td></tr></table>>];
    bb342__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">342 (cleanup)</td></tr><tr><td align="left">drop(_91)</td></tr></table>>];
    bb343__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">343 (cleanup)</td></tr><tr><td align="left">drop(_72)</td></tr></table>>];
    bb344__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">344 (cleanup)</td></tr><tr><td align="left">drop(_34)</td></tr></table>>];
    bb345__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">345 (cleanup)</td></tr><tr><td align="left">drop(_9)</td></tr></table>>];
    bb346__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">346 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb347__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">347 (cleanup)</td></tr><tr><td align="left" balign="left">_724 = discriminant(_155)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb348__0_748 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">348 (cleanup)</td></tr><tr><td align="left" balign="left">_725 = discriminant(_10)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_748 -> bb1__0_748 [label="return"];
    bb1__0_748 -> bb2__0_748 [label="return"];
    bb1__0_748 -> bb346__0_748 [label="unwind"];
    bb2__0_748 -> bb3__0_748 [label="0"];
    bb2__0_748 -> bb5__0_748 [label="1"];
    bb2__0_748 -> bb4__0_748 [label="otherwise"];
    bb3__0_748 -> bb7__0_748 [label="return"];
    bb3__0_748 -> bb345__0_748 [label="unwind"];
    bb5__0_748 -> bb6__0_748 [label="return"];
    bb5__0_748 -> bb348__0_748 [label="unwind"];
    bb6__0_748 -> bb330__0_748 [label=""];
    bb7__0_748 -> bb9__0_748 [label="0"];
    bb7__0_748 -> bb8__0_748 [label="otherwise"];
    bb8__0_748 -> bb17__0_748 [label=""];
    bb9__0_748 -> bb10__0_748 [label="return"];
    bb9__0_748 -> bb345__0_748 [label="unwind"];
    bb10__0_748 -> bb11__0_748 [label="return"];
    bb10__0_748 -> bb345__0_748 [label="unwind"];
    bb11__0_748 -> bb12__0_748 [label="return"];
    bb11__0_748 -> bb345__0_748 [label="unwind"];
    bb12__0_748 -> bb13__0_748 [label="return"];
    bb12__0_748 -> bb344__0_748 [label="unwind"];
    bb13__0_748 -> bb14__0_748 [label="return"];
    bb13__0_748 -> bb344__0_748 [label="unwind"];
    bb14__0_748 -> bb15__0_748 [label="return"];
    bb14__0_748 -> bb345__0_748 [label="unwind"];
    bb15__0_748 -> bb16__0_748 [label="return"];
    bb15__0_748 -> bb345__0_748 [label="unwind"];
    bb16__0_748 -> bb17__0_748 [label=""];
    bb17__0_748 -> bb18__0_748 [label="return"];
    bb17__0_748 -> bb345__0_748 [label="unwind"];
    bb18__0_748 -> bb19__0_748 [label="0"];
    bb18__0_748 -> bb20__0_748 [label="1"];
    bb18__0_748 -> bb4__0_748 [label="otherwise"];
    bb19__0_748 -> bb22__0_748 [label="return"];
    bb19__0_748 -> bb345__0_748 [label="unwind"];
    bb20__0_748 -> bb21__0_748 [label="return"];
    bb20__0_748 -> bb345__0_748 [label="unwind"];
    bb21__0_748 -> bb329__0_748 [label=""];
    bb22__0_748 -> bb24__0_748 [label="0"];
    bb22__0_748 -> bb23__0_748 [label="otherwise"];
    bb23__0_748 -> bb39__0_748 [label=""];
    bb24__0_748 -> bb25__0_748 [label="return"];
    bb24__0_748 -> bb345__0_748 [label="unwind"];
    bb25__0_748 -> bb26__0_748 [label="return"];
    bb25__0_748 -> bb345__0_748 [label="unwind"];
    bb26__0_748 -> bb27__0_748 [label="return"];
    bb26__0_748 -> bb345__0_748 [label="unwind"];
    bb27__0_748 -> bb28__0_748 [label="return"];
    bb27__0_748 -> bb343__0_748 [label="unwind"];
    bb28__0_748 -> bb29__0_748 [label="return"];
    bb28__0_748 -> bb343__0_748 [label="unwind"];
    bb29__0_748 -> bb30__0_748 [label="return"];
    bb29__0_748 -> bb345__0_748 [label="unwind"];
    bb30__0_748 -> bb31__0_748 [label="return"];
    bb30__0_748 -> bb345__0_748 [label="unwind"];
    bb31__0_748 -> bb32__0_748 [label="return"];
    bb31__0_748 -> bb345__0_748 [label="unwind"];
    bb32__0_748 -> bb33__0_748 [label="return"];
    bb32__0_748 -> bb345__0_748 [label="unwind"];
    bb33__0_748 -> bb34__0_748 [label="return"];
    bb33__0_748 -> bb345__0_748 [label="unwind"];
    bb34__0_748 -> bb35__0_748 [label="return"];
    bb34__0_748 -> bb345__0_748 [label="unwind"];
    bb35__0_748 -> bb36__0_748 [label="return"];
    bb35__0_748 -> bb342__0_748 [label="unwind"];
    bb36__0_748 -> bb37__0_748 [label="return"];
    bb36__0_748 -> bb342__0_748 [label="unwind"];
    bb37__0_748 -> bb38__0_748 [label="return"];
    bb37__0_748 -> bb345__0_748 [label="unwind"];
    bb38__0_748 -> bb39__0_748 [label=""];
    bb39__0_748 -> bb40__0_748 [label="return"];
    bb39__0_748 -> bb345__0_748 [label="unwind"];
    bb40__0_748 -> bb41__0_748 [label="0"];
    bb40__0_748 -> bb42__0_748 [label="1"];
    bb40__0_748 -> bb4__0_748 [label="otherwise"];
    bb41__0_748 -> bb44__0_748 [label="return"];
    bb41__0_748 -> bb345__0_748 [label="unwind"];
    bb42__0_748 -> bb43__0_748 [label="return"];
    bb42__0_748 -> bb345__0_748 [label="unwind"];
    bb43__0_748 -> bb329__0_748 [label=""];
    bb44__0_748 -> bb46__0_748 [label="0"];
    bb44__0_748 -> bb45__0_748 [label="otherwise"];
    bb45__0_748 -> bb54__0_748 [label=""];
    bb46__0_748 -> bb47__0_748 [label="return"];
    bb46__0_748 -> bb345__0_748 [label="unwind"];
    bb47__0_748 -> bb48__0_748 [label="return"];
    bb47__0_748 -> bb345__0_748 [label="unwind"];
    bb48__0_748 -> bb49__0_748 [label="return"];
    bb48__0_748 -> bb345__0_748 [label="unwind"];
    bb49__0_748 -> bb50__0_748 [label="return"];
    bb49__0_748 -> bb341__0_748 [label="unwind"];
    bb50__0_748 -> bb51__0_748 [label="return"];
    bb50__0_748 -> bb341__0_748 [label="unwind"];
    bb51__0_748 -> bb52__0_748 [label="return"];
    bb51__0_748 -> bb345__0_748 [label="unwind"];
    bb52__0_748 -> bb53__0_748 [label="return"];
    bb52__0_748 -> bb345__0_748 [label="unwind"];
    bb53__0_748 -> bb54__0_748 [label=""];
    bb54__0_748 -> bb55__0_748 [label="return"];
    bb54__0_748 -> bb345__0_748 [label="unwind"];
    bb55__0_748 -> bb56__0_748 [label="0"];
    bb55__0_748 -> bb57__0_748 [label="1"];
    bb55__0_748 -> bb4__0_748 [label="otherwise"];
    bb56__0_748 -> bb59__0_748 [label="return"];
    bb56__0_748 -> bb345__0_748 [label="unwind"];
    bb57__0_748 -> bb58__0_748 [label="return"];
    bb57__0_748 -> bb345__0_748 [label="unwind"];
    bb58__0_748 -> bb329__0_748 [label=""];
    bb59__0_748 -> bb60__0_748 [label="return"];
    bb59__0_748 -> bb345__0_748 [label="unwind"];
    bb60__0_748 -> bb61__0_748 [label="0"];
    bb60__0_748 -> bb62__0_748 [label="1"];
    bb60__0_748 -> bb4__0_748 [label="otherwise"];
    bb61__0_748 -> bb64__0_748 [label="return"];
    bb61__0_748 -> bb340__0_748 [label="unwind"];
    bb62__0_748 -> bb63__0_748 [label="return"];
    bb62__0_748 -> bb347__0_748 [label="unwind"];
    bb63__0_748 -> bb328__0_748 [label=""];
    bb64__0_748 -> bb65__0_748 [label="return"];
    bb64__0_748 -> bb340__0_748 [label="unwind"];
    bb65__0_748 -> bb66__0_748 [label="return"];
    bb65__0_748 -> bb340__0_748 [label="unwind"];
    bb66__0_748 -> bb67__0_748 [label="0"];
    bb66__0_748 -> bb68__0_748 [label="1"];
    bb66__0_748 -> bb4__0_748 [label="otherwise"];
    bb67__0_748 -> bb70__0_748 [label="return"];
    bb67__0_748 -> bb340__0_748 [label="unwind"];
    bb68__0_748 -> bb69__0_748 [label="return"];
    bb68__0_748 -> bb340__0_748 [label="unwind"];
    bb69__0_748 -> bb326__0_748 [label=""];
    bb70__0_748 -> bb71__0_748 [label="return"];
    bb70__0_748 -> bb340__0_748 [label="unwind"];
    bb71__0_748 -> bb72__0_748 [label="return"];
    bb71__0_748 -> bb340__0_748 [label="unwind"];
    bb72__0_748 -> bb73__0_748 [label="0"];
    bb72__0_748 -> bb74__0_748 [label="1"];
    bb72__0_748 -> bb4__0_748 [label="otherwise"];
    bb73__0_748 -> bb76__0_748 [label="return"];
    bb73__0_748 -> bb340__0_748 [label="unwind"];
    bb74__0_748 -> bb75__0_748 [label="return"];
    bb74__0_748 -> bb340__0_748 [label="unwind"];
    bb75__0_748 -> bb325__0_748 [label=""];
    bb76__0_748 -> bb77__0_748 [label="return"];
    bb76__0_748 -> bb340__0_748 [label="unwind"];
    bb77__0_748 -> bb78__0_748 [label="return"];
    bb77__0_748 -> bb340__0_748 [label="unwind"];
    bb78__0_748 -> bb79__0_748 [label="0"];
    bb78__0_748 -> bb80__0_748 [label="1"];
    bb78__0_748 -> bb4__0_748 [label="otherwise"];
    bb79__0_748 -> bb82__0_748 [label="return"];
    bb79__0_748 -> bb340__0_748 [label="unwind"];
    bb80__0_748 -> bb81__0_748 [label="return"];
    bb80__0_748 -> bb340__0_748 [label="unwind"];
    bb81__0_748 -> bb324__0_748 [label=""];
    bb82__0_748 -> bb83__0_748 [label="return"];
    bb82__0_748 -> bb340__0_748 [label="unwind"];
    bb83__0_748 -> bb84__0_748 [label="0"];
    bb83__0_748 -> bb85__0_748 [label="1"];
    bb83__0_748 -> bb4__0_748 [label="otherwise"];
    bb84__0_748 -> bb87__0_748 [label="return"];
    bb84__0_748 -> bb340__0_748 [label="unwind"];
    bb85__0_748 -> bb86__0_748 [label="return"];
    bb85__0_748 -> bb340__0_748 [label="unwind"];
    bb86__0_748 -> bb324__0_748 [label=""];
    bb87__0_748 -> bb88__0_748 [label="return"];
    bb87__0_748 -> bb340__0_748 [label="unwind"];
    bb88__0_748 -> bb89__0_748 [label="return"];
    bb88__0_748 -> bb340__0_748 [label="unwind"];
    bb89__0_748 -> bb90__0_748 [label="0"];
    bb89__0_748 -> bb91__0_748 [label="1"];
    bb89__0_748 -> bb4__0_748 [label="otherwise"];
    bb90__0_748 -> bb93__0_748 [label="return"];
    bb90__0_748 -> bb340__0_748 [label="unwind"];
    bb91__0_748 -> bb92__0_748 [label="return"];
    bb91__0_748 -> bb340__0_748 [label="unwind"];
    bb92__0_748 -> bb323__0_748 [label=""];
    bb93__0_748 -> bb94__0_748 [label="return"];
    bb93__0_748 -> bb340__0_748 [label="unwind"];
    bb94__0_748 -> bb95__0_748 [label="return"];
    bb94__0_748 -> bb340__0_748 [label="unwind"];
    bb95__0_748 -> bb96__0_748 [label="return"];
    bb95__0_748 -> bb340__0_748 [label="unwind"];
    bb96__0_748 -> bb97__0_748 [label="return"];
    bb96__0_748 -> bb340__0_748 [label="unwind"];
    bb97__0_748 -> bb98__0_748 [label="0"];
    bb97__0_748 -> bb99__0_748 [label="1"];
    bb97__0_748 -> bb4__0_748 [label="otherwise"];
    bb98__0_748 -> bb101__0_748 [label="return"];
    bb98__0_748 -> bb340__0_748 [label="unwind"];
    bb99__0_748 -> bb100__0_748 [label="return"];
    bb99__0_748 -> bb340__0_748 [label="unwind"];
    bb100__0_748 -> bb320__0_748 [label=""];
    bb101__0_748 -> bb102__0_748 [label="return"];
    bb101__0_748 -> bb340__0_748 [label="unwind"];
    bb102__0_748 -> bb103__0_748 [label="0"];
    bb102__0_748 -> bb104__0_748 [label="1"];
    bb102__0_748 -> bb4__0_748 [label="otherwise"];
    bb103__0_748 -> bb106__0_748 [label="return"];
    bb103__0_748 -> bb340__0_748 [label="unwind"];
    bb104__0_748 -> bb105__0_748 [label="return"];
    bb104__0_748 -> bb340__0_748 [label="unwind"];
    bb105__0_748 -> bb320__0_748 [label=""];
    bb106__0_748 -> bb107__0_748 [label="return"];
    bb106__0_748 -> bb340__0_748 [label="unwind"];
    bb107__0_748 -> bb108__0_748 [label="0"];
    bb107__0_748 -> bb109__0_748 [label="1"];
    bb107__0_748 -> bb4__0_748 [label="otherwise"];
    bb108__0_748 -> bb111__0_748 [label="return"];
    bb108__0_748 -> bb340__0_748 [label="unwind"];
    bb109__0_748 -> bb110__0_748 [label="return"];
    bb109__0_748 -> bb340__0_748 [label="unwind"];
    bb110__0_748 -> bb321__0_748 [label=""];
    bb111__0_748 -> bb112__0_748 [label="return"];
    bb111__0_748 -> bb340__0_748 [label="unwind"];
    bb112__0_748 -> bb113__0_748 [label="return"];
    bb112__0_748 -> bb340__0_748 [label="unwind"];
    bb113__0_748 -> bb114__0_748 [label="return"];
    bb113__0_748 -> bb340__0_748 [label="unwind"];
    bb114__0_748 -> bb115__0_748 [label="return"];
    bb114__0_748 -> bb340__0_748 [label="unwind"];
    bb115__0_748 -> bb116__0_748 [label="return"];
    bb115__0_748 -> bb340__0_748 [label="unwind"];
    bb116__0_748 -> bb117__0_748 [label="return"];
    bb116__0_748 -> bb340__0_748 [label="unwind"];
    bb117__0_748 -> bb118__0_748 [label="0"];
    bb117__0_748 -> bb119__0_748 [label="1"];
    bb117__0_748 -> bb4__0_748 [label="otherwise"];
    bb118__0_748 -> bb121__0_748 [label="return"];
    bb118__0_748 -> bb340__0_748 [label="unwind"];
    bb119__0_748 -> bb120__0_748 [label="return"];
    bb119__0_748 -> bb340__0_748 [label="unwind"];
    bb120__0_748 -> bb319__0_748 [label=""];
    bb121__0_748 -> bb122__0_748 [label="return"];
    bb121__0_748 -> bb340__0_748 [label="unwind"];
    bb122__0_748 -> bb123__0_748 [label="return"];
    bb122__0_748 -> bb340__0_748 [label="unwind"];
    bb123__0_748 -> bb124__0_748 [label="return"];
    bb123__0_748 -> bb340__0_748 [label="unwind"];
    bb124__0_748 -> bb125__0_748 [label="return"];
    bb124__0_748 -> bb340__0_748 [label="unwind"];
    bb125__0_748 -> bb126__0_748 [label="0"];
    bb125__0_748 -> bb127__0_748 [label="1"];
    bb125__0_748 -> bb4__0_748 [label="otherwise"];
    bb126__0_748 -> bb130__0_748 [label="0"];
    bb126__0_748 -> bb129__0_748 [label="otherwise"];
    bb127__0_748 -> bb128__0_748 [label="return"];
    bb127__0_748 -> bb340__0_748 [label="unwind"];
    bb128__0_748 -> bb319__0_748 [label=""];
    bb129__0_748 -> bb131__0_748 [label="return"];
    bb129__0_748 -> bb340__0_748 [label="unwind"];
    bb130__0_748 -> bb200__0_748 [label=""];
    bb131__0_748 -> bb132__0_748 [label="return"];
    bb131__0_748 -> bb340__0_748 [label="unwind"];
    bb132__0_748 -> bb133__0_748 [label="return"];
    bb132__0_748 -> bb340__0_748 [label="unwind"];
    bb133__0_748 -> bb134__0_748 [label="0"];
    bb133__0_748 -> bb135__0_748 [label="1"];
    bb133__0_748 -> bb4__0_748 [label="otherwise"];
    bb134__0_748 -> bb137__0_748 [label="success"];
    bb134__0_748 -> bb340__0_748 [label="unwind"];
    bb135__0_748 -> bb136__0_748 [label="return"];
    bb135__0_748 -> bb340__0_748 [label="unwind"];
    bb136__0_748 -> bb317__0_748 [label=""];
    bb137__0_748 -> bb138__0_748 [label="return"];
    bb137__0_748 -> bb340__0_748 [label="unwind"];
    bb138__0_748 -> bb139__0_748 [label="return"];
    bb138__0_748 -> bb340__0_748 [label="unwind"];
    bb139__0_748 -> bb140__0_748 [label="0"];
    bb139__0_748 -> bb141__0_748 [label="1"];
    bb139__0_748 -> bb4__0_748 [label="otherwise"];
    bb140__0_748 -> bb143__0_748 [label="return"];
    bb140__0_748 -> bb340__0_748 [label="unwind"];
    bb141__0_748 -> bb142__0_748 [label="return"];
    bb141__0_748 -> bb340__0_748 [label="unwind"];
    bb142__0_748 -> bb317__0_748 [label=""];
    bb143__0_748 -> bb144__0_748 [label="return"];
    bb143__0_748 -> bb340__0_748 [label="unwind"];
    bb144__0_748 -> bb145__0_748 [label="return"];
    bb144__0_748 -> bb340__0_748 [label="unwind"];
    bb145__0_748 -> bb146__0_748 [label="return"];
    bb145__0_748 -> bb340__0_748 [label="unwind"];
    bb146__0_748 -> bb147__0_748 [label="return"];
    bb146__0_748 -> bb340__0_748 [label="unwind"];
    bb147__0_748 -> bb148__0_748 [label="0"];
    bb147__0_748 -> bb149__0_748 [label="1"];
    bb147__0_748 -> bb4__0_748 [label="otherwise"];
    bb148__0_748 -> bb151__0_748 [label="return"];
    bb148__0_748 -> bb340__0_748 [label="unwind"];
    bb149__0_748 -> bb150__0_748 [label="return"];
    bb149__0_748 -> bb340__0_748 [label="unwind"];
    bb150__0_748 -> bb315__0_748 [label=""];
    bb151__0_748 -> bb152__0_748 [label="return"];
    bb151__0_748 -> bb340__0_748 [label="unwind"];
    bb152__0_748 -> bb153__0_748 [label="return"];
    bb152__0_748 -> bb340__0_748 [label="unwind"];
    bb153__0_748 -> bb154__0_748 [label="0"];
    bb153__0_748 -> bb155__0_748 [label="1"];
    bb153__0_748 -> bb4__0_748 [label="otherwise"];
    bb154__0_748 -> bb157__0_748 [label="return"];
    bb154__0_748 -> bb340__0_748 [label="unwind"];
    bb155__0_748 -> bb156__0_748 [label="return"];
    bb155__0_748 -> bb340__0_748 [label="unwind"];
    bb156__0_748 -> bb315__0_748 [label=""];
    bb157__0_748 -> bb158__0_748 [label="return"];
    bb157__0_748 -> bb340__0_748 [label="unwind"];
    bb158__0_748 -> bb159__0_748 [label="return"];
    bb158__0_748 -> bb340__0_748 [label="unwind"];
    bb159__0_748 -> bb160__0_748 [label="return"];
    bb159__0_748 -> bb340__0_748 [label="unwind"];
    bb160__0_748 -> bb161__0_748 [label="return"];
    bb160__0_748 -> bb340__0_748 [label="unwind"];
    bb161__0_748 -> bb162__0_748 [label="0"];
    bb161__0_748 -> bb163__0_748 [label="1"];
    bb161__0_748 -> bb4__0_748 [label="otherwise"];
    bb162__0_748 -> bb165__0_748 [label="return"];
    bb162__0_748 -> bb340__0_748 [label="unwind"];
    bb163__0_748 -> bb164__0_748 [label="return"];
    bb163__0_748 -> bb340__0_748 [label="unwind"];
    bb164__0_748 -> bb314__0_748 [label=""];
    bb165__0_748 -> bb166__0_748 [label="return"];
    bb165__0_748 -> bb340__0_748 [label="unwind"];
    bb166__0_748 -> bb167__0_748 [label="return"];
    bb166__0_748 -> bb340__0_748 [label="unwind"];
    bb167__0_748 -> bb168__0_748 [label="0"];
    bb167__0_748 -> bb169__0_748 [label="1"];
    bb167__0_748 -> bb4__0_748 [label="otherwise"];
    bb168__0_748 -> bb171__0_748 [label="return"];
    bb168__0_748 -> bb340__0_748 [label="unwind"];
    bb169__0_748 -> bb170__0_748 [label="return"];
    bb169__0_748 -> bb340__0_748 [label="unwind"];
    bb170__0_748 -> bb313__0_748 [label=""];
    bb171__0_748 -> bb172__0_748 [label="return"];
    bb171__0_748 -> bb340__0_748 [label="unwind"];
    bb172__0_748 -> bb173__0_748 [label="return"];
    bb172__0_748 -> bb340__0_748 [label="unwind"];
    bb173__0_748 -> bb174__0_748 [label="0"];
    bb173__0_748 -> bb175__0_748 [label="1"];
    bb173__0_748 -> bb4__0_748 [label="otherwise"];
    bb174__0_748 -> bb178__0_748 [label="0"];
    bb174__0_748 -> bb177__0_748 [label="otherwise"];
    bb175__0_748 -> bb176__0_748 [label="return"];
    bb175__0_748 -> bb340__0_748 [label="unwind"];
    bb176__0_748 -> bb312__0_748 [label=""];
    bb177__0_748 -> bb186__0_748 [label=""];
    bb178__0_748 -> bb179__0_748 [label="return"];
    bb178__0_748 -> bb340__0_748 [label="unwind"];
    bb179__0_748 -> bb180__0_748 [label="return"];
    bb179__0_748 -> bb340__0_748 [label="unwind"];
    bb180__0_748 -> bb181__0_748 [label="return"];
    bb180__0_748 -> bb340__0_748 [label="unwind"];
    bb181__0_748 -> bb182__0_748 [label="return"];
    bb181__0_748 -> bb339__0_748 [label="unwind"];
    bb182__0_748 -> bb183__0_748 [label="return"];
    bb182__0_748 -> bb339__0_748 [label="unwind"];
    bb183__0_748 -> bb184__0_748 [label="return"];
    bb183__0_748 -> bb340__0_748 [label="unwind"];
    bb184__0_748 -> bb185__0_748 [label="return"];
    bb184__0_748 -> bb340__0_748 [label="unwind"];
    bb185__0_748 -> bb186__0_748 [label=""];
    bb186__0_748 -> bb187__0_748 [label="return"];
    bb186__0_748 -> bb340__0_748 [label="unwind"];
    bb187__0_748 -> bb188__0_748 [label="0"];
    bb187__0_748 -> bb189__0_748 [label="1"];
    bb187__0_748 -> bb4__0_748 [label="otherwise"];
    bb188__0_748 -> bb192__0_748 [label="0"];
    bb188__0_748 -> bb191__0_748 [label="otherwise"];
    bb189__0_748 -> bb190__0_748 [label="return"];
    bb189__0_748 -> bb340__0_748 [label="unwind"];
    bb190__0_748 -> bb312__0_748 [label=""];
    bb191__0_748 -> bb193__0_748 [label="return"];
    bb191__0_748 -> bb340__0_748 [label="unwind"];
    bb192__0_748 -> bb199__0_748 [label=""];
    bb193__0_748 -> bb194__0_748 [label="return"];
    bb193__0_748 -> bb340__0_748 [label="unwind"];
    bb194__0_748 -> bb195__0_748 [label="return"];
    bb194__0_748 -> bb340__0_748 [label="unwind"];
    bb195__0_748 -> bb196__0_748 [label="0"];
    bb195__0_748 -> bb197__0_748 [label="1"];
    bb195__0_748 -> bb4__0_748 [label="otherwise"];
    bb196__0_748 -> bb199__0_748 [label=""];
    bb197__0_748 -> bb198__0_748 [label="return"];
    bb197__0_748 -> bb340__0_748 [label="unwind"];
    bb198__0_748 -> bb312__0_748 [label=""];
    bb199__0_748 -> bb200__0_748 [label=""];
    bb200__0_748 -> bb201__0_748 [label="return"];
    bb200__0_748 -> bb340__0_748 [label="unwind"];
    bb201__0_748 -> bb202__0_748 [label="return"];
    bb201__0_748 -> bb340__0_748 [label="unwind"];
    bb202__0_748 -> bb204__0_748 [label="0"];
    bb202__0_748 -> bb203__0_748 [label="otherwise"];
    bb203__0_748 -> bb212__0_748 [label=""];
    bb204__0_748 -> bb205__0_748 [label="return"];
    bb204__0_748 -> bb340__0_748 [label="unwind"];
    bb205__0_748 -> bb206__0_748 [label="return"];
    bb205__0_748 -> bb340__0_748 [label="unwind"];
    bb206__0_748 -> bb207__0_748 [label="return"];
    bb206__0_748 -> bb340__0_748 [label="unwind"];
    bb207__0_748 -> bb208__0_748 [label="return"];
    bb207__0_748 -> bb338__0_748 [label="unwind"];
    bb208__0_748 -> bb209__0_748 [label="return"];
    bb208__0_748 -> bb338__0_748 [label="unwind"];
    bb209__0_748 -> bb210__0_748 [label="return"];
    bb209__0_748 -> bb340__0_748 [label="unwind"];
    bb210__0_748 -> bb211__0_748 [label="return"];
    bb210__0_748 -> bb340__0_748 [label="unwind"];
    bb211__0_748 -> bb212__0_748 [label=""];
    bb212__0_748 -> bb213__0_748 [label="return"];
    bb212__0_748 -> bb340__0_748 [label="unwind"];
    bb213__0_748 -> bb214__0_748 [label="0"];
    bb213__0_748 -> bb215__0_748 [label="1"];
    bb213__0_748 -> bb4__0_748 [label="otherwise"];
    bb214__0_748 -> bb217__0_748 [label="return"];
    bb214__0_748 -> bb340__0_748 [label="unwind"];
    bb215__0_748 -> bb216__0_748 [label="return"];
    bb215__0_748 -> bb340__0_748 [label="unwind"];
    bb216__0_748 -> bb319__0_748 [label=""];
    bb217__0_748 -> bb218__0_748 [label="return"];
    bb217__0_748 -> bb340__0_748 [label="unwind"];
    bb218__0_748 -> bb221__0_748 [label="0"];
    bb218__0_748 -> bb219__0_748 [label="otherwise"];
    bb219__0_748 -> bb220__0_748 [label="return"];
    bb219__0_748 -> bb340__0_748 [label="unwind"];
    bb220__0_748 -> bb223__0_748 [label=""];
    bb221__0_748 -> bb222__0_748 [label="return"];
    bb221__0_748 -> bb340__0_748 [label="unwind"];
    bb222__0_748 -> bb223__0_748 [label=""];
    bb223__0_748 -> bb224__0_748 [label="return"];
    bb223__0_748 -> bb340__0_748 [label="unwind"];
    bb224__0_748 -> bb225__0_748 [label="return"];
    bb224__0_748 -> bb340__0_748 [label="unwind"];
    bb225__0_748 -> bb226__0_748 [label="return"];
    bb225__0_748 -> bb340__0_748 [label="unwind"];
    bb226__0_748 -> bb227__0_748 [label="return"];
    bb226__0_748 -> bb337__0_748 [label="unwind"];
    bb227__0_748 -> bb228__0_748 [label="return"];
    bb227__0_748 -> bb337__0_748 [label="unwind"];
    bb228__0_748 -> bb229__0_748 [label="return"];
    bb228__0_748 -> bb340__0_748 [label="unwind"];
    bb229__0_748 -> bb231__0_748 [label="0"];
    bb229__0_748 -> bb230__0_748 [label="otherwise"];
    bb230__0_748 -> bb244__0_748 [label=""];
    bb231__0_748 -> bb232__0_748 [label="return"];
    bb231__0_748 -> bb340__0_748 [label="unwind"];
    bb232__0_748 -> bb233__0_748 [label="return"];
    bb232__0_748 -> bb340__0_748 [label="unwind"];
    bb233__0_748 -> bb234__0_748 [label="return"];
    bb233__0_748 -> bb340__0_748 [label="unwind"];
    bb234__0_748 -> bb235__0_748 [label="return"];
    bb234__0_748 -> bb336__0_748 [label="unwind"];
    bb235__0_748 -> bb236__0_748 [label="return"];
    bb235__0_748 -> bb336__0_748 [label="unwind"];
    bb236__0_748 -> bb237__0_748 [label="return"];
    bb236__0_748 -> bb340__0_748 [label="unwind"];
    bb237__0_748 -> bb238__0_748 [label="return"];
    bb237__0_748 -> bb340__0_748 [label="unwind"];
    bb238__0_748 -> bb239__0_748 [label="return"];
    bb238__0_748 -> bb340__0_748 [label="unwind"];
    bb239__0_748 -> bb240__0_748 [label="return"];
    bb239__0_748 -> bb340__0_748 [label="unwind"];
    bb240__0_748 -> bb241__0_748 [label="return"];
    bb240__0_748 -> bb335__0_748 [label="unwind"];
    bb241__0_748 -> bb242__0_748 [label="return"];
    bb241__0_748 -> bb335__0_748 [label="unwind"];
    bb242__0_748 -> bb243__0_748 [label="return"];
    bb242__0_748 -> bb340__0_748 [label="unwind"];
    bb243__0_748 -> bb244__0_748 [label=""];
    bb244__0_748 -> bb245__0_748 [label="return"];
    bb244__0_748 -> bb340__0_748 [label="unwind"];
    bb245__0_748 -> bb246__0_748 [label="0"];
    bb245__0_748 -> bb247__0_748 [label="1"];
    bb245__0_748 -> bb4__0_748 [label="otherwise"];
    bb246__0_748 -> bb249__0_748 [label="return"];
    bb246__0_748 -> bb340__0_748 [label="unwind"];
    bb247__0_748 -> bb248__0_748 [label="return"];
    bb247__0_748 -> bb340__0_748 [label="unwind"];
    bb248__0_748 -> bb311__0_748 [label=""];
    bb249__0_748 -> bb250__0_748 [label="return"];
    bb249__0_748 -> bb340__0_748 [label="unwind"];
    bb250__0_748 -> bb251__0_748 [label="return"];
    bb250__0_748 -> bb340__0_748 [label="unwind"];
    bb251__0_748 -> bb252__0_748 [label="return"];
    bb251__0_748 -> bb340__0_748 [label="unwind"];
    bb252__0_748 -> bb253__0_748 [label="return"];
    bb252__0_748 -> bb340__0_748 [label="unwind"];
    bb253__0_748 -> bb254__0_748 [label="return"];
    bb253__0_748 -> bb340__0_748 [label="unwind"];
    bb254__0_748 -> bb255__0_748 [label="0"];
    bb254__0_748 -> bb256__0_748 [label="1"];
    bb254__0_748 -> bb4__0_748 [label="otherwise"];
    bb255__0_748 -> bb258__0_748 [label="return"];
    bb255__0_748 -> bb340__0_748 [label="unwind"];
    bb256__0_748 -> bb257__0_748 [label="return"];
    bb256__0_748 -> bb340__0_748 [label="unwind"];
    bb257__0_748 -> bb310__0_748 [label=""];
    bb258__0_748 -> bb259__0_748 [label="return"];
    bb258__0_748 -> bb340__0_748 [label="unwind"];
    bb259__0_748 -> bb260__0_748 [label="return"];
    bb259__0_748 -> bb340__0_748 [label="unwind"];
    bb260__0_748 -> bb261__0_748 [label="return"];
    bb260__0_748 -> bb340__0_748 [label="unwind"];
    bb261__0_748 -> bb262__0_748 [label="return"];
    bb261__0_748 -> bb340__0_748 [label="unwind"];
    bb262__0_748 -> bb263__0_748 [label="return"];
    bb262__0_748 -> bb340__0_748 [label="unwind"];
    bb263__0_748 -> bb264__0_748 [label="0"];
    bb263__0_748 -> bb265__0_748 [label="1"];
    bb263__0_748 -> bb4__0_748 [label="otherwise"];
    bb264__0_748 -> bb267__0_748 [label="return"];
    bb264__0_748 -> bb340__0_748 [label="unwind"];
    bb265__0_748 -> bb266__0_748 [label="return"];
    bb265__0_748 -> bb340__0_748 [label="unwind"];
    bb266__0_748 -> bb309__0_748 [label=""];
    bb267__0_748 -> bb268__0_748 [label="return"];
    bb267__0_748 -> bb340__0_748 [label="unwind"];
    bb268__0_748 -> bb269__0_748 [label="0"];
    bb268__0_748 -> bb270__0_748 [label="1"];
    bb268__0_748 -> bb4__0_748 [label="otherwise"];
    bb269__0_748 -> bb272__0_748 [label="return"];
    bb269__0_748 -> bb340__0_748 [label="unwind"];
    bb270__0_748 -> bb271__0_748 [label="return"];
    bb270__0_748 -> bb340__0_748 [label="unwind"];
    bb271__0_748 -> bb307__0_748 [label=""];
    bb272__0_748 -> bb273__0_748 [label="return"];
    bb272__0_748 -> bb340__0_748 [label="unwind"];
    bb273__0_748 -> bb274__0_748 [label="0"];
    bb273__0_748 -> bb275__0_748 [label="1"];
    bb273__0_748 -> bb4__0_748 [label="otherwise"];
    bb274__0_748 -> bb277__0_748 [label="return"];
    bb274__0_748 -> bb340__0_748 [label="unwind"];
    bb275__0_748 -> bb276__0_748 [label="return"];
    bb275__0_748 -> bb340__0_748 [label="unwind"];
    bb276__0_748 -> bb307__0_748 [label=""];
    bb277__0_748 -> bb278__0_748 [label="return"];
    bb277__0_748 -> bb340__0_748 [label="unwind"];
    bb278__0_748 -> bb279__0_748 [label="return"];
    bb278__0_748 -> bb340__0_748 [label="unwind"];
    bb279__0_748 -> bb280__0_748 [label="return"];
    bb279__0_748 -> bb340__0_748 [label="unwind"];
    bb280__0_748 -> bb281__0_748 [label="return"];
    bb280__0_748 -> bb334__0_748 [label="unwind"];
    bb281__0_748 -> bb282__0_748 [label="return"];
    bb281__0_748 -> bb334__0_748 [label="unwind"];
    bb282__0_748 -> bb283__0_748 [label="return"];
    bb282__0_748 -> bb340__0_748 [label="unwind"];
    bb283__0_748 -> bb284__0_748 [label="return"];
    bb283__0_748 -> bb340__0_748 [label="unwind"];
    bb284__0_748 -> bb285__0_748 [label="return"];
    bb284__0_748 -> bb340__0_748 [label="unwind"];
    bb285__0_748 -> bb286__0_748 [label="return"];
    bb285__0_748 -> bb340__0_748 [label="unwind"];
    bb286__0_748 -> bb287__0_748 [label="return"];
    bb286__0_748 -> bb333__0_748 [label="unwind"];
    bb287__0_748 -> bb288__0_748 [label="return"];
    bb287__0_748 -> bb333__0_748 [label="unwind"];
    bb288__0_748 -> bb289__0_748 [label="return"];
    bb288__0_748 -> bb340__0_748 [label="unwind"];
    bb289__0_748 -> bb290__0_748 [label="return"];
    bb289__0_748 -> bb340__0_748 [label="unwind"];
    bb290__0_748 -> bb291__0_748 [label="return"];
    bb290__0_748 -> bb340__0_748 [label="unwind"];
    bb291__0_748 -> bb292__0_748 [label="return"];
    bb291__0_748 -> bb340__0_748 [label="unwind"];
    bb292__0_748 -> bb293__0_748 [label="0"];
    bb292__0_748 -> bb294__0_748 [label="1"];
    bb292__0_748 -> bb4__0_748 [label="otherwise"];
    bb293__0_748 -> bb296__0_748 [label="return"];
    bb293__0_748 -> bb340__0_748 [label="unwind"];
    bb294__0_748 -> bb295__0_748 [label="return"];
    bb294__0_748 -> bb340__0_748 [label="unwind"];
    bb295__0_748 -> bb308__0_748 [label=""];
    bb296__0_748 -> bb297__0_748 [label="return"];
    bb296__0_748 -> bb340__0_748 [label="unwind"];
    bb297__0_748 -> bb298__0_748 [label="return"];
    bb297__0_748 -> bb340__0_748 [label="unwind"];
    bb298__0_748 -> bb299__0_748 [label="return"];
    bb298__0_748 -> bb340__0_748 [label="unwind"];
    bb299__0_748 -> bb300__0_748 [label="return"];
    bb299__0_748 -> bb340__0_748 [label="unwind"];
    bb300__0_748 -> bb301__0_748 [label="return"];
    bb300__0_748 -> bb340__0_748 [label="unwind"];
    bb301__0_748 -> bb302__0_748 [label="return"];
    bb301__0_748 -> bb332__0_748 [label="unwind"];
    bb302__0_748 -> bb303__0_748 [label="return"];
    bb302__0_748 -> bb332__0_748 [label="unwind"];
    bb303__0_748 -> bb304__0_748 [label="return"];
    bb303__0_748 -> bb340__0_748 [label="unwind"];
    bb304__0_748 -> bb305__0_748 [label="return"];
    bb304__0_748 -> bb345__0_748 [label="unwind"];
    bb305__0_748 -> bb306__0_748 [label="return"];
    bb305__0_748 -> bb346__0_748 [label="unwind"];
    bb306__0_748 -> bb331__0_748 [label=""];
    bb307__0_748 -> bb308__0_748 [label=""];
    bb308__0_748 -> bb309__0_748 [label=""];
    bb309__0_748 -> bb310__0_748 [label=""];
    bb310__0_748 -> bb311__0_748 [label=""];
    bb311__0_748 -> bb319__0_748 [label=""];
    bb312__0_748 -> bb313__0_748 [label=""];
    bb313__0_748 -> bb314__0_748 [label=""];
    bb314__0_748 -> bb316__0_748 [label=""];
    bb315__0_748 -> bb316__0_748 [label=""];
    bb316__0_748 -> bb318__0_748 [label=""];
    bb317__0_748 -> bb318__0_748 [label=""];
    bb318__0_748 -> bb319__0_748 [label=""];
    bb319__0_748 -> bb322__0_748 [label=""];
    bb320__0_748 -> bb321__0_748 [label=""];
    bb321__0_748 -> bb322__0_748 [label=""];
    bb322__0_748 -> bb323__0_748 [label=""];
    bb323__0_748 -> bb327__0_748 [label=""];
    bb324__0_748 -> bb325__0_748 [label=""];
    bb325__0_748 -> bb326__0_748 [label=""];
    bb326__0_748 -> bb327__0_748 [label=""];
    bb327__0_748 -> bb328__0_748 [label="return"];
    bb327__0_748 -> bb345__0_748 [label="unwind"];
    bb328__0_748 -> bb329__0_748 [label=""];
    bb329__0_748 -> bb330__0_748 [label="return"];
    bb329__0_748 -> bb346__0_748 [label="unwind"];
    bb330__0_748 -> bb331__0_748 [label=""];
    bb332__0_748 -> bb340__0_748 [label="return"];
    bb333__0_748 -> bb340__0_748 [label="return"];
    bb334__0_748 -> bb340__0_748 [label="return"];
    bb335__0_748 -> bb340__0_748 [label="return"];
    bb336__0_748 -> bb340__0_748 [label="return"];
    bb337__0_748 -> bb340__0_748 [label="return"];
    bb338__0_748 -> bb340__0_748 [label="return"];
    bb339__0_748 -> bb340__0_748 [label="return"];
    bb340__0_748 -> bb345__0_748 [label="return"];
    bb341__0_748 -> bb345__0_748 [label="return"];
    bb342__0_748 -> bb345__0_748 [label="return"];
    bb343__0_748 -> bb345__0_748 [label="return"];
    bb344__0_748 -> bb345__0_748 [label="return"];
    bb345__0_748 -> bb346__0_748 [label="return"];
    bb347__0_748 -> bb345__0_748 [label=""];
    bb348__0_748 -> bb346__0_748 [label=""];
}
