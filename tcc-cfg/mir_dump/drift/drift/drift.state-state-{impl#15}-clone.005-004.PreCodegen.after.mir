// MIR for `state::state::<impl at programs/drift/src/state/state.rs:16:1: 16:11>::clone` after PreCodegen

fn state::state::<impl at programs/drift/src/state/state.rs:16:1: 16:11>::clone(_1: &state::state::State) -> state::state::State {
    debug self => _1;
    let mut _0: state::state::State;
    let mut _2: anchor_lang::prelude::Pubkey;
    let mut _3: &anchor_lang::prelude::Pubkey;
    let _4: &anchor_lang::prelude::Pubkey;
    let mut _5: anchor_lang::prelude::Pubkey;
    let mut _6: &anchor_lang::prelude::Pubkey;
    let _7: &anchor_lang::prelude::Pubkey;
    let mut _8: anchor_lang::prelude::Pubkey;
    let mut _9: &anchor_lang::prelude::Pubkey;
    let _10: &anchor_lang::prelude::Pubkey;
    let mut _11: anchor_lang::prelude::Pubkey;
    let mut _12: &anchor_lang::prelude::Pubkey;
    let _13: &anchor_lang::prelude::Pubkey;
    let mut _14: anchor_lang::prelude::Pubkey;
    let mut _15: &anchor_lang::prelude::Pubkey;
    let _16: &anchor_lang::prelude::Pubkey;
    let mut _17: state::state::FeeStructure;
    let mut _18: &state::state::FeeStructure;
    let _19: &state::state::FeeStructure;
    let mut _20: state::state::FeeStructure;
    let mut _21: &state::state::FeeStructure;
    let _22: &state::state::FeeStructure;
    let mut _23: state::state::OracleGuardRails;
    let mut _24: &state::state::OracleGuardRails;
    let _25: &state::state::OracleGuardRails;
    let mut _26: u64;
    let mut _27: &u64;
    let _28: &u64;
    let mut _29: u64;
    let mut _30: &u64;
    let _31: &u64;
    let mut _32: u64;
    let mut _33: &u64;
    let _34: &u64;
    let mut _35: u32;
    let mut _36: &u32;
    let _37: &u32;
    let mut _38: u16;
    let mut _39: &u16;
    let _40: &u16;
    let mut _41: u16;
    let mut _42: &u16;
    let _43: &u16;
    let mut _44: u16;
    let mut _45: &u16;
    let _46: &u16;
    let mut _47: u8;
    let mut _48: &u8;
    let _49: &u8;
    let mut _50: u8;
    let mut _51: &u8;
    let _52: &u8;
    let mut _53: u8;
    let mut _54: &u8;
    let _55: &u8;
    let mut _56: u8;
    let mut _57: &u8;
    let _58: &u8;
    let mut _59: u8;
    let mut _60: &u8;
    let _61: &u8;
    let mut _62: u8;
    let mut _63: &u8;
    let _64: &u8;
    let mut _65: u16;
    let mut _66: &u16;
    let _67: &u16;
    let mut _68: u16;
    let mut _69: &u16;
    let _70: &u16;
    let mut _71: u16;
    let mut _72: &u16;
    let _73: &u16;
    let mut _74: u8;
    let mut _75: &u8;
    let _76: &u8;
    let mut _77: [u8; 9];
    let mut _78: &[u8; 9];
    let _79: &[u8; 9];

    bb0: {
        StorageLive(_2);
        StorageLive(_3);
        StorageLive(_4);
        _4 = &((*_1).0: anchor_lang::prelude::Pubkey);
        _3 = &(*_4);
        _2 = <anchor_lang::prelude::Pubkey as Clone>::clone(move _3) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_3);
        StorageLive(_5);
        StorageLive(_6);
        StorageLive(_7);
        _7 = &((*_1).1: anchor_lang::prelude::Pubkey);
        _6 = &(*_7);
        _5 = <anchor_lang::prelude::Pubkey as Clone>::clone(move _6) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_6);
        StorageLive(_8);
        StorageLive(_9);
        StorageLive(_10);
        _10 = &((*_1).2: anchor_lang::prelude::Pubkey);
        _9 = &(*_10);
        _8 = <anchor_lang::prelude::Pubkey as Clone>::clone(move _9) -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageDead(_9);
        StorageLive(_11);
        StorageLive(_12);
        StorageLive(_13);
        _13 = &((*_1).3: anchor_lang::prelude::Pubkey);
        _12 = &(*_13);
        _11 = <anchor_lang::prelude::Pubkey as Clone>::clone(move _12) -> [return: bb4, unwind continue];
    }

    bb4: {
        StorageDead(_12);
        StorageLive(_14);
        StorageLive(_15);
        StorageLive(_16);
        _16 = &((*_1).4: anchor_lang::prelude::Pubkey);
        _15 = &(*_16);
        _14 = <anchor_lang::prelude::Pubkey as Clone>::clone(move _15) -> [return: bb5, unwind continue];
    }

    bb5: {
        StorageDead(_15);
        StorageLive(_17);
        StorageLive(_18);
        StorageLive(_19);
        _19 = &((*_1).5: state::state::FeeStructure);
        _18 = &(*_19);
        _17 = <state::state::FeeStructure as Clone>::clone(move _18) -> [return: bb6, unwind continue];
    }

    bb6: {
        StorageDead(_18);
        StorageLive(_20);
        StorageLive(_21);
        StorageLive(_22);
        _22 = &((*_1).6: state::state::FeeStructure);
        _21 = &(*_22);
        _20 = <state::state::FeeStructure as Clone>::clone(move _21) -> [return: bb7, unwind continue];
    }

    bb7: {
        StorageDead(_21);
        StorageLive(_23);
        StorageLive(_24);
        StorageLive(_25);
        _25 = &((*_1).7: state::state::OracleGuardRails);
        _24 = &(*_25);
        _23 = <state::state::OracleGuardRails as Clone>::clone(move _24) -> [return: bb8, unwind continue];
    }

    bb8: {
        StorageDead(_24);
        StorageLive(_26);
        StorageLive(_27);
        StorageLive(_28);
        _28 = &((*_1).8: u64);
        _27 = &(*_28);
        _26 = <u64 as Clone>::clone(move _27) -> [return: bb9, unwind continue];
    }

    bb9: {
        StorageDead(_27);
        StorageLive(_29);
        StorageLive(_30);
        StorageLive(_31);
        _31 = &((*_1).9: u64);
        _30 = &(*_31);
        _29 = <u64 as Clone>::clone(move _30) -> [return: bb10, unwind continue];
    }

    bb10: {
        StorageDead(_30);
        StorageLive(_32);
        StorageLive(_33);
        StorageLive(_34);
        _34 = &((*_1).10: u64);
        _33 = &(*_34);
        _32 = <u64 as Clone>::clone(move _33) -> [return: bb11, unwind continue];
    }

    bb11: {
        StorageDead(_33);
        StorageLive(_35);
        StorageLive(_36);
        StorageLive(_37);
        _37 = &((*_1).11: u32);
        _36 = &(*_37);
        _35 = <u32 as Clone>::clone(move _36) -> [return: bb12, unwind continue];
    }

    bb12: {
        StorageDead(_36);
        StorageLive(_38);
        StorageLive(_39);
        StorageLive(_40);
        _40 = &((*_1).12: u16);
        _39 = &(*_40);
        _38 = <u16 as Clone>::clone(move _39) -> [return: bb13, unwind continue];
    }

    bb13: {
        StorageDead(_39);
        StorageLive(_41);
        StorageLive(_42);
        StorageLive(_43);
        _43 = &((*_1).13: u16);
        _42 = &(*_43);
        _41 = <u16 as Clone>::clone(move _42) -> [return: bb14, unwind continue];
    }

    bb14: {
        StorageDead(_42);
        StorageLive(_44);
        StorageLive(_45);
        StorageLive(_46);
        _46 = &((*_1).14: u16);
        _45 = &(*_46);
        _44 = <u16 as Clone>::clone(move _45) -> [return: bb15, unwind continue];
    }

    bb15: {
        StorageDead(_45);
        StorageLive(_47);
        StorageLive(_48);
        StorageLive(_49);
        _49 = &((*_1).15: u8);
        _48 = &(*_49);
        _47 = <u8 as Clone>::clone(move _48) -> [return: bb16, unwind continue];
    }

    bb16: {
        StorageDead(_48);
        StorageLive(_50);
        StorageLive(_51);
        StorageLive(_52);
        _52 = &((*_1).16: u8);
        _51 = &(*_52);
        _50 = <u8 as Clone>::clone(move _51) -> [return: bb17, unwind continue];
    }

    bb17: {
        StorageDead(_51);
        StorageLive(_53);
        StorageLive(_54);
        StorageLive(_55);
        _55 = &((*_1).17: u8);
        _54 = &(*_55);
        _53 = <u8 as Clone>::clone(move _54) -> [return: bb18, unwind continue];
    }

    bb18: {
        StorageDead(_54);
        StorageLive(_56);
        StorageLive(_57);
        StorageLive(_58);
        _58 = &((*_1).18: u8);
        _57 = &(*_58);
        _56 = <u8 as Clone>::clone(move _57) -> [return: bb19, unwind continue];
    }

    bb19: {
        StorageDead(_57);
        StorageLive(_59);
        StorageLive(_60);
        StorageLive(_61);
        _61 = &((*_1).19: u8);
        _60 = &(*_61);
        _59 = <u8 as Clone>::clone(move _60) -> [return: bb20, unwind continue];
    }

    bb20: {
        StorageDead(_60);
        StorageLive(_62);
        StorageLive(_63);
        StorageLive(_64);
        _64 = &((*_1).20: u8);
        _63 = &(*_64);
        _62 = <u8 as Clone>::clone(move _63) -> [return: bb21, unwind continue];
    }

    bb21: {
        StorageDead(_63);
        StorageLive(_65);
        StorageLive(_66);
        StorageLive(_67);
        _67 = &((*_1).21: u16);
        _66 = &(*_67);
        _65 = <u16 as Clone>::clone(move _66) -> [return: bb22, unwind continue];
    }

    bb22: {
        StorageDead(_66);
        StorageLive(_68);
        StorageLive(_69);
        StorageLive(_70);
        _70 = &((*_1).22: u16);
        _69 = &(*_70);
        _68 = <u16 as Clone>::clone(move _69) -> [return: bb23, unwind continue];
    }

    bb23: {
        StorageDead(_69);
        StorageLive(_71);
        StorageLive(_72);
        StorageLive(_73);
        _73 = &((*_1).23: u16);
        _72 = &(*_73);
        _71 = <u16 as Clone>::clone(move _72) -> [return: bb24, unwind continue];
    }

    bb24: {
        StorageDead(_72);
        StorageLive(_74);
        StorageLive(_75);
        StorageLive(_76);
        _76 = &((*_1).24: u8);
        _75 = &(*_76);
        _74 = <u8 as Clone>::clone(move _75) -> [return: bb25, unwind continue];
    }

    bb25: {
        StorageDead(_75);
        StorageLive(_77);
        StorageLive(_78);
        StorageLive(_79);
        _79 = &((*_1).25: [u8; 9]);
        _78 = &(*_79);
        _77 = <[u8; 9] as Clone>::clone(move _78) -> [return: bb26, unwind continue];
    }

    bb26: {
        StorageDead(_78);
        _0 = state::state::State { admin: move _2, whitelist_mint: move _5, discount_mint: move _8, signer: move _11, srm_vault: move _14, perp_fee_structure: move _17, spot_fee_structure: move _20, oracle_guard_rails: move _23, number_of_authorities: move _26, number_of_sub_accounts: move _29, lp_cooldown_time: move _32, liquidation_margin_buffer_ratio: move _35, settlement_duration: move _38, number_of_markets: move _41, number_of_spot_markets: move _44, signer_nonce: move _47, min_perp_auction_duration: move _50, default_market_order_time_in_force: move _53, default_spot_auction_duration: move _56, exchange_status: move _59, liquidation_duration: move _62, initial_pct_to_liquidate: move _65, max_number_of_sub_accounts: move _68, max_initialize_user_fee: move _71, feature_bit_flags: move _74, padding: move _77 };
        StorageDead(_77);
        StorageDead(_74);
        StorageDead(_71);
        StorageDead(_68);
        StorageDead(_65);
        StorageDead(_62);
        StorageDead(_59);
        StorageDead(_56);
        StorageDead(_53);
        StorageDead(_50);
        StorageDead(_47);
        StorageDead(_44);
        StorageDead(_41);
        StorageDead(_38);
        StorageDead(_35);
        StorageDead(_32);
        StorageDead(_29);
        StorageDead(_26);
        StorageDead(_23);
        StorageDead(_20);
        StorageDead(_17);
        StorageDead(_14);
        StorageDead(_11);
        StorageDead(_8);
        StorageDead(_5);
        StorageDead(_2);
        StorageDead(_79);
        StorageDead(_76);
        StorageDead(_73);
        StorageDead(_70);
        StorageDead(_67);
        StorageDead(_64);
        StorageDead(_61);
        StorageDead(_58);
        StorageDead(_55);
        StorageDead(_52);
        StorageDead(_49);
        StorageDead(_46);
        StorageDead(_43);
        StorageDead(_40);
        StorageDead(_37);
        StorageDead(_34);
        StorageDead(_31);
        StorageDead(_28);
        StorageDead(_25);
        StorageDead(_22);
        StorageDead(_19);
        StorageDead(_16);
        StorageDead(_13);
        StorageDead(_10);
        StorageDead(_7);
        StorageDead(_4);
        return;
    }
}
