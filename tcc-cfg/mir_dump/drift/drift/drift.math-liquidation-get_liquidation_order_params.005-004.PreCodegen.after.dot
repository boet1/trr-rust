digraph Mir_0_2400 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn get_liquidation_order_params(_1: u16, _2: controller::position::PositionDirection, _3: u64, _4: i64, _5: u32) -&gt; std::result::Result&lt;state::order_params::OrderParams, error::ErrorCode&gt;<br align="left"/>let _6: controller::position::PositionDirection;<br align="left"/>let mut _7: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let _8: u128;<br align="left"/>let mut _9: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _10: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _11: i64;<br align="left"/>let mut _12: i64;<br align="left"/>let mut _13: isize;<br align="left"/>let _14: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _15: !;<br align="left"/>let mut _16: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _17: u128;<br align="left"/>let _18: u64;<br align="left"/>let mut _19: isize;<br align="left"/>let mut _20: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _21: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _22: u128;<br align="left"/>let mut _23: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _24: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _25: u128;<br align="left"/>let mut _26: u128;<br align="left"/>let mut _27: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _28: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _29: u128;<br align="left"/>let mut _30: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _31: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _32: u128;<br align="left"/>let mut _33: u128;<br align="left"/>let mut _34: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _35: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _36: u32;<br align="left"/>let mut _37: isize;<br align="left"/>let _38: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _39: !;<br align="left"/>let mut _40: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _41: u128;<br align="left"/>let mut _42: isize;<br align="left"/>let _43: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _44: !;<br align="left"/>let mut _45: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _46: u128;<br align="left"/>let mut _47: isize;<br align="left"/>let _48: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _49: !;<br align="left"/>let mut _50: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _51: u128;<br align="left"/>let mut _52: isize;<br align="left"/>let _53: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _54: !;<br align="left"/>let mut _55: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _56: u128;<br align="left"/>let mut _57: isize;<br align="left"/>let _58: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _59: !;<br align="left"/>let mut _60: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _61: u64;<br align="left"/>let mut _62: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _63: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _64: u128;<br align="left"/>let mut _65: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _66: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _67: u128;<br align="left"/>let mut _68: u128;<br align="left"/>let mut _69: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _70: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _71: u128;<br align="left"/>let mut _72: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _73: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _74: u128;<br align="left"/>let mut _75: u128;<br align="left"/>let mut _76: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _77: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _78: u32;<br align="left"/>let mut _79: isize;<br align="left"/>let _80: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _81: !;<br align="left"/>let mut _82: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _83: u128;<br align="left"/>let mut _84: isize;<br align="left"/>let _85: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _86: !;<br align="left"/>let mut _87: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _88: u128;<br align="left"/>let mut _89: isize;<br align="left"/>let _90: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _91: !;<br align="left"/>let mut _92: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _93: u128;<br align="left"/>let mut _94: isize;<br align="left"/>let _95: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _96: !;<br align="left"/>let mut _97: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _98: u128;<br align="left"/>let mut _99: isize;<br align="left"/>let _100: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _101: !;<br align="left"/>let mut _102: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _103: u64;<br align="left"/>let _104: state::order_params::OrderParams;<br align="left"/>let mut _105: u16;<br align="left"/>let mut _106: controller::position::PositionDirection;<br align="left"/>let mut _107: u64;<br align="left"/>let mut _108: state::user::OrderType;<br align="left"/>let mut _109: state::user::MarketType;<br align="left"/>let mut _110: u64;<br align="left"/>let mut _111: state::order_params::OrderParams;<br align="left"/>let mut _112: state::order_params::OrderParams;<br align="left"/>debug market_index =&gt; _1;<br align="left"/>debug existing_direction =&gt; _2;<br align="left"/>debug base_asset_amount =&gt; _3;<br align="left"/>debug oracle_price =&gt; _4;<br align="left"/>debug liquidation_fee =&gt; _5;<br align="left"/>debug direction =&gt; _6;<br align="left"/>debug oracle_price_u128 =&gt; _8;<br align="left"/>debug residual =&gt; _14;<br align="left"/>debug val =&gt; _17;<br align="left"/>debug limit_price =&gt; _18;<br align="left"/>debug residual =&gt; _38;<br align="left"/>debug val =&gt; _41;<br align="left"/>debug residual =&gt; _43;<br align="left"/>debug val =&gt; _46;<br align="left"/>debug residual =&gt; _48;<br align="left"/>debug val =&gt; _51;<br align="left"/>debug residual =&gt; _53;<br align="left"/>debug val =&gt; _56;<br align="left"/>debug residual =&gt; _58;<br align="left"/>debug val =&gt; _61;<br align="left"/>debug residual =&gt; _80;<br align="left"/>debug val =&gt; _83;<br align="left"/>debug residual =&gt; _85;<br align="left"/>debug val =&gt; _88;<br align="left"/>debug residual =&gt; _90;<br align="left"/>debug val =&gt; _93;<br align="left"/>debug residual =&gt; _95;<br align="left"/>debug val =&gt; _98;<br align="left"/>debug residual =&gt; _100;<br align="left"/>debug val =&gt; _103;<br align="left"/>debug order_params =&gt; _104;<br align="left"/>>;
    bb0__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = &amp;_2<br/></td></tr><tr><td align="left">_6 = controller::position::PositionDirection::opposite(move _7)</td></tr></table>>];
    bb1__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = _4<br/></td></tr><tr><td align="left">_11 = core::num::&lt;impl i64&gt;::abs(move _12)</td></tr></table>>];
    bb2__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/></td></tr><tr><td align="left">_10 = &lt;i64 as Cast&gt;::cast::&lt;u128&gt;(move _11)</td></tr></table>>];
    bb3__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/></td></tr><tr><td align="left">_9 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _10)</td></tr></table>>];
    bb4__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>_13 = discriminant(_9)<br/></td></tr><tr><td align="left">switchInt(move _13)</td></tr></table>>];
    bb5__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>_17 = ((_9 as Continue).0: u128)<br/>_8 = _17<br/>StorageDead(_17)<br/>StorageDead(_9)<br/>StorageLive(_18)<br/>_19 = discriminant(_6)<br/></td></tr><tr><td align="left">switchInt(move _19)</td></tr></table>>];
    bb6__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb7__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = ((_9 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_16)<br/>_16 = _14<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;order_params::OrderParams, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _16)</td></tr></table>>];
    bb8__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_14)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>_67 = _8<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>_74 = _8<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>_78 = _5<br/></td></tr><tr><td align="left">_77 = &lt;u32 as Cast&gt;::cast::&lt;u128&gt;(move _78)</td></tr></table>>];
    bb10__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>_25 = _8<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>_32 = _8<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>_36 = _5<br/></td></tr><tr><td align="left">_35 = &lt;u32 as Cast&gt;::cast::&lt;u128&gt;(move _36)</td></tr></table>>];
    bb11__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/></td></tr><tr><td align="left">_34 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _35)</td></tr></table>>];
    bb12__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>_37 = discriminant(_34)<br/></td></tr><tr><td align="left">switchInt(move _37)</td></tr></table>>];
    bb13__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_41)<br/>_41 = ((_34 as Continue).0: u128)<br/>_33 = _41<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">_31 = &lt;u128 as SafeMath&gt;::safe_mul(move _32, move _33)</td></tr></table>>];
    bb14__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_38)<br/>_38 = ((_34 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_40)<br/>_40 = _38<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;order_params::OrderParams, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _40)</td></tr></table>>];
    bb15__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageDead(_38)<br/>StorageDead(_33)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">_30 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _31)</td></tr></table>>];
    bb17__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>_42 = discriminant(_30)<br/></td></tr><tr><td align="left">switchInt(move _42)</td></tr></table>>];
    bb18__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_46)<br/>_46 = ((_30 as Continue).0: u128)<br/>_29 = _46<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">_28 = &lt;u128 as SafeMath&gt;::safe_div(move _29, const _)</td></tr></table>>];
    bb19__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_43)<br/>_43 = ((_30 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_45)<br/>_45 = _43<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;order_params::OrderParams, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _45)</td></tr></table>>];
    bb20__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/></td></tr><tr><td align="left">_27 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _28)</td></tr></table>>];
    bb22__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>_47 = discriminant(_27)<br/></td></tr><tr><td align="left">switchInt(move _47)</td></tr></table>>];
    bb23__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_51)<br/>_51 = ((_27 as Continue).0: u128)<br/>_26 = _51<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">_24 = &lt;u128 as SafeMath&gt;::safe_add(move _25, move _26)</td></tr></table>>];
    bb24__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_48)<br/>_48 = ((_27 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_50)<br/>_50 = _48<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;order_params::OrderParams, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _50)</td></tr></table>>];
    bb25__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">_23 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _24)</td></tr></table>>];
    bb27__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>_52 = discriminant(_23)<br/></td></tr><tr><td align="left">switchInt(move _52)</td></tr></table>>];
    bb28__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_56)<br/>_56 = ((_23 as Continue).0: u128)<br/>_22 = _56<br/>StorageDead(_56)<br/></td></tr><tr><td align="left">_21 = &lt;u128 as Cast&gt;::cast::&lt;u64&gt;(move _22)</td></tr></table>>];
    bb29__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_53)<br/>_53 = ((_23 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_55)<br/>_55 = _53<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;order_params::OrderParams, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _55)</td></tr></table>>];
    bb30__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/></td></tr><tr><td align="left">_20 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _21)</td></tr></table>>];
    bb32__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>_57 = discriminant(_20)<br/></td></tr><tr><td align="left">switchInt(move _57)</td></tr></table>>];
    bb33__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageLive(_61)<br/>_61 = ((_20 as Continue).0: u64)<br/>_18 = _61<br/>StorageDead(_61)<br/>StorageDead(_34)<br/>StorageDead(_30)<br/>StorageDead(_27)<br/>StorageDead(_23)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_58)<br/>_58 = ((_20 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_60)<br/>_60 = _58<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;order_params::OrderParams, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _60)</td></tr></table>>];
    bb35__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/></td></tr><tr><td align="left">_76 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _77)</td></tr></table>>];
    bb37__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>_79 = discriminant(_76)<br/></td></tr><tr><td align="left">switchInt(move _79)</td></tr></table>>];
    bb38__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_83)<br/>_83 = ((_76 as Continue).0: u128)<br/>_75 = _83<br/>StorageDead(_83)<br/></td></tr><tr><td align="left">_73 = &lt;u128 as SafeMath&gt;::safe_mul(move _74, move _75)</td></tr></table>>];
    bb39__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_80)<br/>_80 = ((_76 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_82)<br/>_82 = _80<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;order_params::OrderParams, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _82)</td></tr></table>>];
    bb40__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>StorageDead(_80)<br/>StorageDead(_75)<br/>StorageDead(_74)<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_74)<br/></td></tr><tr><td align="left">_72 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _73)</td></tr></table>>];
    bb42__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>_84 = discriminant(_72)<br/></td></tr><tr><td align="left">switchInt(move _84)</td></tr></table>>];
    bb43__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageLive(_88)<br/>_88 = ((_72 as Continue).0: u128)<br/>_71 = _88<br/>StorageDead(_88)<br/></td></tr><tr><td align="left">_70 = &lt;u128 as SafeMath&gt;::safe_div(move _71, const _)</td></tr></table>>];
    bb44__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_85)<br/>_85 = ((_72 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_87)<br/>_87 = _85<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;order_params::OrderParams, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _87)</td></tr></table>>];
    bb45__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>StorageDead(_85)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/></td></tr><tr><td align="left">_69 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _70)</td></tr></table>>];
    bb47__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>_89 = discriminant(_69)<br/></td></tr><tr><td align="left">switchInt(move _89)</td></tr></table>>];
    bb48__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageLive(_93)<br/>_93 = ((_69 as Continue).0: u128)<br/>_68 = _93<br/>StorageDead(_93)<br/></td></tr><tr><td align="left">_66 = &lt;u128 as SafeMath&gt;::safe_sub(move _67, move _68)</td></tr></table>>];
    bb49__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageLive(_90)<br/>_90 = ((_69 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_92)<br/>_92 = _90<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;order_params::OrderParams, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _92)</td></tr></table>>];
    bb50__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>StorageDead(_90)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb51__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">_65 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _66)</td></tr></table>>];
    bb52__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>_94 = discriminant(_65)<br/></td></tr><tr><td align="left">switchInt(move _94)</td></tr></table>>];
    bb53__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageLive(_98)<br/>_98 = ((_65 as Continue).0: u128)<br/>_64 = _98<br/>StorageDead(_98)<br/></td></tr><tr><td align="left">_63 = &lt;u128 as Cast&gt;::cast::&lt;u64&gt;(move _64)</td></tr></table>>];
    bb54__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageLive(_95)<br/>_95 = ((_65 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_97)<br/>_97 = _95<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;order_params::OrderParams, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _97)</td></tr></table>>];
    bb55__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>StorageDead(_95)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb56__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/></td></tr><tr><td align="left">_62 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _63)</td></tr></table>>];
    bb57__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>_99 = discriminant(_62)<br/></td></tr><tr><td align="left">switchInt(move _99)</td></tr></table>>];
    bb58__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageLive(_103)<br/>_103 = ((_62 as Continue).0: u64)<br/>_18 = _103<br/>StorageDead(_103)<br/>StorageDead(_76)<br/>StorageDead(_72)<br/>StorageDead(_69)<br/>StorageDead(_65)<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageLive(_100)<br/>_100 = ((_62 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_102)<br/>_102 = _100<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;order_params::OrderParams, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _102)</td></tr></table>>];
    bb60__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>StorageDead(_100)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb61__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageLive(_104)<br/>StorageLive(_105)<br/>_105 = _1<br/>StorageLive(_106)<br/>_106 = _6<br/>StorageLive(_107)<br/>_107 = _18<br/>StorageLive(_108)<br/>_108 = state::user::OrderType::Limit<br/>StorageLive(_109)<br/>_109 = state::user::MarketType::Perp<br/>StorageLive(_110)<br/>_110 = _3<br/>StorageLive(_111)<br/></td></tr><tr><td align="left">_111 = &lt;order_params::OrderParams as Default&gt;::default()</td></tr></table>>];
    bb62__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">_104 = order_params::OrderParams { order_type: move _108, market_type: move _109, direction: move _106, user_order_id: (_111.3: u8), base_asset_amount: move _110, price: move _107, market_index: move _105, reduce_only: const true, post_only: (_111.8: state::order_params::PostOnlyParam), bit_flags: (_111.9: u8), max_ts: (_111.10: std::option::Option&lt;i64&gt;), trigger_price: (_111.11: std::option::Option&lt;u64&gt;), trigger_condition: (_111.12: state::user::OrderTriggerCondition), oracle_price_offset: (_111.13: std::option::Option&lt;i32&gt;), auction_duration: (_111.14: std::option::Option&lt;u8&gt;), auction_start_price: (_111.15: std::option::Option&lt;i64&gt;), auction_end_price: (_111.16: std::option::Option&lt;i64&gt;) }<br/>StorageDead(_110)<br/>StorageDead(_109)<br/>StorageDead(_108)<br/>StorageDead(_107)<br/>StorageDead(_106)<br/>StorageDead(_105)<br/>StorageDead(_111)<br/>StorageLive(_112)<br/>_112 = _104<br/>_0 = std::result::Result::&lt;order_params::OrderParams, error::ErrorCode&gt;::Ok(move _112)<br/>StorageDead(_112)<br/>StorageDead(_104)<br/>StorageDead(_18)<br/>StorageDead(_8)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb63__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageDead(_70)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb64__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>StorageDead(_67)<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb65__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageDead(_63)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb66__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>StorageDead(_72)<br/>StorageDead(_69)<br/>StorageDead(_65)<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb67__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb69__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb70__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_30)<br/>StorageDead(_27)<br/>StorageDead(_23)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb71__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb72__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb73__0_2400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2400 -> bb1__0_2400 [label="return"];
    bb1__0_2400 -> bb2__0_2400 [label="return"];
    bb2__0_2400 -> bb3__0_2400 [label="return"];
    bb3__0_2400 -> bb4__0_2400 [label="return"];
    bb4__0_2400 -> bb5__0_2400 [label="0"];
    bb4__0_2400 -> bb7__0_2400 [label="1"];
    bb4__0_2400 -> bb6__0_2400 [label="otherwise"];
    bb5__0_2400 -> bb10__0_2400 [label="0"];
    bb5__0_2400 -> bb9__0_2400 [label="1"];
    bb5__0_2400 -> bb6__0_2400 [label="otherwise"];
    bb7__0_2400 -> bb8__0_2400 [label="return"];
    bb8__0_2400 -> bb72__0_2400 [label=""];
    bb9__0_2400 -> bb36__0_2400 [label="return"];
    bb10__0_2400 -> bb11__0_2400 [label="return"];
    bb11__0_2400 -> bb12__0_2400 [label="return"];
    bb12__0_2400 -> bb13__0_2400 [label="0"];
    bb12__0_2400 -> bb14__0_2400 [label="1"];
    bb12__0_2400 -> bb6__0_2400 [label="otherwise"];
    bb13__0_2400 -> bb16__0_2400 [label="return"];
    bb14__0_2400 -> bb15__0_2400 [label="return"];
    bb15__0_2400 -> bb67__0_2400 [label=""];
    bb16__0_2400 -> bb17__0_2400 [label="return"];
    bb17__0_2400 -> bb18__0_2400 [label="0"];
    bb17__0_2400 -> bb19__0_2400 [label="1"];
    bb17__0_2400 -> bb6__0_2400 [label="otherwise"];
    bb18__0_2400 -> bb21__0_2400 [label="return"];
    bb19__0_2400 -> bb20__0_2400 [label="return"];
    bb20__0_2400 -> bb67__0_2400 [label=""];
    bb21__0_2400 -> bb22__0_2400 [label="return"];
    bb22__0_2400 -> bb23__0_2400 [label="0"];
    bb22__0_2400 -> bb24__0_2400 [label="1"];
    bb22__0_2400 -> bb6__0_2400 [label="otherwise"];
    bb23__0_2400 -> bb26__0_2400 [label="return"];
    bb24__0_2400 -> bb25__0_2400 [label="return"];
    bb25__0_2400 -> bb68__0_2400 [label=""];
    bb26__0_2400 -> bb27__0_2400 [label="return"];
    bb27__0_2400 -> bb28__0_2400 [label="0"];
    bb27__0_2400 -> bb29__0_2400 [label="1"];
    bb27__0_2400 -> bb6__0_2400 [label="otherwise"];
    bb28__0_2400 -> bb31__0_2400 [label="return"];
    bb29__0_2400 -> bb30__0_2400 [label="return"];
    bb30__0_2400 -> bb69__0_2400 [label=""];
    bb31__0_2400 -> bb32__0_2400 [label="return"];
    bb32__0_2400 -> bb33__0_2400 [label="0"];
    bb32__0_2400 -> bb34__0_2400 [label="1"];
    bb32__0_2400 -> bb6__0_2400 [label="otherwise"];
    bb33__0_2400 -> bb61__0_2400 [label=""];
    bb34__0_2400 -> bb35__0_2400 [label="return"];
    bb35__0_2400 -> bb70__0_2400 [label=""];
    bb36__0_2400 -> bb37__0_2400 [label="return"];
    bb37__0_2400 -> bb38__0_2400 [label="0"];
    bb37__0_2400 -> bb39__0_2400 [label="1"];
    bb37__0_2400 -> bb6__0_2400 [label="otherwise"];
    bb38__0_2400 -> bb41__0_2400 [label="return"];
    bb39__0_2400 -> bb40__0_2400 [label="return"];
    bb40__0_2400 -> bb63__0_2400 [label=""];
    bb41__0_2400 -> bb42__0_2400 [label="return"];
    bb42__0_2400 -> bb43__0_2400 [label="0"];
    bb42__0_2400 -> bb44__0_2400 [label="1"];
    bb42__0_2400 -> bb6__0_2400 [label="otherwise"];
    bb43__0_2400 -> bb46__0_2400 [label="return"];
    bb44__0_2400 -> bb45__0_2400 [label="return"];
    bb45__0_2400 -> bb63__0_2400 [label=""];
    bb46__0_2400 -> bb47__0_2400 [label="return"];
    bb47__0_2400 -> bb48__0_2400 [label="0"];
    bb47__0_2400 -> bb49__0_2400 [label="1"];
    bb47__0_2400 -> bb6__0_2400 [label="otherwise"];
    bb48__0_2400 -> bb51__0_2400 [label="return"];
    bb49__0_2400 -> bb50__0_2400 [label="return"];
    bb50__0_2400 -> bb64__0_2400 [label=""];
    bb51__0_2400 -> bb52__0_2400 [label="return"];
    bb52__0_2400 -> bb53__0_2400 [label="0"];
    bb52__0_2400 -> bb54__0_2400 [label="1"];
    bb52__0_2400 -> bb6__0_2400 [label="otherwise"];
    bb53__0_2400 -> bb56__0_2400 [label="return"];
    bb54__0_2400 -> bb55__0_2400 [label="return"];
    bb55__0_2400 -> bb65__0_2400 [label=""];
    bb56__0_2400 -> bb57__0_2400 [label="return"];
    bb57__0_2400 -> bb58__0_2400 [label="0"];
    bb57__0_2400 -> bb59__0_2400 [label="1"];
    bb57__0_2400 -> bb6__0_2400 [label="otherwise"];
    bb58__0_2400 -> bb61__0_2400 [label=""];
    bb59__0_2400 -> bb60__0_2400 [label="return"];
    bb60__0_2400 -> bb66__0_2400 [label=""];
    bb61__0_2400 -> bb62__0_2400 [label="return"];
    bb62__0_2400 -> bb73__0_2400 [label=""];
    bb63__0_2400 -> bb64__0_2400 [label=""];
    bb64__0_2400 -> bb65__0_2400 [label=""];
    bb65__0_2400 -> bb66__0_2400 [label=""];
    bb66__0_2400 -> bb71__0_2400 [label=""];
    bb67__0_2400 -> bb68__0_2400 [label=""];
    bb68__0_2400 -> bb69__0_2400 [label=""];
    bb69__0_2400 -> bb70__0_2400 [label=""];
    bb70__0_2400 -> bb71__0_2400 [label=""];
    bb71__0_2400 -> bb72__0_2400 [label=""];
    bb72__0_2400 -> bb73__0_2400 [label=""];
}
