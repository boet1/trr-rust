digraph Mir_0_11681 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn instructions::user::handle_withdraw(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::user::Withdraw&lt;ReErased&gt;&gt;, _2: u16, _3: u64, _4: bool) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _5: ();<br align="left"/>let mut _6: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _7: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _8: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _9: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _10: isize;<br align="left"/>let _11: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _12: !;<br align="left"/>let mut _13: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _14: ();<br align="left"/>let _15: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _16: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _17: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _18: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _19: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _20: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _21: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _22: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _23: Closure(DefId(0:11685 ~ drift[d311]::instructions::user::handle_withdraw::{closure#1}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _24: isize;<br align="left"/>let _25: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _26: !;<br align="left"/>let mut _27: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _28: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _29: std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _30: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;;<br align="left"/>let mut _31: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _32: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _33: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _34: Closure(DefId(0:11686 ~ drift[d311]::instructions::user::handle_withdraw::{closure#2}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _35: isize;<br align="left"/>let _36: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _37: !;<br align="left"/>let mut _38: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _39: std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let _40: anchor_lang::prelude::Clock;<br align="left"/>let mut _41: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _42: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _43: isize;<br align="left"/>let _44: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _45: !;<br align="left"/>let mut _46: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _47: anchor_lang::prelude::Clock;<br align="left"/>let _48: i64;<br align="left"/>let _49: u64;<br align="left"/>let _50: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let _51: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _52: std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _53: std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _54: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let _55: state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _56: state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _57: state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _58: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let mut _59: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, instructions::optional_accounts::AccountMaps&lt;ReErased&gt;&gt;;<br align="left"/>let mut _60: std::result::Result&lt;instructions::optional_accounts::AccountMaps&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _61: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _62: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _63: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _64: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _65: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _66: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _67: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _68: u16;<br align="left"/>let mut _69: u64;<br align="left"/>let mut _70: std::option::Option&lt;state::state::OracleGuardRails&gt;;<br align="left"/>let mut _71: state::state::OracleGuardRails;<br align="left"/>let mut _72: &amp;ReErased state::state::State;<br align="left"/>let mut _73: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _74: isize;<br align="left"/>let _75: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _76: !;<br align="left"/>let mut _77: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _78: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let _79: std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let mut _80: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;&gt;;<br align="left"/>let mut _81: std::result::Result&lt;std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _82: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _83: isize;<br align="left"/>let _84: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _85: !;<br align="left"/>let mut _86: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _87: std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let _88: ();<br align="left"/>let mut _89: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _90: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _91: bool;<br align="left"/>let mut _92: &amp;ReErased state::user::User;<br align="left"/>let _93: &amp;ReErased state::user::User;<br align="left"/>let mut _94: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _95: ();<br align="left"/>let _96: error::ErrorCode;<br align="left"/>let _97: ();<br align="left"/>let mut _98: &amp;ReErased str;<br align="left"/>let _99: &amp;ReErased str;<br align="left"/>let mut _100: &amp;ReErased std::string::String;<br align="left"/>let _101: &amp;ReErased std::string::String;<br align="left"/>let _102: std::string::String;<br align="left"/>let _103: std::string::String;<br align="left"/>let mut _104: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _105: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _106: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _107: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _108: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _109: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _110: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _111: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _112: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _113: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _114: &amp;ReErased error::ErrorCode;<br align="left"/>let _115: &amp;ReErased error::ErrorCode;<br align="left"/>let mut _116: error::ErrorCode;<br align="left"/>let mut _117: isize;<br align="left"/>let _118: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _119: !;<br align="left"/>let mut _120: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _121: ();<br align="left"/>let _122: bool;<br align="left"/>let _123: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _124: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _125: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _126: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _127: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _128: &amp;ReErased u16;<br align="left"/>let _129: &amp;ReErased u16;<br align="left"/>let mut _130: isize;<br align="left"/>let _131: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _132: !;<br align="left"/>let mut _133: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _134: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _135: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _136: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _137: std::result::Result&lt;&amp;ReErased state::oracle::OraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _138: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _139: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _140: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _141: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _142: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _143: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _144: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _145: isize;<br align="left"/>let _146: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _147: !;<br align="left"/>let mut _148: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _149: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _150: ();<br align="left"/>let mut _151: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _152: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _153: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _154: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _155: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _156: std::option::Option&lt;&amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _157: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _158: i64;<br align="left"/>let mut _159: isize;<br align="left"/>let _160: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _161: !;<br align="left"/>let mut _162: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _163: ();<br align="left"/>let mut _164: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _165: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _166: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _167: u64;<br align="left"/>let _168: bool;<br align="left"/>let mut _169: bool;<br align="left"/>let _170: usize;<br align="left"/>let mut _171: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, usize&gt;;<br align="left"/>let mut _172: std::result::Result&lt;usize, error::ErrorCode&gt;;<br align="left"/>let mut _173: &amp;ReErased mut state::user::User;<br align="left"/>let mut _174: &amp;ReErased mut state::user::User;<br align="left"/>let mut _175: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _176: u16;<br align="left"/>let mut _177: isize;<br align="left"/>let _178: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _179: !;<br align="left"/>let mut _180: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _181: usize;<br align="left"/>let _182: u64;<br align="left"/>let mut _183: bool;<br align="left"/>let _184: ();<br align="left"/>let mut _185: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _186: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _187: bool;<br align="left"/>let mut _188: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _189: &amp;ReErased state::user::User;<br align="left"/>let mut _190: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _191: usize;<br align="left"/>let mut _192: usize;<br align="left"/>let mut _193: bool;<br align="left"/>let mut _194: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _195: state::spot_market::SpotBalanceType;<br align="left"/>let mut _196: ();<br align="left"/>let _197: error::ErrorCode;<br align="left"/>let _198: ();<br align="left"/>let mut _199: &amp;ReErased str;<br align="left"/>let _200: &amp;ReErased str;<br align="left"/>let mut _201: &amp;ReErased std::string::String;<br align="left"/>let _202: &amp;ReErased std::string::String;<br align="left"/>let _203: std::string::String;<br align="left"/>let _204: std::string::String;<br align="left"/>let mut _205: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _206: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _207: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _208: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _209: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _210: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _211: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _212: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _213: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _214: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _215: &amp;ReErased error::ErrorCode;<br align="left"/>let _216: &amp;ReErased error::ErrorCode;<br align="left"/>let mut _217: error::ErrorCode;<br align="left"/>let mut _218: isize;<br align="left"/>let _219: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _220: !;<br align="left"/>let mut _221: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _222: ();<br align="left"/>let _223: u64;<br align="left"/>let mut _224: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _225: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _226: u16;<br align="left"/>let mut _227: &amp;ReErased state::user::User;<br align="left"/>let _228: &amp;ReErased state::user::User;<br align="left"/>let mut _229: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _230: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _231: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _232: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let _233: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _234: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _235: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _236: isize;<br align="left"/>let _237: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _238: !;<br align="left"/>let mut _239: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _240: u64;<br align="left"/>let _241: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _242: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _243: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _244: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _245: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _246: &amp;ReErased u16;<br align="left"/>let _247: &amp;ReErased u16;<br align="left"/>let mut _248: isize;<br align="left"/>let _249: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _250: !;<br align="left"/>let mut _251: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _252: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _253: u64;<br align="left"/>let mut _254: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _255: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _256: u128;<br align="left"/>let mut _257: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _258: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _259: &amp;ReErased state::user::SpotPosition;<br align="left"/>let _260: &amp;ReErased state::user::User;<br align="left"/>let mut _261: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _262: usize;<br align="left"/>let mut _263: usize;<br align="left"/>let mut _264: bool;<br align="left"/>let mut _265: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _266: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _267: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _268: isize;<br align="left"/>let _269: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _270: !;<br align="left"/>let mut _271: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _272: u128;<br align="left"/>let mut _273: isize;<br align="left"/>let _274: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _275: !;<br align="left"/>let mut _276: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _277: u64;<br align="left"/>let mut _278: u64;<br align="left"/>let mut _279: u64;<br align="left"/>let mut _280: u64;<br align="left"/>let mut _281: u64;<br align="left"/>let _282: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _283: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _284: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _285: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _286: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _287: &amp;ReErased u16;<br align="left"/>let _288: &amp;ReErased u16;<br align="left"/>let mut _289: isize;<br align="left"/>let _290: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _291: !;<br align="left"/>let mut _292: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _293: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _294: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _295: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _296: std::result::Result&lt;&amp;ReErased state::oracle::OraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _297: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _298: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _299: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _300: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _301: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _302: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _303: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _304: isize;<br align="left"/>let _305: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _306: !;<br align="left"/>let mut _307: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _308: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _309: ();<br align="left"/>let mut _310: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _311: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _312: &amp;ReErased mut state::user::User;<br align="left"/>let mut _313: &amp;ReErased mut state::user::User;<br align="left"/>let mut _314: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _315: u64;<br align="left"/>let mut _316: i64;<br align="left"/>let mut _317: u128;<br align="left"/>let mut _318: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _319: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _320: u64;<br align="left"/>let mut _321: state::spot_market::SpotMarket;<br align="left"/>let mut _322: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _323: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _324: isize;<br align="left"/>let _325: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _326: !;<br align="left"/>let mut _327: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _328: u128;<br align="left"/>let mut _329: isize;<br align="left"/>let _330: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _331: !;<br align="left"/>let mut _332: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _333: ();<br align="left"/>let _334: ();<br align="left"/>let mut _335: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _336: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _337: u128;<br align="left"/>let mut _338: u64;<br align="left"/>let mut _339: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _340: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _341: state::spot_market::SpotBalanceType;<br align="left"/>let mut _342: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _343: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _344: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _345: &amp;ReErased mut state::user::User;<br align="left"/>let mut _346: &amp;ReErased mut state::user::User;<br align="left"/>let mut _347: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _348: isize;<br align="left"/>let _349: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _350: !;<br align="left"/>let mut _351: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _352: ();<br align="left"/>let _353: bool;<br align="left"/>let mut _354: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _355: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _356: &amp;ReErased mut state::user::User;<br align="left"/>let mut _357: &amp;ReErased mut state::user::User;<br align="left"/>let mut _358: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _359: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _360: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _361: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let _362: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _363: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _364: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _365: math::margin::MarginRequirementType;<br align="left"/>let mut _366: u16;<br align="left"/>let mut _367: u128;<br align="left"/>let mut _368: u64;<br align="left"/>let mut _369: &amp;ReErased mut state::user::UserStats;<br align="left"/>let mut _370: &amp;ReErased mut state::user::UserStats;<br align="left"/>let mut _371: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _372: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _373: i64;<br align="left"/>let mut _374: isize;<br align="left"/>let _375: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _376: !;<br align="left"/>let mut _377: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _378: bool;<br align="left"/>let _379: ();<br align="left"/>let mut _380: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _381: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _382: &amp;ReErased state::user::User;<br align="left"/>let _383: &amp;ReErased state::user::User;<br align="left"/>let mut _384: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _385: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _386: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _387: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let _388: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _389: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _390: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _391: isize;<br align="left"/>let _392: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _393: !;<br align="left"/>let mut _394: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _395: ();<br align="left"/>let _396: ();<br align="left"/>let mut _397: bool;<br align="left"/>let mut _398: &amp;ReErased state::user::User;<br align="left"/>let _399: &amp;ReErased state::user::User;<br align="left"/>let mut _400: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _401: ();<br align="left"/>let mut _402: &amp;ReErased mut state::user::User;<br align="left"/>let mut _403: &amp;ReErased mut state::user::User;<br align="left"/>let mut _404: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _405: ();<br align="left"/>let mut _406: &amp;ReErased mut state::user::User;<br align="left"/>let mut _407: &amp;ReErased mut state::user::User;<br align="left"/>let mut _408: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _409: u64;<br align="left"/>let mut _410: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _411: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _412: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _413: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _414: &amp;ReErased u16;<br align="left"/>let _415: &amp;ReErased u16;<br align="left"/>let mut _416: isize;<br align="left"/>let _417: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _418: !;<br align="left"/>let mut _419: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _420: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _421: i64;<br align="left"/>let mut _422: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _423: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _424: std::result::Result&lt;&amp;ReErased state::oracle::OraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _425: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _426: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _427: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _428: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _429: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _430: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _431: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _432: isize;<br align="left"/>let _433: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _434: !;<br align="left"/>let mut _435: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _436: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _437: bool;<br align="left"/>let mut _438: std::result::Result&lt;&amp;ReErased state::user::SpotPosition, error::ErrorCode&gt;;<br align="left"/>let mut _439: &amp;ReErased state::user::User;<br align="left"/>let _440: &amp;ReErased state::user::User;<br align="left"/>let mut _441: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _442: u16;<br align="left"/>let mut _443: Closure(DefId(0:11684 ~ drift[d311]::instructions::user::handle_withdraw::{closure#0}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((&amp;ReErased state::user::SpotPosition,)) -&gt; bool, []), ()]);<br align="left"/>let _444: state::events::DepositExplanation;<br align="left"/>let mut _445: bool;<br align="left"/>let _446: u64;<br align="left"/>let _447: u64;<br align="left"/>let mut _448: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _449: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _450: u64;<br align="left"/>let mut _451: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _452: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _453: u64;<br align="left"/>let mut _454: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _455: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _456: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _457: state::events::DepositRecord;<br align="left"/>let mut _458: i64;<br align="left"/>let mut _459: u64;<br align="left"/>let mut _460: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _461: &amp;ReErased state::user::User;<br align="left"/>let mut _462: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _463: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _464: state::events::DepositDirection;<br align="left"/>let mut _465: i64;<br align="left"/>let mut _466: u64;<br align="left"/>let mut _467: u16;<br align="left"/>let mut _468: u128;<br align="left"/>let mut _469: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _470: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _471: u128;<br align="left"/>let mut _472: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _473: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _474: u128;<br align="left"/>let mut _475: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _476: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _477: u128;<br align="left"/>let mut _478: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _479: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _480: u64;<br align="left"/>let mut _481: &amp;ReErased state::user::User;<br align="left"/>let mut _482: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _483: u64;<br align="left"/>let mut _484: &amp;ReErased state::user::User;<br align="left"/>let mut _485: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _486: state::events::DepositExplanation;<br align="left"/>let mut _487: std::option::Option&lt;anchor_lang::prelude::Pubkey&gt;;<br align="left"/>let _488: ();<br align="left"/>let _489: ();<br align="left"/>let mut _490: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let mut _491: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let _492: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let _493: [&amp;ReErased [u8]; 1_usize];<br align="left"/>let mut _494: &amp;ReErased [u8];<br align="left"/>let _495: &amp;ReErased [u8];<br align="left"/>let mut _496: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _497: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _498: std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _499: &amp;ReErased state::events::DepositRecord;<br align="left"/>let _500: &amp;ReErased state::events::DepositRecord;<br align="left"/>let _501: ();<br align="left"/>let mut _502: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _503: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _504: &amp;ReErased anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let _505: &amp;ReErased anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let mut _506: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let _507: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _508: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let _509: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _510: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _511: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _512: u8;<br align="left"/>let mut _513: &amp;ReErased state::state::State;<br align="left"/>let mut _514: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _515: u64;<br align="left"/>let mut _516: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let _517: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let mut _518: std::option::Option&lt;&amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;&gt;;<br align="left"/>let mut _519: bool;<br align="left"/>let mut _520: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _521: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _522: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _523: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _524: isize;<br align="left"/>let _525: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _526: !;<br align="left"/>let mut _527: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _528: ();<br align="left"/>let _529: ();<br align="left"/>let mut _530: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _531: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _532: &amp;ReErased mut anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _533: isize;<br align="left"/>let _534: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _535: !;<br align="left"/>let mut _536: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _537: ();<br align="left"/>let _538: i64;<br align="left"/>let mut _539: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _540: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _541: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _542: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _543: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _544: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _545: u64;<br align="left"/>let mut _546: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _547: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _548: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _549: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _550: isize;<br align="left"/>let _551: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _552: !;<br align="left"/>let mut _553: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _554: i64;<br align="left"/>let _555: ();<br align="left"/>let mut _556: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _557: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _558: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _559: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _560: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _561: bool;<br align="left"/>let mut _562: isize;<br align="left"/>let _563: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _564: !;<br align="left"/>let mut _565: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _566: ();<br align="left"/>let mut _567: ();<br align="left"/>let mut _568: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _569: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _570: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _571: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _572: &amp;ReErased mut instructions::user::Withdraw&lt;ReErased&gt;;<br align="left"/>let mut _573: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _574: &amp;ReErased mut instructions::user::Withdraw&lt;ReErased&gt;;<br align="left"/>let mut _575: &amp;ReErased mut instructions::user::Withdraw&lt;ReErased&gt;;<br align="left"/>let mut _576: &amp;ReErased mut instructions::user::Withdraw&lt;ReErased&gt;;<br align="left"/>let mut _577: &amp;ReErased mut instructions::user::Withdraw&lt;ReErased&gt;;<br align="left"/>let mut _578: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _579: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _580: &amp;ReErased mut instructions::user::Withdraw&lt;ReErased&gt;;<br align="left"/>let mut _581: &amp;ReErased mut instructions::user::Withdraw&lt;ReErased&gt;;<br align="left"/>let mut _582: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _583: &amp;ReErased mut instructions::user::Withdraw&lt;ReErased&gt;;<br align="left"/>let mut _584: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _585: &amp;ReErased mut instructions::user::Withdraw&lt;ReErased&gt;;<br align="left"/>let mut _586: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _587: &amp;ReErased mut instructions::user::Withdraw&lt;ReErased&gt;;<br align="left"/>let mut _588: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _589: &amp;ReErased mut instructions::user::Withdraw&lt;ReErased&gt;;<br align="left"/>let mut _590: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _591: isize;<br align="left"/>let mut _592: isize;<br align="left"/>let mut _593: isize;<br align="left"/>let mut _594: isize;<br align="left"/>let mut _595: isize;<br align="left"/>let mut _596: isize;<br align="left"/>let mut _597: isize;<br align="left"/>let mut _598: isize;<br align="left"/>let mut _599: isize;<br align="left"/>let mut _600: isize;<br align="left"/>let mut _601: isize;<br align="left"/>let mut _602: isize;<br align="left"/>let mut _603: isize;<br align="left"/>let mut _604: isize;<br align="left"/>let mut _605: isize;<br align="left"/>let mut _606: isize;<br align="left"/>let mut _607: isize;<br align="left"/>let mut _608: isize;<br align="left"/>let mut _609: isize;<br align="left"/>let mut _610: isize;<br align="left"/>let mut _611: isize;<br align="left"/>let mut _612: isize;<br align="left"/>let mut _613: isize;<br align="left"/>let mut _614: isize;<br align="left"/>let mut _615: isize;<br align="left"/>let mut _616: isize;<br align="left"/>let mut _617: isize;<br align="left"/>let mut _618: isize;<br align="left"/>let mut _619: isize;<br align="left"/>let mut _620: isize;<br align="left"/>let mut _621: isize;<br align="left"/>let mut _622: isize;<br align="left"/>let mut _623: isize;<br align="left"/>let mut _624: isize;<br align="left"/>let mut _625: isize;<br align="left"/>let mut _626: isize;<br align="left"/>let mut _627: isize;<br align="left"/>let mut _628: isize;<br align="left"/>let mut _629: isize;<br align="left"/>let mut _630: isize;<br align="left"/>let mut _631: isize;<br align="left"/>let mut _632: isize;<br align="left"/>let mut _633: isize;<br align="left"/>let mut _634: isize;<br align="left"/>let mut _635: isize;<br align="left"/>let mut _636: isize;<br align="left"/>let mut _637: isize;<br align="left"/>let mut _638: isize;<br align="left"/>let mut _639: isize;<br align="left"/>let mut _640: isize;<br align="left"/>let mut _641: isize;<br align="left"/>let mut _642: isize;<br align="left"/>let mut _643: isize;<br align="left"/>let mut _644: isize;<br align="left"/>let mut _645: isize;<br align="left"/>let mut _646: isize;<br align="left"/>let mut _647: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _648: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _649: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _650: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _651: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _652: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _653: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug market_index =&gt; _2;<br align="left"/>debug amount =&gt; _3;<br align="left"/>debug reduce_only =&gt; _4;<br align="left"/>debug residual =&gt; _11;<br align="left"/>debug val =&gt; _14;<br align="left"/>debug user_key =&gt; _15;<br align="left"/>debug user =&gt; _17;<br align="left"/>debug residual =&gt; _25;<br align="left"/>debug val =&gt; _28;<br align="left"/>debug user_stats =&gt; _29;<br align="left"/>debug residual =&gt; _36;<br align="left"/>debug val =&gt; _39;<br align="left"/>debug clock =&gt; _40;<br align="left"/>debug residual =&gt; _44;<br align="left"/>debug val =&gt; _47;<br align="left"/>debug now =&gt; _48;<br align="left"/>debug slot =&gt; _49;<br align="left"/>debug state =&gt; _50;<br align="left"/>debug remaining_accounts_iter =&gt; _51;<br align="left"/>debug perp_market_map =&gt; _55;<br align="left"/>debug spot_market_map =&gt; _56;<br align="left"/>debug oracle_map =&gt; _57;<br align="left"/>debug residual =&gt; _75;<br align="left"/>debug val =&gt; _78;<br align="left"/>debug mint =&gt; _79;<br align="left"/>debug residual =&gt; _84;<br align="left"/>debug val =&gt; _87;<br align="left"/>debug error_code =&gt; _96;<br align="left"/>debug res =&gt; _103;<br align="left"/>debug residual =&gt; _118;<br align="left"/>debug val =&gt; _121;<br align="left"/>debug spot_market_is_reduce_only =&gt; _122;<br align="left"/>debug spot_market =&gt; _123;<br align="left"/>debug residual =&gt; _131;<br align="left"/>debug val =&gt; _134;<br align="left"/>debug oracle_price_data =&gt; _135;<br align="left"/>debug residual =&gt; _146;<br align="left"/>debug val =&gt; _149;<br align="left"/>debug residual =&gt; _160;<br align="left"/>debug val =&gt; _163;<br align="left"/>debug amount =&gt; _167;<br align="left"/>debug reduce_only =&gt; _168;<br align="left"/>debug position_index =&gt; _170;<br align="left"/>debug residual =&gt; _178;<br align="left"/>debug val =&gt; _181;<br align="left"/>debug amount =&gt; _182;<br align="left"/>debug error_code =&gt; _197;<br align="left"/>debug res =&gt; _204;<br align="left"/>debug residual =&gt; _219;<br align="left"/>debug val =&gt; _222;<br align="left"/>debug max_withdrawable_amount =&gt; _223;<br align="left"/>debug residual =&gt; _237;<br align="left"/>debug val =&gt; _240;<br align="left"/>debug spot_market =&gt; _241;<br align="left"/>debug residual =&gt; _249;<br align="left"/>debug val =&gt; _252;<br align="left"/>debug existing_deposit_amount =&gt; _253;<br align="left"/>debug residual =&gt; _269;<br align="left"/>debug val =&gt; _272;<br align="left"/>debug residual =&gt; _274;<br align="left"/>debug val =&gt; _277;<br align="left"/>debug spot_market =&gt; _282;<br align="left"/>debug residual =&gt; _290;<br align="left"/>debug val =&gt; _293;<br align="left"/>debug oracle_price_data =&gt; _294;<br align="left"/>debug residual =&gt; _305;<br align="left"/>debug val =&gt; _308;<br align="left"/>debug residual =&gt; _325;<br align="left"/>debug val =&gt; _328;<br align="left"/>debug residual =&gt; _330;<br align="left"/>debug val =&gt; _333;<br align="left"/>debug residual =&gt; _349;<br align="left"/>debug val =&gt; _352;<br align="left"/>debug residual =&gt; _375;<br align="left"/>debug val =&gt; _378;<br align="left"/>debug residual =&gt; _392;<br align="left"/>debug val =&gt; _395;<br align="left"/>debug spot_market =&gt; _410;<br align="left"/>debug residual =&gt; _417;<br align="left"/>debug val =&gt; _420;<br align="left"/>debug oracle_price =&gt; _421;<br align="left"/>debug residual =&gt; _433;<br align="left"/>debug val =&gt; _436;<br align="left"/>debug is_borrow =&gt; _437;<br align="left"/>debug deposit_explanation =&gt; _444;<br align="left"/>debug deposit_record_id =&gt; _446;<br align="left"/>debug current_id =&gt; _447;<br align="left"/>debug deposit_record =&gt; _457;<br align="left"/>debug residual =&gt; _525;<br align="left"/>debug val =&gt; _528;<br align="left"/>debug residual =&gt; _534;<br align="left"/>debug val =&gt; _537;<br align="left"/>debug residual =&gt; _551;<br align="left"/>debug val =&gt; _554;<br align="left"/>debug residual =&gt; _563;<br align="left"/>debug val =&gt; _566;<br align="left"/>>;
    bb0__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_572 = deref_copy (_1.1: &amp;mut instructions::user::Withdraw&lt;'_&gt;)<br/>_9 = &amp;((*_572).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_573 = deref_copy (*_9)<br/>_647 = (((_573.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_8 = &amp;(*_647)<br/></td></tr><tr><td align="left">_7 = constraints::withdraw_not_paused(move _8)</td></tr></table>>];
    bb1__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/></td></tr><tr><td align="left">_6 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _7)</td></tr></table>>];
    bb2__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>_10 = discriminant(_6)<br/></td></tr><tr><td align="left">switchInt(move _10)</td></tr></table>>];
    bb3__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = ((_6 as Continue).0: ())<br/>_5 = _14<br/>StorageDead(_14)<br/>_591 = discriminant(_6)<br/>StorageDead(_9)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_574 = deref_copy (_1.1: &amp;mut instructions::user::Withdraw&lt;'_&gt;)<br/>_16 = &amp;((*_574).1: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_15 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt; as anchor_lang::Key&gt;::key(move _16)</td></tr></table>>];
    bb4__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = move ((_6 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_13)<br/>_13 = move _11<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _13)</td></tr></table>>];
    bb6__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_11)<br/>_633 = discriminant(_6)<br/>StorageDead(_9)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_575 = deref_copy (_1.1: &amp;mut instructions::user::Withdraw&lt;'_&gt;)<br/>_22 = &amp;((*_575).1: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_21 = anchor_lang::prelude::AccountLoader::&lt;'_, User&gt;::load_mut(move _22)</td></tr></table>>];
    bb8__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageLive(_23)<br/>_23 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_20 = std::result::Result::&lt;RefMut&lt;'_, User&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _21, move _23)</td></tr></table>>];
    bb9__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">_19 = &lt;std::result::Result&lt;RefMut&lt;'_, User&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _20)</td></tr></table>>];
    bb10__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>_24 = discriminant(_19)<br/></td></tr><tr><td align="left">switchInt(move _24)</td></tr></table>>];
    bb11__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_28)<br/>_28 = move ((_19 as Continue).0: std::cell::RefMut&lt;'_, state::user::User&gt;)<br/>_18 = move _28<br/>StorageDead(_28)<br/>_17 = &amp;mut _18<br/>_595 = discriminant(_19)<br/>StorageDead(_19)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>_576 = deref_copy (_1.1: &amp;mut instructions::user::Withdraw&lt;'_&gt;)<br/>_33 = &amp;((*_576).2: anchor_lang::prelude::AccountLoader&lt;'_, state::user::UserStats&gt;)<br/></td></tr><tr><td align="left">_32 = anchor_lang::prelude::AccountLoader::&lt;'_, UserStats&gt;::load_mut(move _33)</td></tr></table>>];
    bb12__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_25)<br/>_25 = ((_19 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_27)<br/>_27 = _25<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _27)</td></tr></table>>];
    bb13__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_25)<br/>_593 = discriminant(_19)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageLive(_34)<br/>_34 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_31 = std::result::Result::&lt;RefMut&lt;'_, UserStats&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _32, move _34)</td></tr></table>>];
    bb15__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">_30 = &lt;std::result::Result&lt;RefMut&lt;'_, UserStats&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _31)</td></tr></table>>];
    bb16__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>_35 = discriminant(_30)<br/></td></tr><tr><td align="left">switchInt(move _35)</td></tr></table>>];
    bb17__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_39)<br/>_39 = move ((_30 as Continue).0: std::cell::RefMut&lt;'_, state::user::UserStats&gt;)<br/>_29 = move _39<br/>StorageDead(_39)<br/>_599 = discriminant(_30)<br/>StorageDead(_30)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/></td></tr><tr><td align="left">_42 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb18__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_36)<br/>_36 = ((_30 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_38)<br/>_38 = _36<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _38)</td></tr></table>>];
    bb19__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_36)<br/>_597 = discriminant(_30)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left">_41 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _42)</td></tr></table>>];
    bb21__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>_43 = discriminant(_41)<br/></td></tr><tr><td align="left">switchInt(move _43)</td></tr></table>>];
    bb22__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>_47 = move ((_41 as Continue).0: anchor_lang::prelude::Clock)<br/>_40 = move _47<br/>StorageDead(_47)<br/>_601 = discriminant(_41)<br/>StorageDead(_41)<br/>StorageLive(_48)<br/>_48 = (_40.4: i64)<br/>StorageLive(_49)<br/>_49 = (_40.0: u64)<br/>StorageLive(_50)<br/>_577 = deref_copy (_1.1: &amp;mut instructions::user::Withdraw&lt;'_&gt;)<br/>_50 = &amp;((*_577).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>_578 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_54 = &amp;(*_578)<br/></td></tr><tr><td align="left">_53 = core::slice::&lt;impl [anchor_lang::prelude::AccountInfo&lt;'_&gt;]&gt;::iter(move _54)</td></tr></table>>];
    bb23__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_44)<br/>_44 = move ((_41 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_46)<br/>_46 = move _44<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _46)</td></tr></table>>];
    bb24__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_44)<br/>_631 = discriminant(_41)<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/></td></tr><tr><td align="left">_52 = &lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as Iterator&gt;::peekable(move _53)</td></tr></table>>];
    bb26__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>_51 = &amp;mut _52<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>_61 = &amp;mut (*_51)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/></td></tr><tr><td align="left">_64 = BTreeSet::&lt;u16&gt;::new()</td></tr></table>>];
    bb27__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">_63 = &amp;_64<br/>_62 = &amp;(*_63)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>_68 = _2<br/></td></tr><tr><td align="left">_67 = get_writable_spot_market_set(move _68)</td></tr></table>>];
    bb28__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>_66 = &amp;_67<br/>_65 = &amp;(*_66)<br/>StorageLive(_69)<br/>_69 = (_40.0: u64)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>_579 = deref_copy (*_50)<br/>_648 = (((_579.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_73 = &amp;(*_648)<br/></td></tr><tr><td align="left">_72 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _73)</td></tr></table>>];
    bb29__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>_71 = ((*_72).7: state::state::OracleGuardRails)<br/>_70 = Option::&lt;state::state::OracleGuardRails&gt;::Some(move _71)<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">_60 = load_maps(move _61, move _62, move _65, move _69, move _70)</td></tr></table>>];
    bb30__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_69)<br/>StorageDead(_65)<br/>StorageDead(_62)<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">_59 = &lt;std::result::Result&lt;AccountMaps&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _60)</td></tr></table>>];
    bb31__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>_74 = discriminant(_59)<br/></td></tr><tr><td align="left">switchInt(move _74)</td></tr></table>>];
    bb32__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_78)<br/>_78 = move ((_59 as Continue).0: instructions::optional_accounts::AccountMaps&lt;'_&gt;)<br/>_58 = move _78<br/>StorageDead(_78)<br/>StorageLive(_55)<br/>_55 = move (_58.0: state::perp_market_map::PerpMarketMap&lt;'_&gt;)<br/>StorageLive(_56)<br/>_56 = move (_58.1: state::spot_market_map::SpotMarketMap&lt;'_&gt;)<br/>StorageLive(_57)<br/>_57 = move (_58.2: state::oracle_map::OracleMap&lt;'_&gt;)<br/>_605 = discriminant(_59)<br/>StorageDead(_72)<br/></td></tr><tr><td align="left">drop(_67)</td></tr></table>>];
    bb33__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageLive(_75)<br/>_75 = ((_59 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_77)<br/>_77 = _75<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _77)</td></tr></table>>];
    bb34__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>StorageDead(_75)<br/>_603 = discriminant(_59)<br/>StorageDead(_72)<br/></td></tr><tr><td align="left">drop(_67)</td></tr></table>>];
    bb35__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">drop(_64)</td></tr></table>>];
    bb36__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageDead(_63)<br/>StorageDead(_59)<br/>StorageDead(_58)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>_82 = &amp;mut (*_51)<br/></td></tr><tr><td align="left">_81 = get_token_mint(move _82)</td></tr></table>>];
    bb37__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/></td></tr><tr><td align="left">_80 = &lt;std::result::Result&lt;Option&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt;&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _81)</td></tr></table>>];
    bb38__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>_83 = discriminant(_80)<br/></td></tr><tr><td align="left">switchInt(move _83)</td></tr></table>>];
    bb39__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_87)<br/>_87 = move ((_80 as Continue).0: std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt;&gt;)<br/>_79 = move _87<br/>StorageDead(_87)<br/>StorageDead(_80)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>_94 = &amp;(*_17)<br/></td></tr><tr><td align="left">_93 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _94)</td></tr></table>>];
    bb40__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageLive(_84)<br/>_84 = ((_80 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_86)<br/>_86 = _84<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _86)</td></tr></table>>];
    bb41__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>StorageDead(_84)<br/>StorageDead(_80)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">_92 = &amp;(*_93)<br/>StorageDead(_94)<br/></td></tr><tr><td align="left">_91 = User::is_bankrupt(move _92)</td></tr></table>>];
    bb43__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left">switchInt(move _91)</td></tr></table>>];
    bb44__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>StorageDead(_93)<br/>StorageLive(_96)<br/>_96 = error::ErrorCode::UserBankrupt<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>_571 = const _<br/>_107 = &amp;(*_571)<br/>_106 = &amp;(*_107)<br/>_105 = move _106 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_106)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>_115 = &amp;_96<br/>_114 = &amp;(*_115)<br/></td></tr><tr><td align="left">_113 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _114)</td></tr></table>>];
    bb45__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>StorageDead(_93)<br/>StorageLive(_95)<br/>_95 = ()<br/>_90 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _95)<br/>StorageDead(_95)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/>_112 = [move _113]<br/>StorageDead(_113)<br/>_111 = &amp;_112<br/>_110 = &amp;(*_111)<br/>_109 = move _110 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_110)<br/></td></tr><tr><td align="left">_104 = Arguments::&lt;'_&gt;::new_v1(move _105, move _109)</td></tr></table>>];
    bb47__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/>StorageDead(_105)<br/></td></tr><tr><td align="left">_103 = format(move _104)</td></tr></table>>];
    bb48__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/>StorageDead(_115)<br/>StorageDead(_112)<br/>StorageDead(_111)<br/>StorageDead(_107)<br/>_102 = move _103<br/>StorageDead(_103)<br/>_101 = &amp;_102<br/>_100 = &amp;(*_101)<br/></td></tr><tr><td align="left">_99 = &lt;String as Deref&gt;::deref(move _100)</td></tr></table>>];
    bb49__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">_98 = &amp;(*_99)<br/>StorageDead(_100)<br/></td></tr><tr><td align="left">_97 = solana_program::log::sol_log(move _98)</td></tr></table>>];
    bb50__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/></td></tr><tr><td align="left">drop(_102)</td></tr></table>>];
    bb51__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>StorageDead(_101)<br/>StorageDead(_99)<br/>StorageDead(_97)<br/>StorageLive(_116)<br/>_116 = _96<br/>_90 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _116)<br/>StorageDead(_116)<br/>StorageDead(_96)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb52__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/></td></tr><tr><td align="left">_89 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _90)</td></tr></table>>];
    bb53__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>_117 = discriminant(_89)<br/></td></tr><tr><td align="left">switchInt(move _117)</td></tr></table>>];
    bb54__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageLive(_121)<br/>_121 = ((_89 as Continue).0: ())<br/>_88 = _121<br/>StorageDead(_121)<br/>StorageDead(_89)<br/>StorageDead(_88)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>_127 = &amp;_56<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>_129 = &amp;_2<br/>_128 = &amp;(*_129)<br/></td></tr><tr><td align="left">_126 = SpotMarketMap::&lt;'_&gt;::get_ref_mut(move _127, move _128)</td></tr></table>>];
    bb55__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageLive(_118)<br/>_118 = ((_89 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_120)<br/>_120 = _118<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _120)</td></tr></table>>];
    bb56__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/>StorageDead(_118)<br/>StorageDead(_89)<br/>StorageDead(_88)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb57__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>StorageDead(_127)<br/></td></tr><tr><td align="left">_125 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _126)</td></tr></table>>];
    bb58__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/>_130 = discriminant(_125)<br/></td></tr><tr><td align="left">switchInt(move _130)</td></tr></table>>];
    bb59__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageLive(_134)<br/>_134 = move ((_125 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_124 = move _134<br/>StorageDead(_134)<br/>_123 = &amp;mut _124<br/>_609 = discriminant(_125)<br/>StorageDead(_129)<br/>StorageDead(_125)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>_138 = &amp;mut _57<br/>StorageLive(_139)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>_144 = &amp;(*_123)<br/></td></tr><tr><td align="left">_143 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _144)</td></tr></table>>];
    bb60__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageLive(_131)<br/>_131 = ((_125 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_133)<br/>_133 = _131<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _133)</td></tr></table>>];
    bb61__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/>StorageDead(_131)<br/>_607 = discriminant(_125)<br/>StorageDead(_129)<br/>StorageDead(_125)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">_142 = &amp;(*_143)<br/>StorageDead(_144)<br/></td></tr><tr><td align="left">_141 = SpotMarket::oracle_id(move _142)</td></tr></table>>];
    bb63__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_142)<br/>_140 = &amp;_141<br/>_139 = &amp;(*_140)<br/></td></tr><tr><td align="left">_137 = OracleMap::&lt;'_&gt;::get_price_data(move _138, move _139)</td></tr></table>>];
    bb64__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_139)<br/>StorageDead(_138)<br/></td></tr><tr><td align="left">_136 = &lt;std::result::Result&lt;&amp;OraclePriceData, error::ErrorCode&gt; as Try&gt;::branch(move _137)</td></tr></table>>];
    bb65__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_137)<br/>_145 = discriminant(_136)<br/></td></tr><tr><td align="left">switchInt(move _145)</td></tr></table>>];
    bb66__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageLive(_149)<br/>_149 = ((_136 as Continue).0: &amp;state::oracle::OraclePriceData)<br/>_135 = _149<br/>StorageDead(_149)<br/>StorageDead(_143)<br/>StorageDead(_141)<br/>StorageDead(_140)<br/>StorageDead(_136)<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>StorageLive(_152)<br/>StorageLive(_153)<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>_155 = &amp;mut (*_123)<br/></td></tr><tr><td align="left">_154 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _155)</td></tr></table>>];
    bb67__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageLive(_146)<br/>_146 = ((_136 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_148)<br/>_148 = _146<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _148)</td></tr></table>>];
    bb68__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_148)<br/>StorageDead(_146)<br/>StorageDead(_143)<br/>StorageDead(_141)<br/>StorageDead(_140)<br/>StorageDead(_136)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb69__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">_153 = &amp;mut (*_154)<br/>StorageDead(_155)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>_157 = &amp;(*_135)<br/>_156 = Option::&lt;&amp;OraclePriceData&gt;::Some(move _157)<br/>StorageDead(_157)<br/>StorageLive(_158)<br/>_158 = _48<br/></td></tr><tr><td align="left">_152 = controller::spot_balance::update_spot_market_cumulative_interest(move _153, move _156, move _158)</td></tr></table>>];
    bb70__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_158)<br/>StorageDead(_156)<br/>StorageDead(_153)<br/></td></tr><tr><td align="left">_151 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _152)</td></tr></table>>];
    bb71__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_152)<br/>_159 = discriminant(_151)<br/></td></tr><tr><td align="left">switchInt(move _159)</td></tr></table>>];
    bb72__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageLive(_163)<br/>_163 = ((_151 as Continue).0: ())<br/>_150 = _163<br/>StorageDead(_163)<br/>StorageDead(_154)<br/>StorageDead(_151)<br/>StorageDead(_150)<br/>StorageLive(_164)<br/>StorageLive(_165)<br/>StorageLive(_166)<br/>_166 = &amp;(*_123)<br/></td></tr><tr><td align="left">_165 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _166)</td></tr></table>>];
    bb73__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageLive(_160)<br/>_160 = ((_151 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_162)<br/>_162 = _160<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _162)</td></tr></table>>];
    bb74__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_162)<br/>StorageDead(_160)<br/>StorageDead(_154)<br/>StorageDead(_151)<br/>StorageDead(_150)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb75__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">_164 = &amp;(*_165)<br/>StorageDead(_166)<br/></td></tr><tr><td align="left">_122 = SpotMarket::is_reduce_only(move _164)</td></tr></table>>];
    bb76__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_164)<br/>StorageDead(_135)<br/></td></tr><tr><td align="left">drop(_124)</td></tr></table>>];
    bb77__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_124)<br/>StorageDead(_123)<br/>StorageDead(_165)<br/>StorageLive(_167)<br/>StorageLive(_168)<br/>StorageLive(_169)<br/>_169 = _4<br/></td></tr><tr><td align="left">switchInt(move _169)</td></tr></table>>];
    bb78__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">_168 = const true<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb79__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">_168 = _122<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb80__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_169)<br/>StorageLive(_170)<br/>StorageLive(_171)<br/>StorageLive(_172)<br/>StorageLive(_173)<br/>StorageLive(_174)<br/>StorageLive(_175)<br/>_175 = &amp;mut (*_17)<br/></td></tr><tr><td align="left">_174 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _175)</td></tr></table>>];
    bb81__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">_173 = &amp;mut (*_174)<br/>StorageDead(_175)<br/>StorageLive(_176)<br/>_176 = _2<br/></td></tr><tr><td align="left">_172 = User::force_get_spot_position_index(move _173, move _176)</td></tr></table>>];
    bb82__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_176)<br/>StorageDead(_173)<br/></td></tr><tr><td align="left">_171 = &lt;std::result::Result&lt;usize, error::ErrorCode&gt; as Try&gt;::branch(move _172)</td></tr></table>>];
    bb83__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_172)<br/>_177 = discriminant(_171)<br/></td></tr><tr><td align="left">switchInt(move _177)</td></tr></table>>];
    bb84__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageLive(_181)<br/>_181 = ((_171 as Continue).0: usize)<br/>_170 = _181<br/>StorageDead(_181)<br/>StorageDead(_174)<br/>StorageDead(_171)<br/>StorageLive(_182)<br/>StorageLive(_183)<br/>_183 = _168<br/></td></tr><tr><td align="left">switchInt(move _183)</td></tr></table>>];
    bb85__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageLive(_178)<br/>_178 = ((_171 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_180)<br/>_180 = _178<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _180)</td></tr></table>>];
    bb86__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_180)<br/>StorageDead(_178)<br/>StorageDead(_174)<br/>StorageDead(_171)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb87__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageLive(_184)<br/>StorageLive(_185)<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>StorageLive(_189)<br/>StorageLive(_190)<br/>_190 = &amp;(*_17)<br/></td></tr><tr><td align="left">_189 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _190)</td></tr></table>>];
    bb88__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">_182 = _3<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb89__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_190)<br/>StorageLive(_191)<br/>_191 = _170<br/>_192 = Len(((*_189).3: [state::user::SpotPosition; 8]))<br/>_193 = Lt(_191, _192)<br/></td></tr><tr><td align="left">assert(move _193, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _192, _191)</td></tr></table>>];
    bb90__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">_188 = &amp;(((*_189).3: [state::user::SpotPosition; 8])[_191].5: state::spot_market::SpotBalanceType)<br/>StorageLive(_194)<br/>_570 = const _<br/>_194 = &amp;(*_570)<br/></td></tr><tr><td align="left">_187 = &lt;SpotBalanceType as PartialEq&gt;::eq(move _188, move _194)</td></tr></table>>];
    bb91__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left">switchInt(move _187)</td></tr></table>>];
    bb92__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_194)<br/>StorageDead(_191)<br/>StorageDead(_189)<br/>StorageDead(_188)<br/>StorageLive(_196)<br/>_196 = ()<br/>_186 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _196)<br/>StorageDead(_196)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb93__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_194)<br/>StorageDead(_191)<br/>StorageDead(_189)<br/>StorageDead(_188)<br/>StorageLive(_197)<br/>_197 = error::ErrorCode::ReduceOnlyWithdrawIncreasedRisk<br/>StorageLive(_198)<br/>StorageLive(_199)<br/>StorageLive(_200)<br/>StorageLive(_201)<br/>StorageLive(_202)<br/>StorageLive(_203)<br/>StorageLive(_204)<br/>StorageLive(_205)<br/>StorageLive(_206)<br/>StorageLive(_207)<br/>StorageLive(_208)<br/>_569 = const _<br/>_208 = &amp;(*_569)<br/>_207 = &amp;(*_208)<br/>_206 = move _207 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_207)<br/>StorageLive(_210)<br/>StorageLive(_211)<br/>StorageLive(_212)<br/>StorageLive(_213)<br/>StorageLive(_214)<br/>StorageLive(_215)<br/>StorageLive(_216)<br/>_216 = &amp;_197<br/>_215 = &amp;(*_216)<br/></td></tr><tr><td align="left">_214 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _215)</td></tr></table>>];
    bb94__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_215)<br/>_213 = [move _214]<br/>StorageDead(_214)<br/>_212 = &amp;_213<br/>_211 = &amp;(*_212)<br/>_210 = move _211 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_211)<br/></td></tr><tr><td align="left">_205 = Arguments::&lt;'_&gt;::new_v1(move _206, move _210)</td></tr></table>>];
    bb95__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_210)<br/>StorageDead(_206)<br/></td></tr><tr><td align="left">_204 = format(move _205)</td></tr></table>>];
    bb96__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_205)<br/>StorageDead(_216)<br/>StorageDead(_213)<br/>StorageDead(_212)<br/>StorageDead(_208)<br/>_203 = move _204<br/>StorageDead(_204)<br/>_202 = &amp;_203<br/>_201 = &amp;(*_202)<br/></td></tr><tr><td align="left">_200 = &lt;String as Deref&gt;::deref(move _201)</td></tr></table>>];
    bb97__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">_199 = &amp;(*_200)<br/>StorageDead(_201)<br/></td></tr><tr><td align="left">_198 = solana_program::log::sol_log(move _199)</td></tr></table>>];
    bb98__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_199)<br/></td></tr><tr><td align="left">drop(_203)</td></tr></table>>];
    bb99__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageDead(_203)<br/>StorageDead(_202)<br/>StorageDead(_200)<br/>StorageDead(_198)<br/>StorageLive(_217)<br/>_217 = _197<br/>_186 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _217)<br/>StorageDead(_217)<br/>StorageDead(_197)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb100__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_187)<br/></td></tr><tr><td align="left">_185 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _186)</td></tr></table>>];
    bb101__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_186)<br/>_218 = discriminant(_185)<br/></td></tr><tr><td align="left">switchInt(move _218)</td></tr></table>>];
    bb102__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageLive(_222)<br/>_222 = ((_185 as Continue).0: ())<br/>_184 = _222<br/>StorageDead(_222)<br/>StorageDead(_185)<br/>StorageDead(_184)<br/>StorageLive(_223)<br/>StorageLive(_224)<br/>StorageLive(_225)<br/>StorageLive(_226)<br/>_226 = _2<br/>StorageLive(_227)<br/>StorageLive(_228)<br/>StorageLive(_229)<br/>_229 = &amp;(*_17)<br/></td></tr><tr><td align="left">_228 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _229)</td></tr></table>>];
    bb103__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageLive(_219)<br/>_219 = ((_185 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_221)<br/>_221 = _219<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _221)</td></tr></table>>];
    bb104__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_221)<br/>StorageDead(_219)<br/>StorageDead(_185)<br/>StorageDead(_184)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb105__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">_227 = &amp;(*_228)<br/>StorageDead(_229)<br/>StorageLive(_230)<br/>StorageLive(_231)<br/>_231 = &amp;_55<br/>_230 = &amp;(*_231)<br/>StorageLive(_232)<br/>StorageLive(_233)<br/>_233 = &amp;_56<br/>_232 = &amp;(*_233)<br/>StorageLive(_234)<br/>StorageLive(_235)<br/>_235 = &amp;mut _57<br/>_234 = &amp;mut (*_235)<br/></td></tr><tr><td align="left">_225 = calculate_max_withdrawable_amount(move _226, move _227, move _230, move _232, move _234)</td></tr></table>>];
    bb106__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_234)<br/>StorageDead(_232)<br/>StorageDead(_230)<br/>StorageDead(_227)<br/>StorageDead(_226)<br/></td></tr><tr><td align="left">_224 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _225)</td></tr></table>>];
    bb107__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_225)<br/>_236 = discriminant(_224)<br/></td></tr><tr><td align="left">switchInt(move _236)</td></tr></table>>];
    bb108__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageLive(_240)<br/>_240 = ((_224 as Continue).0: u64)<br/>_223 = _240<br/>StorageDead(_240)<br/>StorageDead(_235)<br/>StorageDead(_233)<br/>StorageDead(_231)<br/>StorageDead(_228)<br/>StorageDead(_224)<br/>StorageLive(_241)<br/>StorageLive(_242)<br/>StorageLive(_243)<br/>StorageLive(_244)<br/>StorageLive(_245)<br/>_245 = &amp;_56<br/>StorageLive(_246)<br/>StorageLive(_247)<br/>_247 = &amp;_2<br/>_246 = &amp;(*_247)<br/></td></tr><tr><td align="left">_244 = SpotMarketMap::&lt;'_&gt;::get_ref(move _245, move _246)</td></tr></table>>];
    bb109__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageLive(_237)<br/>_237 = ((_224 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_239)<br/>_239 = _237<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _239)</td></tr></table>>];
    bb110__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_239)<br/>StorageDead(_237)<br/>StorageDead(_235)<br/>StorageDead(_233)<br/>StorageDead(_231)<br/>StorageDead(_228)<br/>StorageDead(_224)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb111__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_246)<br/>StorageDead(_245)<br/></td></tr><tr><td align="left">_243 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _244)</td></tr></table>>];
    bb112__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageDead(_244)<br/>_248 = discriminant(_243)<br/></td></tr><tr><td align="left">switchInt(move _248)</td></tr></table>>];
    bb113__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageLive(_252)<br/>_252 = move ((_243 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_242 = move _252<br/>StorageDead(_252)<br/>_241 = &amp;_242<br/>_613 = discriminant(_243)<br/>StorageDead(_247)<br/>StorageDead(_243)<br/>StorageLive(_253)<br/>StorageLive(_254)<br/>StorageLive(_255)<br/>StorageLive(_256)<br/>StorageLive(_257)<br/>StorageLive(_258)<br/>StorageLive(_259)<br/>StorageLive(_260)<br/>StorageLive(_261)<br/>_261 = &amp;(*_17)<br/></td></tr><tr><td align="left">_260 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _261)</td></tr></table>>];
    bb114__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageLive(_249)<br/>_249 = ((_243 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_251)<br/>_251 = _249<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _251)</td></tr></table>>];
    bb115__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageDead(_251)<br/>StorageDead(_249)<br/>_611 = discriminant(_243)<br/>StorageDead(_247)<br/>StorageDead(_243)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb116__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_261)<br/>StorageLive(_262)<br/>_262 = _170<br/>_263 = Len(((*_260).3: [state::user::SpotPosition; 8]))<br/>_264 = Lt(_262, _263)<br/></td></tr><tr><td align="left">assert(move _264, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _263, _262)</td></tr></table>>];
    bb117__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">_259 = &amp;((*_260).3: [state::user::SpotPosition; 8])[_262]<br/>StorageLive(_265)<br/>StorageLive(_266)<br/>StorageLive(_267)<br/>_267 = &amp;(*_241)<br/></td></tr><tr><td align="left">_266 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _267)</td></tr></table>>];
    bb118__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">_265 = &amp;(*_266)<br/>StorageDead(_267)<br/></td></tr><tr><td align="left">_258 = SpotPosition::get_token_amount(move _259, move _265)</td></tr></table>>];
    bb119__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageDead(_265)<br/>StorageDead(_259)<br/></td></tr><tr><td align="left">_257 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _258)</td></tr></table>>];
    bb120__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageDead(_258)<br/>_268 = discriminant(_257)<br/></td></tr><tr><td align="left">switchInt(move _268)</td></tr></table>>];
    bb121__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageLive(_272)<br/>_272 = ((_257 as Continue).0: u128)<br/>_256 = _272<br/>StorageDead(_272)<br/></td></tr><tr><td align="left">_255 = &lt;u128 as Cast&gt;::cast::&lt;u64&gt;(move _256)</td></tr></table>>];
    bb122__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageLive(_269)<br/>_269 = ((_257 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_271)<br/>_271 = _269<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _271)</td></tr></table>>];
    bb123__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageDead(_271)<br/>StorageDead(_269)<br/>StorageDead(_256)<br/>StorageDead(_255)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb124__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageDead(_256)<br/></td></tr><tr><td align="left">_254 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _255)</td></tr></table>>];
    bb125__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageDead(_255)<br/>_273 = discriminant(_254)<br/></td></tr><tr><td align="left">switchInt(move _273)</td></tr></table>>];
    bb126__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageLive(_277)<br/>_277 = ((_254 as Continue).0: u64)<br/>_253 = _277<br/>StorageDead(_277)<br/>StorageDead(_266)<br/>StorageDead(_262)<br/>StorageDead(_260)<br/>StorageDead(_257)<br/>StorageDead(_254)<br/>StorageLive(_278)<br/>StorageLive(_279)<br/>_279 = _3<br/>StorageLive(_280)<br/>_280 = _223<br/></td></tr><tr><td align="left">_278 = &lt;u64 as Ord&gt;::min(move _279, move _280)</td></tr></table>>];
    bb127__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageLive(_274)<br/>_274 = ((_254 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_276)<br/>_276 = _274<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _276)</td></tr></table>>];
    bb128__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageDead(_276)<br/>StorageDead(_274)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb129__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">StorageDead(_280)<br/>StorageDead(_279)<br/>StorageLive(_281)<br/>_281 = _253<br/></td></tr><tr><td align="left">_182 = &lt;u64 as Ord&gt;::min(move _278, move _281)</td></tr></table>>];
    bb130__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageDead(_281)<br/>StorageDead(_278)<br/>StorageDead(_253)<br/></td></tr><tr><td align="left">drop(_242)</td></tr></table>>];
    bb131__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageDead(_242)<br/>StorageDead(_241)<br/>StorageDead(_223)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb132__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageDead(_183)<br/>StorageLive(_282)<br/>StorageLive(_283)<br/>StorageLive(_284)<br/>StorageLive(_285)<br/>StorageLive(_286)<br/>_286 = &amp;_56<br/>StorageLive(_287)<br/>StorageLive(_288)<br/>_288 = &amp;_2<br/>_287 = &amp;(*_288)<br/></td></tr><tr><td align="left">_285 = SpotMarketMap::&lt;'_&gt;::get_ref_mut(move _286, move _287)</td></tr></table>>];
    bb133__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageDead(_287)<br/>StorageDead(_286)<br/></td></tr><tr><td align="left">_284 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _285)</td></tr></table>>];
    bb134__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageDead(_285)<br/>_289 = discriminant(_284)<br/></td></tr><tr><td align="left">switchInt(move _289)</td></tr></table>>];
    bb135__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageLive(_293)<br/>_293 = move ((_284 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_283 = move _293<br/>StorageDead(_293)<br/>_282 = &amp;mut _283<br/>_617 = discriminant(_284)<br/>StorageDead(_288)<br/>StorageDead(_284)<br/>StorageLive(_294)<br/>StorageLive(_295)<br/>StorageLive(_296)<br/>StorageLive(_297)<br/>_297 = &amp;mut _57<br/>StorageLive(_298)<br/>StorageLive(_299)<br/>StorageLive(_300)<br/>StorageLive(_301)<br/>StorageLive(_302)<br/>StorageLive(_303)<br/>_303 = &amp;(*_282)<br/></td></tr><tr><td align="left">_302 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _303)</td></tr></table>>];
    bb136__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageLive(_290)<br/>_290 = ((_284 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_292)<br/>_292 = _290<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _292)</td></tr></table>>];
    bb137__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">StorageDead(_292)<br/>StorageDead(_290)<br/>_615 = discriminant(_284)<br/>StorageDead(_288)<br/>StorageDead(_284)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb138__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">_301 = &amp;(*_302)<br/>StorageDead(_303)<br/></td></tr><tr><td align="left">_300 = SpotMarket::oracle_id(move _301)</td></tr></table>>];
    bb139__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">StorageDead(_301)<br/>_299 = &amp;_300<br/>_298 = &amp;(*_299)<br/></td></tr><tr><td align="left">_296 = OracleMap::&lt;'_&gt;::get_price_data(move _297, move _298)</td></tr></table>>];
    bb140__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">StorageDead(_298)<br/>StorageDead(_297)<br/></td></tr><tr><td align="left">_295 = &lt;std::result::Result&lt;&amp;OraclePriceData, error::ErrorCode&gt; as Try&gt;::branch(move _296)</td></tr></table>>];
    bb141__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">StorageDead(_296)<br/>_304 = discriminant(_295)<br/></td></tr><tr><td align="left">switchInt(move _304)</td></tr></table>>];
    bb142__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageLive(_308)<br/>_308 = ((_295 as Continue).0: &amp;state::oracle::OraclePriceData)<br/>_294 = _308<br/>StorageDead(_308)<br/>StorageDead(_302)<br/>StorageDead(_300)<br/>StorageDead(_299)<br/>StorageDead(_295)<br/>StorageLive(_309)<br/>StorageLive(_310)<br/>StorageLive(_311)<br/>StorageLive(_312)<br/>StorageLive(_313)<br/>StorageLive(_314)<br/>_314 = &amp;mut (*_17)<br/></td></tr><tr><td align="left">_313 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _314)</td></tr></table>>];
    bb143__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageLive(_305)<br/>_305 = ((_295 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_307)<br/>_307 = _305<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _307)</td></tr></table>>];
    bb144__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">StorageDead(_307)<br/>StorageDead(_305)<br/>StorageDead(_302)<br/>StorageDead(_300)<br/>StorageDead(_299)<br/>StorageDead(_295)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb145__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">_312 = &amp;mut (*_313)<br/>StorageDead(_314)<br/>StorageLive(_315)<br/>_315 = _182<br/>StorageLive(_316)<br/>_316 = ((*_294).0: i64)<br/>StorageLive(_317)<br/>StorageLive(_318)<br/>StorageLive(_319)<br/>StorageLive(_320)<br/>StorageLive(_321)<br/>StorageLive(_322)<br/>StorageLive(_323)<br/>_323 = &amp;(*_282)<br/></td></tr><tr><td align="left">_322 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _323)</td></tr></table>>];
    bb146__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">_321 = (*_322)<br/>StorageDead(_323)<br/></td></tr><tr><td align="left">_320 = SpotMarket::get_precision(move _321)</td></tr></table>>];
    bb147__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left" balign="left">StorageDead(_321)<br/></td></tr><tr><td align="left">_319 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _320)</td></tr></table>>];
    bb148__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left" balign="left">StorageDead(_320)<br/></td></tr><tr><td align="left">_318 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _319)</td></tr></table>>];
    bb149__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">149</td></tr><tr><td align="left" balign="left">StorageDead(_319)<br/>_324 = discriminant(_318)<br/></td></tr><tr><td align="left">switchInt(move _324)</td></tr></table>>];
    bb150__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">150</td></tr><tr><td align="left" balign="left">StorageLive(_328)<br/>_328 = ((_318 as Continue).0: u128)<br/>_317 = _328<br/>StorageDead(_328)<br/></td></tr><tr><td align="left">_311 = User::increment_total_withdraws(move _312, move _315, move _316, move _317)</td></tr></table>>];
    bb151__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">151</td></tr><tr><td align="left" balign="left">StorageLive(_325)<br/>_325 = ((_318 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_327)<br/>_327 = _325<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _327)</td></tr></table>>];
    bb152__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">152</td></tr><tr><td align="left" balign="left">StorageDead(_327)<br/>StorageDead(_325)<br/>StorageDead(_317)<br/>StorageDead(_316)<br/>StorageDead(_315)<br/>StorageDead(_312)<br/>StorageDead(_311)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb153__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">153</td></tr><tr><td align="left" balign="left">StorageDead(_317)<br/>StorageDead(_316)<br/>StorageDead(_315)<br/>StorageDead(_312)<br/></td></tr><tr><td align="left">_310 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _311)</td></tr></table>>];
    bb154__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">154</td></tr><tr><td align="left" balign="left">StorageDead(_311)<br/>_329 = discriminant(_310)<br/></td></tr><tr><td align="left">switchInt(move _329)</td></tr></table>>];
    bb155__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">155</td></tr><tr><td align="left" balign="left">StorageLive(_333)<br/>_333 = ((_310 as Continue).0: ())<br/>_309 = _333<br/>StorageDead(_333)<br/>StorageDead(_322)<br/>StorageDead(_318)<br/>StorageDead(_313)<br/>StorageDead(_310)<br/>StorageDead(_309)<br/>StorageLive(_334)<br/>StorageLive(_335)<br/>StorageLive(_336)<br/>StorageLive(_337)<br/>StorageLive(_338)<br/>_338 = _182<br/>_337 = move _338 as u128 (IntToInt)<br/>StorageDead(_338)<br/>StorageLive(_339)<br/>StorageLive(_340)<br/>_568 = const _<br/>_340 = &amp;(*_568)<br/>_339 = &amp;(*_340)<br/>StorageLive(_342)<br/>StorageLive(_343)<br/>StorageLive(_344)<br/>_344 = &amp;mut (*_282)<br/></td></tr><tr><td align="left">_343 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _344)</td></tr></table>>];
    bb156__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">156</td></tr><tr><td align="left" balign="left">StorageLive(_330)<br/>_330 = ((_310 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_332)<br/>_332 = _330<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _332)</td></tr></table>>];
    bb157__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">157</td></tr><tr><td align="left" balign="left">StorageDead(_332)<br/>StorageDead(_330)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb158__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">158</td></tr><tr><td align="left" balign="left">_342 = &amp;mut (*_343)<br/>StorageDead(_344)<br/>StorageLive(_345)<br/>StorageLive(_346)<br/>StorageLive(_347)<br/>_347 = &amp;mut (*_17)<br/></td></tr><tr><td align="left">_346 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _347)</td></tr></table>>];
    bb159__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">159</td></tr><tr><td align="left" balign="left">_345 = &amp;mut (*_346)<br/>StorageDead(_347)<br/></td></tr><tr><td align="left">_336 = update_spot_balances_and_cumulative_deposits_with_limits(move _337, move _339, move _342, move _345)</td></tr></table>>];
    bb160__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">160</td></tr><tr><td align="left" balign="left">StorageDead(_345)<br/>StorageDead(_342)<br/>StorageDead(_339)<br/>StorageDead(_337)<br/></td></tr><tr><td align="left">_335 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _336)</td></tr></table>>];
    bb161__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">161</td></tr><tr><td align="left" balign="left">StorageDead(_336)<br/>_348 = discriminant(_335)<br/></td></tr><tr><td align="left">switchInt(move _348)</td></tr></table>>];
    bb162__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">162</td></tr><tr><td align="left" balign="left">StorageLive(_352)<br/>_352 = ((_335 as Continue).0: ())<br/>_334 = _352<br/>StorageDead(_352)<br/>StorageDead(_346)<br/>StorageDead(_343)<br/>StorageDead(_340)<br/>StorageDead(_335)<br/>StorageDead(_334)<br/>_167 = _182<br/>StorageDead(_294)<br/></td></tr><tr><td align="left">drop(_283)</td></tr></table>>];
    bb163__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">163</td></tr><tr><td align="left" balign="left">StorageLive(_349)<br/>_349 = ((_335 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_351)<br/>_351 = _349<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _351)</td></tr></table>>];
    bb164__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">164</td></tr><tr><td align="left" balign="left">StorageDead(_351)<br/>StorageDead(_349)<br/>StorageDead(_346)<br/>StorageDead(_343)<br/>StorageDead(_340)<br/>StorageDead(_335)<br/>StorageDead(_334)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb165__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">165</td></tr><tr><td align="left" balign="left">StorageDead(_283)<br/>StorageDead(_282)<br/>StorageDead(_182)<br/>StorageDead(_170)<br/>StorageDead(_168)<br/>StorageLive(_353)<br/>StorageLive(_354)<br/>StorageLive(_355)<br/>StorageLive(_356)<br/>StorageLive(_357)<br/>StorageLive(_358)<br/>_358 = &amp;mut (*_17)<br/></td></tr><tr><td align="left">_357 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _358)</td></tr></table>>];
    bb166__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">166</td></tr><tr><td align="left" balign="left">_356 = &amp;mut (*_357)<br/>StorageDead(_358)<br/>StorageLive(_359)<br/>StorageLive(_360)<br/>_360 = &amp;_55<br/>_359 = &amp;(*_360)<br/>StorageLive(_361)<br/>StorageLive(_362)<br/>_362 = &amp;_56<br/>_361 = &amp;(*_362)<br/>StorageLive(_363)<br/>StorageLive(_364)<br/>_364 = &amp;mut _57<br/>_363 = &amp;mut (*_364)<br/>StorageLive(_365)<br/>_365 = math::margin::MarginRequirementType::Initial<br/>StorageLive(_366)<br/>_366 = _2<br/>StorageLive(_367)<br/>StorageLive(_368)<br/>_368 = _167<br/>_367 = move _368 as u128 (IntToInt)<br/>StorageDead(_368)<br/>StorageLive(_369)<br/>StorageLive(_370)<br/>StorageLive(_371)<br/>StorageLive(_372)<br/>_372 = &amp;mut _29<br/>_371 = &amp;mut (*_372)<br/></td></tr><tr><td align="left">_370 = &lt;RefMut&lt;'_, UserStats&gt; as DerefMut&gt;::deref_mut(move _371)</td></tr></table>>];
    bb167__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">167</td></tr><tr><td align="left" balign="left">_369 = &amp;mut (*_370)<br/>StorageDead(_371)<br/>StorageLive(_373)<br/>_373 = _48<br/></td></tr><tr><td align="left">_355 = User::meets_withdraw_margin_requirement_and_increment_fuel_bonus(move _356, move _359, move _361, move _363, move _365, move _366, move _367, move _369, move _373)</td></tr></table>>];
    bb168__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">168</td></tr><tr><td align="left" balign="left">StorageDead(_373)<br/>StorageDead(_369)<br/>StorageDead(_367)<br/>StorageDead(_366)<br/>StorageDead(_365)<br/>StorageDead(_363)<br/>StorageDead(_361)<br/>StorageDead(_359)<br/>StorageDead(_356)<br/></td></tr><tr><td align="left">_354 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _355)</td></tr></table>>];
    bb169__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">169</td></tr><tr><td align="left" balign="left">StorageDead(_355)<br/>_374 = discriminant(_354)<br/></td></tr><tr><td align="left">switchInt(move _374)</td></tr></table>>];
    bb170__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">170</td></tr><tr><td align="left" balign="left">StorageLive(_378)<br/>_378 = ((_354 as Continue).0: bool)<br/>_353 = _378<br/>StorageDead(_378)<br/>StorageDead(_372)<br/>StorageDead(_370)<br/>StorageDead(_364)<br/>StorageDead(_362)<br/>StorageDead(_360)<br/>StorageDead(_357)<br/>StorageDead(_354)<br/>StorageDead(_353)<br/>StorageLive(_379)<br/>StorageLive(_380)<br/>StorageLive(_381)<br/>StorageLive(_382)<br/>StorageLive(_383)<br/>StorageLive(_384)<br/>_384 = &amp;(*_17)<br/></td></tr><tr><td align="left">_383 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _384)</td></tr></table>>];
    bb171__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">171</td></tr><tr><td align="left" balign="left">StorageLive(_375)<br/>_375 = ((_354 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_377)<br/>_377 = _375<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _377)</td></tr></table>>];
    bb172__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">172</td></tr><tr><td align="left" balign="left">StorageDead(_377)<br/>StorageDead(_375)<br/>StorageDead(_372)<br/>StorageDead(_370)<br/>StorageDead(_364)<br/>StorageDead(_362)<br/>StorageDead(_360)<br/>StorageDead(_357)<br/>StorageDead(_354)<br/>StorageDead(_353)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb173__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">173</td></tr><tr><td align="left" balign="left">_382 = &amp;(*_383)<br/>StorageDead(_384)<br/>StorageLive(_385)<br/>StorageLive(_386)<br/>_386 = &amp;_55<br/>_385 = &amp;(*_386)<br/>StorageLive(_387)<br/>StorageLive(_388)<br/>_388 = &amp;_56<br/>_387 = &amp;(*_388)<br/>StorageLive(_389)<br/>StorageLive(_390)<br/>_390 = &amp;mut _57<br/>_389 = &amp;mut (*_390)<br/></td></tr><tr><td align="left">_381 = math::margin::validate_spot_margin_trading(move _382, move _385, move _387, move _389)</td></tr></table>>];
    bb174__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">174</td></tr><tr><td align="left" balign="left">StorageDead(_389)<br/>StorageDead(_387)<br/>StorageDead(_385)<br/>StorageDead(_382)<br/></td></tr><tr><td align="left">_380 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _381)</td></tr></table>>];
    bb175__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">175</td></tr><tr><td align="left" balign="left">StorageDead(_381)<br/>_391 = discriminant(_380)<br/></td></tr><tr><td align="left">switchInt(move _391)</td></tr></table>>];
    bb176__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">176</td></tr><tr><td align="left" balign="left">StorageLive(_395)<br/>_395 = ((_380 as Continue).0: ())<br/>_379 = _395<br/>StorageDead(_395)<br/>StorageDead(_390)<br/>StorageDead(_388)<br/>StorageDead(_386)<br/>StorageDead(_383)<br/>StorageDead(_380)<br/>StorageDead(_379)<br/>StorageLive(_396)<br/>StorageLive(_397)<br/>StorageLive(_398)<br/>StorageLive(_399)<br/>StorageLive(_400)<br/>_400 = &amp;(*_17)<br/></td></tr><tr><td align="left">_399 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _400)</td></tr></table>>];
    bb177__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">177</td></tr><tr><td align="left" balign="left">StorageLive(_392)<br/>_392 = ((_380 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_394)<br/>_394 = _392<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _394)</td></tr></table>>];
    bb178__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">178</td></tr><tr><td align="left" balign="left">StorageDead(_394)<br/>StorageDead(_392)<br/>StorageDead(_390)<br/>StorageDead(_388)<br/>StorageDead(_386)<br/>StorageDead(_383)<br/>StorageDead(_380)<br/>StorageDead(_379)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb179__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">179</td></tr><tr><td align="left" balign="left">_398 = &amp;(*_399)<br/>StorageDead(_400)<br/></td></tr><tr><td align="left">_397 = User::is_being_liquidated(move _398)</td></tr></table>>];
    bb180__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">180</td></tr><tr><td align="left">switchInt(move _397)</td></tr></table>>];
    bb181__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">181</td></tr><tr><td align="left" balign="left">StorageDead(_399)<br/>StorageDead(_398)<br/>StorageLive(_401)<br/>StorageLive(_402)<br/>StorageLive(_403)<br/>StorageLive(_404)<br/>_404 = &amp;mut (*_17)<br/></td></tr><tr><td align="left">_403 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _404)</td></tr></table>>];
    bb182__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">182</td></tr><tr><td align="left" balign="left">_402 = &amp;mut (*_403)<br/>StorageDead(_404)<br/></td></tr><tr><td align="left">_401 = User::exit_liquidation(move _402)</td></tr></table>>];
    bb183__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">183</td></tr><tr><td align="left" balign="left">StorageDead(_402)<br/>StorageDead(_403)<br/>StorageDead(_401)<br/>_396 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb184__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">184</td></tr><tr><td align="left" balign="left">StorageDead(_399)<br/>StorageDead(_398)<br/>_396 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb185__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">185</td></tr><tr><td align="left" balign="left">StorageDead(_397)<br/>StorageDead(_396)<br/>StorageLive(_405)<br/>StorageLive(_406)<br/>StorageLive(_407)<br/>StorageLive(_408)<br/>_408 = &amp;mut (*_17)<br/></td></tr><tr><td align="left">_407 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _408)</td></tr></table>>];
    bb186__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">186</td></tr><tr><td align="left" balign="left">_406 = &amp;mut (*_407)<br/>StorageDead(_408)<br/>StorageLive(_409)<br/>_409 = _49<br/></td></tr><tr><td align="left">_405 = User::update_last_active_slot(move _406, move _409)</td></tr></table>>];
    bb187__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">187</td></tr><tr><td align="left" balign="left">StorageDead(_409)<br/>StorageDead(_406)<br/>StorageDead(_407)<br/>StorageDead(_405)<br/>StorageLive(_410)<br/>StorageLive(_411)<br/>StorageLive(_412)<br/>StorageLive(_413)<br/>_413 = &amp;_56<br/>StorageLive(_414)<br/>StorageLive(_415)<br/>_415 = &amp;_2<br/>_414 = &amp;(*_415)<br/></td></tr><tr><td align="left">_412 = SpotMarketMap::&lt;'_&gt;::get_ref_mut(move _413, move _414)</td></tr></table>>];
    bb188__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">188</td></tr><tr><td align="left" balign="left">StorageDead(_414)<br/>StorageDead(_413)<br/></td></tr><tr><td align="left">_411 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _412)</td></tr></table>>];
    bb189__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">189</td></tr><tr><td align="left" balign="left">StorageDead(_412)<br/>_416 = discriminant(_411)<br/></td></tr><tr><td align="left">switchInt(move _416)</td></tr></table>>];
    bb190__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">190</td></tr><tr><td align="left" balign="left">StorageLive(_420)<br/>_420 = move ((_411 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_410 = move _420<br/>StorageDead(_420)<br/>_621 = discriminant(_411)<br/>StorageDead(_415)<br/>StorageDead(_411)<br/>StorageLive(_421)<br/>StorageLive(_422)<br/>StorageLive(_423)<br/>StorageLive(_424)<br/>StorageLive(_425)<br/>_425 = &amp;mut _57<br/>StorageLive(_426)<br/>StorageLive(_427)<br/>StorageLive(_428)<br/>StorageLive(_429)<br/>StorageLive(_430)<br/>StorageLive(_431)<br/>_431 = &amp;_410<br/></td></tr><tr><td align="left">_430 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _431)</td></tr></table>>];
    bb191__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">191</td></tr><tr><td align="left" balign="left">StorageLive(_417)<br/>_417 = ((_411 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_419)<br/>_419 = _417<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _419)</td></tr></table>>];
    bb192__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">192</td></tr><tr><td align="left" balign="left">StorageDead(_419)<br/>StorageDead(_417)<br/>_619 = discriminant(_411)<br/>StorageDead(_415)<br/>StorageDead(_411)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb193__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">193</td></tr><tr><td align="left" balign="left">_429 = &amp;(*_430)<br/>StorageDead(_431)<br/></td></tr><tr><td align="left">_428 = SpotMarket::oracle_id(move _429)</td></tr></table>>];
    bb194__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">194</td></tr><tr><td align="left" balign="left">StorageDead(_429)<br/>_427 = &amp;_428<br/>_426 = &amp;(*_427)<br/></td></tr><tr><td align="left">_424 = OracleMap::&lt;'_&gt;::get_price_data(move _425, move _426)</td></tr></table>>];
    bb195__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">195</td></tr><tr><td align="left" balign="left">StorageDead(_426)<br/>StorageDead(_425)<br/></td></tr><tr><td align="left">_423 = &lt;std::result::Result&lt;&amp;OraclePriceData, error::ErrorCode&gt; as Try&gt;::branch(move _424)</td></tr></table>>];
    bb196__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">196</td></tr><tr><td align="left" balign="left">StorageDead(_424)<br/>_432 = discriminant(_423)<br/></td></tr><tr><td align="left">switchInt(move _432)</td></tr></table>>];
    bb197__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">197</td></tr><tr><td align="left" balign="left">StorageLive(_436)<br/>_436 = ((_423 as Continue).0: &amp;state::oracle::OraclePriceData)<br/>_422 = _436<br/>StorageDead(_436)<br/>_421 = ((*_422).0: i64)<br/>StorageDead(_430)<br/>StorageDead(_428)<br/>StorageDead(_427)<br/>StorageDead(_423)<br/>StorageDead(_422)<br/>StorageLive(_437)<br/>StorageLive(_438)<br/>StorageLive(_439)<br/>StorageLive(_440)<br/>StorageLive(_441)<br/>_441 = &amp;(*_17)<br/></td></tr><tr><td align="left">_440 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _441)</td></tr></table>>];
    bb198__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">198</td></tr><tr><td align="left" balign="left">StorageLive(_433)<br/>_433 = ((_423 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_435)<br/>_435 = _433<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _435)</td></tr></table>>];
    bb199__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">199</td></tr><tr><td align="left" balign="left">StorageDead(_435)<br/>StorageDead(_433)<br/>StorageDead(_430)<br/>StorageDead(_428)<br/>StorageDead(_427)<br/>StorageDead(_423)<br/>StorageDead(_422)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb200__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">200</td></tr><tr><td align="left" balign="left">_439 = &amp;(*_440)<br/>StorageDead(_441)<br/>StorageLive(_442)<br/>_442 = _2<br/></td></tr><tr><td align="left">_438 = User::get_spot_position(move _439, move _442)</td></tr></table>>];
    bb201__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">201</td></tr><tr><td align="left" balign="left">StorageDead(_442)<br/>StorageDead(_439)<br/>StorageLive(_443)<br/>_443 = {closure@programs/drift/src/instructions/user.rs:803:24: 803:29}<br/></td></tr><tr><td align="left">_437 = std::result::Result::&lt;&amp;SpotPosition, error::ErrorCode&gt;::map_or::&lt;bool, {closure@programs/drift/src/instructions/user.rs:803:24: 803:29}&gt;(move _438, const false, move _443)</td></tr></table>>];
    bb202__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">202</td></tr><tr><td align="left" balign="left">StorageDead(_443)<br/>StorageDead(_438)<br/>StorageDead(_440)<br/>StorageLive(_444)<br/>StorageLive(_445)<br/>_445 = _437<br/></td></tr><tr><td align="left">switchInt(move _445)</td></tr></table>>];
    bb203__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">203</td></tr><tr><td align="left" balign="left">_444 = DepositExplanation::Borrow<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb204__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">204</td></tr><tr><td align="left" balign="left">_444 = DepositExplanation::None<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb205__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">205</td></tr><tr><td align="left" balign="left">StorageDead(_445)<br/>StorageLive(_446)<br/>StorageLive(_447)<br/>StorageLive(_448)<br/>StorageLive(_449)<br/>_449 = &amp;_410<br/></td></tr><tr><td align="left">_448 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _449)</td></tr></table>>];
    bb206__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">206</td></tr><tr><td align="left" balign="left">StorageDead(_449)<br/>_447 = ((*_448).30: u64)<br/>StorageDead(_448)<br/>StorageLive(_450)<br/>StorageLive(_451)<br/>StorageLive(_452)<br/>StorageLive(_453)<br/>_453 = _447<br/></td></tr><tr><td align="left">_452 = core::num::&lt;impl u64&gt;::checked_add(move _453, const 1_u64)</td></tr></table>>];
    bb207__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">207</td></tr><tr><td align="left" balign="left">StorageDead(_453)<br/>StorageLive(_454)<br/>_454 = Option::&lt;u64&gt;::Some(const 1_u64)<br/></td></tr><tr><td align="left">_451 = Option::&lt;u64&gt;::or(move _452, move _454)</td></tr></table>>];
    bb208__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">208</td></tr><tr><td align="left" balign="left">StorageDead(_454)<br/>StorageDead(_452)<br/></td></tr><tr><td align="left">_450 = Option::&lt;u64&gt;::unwrap(move _451)</td></tr></table>>];
    bb209__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">209</td></tr><tr><td align="left" balign="left">StorageDead(_451)<br/>StorageLive(_455)<br/>StorageLive(_456)<br/>_456 = &amp;mut _410<br/></td></tr><tr><td align="left">_455 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _456)</td></tr></table>>];
    bb210__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">210</td></tr><tr><td align="left" balign="left">StorageDead(_456)<br/>((*_455).30: u64) = move _450<br/>StorageDead(_450)<br/>StorageDead(_455)<br/>_446 = _447<br/>StorageDead(_447)<br/>StorageLive(_457)<br/>StorageLive(_458)<br/>_458 = _48<br/>StorageLive(_459)<br/>_459 = _446<br/>StorageLive(_460)<br/>StorageLive(_461)<br/>StorageLive(_462)<br/>_462 = &amp;(*_17)<br/></td></tr><tr><td align="left">_461 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _462)</td></tr></table>>];
    bb211__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">211</td></tr><tr><td align="left" balign="left">StorageDead(_462)<br/>_460 = ((*_461).0: anchor_lang::prelude::Pubkey)<br/>StorageLive(_463)<br/>_463 = _15<br/>StorageLive(_464)<br/>_464 = DepositDirection::Withdraw<br/>StorageLive(_465)<br/>_465 = _421<br/>StorageLive(_466)<br/>_466 = _167<br/>StorageLive(_467)<br/>_467 = _2<br/>StorageLive(_468)<br/>StorageLive(_469)<br/>StorageLive(_470)<br/>_470 = &amp;_410<br/></td></tr><tr><td align="left">_469 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _470)</td></tr></table>>];
    bb212__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">212</td></tr><tr><td align="left" balign="left">StorageDead(_470)<br/>_468 = ((*_469).11: u128)<br/>StorageLive(_471)<br/>StorageLive(_472)<br/>StorageLive(_473)<br/>_473 = &amp;_410<br/></td></tr><tr><td align="left">_472 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _473)</td></tr></table>>];
    bb213__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">213</td></tr><tr><td align="left" balign="left">StorageDead(_473)<br/>_471 = ((*_472).12: u128)<br/>StorageLive(_474)<br/>StorageLive(_475)<br/>StorageLive(_476)<br/>_476 = &amp;_410<br/></td></tr><tr><td align="left">_475 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _476)</td></tr></table>>];
    bb214__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">214</td></tr><tr><td align="left" balign="left">StorageDead(_476)<br/>_474 = ((*_475).13: u128)<br/>StorageLive(_477)<br/>StorageLive(_478)<br/>StorageLive(_479)<br/>_479 = &amp;_410<br/></td></tr><tr><td align="left">_478 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _479)</td></tr></table>>];
    bb215__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">215</td></tr><tr><td align="left" balign="left">StorageDead(_479)<br/>_477 = ((*_478).14: u128)<br/>StorageLive(_480)<br/>StorageLive(_481)<br/>StorageLive(_482)<br/>_482 = &amp;(*_17)<br/></td></tr><tr><td align="left">_481 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _482)</td></tr></table>>];
    bb216__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">216</td></tr><tr><td align="left" balign="left">StorageDead(_482)<br/>_480 = ((*_481).7: u64)<br/>StorageLive(_483)<br/>StorageLive(_484)<br/>StorageLive(_485)<br/>_485 = &amp;(*_17)<br/></td></tr><tr><td align="left">_484 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _485)</td></tr></table>>];
    bb217__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">217</td></tr><tr><td align="left" balign="left">StorageDead(_485)<br/>_483 = ((*_484).8: u64)<br/>StorageLive(_486)<br/>_486 = _444<br/>StorageLive(_487)<br/>_487 = Option::&lt;anchor_lang::prelude::Pubkey&gt;::None<br/>_457 = DepositRecord { ts: move _458, user_authority: move _460, user: move _463, direction: move _464, deposit_record_id: move _459, amount: move _466, market_index: move _467, oracle_price: move _465, market_deposit_balance: move _468, market_withdraw_balance: move _471, market_cumulative_deposit_interest: move _474, market_cumulative_borrow_interest: move _477, total_deposits_after: move _480, total_withdraws_after: move _483, explanation: move _486, transfer_user: move _487 }<br/>StorageDead(_487)<br/>StorageDead(_486)<br/>StorageDead(_483)<br/>StorageDead(_480)<br/>StorageDead(_477)<br/>StorageDead(_474)<br/>StorageDead(_471)<br/>StorageDead(_468)<br/>StorageDead(_467)<br/>StorageDead(_466)<br/>StorageDead(_465)<br/>StorageDead(_464)<br/>StorageDead(_463)<br/>StorageDead(_460)<br/>StorageDead(_459)<br/>StorageDead(_458)<br/>StorageDead(_484)<br/>StorageDead(_481)<br/>StorageDead(_478)<br/>StorageDead(_475)<br/>StorageDead(_472)<br/>StorageDead(_469)<br/>StorageDead(_461)<br/>StorageLive(_488)<br/>StorageLive(_489)<br/>StorageLive(_490)<br/>StorageLive(_491)<br/>StorageLive(_492)<br/>StorageLive(_493)<br/>StorageLive(_494)<br/>StorageLive(_495)<br/>StorageLive(_496)<br/>StorageLive(_497)<br/>StorageLive(_498)<br/>StorageLive(_499)<br/>StorageLive(_500)<br/>_500 = &amp;_457<br/>_499 = &amp;(*_500)<br/></td></tr><tr><td align="left">_498 = &lt;DepositRecord as anchor_lang::Event&gt;::data(move _499)</td></tr></table>>];
    bb218__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">218</td></tr><tr><td align="left" balign="left">StorageDead(_499)<br/>_497 = &amp;_498<br/>_496 = &amp;(*_497)<br/></td></tr><tr><td align="left">_495 = &lt;Vec&lt;u8&gt; as Deref&gt;::deref(move _496)</td></tr></table>>];
    bb219__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">219</td></tr><tr><td align="left" balign="left">_494 = &amp;(*_495)<br/>StorageDead(_496)<br/>_493 = [move _494]<br/>StorageDead(_494)<br/>_492 = &amp;_493<br/>_491 = &amp;(*_492)<br/>_490 = move _491 as &amp;[&amp;[u8]] (PointerCoercion(Unsize))<br/>StorageDead(_491)<br/></td></tr><tr><td align="left">_489 = solana_program::log::sol_log_data(move _490)</td></tr></table>>];
    bb220__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">220</td></tr><tr><td align="left" balign="left">StorageDead(_490)<br/></td></tr><tr><td align="left">drop(_498)</td></tr></table>>];
    bb221__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">221</td></tr><tr><td align="left" balign="left">StorageDead(_500)<br/>StorageDead(_498)<br/>StorageDead(_497)<br/>StorageDead(_495)<br/>StorageDead(_493)<br/>StorageDead(_492)<br/>StorageDead(_489)<br/>_488 = const ()<br/>StorageDead(_488)<br/>StorageLive(_501)<br/>StorageLive(_502)<br/>StorageLive(_503)<br/>StorageLive(_504)<br/>StorageLive(_505)<br/>_580 = deref_copy (_1.1: &amp;mut instructions::user::Withdraw&lt;'_&gt;)<br/>_505 = &amp;((*_580).7: anchor_lang::prelude::Interface&lt;'_, anchor_spl::token_interface::TokenInterface&gt;)<br/>_504 = &amp;(*_505)<br/>StorageLive(_506)<br/>StorageLive(_507)<br/>_581 = deref_copy (_1.1: &amp;mut instructions::user::Withdraw&lt;'_&gt;)<br/>_507 = &amp;((*_581).4: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_582 = deref_copy (*_507)<br/>_649 = (((_582.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_506 = &amp;(*_649)<br/>StorageLive(_508)<br/>StorageLive(_509)<br/>_583 = deref_copy (_1.1: &amp;mut instructions::user::Withdraw&lt;'_&gt;)<br/>_509 = &amp;((*_583).6: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_584 = deref_copy (*_509)<br/>_650 = (((_584.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_508 = &amp;(*_650)<br/>StorageLive(_510)<br/>StorageLive(_511)<br/>_585 = deref_copy (_1.1: &amp;mut instructions::user::Withdraw&lt;'_&gt;)<br/>_511 = &amp;((*_585).5: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_510 = &amp;(*_511)<br/>StorageLive(_512)<br/>StorageLive(_513)<br/>StorageLive(_514)<br/>_586 = deref_copy (*_50)<br/>_651 = (((_586.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_514 = &amp;(*_651)<br/></td></tr><tr><td align="left">_513 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _514)</td></tr></table>>];
    bb222__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">222</td></tr><tr><td align="left" balign="left">StorageDead(_514)<br/>_512 = ((*_513).15: u8)<br/>StorageLive(_515)<br/>_515 = _167<br/>StorageLive(_516)<br/>StorageLive(_517)<br/>_517 = &amp;_79<br/>_516 = &amp;(*_517)<br/>StorageLive(_518)<br/>StorageLive(_519)<br/>StorageLive(_520)<br/>StorageLive(_521)<br/>StorageLive(_522)<br/>_522 = &amp;_410<br/></td></tr><tr><td align="left">_521 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _522)</td></tr></table>>];
    bb223__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">223</td></tr><tr><td align="left" balign="left">_520 = &amp;(*_521)<br/>StorageDead(_522)<br/></td></tr><tr><td align="left">_519 = SpotMarket::has_transfer_hook(move _520)</td></tr></table>>];
    bb224__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">224</td></tr><tr><td align="left">switchInt(move _519)</td></tr></table>>];
    bb225__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">225</td></tr><tr><td align="left" balign="left">StorageDead(_521)<br/>StorageDead(_520)<br/>StorageLive(_523)<br/>_523 = &amp;mut (*_51)<br/>_518 = Option::&lt;&amp;mut Peekable&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;&gt;::Some(move _523)<br/>StorageDead(_523)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb226__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">226</td></tr><tr><td align="left" balign="left">StorageDead(_521)<br/>StorageDead(_520)<br/>_518 = Option::&lt;&amp;mut Peekable&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;&gt;::None<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb227__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">227</td></tr><tr><td align="left" balign="left">StorageDead(_519)<br/></td></tr><tr><td align="left">_503 = send_from_program_vault(move _504, move _506, move _508, move _510, move _512, move _515, move _516, move _518)</td></tr></table>>];
    bb228__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">228</td></tr><tr><td align="left" balign="left">StorageDead(_518)<br/>StorageDead(_516)<br/>StorageDead(_515)<br/>StorageDead(_512)<br/>StorageDead(_510)<br/>StorageDead(_508)<br/>StorageDead(_506)<br/>StorageDead(_504)<br/></td></tr><tr><td align="left">_502 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _503)</td></tr></table>>];
    bb229__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">229</td></tr><tr><td align="left" balign="left">StorageDead(_503)<br/>_524 = discriminant(_502)<br/></td></tr><tr><td align="left">switchInt(move _524)</td></tr></table>>];
    bb230__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">230</td></tr><tr><td align="left" balign="left">StorageLive(_528)<br/>_528 = ((_502 as Continue).0: ())<br/>_501 = _528<br/>StorageDead(_528)<br/>_623 = discriminant(_502)<br/>StorageDead(_517)<br/>StorageDead(_513)<br/>StorageDead(_511)<br/>StorageDead(_509)<br/>StorageDead(_507)<br/>StorageDead(_505)<br/>StorageDead(_502)<br/>StorageDead(_501)<br/>StorageLive(_529)<br/>StorageLive(_530)<br/>StorageLive(_531)<br/>StorageLive(_532)<br/>_587 = deref_copy (_1.1: &amp;mut instructions::user::Withdraw&lt;'_&gt;)<br/>_588 = deref_copy ((*_587).4: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_652 = (((_588.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_532 = &amp;mut (*_652)<br/></td></tr><tr><td align="left">_531 = anchor_lang::prelude::InterfaceAccount::&lt;'_, anchor_spl::token_interface::TokenAccount&gt;::reload(move _532)</td></tr></table>>];
    bb231__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">231</td></tr><tr><td align="left" balign="left">StorageLive(_525)<br/>_525 = move ((_502 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_527)<br/>_527 = move _525<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _527)</td></tr></table>>];
    bb232__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">232</td></tr><tr><td align="left" balign="left">StorageDead(_527)<br/>StorageDead(_525)<br/>_629 = discriminant(_502)<br/>StorageDead(_517)<br/>StorageDead(_513)<br/>StorageDead(_511)<br/>StorageDead(_509)<br/>StorageDead(_507)<br/>StorageDead(_505)<br/>StorageDead(_502)<br/>StorageDead(_501)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb233__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">233</td></tr><tr><td align="left" balign="left">StorageDead(_532)<br/></td></tr><tr><td align="left">_530 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _531)</td></tr></table>>];
    bb234__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">234</td></tr><tr><td align="left" balign="left">StorageDead(_531)<br/>_533 = discriminant(_530)<br/></td></tr><tr><td align="left">switchInt(move _533)</td></tr></table>>];
    bb235__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">235</td></tr><tr><td align="left" balign="left">StorageLive(_537)<br/>_537 = ((_530 as Continue).0: ())<br/>_529 = _537<br/>StorageDead(_537)<br/>_625 = discriminant(_530)<br/>StorageDead(_530)<br/>StorageDead(_529)<br/>StorageLive(_538)<br/>StorageLive(_539)<br/>StorageLive(_540)<br/>StorageLive(_541)<br/>StorageLive(_542)<br/>StorageLive(_543)<br/>StorageLive(_544)<br/>_544 = &amp;_410<br/>_543 = &amp;(*_544)<br/></td></tr><tr><td align="left">_542 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _543)</td></tr></table>>];
    bb236__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">236</td></tr><tr><td align="left" balign="left">StorageLive(_534)<br/>_534 = move ((_530 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_536)<br/>_536 = move _534<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _536)</td></tr></table>>];
    bb237__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">237</td></tr><tr><td align="left" balign="left">StorageDead(_536)<br/>StorageDead(_534)<br/>_627 = discriminant(_530)<br/>StorageDead(_530)<br/>StorageDead(_529)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb238__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">238</td></tr><tr><td align="left" balign="left">_541 = &amp;(*_542)<br/>StorageDead(_543)<br/>StorageLive(_545)<br/>StorageLive(_546)<br/>StorageLive(_547)<br/>StorageLive(_548)<br/>StorageLive(_549)<br/>_589 = deref_copy (_1.1: &amp;mut instructions::user::Withdraw&lt;'_&gt;)<br/>_590 = deref_copy ((*_589).4: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_653 = (((_590.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_549 = &amp;(*_653)<br/></td></tr><tr><td align="left">_548 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _549)</td></tr></table>>];
    bb239__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">239</td></tr><tr><td align="left" balign="left">_547 = &amp;(*_548)<br/></td></tr><tr><td align="left">_546 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _547)</td></tr></table>>];
    bb240__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">240</td></tr><tr><td align="left" balign="left">StorageDead(_549)<br/>StorageDead(_547)<br/>_545 = ((*_546).2: u64)<br/></td></tr><tr><td align="left">_540 = validate_spot_market_vault_amount(move _541, move _545)</td></tr></table>>];
    bb241__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">241</td></tr><tr><td align="left" balign="left">StorageDead(_545)<br/>StorageDead(_541)<br/></td></tr><tr><td align="left">_539 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _540)</td></tr></table>>];
    bb242__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">242</td></tr><tr><td align="left" balign="left">StorageDead(_540)<br/>_550 = discriminant(_539)<br/></td></tr><tr><td align="left">switchInt(move _550)</td></tr></table>>];
    bb243__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">243</td></tr><tr><td align="left" balign="left">StorageLive(_554)<br/>_554 = ((_539 as Continue).0: i64)<br/>_538 = _554<br/>StorageDead(_554)<br/>StorageDead(_548)<br/>StorageDead(_546)<br/>StorageDead(_544)<br/>StorageDead(_542)<br/>StorageDead(_539)<br/>StorageDead(_538)<br/>StorageLive(_555)<br/>StorageLive(_556)<br/>StorageLive(_557)<br/>StorageLive(_558)<br/>StorageLive(_559)<br/>StorageLive(_560)<br/>_560 = &amp;_410<br/></td></tr><tr><td align="left">_559 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _560)</td></tr></table>>];
    bb244__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">244</td></tr><tr><td align="left" balign="left">StorageLive(_551)<br/>_551 = ((_539 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_553)<br/>_553 = _551<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _553)</td></tr></table>>];
    bb245__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">245</td></tr><tr><td align="left" balign="left">StorageDead(_553)<br/>StorageDead(_551)<br/>StorageDead(_548)<br/>StorageDead(_546)<br/>StorageDead(_544)<br/>StorageDead(_542)<br/>StorageDead(_539)<br/>StorageDead(_538)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb246__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">246</td></tr><tr><td align="left" balign="left">_558 = &amp;(*_559)<br/>StorageDead(_560)<br/>StorageLive(_561)<br/>_561 = _437<br/></td></tr><tr><td align="left">_557 = SpotMarket::validate_max_token_deposits_and_borrows(move _558, move _561)</td></tr></table>>];
    bb247__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">247</td></tr><tr><td align="left" balign="left">StorageDead(_561)<br/>StorageDead(_558)<br/></td></tr><tr><td align="left">_556 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _557)</td></tr></table>>];
    bb248__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">248</td></tr><tr><td align="left" balign="left">StorageDead(_557)<br/>_562 = discriminant(_556)<br/></td></tr><tr><td align="left">switchInt(move _562)</td></tr></table>>];
    bb249__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">249</td></tr><tr><td align="left" balign="left">StorageLive(_566)<br/>_566 = ((_556 as Continue).0: ())<br/>_555 = _566<br/>StorageDead(_566)<br/>StorageDead(_559)<br/>StorageDead(_556)<br/>StorageDead(_555)<br/>StorageLive(_567)<br/>_567 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _567)<br/>StorageDead(_567)<br/>StorageDead(_457)<br/>StorageDead(_446)<br/>StorageDead(_444)<br/>StorageDead(_437)<br/>StorageDead(_421)<br/></td></tr><tr><td align="left">drop(_410)</td></tr></table>>];
    bb250__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">250</td></tr><tr><td align="left" balign="left">StorageLive(_563)<br/>_563 = ((_556 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_565)<br/>_565 = _563<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _565)</td></tr></table>>];
    bb251__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">251</td></tr><tr><td align="left" balign="left">StorageDead(_565)<br/>StorageDead(_563)<br/>StorageDead(_559)<br/>StorageDead(_556)<br/>StorageDead(_555)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb252__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">252</td></tr><tr><td align="left" balign="left">StorageDead(_410)<br/>StorageDead(_167)<br/>StorageDead(_122)<br/>StorageDead(_79)<br/></td></tr><tr><td align="left">drop(_57)</td></tr></table>>];
    bb253__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">253</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/></td></tr><tr><td align="left">drop(_56)</td></tr></table>>];
    bb254__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">254</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/></td></tr><tr><td align="left">drop(_55)</td></tr></table>>];
    bb255__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">255</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_52)<br/>StorageDead(_51)<br/>StorageDead(_50)<br/>StorageDead(_49)<br/>StorageDead(_48)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">drop(_29)</td></tr></table>>];
    bb256__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">256</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/></td></tr><tr><td align="left">drop(_18)</td></tr></table>>];
    bb257__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">257</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_17)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb258__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">258</td></tr><tr><td align="left" balign="left">StorageDead(_457)<br/>StorageDead(_446)<br/>StorageDead(_444)<br/>StorageDead(_437)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb259__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">259</td></tr><tr><td align="left" balign="left">StorageDead(_421)<br/></td></tr><tr><td align="left">drop(_410)</td></tr></table>>];
    bb260__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">260</td></tr><tr><td align="left" balign="left">StorageDead(_410)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb261__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">261</td></tr><tr><td align="left" balign="left">StorageDead(_322)<br/>StorageDead(_318)<br/>StorageDead(_313)<br/>StorageDead(_310)<br/>StorageDead(_309)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb262__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">262</td></tr><tr><td align="left" balign="left">StorageDead(_294)<br/></td></tr><tr><td align="left">drop(_283)</td></tr></table>>];
    bb263__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">263</td></tr><tr><td align="left" balign="left">StorageDead(_283)<br/>StorageDead(_282)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb264__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">264</td></tr><tr><td align="left" balign="left">StorageDead(_266)<br/>StorageDead(_262)<br/>StorageDead(_260)<br/>StorageDead(_257)<br/>StorageDead(_254)<br/>StorageDead(_253)<br/></td></tr><tr><td align="left">drop(_242)</td></tr></table>>];
    bb265__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">265</td></tr><tr><td align="left" balign="left">StorageDead(_242)<br/>StorageDead(_241)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb266__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">266</td></tr><tr><td align="left" balign="left">StorageDead(_223)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb267__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">267</td></tr><tr><td align="left" balign="left">StorageDead(_183)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb268__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">268</td></tr><tr><td align="left" balign="left">StorageDead(_182)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb269__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">269</td></tr><tr><td align="left" balign="left">StorageDead(_170)<br/>StorageDead(_168)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb270__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">270</td></tr><tr><td align="left" balign="left">StorageDead(_167)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb271__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">271</td></tr><tr><td align="left" balign="left">StorageDead(_135)<br/></td></tr><tr><td align="left">drop(_124)</td></tr></table>>];
    bb272__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">272</td></tr><tr><td align="left" balign="left">StorageDead(_124)<br/>StorageDead(_123)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb273__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">273</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb274__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">274</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/></td></tr><tr><td align="left">drop(_57)</td></tr></table>>];
    bb275__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">275</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/></td></tr><tr><td align="left">drop(_56)</td></tr></table>>];
    bb276__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">276</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/></td></tr><tr><td align="left">drop(_55)</td></tr></table>>];
    bb277__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">277</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb278__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">278</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">drop(_64)</td></tr></table>>];
    bb279__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">279</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageDead(_63)<br/>StorageDead(_59)<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb280__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">280</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_51)<br/>StorageDead(_50)<br/>StorageDead(_49)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb281__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">281</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/></td></tr><tr><td align="left">drop(_29)</td></tr></table>>];
    bb282__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">282</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/></td></tr><tr><td align="left">drop(_18)</td></tr></table>>];
    bb283__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">283</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_17)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb284__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">284</td></tr><tr><td align="left">return</td></tr></table>>];
    bb285__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">285 (cleanup)</td></tr><tr><td align="left">drop(_498)</td></tr></table>>];
    bb286__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">286 (cleanup)</td></tr><tr><td align="left">drop(_410)</td></tr></table>>];
    bb287__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">287 (cleanup)</td></tr><tr><td align="left">drop(_283)</td></tr></table>>];
    bb288__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">288 (cleanup)</td></tr><tr><td align="left">drop(_242)</td></tr></table>>];
    bb289__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">289 (cleanup)</td></tr><tr><td align="left">drop(_203)</td></tr></table>>];
    bb290__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">290 (cleanup)</td></tr><tr><td align="left">drop(_124)</td></tr></table>>];
    bb291__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">291 (cleanup)</td></tr><tr><td align="left">drop(_102)</td></tr></table>>];
    bb292__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">292 (cleanup)</td></tr><tr><td align="left">drop(_64)</td></tr></table>>];
    bb293__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">293 (cleanup)</td></tr><tr><td align="left">drop(_57)</td></tr></table>>];
    bb294__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">294 (cleanup)</td></tr><tr><td align="left">drop(_56)</td></tr></table>>];
    bb295__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">295 (cleanup)</td></tr><tr><td align="left">drop(_55)</td></tr></table>>];
    bb296__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">296 (cleanup)</td></tr><tr><td align="left">drop(_67)</td></tr></table>>];
    bb297__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">297 (cleanup)</td></tr><tr><td align="left">drop(_64)</td></tr></table>>];
    bb298__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">298 (cleanup)</td></tr><tr><td align="left">drop(_29)</td></tr></table>>];
    bb299__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">299 (cleanup)</td></tr><tr><td align="left">drop(_18)</td></tr></table>>];
    bb300__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">300 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb301__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">301 (cleanup)</td></tr><tr><td align="left" balign="left">_635 = discriminant(_530)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb302__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">302 (cleanup)</td></tr><tr><td align="left" balign="left">_636 = discriminant(_502)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb303__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">303 (cleanup)</td></tr><tr><td align="left" balign="left">_637 = discriminant(_411)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb304__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">304 (cleanup)</td></tr><tr><td align="left" balign="left">_638 = discriminant(_284)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb305__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">305 (cleanup)</td></tr><tr><td align="left" balign="left">_639 = discriminant(_243)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb306__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">306 (cleanup)</td></tr><tr><td align="left" balign="left">_640 = discriminant(_125)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb307__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">307 (cleanup)</td></tr><tr><td align="left" balign="left">_642 = discriminant(_59)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb308__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">308 (cleanup)</td></tr><tr><td align="left" balign="left">_643 = discriminant(_41)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb309__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">309 (cleanup)</td></tr><tr><td align="left" balign="left">_644 = discriminant(_30)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb310__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">310 (cleanup)</td></tr><tr><td align="left" balign="left">_645 = discriminant(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb311__0_11681 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">311 (cleanup)</td></tr><tr><td align="left" balign="left">_646 = discriminant(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_11681 -> bb1__0_11681 [label="return"];
    bb1__0_11681 -> bb2__0_11681 [label="return"];
    bb1__0_11681 -> bb300__0_11681 [label="unwind"];
    bb2__0_11681 -> bb3__0_11681 [label="0"];
    bb2__0_11681 -> bb5__0_11681 [label="1"];
    bb2__0_11681 -> bb4__0_11681 [label="otherwise"];
    bb3__0_11681 -> bb7__0_11681 [label="return"];
    bb5__0_11681 -> bb6__0_11681 [label="return"];
    bb5__0_11681 -> bb311__0_11681 [label="unwind"];
    bb6__0_11681 -> bb284__0_11681 [label=""];
    bb7__0_11681 -> bb8__0_11681 [label="return"];
    bb8__0_11681 -> bb9__0_11681 [label="return"];
    bb8__0_11681 -> bb300__0_11681 [label="unwind"];
    bb9__0_11681 -> bb10__0_11681 [label="return"];
    bb9__0_11681 -> bb300__0_11681 [label="unwind"];
    bb10__0_11681 -> bb11__0_11681 [label="0"];
    bb10__0_11681 -> bb12__0_11681 [label="1"];
    bb10__0_11681 -> bb4__0_11681 [label="otherwise"];
    bb11__0_11681 -> bb14__0_11681 [label="return"];
    bb11__0_11681 -> bb299__0_11681 [label="unwind"];
    bb12__0_11681 -> bb13__0_11681 [label="return"];
    bb12__0_11681 -> bb310__0_11681 [label="unwind"];
    bb13__0_11681 -> bb283__0_11681 [label=""];
    bb14__0_11681 -> bb15__0_11681 [label="return"];
    bb14__0_11681 -> bb299__0_11681 [label="unwind"];
    bb15__0_11681 -> bb16__0_11681 [label="return"];
    bb15__0_11681 -> bb299__0_11681 [label="unwind"];
    bb16__0_11681 -> bb17__0_11681 [label="0"];
    bb16__0_11681 -> bb18__0_11681 [label="1"];
    bb16__0_11681 -> bb4__0_11681 [label="otherwise"];
    bb17__0_11681 -> bb20__0_11681 [label="return"];
    bb17__0_11681 -> bb298__0_11681 [label="unwind"];
    bb18__0_11681 -> bb19__0_11681 [label="return"];
    bb18__0_11681 -> bb309__0_11681 [label="unwind"];
    bb19__0_11681 -> bb282__0_11681 [label=""];
    bb20__0_11681 -> bb21__0_11681 [label="return"];
    bb20__0_11681 -> bb298__0_11681 [label="unwind"];
    bb21__0_11681 -> bb22__0_11681 [label="0"];
    bb21__0_11681 -> bb23__0_11681 [label="1"];
    bb21__0_11681 -> bb4__0_11681 [label="otherwise"];
    bb22__0_11681 -> bb25__0_11681 [label="return"];
    bb22__0_11681 -> bb298__0_11681 [label="unwind"];
    bb23__0_11681 -> bb24__0_11681 [label="return"];
    bb23__0_11681 -> bb308__0_11681 [label="unwind"];
    bb24__0_11681 -> bb281__0_11681 [label=""];
    bb25__0_11681 -> bb26__0_11681 [label="return"];
    bb25__0_11681 -> bb298__0_11681 [label="unwind"];
    bb26__0_11681 -> bb27__0_11681 [label="return"];
    bb26__0_11681 -> bb298__0_11681 [label="unwind"];
    bb27__0_11681 -> bb28__0_11681 [label="return"];
    bb27__0_11681 -> bb297__0_11681 [label="unwind"];
    bb28__0_11681 -> bb29__0_11681 [label="return"];
    bb28__0_11681 -> bb296__0_11681 [label="unwind"];
    bb29__0_11681 -> bb30__0_11681 [label="return"];
    bb29__0_11681 -> bb296__0_11681 [label="unwind"];
    bb30__0_11681 -> bb31__0_11681 [label="return"];
    bb30__0_11681 -> bb296__0_11681 [label="unwind"];
    bb31__0_11681 -> bb32__0_11681 [label="0"];
    bb31__0_11681 -> bb33__0_11681 [label="1"];
    bb31__0_11681 -> bb4__0_11681 [label="otherwise"];
    bb32__0_11681 -> bb35__0_11681 [label="return"];
    bb32__0_11681 -> bb292__0_11681 [label="unwind"];
    bb33__0_11681 -> bb34__0_11681 [label="return"];
    bb33__0_11681 -> bb307__0_11681 [label="unwind"];
    bb34__0_11681 -> bb278__0_11681 [label="return"];
    bb34__0_11681 -> bb297__0_11681 [label="unwind"];
    bb35__0_11681 -> bb36__0_11681 [label="return"];
    bb35__0_11681 -> bb293__0_11681 [label="unwind"];
    bb36__0_11681 -> bb37__0_11681 [label="return"];
    bb36__0_11681 -> bb293__0_11681 [label="unwind"];
    bb37__0_11681 -> bb38__0_11681 [label="return"];
    bb37__0_11681 -> bb293__0_11681 [label="unwind"];
    bb38__0_11681 -> bb39__0_11681 [label="0"];
    bb38__0_11681 -> bb40__0_11681 [label="1"];
    bb38__0_11681 -> bb4__0_11681 [label="otherwise"];
    bb39__0_11681 -> bb42__0_11681 [label="return"];
    bb39__0_11681 -> bb293__0_11681 [label="unwind"];
    bb40__0_11681 -> bb41__0_11681 [label="return"];
    bb40__0_11681 -> bb293__0_11681 [label="unwind"];
    bb41__0_11681 -> bb274__0_11681 [label=""];
    bb42__0_11681 -> bb43__0_11681 [label="return"];
    bb42__0_11681 -> bb293__0_11681 [label="unwind"];
    bb43__0_11681 -> bb45__0_11681 [label="0"];
    bb43__0_11681 -> bb44__0_11681 [label="otherwise"];
    bb44__0_11681 -> bb46__0_11681 [label="return"];
    bb44__0_11681 -> bb293__0_11681 [label="unwind"];
    bb45__0_11681 -> bb52__0_11681 [label=""];
    bb46__0_11681 -> bb47__0_11681 [label="return"];
    bb46__0_11681 -> bb293__0_11681 [label="unwind"];
    bb47__0_11681 -> bb48__0_11681 [label="return"];
    bb47__0_11681 -> bb293__0_11681 [label="unwind"];
    bb48__0_11681 -> bb49__0_11681 [label="return"];
    bb48__0_11681 -> bb291__0_11681 [label="unwind"];
    bb49__0_11681 -> bb50__0_11681 [label="return"];
    bb49__0_11681 -> bb291__0_11681 [label="unwind"];
    bb50__0_11681 -> bb51__0_11681 [label="return"];
    bb50__0_11681 -> bb293__0_11681 [label="unwind"];
    bb51__0_11681 -> bb52__0_11681 [label=""];
    bb52__0_11681 -> bb53__0_11681 [label="return"];
    bb52__0_11681 -> bb293__0_11681 [label="unwind"];
    bb53__0_11681 -> bb54__0_11681 [label="0"];
    bb53__0_11681 -> bb55__0_11681 [label="1"];
    bb53__0_11681 -> bb4__0_11681 [label="otherwise"];
    bb54__0_11681 -> bb57__0_11681 [label="return"];
    bb54__0_11681 -> bb293__0_11681 [label="unwind"];
    bb55__0_11681 -> bb56__0_11681 [label="return"];
    bb55__0_11681 -> bb293__0_11681 [label="unwind"];
    bb56__0_11681 -> bb274__0_11681 [label=""];
    bb57__0_11681 -> bb58__0_11681 [label="return"];
    bb57__0_11681 -> bb293__0_11681 [label="unwind"];
    bb58__0_11681 -> bb59__0_11681 [label="0"];
    bb58__0_11681 -> bb60__0_11681 [label="1"];
    bb58__0_11681 -> bb4__0_11681 [label="otherwise"];
    bb59__0_11681 -> bb62__0_11681 [label="return"];
    bb59__0_11681 -> bb290__0_11681 [label="unwind"];
    bb60__0_11681 -> bb61__0_11681 [label="return"];
    bb60__0_11681 -> bb306__0_11681 [label="unwind"];
    bb61__0_11681 -> bb272__0_11681 [label=""];
    bb62__0_11681 -> bb63__0_11681 [label="return"];
    bb62__0_11681 -> bb290__0_11681 [label="unwind"];
    bb63__0_11681 -> bb64__0_11681 [label="return"];
    bb63__0_11681 -> bb290__0_11681 [label="unwind"];
    bb64__0_11681 -> bb65__0_11681 [label="return"];
    bb64__0_11681 -> bb290__0_11681 [label="unwind"];
    bb65__0_11681 -> bb66__0_11681 [label="0"];
    bb65__0_11681 -> bb67__0_11681 [label="1"];
    bb65__0_11681 -> bb4__0_11681 [label="otherwise"];
    bb66__0_11681 -> bb69__0_11681 [label="return"];
    bb66__0_11681 -> bb290__0_11681 [label="unwind"];
    bb67__0_11681 -> bb68__0_11681 [label="return"];
    bb67__0_11681 -> bb290__0_11681 [label="unwind"];
    bb68__0_11681 -> bb271__0_11681 [label=""];
    bb69__0_11681 -> bb70__0_11681 [label="return"];
    bb69__0_11681 -> bb290__0_11681 [label="unwind"];
    bb70__0_11681 -> bb71__0_11681 [label="return"];
    bb70__0_11681 -> bb290__0_11681 [label="unwind"];
    bb71__0_11681 -> bb72__0_11681 [label="0"];
    bb71__0_11681 -> bb73__0_11681 [label="1"];
    bb71__0_11681 -> bb4__0_11681 [label="otherwise"];
    bb72__0_11681 -> bb75__0_11681 [label="return"];
    bb72__0_11681 -> bb290__0_11681 [label="unwind"];
    bb73__0_11681 -> bb74__0_11681 [label="return"];
    bb73__0_11681 -> bb290__0_11681 [label="unwind"];
    bb74__0_11681 -> bb271__0_11681 [label=""];
    bb75__0_11681 -> bb76__0_11681 [label="return"];
    bb75__0_11681 -> bb290__0_11681 [label="unwind"];
    bb76__0_11681 -> bb77__0_11681 [label="return"];
    bb76__0_11681 -> bb293__0_11681 [label="unwind"];
    bb77__0_11681 -> bb79__0_11681 [label="0"];
    bb77__0_11681 -> bb78__0_11681 [label="otherwise"];
    bb78__0_11681 -> bb80__0_11681 [label=""];
    bb79__0_11681 -> bb80__0_11681 [label=""];
    bb80__0_11681 -> bb81__0_11681 [label="return"];
    bb80__0_11681 -> bb293__0_11681 [label="unwind"];
    bb81__0_11681 -> bb82__0_11681 [label="return"];
    bb81__0_11681 -> bb293__0_11681 [label="unwind"];
    bb82__0_11681 -> bb83__0_11681 [label="return"];
    bb82__0_11681 -> bb293__0_11681 [label="unwind"];
    bb83__0_11681 -> bb84__0_11681 [label="0"];
    bb83__0_11681 -> bb85__0_11681 [label="1"];
    bb83__0_11681 -> bb4__0_11681 [label="otherwise"];
    bb84__0_11681 -> bb88__0_11681 [label="0"];
    bb84__0_11681 -> bb87__0_11681 [label="otherwise"];
    bb85__0_11681 -> bb86__0_11681 [label="return"];
    bb85__0_11681 -> bb293__0_11681 [label="unwind"];
    bb86__0_11681 -> bb269__0_11681 [label=""];
    bb87__0_11681 -> bb89__0_11681 [label="return"];
    bb87__0_11681 -> bb293__0_11681 [label="unwind"];
    bb88__0_11681 -> bb132__0_11681 [label=""];
    bb89__0_11681 -> bb90__0_11681 [label="success"];
    bb89__0_11681 -> bb293__0_11681 [label="unwind"];
    bb90__0_11681 -> bb91__0_11681 [label="return"];
    bb90__0_11681 -> bb293__0_11681 [label="unwind"];
    bb91__0_11681 -> bb93__0_11681 [label="0"];
    bb91__0_11681 -> bb92__0_11681 [label="otherwise"];
    bb92__0_11681 -> bb100__0_11681 [label=""];
    bb93__0_11681 -> bb94__0_11681 [label="return"];
    bb93__0_11681 -> bb293__0_11681 [label="unwind"];
    bb94__0_11681 -> bb95__0_11681 [label="return"];
    bb94__0_11681 -> bb293__0_11681 [label="unwind"];
    bb95__0_11681 -> bb96__0_11681 [label="return"];
    bb95__0_11681 -> bb293__0_11681 [label="unwind"];
    bb96__0_11681 -> bb97__0_11681 [label="return"];
    bb96__0_11681 -> bb289__0_11681 [label="unwind"];
    bb97__0_11681 -> bb98__0_11681 [label="return"];
    bb97__0_11681 -> bb289__0_11681 [label="unwind"];
    bb98__0_11681 -> bb99__0_11681 [label="return"];
    bb98__0_11681 -> bb293__0_11681 [label="unwind"];
    bb99__0_11681 -> bb100__0_11681 [label=""];
    bb100__0_11681 -> bb101__0_11681 [label="return"];
    bb100__0_11681 -> bb293__0_11681 [label="unwind"];
    bb101__0_11681 -> bb102__0_11681 [label="0"];
    bb101__0_11681 -> bb103__0_11681 [label="1"];
    bb101__0_11681 -> bb4__0_11681 [label="otherwise"];
    bb102__0_11681 -> bb105__0_11681 [label="return"];
    bb102__0_11681 -> bb293__0_11681 [label="unwind"];
    bb103__0_11681 -> bb104__0_11681 [label="return"];
    bb103__0_11681 -> bb293__0_11681 [label="unwind"];
    bb104__0_11681 -> bb267__0_11681 [label=""];
    bb105__0_11681 -> bb106__0_11681 [label="return"];
    bb105__0_11681 -> bb293__0_11681 [label="unwind"];
    bb106__0_11681 -> bb107__0_11681 [label="return"];
    bb106__0_11681 -> bb293__0_11681 [label="unwind"];
    bb107__0_11681 -> bb108__0_11681 [label="0"];
    bb107__0_11681 -> bb109__0_11681 [label="1"];
    bb107__0_11681 -> bb4__0_11681 [label="otherwise"];
    bb108__0_11681 -> bb111__0_11681 [label="return"];
    bb108__0_11681 -> bb293__0_11681 [label="unwind"];
    bb109__0_11681 -> bb110__0_11681 [label="return"];
    bb109__0_11681 -> bb293__0_11681 [label="unwind"];
    bb110__0_11681 -> bb266__0_11681 [label=""];
    bb111__0_11681 -> bb112__0_11681 [label="return"];
    bb111__0_11681 -> bb293__0_11681 [label="unwind"];
    bb112__0_11681 -> bb113__0_11681 [label="0"];
    bb112__0_11681 -> bb114__0_11681 [label="1"];
    bb112__0_11681 -> bb4__0_11681 [label="otherwise"];
    bb113__0_11681 -> bb116__0_11681 [label="return"];
    bb113__0_11681 -> bb288__0_11681 [label="unwind"];
    bb114__0_11681 -> bb115__0_11681 [label="return"];
    bb114__0_11681 -> bb305__0_11681 [label="unwind"];
    bb115__0_11681 -> bb265__0_11681 [label=""];
    bb116__0_11681 -> bb117__0_11681 [label="success"];
    bb116__0_11681 -> bb288__0_11681 [label="unwind"];
    bb117__0_11681 -> bb118__0_11681 [label="return"];
    bb117__0_11681 -> bb288__0_11681 [label="unwind"];
    bb118__0_11681 -> bb119__0_11681 [label="return"];
    bb118__0_11681 -> bb288__0_11681 [label="unwind"];
    bb119__0_11681 -> bb120__0_11681 [label="return"];
    bb119__0_11681 -> bb288__0_11681 [label="unwind"];
    bb120__0_11681 -> bb121__0_11681 [label="0"];
    bb120__0_11681 -> bb122__0_11681 [label="1"];
    bb120__0_11681 -> bb4__0_11681 [label="otherwise"];
    bb121__0_11681 -> bb124__0_11681 [label="return"];
    bb121__0_11681 -> bb288__0_11681 [label="unwind"];
    bb122__0_11681 -> bb123__0_11681 [label="return"];
    bb122__0_11681 -> bb288__0_11681 [label="unwind"];
    bb123__0_11681 -> bb264__0_11681 [label=""];
    bb124__0_11681 -> bb125__0_11681 [label="return"];
    bb124__0_11681 -> bb288__0_11681 [label="unwind"];
    bb125__0_11681 -> bb126__0_11681 [label="0"];
    bb125__0_11681 -> bb127__0_11681 [label="1"];
    bb125__0_11681 -> bb4__0_11681 [label="otherwise"];
    bb126__0_11681 -> bb129__0_11681 [label="return"];
    bb126__0_11681 -> bb288__0_11681 [label="unwind"];
    bb127__0_11681 -> bb128__0_11681 [label="return"];
    bb127__0_11681 -> bb288__0_11681 [label="unwind"];
    bb128__0_11681 -> bb264__0_11681 [label=""];
    bb129__0_11681 -> bb130__0_11681 [label="return"];
    bb129__0_11681 -> bb288__0_11681 [label="unwind"];
    bb130__0_11681 -> bb131__0_11681 [label="return"];
    bb130__0_11681 -> bb293__0_11681 [label="unwind"];
    bb131__0_11681 -> bb132__0_11681 [label=""];
    bb132__0_11681 -> bb133__0_11681 [label="return"];
    bb132__0_11681 -> bb293__0_11681 [label="unwind"];
    bb133__0_11681 -> bb134__0_11681 [label="return"];
    bb133__0_11681 -> bb293__0_11681 [label="unwind"];
    bb134__0_11681 -> bb135__0_11681 [label="0"];
    bb134__0_11681 -> bb136__0_11681 [label="1"];
    bb134__0_11681 -> bb4__0_11681 [label="otherwise"];
    bb135__0_11681 -> bb138__0_11681 [label="return"];
    bb135__0_11681 -> bb287__0_11681 [label="unwind"];
    bb136__0_11681 -> bb137__0_11681 [label="return"];
    bb136__0_11681 -> bb304__0_11681 [label="unwind"];
    bb137__0_11681 -> bb263__0_11681 [label=""];
    bb138__0_11681 -> bb139__0_11681 [label="return"];
    bb138__0_11681 -> bb287__0_11681 [label="unwind"];
    bb139__0_11681 -> bb140__0_11681 [label="return"];
    bb139__0_11681 -> bb287__0_11681 [label="unwind"];
    bb140__0_11681 -> bb141__0_11681 [label="return"];
    bb140__0_11681 -> bb287__0_11681 [label="unwind"];
    bb141__0_11681 -> bb142__0_11681 [label="0"];
    bb141__0_11681 -> bb143__0_11681 [label="1"];
    bb141__0_11681 -> bb4__0_11681 [label="otherwise"];
    bb142__0_11681 -> bb145__0_11681 [label="return"];
    bb142__0_11681 -> bb287__0_11681 [label="unwind"];
    bb143__0_11681 -> bb144__0_11681 [label="return"];
    bb143__0_11681 -> bb287__0_11681 [label="unwind"];
    bb144__0_11681 -> bb262__0_11681 [label=""];
    bb145__0_11681 -> bb146__0_11681 [label="return"];
    bb145__0_11681 -> bb287__0_11681 [label="unwind"];
    bb146__0_11681 -> bb147__0_11681 [label="return"];
    bb146__0_11681 -> bb287__0_11681 [label="unwind"];
    bb147__0_11681 -> bb148__0_11681 [label="return"];
    bb147__0_11681 -> bb287__0_11681 [label="unwind"];
    bb148__0_11681 -> bb149__0_11681 [label="return"];
    bb148__0_11681 -> bb287__0_11681 [label="unwind"];
    bb149__0_11681 -> bb150__0_11681 [label="0"];
    bb149__0_11681 -> bb151__0_11681 [label="1"];
    bb149__0_11681 -> bb4__0_11681 [label="otherwise"];
    bb150__0_11681 -> bb153__0_11681 [label="return"];
    bb150__0_11681 -> bb287__0_11681 [label="unwind"];
    bb151__0_11681 -> bb152__0_11681 [label="return"];
    bb151__0_11681 -> bb287__0_11681 [label="unwind"];
    bb152__0_11681 -> bb261__0_11681 [label=""];
    bb153__0_11681 -> bb154__0_11681 [label="return"];
    bb153__0_11681 -> bb287__0_11681 [label="unwind"];
    bb154__0_11681 -> bb155__0_11681 [label="0"];
    bb154__0_11681 -> bb156__0_11681 [label="1"];
    bb154__0_11681 -> bb4__0_11681 [label="otherwise"];
    bb155__0_11681 -> bb158__0_11681 [label="return"];
    bb155__0_11681 -> bb287__0_11681 [label="unwind"];
    bb156__0_11681 -> bb157__0_11681 [label="return"];
    bb156__0_11681 -> bb287__0_11681 [label="unwind"];
    bb157__0_11681 -> bb261__0_11681 [label=""];
    bb158__0_11681 -> bb159__0_11681 [label="return"];
    bb158__0_11681 -> bb287__0_11681 [label="unwind"];
    bb159__0_11681 -> bb160__0_11681 [label="return"];
    bb159__0_11681 -> bb287__0_11681 [label="unwind"];
    bb160__0_11681 -> bb161__0_11681 [label="return"];
    bb160__0_11681 -> bb287__0_11681 [label="unwind"];
    bb161__0_11681 -> bb162__0_11681 [label="0"];
    bb161__0_11681 -> bb163__0_11681 [label="1"];
    bb161__0_11681 -> bb4__0_11681 [label="otherwise"];
    bb162__0_11681 -> bb165__0_11681 [label="return"];
    bb162__0_11681 -> bb293__0_11681 [label="unwind"];
    bb163__0_11681 -> bb164__0_11681 [label="return"];
    bb163__0_11681 -> bb287__0_11681 [label="unwind"];
    bb164__0_11681 -> bb262__0_11681 [label=""];
    bb165__0_11681 -> bb166__0_11681 [label="return"];
    bb165__0_11681 -> bb293__0_11681 [label="unwind"];
    bb166__0_11681 -> bb167__0_11681 [label="return"];
    bb166__0_11681 -> bb293__0_11681 [label="unwind"];
    bb167__0_11681 -> bb168__0_11681 [label="return"];
    bb167__0_11681 -> bb293__0_11681 [label="unwind"];
    bb168__0_11681 -> bb169__0_11681 [label="return"];
    bb168__0_11681 -> bb293__0_11681 [label="unwind"];
    bb169__0_11681 -> bb170__0_11681 [label="0"];
    bb169__0_11681 -> bb171__0_11681 [label="1"];
    bb169__0_11681 -> bb4__0_11681 [label="otherwise"];
    bb170__0_11681 -> bb173__0_11681 [label="return"];
    bb170__0_11681 -> bb293__0_11681 [label="unwind"];
    bb171__0_11681 -> bb172__0_11681 [label="return"];
    bb171__0_11681 -> bb293__0_11681 [label="unwind"];
    bb172__0_11681 -> bb270__0_11681 [label=""];
    bb173__0_11681 -> bb174__0_11681 [label="return"];
    bb173__0_11681 -> bb293__0_11681 [label="unwind"];
    bb174__0_11681 -> bb175__0_11681 [label="return"];
    bb174__0_11681 -> bb293__0_11681 [label="unwind"];
    bb175__0_11681 -> bb176__0_11681 [label="0"];
    bb175__0_11681 -> bb177__0_11681 [label="1"];
    bb175__0_11681 -> bb4__0_11681 [label="otherwise"];
    bb176__0_11681 -> bb179__0_11681 [label="return"];
    bb176__0_11681 -> bb293__0_11681 [label="unwind"];
    bb177__0_11681 -> bb178__0_11681 [label="return"];
    bb177__0_11681 -> bb293__0_11681 [label="unwind"];
    bb178__0_11681 -> bb270__0_11681 [label=""];
    bb179__0_11681 -> bb180__0_11681 [label="return"];
    bb179__0_11681 -> bb293__0_11681 [label="unwind"];
    bb180__0_11681 -> bb184__0_11681 [label="0"];
    bb180__0_11681 -> bb181__0_11681 [label="otherwise"];
    bb181__0_11681 -> bb182__0_11681 [label="return"];
    bb181__0_11681 -> bb293__0_11681 [label="unwind"];
    bb182__0_11681 -> bb183__0_11681 [label="return"];
    bb182__0_11681 -> bb293__0_11681 [label="unwind"];
    bb183__0_11681 -> bb185__0_11681 [label=""];
    bb184__0_11681 -> bb185__0_11681 [label=""];
    bb185__0_11681 -> bb186__0_11681 [label="return"];
    bb185__0_11681 -> bb293__0_11681 [label="unwind"];
    bb186__0_11681 -> bb187__0_11681 [label="return"];
    bb186__0_11681 -> bb293__0_11681 [label="unwind"];
    bb187__0_11681 -> bb188__0_11681 [label="return"];
    bb187__0_11681 -> bb293__0_11681 [label="unwind"];
    bb188__0_11681 -> bb189__0_11681 [label="return"];
    bb188__0_11681 -> bb293__0_11681 [label="unwind"];
    bb189__0_11681 -> bb190__0_11681 [label="0"];
    bb189__0_11681 -> bb191__0_11681 [label="1"];
    bb189__0_11681 -> bb4__0_11681 [label="otherwise"];
    bb190__0_11681 -> bb193__0_11681 [label="return"];
    bb190__0_11681 -> bb286__0_11681 [label="unwind"];
    bb191__0_11681 -> bb192__0_11681 [label="return"];
    bb191__0_11681 -> bb303__0_11681 [label="unwind"];
    bb192__0_11681 -> bb260__0_11681 [label=""];
    bb193__0_11681 -> bb194__0_11681 [label="return"];
    bb193__0_11681 -> bb286__0_11681 [label="unwind"];
    bb194__0_11681 -> bb195__0_11681 [label="return"];
    bb194__0_11681 -> bb286__0_11681 [label="unwind"];
    bb195__0_11681 -> bb196__0_11681 [label="return"];
    bb195__0_11681 -> bb286__0_11681 [label="unwind"];
    bb196__0_11681 -> bb197__0_11681 [label="0"];
    bb196__0_11681 -> bb198__0_11681 [label="1"];
    bb196__0_11681 -> bb4__0_11681 [label="otherwise"];
    bb197__0_11681 -> bb200__0_11681 [label="return"];
    bb197__0_11681 -> bb286__0_11681 [label="unwind"];
    bb198__0_11681 -> bb199__0_11681 [label="return"];
    bb198__0_11681 -> bb286__0_11681 [label="unwind"];
    bb199__0_11681 -> bb259__0_11681 [label=""];
    bb200__0_11681 -> bb201__0_11681 [label="return"];
    bb200__0_11681 -> bb286__0_11681 [label="unwind"];
    bb201__0_11681 -> bb202__0_11681 [label="return"];
    bb201__0_11681 -> bb286__0_11681 [label="unwind"];
    bb202__0_11681 -> bb204__0_11681 [label="0"];
    bb202__0_11681 -> bb203__0_11681 [label="otherwise"];
    bb203__0_11681 -> bb205__0_11681 [label=""];
    bb204__0_11681 -> bb205__0_11681 [label=""];
    bb205__0_11681 -> bb206__0_11681 [label="return"];
    bb205__0_11681 -> bb286__0_11681 [label="unwind"];
    bb206__0_11681 -> bb207__0_11681 [label="return"];
    bb206__0_11681 -> bb286__0_11681 [label="unwind"];
    bb207__0_11681 -> bb208__0_11681 [label="return"];
    bb207__0_11681 -> bb286__0_11681 [label="unwind"];
    bb208__0_11681 -> bb209__0_11681 [label="return"];
    bb208__0_11681 -> bb286__0_11681 [label="unwind"];
    bb209__0_11681 -> bb210__0_11681 [label="return"];
    bb209__0_11681 -> bb286__0_11681 [label="unwind"];
    bb210__0_11681 -> bb211__0_11681 [label="return"];
    bb210__0_11681 -> bb286__0_11681 [label="unwind"];
    bb211__0_11681 -> bb212__0_11681 [label="return"];
    bb211__0_11681 -> bb286__0_11681 [label="unwind"];
    bb212__0_11681 -> bb213__0_11681 [label="return"];
    bb212__0_11681 -> bb286__0_11681 [label="unwind"];
    bb213__0_11681 -> bb214__0_11681 [label="return"];
    bb213__0_11681 -> bb286__0_11681 [label="unwind"];
    bb214__0_11681 -> bb215__0_11681 [label="return"];
    bb214__0_11681 -> bb286__0_11681 [label="unwind"];
    bb215__0_11681 -> bb216__0_11681 [label="return"];
    bb215__0_11681 -> bb286__0_11681 [label="unwind"];
    bb216__0_11681 -> bb217__0_11681 [label="return"];
    bb216__0_11681 -> bb286__0_11681 [label="unwind"];
    bb217__0_11681 -> bb218__0_11681 [label="return"];
    bb217__0_11681 -> bb286__0_11681 [label="unwind"];
    bb218__0_11681 -> bb219__0_11681 [label="return"];
    bb218__0_11681 -> bb285__0_11681 [label="unwind"];
    bb219__0_11681 -> bb220__0_11681 [label="return"];
    bb219__0_11681 -> bb285__0_11681 [label="unwind"];
    bb220__0_11681 -> bb221__0_11681 [label="return"];
    bb220__0_11681 -> bb286__0_11681 [label="unwind"];
    bb221__0_11681 -> bb222__0_11681 [label="return"];
    bb221__0_11681 -> bb286__0_11681 [label="unwind"];
    bb222__0_11681 -> bb223__0_11681 [label="return"];
    bb222__0_11681 -> bb286__0_11681 [label="unwind"];
    bb223__0_11681 -> bb224__0_11681 [label="return"];
    bb223__0_11681 -> bb286__0_11681 [label="unwind"];
    bb224__0_11681 -> bb226__0_11681 [label="0"];
    bb224__0_11681 -> bb225__0_11681 [label="otherwise"];
    bb225__0_11681 -> bb227__0_11681 [label=""];
    bb226__0_11681 -> bb227__0_11681 [label=""];
    bb227__0_11681 -> bb228__0_11681 [label="return"];
    bb227__0_11681 -> bb286__0_11681 [label="unwind"];
    bb228__0_11681 -> bb229__0_11681 [label="return"];
    bb228__0_11681 -> bb286__0_11681 [label="unwind"];
    bb229__0_11681 -> bb230__0_11681 [label="0"];
    bb229__0_11681 -> bb231__0_11681 [label="1"];
    bb229__0_11681 -> bb4__0_11681 [label="otherwise"];
    bb230__0_11681 -> bb233__0_11681 [label="return"];
    bb230__0_11681 -> bb286__0_11681 [label="unwind"];
    bb231__0_11681 -> bb232__0_11681 [label="return"];
    bb231__0_11681 -> bb302__0_11681 [label="unwind"];
    bb232__0_11681 -> bb258__0_11681 [label=""];
    bb233__0_11681 -> bb234__0_11681 [label="return"];
    bb233__0_11681 -> bb286__0_11681 [label="unwind"];
    bb234__0_11681 -> bb235__0_11681 [label="0"];
    bb234__0_11681 -> bb236__0_11681 [label="1"];
    bb234__0_11681 -> bb4__0_11681 [label="otherwise"];
    bb235__0_11681 -> bb238__0_11681 [label="return"];
    bb235__0_11681 -> bb286__0_11681 [label="unwind"];
    bb236__0_11681 -> bb237__0_11681 [label="return"];
    bb236__0_11681 -> bb301__0_11681 [label="unwind"];
    bb237__0_11681 -> bb258__0_11681 [label=""];
    bb238__0_11681 -> bb239__0_11681 [label="return"];
    bb238__0_11681 -> bb286__0_11681 [label="unwind"];
    bb239__0_11681 -> bb240__0_11681 [label="return"];
    bb239__0_11681 -> bb286__0_11681 [label="unwind"];
    bb240__0_11681 -> bb241__0_11681 [label="return"];
    bb240__0_11681 -> bb286__0_11681 [label="unwind"];
    bb241__0_11681 -> bb242__0_11681 [label="return"];
    bb241__0_11681 -> bb286__0_11681 [label="unwind"];
    bb242__0_11681 -> bb243__0_11681 [label="0"];
    bb242__0_11681 -> bb244__0_11681 [label="1"];
    bb242__0_11681 -> bb4__0_11681 [label="otherwise"];
    bb243__0_11681 -> bb246__0_11681 [label="return"];
    bb243__0_11681 -> bb286__0_11681 [label="unwind"];
    bb244__0_11681 -> bb245__0_11681 [label="return"];
    bb244__0_11681 -> bb286__0_11681 [label="unwind"];
    bb245__0_11681 -> bb258__0_11681 [label=""];
    bb246__0_11681 -> bb247__0_11681 [label="return"];
    bb246__0_11681 -> bb286__0_11681 [label="unwind"];
    bb247__0_11681 -> bb248__0_11681 [label="return"];
    bb247__0_11681 -> bb286__0_11681 [label="unwind"];
    bb248__0_11681 -> bb249__0_11681 [label="0"];
    bb248__0_11681 -> bb250__0_11681 [label="1"];
    bb248__0_11681 -> bb4__0_11681 [label="otherwise"];
    bb249__0_11681 -> bb252__0_11681 [label="return"];
    bb249__0_11681 -> bb293__0_11681 [label="unwind"];
    bb250__0_11681 -> bb251__0_11681 [label="return"];
    bb250__0_11681 -> bb286__0_11681 [label="unwind"];
    bb251__0_11681 -> bb258__0_11681 [label=""];
    bb252__0_11681 -> bb253__0_11681 [label="return"];
    bb252__0_11681 -> bb294__0_11681 [label="unwind"];
    bb253__0_11681 -> bb254__0_11681 [label="return"];
    bb253__0_11681 -> bb295__0_11681 [label="unwind"];
    bb254__0_11681 -> bb255__0_11681 [label="return"];
    bb254__0_11681 -> bb298__0_11681 [label="unwind"];
    bb255__0_11681 -> bb256__0_11681 [label="return"];
    bb255__0_11681 -> bb299__0_11681 [label="unwind"];
    bb256__0_11681 -> bb257__0_11681 [label="return"];
    bb256__0_11681 -> bb300__0_11681 [label="unwind"];
    bb257__0_11681 -> bb284__0_11681 [label=""];
    bb258__0_11681 -> bb259__0_11681 [label=""];
    bb259__0_11681 -> bb260__0_11681 [label="return"];
    bb259__0_11681 -> bb293__0_11681 [label="unwind"];
    bb260__0_11681 -> bb270__0_11681 [label=""];
    bb261__0_11681 -> bb262__0_11681 [label=""];
    bb262__0_11681 -> bb263__0_11681 [label="return"];
    bb262__0_11681 -> bb293__0_11681 [label="unwind"];
    bb263__0_11681 -> bb268__0_11681 [label=""];
    bb264__0_11681 -> bb265__0_11681 [label="return"];
    bb264__0_11681 -> bb293__0_11681 [label="unwind"];
    bb265__0_11681 -> bb266__0_11681 [label=""];
    bb266__0_11681 -> bb267__0_11681 [label=""];
    bb267__0_11681 -> bb268__0_11681 [label=""];
    bb268__0_11681 -> bb269__0_11681 [label=""];
    bb269__0_11681 -> bb270__0_11681 [label=""];
    bb270__0_11681 -> bb273__0_11681 [label=""];
    bb271__0_11681 -> bb272__0_11681 [label="return"];
    bb271__0_11681 -> bb293__0_11681 [label="unwind"];
    bb272__0_11681 -> bb273__0_11681 [label=""];
    bb273__0_11681 -> bb274__0_11681 [label=""];
    bb274__0_11681 -> bb275__0_11681 [label="return"];
    bb274__0_11681 -> bb294__0_11681 [label="unwind"];
    bb275__0_11681 -> bb276__0_11681 [label="return"];
    bb275__0_11681 -> bb295__0_11681 [label="unwind"];
    bb276__0_11681 -> bb277__0_11681 [label="return"];
    bb276__0_11681 -> bb298__0_11681 [label="unwind"];
    bb277__0_11681 -> bb280__0_11681 [label=""];
    bb278__0_11681 -> bb279__0_11681 [label="return"];
    bb278__0_11681 -> bb298__0_11681 [label="unwind"];
    bb279__0_11681 -> bb280__0_11681 [label=""];
    bb280__0_11681 -> bb281__0_11681 [label=""];
    bb281__0_11681 -> bb282__0_11681 [label="return"];
    bb281__0_11681 -> bb299__0_11681 [label="unwind"];
    bb282__0_11681 -> bb283__0_11681 [label="return"];
    bb282__0_11681 -> bb300__0_11681 [label="unwind"];
    bb283__0_11681 -> bb284__0_11681 [label=""];
    bb285__0_11681 -> bb286__0_11681 [label="return"];
    bb286__0_11681 -> bb293__0_11681 [label="return"];
    bb287__0_11681 -> bb293__0_11681 [label="return"];
    bb288__0_11681 -> bb293__0_11681 [label="return"];
    bb289__0_11681 -> bb293__0_11681 [label="return"];
    bb290__0_11681 -> bb293__0_11681 [label="return"];
    bb291__0_11681 -> bb293__0_11681 [label="return"];
    bb292__0_11681 -> bb293__0_11681 [label="return"];
    bb293__0_11681 -> bb294__0_11681 [label="return"];
    bb294__0_11681 -> bb295__0_11681 [label="return"];
    bb295__0_11681 -> bb298__0_11681 [label="return"];
    bb296__0_11681 -> bb297__0_11681 [label="return"];
    bb297__0_11681 -> bb298__0_11681 [label="return"];
    bb298__0_11681 -> bb299__0_11681 [label="return"];
    bb299__0_11681 -> bb300__0_11681 [label="return"];
    bb301__0_11681 -> bb286__0_11681 [label=""];
    bb302__0_11681 -> bb286__0_11681 [label=""];
    bb303__0_11681 -> bb293__0_11681 [label=""];
    bb304__0_11681 -> bb293__0_11681 [label=""];
    bb305__0_11681 -> bb293__0_11681 [label=""];
    bb306__0_11681 -> bb293__0_11681 [label=""];
    bb307__0_11681 -> bb296__0_11681 [label=""];
    bb308__0_11681 -> bb298__0_11681 [label=""];
    bb309__0_11681 -> bb299__0_11681 [label=""];
    bb310__0_11681 -> bb300__0_11681 [label=""];
    bb311__0_11681 -> bb300__0_11681 [label=""];
}
