digraph Mir_0_11739 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn instructions::user::handle_modify_order_by_user_order_id(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::user::CancelOrder&lt;ReErased&gt;&gt;, _2: u8, _3: state::order_params::ModifyOrderParams) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _4: ();<br align="left"/>let mut _5: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _6: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _7: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _8: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _9: isize;<br align="left"/>let _10: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _11: !;<br align="left"/>let mut _12: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _13: ();<br align="left"/>let _14: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let _15: anchor_lang::prelude::Clock;<br align="left"/>let mut _16: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _17: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _18: isize;<br align="left"/>let _19: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _20: !;<br align="left"/>let mut _21: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _22: anchor_lang::prelude::Clock;<br align="left"/>let _23: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let _24: state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _25: state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _26: state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _27: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let mut _28: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, instructions::optional_accounts::AccountMaps&lt;ReErased&gt;&gt;;<br align="left"/>let mut _29: std::result::Result&lt;instructions::optional_accounts::AccountMaps&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _30: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _31: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _32: std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _33: std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _34: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _35: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _36: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _37: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _38: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _39: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _40: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _41: u64;<br align="left"/>let mut _42: std::option::Option&lt;state::state::OracleGuardRails&gt;;<br align="left"/>let mut _43: state::state::OracleGuardRails;<br align="left"/>let mut _44: &amp;ReErased state::state::State;<br align="left"/>let mut _45: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _46: isize;<br align="left"/>let _47: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _48: !;<br align="left"/>let mut _49: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _50: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let _51: ();<br align="left"/>let mut _52: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _53: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _54: controller::orders::ModifyOrderId;<br align="left"/>let mut _55: u8;<br align="left"/>let mut _56: state::order_params::ModifyOrderParams;<br align="left"/>let mut _57: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _58: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _59: &amp;ReErased state::state::State;<br align="left"/>let _60: &amp;ReErased state::state::State;<br align="left"/>let mut _61: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _62: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _63: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _64: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let _65: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _66: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _67: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _68: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let mut _69: isize;<br align="left"/>let _70: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _71: !;<br align="left"/>let mut _72: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _73: ();<br align="left"/>let mut _74: ();<br align="left"/>let mut _75: &amp;ReErased mut instructions::user::CancelOrder&lt;ReErased&gt;;<br align="left"/>let mut _76: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _77: &amp;ReErased mut instructions::user::CancelOrder&lt;ReErased&gt;;<br align="left"/>let mut _78: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _79: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _80: &amp;ReErased mut instructions::user::CancelOrder&lt;ReErased&gt;;<br align="left"/>let mut _81: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _82: isize;<br align="left"/>let mut _83: isize;<br align="left"/>let mut _84: isize;<br align="left"/>let mut _85: isize;<br align="left"/>let mut _86: isize;<br align="left"/>let mut _87: isize;<br align="left"/>let mut _88: isize;<br align="left"/>let mut _89: isize;<br align="left"/>let mut _90: isize;<br align="left"/>let mut _91: isize;<br align="left"/>let mut _92: isize;<br align="left"/>let mut _93: isize;<br align="left"/>let mut _94: isize;<br align="left"/>let mut _95: isize;<br align="left"/>let mut _96: isize;<br align="left"/>let mut _97: isize;<br align="left"/>let mut _98: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _99: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _100: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug user_order_id =&gt; _2;<br align="left"/>debug modify_order_params =&gt; _3;<br align="left"/>debug residual =&gt; _10;<br align="left"/>debug val =&gt; _13;<br align="left"/>debug clock =&gt; _14;<br align="left"/>debug residual =&gt; _19;<br align="left"/>debug val =&gt; _22;<br align="left"/>debug state =&gt; _23;<br align="left"/>debug perp_market_map =&gt; _24;<br align="left"/>debug spot_market_map =&gt; _25;<br align="left"/>debug oracle_map =&gt; _26;<br align="left"/>debug residual =&gt; _47;<br align="left"/>debug val =&gt; _50;<br align="left"/>debug residual =&gt; _70;<br align="left"/>debug val =&gt; _73;<br align="left"/>>;
    bb0__0_11739 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_75 = deref_copy (_1.1: &amp;mut instructions::user::CancelOrder&lt;'_&gt;)<br/>_8 = &amp;((*_75).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_76 = deref_copy (*_8)<br/>_98 = (((_76.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_7 = &amp;(*_98)<br/></td></tr><tr><td align="left">_6 = constraints::exchange_not_paused(move _7)</td></tr></table>>];
    bb1__0_11739 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/></td></tr><tr><td align="left">_5 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _6)</td></tr></table>>];
    bb2__0_11739 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_9 = discriminant(_5)<br/></td></tr><tr><td align="left">switchInt(move _9)</td></tr></table>>];
    bb3__0_11739 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = ((_5 as Continue).0: ())<br/>_4 = _13<br/>StorageDead(_13)<br/>_82 = discriminant(_5)<br/>StorageDead(_8)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/></td></tr><tr><td align="left">_17 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb4__0_11739 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_11739 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>_10 = move ((_5 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_12)<br/>_12 = move _10<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _12)</td></tr></table>>];
    bb6__0_11739 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_10)<br/>_92 = discriminant(_5)<br/>StorageDead(_8)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_11739 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">_16 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _17)</td></tr></table>>];
    bb8__0_11739 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>_18 = discriminant(_16)<br/></td></tr><tr><td align="left">switchInt(move _18)</td></tr></table>>];
    bb9__0_11739 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_22)<br/>_22 = move ((_16 as Continue).0: anchor_lang::prelude::Clock)<br/>_15 = move _22<br/>StorageDead(_22)<br/>_14 = &amp;_15<br/>_84 = discriminant(_16)<br/>StorageDead(_16)<br/>StorageLive(_23)<br/>_77 = deref_copy (_1.1: &amp;mut instructions::user::CancelOrder&lt;'_&gt;)<br/>_23 = &amp;((*_77).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>_78 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_34 = &amp;(*_78)<br/></td></tr><tr><td align="left">_33 = core::slice::&lt;impl [anchor_lang::prelude::AccountInfo&lt;'_&gt;]&gt;::iter(move _34)</td></tr></table>>];
    bb10__0_11739 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_19)<br/>_19 = move ((_16 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_21)<br/>_21 = move _19<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _21)</td></tr></table>>];
    bb11__0_11739 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_19)<br/>_90 = discriminant(_16)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_11739 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/></td></tr><tr><td align="left">_32 = &lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as Iterator&gt;::peekable(move _33)</td></tr></table>>];
    bb13__0_11739 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>_31 = &amp;mut _32<br/>_30 = &amp;mut (*_31)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/></td></tr><tr><td align="left">_37 = BTreeSet::&lt;u16&gt;::new()</td></tr></table>>];
    bb14__0_11739 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">_36 = &amp;_37<br/>_35 = &amp;(*_36)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/></td></tr><tr><td align="left">_40 = BTreeSet::&lt;u16&gt;::new()</td></tr></table>>];
    bb15__0_11739 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">_39 = &amp;_40<br/>_38 = &amp;(*_39)<br/>StorageLive(_41)<br/>_41 = ((*_14).0: u64)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>_79 = deref_copy (*_23)<br/>_99 = (((_79.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_45 = &amp;(*_99)<br/></td></tr><tr><td align="left">_44 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _45)</td></tr></table>>];
    bb16__0_11739 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>_43 = ((*_44).7: state::state::OracleGuardRails)<br/>_42 = Option::&lt;state::state::OracleGuardRails&gt;::Some(move _43)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">_29 = load_maps(move _30, move _35, move _38, move _41, move _42)</td></tr></table>>];
    bb17__0_11739 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_41)<br/>StorageDead(_38)<br/>StorageDead(_35)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">_28 = &lt;std::result::Result&lt;AccountMaps&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _29)</td></tr></table>>];
    bb18__0_11739 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>_46 = discriminant(_28)<br/></td></tr><tr><td align="left">switchInt(move _46)</td></tr></table>>];
    bb19__0_11739 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_50)<br/>_50 = move ((_28 as Continue).0: instructions::optional_accounts::AccountMaps&lt;'_&gt;)<br/>_27 = move _50<br/>StorageDead(_50)<br/>StorageLive(_24)<br/>_24 = move (_27.0: state::perp_market_map::PerpMarketMap&lt;'_&gt;)<br/>StorageLive(_25)<br/>_25 = move (_27.1: state::spot_market_map::SpotMarketMap&lt;'_&gt;)<br/>StorageLive(_26)<br/>_26 = move (_27.2: state::oracle_map::OracleMap&lt;'_&gt;)<br/>_88 = discriminant(_28)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">drop(_40)</td></tr></table>>];
    bb20__0_11739 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>_47 = ((_28 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_49)<br/>_49 = _47<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _49)</td></tr></table>>];
    bb21__0_11739 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_47)<br/>_86 = discriminant(_28)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">drop(_40)</td></tr></table>>];
    bb22__0_11739 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">drop(_37)</td></tr></table>>];
    bb23__0_11739 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_36)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/>StorageDead(_28)<br/>StorageDead(_27)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>_55 = _2<br/>_54 = ModifyOrderId::UserOrderId(move _55)<br/>StorageDead(_55)<br/>StorageLive(_56)<br/>_56 = move _3<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>_80 = deref_copy (_1.1: &amp;mut instructions::user::CancelOrder&lt;'_&gt;)<br/>_58 = &amp;((*_80).1: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/>_57 = &amp;(*_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>_81 = deref_copy (*_23)<br/>_100 = (((_81.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_61 = &amp;(*_100)<br/></td></tr><tr><td align="left">_60 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _61)</td></tr></table>>];
    bb24__0_11739 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">_59 = &amp;(*_60)<br/>StorageDead(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>_63 = &amp;_24<br/>_62 = &amp;(*_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>_65 = &amp;_25<br/>_64 = &amp;(*_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>_67 = &amp;mut _26<br/>_66 = &amp;mut (*_67)<br/>StorageLive(_68)<br/>_68 = &amp;(*_14)<br/></td></tr><tr><td align="left">_53 = controller::orders::modify_order(move _54, move _56, move _57, move _59, move _62, move _64, move _66, move _68)</td></tr></table>>];
    bb25__0_11739 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>StorageDead(_66)<br/>StorageDead(_64)<br/>StorageDead(_62)<br/>StorageDead(_59)<br/>StorageDead(_57)<br/>StorageDead(_56)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">_52 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _53)</td></tr></table>>];
    bb26__0_11739 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>_69 = discriminant(_52)<br/></td></tr><tr><td align="left">switchInt(move _69)</td></tr></table>>];
    bb27__0_11739 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_73)<br/>_73 = ((_52 as Continue).0: ())<br/>_51 = _73<br/>StorageDead(_73)<br/>StorageDead(_67)<br/>StorageDead(_65)<br/>StorageDead(_63)<br/>StorageDead(_60)<br/>StorageDead(_58)<br/>StorageDead(_52)<br/>StorageDead(_51)<br/>StorageLive(_74)<br/>_74 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _74)<br/>StorageDead(_74)<br/></td></tr><tr><td align="left">drop(_26)</td></tr></table>>];
    bb28__0_11739 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_70)<br/>_70 = ((_52 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_72)<br/>_72 = _70<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _72)</td></tr></table>>];
    bb29__0_11739 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_70)<br/>StorageDead(_67)<br/>StorageDead(_65)<br/>StorageDead(_63)<br/>StorageDead(_60)<br/>StorageDead(_58)<br/>StorageDead(_52)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">drop(_26)</td></tr></table>>];
    bb30__0_11739 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/></td></tr><tr><td align="left">drop(_25)</td></tr></table>>];
    bb31__0_11739 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/></td></tr><tr><td align="left">drop(_24)</td></tr></table>>];
    bb32__0_11739 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_23)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_11739 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/></td></tr><tr><td align="left">drop(_25)</td></tr></table>>];
    bb34__0_11739 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/></td></tr><tr><td align="left">drop(_24)</td></tr></table>>];
    bb35__0_11739 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_11739 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">drop(_37)</td></tr></table>>];
    bb37__0_11739 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_36)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/>StorageDead(_28)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_11739 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_11739 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_11739 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left">return</td></tr></table>>];
    bb41__0_11739 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">41 (cleanup)</td></tr><tr><td align="left">drop(_37)</td></tr></table>>];
    bb42__0_11739 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">42 (cleanup)</td></tr><tr><td align="left">drop(_26)</td></tr></table>>];
    bb43__0_11739 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">43 (cleanup)</td></tr><tr><td align="left">drop(_25)</td></tr></table>>];
    bb44__0_11739 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">44 (cleanup)</td></tr><tr><td align="left">drop(_24)</td></tr></table>>];
    bb45__0_11739 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">45 (cleanup)</td></tr><tr><td align="left">drop(_40)</td></tr></table>>];
    bb46__0_11739 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">46 (cleanup)</td></tr><tr><td align="left">drop(_37)</td></tr></table>>];
    bb47__0_11739 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">47 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb48__0_11739 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">48 (cleanup)</td></tr><tr><td align="left" balign="left">_95 = discriminant(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_11739 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">49 (cleanup)</td></tr><tr><td align="left" balign="left">_96 = discriminant(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_11739 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">50 (cleanup)</td></tr><tr><td align="left" balign="left">_97 = discriminant(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_11739 -> bb1__0_11739 [label="return"];
    bb1__0_11739 -> bb2__0_11739 [label="return"];
    bb1__0_11739 -> bb47__0_11739 [label="unwind"];
    bb2__0_11739 -> bb3__0_11739 [label="0"];
    bb2__0_11739 -> bb5__0_11739 [label="1"];
    bb2__0_11739 -> bb4__0_11739 [label="otherwise"];
    bb3__0_11739 -> bb7__0_11739 [label="return"];
    bb5__0_11739 -> bb6__0_11739 [label="return"];
    bb5__0_11739 -> bb50__0_11739 [label="unwind"];
    bb6__0_11739 -> bb40__0_11739 [label=""];
    bb7__0_11739 -> bb8__0_11739 [label="return"];
    bb7__0_11739 -> bb47__0_11739 [label="unwind"];
    bb8__0_11739 -> bb9__0_11739 [label="0"];
    bb8__0_11739 -> bb10__0_11739 [label="1"];
    bb8__0_11739 -> bb4__0_11739 [label="otherwise"];
    bb9__0_11739 -> bb12__0_11739 [label="return"];
    bb10__0_11739 -> bb11__0_11739 [label="return"];
    bb10__0_11739 -> bb49__0_11739 [label="unwind"];
    bb11__0_11739 -> bb39__0_11739 [label=""];
    bb12__0_11739 -> bb13__0_11739 [label="return"];
    bb13__0_11739 -> bb14__0_11739 [label="return"];
    bb14__0_11739 -> bb15__0_11739 [label="return"];
    bb14__0_11739 -> bb46__0_11739 [label="unwind"];
    bb15__0_11739 -> bb16__0_11739 [label="return"];
    bb15__0_11739 -> bb45__0_11739 [label="unwind"];
    bb16__0_11739 -> bb17__0_11739 [label="return"];
    bb16__0_11739 -> bb45__0_11739 [label="unwind"];
    bb17__0_11739 -> bb18__0_11739 [label="return"];
    bb17__0_11739 -> bb45__0_11739 [label="unwind"];
    bb18__0_11739 -> bb19__0_11739 [label="0"];
    bb18__0_11739 -> bb20__0_11739 [label="1"];
    bb18__0_11739 -> bb4__0_11739 [label="otherwise"];
    bb19__0_11739 -> bb22__0_11739 [label="return"];
    bb19__0_11739 -> bb41__0_11739 [label="unwind"];
    bb20__0_11739 -> bb21__0_11739 [label="return"];
    bb20__0_11739 -> bb48__0_11739 [label="unwind"];
    bb21__0_11739 -> bb36__0_11739 [label="return"];
    bb21__0_11739 -> bb46__0_11739 [label="unwind"];
    bb22__0_11739 -> bb23__0_11739 [label="return"];
    bb22__0_11739 -> bb42__0_11739 [label="unwind"];
    bb23__0_11739 -> bb24__0_11739 [label="return"];
    bb23__0_11739 -> bb42__0_11739 [label="unwind"];
    bb24__0_11739 -> bb25__0_11739 [label="return"];
    bb24__0_11739 -> bb42__0_11739 [label="unwind"];
    bb25__0_11739 -> bb26__0_11739 [label="return"];
    bb25__0_11739 -> bb42__0_11739 [label="unwind"];
    bb26__0_11739 -> bb27__0_11739 [label="0"];
    bb26__0_11739 -> bb28__0_11739 [label="1"];
    bb26__0_11739 -> bb4__0_11739 [label="otherwise"];
    bb27__0_11739 -> bb30__0_11739 [label="return"];
    bb27__0_11739 -> bb43__0_11739 [label="unwind"];
    bb28__0_11739 -> bb29__0_11739 [label="return"];
    bb28__0_11739 -> bb42__0_11739 [label="unwind"];
    bb29__0_11739 -> bb33__0_11739 [label="return"];
    bb29__0_11739 -> bb43__0_11739 [label="unwind"];
    bb30__0_11739 -> bb31__0_11739 [label="return"];
    bb30__0_11739 -> bb44__0_11739 [label="unwind"];
    bb31__0_11739 -> bb32__0_11739 [label="return"];
    bb31__0_11739 -> bb47__0_11739 [label="unwind"];
    bb32__0_11739 -> bb40__0_11739 [label=""];
    bb33__0_11739 -> bb34__0_11739 [label="return"];
    bb33__0_11739 -> bb44__0_11739 [label="unwind"];
    bb34__0_11739 -> bb35__0_11739 [label="return"];
    bb34__0_11739 -> bb47__0_11739 [label="unwind"];
    bb35__0_11739 -> bb38__0_11739 [label=""];
    bb36__0_11739 -> bb37__0_11739 [label="return"];
    bb36__0_11739 -> bb47__0_11739 [label="unwind"];
    bb37__0_11739 -> bb38__0_11739 [label=""];
    bb38__0_11739 -> bb39__0_11739 [label=""];
    bb39__0_11739 -> bb40__0_11739 [label=""];
    bb41__0_11739 -> bb42__0_11739 [label="return"];
    bb42__0_11739 -> bb43__0_11739 [label="return"];
    bb43__0_11739 -> bb44__0_11739 [label="return"];
    bb44__0_11739 -> bb47__0_11739 [label="return"];
    bb45__0_11739 -> bb46__0_11739 [label="return"];
    bb46__0_11739 -> bb47__0_11739 [label="return"];
    bb48__0_11739 -> bb45__0_11739 [label=""];
    bb49__0_11739 -> bb47__0_11739 [label=""];
    bb50__0_11739 -> bb47__0_11739 [label=""];
}
