digraph Mir_0_1379 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn keeper::handle_force_delete_user(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::keeper::ForceDeleteUser&lt;ReErased&gt;&gt;) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _2: ();<br align="left"/>let _3: ();<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _5: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _6: bool;<br align="left"/>let mut _7: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _8: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _9: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _10: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _11: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _12: ();<br align="left"/>let _13: error::ErrorCode;<br align="left"/>let _14: ();<br align="left"/>let mut _15: &amp;ReErased str;<br align="left"/>let _16: &amp;ReErased str;<br align="left"/>let mut _17: &amp;ReErased std::string::String;<br align="left"/>let _18: &amp;ReErased std::string::String;<br align="left"/>let _19: std::string::String;<br align="left"/>let _20: std::string::String;<br align="left"/>let mut _21: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _22: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _23: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _24: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _25: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _26: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _27: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _28: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _29: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _30: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _31: &amp;ReErased error::ErrorCode;<br align="left"/>let _32: &amp;ReErased error::ErrorCode;<br align="left"/>let _33: ();<br align="left"/>let mut _34: &amp;ReErased str;<br align="left"/>let _35: &amp;ReErased str;<br align="left"/>let mut _36: error::ErrorCode;<br align="left"/>let mut _37: isize;<br align="left"/>let _38: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _39: !;<br align="left"/>let mut _40: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _41: ();<br align="left"/>let _42: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _43: [u8; 32_usize];<br align="left"/>let _44: ();<br align="left"/>let mut _45: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _46: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _47: bool;<br align="left"/>let mut _48: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _49: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _50: ();<br align="left"/>let _51: error::ErrorCode;<br align="left"/>let _52: ();<br align="left"/>let mut _53: &amp;ReErased str;<br align="left"/>let _54: &amp;ReErased str;<br align="left"/>let mut _55: &amp;ReErased std::string::String;<br align="left"/>let _56: &amp;ReErased std::string::String;<br align="left"/>let _57: std::string::String;<br align="left"/>let _58: std::string::String;<br align="left"/>let mut _59: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _60: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _61: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _62: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _63: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _64: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _65: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _66: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _67: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _68: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _69: &amp;ReErased error::ErrorCode;<br align="left"/>let _70: &amp;ReErased error::ErrorCode;<br align="left"/>let _71: ();<br align="left"/>let mut _72: &amp;ReErased str;<br align="left"/>let _73: &amp;ReErased str;<br align="left"/>let mut _74: error::ErrorCode;<br align="left"/>let mut _75: isize;<br align="left"/>let _76: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _77: !;<br align="left"/>let mut _78: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _79: ();<br align="left"/>let _80: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let _81: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _82: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _83: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let _84: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _85: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _86: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _87: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _88: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _89: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _90: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _91: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _92: Closure(DefId(0:9339 ~ drift[d311]::instructions::keeper::handle_force_delete_user::{closure#8}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _93: isize;<br align="left"/>let _94: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _95: !;<br align="left"/>let mut _96: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _97: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _98: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _99: std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _100: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;;<br align="left"/>let mut _101: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _102: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _103: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _104: Closure(DefId(0:9340 ~ drift[d311]::instructions::keeper::handle_force_delete_user::{closure#9}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _105: isize;<br align="left"/>let _106: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _107: !;<br align="left"/>let mut _108: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _109: std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let _110: u64;<br align="left"/>let mut _111: anchor_lang::prelude::Clock;<br align="left"/>let mut _112: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _113: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _114: isize;<br align="left"/>let _115: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _116: !;<br align="left"/>let mut _117: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _118: anchor_lang::prelude::Clock;<br align="left"/>let _119: i64;<br align="left"/>let mut _120: anchor_lang::prelude::Clock;<br align="left"/>let mut _121: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _122: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _123: isize;<br align="left"/>let _124: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _125: !;<br align="left"/>let mut _126: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _127: anchor_lang::prelude::Clock;<br align="left"/>let _128: state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _129: state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _130: state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _131: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let mut _132: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, instructions::optional_accounts::AccountMaps&lt;ReErased&gt;&gt;;<br align="left"/>let mut _133: std::result::Result&lt;instructions::optional_accounts::AccountMaps&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _134: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _135: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _136: std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _137: std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _138: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _139: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _140: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _141: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _142: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _143: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _144: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _145: &amp;ReErased [state::user::SpotPosition];<br align="left"/>let mut _146: &amp;ReErased [state::user::SpotPosition; 8_usize];<br align="left"/>let _147: &amp;ReErased [state::user::SpotPosition; 8_usize];<br align="left"/>let _148: &amp;ReErased state::user::User;<br align="left"/>let mut _149: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _150: u64;<br align="left"/>let mut _151: std::option::Option&lt;state::state::OracleGuardRails&gt;;<br align="left"/>let mut _152: state::state::OracleGuardRails;<br align="left"/>let mut _153: &amp;ReErased state::state::State;<br align="left"/>let mut _154: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _155: isize;<br align="left"/>let _156: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _157: !;<br align="left"/>let mut _158: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _159: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let _160: i128;<br align="left"/>let mut _161: (i128, bool);<br align="left"/>let mut _162: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (i128, bool)&gt;;<br align="left"/>let mut _163: std::result::Result&lt;(i128, bool), error::ErrorCode&gt;;<br align="left"/>let mut _164: &amp;ReErased state::user::User;<br align="left"/>let _165: &amp;ReErased state::user::User;<br align="left"/>let mut _166: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _167: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _168: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _169: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let _170: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _171: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _172: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _173: isize;<br align="left"/>let _174: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _175: !;<br align="left"/>let mut _176: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _177: (i128, bool);<br align="left"/>let _178: i128;<br align="left"/>let mut _179: bool;<br align="left"/>let mut _180: bool;<br align="left"/>let mut _181: bool;<br align="left"/>let mut _182: bool;<br align="left"/>let _183: ();<br align="left"/>let mut _184: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _185: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _186: bool;<br align="left"/>let mut _187: i128;<br align="left"/>let mut _188: i128;<br align="left"/>let mut _189: ();<br align="left"/>let _190: error::ErrorCode;<br align="left"/>let _191: ();<br align="left"/>let mut _192: &amp;ReErased str;<br align="left"/>let _193: &amp;ReErased str;<br align="left"/>let mut _194: &amp;ReErased std::string::String;<br align="left"/>let _195: &amp;ReErased std::string::String;<br align="left"/>let _196: std::string::String;<br align="left"/>let _197: std::string::String;<br align="left"/>let mut _198: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _199: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _200: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _201: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _202: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _203: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _204: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _205: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _206: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _207: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _208: &amp;ReErased error::ErrorCode;<br align="left"/>let _209: &amp;ReErased error::ErrorCode;<br align="left"/>let _210: ();<br align="left"/>let mut _211: &amp;ReErased str;<br align="left"/>let _212: &amp;ReErased str;<br align="left"/>let mut _213: &amp;ReErased std::string::String;<br align="left"/>let _214: &amp;ReErased std::string::String;<br align="left"/>let _215: std::string::String;<br align="left"/>let _216: std::string::String;<br align="left"/>let mut _217: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _218: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _219: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _220: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _221: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _222: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _223: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _224: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _225: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _226: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _227: &amp;ReErased i128;<br align="left"/>let _228: &amp;ReErased i128;<br align="left"/>let mut _229: error::ErrorCode;<br align="left"/>let mut _230: isize;<br align="left"/>let _231: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _232: !;<br align="left"/>let mut _233: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _234: ();<br align="left"/>let _235: ();<br align="left"/>let _236: u64;<br align="left"/>let mut _237: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _238: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _239: u64;<br align="left"/>let mut _240: u64;<br align="left"/>let mut _241: &amp;ReErased state::user::User;<br align="left"/>let mut _242: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _243: isize;<br align="left"/>let _244: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _245: !;<br align="left"/>let mut _246: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _247: u64;<br align="left"/>let _248: ();<br align="left"/>let mut _249: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _250: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _251: bool;<br align="left"/>let mut _252: u64;<br align="left"/>let mut _253: ();<br align="left"/>let _254: error::ErrorCode;<br align="left"/>let _255: ();<br align="left"/>let mut _256: &amp;ReErased str;<br align="left"/>let _257: &amp;ReErased str;<br align="left"/>let mut _258: &amp;ReErased std::string::String;<br align="left"/>let _259: &amp;ReErased std::string::String;<br align="left"/>let _260: std::string::String;<br align="left"/>let _261: std::string::String;<br align="left"/>let mut _262: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _263: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _264: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _265: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _266: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _267: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _268: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _269: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _270: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _271: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _272: &amp;ReErased error::ErrorCode;<br align="left"/>let _273: &amp;ReErased error::ErrorCode;<br align="left"/>let _274: ();<br align="left"/>let mut _275: &amp;ReErased str;<br align="left"/>let _276: &amp;ReErased str;<br align="left"/>let mut _277: &amp;ReErased std::string::String;<br align="left"/>let _278: &amp;ReErased std::string::String;<br align="left"/>let _279: std::string::String;<br align="left"/>let _280: std::string::String;<br align="left"/>let mut _281: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _282: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _283: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _284: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _285: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _286: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _287: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _288: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _289: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _290: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _291: &amp;ReErased u64;<br align="left"/>let _292: &amp;ReErased u64;<br align="left"/>let mut _293: error::ErrorCode;<br align="left"/>let mut _294: isize;<br align="left"/>let _295: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _296: !;<br align="left"/>let mut _297: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _298: ();<br align="left"/>let _299: std::vec::Vec&lt;u32, std::alloc::Global&gt;;<br align="left"/>let mut _300: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::vec::Vec&lt;u32, std::alloc::Global&gt;&gt;;<br align="left"/>let mut _301: std::result::Result&lt;std::vec::Vec&lt;u32, std::alloc::Global&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _302: &amp;ReErased mut state::user::User;<br align="left"/>let mut _303: &amp;ReErased mut state::user::User;<br align="left"/>let mut _304: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _305: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _306: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _307: std::option::Option&lt;&amp;ReErased anchor_lang::prelude::Pubkey&gt;;<br align="left"/>let mut _308: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _309: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _310: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _311: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _312: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let _313: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _314: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _315: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _316: i64;<br align="left"/>let mut _317: u64;<br align="left"/>let mut _318: state::events::OrderActionExplanation;<br align="left"/>let mut _319: std::option::Option&lt;state::user::MarketType&gt;;<br align="left"/>let mut _320: std::option::Option&lt;u16&gt;;<br align="left"/>let mut _321: std::option::Option&lt;controller::position::PositionDirection&gt;;<br align="left"/>let mut _322: isize;<br align="left"/>let _323: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _324: !;<br align="left"/>let mut _325: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _326: std::vec::Vec&lt;u32, std::alloc::Global&gt;;<br align="left"/>let _327: ();<br align="left"/>let mut _328: std::slice::IterMut&lt;ReErased, state::user::SpotPosition&gt;;<br align="left"/>let mut _329: std::slice::IterMut&lt;ReErased, state::user::SpotPosition&gt;;<br align="left"/>let mut _330: &amp;ReErased mut [state::user::SpotPosition];<br align="left"/>let mut _331: &amp;ReErased mut [state::user::SpotPosition; 8_usize];<br align="left"/>let mut _332: &amp;ReErased mut state::user::User;<br align="left"/>let mut _333: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _334: std::slice::IterMut&lt;ReErased, state::user::SpotPosition&gt;;<br align="left"/>let mut _335: ();<br align="left"/>let _336: ();<br align="left"/>let mut _337: std::option::Option&lt;&amp;ReErased mut state::user::SpotPosition&gt;;<br align="left"/>let mut _338: &amp;ReErased mut std::slice::IterMut&lt;ReErased, state::user::SpotPosition&gt;;<br align="left"/>let mut _339: &amp;ReErased mut std::slice::IterMut&lt;ReErased, state::user::SpotPosition&gt;;<br align="left"/>let mut _340: isize;<br align="left"/>let mut _341: !;<br align="left"/>let _342: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let _343: ();<br align="left"/>let mut _344: bool;<br align="left"/>let mut _345: &amp;ReErased state::user::SpotPosition;<br align="left"/>let mut _346: !;<br align="left"/>let _347: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _348: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _349: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _350: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _351: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _352: &amp;ReErased u16;<br align="left"/>let _353: &amp;ReErased u16;<br align="left"/>let mut _354: isize;<br align="left"/>let _355: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _356: !;<br align="left"/>let mut _357: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _358: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _359: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _360: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _361: std::result::Result&lt;&amp;ReErased state::oracle::OraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _362: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _363: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _364: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _365: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _366: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _367: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _368: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _369: isize;<br align="left"/>let _370: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _371: !;<br align="left"/>let mut _372: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _373: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _374: ();<br align="left"/>let mut _375: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _376: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _377: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _378: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _379: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _380: std::option::Option&lt;&amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _381: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _382: i64;<br align="left"/>let mut _383: isize;<br align="left"/>let _384: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _385: !;<br align="left"/>let mut _386: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _387: ();<br align="left"/>let _388: u128;<br align="left"/>let mut _389: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _390: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _391: &amp;ReErased state::user::SpotPosition;<br align="left"/>let mut _392: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _393: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _394: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _395: isize;<br align="left"/>let _396: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _397: !;<br align="left"/>let mut _398: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _399: u128;<br align="left"/>let _400: state::spot_market::SpotBalanceType;<br align="left"/>let _401: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _402: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _403: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _404: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _405: &amp;ReErased anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let _406: anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let mut _407: std::result::Result&lt;anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _408: std::option::Option&lt;std::result::Result&lt;anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;, anchor_lang::error::Error&gt;&gt;;<br align="left"/>let mut _409: std::option::Option&lt;&amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _410: &amp;ReErased mut std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _411: std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _412: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _413: Closure(DefId(0:1382 ~ drift[d311]::instructions::keeper::handle_force_delete_user::{closure#0}), [ReErased, ReErased, i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;,)) -&gt; bool, [Region(BrAnon)]), (&amp;ReErased anchor_lang::prelude::Pubkey,)]);<br align="left"/>let mut _414: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _415: Closure(DefId(0:1383 ~ drift[d311]::instructions::keeper::handle_force_delete_user::{closure#1}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((&amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;,)) -&gt; std::result::Result&lt;anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;, anchor_lang::error::Error&gt;, []), ()]);<br align="left"/>let _416: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _417: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _418: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _419: std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let mut _420: std::option::Option&lt;&amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _421: &amp;ReErased mut std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _422: std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _423: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _424: Closure(DefId(0:1384 ~ drift[d311]::instructions::keeper::handle_force_delete_user::{closure#2}), [ReErased, ReErased, i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;,)) -&gt; bool, [Region(BrAnon)]), (&amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey,)]);<br align="left"/>let mut _425: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _426: Closure(DefId(0:1385 ~ drift[d311]::instructions::keeper::handle_force_delete_user::{closure#3}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((&amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;,)) -&gt; anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;, []), ()]);<br align="left"/>let _427: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _428: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _429: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _430: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _431: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _432: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _433: anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _434: std::result::Result&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _435: std::option::Option&lt;std::result::Result&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, anchor_lang::error::Error&gt;&gt;;<br align="left"/>let mut _436: std::option::Option&lt;&amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _437: &amp;ReErased mut std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _438: std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _439: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _440: Closure(DefId(0:1386 ~ drift[d311]::instructions::keeper::handle_force_delete_user::{closure#4}), [ReErased, ReErased, i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;,)) -&gt; bool, [Region(BrAnon)]), (&amp;ReErased anchor_lang::prelude::Pubkey,)]);<br align="left"/>let mut _441: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _442: Closure(DefId(0:1387 ~ drift[d311]::instructions::keeper::handle_force_delete_user::{closure#5}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((&amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;,)) -&gt; std::result::Result&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, anchor_lang::error::Error&gt;, []), ()]);<br align="left"/>let _443: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _444: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _445: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _446: anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _447: std::result::Result&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _448: std::option::Option&lt;std::result::Result&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, anchor_lang::error::Error&gt;&gt;;<br align="left"/>let mut _449: std::option::Option&lt;&amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _450: &amp;ReErased mut std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _451: std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _452: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _453: Closure(DefId(0:1388 ~ drift[d311]::instructions::keeper::handle_force_delete_user::{closure#6}), [ReErased, ReErased, i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;,)) -&gt; bool, [Region(BrAnon)]), (&amp;ReErased anchor_lang::prelude::Pubkey,)]);<br align="left"/>let mut _454: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _455: Closure(DefId(0:1389 ~ drift[d311]::instructions::keeper::handle_force_delete_user::{closure#7}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((&amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;,)) -&gt; std::result::Result&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, anchor_lang::error::Error&gt;, []), ()]);<br align="left"/>let _456: ();<br align="left"/>let mut _457: bool;<br align="left"/>let mut _458: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _459: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _460: state::spot_market::SpotBalanceType;<br align="left"/>let _461: ();<br align="left"/>let mut _462: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _463: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _464: u128;<br align="left"/>let mut _465: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _466: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _467: state::spot_market::SpotBalanceType;<br align="left"/>let mut _468: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _469: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _470: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _471: &amp;ReErased mut dyn [Binder(Trait(state::spot_market::SpotBalance), [])] + ReErased;<br align="left"/>let mut _472: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let mut _473: isize;<br align="left"/>let _474: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _475: !;<br align="left"/>let mut _476: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _477: ();<br align="left"/>let _478: ();<br align="left"/>let mut _479: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _480: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _481: &amp;ReErased anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let _482: &amp;ReErased &amp;ReErased anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let mut _483: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let _484: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _485: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let _486: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _487: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _488: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _489: u8;<br align="left"/>let mut _490: &amp;ReErased state::state::State;<br align="left"/>let mut _491: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _492: u64;<br align="left"/>let mut _493: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _494: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _495: u128;<br align="left"/>let mut _496: isize;<br align="left"/>let _497: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _498: !;<br align="left"/>let mut _499: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _500: u64;<br align="left"/>let mut _501: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let _502: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let mut _503: std::option::Option&lt;&amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;&gt;;<br align="left"/>let mut _504: isize;<br align="left"/>let _505: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _506: !;<br align="left"/>let mut _507: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _508: ();<br align="left"/>let _509: ();<br align="left"/>let mut _510: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _511: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _512: u128;<br align="left"/>let mut _513: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _514: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _515: state::spot_market::SpotBalanceType;<br align="left"/>let mut _516: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _517: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _518: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _519: &amp;ReErased mut dyn [Binder(Trait(state::spot_market::SpotBalance), [])] + ReErased;<br align="left"/>let mut _520: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let mut _521: isize;<br align="left"/>let _522: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _523: !;<br align="left"/>let mut _524: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _525: ();<br align="left"/>let _526: ();<br align="left"/>let mut _527: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _528: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _529: &amp;ReErased anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let mut _530: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let _531: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _532: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let _533: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _534: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _535: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _536: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _537: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _538: u64;<br align="left"/>let mut _539: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _540: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _541: u128;<br align="left"/>let mut _542: isize;<br align="left"/>let _543: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _544: !;<br align="left"/>let mut _545: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _546: u64;<br align="left"/>let mut _547: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let _548: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let mut _549: std::option::Option&lt;&amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;&gt;;<br align="left"/>let mut _550: isize;<br align="left"/>let _551: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _552: !;<br align="left"/>let mut _553: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _554: ();<br align="left"/>let _555: ();<br align="left"/>let mut _556: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _557: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _558: &amp;ReErased mut anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _559: isize;<br align="left"/>let _560: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _561: !;<br align="left"/>let mut _562: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _563: ();<br align="left"/>let _564: i64;<br align="left"/>let mut _565: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _566: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _567: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _568: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _569: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _570: u64;<br align="left"/>let mut _571: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _572: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _573: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _574: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _575: isize;<br align="left"/>let _576: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _577: !;<br align="left"/>let mut _578: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _579: i64;<br align="left"/>let _580: ();<br align="left"/>let mut _581: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _582: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _583: &amp;ReErased state::user::User;<br align="left"/>let _584: &amp;ReErased state::user::User;<br align="left"/>let mut _585: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _586: &amp;ReErased state::user::UserStats;<br align="left"/>let _587: &amp;ReErased state::user::UserStats;<br align="left"/>let mut _588: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _589: &amp;ReErased state::state::State;<br align="left"/>let _590: &amp;ReErased state::state::State;<br align="left"/>let mut _591: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _592: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _593: i64;<br align="left"/>let mut _594: anchor_lang::prelude::Clock;<br align="left"/>let mut _595: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _596: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _597: isize;<br align="left"/>let _598: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _599: !;<br align="left"/>let mut _600: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _601: anchor_lang::prelude::Clock;<br align="left"/>let mut _602: isize;<br align="left"/>let _603: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _604: !;<br align="left"/>let mut _605: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _606: ();<br align="left"/>let _607: ();<br align="left"/>let mut _608: u16;<br align="left"/>let mut _609: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u16&gt;;<br align="left"/>let mut _610: std::result::Result&lt;u16, error::ErrorCode&gt;;<br align="left"/>let mut _611: std::option::Option&lt;u16&gt;;<br align="left"/>let mut _612: u16;<br align="left"/>let mut _613: &amp;ReErased state::user::UserStats;<br align="left"/>let mut _614: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _615: Closure(DefId(0:9341 ~ drift[d311]::instructions::keeper::handle_force_delete_user::{closure#10}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn(()) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _616: isize;<br align="left"/>let _617: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _618: !;<br align="left"/>let mut _619: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _620: u16;<br align="left"/>let mut _621: &amp;ReErased mut state::user::UserStats;<br align="left"/>let mut _622: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let _623: &amp;ReErased mut std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let _624: ();<br align="left"/>let mut _625: u64;<br align="left"/>let mut _626: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _627: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _628: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _629: u64;<br align="left"/>let mut _630: &amp;ReErased state::state::State;<br align="left"/>let mut _631: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _632: Closure(DefId(0:9342 ~ drift[d311]::instructions::keeper::handle_force_delete_user::{closure#11}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn(()) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _633: isize;<br align="left"/>let _634: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _635: !;<br align="left"/>let mut _636: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _637: u64;<br align="left"/>let mut _638: &amp;ReErased mut state::state::State;<br align="left"/>let mut _639: &amp;ReErased mut anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _640: ();<br align="left"/>let _641: ();<br align="left"/>let mut _642: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let mut _643: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let _644: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let _645: [&amp;ReErased [u8]; 1_usize];<br align="left"/>let mut _646: &amp;ReErased [u8];<br align="left"/>let _647: &amp;ReErased [u8];<br align="left"/>let mut _648: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _649: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _650: std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _651: &amp;ReErased state::events::DeleteUserRecord;<br align="left"/>let _652: &amp;ReErased state::events::DeleteUserRecord;<br align="left"/>let _653: state::events::DeleteUserRecord;<br align="left"/>let mut _654: i64;<br align="left"/>let mut _655: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _656: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _657: u16;<br align="left"/>let mut _658: &amp;ReErased state::user::User;<br align="left"/>let mut _659: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _660: std::option::Option&lt;anchor_lang::prelude::Pubkey&gt;;<br align="left"/>let mut _661: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _662: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _663: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _664: ();<br align="left"/>let mut _665: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _666: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _667: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _668: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _669: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _670: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _671: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _672: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _673: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _674: &amp;ReErased mut instructions::keeper::ForceDeleteUser&lt;ReErased&gt;;<br align="left"/>let mut _675: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _676: &amp;ReErased mut instructions::keeper::ForceDeleteUser&lt;ReErased&gt;;<br align="left"/>let mut _677: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _678: &amp;ReErased mut instructions::keeper::ForceDeleteUser&lt;ReErased&gt;;<br align="left"/>let mut _679: &amp;ReErased mut instructions::keeper::ForceDeleteUser&lt;ReErased&gt;;<br align="left"/>let mut _680: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _681: &amp;ReErased mut instructions::keeper::ForceDeleteUser&lt;ReErased&gt;;<br align="left"/>let mut _682: &amp;ReErased mut instructions::keeper::ForceDeleteUser&lt;ReErased&gt;;<br align="left"/>let mut _683: &amp;ReErased mut instructions::keeper::ForceDeleteUser&lt;ReErased&gt;;<br align="left"/>let mut _684: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _685: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _686: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _687: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _688: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _689: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _690: &amp;ReErased anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let mut _691: &amp;ReErased mut instructions::keeper::ForceDeleteUser&lt;ReErased&gt;;<br align="left"/>let mut _692: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _693: &amp;ReErased mut instructions::keeper::ForceDeleteUser&lt;ReErased&gt;;<br align="left"/>let mut _694: &amp;ReErased mut instructions::keeper::ForceDeleteUser&lt;ReErased&gt;;<br align="left"/>let mut _695: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _696: &amp;ReErased mut instructions::keeper::ForceDeleteUser&lt;ReErased&gt;;<br align="left"/>let mut _697: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _698: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _699: &amp;ReErased mut instructions::keeper::ForceDeleteUser&lt;ReErased&gt;;<br align="left"/>let mut _700: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _701: &amp;ReErased mut instructions::keeper::ForceDeleteUser&lt;ReErased&gt;;<br align="left"/>let mut _702: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _703: bool;<br align="left"/>let mut _704: bool;<br align="left"/>let mut _705: bool;<br align="left"/>let mut _706: isize;<br align="left"/>let mut _707: isize;<br align="left"/>let mut _708: isize;<br align="left"/>let mut _709: isize;<br align="left"/>let mut _710: isize;<br align="left"/>let mut _711: isize;<br align="left"/>let mut _712: isize;<br align="left"/>let mut _713: isize;<br align="left"/>let mut _714: isize;<br align="left"/>let mut _715: isize;<br align="left"/>let mut _716: isize;<br align="left"/>let mut _717: isize;<br align="left"/>let mut _718: isize;<br align="left"/>let mut _719: isize;<br align="left"/>let mut _720: isize;<br align="left"/>let mut _721: isize;<br align="left"/>let mut _722: isize;<br align="left"/>let mut _723: isize;<br align="left"/>let mut _724: isize;<br align="left"/>let mut _725: isize;<br align="left"/>let mut _726: isize;<br align="left"/>let mut _727: isize;<br align="left"/>let mut _728: isize;<br align="left"/>let mut _729: isize;<br align="left"/>let mut _730: isize;<br align="left"/>let mut _731: isize;<br align="left"/>let mut _732: isize;<br align="left"/>let mut _733: isize;<br align="left"/>let mut _734: isize;<br align="left"/>let mut _735: isize;<br align="left"/>let mut _736: isize;<br align="left"/>let mut _737: isize;<br align="left"/>let mut _738: isize;<br align="left"/>let mut _739: isize;<br align="left"/>let mut _740: isize;<br align="left"/>let mut _741: isize;<br align="left"/>let mut _742: isize;<br align="left"/>let mut _743: isize;<br align="left"/>let mut _744: isize;<br align="left"/>let mut _745: isize;<br align="left"/>let mut _746: isize;<br align="left"/>let mut _747: isize;<br align="left"/>let mut _748: isize;<br align="left"/>let mut _749: isize;<br align="left"/>let mut _750: isize;<br align="left"/>let mut _751: isize;<br align="left"/>let mut _752: isize;<br align="left"/>let mut _753: isize;<br align="left"/>let mut _754: isize;<br align="left"/>let mut _755: isize;<br align="left"/>let mut _756: isize;<br align="left"/>let mut _757: isize;<br align="left"/>let mut _758: isize;<br align="left"/>let mut _759: isize;<br align="left"/>let mut _760: isize;<br align="left"/>let mut _761: isize;<br align="left"/>let mut _762: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _763: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _764: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _765: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _766: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug error_code =&gt; _13;<br align="left"/>debug res =&gt; _20;<br align="left"/>debug residual =&gt; _38;<br align="left"/>debug val =&gt; _41;<br align="left"/>debug pyra_program =&gt; _42;<br align="left"/>debug error_code =&gt; _51;<br align="left"/>debug res =&gt; _58;<br align="left"/>debug residual =&gt; _76;<br align="left"/>debug val =&gt; _79;<br align="left"/>debug state =&gt; _80;<br align="left"/>debug keeper_key =&gt; _81;<br align="left"/>debug user_key =&gt; _84;<br align="left"/>debug user =&gt; _86;<br align="left"/>debug residual =&gt; _94;<br align="left"/>debug val =&gt; _97;<br align="left"/>debug user_stats =&gt; _98;<br align="left"/>debug residual =&gt; _106;<br align="left"/>debug val =&gt; _109;<br align="left"/>debug slot =&gt; _110;<br align="left"/>debug residual =&gt; _115;<br align="left"/>debug val =&gt; _118;<br align="left"/>debug now =&gt; _119;<br align="left"/>debug residual =&gt; _124;<br align="left"/>debug val =&gt; _127;<br align="left"/>debug perp_market_map =&gt; _128;<br align="left"/>debug spot_market_map =&gt; _129;<br align="left"/>debug oracle_map =&gt; _130;<br align="left"/>debug residual =&gt; _156;<br align="left"/>debug val =&gt; _159;<br align="left"/>debug user_equity =&gt; _160;<br align="left"/>debug residual =&gt; _174;<br align="left"/>debug val =&gt; _177;<br align="left"/>debug max_equity =&gt; _178;<br align="left"/>debug error_code =&gt; _190;<br align="left"/>debug res =&gt; _197;<br align="left"/>debug res =&gt; _216;<br align="left"/>debug residual =&gt; _231;<br align="left"/>debug val =&gt; _234;<br align="left"/>debug slots_since_last_active =&gt; _236;<br align="left"/>debug residual =&gt; _244;<br align="left"/>debug val =&gt; _247;<br align="left"/>debug error_code =&gt; _254;<br align="left"/>debug res =&gt; _261;<br align="left"/>debug res =&gt; _280;<br align="left"/>debug residual =&gt; _295;<br align="left"/>debug val =&gt; _298;<br align="left"/>debug residual =&gt; _323;<br align="left"/>debug val =&gt; _326;<br align="left"/>debug iter =&gt; _334;<br align="left"/>debug spot_position =&gt; _342;<br align="left"/>debug spot_market =&gt; _347;<br align="left"/>debug residual =&gt; _355;<br align="left"/>debug val =&gt; _358;<br align="left"/>debug oracle_price_data =&gt; _359;<br align="left"/>debug residual =&gt; _370;<br align="left"/>debug val =&gt; _373;<br align="left"/>debug residual =&gt; _384;<br align="left"/>debug val =&gt; _387;<br align="left"/>debug token_amount =&gt; _388;<br align="left"/>debug residual =&gt; _396;<br align="left"/>debug val =&gt; _399;<br align="left"/>debug balance_type =&gt; _400;<br align="left"/>debug token_program_pubkey =&gt; _401;<br align="left"/>debug token_program =&gt; _405;<br align="left"/>debug spot_market_mint =&gt; _416;<br align="left"/>debug mint_account_info =&gt; _419;<br align="left"/>debug keeper_vault =&gt; _427;<br align="left"/>debug keeper_vault_account_info =&gt; _433;<br align="left"/>debug spot_market_vault =&gt; _443;<br align="left"/>debug spot_market_vault_account_info =&gt; _446;<br align="left"/>debug residual =&gt; _474;<br align="left"/>debug val =&gt; _477;<br align="left"/>debug residual =&gt; _497;<br align="left"/>debug val =&gt; _500;<br align="left"/>debug residual =&gt; _505;<br align="left"/>debug val =&gt; _508;<br align="left"/>debug residual =&gt; _522;<br align="left"/>debug val =&gt; _525;<br align="left"/>debug residual =&gt; _543;<br align="left"/>debug val =&gt; _546;<br align="left"/>debug residual =&gt; _551;<br align="left"/>debug val =&gt; _554;<br align="left"/>debug residual =&gt; _560;<br align="left"/>debug val =&gt; _563;<br align="left"/>debug residual =&gt; _576;<br align="left"/>debug val =&gt; _579;<br align="left"/>debug residual =&gt; _598;<br align="left"/>debug val =&gt; _601;<br align="left"/>debug residual =&gt; _603;<br align="left"/>debug val =&gt; _606;<br align="left"/>debug residual =&gt; _617;<br align="left"/>debug val =&gt; _620;<br align="left"/>debug state =&gt; _623;<br align="left"/>debug residual =&gt; _634;<br align="left"/>debug val =&gt; _637;<br align="left"/>>;
    bb0__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_705 = const false<br/>_704 = const false<br/>_703 = const false<br/>StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_674 = deref_copy (_1.1: &amp;mut instructions::keeper::ForceDeleteUser&lt;'_&gt;)<br/>_9 = &amp;((*_674).4: anchor_lang::prelude::Signer&lt;'_&gt;)<br/></td></tr><tr><td align="left">_8 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as Deref&gt;::deref(move _9)</td></tr></table>>];
    bb1__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>_675 = deref_copy ((*_8).0: &amp;anchor_lang::prelude::Pubkey)<br/>_7 = &amp;(*_675)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/></td></tr><tr><td align="left">_11 = admin_hot_wallet::id()</td></tr></table>>];
    bb2__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">_10 = &amp;_11<br/></td></tr><tr><td align="left">_6 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _7, move _10)</td></tr></table>>];
    bb3__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left">switchInt(move _6)</td></tr></table>>];
    bb4__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_10)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/>StorageLive(_12)<br/>_12 = ()<br/>_5 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _12)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb5__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_10)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/>StorageLive(_13)<br/>_13 = error::ErrorCode::DefaultError<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_673 = const _<br/>_24 = &amp;(*_673)<br/>_23 = &amp;(*_24)<br/>_22 = move _23 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_23)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>_32 = &amp;_13<br/>_31 = &amp;(*_32)<br/></td></tr><tr><td align="left">_30 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _31)</td></tr></table>>];
    bb6__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>_29 = [move _30]<br/>StorageDead(_30)<br/>_28 = &amp;_29<br/>_27 = &amp;(*_28)<br/>_26 = move _27 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">_21 = Arguments::&lt;'_&gt;::new_v1(move _22, move _26)</td></tr></table>>];
    bb7__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">_20 = format(move _21)</td></tr></table>>];
    bb8__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_32)<br/>StorageDead(_29)<br/>StorageDead(_28)<br/>StorageDead(_24)<br/>_19 = move _20<br/>StorageDead(_20)<br/>_18 = &amp;_19<br/>_17 = &amp;(*_18)<br/></td></tr><tr><td align="left">_16 = &lt;String as Deref&gt;::deref(move _17)</td></tr></table>>];
    bb9__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">_15 = &amp;(*_16)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">_14 = solana_program::log::sol_log(move _15)</td></tr></table>>];
    bb10__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/></td></tr><tr><td align="left">drop(_19)</td></tr></table>>];
    bb11__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_18)<br/>StorageDead(_16)<br/>StorageDead(_14)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>_35 = const &quot;only admin hot wallet can force delete user&quot;<br/>_34 = &amp;(*_35)<br/></td></tr><tr><td align="left">_33 = solana_program::log::sol_log(move _34)</td></tr></table>>];
    bb12__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_35)<br/>StorageDead(_33)<br/>StorageLive(_36)<br/>_36 = _13<br/>_5 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _36)<br/>StorageDead(_36)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb14__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_37 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _37)</td></tr></table>>];
    bb15__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_41)<br/>_41 = ((_4 as Continue).0: ())<br/>_3 = _41<br/>StorageDead(_41)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>_2 = const ()<br/>StorageDead(_2)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>_43 = [const 78_u8, const 213_u8, const 30_u8, const 187_u8, const 209_u8, const 231_u8, const 237_u8, const 80_u8, const 240_u8, const 91_u8, const 185_u8, const 12_u8, const 190_u8, const 244_u8, const 70_u8, const 89_u8, const 43_u8, const 216_u8, const 144_u8, const 112_u8, const 245_u8, const 81_u8, const 37_u8, const 89_u8, const 6_u8, const 162_u8, const 220_u8, const 74_u8, const 16_u8, const 187_u8, const 111_u8, const 195_u8]<br/></td></tr><tr><td align="left">_42 = anchor_lang::prelude::Pubkey::new_from_array(move _43)</td></tr></table>>];
    bb16__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb17__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_38)<br/>_38 = ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_40)<br/>_40 = _38<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _40)</td></tr></table>>];
    bb18__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageDead(_38)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>_676 = deref_copy (_1.1: &amp;mut instructions::keeper::ForceDeleteUser&lt;'_&gt;)<br/>_677 = deref_copy (((*_676).3: anchor_lang::prelude::AccountInfo&lt;'_&gt;).3: &amp;anchor_lang::prelude::Pubkey)<br/>_48 = &amp;(*_677)<br/>StorageLive(_49)<br/>_49 = &amp;_42<br/></td></tr><tr><td align="left">_47 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _48, move _49)</td></tr></table>>];
    bb20__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left">switchInt(move _47)</td></tr></table>>];
    bb21__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_48)<br/>StorageLive(_50)<br/>_50 = ()<br/>_46 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _50)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_48)<br/>StorageLive(_51)<br/>_51 = error::ErrorCode::DefaultError<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>_672 = const _<br/>_62 = &amp;(*_672)<br/>_61 = &amp;(*_62)<br/>_60 = move _61 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_61)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>_70 = &amp;_51<br/>_69 = &amp;(*_70)<br/></td></tr><tr><td align="left">_68 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _69)</td></tr></table>>];
    bb23__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>_67 = [move _68]<br/>StorageDead(_68)<br/>_66 = &amp;_67<br/>_65 = &amp;(*_66)<br/>_64 = move _65 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">_59 = Arguments::&lt;'_&gt;::new_v1(move _60, move _64)</td></tr></table>>];
    bb24__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">_58 = format(move _59)</td></tr></table>>];
    bb25__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_70)<br/>StorageDead(_67)<br/>StorageDead(_66)<br/>StorageDead(_62)<br/>_57 = move _58<br/>StorageDead(_58)<br/>_56 = &amp;_57<br/>_55 = &amp;(*_56)<br/></td></tr><tr><td align="left">_54 = &lt;String as Deref&gt;::deref(move _55)</td></tr></table>>];
    bb26__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">_53 = &amp;(*_54)<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">_52 = solana_program::log::sol_log(move _53)</td></tr></table>>];
    bb27__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/></td></tr><tr><td align="left">drop(_57)</td></tr></table>>];
    bb28__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_56)<br/>StorageDead(_54)<br/>StorageDead(_52)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>_73 = const &quot;pyra accounts are exempt from force_delete_user&quot;<br/>_72 = &amp;(*_73)<br/></td></tr><tr><td align="left">_71 = solana_program::log::sol_log(move _72)</td></tr></table>>];
    bb29__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_73)<br/>StorageDead(_71)<br/>StorageLive(_74)<br/>_74 = _51<br/>_46 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _74)<br/>StorageDead(_74)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/></td></tr><tr><td align="left">_45 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _46)</td></tr></table>>];
    bb31__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>_75 = discriminant(_45)<br/></td></tr><tr><td align="left">switchInt(move _75)</td></tr></table>>];
    bb32__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_79)<br/>_79 = ((_45 as Continue).0: ())<br/>_44 = _79<br/>StorageDead(_79)<br/>StorageDead(_45)<br/>StorageDead(_44)<br/>StorageLive(_80)<br/>_678 = deref_copy (_1.1: &amp;mut instructions::keeper::ForceDeleteUser&lt;'_&gt;)<br/>_80 = &amp;((*_678).2: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>_679 = deref_copy (_1.1: &amp;mut instructions::keeper::ForceDeleteUser&lt;'_&gt;)<br/>_83 = &amp;((*_679).4: anchor_lang::prelude::Signer&lt;'_&gt;)<br/></td></tr><tr><td align="left">_82 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as Deref&gt;::deref(move _83)</td></tr></table>>];
    bb33__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageLive(_76)<br/>_76 = ((_45 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_78)<br/>_78 = _76<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _78)</td></tr></table>>];
    bb34__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>StorageDead(_76)<br/>StorageDead(_45)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>_680 = deref_copy ((*_82).0: &amp;anchor_lang::prelude::Pubkey)<br/>_81 = (*_680)<br/>StorageDead(_82)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>_681 = deref_copy (_1.1: &amp;mut instructions::keeper::ForceDeleteUser&lt;'_&gt;)<br/>_85 = &amp;((*_681).0: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_84 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt; as anchor_lang::Key&gt;::key(move _85)</td></tr></table>>];
    bb36__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>_682 = deref_copy (_1.1: &amp;mut instructions::keeper::ForceDeleteUser&lt;'_&gt;)<br/>_91 = &amp;((*_682).0: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_90 = anchor_lang::prelude::AccountLoader::&lt;'_, User&gt;::load_mut(move _91)</td></tr></table>>];
    bb37__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/>StorageLive(_92)<br/>_92 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_89 = std::result::Result::&lt;RefMut&lt;'_, User&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _90, move _92)</td></tr></table>>];
    bb38__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>StorageDead(_90)<br/></td></tr><tr><td align="left">_88 = &lt;std::result::Result&lt;RefMut&lt;'_, User&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _89)</td></tr></table>>];
    bb39__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>_93 = discriminant(_88)<br/></td></tr><tr><td align="left">switchInt(move _93)</td></tr></table>>];
    bb40__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageLive(_97)<br/>_97 = move ((_88 as Continue).0: std::cell::RefMut&lt;'_, state::user::User&gt;)<br/>_87 = move _97<br/>StorageDead(_97)<br/>_86 = &amp;mut _87<br/>_708 = discriminant(_88)<br/>StorageDead(_88)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>_683 = deref_copy (_1.1: &amp;mut instructions::keeper::ForceDeleteUser&lt;'_&gt;)<br/>_103 = &amp;((*_683).1: anchor_lang::prelude::AccountLoader&lt;'_, state::user::UserStats&gt;)<br/></td></tr><tr><td align="left">_102 = anchor_lang::prelude::AccountLoader::&lt;'_, UserStats&gt;::load_mut(move _103)</td></tr></table>>];
    bb41__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageLive(_94)<br/>_94 = ((_88 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_96)<br/>_96 = _94<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _96)</td></tr></table>>];
    bb42__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>StorageDead(_94)<br/>_706 = discriminant(_88)<br/>StorageDead(_88)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>StorageLive(_104)<br/>_104 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_101 = std::result::Result::&lt;RefMut&lt;'_, UserStats&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _102, move _104)</td></tr></table>>];
    bb44__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/>StorageDead(_102)<br/></td></tr><tr><td align="left">_100 = &lt;std::result::Result&lt;RefMut&lt;'_, UserStats&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _101)</td></tr></table>>];
    bb45__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/>_105 = discriminant(_100)<br/></td></tr><tr><td align="left">switchInt(move _105)</td></tr></table>>];
    bb46__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageLive(_109)<br/>_109 = move ((_100 as Continue).0: std::cell::RefMut&lt;'_, state::user::UserStats&gt;)<br/>_99 = move _109<br/>StorageDead(_109)<br/>_98 = &amp;mut _99<br/>_712 = discriminant(_100)<br/>StorageDead(_100)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/></td></tr><tr><td align="left">_113 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb47__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageLive(_106)<br/>_106 = ((_100 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_108)<br/>_108 = _106<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _108)</td></tr></table>>];
    bb48__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/>StorageDead(_106)<br/>_710 = discriminant(_100)<br/>StorageDead(_100)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left">_112 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _113)</td></tr></table>>];
    bb50__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_113)<br/>_114 = discriminant(_112)<br/></td></tr><tr><td align="left">switchInt(move _114)</td></tr></table>>];
    bb51__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageLive(_118)<br/>_118 = move ((_112 as Continue).0: anchor_lang::prelude::Clock)<br/>_111 = move _118<br/>StorageDead(_118)<br/>_110 = (_111.0: u64)<br/>_714 = discriminant(_112)<br/>StorageDead(_112)<br/>StorageDead(_111)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/></td></tr><tr><td align="left">_122 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb52__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageLive(_115)<br/>_115 = move ((_112 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_117)<br/>_117 = move _115<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _117)</td></tr></table>>];
    bb53__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/>StorageDead(_115)<br/>_748 = discriminant(_112)<br/>StorageDead(_112)<br/>StorageDead(_111)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left">_121 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _122)</td></tr></table>>];
    bb55__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/>_123 = discriminant(_121)<br/></td></tr><tr><td align="left">switchInt(move _123)</td></tr></table>>];
    bb56__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageLive(_127)<br/>_127 = move ((_121 as Continue).0: anchor_lang::prelude::Clock)<br/>_120 = move _127<br/>StorageDead(_127)<br/>_119 = (_120.4: i64)<br/>_716 = discriminant(_121)<br/>StorageDead(_121)<br/>StorageDead(_120)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>_684 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_138 = &amp;(*_684)<br/></td></tr><tr><td align="left">_137 = core::slice::&lt;impl [anchor_lang::prelude::AccountInfo&lt;'_&gt;]&gt;::iter(move _138)</td></tr></table>>];
    bb57__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageLive(_124)<br/>_124 = move ((_121 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_126)<br/>_126 = move _124<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _126)</td></tr></table>>];
    bb58__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/>StorageDead(_124)<br/>_746 = discriminant(_121)<br/>StorageDead(_121)<br/>StorageDead(_120)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/></td></tr><tr><td align="left">_136 = &lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as Iterator&gt;::peekable(move _137)</td></tr></table>>];
    bb60__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_137)<br/>_135 = &amp;mut _136<br/>_134 = &amp;mut (*_135)<br/>StorageLive(_139)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/></td></tr><tr><td align="left">_141 = BTreeSet::&lt;u16&gt;::new()</td></tr></table>>];
    bb61__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">_140 = &amp;_141<br/>_139 = &amp;(*_140)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>_149 = &amp;(*_86)<br/></td></tr><tr><td align="left">_148 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _149)</td></tr></table>>];
    bb62__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_149)<br/>_147 = &amp;((*_148).3: [state::user::SpotPosition; 8])<br/>_146 = &amp;(*_147)<br/>_145 = move _146 as &amp;[state::user::SpotPosition] (PointerCoercion(Unsize))<br/>StorageDead(_146)<br/></td></tr><tr><td align="left">_144 = get_market_set_for_spot_positions(move _145)</td></tr></table>>];
    bb63__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_145)<br/>_143 = &amp;_144<br/>_142 = &amp;(*_143)<br/>StorageLive(_150)<br/>_150 = _110<br/>StorageLive(_151)<br/>StorageLive(_152)<br/>StorageLive(_153)<br/>StorageLive(_154)<br/>_685 = deref_copy (*_80)<br/>_762 = (((_685.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_154 = &amp;(*_762)<br/></td></tr><tr><td align="left">_153 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _154)</td></tr></table>>];
    bb64__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_154)<br/>_152 = ((*_153).7: state::state::OracleGuardRails)<br/>_151 = Option::&lt;state::state::OracleGuardRails&gt;::Some(move _152)<br/>StorageDead(_152)<br/></td></tr><tr><td align="left">_133 = load_maps(move _134, move _139, move _142, move _150, move _151)</td></tr></table>>];
    bb65__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_151)<br/>StorageDead(_150)<br/>StorageDead(_142)<br/>StorageDead(_139)<br/>StorageDead(_134)<br/></td></tr><tr><td align="left">_132 = &lt;std::result::Result&lt;AccountMaps&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _133)</td></tr></table>>];
    bb66__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/>_155 = discriminant(_132)<br/></td></tr><tr><td align="left">switchInt(move _155)</td></tr></table>>];
    bb67__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageLive(_159)<br/>_159 = move ((_132 as Continue).0: instructions::optional_accounts::AccountMaps&lt;'_&gt;)<br/>_131 = move _159<br/>StorageDead(_159)<br/>StorageLive(_128)<br/>_128 = move (_131.0: state::perp_market_map::PerpMarketMap&lt;'_&gt;)<br/>StorageLive(_129)<br/>_129 = move (_131.1: state::spot_market_map::SpotMarketMap&lt;'_&gt;)<br/>StorageLive(_130)<br/>_130 = move (_131.2: state::oracle_map::OracleMap&lt;'_&gt;)<br/>_720 = discriminant(_132)<br/>StorageDead(_153)<br/></td></tr><tr><td align="left">drop(_144)</td></tr></table>>];
    bb68__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageLive(_156)<br/>_156 = ((_132 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_158)<br/>_158 = _156<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _158)</td></tr></table>>];
    bb69__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_158)<br/>StorageDead(_156)<br/>_718 = discriminant(_132)<br/>StorageDead(_153)<br/></td></tr><tr><td align="left">drop(_144)</td></tr></table>>];
    bb70__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_148)<br/>StorageDead(_147)<br/>StorageDead(_144)<br/>StorageDead(_143)<br/></td></tr><tr><td align="left">drop(_141)</td></tr></table>>];
    bb71__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_141)<br/>StorageDead(_140)<br/>StorageDead(_136)<br/>StorageDead(_135)<br/>StorageDead(_132)<br/>StorageDead(_131)<br/>StorageLive(_161)<br/>StorageLive(_162)<br/>StorageLive(_163)<br/>StorageLive(_164)<br/>StorageLive(_165)<br/>StorageLive(_166)<br/>_166 = &amp;(*_86)<br/></td></tr><tr><td align="left">_165 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _166)</td></tr></table>>];
    bb72__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">_164 = &amp;(*_165)<br/>StorageDead(_166)<br/>StorageLive(_167)<br/>StorageLive(_168)<br/>_168 = &amp;_128<br/>_167 = &amp;(*_168)<br/>StorageLive(_169)<br/>StorageLive(_170)<br/>_170 = &amp;_129<br/>_169 = &amp;(*_170)<br/>StorageLive(_171)<br/>StorageLive(_172)<br/>_172 = &amp;mut _130<br/>_171 = &amp;mut (*_172)<br/></td></tr><tr><td align="left">_163 = calculate_user_equity(move _164, move _167, move _169, move _171)</td></tr></table>>];
    bb73__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_171)<br/>StorageDead(_169)<br/>StorageDead(_167)<br/>StorageDead(_164)<br/></td></tr><tr><td align="left">_162 = &lt;std::result::Result&lt;(i128, bool), error::ErrorCode&gt; as Try&gt;::branch(move _163)</td></tr></table>>];
    bb74__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_163)<br/>_173 = discriminant(_162)<br/></td></tr><tr><td align="left">switchInt(move _173)</td></tr></table>>];
    bb75__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageLive(_177)<br/>_177 = ((_162 as Continue).0: (i128, bool))<br/>_161 = _177<br/>StorageDead(_177)<br/>StorageLive(_160)<br/>_160 = (_161.0: i128)<br/>StorageDead(_172)<br/>StorageDead(_170)<br/>StorageDead(_168)<br/>StorageDead(_165)<br/>StorageDead(_162)<br/>StorageDead(_161)<br/>StorageLive(_178)<br/>_179 = Eq(const 20_i128, const 0_i128)<br/></td></tr><tr><td align="left">assert(!move _179, &quot;attempt to divide `{}` by zero&quot;, const _)</td></tr></table>>];
    bb76__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageLive(_174)<br/>_174 = ((_162 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_176)<br/>_176 = _174<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _176)</td></tr></table>>];
    bb77__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_176)<br/>StorageDead(_174)<br/>StorageDead(_172)<br/>StorageDead(_170)<br/>StorageDead(_168)<br/>StorageDead(_165)<br/>StorageDead(_162)<br/>StorageDead(_161)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb78__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">_180 = Eq(const 20_i128, const -1_i128)<br/>_181 = Eq(const _, const i128::MIN)<br/>_182 = BitAnd(move _180, move _181)<br/></td></tr><tr><td align="left">assert(!move _182, &quot;attempt to compute `{} / {}`, which would overflow&quot;, const _, const 20_i128)</td></tr></table>>];
    bb79__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">_178 = Div(const _, const 20_i128)<br/>StorageLive(_183)<br/>StorageLive(_184)<br/>StorageLive(_185)<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>_187 = _160<br/>StorageLive(_188)<br/>_188 = _178<br/>_186 = Le(move _187, move _188)<br/></td></tr><tr><td align="left">switchInt(move _186)</td></tr></table>>];
    bb80__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_188)<br/>StorageDead(_187)<br/>StorageLive(_189)<br/>_189 = ()<br/>_185 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _189)<br/>StorageDead(_189)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb81__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_188)<br/>StorageDead(_187)<br/>StorageLive(_190)<br/>_190 = error::ErrorCode::DefaultError<br/>StorageLive(_191)<br/>StorageLive(_192)<br/>StorageLive(_193)<br/>StorageLive(_194)<br/>StorageLive(_195)<br/>StorageLive(_196)<br/>StorageLive(_197)<br/>StorageLive(_198)<br/>StorageLive(_199)<br/>StorageLive(_200)<br/>StorageLive(_201)<br/>_671 = const _<br/>_201 = &amp;(*_671)<br/>_200 = &amp;(*_201)<br/>_199 = move _200 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_200)<br/>StorageLive(_203)<br/>StorageLive(_204)<br/>StorageLive(_205)<br/>StorageLive(_206)<br/>StorageLive(_207)<br/>StorageLive(_208)<br/>StorageLive(_209)<br/>_209 = &amp;_190<br/>_208 = &amp;(*_209)<br/></td></tr><tr><td align="left">_207 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _208)</td></tr></table>>];
    bb82__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_208)<br/>_206 = [move _207]<br/>StorageDead(_207)<br/>_205 = &amp;_206<br/>_204 = &amp;(*_205)<br/>_203 = move _204 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_204)<br/></td></tr><tr><td align="left">_198 = Arguments::&lt;'_&gt;::new_v1(move _199, move _203)</td></tr></table>>];
    bb83__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_203)<br/>StorageDead(_199)<br/></td></tr><tr><td align="left">_197 = format(move _198)</td></tr></table>>];
    bb84__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_198)<br/>StorageDead(_209)<br/>StorageDead(_206)<br/>StorageDead(_205)<br/>StorageDead(_201)<br/>_196 = move _197<br/>StorageDead(_197)<br/>_195 = &amp;_196<br/>_194 = &amp;(*_195)<br/></td></tr><tr><td align="left">_193 = &lt;String as Deref&gt;::deref(move _194)</td></tr></table>>];
    bb85__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">_192 = &amp;(*_193)<br/>StorageDead(_194)<br/></td></tr><tr><td align="left">_191 = solana_program::log::sol_log(move _192)</td></tr></table>>];
    bb86__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_192)<br/></td></tr><tr><td align="left">drop(_196)</td></tr></table>>];
    bb87__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_196)<br/>StorageDead(_195)<br/>StorageDead(_193)<br/>StorageDead(_191)<br/>StorageLive(_210)<br/>StorageLive(_211)<br/>StorageLive(_212)<br/>StorageLive(_213)<br/>StorageLive(_214)<br/>StorageLive(_215)<br/>StorageLive(_216)<br/>StorageLive(_217)<br/>StorageLive(_218)<br/>StorageLive(_219)<br/>StorageLive(_220)<br/>_670 = const _<br/>_220 = &amp;(*_670)<br/>_219 = &amp;(*_220)<br/>_218 = move _219 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_219)<br/>StorageLive(_222)<br/>StorageLive(_223)<br/>StorageLive(_224)<br/>StorageLive(_225)<br/>StorageLive(_226)<br/>StorageLive(_227)<br/>StorageLive(_228)<br/>_228 = &amp;_178<br/>_227 = &amp;(*_228)<br/></td></tr><tr><td align="left">_226 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i128&gt;(move _227)</td></tr></table>>];
    bb88__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_227)<br/>_225 = [move _226]<br/>StorageDead(_226)<br/>_224 = &amp;_225<br/>_223 = &amp;(*_224)<br/>_222 = move _223 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_223)<br/></td></tr><tr><td align="left">_217 = Arguments::&lt;'_&gt;::new_v1(move _218, move _222)</td></tr></table>>];
    bb89__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_222)<br/>StorageDead(_218)<br/></td></tr><tr><td align="left">_216 = format(move _217)</td></tr></table>>];
    bb90__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_217)<br/>StorageDead(_228)<br/>StorageDead(_225)<br/>StorageDead(_224)<br/>StorageDead(_220)<br/>_215 = move _216<br/>StorageDead(_216)<br/>_214 = &amp;_215<br/>_213 = &amp;(*_214)<br/></td></tr><tr><td align="left">_212 = &lt;String as Deref&gt;::deref(move _213)</td></tr></table>>];
    bb91__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">_211 = &amp;(*_212)<br/>StorageDead(_213)<br/></td></tr><tr><td align="left">_210 = solana_program::log::sol_log(move _211)</td></tr></table>>];
    bb92__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_211)<br/></td></tr><tr><td align="left">drop(_215)</td></tr></table>>];
    bb93__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_215)<br/>StorageDead(_214)<br/>StorageDead(_212)<br/>StorageDead(_210)<br/>StorageLive(_229)<br/>_229 = _190<br/>_185 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _229)<br/>StorageDead(_229)<br/>StorageDead(_190)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb94__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_186)<br/></td></tr><tr><td align="left">_184 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _185)</td></tr></table>>];
    bb95__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_185)<br/>_230 = discriminant(_184)<br/></td></tr><tr><td align="left">switchInt(move _230)</td></tr></table>>];
    bb96__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageLive(_234)<br/>_234 = ((_184 as Continue).0: ())<br/>_183 = _234<br/>StorageDead(_234)<br/>StorageDead(_184)<br/>StorageDead(_183)<br/>StorageLive(_235)<br/>StorageLive(_236)<br/>StorageLive(_237)<br/>StorageLive(_238)<br/>StorageLive(_239)<br/>_239 = _110<br/>StorageLive(_240)<br/>StorageLive(_241)<br/>StorageLive(_242)<br/>_242 = &amp;(*_86)<br/></td></tr><tr><td align="left">_241 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _242)</td></tr></table>>];
    bb97__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageLive(_231)<br/>_231 = ((_184 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_233)<br/>_233 = _231<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _233)</td></tr></table>>];
    bb98__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_233)<br/>StorageDead(_231)<br/>StorageDead(_184)<br/>StorageDead(_183)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb99__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageDead(_242)<br/>_240 = ((*_241).14: u64)<br/></td></tr><tr><td align="left">_238 = &lt;u64 as SafeMath&gt;::safe_sub(move _239, move _240)</td></tr></table>>];
    bb100__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_240)<br/>StorageDead(_239)<br/></td></tr><tr><td align="left">_237 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _238)</td></tr></table>>];
    bb101__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_238)<br/>_243 = discriminant(_237)<br/></td></tr><tr><td align="left">switchInt(move _243)</td></tr></table>>];
    bb102__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageLive(_247)<br/>_247 = ((_237 as Continue).0: u64)<br/>_236 = _247<br/>StorageDead(_247)<br/>StorageDead(_241)<br/>StorageDead(_237)<br/>StorageLive(_248)<br/>StorageLive(_249)<br/>StorageLive(_250)<br/>StorageLive(_251)<br/>StorageLive(_252)<br/>_252 = _236<br/>_251 = Ge(move _252, const 18144000_u64)<br/></td></tr><tr><td align="left">switchInt(move _251)</td></tr></table>>];
    bb103__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageLive(_244)<br/>_244 = ((_237 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_246)<br/>_246 = _244<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _246)</td></tr></table>>];
    bb104__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_246)<br/>StorageDead(_244)<br/>StorageDead(_241)<br/>StorageDead(_237)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb105__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_252)<br/>StorageLive(_253)<br/>_253 = ()<br/>_250 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _253)<br/>StorageDead(_253)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb106__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_252)<br/>StorageLive(_254)<br/>_254 = error::ErrorCode::DefaultError<br/>StorageLive(_255)<br/>StorageLive(_256)<br/>StorageLive(_257)<br/>StorageLive(_258)<br/>StorageLive(_259)<br/>StorageLive(_260)<br/>StorageLive(_261)<br/>StorageLive(_262)<br/>StorageLive(_263)<br/>StorageLive(_264)<br/>StorageLive(_265)<br/>_669 = const _<br/>_265 = &amp;(*_669)<br/>_264 = &amp;(*_265)<br/>_263 = move _264 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_264)<br/>StorageLive(_267)<br/>StorageLive(_268)<br/>StorageLive(_269)<br/>StorageLive(_270)<br/>StorageLive(_271)<br/>StorageLive(_272)<br/>StorageLive(_273)<br/>_273 = &amp;_254<br/>_272 = &amp;(*_273)<br/></td></tr><tr><td align="left">_271 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _272)</td></tr></table>>];
    bb107__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_272)<br/>_270 = [move _271]<br/>StorageDead(_271)<br/>_269 = &amp;_270<br/>_268 = &amp;(*_269)<br/>_267 = move _268 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_268)<br/></td></tr><tr><td align="left">_262 = Arguments::&lt;'_&gt;::new_v1(move _263, move _267)</td></tr></table>>];
    bb108__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageDead(_267)<br/>StorageDead(_263)<br/></td></tr><tr><td align="left">_261 = format(move _262)</td></tr></table>>];
    bb109__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageDead(_262)<br/>StorageDead(_273)<br/>StorageDead(_270)<br/>StorageDead(_269)<br/>StorageDead(_265)<br/>_260 = move _261<br/>StorageDead(_261)<br/>_259 = &amp;_260<br/>_258 = &amp;(*_259)<br/></td></tr><tr><td align="left">_257 = &lt;String as Deref&gt;::deref(move _258)</td></tr></table>>];
    bb110__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">_256 = &amp;(*_257)<br/>StorageDead(_258)<br/></td></tr><tr><td align="left">_255 = solana_program::log::sol_log(move _256)</td></tr></table>>];
    bb111__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_256)<br/></td></tr><tr><td align="left">drop(_260)</td></tr></table>>];
    bb112__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageDead(_260)<br/>StorageDead(_259)<br/>StorageDead(_257)<br/>StorageDead(_255)<br/>StorageLive(_274)<br/>StorageLive(_275)<br/>StorageLive(_276)<br/>StorageLive(_277)<br/>StorageLive(_278)<br/>StorageLive(_279)<br/>StorageLive(_280)<br/>StorageLive(_281)<br/>StorageLive(_282)<br/>StorageLive(_283)<br/>StorageLive(_284)<br/>_668 = const _<br/>_284 = &amp;(*_668)<br/>_283 = &amp;(*_284)<br/>_282 = move _283 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_283)<br/>StorageLive(_286)<br/>StorageLive(_287)<br/>StorageLive(_288)<br/>StorageLive(_289)<br/>StorageLive(_290)<br/>StorageLive(_291)<br/>StorageLive(_292)<br/>_292 = &amp;_236<br/>_291 = &amp;(*_292)<br/></td></tr><tr><td align="left">_290 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _291)</td></tr></table>>];
    bb113__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageDead(_291)<br/>_289 = [move _290]<br/>StorageDead(_290)<br/>_288 = &amp;_289<br/>_287 = &amp;(*_288)<br/>_286 = move _287 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_287)<br/></td></tr><tr><td align="left">_281 = Arguments::&lt;'_&gt;::new_v1(move _282, move _286)</td></tr></table>>];
    bb114__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageDead(_286)<br/>StorageDead(_282)<br/></td></tr><tr><td align="left">_280 = format(move _281)</td></tr></table>>];
    bb115__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageDead(_281)<br/>StorageDead(_292)<br/>StorageDead(_289)<br/>StorageDead(_288)<br/>StorageDead(_284)<br/>_279 = move _280<br/>StorageDead(_280)<br/>_278 = &amp;_279<br/>_277 = &amp;(*_278)<br/></td></tr><tr><td align="left">_276 = &lt;String as Deref&gt;::deref(move _277)</td></tr></table>>];
    bb116__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">_275 = &amp;(*_276)<br/>StorageDead(_277)<br/></td></tr><tr><td align="left">_274 = solana_program::log::sol_log(move _275)</td></tr></table>>];
    bb117__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageDead(_275)<br/></td></tr><tr><td align="left">drop(_279)</td></tr></table>>];
    bb118__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageDead(_279)<br/>StorageDead(_278)<br/>StorageDead(_276)<br/>StorageDead(_274)<br/>StorageLive(_293)<br/>_293 = _254<br/>_250 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _293)<br/>StorageDead(_293)<br/>StorageDead(_254)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb119__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageDead(_251)<br/></td></tr><tr><td align="left">_249 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _250)</td></tr></table>>];
    bb120__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageDead(_250)<br/>_294 = discriminant(_249)<br/></td></tr><tr><td align="left">switchInt(move _294)</td></tr></table>>];
    bb121__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageLive(_298)<br/>_298 = ((_249 as Continue).0: ())<br/>_248 = _298<br/>StorageDead(_298)<br/>StorageDead(_249)<br/>StorageDead(_248)<br/>_235 = const ()<br/>StorageDead(_236)<br/>StorageDead(_235)<br/>StorageLive(_299)<br/>StorageLive(_300)<br/>StorageLive(_301)<br/>StorageLive(_302)<br/>StorageLive(_303)<br/>StorageLive(_304)<br/>_304 = &amp;mut (*_86)<br/></td></tr><tr><td align="left">_303 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _304)</td></tr></table>>];
    bb122__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageLive(_295)<br/>_295 = ((_249 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_297)<br/>_297 = _295<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _297)</td></tr></table>>];
    bb123__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageDead(_297)<br/>StorageDead(_295)<br/>StorageDead(_249)<br/>StorageDead(_248)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb124__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">_302 = &amp;mut (*_303)<br/>StorageDead(_304)<br/>StorageLive(_305)<br/>StorageLive(_306)<br/>_306 = &amp;_84<br/>_305 = &amp;(*_306)<br/>StorageLive(_307)<br/>StorageLive(_308)<br/>StorageLive(_309)<br/>_309 = &amp;_81<br/>_308 = &amp;(*_309)<br/>_307 = Option::&lt;&amp;anchor_lang::prelude::Pubkey&gt;::Some(move _308)<br/>StorageDead(_308)<br/>StorageLive(_310)<br/>StorageLive(_311)<br/>_311 = &amp;_128<br/>_310 = &amp;(*_311)<br/>StorageLive(_312)<br/>StorageLive(_313)<br/>_313 = &amp;_129<br/>_312 = &amp;(*_313)<br/>StorageLive(_314)<br/>StorageLive(_315)<br/>_315 = &amp;mut _130<br/>_314 = &amp;mut (*_315)<br/>StorageLive(_316)<br/>_316 = _119<br/>StorageLive(_317)<br/>_317 = _110<br/>StorageLive(_318)<br/>_318 = OrderActionExplanation::None<br/>StorageLive(_319)<br/>_319 = Option::&lt;state::user::MarketType&gt;::None<br/>StorageLive(_320)<br/>_320 = Option::&lt;u16&gt;::None<br/>StorageLive(_321)<br/>_321 = Option::&lt;controller::position::PositionDirection&gt;::None<br/></td></tr><tr><td align="left">_301 = controller::orders::cancel_orders(move _302, move _305, move _307, move _310, move _312, move _314, move _316, move _317, move _318, move _319, move _320, move _321)</td></tr></table>>];
    bb125__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageDead(_321)<br/>StorageDead(_320)<br/>StorageDead(_319)<br/>StorageDead(_318)<br/>StorageDead(_317)<br/>StorageDead(_316)<br/>StorageDead(_314)<br/>StorageDead(_312)<br/>StorageDead(_310)<br/>StorageDead(_307)<br/>StorageDead(_305)<br/>StorageDead(_302)<br/></td></tr><tr><td align="left">_300 = &lt;std::result::Result&lt;Vec&lt;u32&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _301)</td></tr></table>>];
    bb126__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">_705 = const true<br/>StorageDead(_301)<br/>_322 = discriminant(_300)<br/></td></tr><tr><td align="left">switchInt(move _322)</td></tr></table>>];
    bb127__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageLive(_326)<br/>_326 = move ((_300 as Continue).0: std::vec::Vec&lt;u32&gt;)<br/>_299 = move _326<br/>StorageDead(_326)<br/></td></tr><tr><td align="left">drop(_299)</td></tr></table>>];
    bb128__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageLive(_323)<br/>_323 = ((_300 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_325)<br/>_325 = _323<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _325)</td></tr></table>>];
    bb129__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">StorageDead(_325)<br/>StorageDead(_323)<br/>_722 = discriminant(_300)<br/>StorageDead(_315)<br/>StorageDead(_313)<br/>StorageDead(_311)<br/>StorageDead(_309)<br/>StorageDead(_306)<br/>StorageDead(_303)<br/>_705 = const false<br/>StorageDead(_300)<br/>StorageDead(_299)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb130__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">_724 = discriminant(_300)<br/>StorageDead(_315)<br/>StorageDead(_313)<br/>StorageDead(_311)<br/>StorageDead(_309)<br/>StorageDead(_306)<br/>StorageDead(_303)<br/>_705 = const false<br/>StorageDead(_300)<br/>StorageDead(_299)<br/>StorageLive(_327)<br/>StorageLive(_328)<br/>StorageLive(_329)<br/>StorageLive(_330)<br/>StorageLive(_331)<br/>StorageLive(_332)<br/>StorageLive(_333)<br/>_333 = &amp;mut (*_86)<br/></td></tr><tr><td align="left">_332 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _333)</td></tr></table>>];
    bb131__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageDead(_333)<br/>_331 = &amp;mut ((*_332).3: [state::user::SpotPosition; 8])<br/>_330 = move _331 as &amp;mut [state::user::SpotPosition] (PointerCoercion(Unsize))<br/>StorageDead(_331)<br/></td></tr><tr><td align="left">_329 = core::slice::&lt;impl [SpotPosition]&gt;::iter_mut(move _330)</td></tr></table>>];
    bb132__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageDead(_330)<br/></td></tr><tr><td align="left">_328 = &lt;std::slice::IterMut&lt;'_, SpotPosition&gt; as IntoIterator&gt;::into_iter(move _329)</td></tr></table>>];
    bb133__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageDead(_329)<br/>StorageLive(_334)<br/>_334 = move _328<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb134__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageLive(_336)<br/>StorageLive(_337)<br/>StorageLive(_338)<br/>StorageLive(_339)<br/>_339 = &amp;mut _334<br/>_338 = &amp;mut (*_339)<br/></td></tr><tr><td align="left">_337 = &lt;std::slice::IterMut&lt;'_, SpotPosition&gt; as Iterator&gt;::next(move _338)</td></tr></table>>];
    bb135__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageDead(_338)<br/>_340 = discriminant(_337)<br/></td></tr><tr><td align="left">switchInt(move _340)</td></tr></table>>];
    bb136__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageLive(_342)<br/>_342 = move ((_337 as Some).0: &amp;mut state::user::SpotPosition)<br/>StorageLive(_343)<br/>StorageLive(_344)<br/>StorageLive(_345)<br/>_345 = &amp;(*_342)<br/></td></tr><tr><td align="left">_344 = SpotPosition::is_available(move _345)</td></tr></table>>];
    bb137__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">_327 = const ()<br/>StorageDead(_339)<br/>StorageDead(_337)<br/>StorageDead(_336)<br/>StorageDead(_334)<br/>StorageDead(_332)<br/>StorageDead(_328)<br/>StorageDead(_327)<br/>StorageLive(_580)<br/>StorageLive(_581)<br/>StorageLive(_582)<br/>StorageLive(_583)<br/>StorageLive(_584)<br/>StorageLive(_585)<br/>_585 = &amp;(*_86)<br/></td></tr><tr><td align="left">_584 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _585)</td></tr></table>>];
    bb138__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left">switchInt(move _344)</td></tr></table>>];
    bb139__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">StorageDead(_345)<br/>StorageDead(_344)<br/>StorageDead(_343)<br/>StorageDead(_342)<br/>StorageDead(_339)<br/>StorageDead(_337)<br/>StorageDead(_336)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb140__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">StorageDead(_345)<br/>_343 = const ()<br/>StorageDead(_344)<br/>StorageDead(_343)<br/>StorageLive(_347)<br/>StorageLive(_348)<br/>StorageLive(_349)<br/>StorageLive(_350)<br/>StorageLive(_351)<br/>_351 = &amp;_129<br/>StorageLive(_352)<br/>StorageLive(_353)<br/>_353 = &amp;((*_342).4: u16)<br/>_352 = &amp;(*_353)<br/></td></tr><tr><td align="left">_350 = SpotMarketMap::&lt;'_&gt;::get_ref_mut(move _351, move _352)</td></tr></table>>];
    bb141__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">StorageDead(_352)<br/>StorageDead(_351)<br/></td></tr><tr><td align="left">_349 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _350)</td></tr></table>>];
    bb142__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageDead(_350)<br/>_354 = discriminant(_349)<br/></td></tr><tr><td align="left">switchInt(move _354)</td></tr></table>>];
    bb143__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageLive(_358)<br/>_358 = move ((_349 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_348 = move _358<br/>StorageDead(_358)<br/>_347 = &amp;mut _348<br/>_728 = discriminant(_349)<br/>StorageDead(_353)<br/>StorageDead(_349)<br/>StorageLive(_359)<br/>StorageLive(_360)<br/>StorageLive(_361)<br/>StorageLive(_362)<br/>_362 = &amp;mut _130<br/>StorageLive(_363)<br/>StorageLive(_364)<br/>StorageLive(_365)<br/>StorageLive(_366)<br/>StorageLive(_367)<br/>StorageLive(_368)<br/>_368 = &amp;(*_347)<br/></td></tr><tr><td align="left">_367 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _368)</td></tr></table>>];
    bb144__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">StorageLive(_355)<br/>_355 = ((_349 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_357)<br/>_357 = _355<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _357)</td></tr></table>>];
    bb145__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageDead(_357)<br/>StorageDead(_355)<br/>_726 = discriminant(_349)<br/>StorageDead(_353)<br/>StorageDead(_349)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb146__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">_366 = &amp;(*_367)<br/>StorageDead(_368)<br/></td></tr><tr><td align="left">_365 = SpotMarket::oracle_id(move _366)</td></tr></table>>];
    bb147__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left" balign="left">StorageDead(_366)<br/>_364 = &amp;_365<br/>_363 = &amp;(*_364)<br/></td></tr><tr><td align="left">_361 = OracleMap::&lt;'_&gt;::get_price_data(move _362, move _363)</td></tr></table>>];
    bb148__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left" balign="left">StorageDead(_363)<br/>StorageDead(_362)<br/></td></tr><tr><td align="left">_360 = &lt;std::result::Result&lt;&amp;OraclePriceData, error::ErrorCode&gt; as Try&gt;::branch(move _361)</td></tr></table>>];
    bb149__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">149</td></tr><tr><td align="left" balign="left">StorageDead(_361)<br/>_369 = discriminant(_360)<br/></td></tr><tr><td align="left">switchInt(move _369)</td></tr></table>>];
    bb150__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">150</td></tr><tr><td align="left" balign="left">StorageLive(_373)<br/>_373 = ((_360 as Continue).0: &amp;state::oracle::OraclePriceData)<br/>_359 = _373<br/>StorageDead(_373)<br/>StorageDead(_367)<br/>StorageDead(_365)<br/>StorageDead(_364)<br/>StorageDead(_360)<br/>StorageLive(_374)<br/>StorageLive(_375)<br/>StorageLive(_376)<br/>StorageLive(_377)<br/>StorageLive(_378)<br/>StorageLive(_379)<br/>_379 = &amp;mut (*_347)<br/></td></tr><tr><td align="left">_378 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _379)</td></tr></table>>];
    bb151__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">151</td></tr><tr><td align="left" balign="left">StorageLive(_370)<br/>_370 = ((_360 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_372)<br/>_372 = _370<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _372)</td></tr></table>>];
    bb152__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">152</td></tr><tr><td align="left" balign="left">StorageDead(_372)<br/>StorageDead(_370)<br/>StorageDead(_367)<br/>StorageDead(_365)<br/>StorageDead(_364)<br/>StorageDead(_360)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb153__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">153</td></tr><tr><td align="left" balign="left">_377 = &amp;mut (*_378)<br/>StorageDead(_379)<br/>StorageLive(_380)<br/>StorageLive(_381)<br/>_381 = &amp;(*_359)<br/>_380 = Option::&lt;&amp;OraclePriceData&gt;::Some(move _381)<br/>StorageDead(_381)<br/>StorageLive(_382)<br/>_382 = _119<br/></td></tr><tr><td align="left">_376 = controller::spot_balance::update_spot_market_cumulative_interest(move _377, move _380, move _382)</td></tr></table>>];
    bb154__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">154</td></tr><tr><td align="left" balign="left">StorageDead(_382)<br/>StorageDead(_380)<br/>StorageDead(_377)<br/></td></tr><tr><td align="left">_375 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _376)</td></tr></table>>];
    bb155__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">155</td></tr><tr><td align="left" balign="left">StorageDead(_376)<br/>_383 = discriminant(_375)<br/></td></tr><tr><td align="left">switchInt(move _383)</td></tr></table>>];
    bb156__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">156</td></tr><tr><td align="left" balign="left">StorageLive(_387)<br/>_387 = ((_375 as Continue).0: ())<br/>_374 = _387<br/>StorageDead(_387)<br/>StorageDead(_378)<br/>StorageDead(_375)<br/>StorageDead(_374)<br/>StorageLive(_388)<br/>StorageLive(_389)<br/>StorageLive(_390)<br/>StorageLive(_391)<br/>_391 = &amp;(*_342)<br/>StorageLive(_392)<br/>StorageLive(_393)<br/>StorageLive(_394)<br/>_394 = &amp;(*_347)<br/></td></tr><tr><td align="left">_393 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _394)</td></tr></table>>];
    bb157__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">157</td></tr><tr><td align="left" balign="left">StorageLive(_384)<br/>_384 = ((_375 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_386)<br/>_386 = _384<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _386)</td></tr></table>>];
    bb158__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">158</td></tr><tr><td align="left" balign="left">StorageDead(_386)<br/>StorageDead(_384)<br/>StorageDead(_378)<br/>StorageDead(_375)<br/>StorageDead(_374)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb159__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">159</td></tr><tr><td align="left" balign="left">_392 = &amp;(*_393)<br/>StorageDead(_394)<br/></td></tr><tr><td align="left">_390 = SpotPosition::get_token_amount(move _391, move _392)</td></tr></table>>];
    bb160__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">160</td></tr><tr><td align="left" balign="left">StorageDead(_392)<br/>StorageDead(_391)<br/></td></tr><tr><td align="left">_389 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _390)</td></tr></table>>];
    bb161__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">161</td></tr><tr><td align="left" balign="left">StorageDead(_390)<br/>_395 = discriminant(_389)<br/></td></tr><tr><td align="left">switchInt(move _395)</td></tr></table>>];
    bb162__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">162</td></tr><tr><td align="left" balign="left">StorageLive(_399)<br/>_399 = ((_389 as Continue).0: u128)<br/>_388 = _399<br/>StorageDead(_399)<br/>StorageDead(_393)<br/>StorageDead(_389)<br/>StorageLive(_400)<br/>_400 = ((*_342).5: state::spot_market::SpotBalanceType)<br/>StorageLive(_401)<br/>StorageLive(_402)<br/>StorageLive(_403)<br/>StorageLive(_404)<br/>_404 = &amp;(*_347)<br/></td></tr><tr><td align="left">_403 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _404)</td></tr></table>>];
    bb163__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">163</td></tr><tr><td align="left" balign="left">StorageLive(_396)<br/>_396 = ((_389 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_398)<br/>_398 = _396<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _398)</td></tr></table>>];
    bb164__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">164</td></tr><tr><td align="left" balign="left">StorageDead(_398)<br/>StorageDead(_396)<br/>StorageDead(_393)<br/>StorageDead(_389)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb165__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">165</td></tr><tr><td align="left" balign="left">_402 = &amp;(*_403)<br/>StorageDead(_404)<br/></td></tr><tr><td align="left">_401 = SpotMarket::get_token_program(move _402)</td></tr></table>>];
    bb166__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">166</td></tr><tr><td align="left" balign="left">StorageDead(_402)<br/>StorageDead(_403)<br/>StorageLive(_405)<br/>StorageLive(_406)<br/>StorageLive(_407)<br/>StorageLive(_408)<br/>StorageLive(_409)<br/>StorageLive(_410)<br/>StorageLive(_411)<br/>StorageLive(_412)<br/>_686 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_412 = &amp;(*_686)<br/></td></tr><tr><td align="left">_411 = core::slice::&lt;impl [anchor_lang::prelude::AccountInfo&lt;'_&gt;]&gt;::iter(move _412)</td></tr></table>>];
    bb167__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">167</td></tr><tr><td align="left" balign="left">_410 = &amp;mut _411<br/>StorageDead(_412)<br/>StorageLive(_413)<br/>StorageLive(_414)<br/>_414 = &amp;_401<br/>_413 = {closure@programs/drift/src/instructions/keeper.rs:2973:19: 2973:24} { token_program_pubkey: move _414 }<br/>StorageDead(_414)<br/></td></tr><tr><td align="left">_409 = &lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as Iterator&gt;::find::&lt;{closure@programs/drift/src/instructions/keeper.rs:2973:19: 2973:24}&gt;(move _410, move _413)</td></tr></table>>];
    bb168__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">168</td></tr><tr><td align="left" balign="left">StorageDead(_413)<br/>StorageDead(_410)<br/>StorageLive(_415)<br/>_415 = {closure@programs/drift/src/instructions/keeper.rs:2974:18: 2974:23}<br/></td></tr><tr><td align="left">_408 = Option::&lt;&amp;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;::map::&lt;std::result::Result&lt;anchor_lang::prelude::Interface&lt;'_, TokenInterface&gt;, anchor_lang::error::Error&gt;, {closure@programs/drift/src/instructions/keeper.rs:2974:18: 2974:23}&gt;(move _409, move _415)</td></tr></table>>];
    bb169__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">169</td></tr><tr><td align="left" balign="left">StorageDead(_415)<br/>StorageDead(_409)<br/></td></tr><tr><td align="left">_407 = Option::&lt;std::result::Result&lt;anchor_lang::prelude::Interface&lt;'_, TokenInterface&gt;, anchor_lang::error::Error&gt;&gt;::unwrap(move _408)</td></tr></table>>];
    bb170__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">170</td></tr><tr><td align="left" balign="left">StorageDead(_408)<br/></td></tr><tr><td align="left">_406 = std::result::Result::&lt;anchor_lang::prelude::Interface&lt;'_, TokenInterface&gt;, anchor_lang::error::Error&gt;::unwrap(move _407)</td></tr></table>>];
    bb171__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">171</td></tr><tr><td align="left" balign="left">StorageDead(_407)<br/>_405 = &amp;_406<br/>StorageDead(_411)<br/>StorageLive(_416)<br/>StorageLive(_417)<br/>StorageLive(_418)<br/>_418 = &amp;(*_347)<br/></td></tr><tr><td align="left">_417 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _418)</td></tr></table>>];
    bb172__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">172</td></tr><tr><td align="left" balign="left">StorageDead(_418)<br/>_416 = &amp;((*_417).2: anchor_lang::prelude::Pubkey)<br/>StorageLive(_419)<br/>StorageLive(_420)<br/>StorageLive(_421)<br/>StorageLive(_422)<br/>StorageLive(_423)<br/>_687 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_423 = &amp;(*_687)<br/></td></tr><tr><td align="left">_422 = core::slice::&lt;impl [anchor_lang::prelude::AccountInfo&lt;'_&gt;]&gt;::iter(move _423)</td></tr></table>>];
    bb173__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">173</td></tr><tr><td align="left" balign="left">_421 = &amp;mut _422<br/>StorageDead(_423)<br/>StorageLive(_424)<br/>StorageLive(_425)<br/>_425 = &amp;_416<br/>_424 = {closure@programs/drift/src/instructions/keeper.rs:2982:19: 2982:24} { spot_market_mint: move _425 }<br/>StorageDead(_425)<br/></td></tr><tr><td align="left">_420 = &lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as Iterator&gt;::find::&lt;{closure@programs/drift/src/instructions/keeper.rs:2982:19: 2982:24}&gt;(move _421, move _424)</td></tr></table>>];
    bb174__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">174</td></tr><tr><td align="left" balign="left">StorageDead(_424)<br/>StorageDead(_421)<br/>StorageLive(_426)<br/>_426 = {closure@programs/drift/src/instructions/keeper.rs:2983:18: 2983:23}<br/></td></tr><tr><td align="left">_419 = Option::&lt;&amp;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;::map::&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt;, {closure@programs/drift/src/instructions/keeper.rs:2983:18: 2983:23}&gt;(move _420, move _426)</td></tr></table>>];
    bb175__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">175</td></tr><tr><td align="left" balign="left">StorageDead(_426)<br/>StorageDead(_420)<br/>StorageDead(_422)<br/>StorageLive(_427)<br/>StorageLive(_428)<br/>StorageLive(_429)<br/>_429 = &amp;_81<br/>_428 = &amp;(*_429)<br/>StorageLive(_430)<br/>_430 = &amp;(*_416)<br/>StorageLive(_431)<br/>StorageLive(_432)<br/>_432 = &amp;_401<br/>_431 = &amp;(*_432)<br/></td></tr><tr><td align="left">_427 = get_associated_token_address_with_program_id(move _428, move _430, move _431)</td></tr></table>>];
    bb176__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">176</td></tr><tr><td align="left" balign="left">StorageDead(_431)<br/>StorageDead(_430)<br/>StorageDead(_428)<br/>StorageDead(_432)<br/>StorageDead(_429)<br/>StorageLive(_433)<br/>StorageLive(_434)<br/>StorageLive(_435)<br/>StorageLive(_436)<br/>StorageLive(_437)<br/>StorageLive(_438)<br/>StorageLive(_439)<br/>_688 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_439 = &amp;(*_688)<br/></td></tr><tr><td align="left">_438 = core::slice::&lt;impl [anchor_lang::prelude::AccountInfo&lt;'_&gt;]&gt;::iter(move _439)</td></tr></table>>];
    bb177__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">177</td></tr><tr><td align="left" balign="left">_437 = &amp;mut _438<br/>StorageDead(_439)<br/>StorageLive(_440)<br/>StorageLive(_441)<br/>_441 = &amp;_427<br/>_440 = {closure@programs/drift/src/instructions/keeper.rs:2993:19: 2993:24} { keeper_vault: move _441 }<br/>StorageDead(_441)<br/></td></tr><tr><td align="left">_436 = &lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as Iterator&gt;::find::&lt;{closure@programs/drift/src/instructions/keeper.rs:2993:19: 2993:24}&gt;(move _437, move _440)</td></tr></table>>];
    bb178__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">178</td></tr><tr><td align="left" balign="left">StorageDead(_440)<br/>StorageDead(_437)<br/>StorageLive(_442)<br/>_442 = {closure@programs/drift/src/instructions/keeper.rs:2994:18: 2994:23}<br/></td></tr><tr><td align="left">_435 = Option::&lt;&amp;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;::map::&lt;std::result::Result&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;, anchor_lang::error::Error&gt;, {closure@programs/drift/src/instructions/keeper.rs:2994:18: 2994:23}&gt;(move _436, move _442)</td></tr></table>>];
    bb179__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">179</td></tr><tr><td align="left" balign="left">StorageDead(_442)<br/>StorageDead(_436)<br/></td></tr><tr><td align="left">_434 = Option::&lt;std::result::Result&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;, anchor_lang::error::Error&gt;&gt;::unwrap(move _435)</td></tr></table>>];
    bb180__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">180</td></tr><tr><td align="left" balign="left">StorageDead(_435)<br/></td></tr><tr><td align="left">_433 = std::result::Result::&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;, anchor_lang::error::Error&gt;::unwrap(move _434)</td></tr></table>>];
    bb181__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">181</td></tr><tr><td align="left" balign="left">StorageDead(_434)<br/>StorageDead(_438)<br/>StorageLive(_443)<br/>StorageLive(_444)<br/>StorageLive(_445)<br/>_445 = &amp;(*_347)<br/></td></tr><tr><td align="left">_444 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _445)</td></tr></table>>];
    bb182__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">182</td></tr><tr><td align="left" balign="left">StorageDead(_445)<br/>_443 = ((*_444).3: anchor_lang::prelude::Pubkey)<br/>StorageDead(_444)<br/>StorageLive(_446)<br/>StorageLive(_447)<br/>StorageLive(_448)<br/>StorageLive(_449)<br/>StorageLive(_450)<br/>StorageLive(_451)<br/>StorageLive(_452)<br/>_689 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_452 = &amp;(*_689)<br/></td></tr><tr><td align="left">_451 = core::slice::&lt;impl [anchor_lang::prelude::AccountInfo&lt;'_&gt;]&gt;::iter(move _452)</td></tr></table>>];
    bb183__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">183</td></tr><tr><td align="left" balign="left">_450 = &amp;mut _451<br/>StorageDead(_452)<br/>StorageLive(_453)<br/>StorageLive(_454)<br/>_454 = &amp;_443<br/>_453 = {closure@programs/drift/src/instructions/keeper.rs:3002:19: 3002:24} { spot_market_vault: move _454 }<br/>StorageDead(_454)<br/></td></tr><tr><td align="left">_449 = &lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as Iterator&gt;::find::&lt;{closure@programs/drift/src/instructions/keeper.rs:3002:19: 3002:24}&gt;(move _450, move _453)</td></tr></table>>];
    bb184__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">184</td></tr><tr><td align="left" balign="left">StorageDead(_453)<br/>StorageDead(_450)<br/>StorageLive(_455)<br/>_455 = {closure@programs/drift/src/instructions/keeper.rs:3003:18: 3003:23}<br/></td></tr><tr><td align="left">_448 = Option::&lt;&amp;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;::map::&lt;std::result::Result&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;, anchor_lang::error::Error&gt;, {closure@programs/drift/src/instructions/keeper.rs:3003:18: 3003:23}&gt;(move _449, move _455)</td></tr></table>>];
    bb185__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">185</td></tr><tr><td align="left" balign="left">StorageDead(_455)<br/>StorageDead(_449)<br/></td></tr><tr><td align="left">_447 = Option::&lt;std::result::Result&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;, anchor_lang::error::Error&gt;&gt;::unwrap(move _448)</td></tr></table>>];
    bb186__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">186</td></tr><tr><td align="left" balign="left">StorageDead(_448)<br/></td></tr><tr><td align="left">_446 = std::result::Result::&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;, anchor_lang::error::Error&gt;::unwrap(move _447)</td></tr></table>>];
    bb187__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">187</td></tr><tr><td align="left" balign="left">StorageDead(_447)<br/>StorageDead(_451)<br/>StorageLive(_456)<br/>StorageLive(_457)<br/>StorageLive(_458)<br/>_458 = &amp;_400<br/>StorageLive(_459)<br/>_667 = const _<br/>_459 = &amp;(*_667)<br/></td></tr><tr><td align="left">_457 = &lt;SpotBalanceType as PartialEq&gt;::eq(move _458, move _459)</td></tr></table>>];
    bb188__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">188</td></tr><tr><td align="left">switchInt(move _457)</td></tr></table>>];
    bb189__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">189</td></tr><tr><td align="left" balign="left">StorageDead(_459)<br/>StorageDead(_458)<br/>StorageLive(_461)<br/>StorageLive(_462)<br/>StorageLive(_463)<br/>StorageLive(_464)<br/>_464 = _388<br/>StorageLive(_465)<br/>StorageLive(_466)<br/>_665 = const _<br/>_466 = &amp;(*_665)<br/>_465 = &amp;(*_466)<br/>StorageLive(_468)<br/>StorageLive(_469)<br/>StorageLive(_470)<br/>_470 = &amp;mut (*_347)<br/></td></tr><tr><td align="left">_469 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _470)</td></tr></table>>];
    bb190__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">190</td></tr><tr><td align="left" balign="left">_468 = &amp;mut (*_469)<br/>StorageDead(_470)<br/>StorageLive(_471)<br/>StorageLive(_472)<br/>_472 = &amp;mut (*_342)<br/>_471 = move _472 as &amp;mut dyn state::spot_market::SpotBalance (PointerCoercion(Unsize))<br/>StorageDead(_472)<br/></td></tr><tr><td align="left">_463 = update_spot_balances(move _464, move _465, move _468, move _471, const true)</td></tr></table>>];
    bb191__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">191</td></tr><tr><td align="left" balign="left">StorageDead(_471)<br/>StorageDead(_468)<br/>StorageDead(_465)<br/>StorageDead(_464)<br/></td></tr><tr><td align="left">_462 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _463)</td></tr></table>>];
    bb192__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">192</td></tr><tr><td align="left" balign="left">StorageDead(_463)<br/>_473 = discriminant(_462)<br/></td></tr><tr><td align="left">switchInt(move _473)</td></tr></table>>];
    bb193__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">193</td></tr><tr><td align="left" balign="left">StorageLive(_477)<br/>_477 = ((_462 as Continue).0: ())<br/>_461 = _477<br/>StorageDead(_477)<br/>StorageDead(_469)<br/>StorageDead(_466)<br/>StorageDead(_462)<br/>StorageDead(_461)<br/>StorageLive(_478)<br/>StorageLive(_479)<br/>StorageLive(_480)<br/>StorageLive(_481)<br/>StorageLive(_482)<br/>_482 = &amp;_405<br/>_690 = deref_copy (*_482)<br/>_481 = &amp;(*_690)<br/>StorageLive(_483)<br/>StorageLive(_484)<br/>_484 = &amp;_446<br/>_483 = &amp;(*_484)<br/>StorageLive(_485)<br/>StorageLive(_486)<br/>_486 = &amp;_433<br/>_485 = &amp;(*_486)<br/>StorageLive(_487)<br/>StorageLive(_488)<br/>_691 = deref_copy (_1.1: &amp;mut instructions::keeper::ForceDeleteUser&lt;'_&gt;)<br/>_488 = &amp;((*_691).5: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_487 = &amp;(*_488)<br/>StorageLive(_489)<br/>StorageLive(_490)<br/>StorageLive(_491)<br/>_692 = deref_copy (*_80)<br/>_763 = (((_692.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_491 = &amp;(*_763)<br/></td></tr><tr><td align="left">_490 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _491)</td></tr></table>>];
    bb194__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">194</td></tr><tr><td align="left" balign="left">StorageLive(_474)<br/>_474 = ((_462 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_476)<br/>_476 = _474<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _476)</td></tr></table>>];
    bb195__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">195</td></tr><tr><td align="left" balign="left">StorageDead(_476)<br/>StorageDead(_474)<br/>StorageDead(_469)<br/>StorageDead(_466)<br/>StorageDead(_462)<br/>StorageDead(_461)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb196__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">196</td></tr><tr><td align="left" balign="left">StorageDead(_491)<br/>_489 = ((*_490).15: u8)<br/>StorageLive(_492)<br/>StorageLive(_493)<br/>StorageLive(_494)<br/>StorageLive(_495)<br/>_495 = _388<br/></td></tr><tr><td align="left">_494 = &lt;u128 as Cast&gt;::cast::&lt;u64&gt;(move _495)</td></tr></table>>];
    bb197__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">197</td></tr><tr><td align="left" balign="left">StorageDead(_495)<br/></td></tr><tr><td align="left">_493 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _494)</td></tr></table>>];
    bb198__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">198</td></tr><tr><td align="left" balign="left">StorageDead(_494)<br/>_496 = discriminant(_493)<br/></td></tr><tr><td align="left">switchInt(move _496)</td></tr></table>>];
    bb199__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">199</td></tr><tr><td align="left" balign="left">StorageLive(_500)<br/>_500 = ((_493 as Continue).0: u64)<br/>_492 = _500<br/>StorageDead(_500)<br/>StorageLive(_501)<br/>StorageLive(_502)<br/>_502 = &amp;_419<br/>_501 = &amp;(*_502)<br/>StorageLive(_503)<br/>_503 = Option::&lt;&amp;mut Peekable&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;&gt;::None<br/></td></tr><tr><td align="left">_480 = send_from_program_vault(move _481, move _483, move _485, move _487, move _489, move _492, move _501, move _503)</td></tr></table>>];
    bb200__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">200</td></tr><tr><td align="left" balign="left">StorageLive(_497)<br/>_497 = ((_493 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_499)<br/>_499 = _497<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _499)</td></tr></table>>];
    bb201__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">201</td></tr><tr><td align="left" balign="left">StorageDead(_499)<br/>StorageDead(_497)<br/>StorageDead(_492)<br/>StorageDead(_489)<br/>StorageDead(_487)<br/>StorageDead(_485)<br/>StorageDead(_483)<br/>StorageDead(_481)<br/>StorageDead(_480)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb202__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">202</td></tr><tr><td align="left" balign="left">StorageDead(_503)<br/>StorageDead(_501)<br/>StorageDead(_492)<br/>StorageDead(_489)<br/>StorageDead(_487)<br/>StorageDead(_485)<br/>StorageDead(_483)<br/>StorageDead(_481)<br/></td></tr><tr><td align="left">_479 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _480)</td></tr></table>>];
    bb203__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">203</td></tr><tr><td align="left" balign="left">StorageDead(_480)<br/>_504 = discriminant(_479)<br/></td></tr><tr><td align="left">switchInt(move _504)</td></tr></table>>];
    bb204__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">204</td></tr><tr><td align="left" balign="left">StorageLive(_508)<br/>_508 = ((_479 as Continue).0: ())<br/>_478 = _508<br/>StorageDead(_508)<br/>_730 = discriminant(_479)<br/>StorageDead(_502)<br/>StorageDead(_493)<br/>StorageDead(_490)<br/>StorageDead(_488)<br/>StorageDead(_486)<br/>StorageDead(_484)<br/>StorageDead(_482)<br/>StorageDead(_479)<br/>StorageDead(_478)<br/>_456 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb205__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">205</td></tr><tr><td align="left" balign="left">StorageLive(_505)<br/>_505 = move ((_479 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_507)<br/>_507 = move _505<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _507)</td></tr></table>>];
    bb206__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">206</td></tr><tr><td align="left" balign="left">StorageDead(_507)<br/>StorageDead(_505)<br/>_744 = discriminant(_479)<br/>StorageDead(_502)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb207__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">207</td></tr><tr><td align="left" balign="left">StorageDead(_459)<br/>StorageDead(_458)<br/>StorageLive(_509)<br/>StorageLive(_510)<br/>StorageLive(_511)<br/>StorageLive(_512)<br/>_512 = _388<br/>StorageLive(_513)<br/>StorageLive(_514)<br/>_666 = const _<br/>_514 = &amp;(*_666)<br/>_513 = &amp;(*_514)<br/>StorageLive(_516)<br/>StorageLive(_517)<br/>StorageLive(_518)<br/>_518 = &amp;mut (*_347)<br/></td></tr><tr><td align="left">_517 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _518)</td></tr></table>>];
    bb208__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">208</td></tr><tr><td align="left" balign="left">_516 = &amp;mut (*_517)<br/>StorageDead(_518)<br/>StorageLive(_519)<br/>StorageLive(_520)<br/>_520 = &amp;mut (*_342)<br/>_519 = move _520 as &amp;mut dyn state::spot_market::SpotBalance (PointerCoercion(Unsize))<br/>StorageDead(_520)<br/></td></tr><tr><td align="left">_511 = update_spot_balances(move _512, move _513, move _516, move _519, const false)</td></tr></table>>];
    bb209__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">209</td></tr><tr><td align="left" balign="left">StorageDead(_519)<br/>StorageDead(_516)<br/>StorageDead(_513)<br/>StorageDead(_512)<br/></td></tr><tr><td align="left">_510 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _511)</td></tr></table>>];
    bb210__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">210</td></tr><tr><td align="left" balign="left">StorageDead(_511)<br/>_521 = discriminant(_510)<br/></td></tr><tr><td align="left">switchInt(move _521)</td></tr></table>>];
    bb211__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">211</td></tr><tr><td align="left" balign="left">StorageLive(_525)<br/>_525 = ((_510 as Continue).0: ())<br/>_509 = _525<br/>StorageDead(_525)<br/>StorageDead(_517)<br/>StorageDead(_514)<br/>StorageDead(_510)<br/>StorageDead(_509)<br/>StorageLive(_526)<br/>StorageLive(_527)<br/>StorageLive(_528)<br/>StorageLive(_529)<br/>_529 = &amp;(*_405)<br/>StorageLive(_530)<br/>StorageLive(_531)<br/>_531 = &amp;_433<br/>_530 = &amp;(*_531)<br/>StorageLive(_532)<br/>StorageLive(_533)<br/>_533 = &amp;_446<br/>_532 = &amp;(*_533)<br/>StorageLive(_534)<br/>StorageLive(_535)<br/>StorageLive(_536)<br/>StorageLive(_537)<br/>_693 = deref_copy (_1.1: &amp;mut instructions::keeper::ForceDeleteUser&lt;'_&gt;)<br/>_537 = &amp;((*_693).4: anchor_lang::prelude::Signer&lt;'_&gt;)<br/></td></tr><tr><td align="left">_536 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::ToAccountInfo&lt;'_&gt;&gt;::to_account_info(move _537)</td></tr></table>>];
    bb212__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">212</td></tr><tr><td align="left" balign="left">StorageLive(_522)<br/>_522 = ((_510 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_524)<br/>_524 = _522<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _524)</td></tr></table>>];
    bb213__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">213</td></tr><tr><td align="left" balign="left">StorageDead(_524)<br/>StorageDead(_522)<br/>StorageDead(_517)<br/>StorageDead(_514)<br/>StorageDead(_510)<br/>StorageDead(_509)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb214__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">214</td></tr><tr><td align="left" balign="left">StorageDead(_537)<br/>_535 = &amp;_536<br/>_534 = &amp;(*_535)<br/>StorageLive(_538)<br/>StorageLive(_539)<br/>StorageLive(_540)<br/>StorageLive(_541)<br/>_541 = _388<br/></td></tr><tr><td align="left">_540 = &lt;u128 as Cast&gt;::cast::&lt;u64&gt;(move _541)</td></tr></table>>];
    bb215__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">215</td></tr><tr><td align="left" balign="left">StorageDead(_541)<br/></td></tr><tr><td align="left">_539 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _540)</td></tr></table>>];
    bb216__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">216</td></tr><tr><td align="left" balign="left">StorageDead(_540)<br/>_542 = discriminant(_539)<br/></td></tr><tr><td align="left">switchInt(move _542)</td></tr></table>>];
    bb217__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">217</td></tr><tr><td align="left" balign="left">StorageLive(_546)<br/>_546 = ((_539 as Continue).0: u64)<br/>_538 = _546<br/>StorageDead(_546)<br/>StorageLive(_547)<br/>StorageLive(_548)<br/>_548 = &amp;_419<br/>_547 = &amp;(*_548)<br/>StorageLive(_549)<br/>_549 = Option::&lt;&amp;mut Peekable&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;&gt;::None<br/></td></tr><tr><td align="left">_528 = receive(move _529, move _530, move _532, move _534, move _538, move _547, move _549)</td></tr></table>>];
    bb218__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">218</td></tr><tr><td align="left" balign="left">StorageLive(_543)<br/>_543 = ((_539 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_545)<br/>_545 = _543<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _545)</td></tr></table>>];
    bb219__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">219</td></tr><tr><td align="left" balign="left">StorageDead(_545)<br/>StorageDead(_543)<br/>StorageDead(_538)<br/>StorageDead(_534)<br/>StorageDead(_532)<br/>StorageDead(_530)<br/>StorageDead(_529)<br/>StorageDead(_528)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb220__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">220</td></tr><tr><td align="left" balign="left">StorageDead(_549)<br/>StorageDead(_547)<br/>StorageDead(_538)<br/>StorageDead(_534)<br/>StorageDead(_532)<br/>StorageDead(_530)<br/>StorageDead(_529)<br/></td></tr><tr><td align="left">_527 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _528)</td></tr></table>>];
    bb221__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">221</td></tr><tr><td align="left" balign="left">StorageDead(_528)<br/>_550 = discriminant(_527)<br/></td></tr><tr><td align="left">switchInt(move _550)</td></tr></table>>];
    bb222__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">222</td></tr><tr><td align="left" balign="left">StorageLive(_554)<br/>_554 = ((_527 as Continue).0: ())<br/>_526 = _554<br/>StorageDead(_554)<br/>_732 = discriminant(_527)<br/>StorageDead(_548)<br/>StorageDead(_539)<br/></td></tr><tr><td align="left">drop(_536)</td></tr></table>>];
    bb223__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">223</td></tr><tr><td align="left" balign="left">StorageLive(_551)<br/>_551 = move ((_527 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_553)<br/>_553 = move _551<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _553)</td></tr></table>>];
    bb224__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">224</td></tr><tr><td align="left" balign="left">StorageDead(_553)<br/>StorageDead(_551)<br/>_742 = discriminant(_527)<br/>StorageDead(_548)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb225__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">225</td></tr><tr><td align="left" balign="left">StorageDead(_536)<br/>StorageDead(_535)<br/>StorageDead(_533)<br/>StorageDead(_531)<br/>StorageDead(_527)<br/>StorageDead(_526)<br/>_456 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb226__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">226</td></tr><tr><td align="left" balign="left">StorageDead(_457)<br/>StorageDead(_456)<br/>StorageLive(_555)<br/>StorageLive(_556)<br/>StorageLive(_557)<br/>StorageLive(_558)<br/>_558 = &amp;mut _446<br/></td></tr><tr><td align="left">_557 = anchor_lang::prelude::InterfaceAccount::&lt;'_, anchor_spl::token_interface::TokenAccount&gt;::reload(move _558)</td></tr></table>>];
    bb227__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">227</td></tr><tr><td align="left" balign="left">StorageDead(_558)<br/></td></tr><tr><td align="left">_556 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _557)</td></tr></table>>];
    bb228__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">228</td></tr><tr><td align="left" balign="left">StorageDead(_557)<br/>_559 = discriminant(_556)<br/></td></tr><tr><td align="left">switchInt(move _559)</td></tr></table>>];
    bb229__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">229</td></tr><tr><td align="left" balign="left">StorageLive(_563)<br/>_563 = ((_556 as Continue).0: ())<br/>_555 = _563<br/>StorageDead(_563)<br/>_734 = discriminant(_556)<br/>StorageDead(_556)<br/>StorageDead(_555)<br/>StorageLive(_564)<br/>StorageLive(_565)<br/>StorageLive(_566)<br/>StorageLive(_567)<br/>StorageLive(_568)<br/>StorageLive(_569)<br/>_569 = &amp;(*_347)<br/></td></tr><tr><td align="left">_568 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _569)</td></tr></table>>];
    bb230__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">230</td></tr><tr><td align="left" balign="left">StorageLive(_560)<br/>_560 = move ((_556 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_562)<br/>_562 = move _560<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _562)</td></tr></table>>];
    bb231__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">231</td></tr><tr><td align="left" balign="left">StorageDead(_562)<br/>StorageDead(_560)<br/>_740 = discriminant(_556)<br/>StorageDead(_556)<br/>StorageDead(_555)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb232__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">232</td></tr><tr><td align="left" balign="left">_567 = &amp;(*_568)<br/>StorageDead(_569)<br/>StorageLive(_570)<br/>StorageLive(_571)<br/>StorageLive(_572)<br/>StorageLive(_573)<br/>StorageLive(_574)<br/>_574 = &amp;_446<br/></td></tr><tr><td align="left">_573 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _574)</td></tr></table>>];
    bb233__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">233</td></tr><tr><td align="left" balign="left">_572 = &amp;(*_573)<br/></td></tr><tr><td align="left">_571 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _572)</td></tr></table>>];
    bb234__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">234</td></tr><tr><td align="left" balign="left">StorageDead(_574)<br/>StorageDead(_572)<br/>_570 = ((*_571).2: u64)<br/></td></tr><tr><td align="left">_566 = validate_spot_market_vault_amount(move _567, move _570)</td></tr></table>>];
    bb235__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">235</td></tr><tr><td align="left" balign="left">StorageDead(_570)<br/>StorageDead(_567)<br/></td></tr><tr><td align="left">_565 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _566)</td></tr></table>>];
    bb236__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">236</td></tr><tr><td align="left" balign="left">StorageDead(_566)<br/>_575 = discriminant(_565)<br/></td></tr><tr><td align="left">switchInt(move _575)</td></tr></table>>];
    bb237__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">237</td></tr><tr><td align="left" balign="left">StorageLive(_579)<br/>_579 = ((_565 as Continue).0: i64)<br/>_564 = _579<br/>StorageDead(_579)<br/>StorageDead(_573)<br/>StorageDead(_571)<br/>StorageDead(_568)<br/>StorageDead(_565)<br/>StorageDead(_564)<br/>_336 = const ()<br/>StorageDead(_446)<br/>StorageDead(_443)<br/>StorageDead(_433)<br/>StorageDead(_427)<br/>StorageDead(_419)<br/>StorageDead(_417)<br/>StorageDead(_416)<br/>StorageDead(_406)<br/>StorageDead(_405)<br/>StorageDead(_401)<br/>StorageDead(_400)<br/>StorageDead(_388)<br/>StorageDead(_359)<br/></td></tr><tr><td align="left">drop(_348)</td></tr></table>>];
    bb238__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">238</td></tr><tr><td align="left" balign="left">StorageLive(_576)<br/>_576 = ((_565 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_578)<br/>_578 = _576<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _578)</td></tr></table>>];
    bb239__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">239</td></tr><tr><td align="left" balign="left">StorageDead(_578)<br/>StorageDead(_576)<br/>StorageDead(_573)<br/>StorageDead(_571)<br/>StorageDead(_568)<br/>StorageDead(_565)<br/>StorageDead(_564)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb240__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">240</td></tr><tr><td align="left" balign="left">StorageDead(_348)<br/>StorageDead(_347)<br/>StorageDead(_342)<br/>StorageDead(_339)<br/>StorageDead(_337)<br/>StorageDead(_336)<br/>_335 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb241__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">241</td></tr><tr><td align="left" balign="left">_583 = &amp;(*_584)<br/>StorageDead(_585)<br/>StorageLive(_586)<br/>StorageLive(_587)<br/>StorageLive(_588)<br/>_588 = &amp;(*_98)<br/></td></tr><tr><td align="left">_587 = &lt;RefMut&lt;'_, UserStats&gt; as Deref&gt;::deref(move _588)</td></tr></table>>];
    bb242__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">242</td></tr><tr><td align="left" balign="left">_586 = &amp;(*_587)<br/>StorageDead(_588)<br/>StorageLive(_589)<br/>StorageLive(_590)<br/>StorageLive(_591)<br/>StorageLive(_592)<br/>_694 = deref_copy (_1.1: &amp;mut instructions::keeper::ForceDeleteUser&lt;'_&gt;)<br/>_592 = &amp;((*_694).2: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_695 = deref_copy (*_592)<br/>_764 = (((_695.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_591 = &amp;(*_764)<br/></td></tr><tr><td align="left">_590 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _591)</td></tr></table>>];
    bb243__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">243</td></tr><tr><td align="left" balign="left">_589 = &amp;(*_590)<br/>StorageDead(_591)<br/>StorageLive(_593)<br/>StorageLive(_594)<br/>StorageLive(_595)<br/>StorageLive(_596)<br/></td></tr><tr><td align="left">_596 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb244__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">244</td></tr><tr><td align="left">_595 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _596)</td></tr></table>>];
    bb245__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">245</td></tr><tr><td align="left" balign="left">_703 = const true<br/>_704 = const true<br/>StorageDead(_596)<br/>_597 = discriminant(_595)<br/></td></tr><tr><td align="left">switchInt(move _597)</td></tr></table>>];
    bb246__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">246</td></tr><tr><td align="left" balign="left">StorageLive(_601)<br/>_601 = move ((_595 as Continue).0: anchor_lang::prelude::Clock)<br/>_594 = move _601<br/>StorageDead(_601)<br/>_593 = (_594.4: i64)<br/></td></tr><tr><td align="left">_582 = validate_user_deletion(move _583, move _586, move _589, move _593)</td></tr></table>>];
    bb247__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">247</td></tr><tr><td align="left" balign="left">StorageLive(_598)<br/>_598 = move ((_595 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_600)<br/>_600 = move _598<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _600)</td></tr></table>>];
    bb248__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">248</td></tr><tr><td align="left" balign="left">StorageDead(_600)<br/>StorageDead(_598)<br/>StorageDead(_593)<br/>StorageDead(_589)<br/>StorageDead(_586)<br/>StorageDead(_583)<br/>StorageDead(_582)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb249__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">249</td></tr><tr><td align="left" balign="left">StorageDead(_593)<br/>StorageDead(_589)<br/>StorageDead(_586)<br/>StorageDead(_583)<br/></td></tr><tr><td align="left">_581 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _582)</td></tr></table>>];
    bb250__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">250</td></tr><tr><td align="left" balign="left">StorageDead(_582)<br/>_602 = discriminant(_581)<br/></td></tr><tr><td align="left">switchInt(move _602)</td></tr></table>>];
    bb251__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">251</td></tr><tr><td align="left" balign="left">StorageLive(_606)<br/>_606 = ((_581 as Continue).0: ())<br/>_580 = _606<br/>StorageDead(_606)<br/>_736 = discriminant(_595)<br/>_703 = const false<br/>_704 = const false<br/>StorageDead(_595)<br/>StorageDead(_594)<br/>StorageDead(_592)<br/>StorageDead(_590)<br/>StorageDead(_587)<br/>StorageDead(_584)<br/>StorageDead(_581)<br/>StorageDead(_580)<br/>StorageLive(_607)<br/>StorageLive(_608)<br/>StorageLive(_609)<br/>StorageLive(_610)<br/>StorageLive(_611)<br/>StorageLive(_612)<br/>StorageLive(_613)<br/>StorageLive(_614)<br/>_614 = &amp;(*_98)<br/></td></tr><tr><td align="left">_613 = &lt;RefMut&lt;'_, UserStats&gt; as Deref&gt;::deref(move _614)</td></tr></table>>];
    bb252__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">252</td></tr><tr><td align="left" balign="left">StorageLive(_603)<br/>_603 = ((_581 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_605)<br/>_605 = _603<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _605)</td></tr></table>>];
    bb253__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">253</td></tr><tr><td align="left" balign="left">StorageDead(_605)<br/>StorageDead(_603)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb254__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">254</td></tr><tr><td align="left" balign="left">StorageDead(_614)<br/>_612 = ((*_613).11: u16)<br/></td></tr><tr><td align="left">_611 = core::num::&lt;impl u16&gt;::checked_sub(move _612, const 1_u16)</td></tr></table>>];
    bb255__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">255</td></tr><tr><td align="left" balign="left">StorageDead(_612)<br/>StorageLive(_615)<br/>_615 = {closure@programs/drift/src/error.rs:658:9: 658:11}<br/></td></tr><tr><td align="left">_610 = Option::&lt;u16&gt;::ok_or_else::&lt;error::ErrorCode, {closure@programs/drift/src/error.rs:658:9: 658:11}&gt;(move _611, move _615)</td></tr></table>>];
    bb256__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">256</td></tr><tr><td align="left" balign="left">StorageDead(_615)<br/>StorageDead(_611)<br/></td></tr><tr><td align="left">_609 = &lt;std::result::Result&lt;u16, error::ErrorCode&gt; as Try&gt;::branch(move _610)</td></tr></table>>];
    bb257__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">257</td></tr><tr><td align="left" balign="left">StorageDead(_610)<br/>_616 = discriminant(_609)<br/></td></tr><tr><td align="left">switchInt(move _616)</td></tr></table>>];
    bb258__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">258</td></tr><tr><td align="left" balign="left">StorageLive(_620)<br/>_620 = ((_609 as Continue).0: u16)<br/>_608 = _620<br/>StorageDead(_620)<br/>StorageLive(_621)<br/>StorageLive(_622)<br/>_622 = &amp;mut (*_98)<br/></td></tr><tr><td align="left">_621 = &lt;RefMut&lt;'_, UserStats&gt; as DerefMut&gt;::deref_mut(move _622)</td></tr></table>>];
    bb259__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">259</td></tr><tr><td align="left" balign="left">StorageLive(_617)<br/>_617 = ((_609 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_619)<br/>_619 = _617<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _619)</td></tr></table>>];
    bb260__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">260</td></tr><tr><td align="left" balign="left">StorageDead(_619)<br/>StorageDead(_617)<br/>StorageDead(_608)<br/>StorageDead(_613)<br/>StorageDead(_609)<br/>StorageDead(_607)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb261__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">261</td></tr><tr><td align="left" balign="left">StorageDead(_622)<br/>((*_621).11: u16) = move _608<br/>_607 = const ()<br/>StorageDead(_608)<br/>StorageDead(_621)<br/>StorageDead(_613)<br/>StorageDead(_609)<br/>StorageDead(_607)<br/>StorageLive(_623)<br/>_696 = deref_copy (_1.1: &amp;mut instructions::keeper::ForceDeleteUser&lt;'_&gt;)<br/>_623 = &amp;mut ((*_696).2: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>StorageLive(_624)<br/>StorageLive(_625)<br/>StorageLive(_626)<br/>StorageLive(_627)<br/>StorageLive(_628)<br/>StorageLive(_629)<br/>StorageLive(_630)<br/>StorageLive(_631)<br/>_697 = deref_copy (*_623)<br/>_765 = (((_697.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_631 = &amp;(*_765)<br/></td></tr><tr><td align="left">_630 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _631)</td></tr></table>>];
    bb262__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">262</td></tr><tr><td align="left" balign="left">StorageDead(_631)<br/>_629 = ((*_630).9: u64)<br/></td></tr><tr><td align="left">_628 = core::num::&lt;impl u64&gt;::checked_sub(move _629, const 1_u64)</td></tr></table>>];
    bb263__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">263</td></tr><tr><td align="left" balign="left">StorageDead(_629)<br/>StorageLive(_632)<br/>_632 = {closure@programs/drift/src/error.rs:658:9: 658:11}<br/></td></tr><tr><td align="left">_627 = Option::&lt;u64&gt;::ok_or_else::&lt;error::ErrorCode, {closure@programs/drift/src/error.rs:658:9: 658:11}&gt;(move _628, move _632)</td></tr></table>>];
    bb264__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">264</td></tr><tr><td align="left" balign="left">StorageDead(_632)<br/>StorageDead(_628)<br/></td></tr><tr><td align="left">_626 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _627)</td></tr></table>>];
    bb265__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">265</td></tr><tr><td align="left" balign="left">StorageDead(_627)<br/>_633 = discriminant(_626)<br/></td></tr><tr><td align="left">switchInt(move _633)</td></tr></table>>];
    bb266__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">266</td></tr><tr><td align="left" balign="left">StorageLive(_637)<br/>_637 = ((_626 as Continue).0: u64)<br/>_625 = _637<br/>StorageDead(_637)<br/>StorageLive(_638)<br/>StorageLive(_639)<br/>_698 = deref_copy (*_623)<br/>_766 = (((_698.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_639 = &amp;mut (*_766)<br/></td></tr><tr><td align="left">_638 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as DerefMut&gt;::deref_mut(move _639)</td></tr></table>>];
    bb267__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">267</td></tr><tr><td align="left" balign="left">StorageLive(_634)<br/>_634 = ((_626 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_636)<br/>_636 = _634<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _636)</td></tr></table>>];
    bb268__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">268</td></tr><tr><td align="left" balign="left">StorageDead(_636)<br/>StorageDead(_634)<br/>StorageDead(_625)<br/>StorageDead(_630)<br/>StorageDead(_626)<br/>StorageDead(_624)<br/>StorageDead(_623)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb269__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">269</td></tr><tr><td align="left" balign="left">StorageDead(_639)<br/>((*_638).9: u64) = move _625<br/>_624 = const ()<br/>StorageDead(_625)<br/>StorageDead(_638)<br/>StorageDead(_630)<br/>StorageDead(_626)<br/>StorageDead(_624)<br/>StorageLive(_640)<br/>StorageLive(_641)<br/>StorageLive(_642)<br/>StorageLive(_643)<br/>StorageLive(_644)<br/>StorageLive(_645)<br/>StorageLive(_646)<br/>StorageLive(_647)<br/>StorageLive(_648)<br/>StorageLive(_649)<br/>StorageLive(_650)<br/>StorageLive(_651)<br/>StorageLive(_652)<br/>StorageLive(_653)<br/>StorageLive(_654)<br/>_654 = _119<br/>StorageLive(_655)<br/>_699 = deref_copy (_1.1: &amp;mut instructions::keeper::ForceDeleteUser&lt;'_&gt;)<br/>_700 = deref_copy (((*_699).3: anchor_lang::prelude::AccountInfo&lt;'_&gt;).0: &amp;anchor_lang::prelude::Pubkey)<br/>_655 = (*_700)<br/>StorageLive(_656)<br/>_656 = _84<br/>StorageLive(_657)<br/>StorageLive(_658)<br/>StorageLive(_659)<br/>_659 = &amp;(*_86)<br/></td></tr><tr><td align="left">_658 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _659)</td></tr></table>>];
    bb270__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">270</td></tr><tr><td align="left" balign="left">StorageDead(_659)<br/>_657 = ((*_658).18: u16)<br/>StorageLive(_660)<br/>StorageLive(_661)<br/>StorageLive(_662)<br/>StorageLive(_663)<br/>_701 = deref_copy (_1.1: &amp;mut instructions::keeper::ForceDeleteUser&lt;'_&gt;)<br/>_663 = &amp;((*_701).4: anchor_lang::prelude::Signer&lt;'_&gt;)<br/></td></tr><tr><td align="left">_662 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as Deref&gt;::deref(move _663)</td></tr></table>>];
    bb271__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">271</td></tr><tr><td align="left" balign="left">StorageDead(_663)<br/>_702 = deref_copy ((*_662).0: &amp;anchor_lang::prelude::Pubkey)<br/>_661 = (*_702)<br/>_660 = Option::&lt;anchor_lang::prelude::Pubkey&gt;::Some(move _661)<br/>StorageDead(_661)<br/>_653 = DeleteUserRecord { ts: move _654, user_authority: move _655, user: move _656, sub_account_id: move _657, keeper: move _660 }<br/>StorageDead(_660)<br/>StorageDead(_657)<br/>StorageDead(_656)<br/>StorageDead(_655)<br/>StorageDead(_654)<br/>_652 = &amp;_653<br/>_651 = &amp;(*_652)<br/></td></tr><tr><td align="left">_650 = &lt;DeleteUserRecord as anchor_lang::Event&gt;::data(move _651)</td></tr></table>>];
    bb272__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">272</td></tr><tr><td align="left" balign="left">StorageDead(_651)<br/>_649 = &amp;_650<br/>_648 = &amp;(*_649)<br/></td></tr><tr><td align="left">_647 = &lt;Vec&lt;u8&gt; as Deref&gt;::deref(move _648)</td></tr></table>>];
    bb273__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">273</td></tr><tr><td align="left" balign="left">_646 = &amp;(*_647)<br/>StorageDead(_648)<br/>_645 = [move _646]<br/>StorageDead(_646)<br/>_644 = &amp;_645<br/>_643 = &amp;(*_644)<br/>_642 = move _643 as &amp;[&amp;[u8]] (PointerCoercion(Unsize))<br/>StorageDead(_643)<br/></td></tr><tr><td align="left">_641 = solana_program::log::sol_log_data(move _642)</td></tr></table>>];
    bb274__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">274</td></tr><tr><td align="left" balign="left">StorageDead(_642)<br/></td></tr><tr><td align="left">drop(_650)</td></tr></table>>];
    bb275__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">275</td></tr><tr><td align="left" balign="left">StorageDead(_662)<br/>StorageDead(_658)<br/>StorageDead(_653)<br/>StorageDead(_652)<br/>StorageDead(_650)<br/>StorageDead(_649)<br/>StorageDead(_647)<br/>StorageDead(_645)<br/>StorageDead(_644)<br/>StorageDead(_641)<br/>_640 = const ()<br/>StorageDead(_640)<br/>StorageLive(_664)<br/>_664 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _664)<br/>StorageDead(_664)<br/>StorageDead(_623)<br/>StorageDead(_178)<br/>StorageDead(_160)<br/></td></tr><tr><td align="left">drop(_130)</td></tr></table>>];
    bb276__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">276</td></tr><tr><td align="left" balign="left">StorageDead(_130)<br/></td></tr><tr><td align="left">drop(_129)</td></tr></table>>];
    bb277__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">277</td></tr><tr><td align="left" balign="left">StorageDead(_129)<br/></td></tr><tr><td align="left">drop(_128)</td></tr></table>>];
    bb278__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">278</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>StorageDead(_119)<br/>StorageDead(_110)<br/></td></tr><tr><td align="left">drop(_99)</td></tr></table>>];
    bb279__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">279</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/>StorageDead(_98)<br/></td></tr><tr><td align="left">drop(_87)</td></tr></table>>];
    bb280__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">280</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>StorageDead(_86)<br/>StorageDead(_84)<br/>StorageDead(_81)<br/>StorageDead(_80)<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb281__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">281</td></tr><tr><td align="left" balign="left">StorageDead(_539)<br/></td></tr><tr><td align="left">drop(_536)</td></tr></table>>];
    bb282__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">282</td></tr><tr><td align="left" balign="left">StorageDead(_536)<br/>StorageDead(_535)<br/>StorageDead(_533)<br/>StorageDead(_531)<br/>StorageDead(_527)<br/>StorageDead(_526)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb283__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">283</td></tr><tr><td align="left" balign="left">StorageDead(_493)<br/>StorageDead(_490)<br/>StorageDead(_488)<br/>StorageDead(_486)<br/>StorageDead(_484)<br/>StorageDead(_482)<br/>StorageDead(_479)<br/>StorageDead(_478)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb284__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">284</td></tr><tr><td align="left" balign="left">StorageDead(_457)<br/>StorageDead(_456)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb285__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">285</td></tr><tr><td align="left" balign="left">StorageDead(_446)<br/>StorageDead(_443)<br/>StorageDead(_433)<br/>StorageDead(_427)<br/>StorageDead(_419)<br/>StorageDead(_417)<br/>StorageDead(_416)<br/>StorageDead(_406)<br/>StorageDead(_405)<br/>StorageDead(_401)<br/>StorageDead(_400)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb286__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">286</td></tr><tr><td align="left" balign="left">StorageDead(_388)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb287__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">287</td></tr><tr><td align="left" balign="left">StorageDead(_359)<br/></td></tr><tr><td align="left">drop(_348)</td></tr></table>>];
    bb288__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">288</td></tr><tr><td align="left" balign="left">StorageDead(_348)<br/>StorageDead(_347)<br/>StorageDead(_342)<br/>StorageDead(_339)<br/>StorageDead(_337)<br/>StorageDead(_336)<br/>StorageDead(_334)<br/>StorageDead(_332)<br/>StorageDead(_328)<br/>StorageDead(_327)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb289__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">289</td></tr><tr><td align="left" balign="left">StorageDead(_236)<br/>StorageDead(_235)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb290__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">290</td></tr><tr><td align="left" balign="left">StorageDead(_178)<br/>StorageDead(_160)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb291__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">291</td></tr><tr><td align="left">drop(_130)</td></tr></table>>];
    bb292__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">292</td></tr><tr><td align="left" balign="left">StorageDead(_130)<br/></td></tr><tr><td align="left">drop(_129)</td></tr></table>>];
    bb293__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">293</td></tr><tr><td align="left" balign="left">StorageDead(_129)<br/></td></tr><tr><td align="left">drop(_128)</td></tr></table>>];
    bb294__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">294</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb295__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">295</td></tr><tr><td align="left" balign="left">StorageDead(_148)<br/>StorageDead(_147)<br/>StorageDead(_144)<br/>StorageDead(_143)<br/></td></tr><tr><td align="left">drop(_141)</td></tr></table>>];
    bb296__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">296</td></tr><tr><td align="left" balign="left">StorageDead(_141)<br/>StorageDead(_140)<br/>StorageDead(_136)<br/>StorageDead(_135)<br/>StorageDead(_132)<br/>StorageDead(_131)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb297__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">297</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb298__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">298</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/></td></tr><tr><td align="left">drop(_99)</td></tr></table>>];
    bb299__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">299</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/>StorageDead(_98)<br/></td></tr><tr><td align="left">drop(_87)</td></tr></table>>];
    bb300__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">300</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>StorageDead(_86)<br/>StorageDead(_84)<br/>StorageDead(_81)<br/>StorageDead(_80)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb301__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">301</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb302__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">302</td></tr><tr><td align="left">return</td></tr></table>>];
    bb303__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">303 (cleanup)</td></tr><tr><td align="left">drop(_650)</td></tr></table>>];
    bb304__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">304 (cleanup)</td></tr><tr><td align="left">drop(_536)</td></tr></table>>];
    bb305__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">305 (cleanup)</td></tr><tr><td align="left">drop(_348)</td></tr></table>>];
    bb306__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">306 (cleanup)</td></tr><tr><td align="left">drop(_279)</td></tr></table>>];
    bb307__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">307 (cleanup)</td></tr><tr><td align="left">drop(_260)</td></tr></table>>];
    bb308__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">308 (cleanup)</td></tr><tr><td align="left">drop(_215)</td></tr></table>>];
    bb309__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">309 (cleanup)</td></tr><tr><td align="left">drop(_196)</td></tr></table>>];
    bb310__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">310 (cleanup)</td></tr><tr><td align="left">drop(_141)</td></tr></table>>];
    bb311__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">311 (cleanup)</td></tr><tr><td align="left">drop(_130)</td></tr></table>>];
    bb312__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">312 (cleanup)</td></tr><tr><td align="left">drop(_129)</td></tr></table>>];
    bb313__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">313 (cleanup)</td></tr><tr><td align="left">drop(_128)</td></tr></table>>];
    bb314__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">314 (cleanup)</td></tr><tr><td align="left">drop(_144)</td></tr></table>>];
    bb315__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">315 (cleanup)</td></tr><tr><td align="left">drop(_141)</td></tr></table>>];
    bb316__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">316 (cleanup)</td></tr><tr><td align="left">drop(_99)</td></tr></table>>];
    bb317__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">317 (cleanup)</td></tr><tr><td align="left">drop(_87)</td></tr></table>>];
    bb318__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">318 (cleanup)</td></tr><tr><td align="left">drop(_57)</td></tr></table>>];
    bb319__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">319 (cleanup)</td></tr><tr><td align="left">drop(_19)</td></tr></table>>];
    bb320__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">320 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb321__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">321</td></tr><tr><td align="left" balign="left">_738 = discriminant(_595)<br/>_703 = const false<br/>_704 = const false<br/>StorageDead(_595)<br/>StorageDead(_594)<br/>StorageDead(_592)<br/>StorageDead(_590)<br/>StorageDead(_587)<br/>StorageDead(_584)<br/>StorageDead(_581)<br/>StorageDead(_580)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb322__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">322 (cleanup)</td></tr><tr><td align="left" balign="left">_750 = discriminant(_595)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb323__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">323 (cleanup)</td></tr><tr><td align="left" balign="left">_751 = discriminant(_556)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb324__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">324 (cleanup)</td></tr><tr><td align="left" balign="left">_752 = discriminant(_527)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb325__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">325 (cleanup)</td></tr><tr><td align="left" balign="left">_753 = discriminant(_479)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb326__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">326 (cleanup)</td></tr><tr><td align="left" balign="left">_754 = discriminant(_349)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb327__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">327 (cleanup)</td></tr><tr><td align="left" balign="left">_755 = discriminant(_300)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb328__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">328 (cleanup)</td></tr><tr><td align="left" balign="left">_757 = discriminant(_132)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb329__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">329 (cleanup)</td></tr><tr><td align="left" balign="left">_758 = discriminant(_121)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb330__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">330 (cleanup)</td></tr><tr><td align="left" balign="left">_759 = discriminant(_112)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb331__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">331 (cleanup)</td></tr><tr><td align="left" balign="left">_760 = discriminant(_100)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb332__0_1379 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">332 (cleanup)</td></tr><tr><td align="left" balign="left">_761 = discriminant(_88)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_1379 -> bb1__0_1379 [label="return"];
    bb1__0_1379 -> bb2__0_1379 [label="return"];
    bb2__0_1379 -> bb3__0_1379 [label="return"];
    bb3__0_1379 -> bb5__0_1379 [label="0"];
    bb3__0_1379 -> bb4__0_1379 [label="otherwise"];
    bb4__0_1379 -> bb13__0_1379 [label=""];
    bb5__0_1379 -> bb6__0_1379 [label="return"];
    bb6__0_1379 -> bb7__0_1379 [label="return"];
    bb7__0_1379 -> bb8__0_1379 [label="return"];
    bb8__0_1379 -> bb9__0_1379 [label="return"];
    bb8__0_1379 -> bb319__0_1379 [label="unwind"];
    bb9__0_1379 -> bb10__0_1379 [label="return"];
    bb9__0_1379 -> bb319__0_1379 [label="unwind"];
    bb10__0_1379 -> bb11__0_1379 [label="return"];
    bb10__0_1379 -> bb320__0_1379 [label="unwind"];
    bb11__0_1379 -> bb12__0_1379 [label="return"];
    bb12__0_1379 -> bb13__0_1379 [label=""];
    bb13__0_1379 -> bb14__0_1379 [label="return"];
    bb14__0_1379 -> bb15__0_1379 [label="0"];
    bb14__0_1379 -> bb17__0_1379 [label="1"];
    bb14__0_1379 -> bb16__0_1379 [label="otherwise"];
    bb15__0_1379 -> bb19__0_1379 [label="return"];
    bb17__0_1379 -> bb18__0_1379 [label="return"];
    bb18__0_1379 -> bb302__0_1379 [label=""];
    bb19__0_1379 -> bb20__0_1379 [label="return"];
    bb20__0_1379 -> bb22__0_1379 [label="0"];
    bb20__0_1379 -> bb21__0_1379 [label="otherwise"];
    bb21__0_1379 -> bb30__0_1379 [label=""];
    bb22__0_1379 -> bb23__0_1379 [label="return"];
    bb23__0_1379 -> bb24__0_1379 [label="return"];
    bb24__0_1379 -> bb25__0_1379 [label="return"];
    bb25__0_1379 -> bb26__0_1379 [label="return"];
    bb25__0_1379 -> bb318__0_1379 [label="unwind"];
    bb26__0_1379 -> bb27__0_1379 [label="return"];
    bb26__0_1379 -> bb318__0_1379 [label="unwind"];
    bb27__0_1379 -> bb28__0_1379 [label="return"];
    bb27__0_1379 -> bb320__0_1379 [label="unwind"];
    bb28__0_1379 -> bb29__0_1379 [label="return"];
    bb29__0_1379 -> bb30__0_1379 [label=""];
    bb30__0_1379 -> bb31__0_1379 [label="return"];
    bb31__0_1379 -> bb32__0_1379 [label="0"];
    bb31__0_1379 -> bb33__0_1379 [label="1"];
    bb31__0_1379 -> bb16__0_1379 [label="otherwise"];
    bb32__0_1379 -> bb35__0_1379 [label="return"];
    bb33__0_1379 -> bb34__0_1379 [label="return"];
    bb34__0_1379 -> bb301__0_1379 [label=""];
    bb35__0_1379 -> bb36__0_1379 [label="return"];
    bb36__0_1379 -> bb37__0_1379 [label="return"];
    bb37__0_1379 -> bb38__0_1379 [label="return"];
    bb37__0_1379 -> bb320__0_1379 [label="unwind"];
    bb38__0_1379 -> bb39__0_1379 [label="return"];
    bb38__0_1379 -> bb320__0_1379 [label="unwind"];
    bb39__0_1379 -> bb40__0_1379 [label="0"];
    bb39__0_1379 -> bb41__0_1379 [label="1"];
    bb39__0_1379 -> bb16__0_1379 [label="otherwise"];
    bb40__0_1379 -> bb43__0_1379 [label="return"];
    bb40__0_1379 -> bb317__0_1379 [label="unwind"];
    bb41__0_1379 -> bb42__0_1379 [label="return"];
    bb41__0_1379 -> bb332__0_1379 [label="unwind"];
    bb42__0_1379 -> bb300__0_1379 [label=""];
    bb43__0_1379 -> bb44__0_1379 [label="return"];
    bb43__0_1379 -> bb317__0_1379 [label="unwind"];
    bb44__0_1379 -> bb45__0_1379 [label="return"];
    bb44__0_1379 -> bb317__0_1379 [label="unwind"];
    bb45__0_1379 -> bb46__0_1379 [label="0"];
    bb45__0_1379 -> bb47__0_1379 [label="1"];
    bb45__0_1379 -> bb16__0_1379 [label="otherwise"];
    bb46__0_1379 -> bb49__0_1379 [label="return"];
    bb46__0_1379 -> bb316__0_1379 [label="unwind"];
    bb47__0_1379 -> bb48__0_1379 [label="return"];
    bb47__0_1379 -> bb331__0_1379 [label="unwind"];
    bb48__0_1379 -> bb299__0_1379 [label=""];
    bb49__0_1379 -> bb50__0_1379 [label="return"];
    bb49__0_1379 -> bb316__0_1379 [label="unwind"];
    bb50__0_1379 -> bb51__0_1379 [label="0"];
    bb50__0_1379 -> bb52__0_1379 [label="1"];
    bb50__0_1379 -> bb16__0_1379 [label="otherwise"];
    bb51__0_1379 -> bb54__0_1379 [label="return"];
    bb51__0_1379 -> bb316__0_1379 [label="unwind"];
    bb52__0_1379 -> bb53__0_1379 [label="return"];
    bb52__0_1379 -> bb330__0_1379 [label="unwind"];
    bb53__0_1379 -> bb298__0_1379 [label=""];
    bb54__0_1379 -> bb55__0_1379 [label="return"];
    bb54__0_1379 -> bb316__0_1379 [label="unwind"];
    bb55__0_1379 -> bb56__0_1379 [label="0"];
    bb55__0_1379 -> bb57__0_1379 [label="1"];
    bb55__0_1379 -> bb16__0_1379 [label="otherwise"];
    bb56__0_1379 -> bb59__0_1379 [label="return"];
    bb56__0_1379 -> bb316__0_1379 [label="unwind"];
    bb57__0_1379 -> bb58__0_1379 [label="return"];
    bb57__0_1379 -> bb329__0_1379 [label="unwind"];
    bb58__0_1379 -> bb297__0_1379 [label=""];
    bb59__0_1379 -> bb60__0_1379 [label="return"];
    bb59__0_1379 -> bb316__0_1379 [label="unwind"];
    bb60__0_1379 -> bb61__0_1379 [label="return"];
    bb60__0_1379 -> bb316__0_1379 [label="unwind"];
    bb61__0_1379 -> bb62__0_1379 [label="return"];
    bb61__0_1379 -> bb315__0_1379 [label="unwind"];
    bb62__0_1379 -> bb63__0_1379 [label="return"];
    bb62__0_1379 -> bb315__0_1379 [label="unwind"];
    bb63__0_1379 -> bb64__0_1379 [label="return"];
    bb63__0_1379 -> bb314__0_1379 [label="unwind"];
    bb64__0_1379 -> bb65__0_1379 [label="return"];
    bb64__0_1379 -> bb314__0_1379 [label="unwind"];
    bb65__0_1379 -> bb66__0_1379 [label="return"];
    bb65__0_1379 -> bb314__0_1379 [label="unwind"];
    bb66__0_1379 -> bb67__0_1379 [label="0"];
    bb66__0_1379 -> bb68__0_1379 [label="1"];
    bb66__0_1379 -> bb16__0_1379 [label="otherwise"];
    bb67__0_1379 -> bb70__0_1379 [label="return"];
    bb67__0_1379 -> bb310__0_1379 [label="unwind"];
    bb68__0_1379 -> bb69__0_1379 [label="return"];
    bb68__0_1379 -> bb328__0_1379 [label="unwind"];
    bb69__0_1379 -> bb295__0_1379 [label="return"];
    bb69__0_1379 -> bb315__0_1379 [label="unwind"];
    bb70__0_1379 -> bb71__0_1379 [label="return"];
    bb70__0_1379 -> bb311__0_1379 [label="unwind"];
    bb71__0_1379 -> bb72__0_1379 [label="return"];
    bb71__0_1379 -> bb311__0_1379 [label="unwind"];
    bb72__0_1379 -> bb73__0_1379 [label="return"];
    bb72__0_1379 -> bb311__0_1379 [label="unwind"];
    bb73__0_1379 -> bb74__0_1379 [label="return"];
    bb73__0_1379 -> bb311__0_1379 [label="unwind"];
    bb74__0_1379 -> bb75__0_1379 [label="0"];
    bb74__0_1379 -> bb76__0_1379 [label="1"];
    bb74__0_1379 -> bb16__0_1379 [label="otherwise"];
    bb75__0_1379 -> bb78__0_1379 [label="success"];
    bb75__0_1379 -> bb311__0_1379 [label="unwind"];
    bb76__0_1379 -> bb77__0_1379 [label="return"];
    bb76__0_1379 -> bb311__0_1379 [label="unwind"];
    bb77__0_1379 -> bb291__0_1379 [label=""];
    bb78__0_1379 -> bb79__0_1379 [label="success"];
    bb78__0_1379 -> bb311__0_1379 [label="unwind"];
    bb79__0_1379 -> bb81__0_1379 [label="0"];
    bb79__0_1379 -> bb80__0_1379 [label="otherwise"];
    bb80__0_1379 -> bb94__0_1379 [label=""];
    bb81__0_1379 -> bb82__0_1379 [label="return"];
    bb81__0_1379 -> bb311__0_1379 [label="unwind"];
    bb82__0_1379 -> bb83__0_1379 [label="return"];
    bb82__0_1379 -> bb311__0_1379 [label="unwind"];
    bb83__0_1379 -> bb84__0_1379 [label="return"];
    bb83__0_1379 -> bb311__0_1379 [label="unwind"];
    bb84__0_1379 -> bb85__0_1379 [label="return"];
    bb84__0_1379 -> bb309__0_1379 [label="unwind"];
    bb85__0_1379 -> bb86__0_1379 [label="return"];
    bb85__0_1379 -> bb309__0_1379 [label="unwind"];
    bb86__0_1379 -> bb87__0_1379 [label="return"];
    bb86__0_1379 -> bb311__0_1379 [label="unwind"];
    bb87__0_1379 -> bb88__0_1379 [label="return"];
    bb87__0_1379 -> bb311__0_1379 [label="unwind"];
    bb88__0_1379 -> bb89__0_1379 [label="return"];
    bb88__0_1379 -> bb311__0_1379 [label="unwind"];
    bb89__0_1379 -> bb90__0_1379 [label="return"];
    bb89__0_1379 -> bb311__0_1379 [label="unwind"];
    bb90__0_1379 -> bb91__0_1379 [label="return"];
    bb90__0_1379 -> bb308__0_1379 [label="unwind"];
    bb91__0_1379 -> bb92__0_1379 [label="return"];
    bb91__0_1379 -> bb308__0_1379 [label="unwind"];
    bb92__0_1379 -> bb93__0_1379 [label="return"];
    bb92__0_1379 -> bb311__0_1379 [label="unwind"];
    bb93__0_1379 -> bb94__0_1379 [label=""];
    bb94__0_1379 -> bb95__0_1379 [label="return"];
    bb94__0_1379 -> bb311__0_1379 [label="unwind"];
    bb95__0_1379 -> bb96__0_1379 [label="0"];
    bb95__0_1379 -> bb97__0_1379 [label="1"];
    bb95__0_1379 -> bb16__0_1379 [label="otherwise"];
    bb96__0_1379 -> bb99__0_1379 [label="return"];
    bb96__0_1379 -> bb311__0_1379 [label="unwind"];
    bb97__0_1379 -> bb98__0_1379 [label="return"];
    bb97__0_1379 -> bb311__0_1379 [label="unwind"];
    bb98__0_1379 -> bb290__0_1379 [label=""];
    bb99__0_1379 -> bb100__0_1379 [label="return"];
    bb99__0_1379 -> bb311__0_1379 [label="unwind"];
    bb100__0_1379 -> bb101__0_1379 [label="return"];
    bb100__0_1379 -> bb311__0_1379 [label="unwind"];
    bb101__0_1379 -> bb102__0_1379 [label="0"];
    bb101__0_1379 -> bb103__0_1379 [label="1"];
    bb101__0_1379 -> bb16__0_1379 [label="otherwise"];
    bb102__0_1379 -> bb106__0_1379 [label="0"];
    bb102__0_1379 -> bb105__0_1379 [label="otherwise"];
    bb103__0_1379 -> bb104__0_1379 [label="return"];
    bb103__0_1379 -> bb311__0_1379 [label="unwind"];
    bb104__0_1379 -> bb289__0_1379 [label=""];
    bb105__0_1379 -> bb119__0_1379 [label=""];
    bb106__0_1379 -> bb107__0_1379 [label="return"];
    bb106__0_1379 -> bb311__0_1379 [label="unwind"];
    bb107__0_1379 -> bb108__0_1379 [label="return"];
    bb107__0_1379 -> bb311__0_1379 [label="unwind"];
    bb108__0_1379 -> bb109__0_1379 [label="return"];
    bb108__0_1379 -> bb311__0_1379 [label="unwind"];
    bb109__0_1379 -> bb110__0_1379 [label="return"];
    bb109__0_1379 -> bb307__0_1379 [label="unwind"];
    bb110__0_1379 -> bb111__0_1379 [label="return"];
    bb110__0_1379 -> bb307__0_1379 [label="unwind"];
    bb111__0_1379 -> bb112__0_1379 [label="return"];
    bb111__0_1379 -> bb311__0_1379 [label="unwind"];
    bb112__0_1379 -> bb113__0_1379 [label="return"];
    bb112__0_1379 -> bb311__0_1379 [label="unwind"];
    bb113__0_1379 -> bb114__0_1379 [label="return"];
    bb113__0_1379 -> bb311__0_1379 [label="unwind"];
    bb114__0_1379 -> bb115__0_1379 [label="return"];
    bb114__0_1379 -> bb311__0_1379 [label="unwind"];
    bb115__0_1379 -> bb116__0_1379 [label="return"];
    bb115__0_1379 -> bb306__0_1379 [label="unwind"];
    bb116__0_1379 -> bb117__0_1379 [label="return"];
    bb116__0_1379 -> bb306__0_1379 [label="unwind"];
    bb117__0_1379 -> bb118__0_1379 [label="return"];
    bb117__0_1379 -> bb311__0_1379 [label="unwind"];
    bb118__0_1379 -> bb119__0_1379 [label=""];
    bb119__0_1379 -> bb120__0_1379 [label="return"];
    bb119__0_1379 -> bb311__0_1379 [label="unwind"];
    bb120__0_1379 -> bb121__0_1379 [label="0"];
    bb120__0_1379 -> bb122__0_1379 [label="1"];
    bb120__0_1379 -> bb16__0_1379 [label="otherwise"];
    bb121__0_1379 -> bb124__0_1379 [label="return"];
    bb121__0_1379 -> bb311__0_1379 [label="unwind"];
    bb122__0_1379 -> bb123__0_1379 [label="return"];
    bb122__0_1379 -> bb311__0_1379 [label="unwind"];
    bb123__0_1379 -> bb289__0_1379 [label=""];
    bb124__0_1379 -> bb125__0_1379 [label="return"];
    bb124__0_1379 -> bb311__0_1379 [label="unwind"];
    bb125__0_1379 -> bb126__0_1379 [label="return"];
    bb125__0_1379 -> bb311__0_1379 [label="unwind"];
    bb126__0_1379 -> bb127__0_1379 [label="0"];
    bb126__0_1379 -> bb128__0_1379 [label="1"];
    bb126__0_1379 -> bb16__0_1379 [label="otherwise"];
    bb127__0_1379 -> bb130__0_1379 [label="return"];
    bb127__0_1379 -> bb327__0_1379 [label="unwind"];
    bb128__0_1379 -> bb129__0_1379 [label="return"];
    bb128__0_1379 -> bb327__0_1379 [label="unwind"];
    bb129__0_1379 -> bb290__0_1379 [label=""];
    bb130__0_1379 -> bb131__0_1379 [label="return"];
    bb130__0_1379 -> bb311__0_1379 [label="unwind"];
    bb131__0_1379 -> bb132__0_1379 [label="return"];
    bb131__0_1379 -> bb311__0_1379 [label="unwind"];
    bb132__0_1379 -> bb133__0_1379 [label="return"];
    bb132__0_1379 -> bb311__0_1379 [label="unwind"];
    bb133__0_1379 -> bb134__0_1379 [label=""];
    bb134__0_1379 -> bb135__0_1379 [label="return"];
    bb134__0_1379 -> bb311__0_1379 [label="unwind"];
    bb135__0_1379 -> bb137__0_1379 [label="0"];
    bb135__0_1379 -> bb136__0_1379 [label="1"];
    bb135__0_1379 -> bb16__0_1379 [label="otherwise"];
    bb136__0_1379 -> bb138__0_1379 [label="return"];
    bb136__0_1379 -> bb311__0_1379 [label="unwind"];
    bb137__0_1379 -> bb241__0_1379 [label="return"];
    bb137__0_1379 -> bb311__0_1379 [label="unwind"];
    bb138__0_1379 -> bb140__0_1379 [label="0"];
    bb138__0_1379 -> bb139__0_1379 [label="otherwise"];
    bb139__0_1379 -> bb134__0_1379 [label=""];
    bb140__0_1379 -> bb141__0_1379 [label="return"];
    bb140__0_1379 -> bb311__0_1379 [label="unwind"];
    bb141__0_1379 -> bb142__0_1379 [label="return"];
    bb141__0_1379 -> bb311__0_1379 [label="unwind"];
    bb142__0_1379 -> bb143__0_1379 [label="0"];
    bb142__0_1379 -> bb144__0_1379 [label="1"];
    bb142__0_1379 -> bb16__0_1379 [label="otherwise"];
    bb143__0_1379 -> bb146__0_1379 [label="return"];
    bb143__0_1379 -> bb305__0_1379 [label="unwind"];
    bb144__0_1379 -> bb145__0_1379 [label="return"];
    bb144__0_1379 -> bb326__0_1379 [label="unwind"];
    bb145__0_1379 -> bb288__0_1379 [label=""];
    bb146__0_1379 -> bb147__0_1379 [label="return"];
    bb146__0_1379 -> bb305__0_1379 [label="unwind"];
    bb147__0_1379 -> bb148__0_1379 [label="return"];
    bb147__0_1379 -> bb305__0_1379 [label="unwind"];
    bb148__0_1379 -> bb149__0_1379 [label="return"];
    bb148__0_1379 -> bb305__0_1379 [label="unwind"];
    bb149__0_1379 -> bb150__0_1379 [label="0"];
    bb149__0_1379 -> bb151__0_1379 [label="1"];
    bb149__0_1379 -> bb16__0_1379 [label="otherwise"];
    bb150__0_1379 -> bb153__0_1379 [label="return"];
    bb150__0_1379 -> bb305__0_1379 [label="unwind"];
    bb151__0_1379 -> bb152__0_1379 [label="return"];
    bb151__0_1379 -> bb305__0_1379 [label="unwind"];
    bb152__0_1379 -> bb287__0_1379 [label=""];
    bb153__0_1379 -> bb154__0_1379 [label="return"];
    bb153__0_1379 -> bb305__0_1379 [label="unwind"];
    bb154__0_1379 -> bb155__0_1379 [label="return"];
    bb154__0_1379 -> bb305__0_1379 [label="unwind"];
    bb155__0_1379 -> bb156__0_1379 [label="0"];
    bb155__0_1379 -> bb157__0_1379 [label="1"];
    bb155__0_1379 -> bb16__0_1379 [label="otherwise"];
    bb156__0_1379 -> bb159__0_1379 [label="return"];
    bb156__0_1379 -> bb305__0_1379 [label="unwind"];
    bb157__0_1379 -> bb158__0_1379 [label="return"];
    bb157__0_1379 -> bb305__0_1379 [label="unwind"];
    bb158__0_1379 -> bb287__0_1379 [label=""];
    bb159__0_1379 -> bb160__0_1379 [label="return"];
    bb159__0_1379 -> bb305__0_1379 [label="unwind"];
    bb160__0_1379 -> bb161__0_1379 [label="return"];
    bb160__0_1379 -> bb305__0_1379 [label="unwind"];
    bb161__0_1379 -> bb162__0_1379 [label="0"];
    bb161__0_1379 -> bb163__0_1379 [label="1"];
    bb161__0_1379 -> bb16__0_1379 [label="otherwise"];
    bb162__0_1379 -> bb165__0_1379 [label="return"];
    bb162__0_1379 -> bb305__0_1379 [label="unwind"];
    bb163__0_1379 -> bb164__0_1379 [label="return"];
    bb163__0_1379 -> bb305__0_1379 [label="unwind"];
    bb164__0_1379 -> bb286__0_1379 [label=""];
    bb165__0_1379 -> bb166__0_1379 [label="return"];
    bb165__0_1379 -> bb305__0_1379 [label="unwind"];
    bb166__0_1379 -> bb167__0_1379 [label="return"];
    bb166__0_1379 -> bb305__0_1379 [label="unwind"];
    bb167__0_1379 -> bb168__0_1379 [label="return"];
    bb167__0_1379 -> bb305__0_1379 [label="unwind"];
    bb168__0_1379 -> bb169__0_1379 [label="return"];
    bb168__0_1379 -> bb305__0_1379 [label="unwind"];
    bb169__0_1379 -> bb170__0_1379 [label="return"];
    bb169__0_1379 -> bb305__0_1379 [label="unwind"];
    bb170__0_1379 -> bb171__0_1379 [label="return"];
    bb170__0_1379 -> bb305__0_1379 [label="unwind"];
    bb171__0_1379 -> bb172__0_1379 [label="return"];
    bb171__0_1379 -> bb305__0_1379 [label="unwind"];
    bb172__0_1379 -> bb173__0_1379 [label="return"];
    bb172__0_1379 -> bb305__0_1379 [label="unwind"];
    bb173__0_1379 -> bb174__0_1379 [label="return"];
    bb173__0_1379 -> bb305__0_1379 [label="unwind"];
    bb174__0_1379 -> bb175__0_1379 [label="return"];
    bb174__0_1379 -> bb305__0_1379 [label="unwind"];
    bb175__0_1379 -> bb176__0_1379 [label="return"];
    bb175__0_1379 -> bb305__0_1379 [label="unwind"];
    bb176__0_1379 -> bb177__0_1379 [label="return"];
    bb176__0_1379 -> bb305__0_1379 [label="unwind"];
    bb177__0_1379 -> bb178__0_1379 [label="return"];
    bb177__0_1379 -> bb305__0_1379 [label="unwind"];
    bb178__0_1379 -> bb179__0_1379 [label="return"];
    bb178__0_1379 -> bb305__0_1379 [label="unwind"];
    bb179__0_1379 -> bb180__0_1379 [label="return"];
    bb179__0_1379 -> bb305__0_1379 [label="unwind"];
    bb180__0_1379 -> bb181__0_1379 [label="return"];
    bb180__0_1379 -> bb305__0_1379 [label="unwind"];
    bb181__0_1379 -> bb182__0_1379 [label="return"];
    bb181__0_1379 -> bb305__0_1379 [label="unwind"];
    bb182__0_1379 -> bb183__0_1379 [label="return"];
    bb182__0_1379 -> bb305__0_1379 [label="unwind"];
    bb183__0_1379 -> bb184__0_1379 [label="return"];
    bb183__0_1379 -> bb305__0_1379 [label="unwind"];
    bb184__0_1379 -> bb185__0_1379 [label="return"];
    bb184__0_1379 -> bb305__0_1379 [label="unwind"];
    bb185__0_1379 -> bb186__0_1379 [label="return"];
    bb185__0_1379 -> bb305__0_1379 [label="unwind"];
    bb186__0_1379 -> bb187__0_1379 [label="return"];
    bb186__0_1379 -> bb305__0_1379 [label="unwind"];
    bb187__0_1379 -> bb188__0_1379 [label="return"];
    bb187__0_1379 -> bb305__0_1379 [label="unwind"];
    bb188__0_1379 -> bb207__0_1379 [label="0"];
    bb188__0_1379 -> bb189__0_1379 [label="otherwise"];
    bb189__0_1379 -> bb190__0_1379 [label="return"];
    bb189__0_1379 -> bb305__0_1379 [label="unwind"];
    bb190__0_1379 -> bb191__0_1379 [label="return"];
    bb190__0_1379 -> bb305__0_1379 [label="unwind"];
    bb191__0_1379 -> bb192__0_1379 [label="return"];
    bb191__0_1379 -> bb305__0_1379 [label="unwind"];
    bb192__0_1379 -> bb193__0_1379 [label="0"];
    bb192__0_1379 -> bb194__0_1379 [label="1"];
    bb192__0_1379 -> bb16__0_1379 [label="otherwise"];
    bb193__0_1379 -> bb196__0_1379 [label="return"];
    bb193__0_1379 -> bb305__0_1379 [label="unwind"];
    bb194__0_1379 -> bb195__0_1379 [label="return"];
    bb194__0_1379 -> bb305__0_1379 [label="unwind"];
    bb195__0_1379 -> bb284__0_1379 [label=""];
    bb196__0_1379 -> bb197__0_1379 [label="return"];
    bb196__0_1379 -> bb305__0_1379 [label="unwind"];
    bb197__0_1379 -> bb198__0_1379 [label="return"];
    bb197__0_1379 -> bb305__0_1379 [label="unwind"];
    bb198__0_1379 -> bb199__0_1379 [label="0"];
    bb198__0_1379 -> bb200__0_1379 [label="1"];
    bb198__0_1379 -> bb16__0_1379 [label="otherwise"];
    bb199__0_1379 -> bb202__0_1379 [label="return"];
    bb199__0_1379 -> bb305__0_1379 [label="unwind"];
    bb200__0_1379 -> bb201__0_1379 [label="return"];
    bb200__0_1379 -> bb305__0_1379 [label="unwind"];
    bb201__0_1379 -> bb283__0_1379 [label=""];
    bb202__0_1379 -> bb203__0_1379 [label="return"];
    bb202__0_1379 -> bb305__0_1379 [label="unwind"];
    bb203__0_1379 -> bb204__0_1379 [label="0"];
    bb203__0_1379 -> bb205__0_1379 [label="1"];
    bb203__0_1379 -> bb16__0_1379 [label="otherwise"];
    bb204__0_1379 -> bb226__0_1379 [label=""];
    bb205__0_1379 -> bb206__0_1379 [label="return"];
    bb205__0_1379 -> bb325__0_1379 [label="unwind"];
    bb206__0_1379 -> bb283__0_1379 [label=""];
    bb207__0_1379 -> bb208__0_1379 [label="return"];
    bb207__0_1379 -> bb305__0_1379 [label="unwind"];
    bb208__0_1379 -> bb209__0_1379 [label="return"];
    bb208__0_1379 -> bb305__0_1379 [label="unwind"];
    bb209__0_1379 -> bb210__0_1379 [label="return"];
    bb209__0_1379 -> bb305__0_1379 [label="unwind"];
    bb210__0_1379 -> bb211__0_1379 [label="0"];
    bb210__0_1379 -> bb212__0_1379 [label="1"];
    bb210__0_1379 -> bb16__0_1379 [label="otherwise"];
    bb211__0_1379 -> bb214__0_1379 [label="return"];
    bb211__0_1379 -> bb305__0_1379 [label="unwind"];
    bb212__0_1379 -> bb213__0_1379 [label="return"];
    bb212__0_1379 -> bb305__0_1379 [label="unwind"];
    bb213__0_1379 -> bb284__0_1379 [label=""];
    bb214__0_1379 -> bb215__0_1379 [label="return"];
    bb214__0_1379 -> bb304__0_1379 [label="unwind"];
    bb215__0_1379 -> bb216__0_1379 [label="return"];
    bb215__0_1379 -> bb304__0_1379 [label="unwind"];
    bb216__0_1379 -> bb217__0_1379 [label="0"];
    bb216__0_1379 -> bb218__0_1379 [label="1"];
    bb216__0_1379 -> bb16__0_1379 [label="otherwise"];
    bb217__0_1379 -> bb220__0_1379 [label="return"];
    bb217__0_1379 -> bb304__0_1379 [label="unwind"];
    bb218__0_1379 -> bb219__0_1379 [label="return"];
    bb218__0_1379 -> bb304__0_1379 [label="unwind"];
    bb219__0_1379 -> bb281__0_1379 [label=""];
    bb220__0_1379 -> bb221__0_1379 [label="return"];
    bb220__0_1379 -> bb304__0_1379 [label="unwind"];
    bb221__0_1379 -> bb222__0_1379 [label="0"];
    bb221__0_1379 -> bb223__0_1379 [label="1"];
    bb221__0_1379 -> bb16__0_1379 [label="otherwise"];
    bb222__0_1379 -> bb225__0_1379 [label="return"];
    bb222__0_1379 -> bb305__0_1379 [label="unwind"];
    bb223__0_1379 -> bb224__0_1379 [label="return"];
    bb223__0_1379 -> bb324__0_1379 [label="unwind"];
    bb224__0_1379 -> bb281__0_1379 [label=""];
    bb225__0_1379 -> bb226__0_1379 [label=""];
    bb226__0_1379 -> bb227__0_1379 [label="return"];
    bb226__0_1379 -> bb305__0_1379 [label="unwind"];
    bb227__0_1379 -> bb228__0_1379 [label="return"];
    bb227__0_1379 -> bb305__0_1379 [label="unwind"];
    bb228__0_1379 -> bb229__0_1379 [label="0"];
    bb228__0_1379 -> bb230__0_1379 [label="1"];
    bb228__0_1379 -> bb16__0_1379 [label="otherwise"];
    bb229__0_1379 -> bb232__0_1379 [label="return"];
    bb229__0_1379 -> bb305__0_1379 [label="unwind"];
    bb230__0_1379 -> bb231__0_1379 [label="return"];
    bb230__0_1379 -> bb323__0_1379 [label="unwind"];
    bb231__0_1379 -> bb285__0_1379 [label=""];
    bb232__0_1379 -> bb233__0_1379 [label="return"];
    bb232__0_1379 -> bb305__0_1379 [label="unwind"];
    bb233__0_1379 -> bb234__0_1379 [label="return"];
    bb233__0_1379 -> bb305__0_1379 [label="unwind"];
    bb234__0_1379 -> bb235__0_1379 [label="return"];
    bb234__0_1379 -> bb305__0_1379 [label="unwind"];
    bb235__0_1379 -> bb236__0_1379 [label="return"];
    bb235__0_1379 -> bb305__0_1379 [label="unwind"];
    bb236__0_1379 -> bb237__0_1379 [label="0"];
    bb236__0_1379 -> bb238__0_1379 [label="1"];
    bb236__0_1379 -> bb16__0_1379 [label="otherwise"];
    bb237__0_1379 -> bb240__0_1379 [label="return"];
    bb237__0_1379 -> bb311__0_1379 [label="unwind"];
    bb238__0_1379 -> bb239__0_1379 [label="return"];
    bb238__0_1379 -> bb305__0_1379 [label="unwind"];
    bb239__0_1379 -> bb285__0_1379 [label=""];
    bb240__0_1379 -> bb134__0_1379 [label=""];
    bb241__0_1379 -> bb242__0_1379 [label="return"];
    bb241__0_1379 -> bb311__0_1379 [label="unwind"];
    bb242__0_1379 -> bb243__0_1379 [label="return"];
    bb242__0_1379 -> bb311__0_1379 [label="unwind"];
    bb243__0_1379 -> bb244__0_1379 [label="return"];
    bb243__0_1379 -> bb311__0_1379 [label="unwind"];
    bb244__0_1379 -> bb245__0_1379 [label="return"];
    bb244__0_1379 -> bb311__0_1379 [label="unwind"];
    bb245__0_1379 -> bb246__0_1379 [label="0"];
    bb245__0_1379 -> bb247__0_1379 [label="1"];
    bb245__0_1379 -> bb16__0_1379 [label="otherwise"];
    bb246__0_1379 -> bb249__0_1379 [label="return"];
    bb246__0_1379 -> bb322__0_1379 [label="unwind"];
    bb247__0_1379 -> bb248__0_1379 [label="return"];
    bb247__0_1379 -> bb322__0_1379 [label="unwind"];
    bb248__0_1379 -> bb321__0_1379 [label=""];
    bb249__0_1379 -> bb250__0_1379 [label="return"];
    bb249__0_1379 -> bb322__0_1379 [label="unwind"];
    bb250__0_1379 -> bb251__0_1379 [label="0"];
    bb250__0_1379 -> bb252__0_1379 [label="1"];
    bb250__0_1379 -> bb16__0_1379 [label="otherwise"];
    bb251__0_1379 -> bb254__0_1379 [label="return"];
    bb251__0_1379 -> bb311__0_1379 [label="unwind"];
    bb252__0_1379 -> bb253__0_1379 [label="return"];
    bb252__0_1379 -> bb322__0_1379 [label="unwind"];
    bb253__0_1379 -> bb321__0_1379 [label=""];
    bb254__0_1379 -> bb255__0_1379 [label="return"];
    bb254__0_1379 -> bb311__0_1379 [label="unwind"];
    bb255__0_1379 -> bb256__0_1379 [label="return"];
    bb255__0_1379 -> bb311__0_1379 [label="unwind"];
    bb256__0_1379 -> bb257__0_1379 [label="return"];
    bb256__0_1379 -> bb311__0_1379 [label="unwind"];
    bb257__0_1379 -> bb258__0_1379 [label="0"];
    bb257__0_1379 -> bb259__0_1379 [label="1"];
    bb257__0_1379 -> bb16__0_1379 [label="otherwise"];
    bb258__0_1379 -> bb261__0_1379 [label="return"];
    bb258__0_1379 -> bb311__0_1379 [label="unwind"];
    bb259__0_1379 -> bb260__0_1379 [label="return"];
    bb259__0_1379 -> bb311__0_1379 [label="unwind"];
    bb260__0_1379 -> bb290__0_1379 [label=""];
    bb261__0_1379 -> bb262__0_1379 [label="return"];
    bb261__0_1379 -> bb311__0_1379 [label="unwind"];
    bb262__0_1379 -> bb263__0_1379 [label="return"];
    bb262__0_1379 -> bb311__0_1379 [label="unwind"];
    bb263__0_1379 -> bb264__0_1379 [label="return"];
    bb263__0_1379 -> bb311__0_1379 [label="unwind"];
    bb264__0_1379 -> bb265__0_1379 [label="return"];
    bb264__0_1379 -> bb311__0_1379 [label="unwind"];
    bb265__0_1379 -> bb266__0_1379 [label="0"];
    bb265__0_1379 -> bb267__0_1379 [label="1"];
    bb265__0_1379 -> bb16__0_1379 [label="otherwise"];
    bb266__0_1379 -> bb269__0_1379 [label="return"];
    bb266__0_1379 -> bb311__0_1379 [label="unwind"];
    bb267__0_1379 -> bb268__0_1379 [label="return"];
    bb267__0_1379 -> bb311__0_1379 [label="unwind"];
    bb268__0_1379 -> bb290__0_1379 [label=""];
    bb269__0_1379 -> bb270__0_1379 [label="return"];
    bb269__0_1379 -> bb311__0_1379 [label="unwind"];
    bb270__0_1379 -> bb271__0_1379 [label="return"];
    bb270__0_1379 -> bb311__0_1379 [label="unwind"];
    bb271__0_1379 -> bb272__0_1379 [label="return"];
    bb271__0_1379 -> bb311__0_1379 [label="unwind"];
    bb272__0_1379 -> bb273__0_1379 [label="return"];
    bb272__0_1379 -> bb303__0_1379 [label="unwind"];
    bb273__0_1379 -> bb274__0_1379 [label="return"];
    bb273__0_1379 -> bb303__0_1379 [label="unwind"];
    bb274__0_1379 -> bb275__0_1379 [label="return"];
    bb274__0_1379 -> bb311__0_1379 [label="unwind"];
    bb275__0_1379 -> bb276__0_1379 [label="return"];
    bb275__0_1379 -> bb312__0_1379 [label="unwind"];
    bb276__0_1379 -> bb277__0_1379 [label="return"];
    bb276__0_1379 -> bb313__0_1379 [label="unwind"];
    bb277__0_1379 -> bb278__0_1379 [label="return"];
    bb277__0_1379 -> bb316__0_1379 [label="unwind"];
    bb278__0_1379 -> bb279__0_1379 [label="return"];
    bb278__0_1379 -> bb317__0_1379 [label="unwind"];
    bb279__0_1379 -> bb280__0_1379 [label="return"];
    bb279__0_1379 -> bb320__0_1379 [label="unwind"];
    bb280__0_1379 -> bb302__0_1379 [label=""];
    bb281__0_1379 -> bb282__0_1379 [label="return"];
    bb281__0_1379 -> bb305__0_1379 [label="unwind"];
    bb282__0_1379 -> bb284__0_1379 [label=""];
    bb283__0_1379 -> bb284__0_1379 [label=""];
    bb284__0_1379 -> bb285__0_1379 [label=""];
    bb285__0_1379 -> bb286__0_1379 [label=""];
    bb286__0_1379 -> bb287__0_1379 [label=""];
    bb287__0_1379 -> bb288__0_1379 [label="return"];
    bb287__0_1379 -> bb311__0_1379 [label="unwind"];
    bb288__0_1379 -> bb290__0_1379 [label=""];
    bb289__0_1379 -> bb290__0_1379 [label=""];
    bb290__0_1379 -> bb291__0_1379 [label=""];
    bb291__0_1379 -> bb292__0_1379 [label="return"];
    bb291__0_1379 -> bb312__0_1379 [label="unwind"];
    bb292__0_1379 -> bb293__0_1379 [label="return"];
    bb292__0_1379 -> bb313__0_1379 [label="unwind"];
    bb293__0_1379 -> bb294__0_1379 [label="return"];
    bb293__0_1379 -> bb316__0_1379 [label="unwind"];
    bb294__0_1379 -> bb297__0_1379 [label=""];
    bb295__0_1379 -> bb296__0_1379 [label="return"];
    bb295__0_1379 -> bb316__0_1379 [label="unwind"];
    bb296__0_1379 -> bb297__0_1379 [label=""];
    bb297__0_1379 -> bb298__0_1379 [label=""];
    bb298__0_1379 -> bb299__0_1379 [label="return"];
    bb298__0_1379 -> bb317__0_1379 [label="unwind"];
    bb299__0_1379 -> bb300__0_1379 [label="return"];
    bb299__0_1379 -> bb320__0_1379 [label="unwind"];
    bb300__0_1379 -> bb301__0_1379 [label=""];
    bb301__0_1379 -> bb302__0_1379 [label=""];
    bb303__0_1379 -> bb311__0_1379 [label="return"];
    bb304__0_1379 -> bb305__0_1379 [label="return"];
    bb305__0_1379 -> bb311__0_1379 [label="return"];
    bb306__0_1379 -> bb311__0_1379 [label="return"];
    bb307__0_1379 -> bb311__0_1379 [label="return"];
    bb308__0_1379 -> bb311__0_1379 [label="return"];
    bb309__0_1379 -> bb311__0_1379 [label="return"];
    bb310__0_1379 -> bb311__0_1379 [label="return"];
    bb311__0_1379 -> bb312__0_1379 [label="return"];
    bb312__0_1379 -> bb313__0_1379 [label="return"];
    bb313__0_1379 -> bb316__0_1379 [label="return"];
    bb314__0_1379 -> bb315__0_1379 [label="return"];
    bb315__0_1379 -> bb316__0_1379 [label="return"];
    bb316__0_1379 -> bb317__0_1379 [label="return"];
    bb317__0_1379 -> bb320__0_1379 [label="return"];
    bb318__0_1379 -> bb320__0_1379 [label="return"];
    bb319__0_1379 -> bb320__0_1379 [label="return"];
    bb321__0_1379 -> bb290__0_1379 [label=""];
    bb322__0_1379 -> bb311__0_1379 [label=""];
    bb323__0_1379 -> bb305__0_1379 [label=""];
    bb324__0_1379 -> bb304__0_1379 [label=""];
    bb325__0_1379 -> bb305__0_1379 [label=""];
    bb326__0_1379 -> bb311__0_1379 [label=""];
    bb327__0_1379 -> bb311__0_1379 [label=""];
    bb328__0_1379 -> bb314__0_1379 [label=""];
    bb329__0_1379 -> bb316__0_1379 [label=""];
    bb330__0_1379 -> bb316__0_1379 [label=""];
    bb331__0_1379 -> bb317__0_1379 [label=""];
    bb332__0_1379 -> bb320__0_1379 [label=""];
}
