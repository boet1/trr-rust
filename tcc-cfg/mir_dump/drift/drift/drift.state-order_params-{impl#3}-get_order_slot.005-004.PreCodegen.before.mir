// MIR for `order_params::<impl at programs/drift/src/state/order_params.rs:969:1: 969:23>::get_order_slot` before PreCodegen

fn order_params::<impl at programs/drift/src/state/order_params.rs:969:1: 969:23>::get_order_slot(_1: &PlaceOrderOptions, _2: u64) -> u64 {
    debug self => _1;
    debug order_slot => _2;
    let mut _0: u64;
    let mut _3: u64;
    let _4: ();
    let mut _5: isize;
    let mut _7: u64;
    let mut _8: u64;
    let mut _9: u64;
    scope 1 {
        debug min_order_slot => _3;
        scope 2 {
            debug signed_msg_taker_order_slot => _6;
            let _6: u64;
        }
    }

    bb0: {
        StorageLive(_3);
        _3 = _2;
        StorageLive(_4);
        _5 = discriminant(((*_1).0: std::option::Option<u64>));
        switchInt(move _5) -> [1: bb1, otherwise: bb3];
    }

    bb1: {
        StorageLive(_6);
        _6 = ((((*_1).0: std::option::Option<u64>) as Some).0: u64);
        StorageLive(_7);
        StorageLive(_8);
        _8 = _2;
        StorageLive(_9);
        _9 = _6;
        _7 = <u64 as Ord>::min(move _8, move _9) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_9);
        StorageDead(_8);
        _3 = move _7;
        StorageDead(_7);
        _4 = const ();
        StorageDead(_6);
        goto -> bb4;
    }

    bb3: {
        _4 = const ();
        goto -> bb4;
    }

    bb4: {
        StorageDead(_4);
        _0 = _3;
        StorageDead(_3);
        return;
    }
}
