digraph Mir_0_1795 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn update_oracle_price_twap(_1: &amp;ReErased mut state::perp_market::AMM, _2: i64, _3: &amp;ReErased state::oracle::MMOraclePriceData, _4: std::option::Option&lt;u64&gt;, _5: std::option::Option&lt;i64&gt;) -&gt; std::result::Result&lt;i64, error::ErrorCode&gt;<br align="left"/>let _6: u64;<br align="left"/>let mut _7: isize;<br align="left"/>let _8: u64;<br align="left"/>let mut _9: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _10: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _11: &amp;ReErased state::perp_market::AMM;<br align="left"/>let mut _12: isize;<br align="left"/>let _13: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _14: !;<br align="left"/>let mut _15: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _16: u64;<br align="left"/>let _17: u64;<br align="left"/>let mut _18: &amp;ReErased state::oracle::MMOraclePriceData;<br align="left"/>let _19: i64;<br align="left"/>let mut _20: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _21: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _22: &amp;ReErased state::perp_market::AMM;<br align="left"/>let mut _23: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _24: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _25: state::oracle::OraclePriceData;<br align="left"/>let mut _26: &amp;ReErased state::oracle::MMOraclePriceData;<br align="left"/>let mut _27: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _28: u64;<br align="left"/>let mut _29: isize;<br align="left"/>let _30: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _31: !;<br align="left"/>let mut _32: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _33: i64;<br align="left"/>let _34: i64;<br align="left"/>let mut _35: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _36: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _37: i64;<br align="left"/>let mut _38: i64;<br align="left"/>let mut _39: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _40: isize;<br align="left"/>let _41: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _42: !;<br align="left"/>let mut _43: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _44: i64;<br align="left"/>let _45: i64;<br align="left"/>let _46: ();<br align="left"/>let mut _47: bool;<br align="left"/>let mut _48: i64;<br align="left"/>let mut _49: bool;<br align="left"/>let mut _50: i64;<br align="left"/>let mut _51: i64;<br align="left"/>let mut _52: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _53: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _54: &amp;ReErased state::perp_market::AMM;<br align="left"/>let mut _55: i64;<br align="left"/>let mut _56: i64;<br align="left"/>let mut _57: math::amm::TwapPeriod;<br align="left"/>let mut _58: isize;<br align="left"/>let _59: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _60: !;<br align="left"/>let mut _61: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _62: i64;<br align="left"/>let _63: i64;<br align="left"/>let mut _64: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _65: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _66: &amp;ReErased state::perp_market::AMM;<br align="left"/>let mut _67: i64;<br align="left"/>let mut _68: i64;<br align="left"/>let mut _69: math::amm::TwapPeriod;<br align="left"/>let mut _70: isize;<br align="left"/>let _71: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _72: !;<br align="left"/>let mut _73: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _74: i64;<br align="left"/>let mut _75: i64;<br align="left"/>let mut _76: i64;<br align="left"/>let mut _77: state::oracle::OraclePriceData;<br align="left"/>let mut _78: &amp;ReErased state::oracle::MMOraclePriceData;<br align="left"/>let mut _79: u64;<br align="left"/>let mut _80: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _81: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _82: &amp;ReErased state::perp_market::AMM;<br align="left"/>let mut _83: u64;<br align="left"/>let mut _84: u64;<br align="left"/>let mut _85: i64;<br align="left"/>let mut _86: isize;<br align="left"/>let _87: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _88: !;<br align="left"/>let mut _89: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _90: u64;<br align="left"/>let mut _91: i64;<br align="left"/>let mut _92: state::oracle::OraclePriceData;<br align="left"/>let mut _93: &amp;ReErased state::oracle::MMOraclePriceData;<br align="left"/>let mut _94: i64;<br align="left"/>let mut _95: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _96: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _97: &amp;ReErased state::perp_market::AMM;<br align="left"/>let mut _98: &amp;ReErased state::oracle::MMOraclePriceData;<br align="left"/>let mut _99: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _100: u64;<br align="left"/>let mut _101: isize;<br align="left"/>let _102: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _103: !;<br align="left"/>let mut _104: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _105: i64;<br align="left"/>let _106: bool;<br align="left"/>let mut _107: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _108: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _109: &amp;ReErased mut state::perp_market::AMM;<br align="left"/>let mut _110: i64;<br align="left"/>let mut _111: u64;<br align="left"/>let mut _112: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _113: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _114: i64;<br align="left"/>let mut _115: isize;<br align="left"/>let _116: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _117: !;<br align="left"/>let mut _118: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _119: u64;<br align="left"/>let mut _120: u64;<br align="left"/>let mut _121: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _122: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _123: i64;<br align="left"/>let mut _124: isize;<br align="left"/>let _125: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _126: !;<br align="left"/>let mut _127: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _128: u64;<br align="left"/>let mut _129: u64;<br align="left"/>let mut _130: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _131: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _132: i64;<br align="left"/>let mut _133: isize;<br align="left"/>let _134: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _135: !;<br align="left"/>let mut _136: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _137: u64;<br align="left"/>let mut _138: isize;<br align="left"/>let _139: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _140: !;<br align="left"/>let mut _141: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _142: bool;<br align="left"/>let mut _143: i64;<br align="left"/>let mut _144: i64;<br align="left"/>let mut _145: i64;<br align="left"/>let mut _146: i64;<br align="left"/>let mut _147: i64;<br align="left"/>debug amm =&gt; _1;<br align="left"/>debug now =&gt; _2;<br align="left"/>debug mm_oracle_price_data =&gt; _3;<br align="left"/>debug precomputed_reserve_price =&gt; _4;<br align="left"/>debug sanitize_clamp =&gt; _5;<br align="left"/>debug reserve_price =&gt; _6;<br align="left"/>debug reserve_price =&gt; _8;<br align="left"/>debug residual =&gt; _13;<br align="left"/>debug val =&gt; _16;<br align="left"/>debug oracle_confidence =&gt; _17;<br align="left"/>debug oracle_price =&gt; _19;<br align="left"/>debug residual =&gt; _30;<br align="left"/>debug val =&gt; _33;<br align="left"/>debug capped_oracle_update_price =&gt; _34;<br align="left"/>debug residual =&gt; _41;<br align="left"/>debug val =&gt; _44;<br align="left"/>debug oracle_price_twap =&gt; _45;<br align="left"/>debug residual =&gt; _59;<br align="left"/>debug val =&gt; _62;<br align="left"/>debug oracle_price_twap_5min =&gt; _63;<br align="left"/>debug residual =&gt; _71;<br align="left"/>debug val =&gt; _74;<br align="left"/>debug residual =&gt; _87;<br align="left"/>debug val =&gt; _90;<br align="left"/>debug residual =&gt; _102;<br align="left"/>debug val =&gt; _105;<br align="left"/>debug residual =&gt; _116;<br align="left"/>debug val =&gt; _119;<br align="left"/>debug residual =&gt; _125;<br align="left"/>debug val =&gt; _128;<br align="left"/>debug residual =&gt; _134;<br align="left"/>debug val =&gt; _137;<br align="left"/>debug residual =&gt; _139;<br align="left"/>debug val =&gt; _142;<br align="left"/>>;
    bb0__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_6)<br/>_7 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _7)</td></tr></table>>];
    bb1__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = &amp;(*_1)<br/></td></tr><tr><td align="left">_10 = AMM::reserve_price(move _11)</td></tr></table>>];
    bb2__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb3__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/>_8 = ((_4 as Some).0: u64)<br/>_6 = _8<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb4__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/></td></tr><tr><td align="left">_9 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _10)</td></tr></table>>];
    bb5__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>_12 = discriminant(_9)<br/></td></tr><tr><td align="left">switchInt(move _12)</td></tr></table>>];
    bb6__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_16)<br/>_16 = ((_9 as Continue).0: u64)<br/>_6 = _16<br/>StorageDead(_16)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = ((_9 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_15)<br/>_15 = _13<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _15)</td></tr></table>>];
    bb8__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_13)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = &amp;(*_3)<br/></td></tr><tr><td align="left">_17 = MMOraclePriceData::get_confidence(move _18)</td></tr></table>>];
    bb10__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_22 = &amp;(*_1)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_26 = &amp;(*_3)<br/></td></tr><tr><td align="left">_25 = MMOraclePriceData::get_exchange_oracle_price_data(move _26)</td></tr></table>>];
    bb11__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>_24 = &amp;_25<br/>_23 = &amp;(*_24)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>_28 = _6<br/>_27 = Option::&lt;u64&gt;::Some(move _28)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">_21 = normalise_oracle_price(move _22, move _23, move _27)</td></tr></table>>];
    bb12__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">_20 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _21)</td></tr></table>>];
    bb13__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>_29 = discriminant(_20)<br/></td></tr><tr><td align="left">switchInt(move _29)</td></tr></table>>];
    bb14__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_33)<br/>_33 = ((_20 as Continue).0: i64)<br/>_19 = _33<br/>StorageDead(_33)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_20)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>_37 = _19<br/>StorageLive(_38)<br/>_38 = (((*_1).1: state::oracle::HistoricalOracleData).3: i64)<br/>StorageLive(_39)<br/>_39 = _5<br/></td></tr><tr><td align="left">_36 = sanitize_new_price(move _37, move _38, move _39)</td></tr></table>>];
    bb15__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_30)<br/>_30 = ((_20 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_32)<br/>_32 = _30<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _32)</td></tr></table>>];
    bb16__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_30)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_38)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">_35 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _36)</td></tr></table>>];
    bb18__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>_40 = discriminant(_35)<br/></td></tr><tr><td align="left">switchInt(move _40)</td></tr></table>>];
    bb19__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_44)<br/>_44 = ((_35 as Continue).0: i64)<br/>_34 = _44<br/>StorageDead(_44)<br/>StorageDead(_35)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>_48 = _34<br/>_47 = Gt(move _48, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _47)</td></tr></table>>];
    bb20__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_41)<br/>_41 = ((_35 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_43)<br/>_43 = _41<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _43)</td></tr></table>>];
    bb21__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_41)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>_50 = _19<br/>_49 = Gt(move _50, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _49)</td></tr></table>>];
    bb23__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>_54 = &amp;(*_1)<br/>StorageLive(_55)<br/>_55 = _2<br/>StorageLive(_56)<br/>_56 = _34<br/>StorageLive(_57)<br/>_57 = TwapPeriod::FundingPeriod<br/></td></tr><tr><td align="left">_53 = calculate_new_oracle_price_twap(move _54, move _55, move _56, move _57)</td></tr></table>>];
    bb25__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_56)<br/>StorageDead(_55)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">_52 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _53)</td></tr></table>>];
    bb26__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>_58 = discriminant(_52)<br/></td></tr><tr><td align="left">switchInt(move _58)</td></tr></table>>];
    bb27__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_62)<br/>_62 = ((_52 as Continue).0: i64)<br/>_51 = _62<br/>StorageDead(_62)<br/>_45 = move _51<br/>StorageDead(_51)<br/>StorageDead(_52)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>_66 = &amp;(*_1)<br/>StorageLive(_67)<br/>_67 = _2<br/>StorageLive(_68)<br/>_68 = _34<br/>StorageLive(_69)<br/>_69 = TwapPeriod::FiveMin<br/></td></tr><tr><td align="left">_65 = calculate_new_oracle_price_twap(move _66, move _67, move _68, move _69)</td></tr></table>>];
    bb28__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_59)<br/>_59 = ((_52 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_61)<br/>_61 = _59<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _61)</td></tr></table>>];
    bb29__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_59)<br/>StorageDead(_51)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageDead(_68)<br/>StorageDead(_67)<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">_64 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _65)</td></tr></table>>];
    bb31__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>_70 = discriminant(_64)<br/></td></tr><tr><td align="left">switchInt(move _70)</td></tr></table>>];
    bb32__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_74)<br/>_74 = ((_64 as Continue).0: i64)<br/>_63 = _74<br/>StorageDead(_74)<br/>StorageDead(_64)<br/>StorageLive(_75)<br/>_75 = _34<br/>((*_1).41: i64) = move _75<br/>StorageDead(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>_78 = &amp;(*_3)<br/></td></tr><tr><td align="left">_77 = MMOraclePriceData::get_exchange_oracle_price_data(move _78)</td></tr></table>>];
    bb33__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageLive(_71)<br/>_71 = ((_64 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_73)<br/>_73 = _71<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _73)</td></tr></table>>];
    bb34__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>StorageDead(_71)<br/>StorageDead(_64)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>_76 = (_77.0: i64)<br/>(((*_1).1: state::oracle::HistoricalOracleData).0: i64) = move _76<br/>StorageDead(_76)<br/>StorageDead(_77)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>_82 = &amp;(*_1)<br/>StorageLive(_83)<br/>_83 = _17<br/>StorageLive(_84)<br/>_84 = _6<br/>StorageLive(_85)<br/>_85 = _2<br/></td></tr><tr><td align="left">_81 = AMM::get_new_oracle_conf_pct(move _82, move _83, move _84, move _85)</td></tr></table>>];
    bb36__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>StorageDead(_84)<br/>StorageDead(_83)<br/>StorageDead(_82)<br/></td></tr><tr><td align="left">_80 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _81)</td></tr></table>>];
    bb37__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>_86 = discriminant(_80)<br/></td></tr><tr><td align="left">switchInt(move _86)</td></tr></table>>];
    bb38__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_90)<br/>_90 = ((_80 as Continue).0: u64)<br/>_79 = _90<br/>StorageDead(_90)<br/>((*_1).48: u64) = move _79<br/>StorageDead(_79)<br/>StorageDead(_80)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>_93 = &amp;(*_3)<br/></td></tr><tr><td align="left">_92 = MMOraclePriceData::get_exchange_oracle_price_data(move _93)</td></tr></table>>];
    bb39__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_87)<br/>_87 = ((_80 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_89)<br/>_89 = _87<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _89)</td></tr></table>>];
    bb40__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>StorageDead(_87)<br/>StorageDead(_79)<br/>StorageDead(_80)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>_91 = (_92.2: i64)<br/>(((*_1).1: state::oracle::HistoricalOracleData).2: i64) = move _91<br/>StorageDead(_91)<br/>StorageDead(_92)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>_97 = &amp;(*_1)<br/>StorageLive(_98)<br/>_98 = &amp;(*_3)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>_100 = _6<br/>_99 = Option::&lt;u64&gt;::Some(move _100)<br/>StorageDead(_100)<br/></td></tr><tr><td align="left">_96 = calculate_oracle_reserve_price_spread_pct(move _97, move _98, move _99)</td></tr></table>>];
    bb42__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/>StorageDead(_98)<br/>StorageDead(_97)<br/></td></tr><tr><td align="left">_95 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _96)</td></tr></table>>];
    bb43__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>_101 = discriminant(_95)<br/></td></tr><tr><td align="left">switchInt(move _101)</td></tr></table>>];
    bb44__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_105)<br/>_105 = ((_95 as Continue).0: i64)<br/>_94 = _105<br/>StorageDead(_105)<br/>((*_1).42: i64) = move _94<br/>StorageDead(_94)<br/>StorageDead(_95)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>_109 = &amp;mut (*_1)<br/>StorageLive(_110)<br/>_110 = _2<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>_114 = _19<br/></td></tr><tr><td align="left">_113 = &lt;i64 as Cast&gt;::cast::&lt;u64&gt;(move _114)</td></tr></table>>];
    bb45__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageLive(_102)<br/>_102 = ((_95 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_104)<br/>_104 = _102<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _104)</td></tr></table>>];
    bb46__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/>StorageDead(_102)<br/>StorageDead(_94)<br/>StorageDead(_95)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/></td></tr><tr><td align="left">_112 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _113)</td></tr></table>>];
    bb48__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_113)<br/>_115 = discriminant(_112)<br/></td></tr><tr><td align="left">switchInt(move _115)</td></tr></table>>];
    bb49__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageLive(_119)<br/>_119 = ((_112 as Continue).0: u64)<br/>_111 = _119<br/>StorageDead(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>_123 = (((*_1).1: state::oracle::HistoricalOracleData).3: i64)<br/></td></tr><tr><td align="left">_122 = &lt;i64 as Cast&gt;::cast::&lt;u64&gt;(move _123)</td></tr></table>>];
    bb50__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageLive(_116)<br/>_116 = ((_112 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_118)<br/>_118 = _116<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _118)</td></tr></table>>];
    bb51__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>StorageDead(_116)<br/>StorageDead(_111)<br/>StorageDead(_110)<br/>StorageDead(_109)<br/>StorageDead(_108)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb52__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/></td></tr><tr><td align="left">_121 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _122)</td></tr></table>>];
    bb53__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/>_124 = discriminant(_121)<br/></td></tr><tr><td align="left">switchInt(move _124)</td></tr></table>>];
    bb54__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageLive(_128)<br/>_128 = ((_121 as Continue).0: u64)<br/>_120 = _128<br/>StorageDead(_128)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>_132 = (((*_1).1: state::oracle::HistoricalOracleData).4: i64)<br/></td></tr><tr><td align="left">_131 = &lt;i64 as Cast&gt;::cast::&lt;u64&gt;(move _132)</td></tr></table>>];
    bb55__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageLive(_125)<br/>_125 = ((_121 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_127)<br/>_127 = _125<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _127)</td></tr></table>>];
    bb56__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/>StorageDead(_125)<br/>StorageDead(_120)<br/>StorageDead(_111)<br/>StorageDead(_110)<br/>StorageDead(_109)<br/>StorageDead(_108)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb57__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_132)<br/></td></tr><tr><td align="left">_130 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _131)</td></tr></table>>];
    bb58__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_131)<br/>_133 = discriminant(_130)<br/></td></tr><tr><td align="left">switchInt(move _133)</td></tr></table>>];
    bb59__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageLive(_137)<br/>_137 = ((_130 as Continue).0: u64)<br/>_129 = _137<br/>StorageDead(_137)<br/></td></tr><tr><td align="left">_108 = update_amm_oracle_std(move _109, move _110, move _111, move _120, move _129)</td></tr></table>>];
    bb60__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageLive(_134)<br/>_134 = ((_130 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_136)<br/>_136 = _134<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _136)</td></tr></table>>];
    bb61__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_136)<br/>StorageDead(_134)<br/>StorageDead(_129)<br/>StorageDead(_120)<br/>StorageDead(_111)<br/>StorageDead(_110)<br/>StorageDead(_109)<br/>StorageDead(_108)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_129)<br/>StorageDead(_120)<br/>StorageDead(_111)<br/>StorageDead(_110)<br/>StorageDead(_109)<br/></td></tr><tr><td align="left">_107 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _108)</td></tr></table>>];
    bb63__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/>_138 = discriminant(_107)<br/></td></tr><tr><td align="left">switchInt(move _138)</td></tr></table>>];
    bb64__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageLive(_142)<br/>_142 = ((_107 as Continue).0: bool)<br/>_106 = _142<br/>StorageDead(_142)<br/>StorageDead(_130)<br/>StorageDead(_121)<br/>StorageDead(_112)<br/>StorageDead(_107)<br/>StorageDead(_106)<br/>StorageLive(_143)<br/>_143 = _63<br/>(((*_1).1: state::oracle::HistoricalOracleData).4: i64) = move _143<br/>StorageDead(_143)<br/>StorageLive(_144)<br/>_144 = _45<br/>(((*_1).1: state::oracle::HistoricalOracleData).3: i64) = move _144<br/>StorageDead(_144)<br/>StorageLive(_145)<br/>_145 = _2<br/>(((*_1).1: state::oracle::HistoricalOracleData).5: i64) = move _145<br/>StorageDead(_145)<br/>_46 = const ()<br/>StorageDead(_63)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb65__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageLive(_139)<br/>_139 = ((_107 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_141)<br/>_141 = _139<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _141)</td></tr></table>>];
    bb66__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_141)<br/>StorageDead(_139)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb67__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageLive(_146)<br/>_146 = (((*_1).1: state::oracle::HistoricalOracleData).3: i64)<br/>_45 = move _146<br/>_46 = const ()<br/>StorageDead(_146)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb69__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_47)<br/>StorageDead(_46)<br/>StorageLive(_147)<br/>_147 = _45<br/>_0 = std::result::Result::&lt;i64, error::ErrorCode&gt;::Ok(move _147)<br/>StorageDead(_147)<br/>StorageDead(_45)<br/>StorageDead(_34)<br/>StorageDead(_19)<br/>StorageDead(_17)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb70__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_130)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb71__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_121)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb72__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>StorageDead(_107)<br/>StorageDead(_106)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb73__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb74__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_47)<br/>StorageDead(_46)<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb75__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb76__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb77__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb78__0_1795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_1795 -> bb1__0_1795 [label="0"];
    bb0__0_1795 -> bb3__0_1795 [label="1"];
    bb0__0_1795 -> bb2__0_1795 [label="otherwise"];
    bb1__0_1795 -> bb4__0_1795 [label="return"];
    bb3__0_1795 -> bb9__0_1795 [label=""];
    bb4__0_1795 -> bb5__0_1795 [label="return"];
    bb5__0_1795 -> bb6__0_1795 [label="0"];
    bb5__0_1795 -> bb7__0_1795 [label="1"];
    bb5__0_1795 -> bb2__0_1795 [label="otherwise"];
    bb6__0_1795 -> bb9__0_1795 [label=""];
    bb7__0_1795 -> bb8__0_1795 [label="return"];
    bb8__0_1795 -> bb77__0_1795 [label=""];
    bb9__0_1795 -> bb10__0_1795 [label="return"];
    bb10__0_1795 -> bb11__0_1795 [label="return"];
    bb11__0_1795 -> bb12__0_1795 [label="return"];
    bb12__0_1795 -> bb13__0_1795 [label="return"];
    bb13__0_1795 -> bb14__0_1795 [label="0"];
    bb13__0_1795 -> bb15__0_1795 [label="1"];
    bb13__0_1795 -> bb2__0_1795 [label="otherwise"];
    bb14__0_1795 -> bb17__0_1795 [label="return"];
    bb15__0_1795 -> bb16__0_1795 [label="return"];
    bb16__0_1795 -> bb76__0_1795 [label=""];
    bb17__0_1795 -> bb18__0_1795 [label="return"];
    bb18__0_1795 -> bb19__0_1795 [label="0"];
    bb18__0_1795 -> bb20__0_1795 [label="1"];
    bb18__0_1795 -> bb2__0_1795 [label="otherwise"];
    bb19__0_1795 -> bb23__0_1795 [label="0"];
    bb19__0_1795 -> bb22__0_1795 [label="otherwise"];
    bb20__0_1795 -> bb21__0_1795 [label="return"];
    bb21__0_1795 -> bb75__0_1795 [label=""];
    bb22__0_1795 -> bb67__0_1795 [label="0"];
    bb22__0_1795 -> bb24__0_1795 [label="otherwise"];
    bb23__0_1795 -> bb68__0_1795 [label=""];
    bb24__0_1795 -> bb25__0_1795 [label="return"];
    bb25__0_1795 -> bb26__0_1795 [label="return"];
    bb26__0_1795 -> bb27__0_1795 [label="0"];
    bb26__0_1795 -> bb28__0_1795 [label="1"];
    bb26__0_1795 -> bb2__0_1795 [label="otherwise"];
    bb27__0_1795 -> bb30__0_1795 [label="return"];
    bb28__0_1795 -> bb29__0_1795 [label="return"];
    bb29__0_1795 -> bb74__0_1795 [label=""];
    bb30__0_1795 -> bb31__0_1795 [label="return"];
    bb31__0_1795 -> bb32__0_1795 [label="0"];
    bb31__0_1795 -> bb33__0_1795 [label="1"];
    bb31__0_1795 -> bb2__0_1795 [label="otherwise"];
    bb32__0_1795 -> bb35__0_1795 [label="return"];
    bb33__0_1795 -> bb34__0_1795 [label="return"];
    bb34__0_1795 -> bb73__0_1795 [label=""];
    bb35__0_1795 -> bb36__0_1795 [label="return"];
    bb36__0_1795 -> bb37__0_1795 [label="return"];
    bb37__0_1795 -> bb38__0_1795 [label="0"];
    bb37__0_1795 -> bb39__0_1795 [label="1"];
    bb37__0_1795 -> bb2__0_1795 [label="otherwise"];
    bb38__0_1795 -> bb41__0_1795 [label="return"];
    bb39__0_1795 -> bb40__0_1795 [label="return"];
    bb40__0_1795 -> bb73__0_1795 [label=""];
    bb41__0_1795 -> bb42__0_1795 [label="return"];
    bb42__0_1795 -> bb43__0_1795 [label="return"];
    bb43__0_1795 -> bb44__0_1795 [label="0"];
    bb43__0_1795 -> bb45__0_1795 [label="1"];
    bb43__0_1795 -> bb2__0_1795 [label="otherwise"];
    bb44__0_1795 -> bb47__0_1795 [label="return"];
    bb45__0_1795 -> bb46__0_1795 [label="return"];
    bb46__0_1795 -> bb73__0_1795 [label=""];
    bb47__0_1795 -> bb48__0_1795 [label="return"];
    bb48__0_1795 -> bb49__0_1795 [label="0"];
    bb48__0_1795 -> bb50__0_1795 [label="1"];
    bb48__0_1795 -> bb2__0_1795 [label="otherwise"];
    bb49__0_1795 -> bb52__0_1795 [label="return"];
    bb50__0_1795 -> bb51__0_1795 [label="return"];
    bb51__0_1795 -> bb72__0_1795 [label=""];
    bb52__0_1795 -> bb53__0_1795 [label="return"];
    bb53__0_1795 -> bb54__0_1795 [label="0"];
    bb53__0_1795 -> bb55__0_1795 [label="1"];
    bb53__0_1795 -> bb2__0_1795 [label="otherwise"];
    bb54__0_1795 -> bb57__0_1795 [label="return"];
    bb55__0_1795 -> bb56__0_1795 [label="return"];
    bb56__0_1795 -> bb71__0_1795 [label=""];
    bb57__0_1795 -> bb58__0_1795 [label="return"];
    bb58__0_1795 -> bb59__0_1795 [label="0"];
    bb58__0_1795 -> bb60__0_1795 [label="1"];
    bb58__0_1795 -> bb2__0_1795 [label="otherwise"];
    bb59__0_1795 -> bb62__0_1795 [label="return"];
    bb60__0_1795 -> bb61__0_1795 [label="return"];
    bb61__0_1795 -> bb70__0_1795 [label=""];
    bb62__0_1795 -> bb63__0_1795 [label="return"];
    bb63__0_1795 -> bb64__0_1795 [label="0"];
    bb63__0_1795 -> bb65__0_1795 [label="1"];
    bb63__0_1795 -> bb2__0_1795 [label="otherwise"];
    bb64__0_1795 -> bb69__0_1795 [label=""];
    bb65__0_1795 -> bb66__0_1795 [label="return"];
    bb66__0_1795 -> bb70__0_1795 [label=""];
    bb67__0_1795 -> bb68__0_1795 [label=""];
    bb68__0_1795 -> bb69__0_1795 [label=""];
    bb69__0_1795 -> bb78__0_1795 [label=""];
    bb70__0_1795 -> bb71__0_1795 [label=""];
    bb71__0_1795 -> bb72__0_1795 [label=""];
    bb72__0_1795 -> bb73__0_1795 [label=""];
    bb73__0_1795 -> bb74__0_1795 [label=""];
    bb74__0_1795 -> bb75__0_1795 [label=""];
    bb75__0_1795 -> bb76__0_1795 [label=""];
    bb76__0_1795 -> bb77__0_1795 [label=""];
    bb77__0_1795 -> bb78__0_1795 [label=""];
}
