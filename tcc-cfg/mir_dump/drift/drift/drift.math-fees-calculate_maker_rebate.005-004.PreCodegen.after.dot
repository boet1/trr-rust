digraph Mir_0_2221 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_maker_rebate(_1: u64, _2: &amp;ReErased state::state::FeeTier, _3: i16) -&gt; std::result::Result&lt;u64, error::ErrorCode&gt;<br align="left"/>let mut _4: u64;<br align="left"/>let mut _5: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _6: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _7: u128;<br align="left"/>let mut _8: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _9: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _10: u128;<br align="left"/>let mut _11: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _12: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _13: u128;<br align="left"/>let mut _14: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _15: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _16: u64;<br align="left"/>let mut _17: isize;<br align="left"/>let _18: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _19: !;<br align="left"/>let mut _20: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _21: u128;<br align="left"/>let mut _22: u128;<br align="left"/>let mut _23: u32;<br align="left"/>let mut _24: isize;<br align="left"/>let _25: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _26: !;<br align="left"/>let mut _27: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _28: u128;<br align="left"/>let mut _29: u128;<br align="left"/>let mut _30: u32;<br align="left"/>let mut _31: isize;<br align="left"/>let _32: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _33: !;<br align="left"/>let mut _34: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _35: u128;<br align="left"/>let mut _36: isize;<br align="left"/>let _37: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _38: !;<br align="left"/>let mut _39: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _40: u64;<br align="left"/>let _41: ();<br align="left"/>let mut _42: bool;<br align="left"/>let mut _43: i16;<br align="left"/>let mut _44: u64;<br align="left"/>let mut _45: u64;<br align="left"/>let mut _46: u64;<br align="left"/>let mut _47: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _48: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _49: u64;<br align="left"/>let mut _50: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _51: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _52: u64;<br align="left"/>let mut _53: u64;<br align="left"/>let mut _54: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _55: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _56: u16;<br align="left"/>let mut _57: i16;<br align="left"/>let mut _58: isize;<br align="left"/>let _59: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _60: !;<br align="left"/>let mut _61: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _62: u64;<br align="left"/>let mut _63: isize;<br align="left"/>let _64: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _65: !;<br align="left"/>let mut _66: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _67: u64;<br align="left"/>let mut _68: isize;<br align="left"/>let _69: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _70: !;<br align="left"/>let mut _71: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _72: u64;<br align="left"/>let mut _73: bool;<br align="left"/>let mut _74: i16;<br align="left"/>let mut _75: u64;<br align="left"/>let mut _76: u64;<br align="left"/>let mut _77: u64;<br align="left"/>let mut _78: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _79: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _80: u64;<br align="left"/>let mut _81: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _82: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _83: u64;<br align="left"/>let mut _84: u64;<br align="left"/>let mut _85: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _86: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _87: i16;<br align="left"/>let mut _88: isize;<br align="left"/>let _89: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _90: !;<br align="left"/>let mut _91: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _92: u64;<br align="left"/>let mut _93: isize;<br align="left"/>let _94: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _95: !;<br align="left"/>let mut _96: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _97: u64;<br align="left"/>let mut _98: isize;<br align="left"/>let _99: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _100: !;<br align="left"/>let mut _101: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _102: u64;<br align="left"/>let mut _103: u64;<br align="left"/>debug quote_asset_amount =&gt; _1;<br align="left"/>debug fee_tier =&gt; _2;<br align="left"/>debug fee_adjustment =&gt; _3;<br align="left"/>debug maker_fee =&gt; _4;<br align="left"/>debug residual =&gt; _18;<br align="left"/>debug val =&gt; _21;<br align="left"/>debug residual =&gt; _25;<br align="left"/>debug val =&gt; _28;<br align="left"/>debug residual =&gt; _32;<br align="left"/>debug val =&gt; _35;<br align="left"/>debug residual =&gt; _37;<br align="left"/>debug val =&gt; _40;<br align="left"/>debug residual =&gt; _59;<br align="left"/>debug val =&gt; _62;<br align="left"/>debug residual =&gt; _64;<br align="left"/>debug val =&gt; _67;<br align="left"/>debug residual =&gt; _69;<br align="left"/>debug val =&gt; _72;<br align="left"/>debug residual =&gt; _89;<br align="left"/>debug val =&gt; _92;<br align="left"/>debug residual =&gt; _94;<br align="left"/>debug val =&gt; _97;<br align="left"/>debug residual =&gt; _99;<br align="left"/>debug val =&gt; _102;<br align="left"/>>;
    bb0__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_16 = _1<br/></td></tr><tr><td align="left">_15 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _16)</td></tr></table>>];
    bb1__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/></td></tr><tr><td align="left">_14 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _15)</td></tr></table>>];
    bb2__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>_17 = discriminant(_14)<br/></td></tr><tr><td align="left">switchInt(move _17)</td></tr></table>>];
    bb3__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = ((_14 as Continue).0: u128)<br/>_13 = _21<br/>StorageDead(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>_23 = ((*_2).2: u32)<br/>_22 = move _23 as u128 (IntToInt)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">_12 = &lt;u128 as SafeMath&gt;::safe_mul(move _13, move _22)</td></tr></table>>];
    bb4__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_18)<br/>_18 = ((_14 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_20)<br/>_20 = _18<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _20)</td></tr></table>>];
    bb6__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_18)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">_11 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _12)</td></tr></table>>];
    bb8__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>_24 = discriminant(_11)<br/></td></tr><tr><td align="left">switchInt(move _24)</td></tr></table>>];
    bb9__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_28)<br/>_28 = ((_11 as Continue).0: u128)<br/>_10 = _28<br/>StorageDead(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>_30 = ((*_2).3: u32)<br/>_29 = move _30 as u128 (IntToInt)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">_9 = &lt;u128 as SafeMath&gt;::safe_div(move _10, move _29)</td></tr></table>>];
    bb10__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_25)<br/>_25 = ((_11 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_27)<br/>_27 = _25<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _27)</td></tr></table>>];
    bb11__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">_8 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _9)</td></tr></table>>];
    bb13__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>_31 = discriminant(_8)<br/></td></tr><tr><td align="left">switchInt(move _31)</td></tr></table>>];
    bb14__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = ((_8 as Continue).0: u128)<br/>_7 = _35<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">_6 = &lt;u128 as Cast&gt;::cast::&lt;u64&gt;(move _7)</td></tr></table>>];
    bb15__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_32)<br/>_32 = ((_8 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_34)<br/>_34 = _32<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _34)</td></tr></table>>];
    bb16__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/></td></tr><tr><td align="left">_5 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _6)</td></tr></table>>];
    bb18__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_36 = discriminant(_5)<br/></td></tr><tr><td align="left">switchInt(move _36)</td></tr></table>>];
    bb19__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_40)<br/>_40 = ((_5 as Continue).0: u64)<br/>_4 = _40<br/>StorageDead(_40)<br/>StorageDead(_14)<br/>StorageDead(_11)<br/>StorageDead(_8)<br/>StorageDead(_5)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>_43 = _3<br/>_42 = Lt(move _43, const 0_i16)<br/></td></tr><tr><td align="left">switchInt(move _42)</td></tr></table>>];
    bb20__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_37)<br/>_37 = ((_5 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_39)<br/>_39 = _37<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _39)</td></tr></table>>];
    bb21__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>_45 = _4<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>_52 = _4<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>_57 = _3<br/></td></tr><tr><td align="left">_56 = core::num::&lt;impl i16&gt;::unsigned_abs(move _57)</td></tr></table>>];
    bb23__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>_74 = _3<br/>_73 = Gt(move _74, const 0_i16)<br/></td></tr><tr><td align="left">switchInt(move _73)</td></tr></table>>];
    bb24__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/></td></tr><tr><td align="left">_55 = &lt;u16 as Cast&gt;::cast::&lt;u64&gt;(move _56)</td></tr></table>>];
    bb25__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/></td></tr><tr><td align="left">_54 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _55)</td></tr></table>>];
    bb26__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>_58 = discriminant(_54)<br/></td></tr><tr><td align="left">switchInt(move _58)</td></tr></table>>];
    bb27__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_62)<br/>_62 = ((_54 as Continue).0: u64)<br/>_53 = _62<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">_51 = &lt;u64 as SafeMath&gt;::safe_mul(move _52, move _53)</td></tr></table>>];
    bb28__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_59)<br/>_59 = ((_54 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_61)<br/>_61 = _59<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _61)</td></tr></table>>];
    bb29__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_59)<br/>StorageDead(_53)<br/>StorageDead(_52)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">_50 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _51)</td></tr></table>>];
    bb31__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>_63 = discriminant(_50)<br/></td></tr><tr><td align="left">switchInt(move _63)</td></tr></table>>];
    bb32__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_67)<br/>_67 = ((_50 as Continue).0: u64)<br/>_49 = _67<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">_48 = &lt;u64 as SafeMath&gt;::safe_div_ceil(move _49, const _)</td></tr></table>>];
    bb33__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageLive(_64)<br/>_64 = ((_50 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_66)<br/>_66 = _64<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _66)</td></tr></table>>];
    bb34__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageDead(_64)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/></td></tr><tr><td align="left">_47 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _48)</td></tr></table>>];
    bb36__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>_68 = discriminant(_47)<br/></td></tr><tr><td align="left">switchInt(move _68)</td></tr></table>>];
    bb37__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_72)<br/>_72 = ((_47 as Continue).0: u64)<br/>_46 = _72<br/>StorageDead(_72)<br/></td></tr><tr><td align="left">_44 = core::num::&lt;impl u64&gt;::saturating_sub(move _45, move _46)</td></tr></table>>];
    bb38__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_69)<br/>_69 = ((_47 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_71)<br/>_71 = _69<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _71)</td></tr></table>>];
    bb39__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageDead(_69)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_45)<br/>_4 = move _44<br/>StorageDead(_44)<br/>StorageDead(_54)<br/>StorageDead(_50)<br/>StorageDead(_47)<br/>_41 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>_76 = _4<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>_83 = _4<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>_87 = _3<br/></td></tr><tr><td align="left">_86 = &lt;i16 as Cast&gt;::cast::&lt;u64&gt;(move _87)</td></tr></table>>];
    bb42__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>_41 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/></td></tr><tr><td align="left">_85 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _86)</td></tr></table>>];
    bb44__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>_88 = discriminant(_85)<br/></td></tr><tr><td align="left">switchInt(move _88)</td></tr></table>>];
    bb45__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageLive(_92)<br/>_92 = ((_85 as Continue).0: u64)<br/>_84 = _92<br/>StorageDead(_92)<br/></td></tr><tr><td align="left">_82 = &lt;u64 as SafeMath&gt;::safe_mul(move _83, move _84)</td></tr></table>>];
    bb46__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageLive(_89)<br/>_89 = ((_85 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_91)<br/>_91 = _89<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _91)</td></tr></table>>];
    bb47__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/>StorageDead(_89)<br/>StorageDead(_84)<br/>StorageDead(_83)<br/>StorageDead(_82)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>StorageDead(_83)<br/></td></tr><tr><td align="left">_81 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _82)</td></tr></table>>];
    bb49__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>_93 = discriminant(_81)<br/></td></tr><tr><td align="left">switchInt(move _93)</td></tr></table>>];
    bb50__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageLive(_97)<br/>_97 = ((_81 as Continue).0: u64)<br/>_80 = _97<br/>StorageDead(_97)<br/></td></tr><tr><td align="left">_79 = &lt;u64 as SafeMath&gt;::safe_div(move _80, const _)</td></tr></table>>];
    bb51__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageLive(_94)<br/>_94 = ((_81 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_96)<br/>_96 = _94<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _96)</td></tr></table>>];
    bb52__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>StorageDead(_94)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/></td></tr><tr><td align="left">_78 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _79)</td></tr></table>>];
    bb54__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>_98 = discriminant(_78)<br/></td></tr><tr><td align="left">switchInt(move _98)</td></tr></table>>];
    bb55__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageLive(_102)<br/>_102 = ((_78 as Continue).0: u64)<br/>_77 = _102<br/>StorageDead(_102)<br/></td></tr><tr><td align="left">_75 = core::num::&lt;impl u64&gt;::saturating_add(move _76, move _77)</td></tr></table>>];
    bb56__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageLive(_99)<br/>_99 = ((_78 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_101)<br/>_101 = _99<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _101)</td></tr></table>>];
    bb57__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/>StorageDead(_99)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb58__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>StorageDead(_76)<br/>_4 = move _75<br/>StorageDead(_75)<br/>StorageDead(_85)<br/>StorageDead(_81)<br/>StorageDead(_78)<br/>_41 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb60__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_41)<br/>StorageLive(_103)<br/>_103 = _4<br/>_0 = std::result::Result::&lt;u64, error::ErrorCode&gt;::Ok(move _103)<br/>StorageDead(_103)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb61__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>StorageDead(_79)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>StorageDead(_76)<br/>StorageDead(_75)<br/>StorageDead(_85)<br/>StorageDead(_81)<br/>StorageDead(_78)<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb63__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb64__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_45)<br/>StorageDead(_44)<br/>StorageDead(_54)<br/>StorageDead(_50)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb65__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb66__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb67__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_11)<br/>StorageDead(_8)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb69__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb70__0_2221 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2221 -> bb1__0_2221 [label="return"];
    bb1__0_2221 -> bb2__0_2221 [label="return"];
    bb2__0_2221 -> bb3__0_2221 [label="0"];
    bb2__0_2221 -> bb5__0_2221 [label="1"];
    bb2__0_2221 -> bb4__0_2221 [label="otherwise"];
    bb3__0_2221 -> bb7__0_2221 [label="return"];
    bb5__0_2221 -> bb6__0_2221 [label="return"];
    bb6__0_2221 -> bb66__0_2221 [label=""];
    bb7__0_2221 -> bb8__0_2221 [label="return"];
    bb8__0_2221 -> bb9__0_2221 [label="0"];
    bb8__0_2221 -> bb10__0_2221 [label="1"];
    bb8__0_2221 -> bb4__0_2221 [label="otherwise"];
    bb9__0_2221 -> bb12__0_2221 [label="return"];
    bb10__0_2221 -> bb11__0_2221 [label="return"];
    bb11__0_2221 -> bb66__0_2221 [label=""];
    bb12__0_2221 -> bb13__0_2221 [label="return"];
    bb13__0_2221 -> bb14__0_2221 [label="0"];
    bb13__0_2221 -> bb15__0_2221 [label="1"];
    bb13__0_2221 -> bb4__0_2221 [label="otherwise"];
    bb14__0_2221 -> bb17__0_2221 [label="return"];
    bb15__0_2221 -> bb16__0_2221 [label="return"];
    bb16__0_2221 -> bb67__0_2221 [label=""];
    bb17__0_2221 -> bb18__0_2221 [label="return"];
    bb18__0_2221 -> bb19__0_2221 [label="0"];
    bb18__0_2221 -> bb20__0_2221 [label="1"];
    bb18__0_2221 -> bb4__0_2221 [label="otherwise"];
    bb19__0_2221 -> bb23__0_2221 [label="0"];
    bb19__0_2221 -> bb22__0_2221 [label="otherwise"];
    bb20__0_2221 -> bb21__0_2221 [label="return"];
    bb21__0_2221 -> bb68__0_2221 [label=""];
    bb22__0_2221 -> bb24__0_2221 [label="return"];
    bb23__0_2221 -> bb42__0_2221 [label="0"];
    bb23__0_2221 -> bb41__0_2221 [label="otherwise"];
    bb24__0_2221 -> bb25__0_2221 [label="return"];
    bb25__0_2221 -> bb26__0_2221 [label="return"];
    bb26__0_2221 -> bb27__0_2221 [label="0"];
    bb26__0_2221 -> bb28__0_2221 [label="1"];
    bb26__0_2221 -> bb4__0_2221 [label="otherwise"];
    bb27__0_2221 -> bb30__0_2221 [label="return"];
    bb28__0_2221 -> bb29__0_2221 [label="return"];
    bb29__0_2221 -> bb63__0_2221 [label=""];
    bb30__0_2221 -> bb31__0_2221 [label="return"];
    bb31__0_2221 -> bb32__0_2221 [label="0"];
    bb31__0_2221 -> bb33__0_2221 [label="1"];
    bb31__0_2221 -> bb4__0_2221 [label="otherwise"];
    bb32__0_2221 -> bb35__0_2221 [label="return"];
    bb33__0_2221 -> bb34__0_2221 [label="return"];
    bb34__0_2221 -> bb63__0_2221 [label=""];
    bb35__0_2221 -> bb36__0_2221 [label="return"];
    bb36__0_2221 -> bb37__0_2221 [label="0"];
    bb36__0_2221 -> bb38__0_2221 [label="1"];
    bb36__0_2221 -> bb4__0_2221 [label="otherwise"];
    bb37__0_2221 -> bb40__0_2221 [label="return"];
    bb38__0_2221 -> bb39__0_2221 [label="return"];
    bb39__0_2221 -> bb64__0_2221 [label=""];
    bb40__0_2221 -> bb60__0_2221 [label=""];
    bb41__0_2221 -> bb43__0_2221 [label="return"];
    bb42__0_2221 -> bb59__0_2221 [label=""];
    bb43__0_2221 -> bb44__0_2221 [label="return"];
    bb44__0_2221 -> bb45__0_2221 [label="0"];
    bb44__0_2221 -> bb46__0_2221 [label="1"];
    bb44__0_2221 -> bb4__0_2221 [label="otherwise"];
    bb45__0_2221 -> bb48__0_2221 [label="return"];
    bb46__0_2221 -> bb47__0_2221 [label="return"];
    bb47__0_2221 -> bb61__0_2221 [label=""];
    bb48__0_2221 -> bb49__0_2221 [label="return"];
    bb49__0_2221 -> bb50__0_2221 [label="0"];
    bb49__0_2221 -> bb51__0_2221 [label="1"];
    bb49__0_2221 -> bb4__0_2221 [label="otherwise"];
    bb50__0_2221 -> bb53__0_2221 [label="return"];
    bb51__0_2221 -> bb52__0_2221 [label="return"];
    bb52__0_2221 -> bb61__0_2221 [label=""];
    bb53__0_2221 -> bb54__0_2221 [label="return"];
    bb54__0_2221 -> bb55__0_2221 [label="0"];
    bb54__0_2221 -> bb56__0_2221 [label="1"];
    bb54__0_2221 -> bb4__0_2221 [label="otherwise"];
    bb55__0_2221 -> bb58__0_2221 [label="return"];
    bb56__0_2221 -> bb57__0_2221 [label="return"];
    bb57__0_2221 -> bb62__0_2221 [label=""];
    bb58__0_2221 -> bb59__0_2221 [label=""];
    bb59__0_2221 -> bb60__0_2221 [label=""];
    bb60__0_2221 -> bb70__0_2221 [label=""];
    bb61__0_2221 -> bb62__0_2221 [label=""];
    bb62__0_2221 -> bb65__0_2221 [label=""];
    bb63__0_2221 -> bb64__0_2221 [label=""];
    bb64__0_2221 -> bb65__0_2221 [label=""];
    bb65__0_2221 -> bb69__0_2221 [label=""];
    bb66__0_2221 -> bb67__0_2221 [label=""];
    bb67__0_2221 -> bb68__0_2221 [label=""];
    bb68__0_2221 -> bb69__0_2221 [label=""];
    bb69__0_2221 -> bb70__0_2221 [label=""];
}
