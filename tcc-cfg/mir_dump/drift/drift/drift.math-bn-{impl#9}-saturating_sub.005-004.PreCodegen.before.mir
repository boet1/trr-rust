// MIR for `bn::<impl at /home/bitnami/.cargo/registry/src/index.crates.io-6f17d22bba15001f/uint-0.9.1/src/uint.rs:587:3: 587:13>::saturating_sub` before PreCodegen

fn bn::<impl at /home/bitnami/.cargo/registry/src/index.crates.io-6f17d22bba15001f/uint-0.9.1/src/uint.rs:587:3: 587:13>::saturating_sub(_1: U256, _2: U256) -> U256 {
    debug self => _1;
    debug other => _2;
    let mut _0: math::bn::U256;
    let mut _3: (math::bn::U256, bool);
    let mut _4: math::bn::U256;
    let mut _5: math::bn::U256;
    let _6: math::bn::U256;
    scope 1 {
        debug val => _6;
    }

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        _4 = _1;
        StorageLive(_5);
        _5 = _2;
        _3 = U256::overflowing_sub(move _4, move _5) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_5);
        StorageDead(_4);
        switchInt((_3.1: bool)) -> [0: bb2, otherwise: bb3];
    }

    bb2: {
        StorageLive(_6);
        _6 = (_3.0: math::bn::U256);
        _0 = _6;
        StorageDead(_6);
        goto -> bb4;
    }

    bb3: {
        _0 = U256::zero() -> [return: bb4, unwind continue];
    }

    bb4: {
        StorageDead(_3);
        return;
    }
}
