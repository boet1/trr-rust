// MIR for `bn::<impl at /home/bitnami/.cargo/registry/src/index.crates.io-6f17d22bba15001f/uint-0.9.1/src/uint.rs:587:3: 587:13>::overflowing_pow::{closure#0}` before PreCodegen

fn bn::<impl at /home/bitnami/.cargo/registry/src/index.crates.io-6f17d22bba15001f/uint-0.9.1/src/uint.rs:587:3: 587:13>::overflowing_pow::{closure#0}(_1: &{closure@/home/bitnami/.cargo/registry/src/index.crates.io-6f17d22bba15001f/uint-0.9.1/src/uint.rs:1035:19: 1035:30}, _2: &U256) -> bool {
    debug x => _2;
    let mut _0: bool;
    let mut _3: u64;
    let mut _4: u64;
    let mut _5: &math::bn::U256;

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        StorageLive(_5);
        _5 = &(*_2);
        _4 = U256::low_u64(move _5) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_5);
        _3 = BitAnd(move _4, const 1_u64);
        StorageDead(_4);
        _0 = Eq(move _3, const 0_u64);
        StorageDead(_3);
        return;
    }
}
