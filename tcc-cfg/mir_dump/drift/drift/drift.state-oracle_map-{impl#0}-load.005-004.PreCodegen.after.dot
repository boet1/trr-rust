digraph Mir_0_3601 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn OracleMap::&lt;'a&gt;::load(_1: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;, _2: u64, _3: std::option::Option&lt;state::state::OracleGuardRails&gt;) -&gt; std::result::Result&lt;state::oracle_map::OracleMap&lt;ReErased&gt;, error::ErrorCode&gt;<br align="left"/>let mut _4: std::collections::BTreeMap&lt;anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, std::alloc::Global&gt;;<br align="left"/>let _5: ();<br align="left"/>let mut _6: ();<br align="left"/>let mut _7: std::option::Option&lt;&amp;ReErased &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _8: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _9: isize;<br align="left"/>let _10: &amp;ReErased &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _11: !;<br align="left"/>let _12: ();<br align="left"/>let mut _13: bool;<br align="left"/>let mut _14: &amp;ReErased [anchor_lang::prelude::Pubkey];<br align="left"/>let mut _15: &amp;ReErased [anchor_lang::prelude::Pubkey; 4_usize];<br align="left"/>let _16: [anchor_lang::prelude::Pubkey; 4_usize];<br align="left"/>let mut _17: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _18: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _19: !;<br align="left"/>let _20: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _21: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _22: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _23: std::result::Result&lt;&amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _24: std::option::Option&lt;&amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _25: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _26: isize;<br align="left"/>let _27: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _28: !;<br align="left"/>let mut _29: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _30: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _31: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _32: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _33: std::option::Option&lt;anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _34: &amp;ReErased mut std::collections::BTreeMap&lt;anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _35: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _36: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _37: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _38: bool;<br align="left"/>let mut _39: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _40: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _41: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _42: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _43: !;<br align="left"/>let _44: std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _45: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;&gt;;<br align="left"/>let mut _46: std::result::Result&lt;std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _47: std::result::Result&lt;std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _48: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _49: Closure(DefId(0:3603 ~ drift[d311]::state::oracle_map::{impl#0}::load::{closure#0}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::prelude::ProgramError,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _50: isize;<br align="left"/>let _51: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _52: !;<br align="left"/>let mut _53: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _54: std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let _55: &amp;ReErased [u8; 8_usize];<br align="left"/>let _56: usize;<br align="left"/>let _57: &amp;ReErased [u8];<br align="left"/>let _58: &amp;ReErased [u8];<br align="left"/>let mut _59: &amp;ReErased [u8];<br align="left"/>let _60: &amp;ReErased &amp;ReErased mut [u8];<br align="left"/>let mut _61: &amp;ReErased std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _62: std::ops::Range&lt;usize&gt;;<br align="left"/>let mut _63: usize;<br align="left"/>let mut _64: usize;<br align="left"/>let mut _65: usize;<br align="left"/>let mut _66: (usize, bool);<br align="left"/>let mut _67: &amp;ReErased [u8];<br align="left"/>let _68: ();<br align="left"/>let mut _69: bool;<br align="left"/>let mut _70: &amp;ReErased &amp;ReErased [u8; 8_usize];<br align="left"/>let mut _71: &amp;ReErased &amp;ReErased [u8; 8_usize];<br align="left"/>let _72: &amp;ReErased [u8; 8_usize];<br align="left"/>let _73: [u8; 8_usize];<br align="left"/>let _74: usize;<br align="left"/>let mut _75: bool;<br align="left"/>let mut _76: usize;<br align="left"/>let mut _77: &amp;ReErased [u8];<br align="left"/>let _78: &amp;ReErased &amp;ReErased mut [u8];<br align="left"/>let mut _79: &amp;ReErased std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _80: usize;<br align="left"/>let mut _81: !;<br align="left"/>let mut _82: bool;<br align="left"/>let mut _83: &amp;ReErased &amp;ReErased [u8; 8_usize];<br align="left"/>let mut _84: &amp;ReErased &amp;ReErased [u8; 8_usize];<br align="left"/>let _85: &amp;ReErased [u8; 8_usize];<br align="left"/>let _86: [u8; 8_usize];<br align="left"/>let _87: usize;<br align="left"/>let mut _88: bool;<br align="left"/>let mut _89: usize;<br align="left"/>let mut _90: &amp;ReErased [u8];<br align="left"/>let _91: &amp;ReErased &amp;ReErased mut [u8];<br align="left"/>let mut _92: &amp;ReErased std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _93: usize;<br align="left"/>let mut _94: !;<br align="left"/>let mut _95: !;<br align="left"/>let _96: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _97: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _98: std::result::Result&lt;&amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _99: std::option::Option&lt;&amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _100: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _101: isize;<br align="left"/>let _102: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _103: !;<br align="left"/>let mut _104: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _105: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _106: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _107: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _108: std::option::Option&lt;anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _109: &amp;ReErased mut std::collections::BTreeMap&lt;anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _110: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _111: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _112: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _113: !;<br align="left"/>let _114: ();<br align="left"/>let mut _115: !;<br align="left"/>let _116: state::state::OracleGuardRails;<br align="left"/>let mut _117: isize;<br align="left"/>let _118: state::state::OracleGuardRails;<br align="left"/>let mut _119: state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _120: std::collections::BTreeMap&lt;anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _121: std::collections::BTreeMap&lt;(anchor_lang::prelude::Pubkey, state::oracle::OracleSource), state::oracle::OraclePriceData, std::alloc::Global&gt;;<br align="left"/>let mut _122: std::collections::BTreeMap&lt;(anchor_lang::prelude::Pubkey, state::oracle::OracleSource), math::oracle::OracleValidity, std::alloc::Global&gt;;<br align="left"/>let mut _123: u64;<br align="left"/>let mut _124: state::state::OracleGuardRails;<br align="left"/>let mut _125: state::oracle::OraclePriceData;<br align="left"/>let mut _126: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _127: &amp;ReErased [anchor_lang::prelude::Pubkey; 4_usize];<br align="left"/>let mut _128: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _129: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _130: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _131: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _132: &amp;ReErased mut [u8];<br align="left"/>let mut _133: &amp;ReErased mut [u8];<br align="left"/>let mut _134: &amp;ReErased mut [u8];<br align="left"/>let mut _135: bool;<br align="left"/>let mut _136: isize;<br align="left"/>let mut _137: isize;<br align="left"/>let mut _138: isize;<br align="left"/>let mut _139: isize;<br align="left"/>let mut _140: isize;<br align="left"/>debug account_info_iter =&gt; _1;<br align="left"/>debug slot =&gt; _2;<br align="left"/>debug oracle_guard_rails =&gt; _3;<br align="left"/>debug oracles =&gt; _4;<br align="left"/>debug account_info =&gt; _10;<br align="left"/>debug account_info =&gt; _20;<br align="left"/>debug residual =&gt; _27;<br align="left"/>debug val =&gt; _30;<br align="left"/>debug pubkey =&gt; _31;<br align="left"/>debug data =&gt; _44;<br align="left"/>debug residual =&gt; _51;<br align="left"/>debug val =&gt; _54;<br align="left"/>debug account_discriminator =&gt; _55;<br align="left"/>debug offset =&gt; _56;<br align="left"/>debug slice =&gt; _57;<br align="left"/>debug expected_data_len =&gt; _74;<br align="left"/>debug expected_data_len =&gt; _87;<br align="left"/>debug account_info =&gt; _96;<br align="left"/>debug residual =&gt; _102;<br align="left"/>debug val =&gt; _105;<br align="left"/>debug pubkey =&gt; _106;<br align="left"/>debug ogr =&gt; _116;<br align="left"/>debug o =&gt; _118;<br align="left"/>>;
    bb0__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_135 = const false<br/>StorageLive(_4)<br/>_135 = const true<br/></td></tr><tr><td align="left">_4 = BTreeMap::&lt;anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;::new()</td></tr></table>>];
    bb1__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb2__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_7 = Peekable::&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;::peek(move _8)</td></tr></table>>];
    bb3__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_9 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _9)</td></tr></table>>];
    bb4__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>_10 = ((_7 as Some).0: &amp;&amp;anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_127 = const _<br/>_15 = &amp;(*_127)<br/>_14 = move _15 as &amp;[anchor_lang::prelude::Pubkey] (PointerCoercion(Unsize))<br/>StorageDead(_15)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_128 = deref_copy (*_10)<br/>_18 = &amp;((*_128).3: &amp;anchor_lang::prelude::Pubkey)<br/>_129 = deref_copy (*_18)<br/>_17 = &amp;(*_129)<br/></td></tr><tr><td align="left">_13 = core::slice::&lt;impl [anchor_lang::prelude::Pubkey]&gt;::contains(move _14, move _17)</td></tr></table>>];
    bb5__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">switchInt(move _13)</td></tr></table>>];
    bb6__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_17)<br/>StorageDead(_14)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>_25 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_24 = &lt;Peekable&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt; as Iterator&gt;::next(move _25)</td></tr></table>>];
    bb7__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/></td></tr><tr><td align="left">_23 = &lt;Option&lt;&amp;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as SafeUnwrap&gt;::safe_unwrap(move _24)</td></tr></table>>];
    bb8__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/></td></tr><tr><td align="left">_22 = &lt;std::result::Result&lt;&amp;anchor_lang::prelude::AccountInfo&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _23)</td></tr></table>>];
    bb9__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>_26 = discriminant(_22)<br/></td></tr><tr><td align="left">switchInt(move _26)</td></tr></table>>];
    bb10__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_30)<br/>_30 = ((_22 as Continue).0: &amp;anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_21 = &amp;(*_30)<br/>StorageDead(_30)<br/>_20 = &amp;(*_21)<br/>StorageDead(_22)<br/>StorageDead(_21)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>_32 = &amp;(*_20)<br/></td></tr><tr><td align="left">_31 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::Key&gt;::key(move _32)</td></tr></table>>];
    bb11__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb12__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_27)<br/>_27 = ((_22 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_29)<br/>_29 = _27<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;OracleMap&lt;'_&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _29)</td></tr></table>>];
    bb13__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_27)<br/>StorageDead(_22)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>_34 = &amp;mut _4<br/>StorageLive(_35)<br/>_35 = _31<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>_37 = &amp;(*_20)<br/></td></tr><tr><td align="left">_36 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as Clone&gt;::clone(move _37)</td></tr></table>>];
    bb15__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/></td></tr><tr><td align="left">_33 = BTreeMap::&lt;anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;::insert(move _34, move _35, move _36)</td></tr></table>>];
    bb16__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_35)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">drop(_33)</td></tr></table>>];
    bb17__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_31)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_17)<br/>StorageDead(_14)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>_130 = deref_copy (*_10)<br/>_39 = &amp;((*_130).3: &amp;anchor_lang::prelude::Pubkey)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/></td></tr><tr><td align="left">_42 = id()</td></tr></table>>];
    bb19__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">_41 = &amp;_42<br/>_40 = &amp;_41<br/></td></tr><tr><td align="left">_38 = &lt;&amp;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _39, move _40)</td></tr></table>>];
    bb20__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left">switchInt(move _38)</td></tr></table>>];
    bb21__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_41)<br/>StorageDead(_40)<br/>StorageDead(_39)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>_131 = deref_copy (*_10)<br/>_48 = &amp;(*_131)<br/></td></tr><tr><td align="left">_47 = anchor_lang::prelude::AccountInfo::&lt;'_&gt;::try_borrow_data(move _48)</td></tr></table>>];
    bb22__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageLive(_49)<br/>_49 = {closure@programs/drift/src/state/oracle_map.rs:199:67: 199:70}<br/></td></tr><tr><td align="left">_46 = std::result::Result::&lt;Ref&lt;'_, &amp;mut [u8]&gt;, anchor_lang::prelude::ProgramError&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/state/oracle_map.rs:199:67: 199:70}&gt;(move _47, move _49)</td></tr></table>>];
    bb23__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">_45 = &lt;std::result::Result&lt;Ref&lt;'_, &amp;mut [u8]&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _46)</td></tr></table>>];
    bb24__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>_50 = discriminant(_45)<br/></td></tr><tr><td align="left">switchInt(move _50)</td></tr></table>>];
    bb25__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_54)<br/>_54 = move ((_45 as Continue).0: std::cell::Ref&lt;'_, &amp;mut [u8]&gt;)<br/>_44 = move _54<br/>StorageDead(_54)<br/>_138 = discriminant(_45)<br/>StorageDead(_45)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>_56 = const 0_usize<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>_61 = &amp;_44<br/></td></tr><tr><td align="left">_60 = &lt;Ref&lt;'_, &amp;mut [u8]&gt; as Deref&gt;::deref(move _61)</td></tr></table>>];
    bb26__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_51)<br/>_51 = ((_45 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_53)<br/>_53 = _51<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;OracleMap&lt;'_&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _53)</td></tr></table>>];
    bb27__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_51)<br/>_136 = discriminant(_45)<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">_132 = deref_copy (*_60)<br/>_59 = &amp;(*_132)<br/>StorageDead(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>_63 = _56<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>_65 = _56<br/>_66 = CheckedAdd(_65, const 8_usize)<br/></td></tr><tr><td align="left">assert(!move (_66.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, move _65, const 8_usize)</td></tr></table>>];
    bb29__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">_64 = move (_66.0: usize)<br/>StorageDead(_65)<br/>_62 = std::ops::Range::&lt;usize&gt; { start: move _63, end: move _64 }<br/>StorageDead(_64)<br/>StorageDead(_63)<br/></td></tr><tr><td align="left">_58 = &lt;[u8] as Index&lt;std::ops::Range&lt;usize&gt;&gt;&gt;::index(move _59, move _62)</td></tr></table>>];
    bb30__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageDead(_59)<br/>_57 = &amp;(*_58)<br/>StorageLive(_67)<br/>_67 = &amp;(*_57)<br/></td></tr><tr><td align="left">_55 = OracleMap::&lt;'a&gt;::load::as_array::&lt;u8&gt;(move _67)</td></tr></table>>];
    bb31__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>StorageDead(_60)<br/>StorageDead(_58)<br/>StorageDead(_57)<br/>StorageDead(_56)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>_70 = &amp;_55<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/></td></tr><tr><td align="left">_73 = &lt;PrelaunchOracle as anchor_lang::Discriminator&gt;::discriminator()</td></tr></table>>];
    bb32__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">_72 = &amp;_73<br/>_71 = &amp;_72<br/></td></tr><tr><td align="left">_69 = &lt;&amp;[u8; 8] as PartialEq&gt;::eq(move _70, move _71)</td></tr></table>>];
    bb33__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left">switchInt(move _69)</td></tr></table>>];
    bb34__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>StorageDead(_72)<br/>StorageDead(_71)<br/>StorageDead(_70)<br/>StorageLive(_74)<br/>_74 = const _<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>_79 = &amp;_44<br/></td></tr><tr><td align="left">_78 = &lt;Ref&lt;'_, &amp;mut [u8]&gt; as Deref&gt;::deref(move _79)</td></tr></table>>];
    bb35__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">_133 = deref_copy (*_78)<br/>_77 = &amp;(*_133)<br/>StorageDead(_79)<br/></td></tr><tr><td align="left">_76 = core::slice::&lt;impl [u8]&gt;::len(move _77)</td></tr></table>>];
    bb36__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>StorageLive(_80)<br/>_80 = _74<br/>_75 = Lt(move _76, move _80)<br/></td></tr><tr><td align="left">switchInt(move _75)</td></tr></table>>];
    bb37__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>StorageDead(_78)<br/>StorageDead(_76)<br/>_5 = const ()<br/>StorageDead(_75)<br/>StorageDead(_74)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>StorageDead(_78)<br/>StorageDead(_76)<br/>_68 = const ()<br/>StorageDead(_75)<br/>StorageDead(_74)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>StorageDead(_72)<br/>StorageDead(_71)<br/>StorageDead(_70)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>_83 = &amp;_55<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/></td></tr><tr><td align="left">_86 = &lt;PythLazerOracle as anchor_lang::Discriminator&gt;::discriminator()</td></tr></table>>];
    bb40__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">_85 = &amp;_86<br/>_84 = &amp;_85<br/></td></tr><tr><td align="left">_82 = &lt;&amp;[u8; 8] as PartialEq&gt;::eq(move _83, move _84)</td></tr></table>>];
    bb41__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left">switchInt(move _82)</td></tr></table>>];
    bb42__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>StorageDead(_85)<br/>StorageDead(_84)<br/>StorageDead(_83)<br/>StorageLive(_87)<br/>_87 = const _<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>_92 = &amp;_44<br/></td></tr><tr><td align="left">_91 = &lt;Ref&lt;'_, &amp;mut [u8]&gt; as Deref&gt;::deref(move _92)</td></tr></table>>];
    bb43__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">_134 = deref_copy (*_91)<br/>_90 = &amp;(*_134)<br/>StorageDead(_92)<br/></td></tr><tr><td align="left">_89 = core::slice::&lt;impl [u8]&gt;::len(move _90)</td></tr></table>>];
    bb44__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>StorageLive(_93)<br/>_93 = _87<br/>_88 = Lt(move _89, move _93)<br/></td></tr><tr><td align="left">switchInt(move _88)</td></tr></table>>];
    bb45__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageDead(_91)<br/>StorageDead(_89)<br/>_5 = const ()<br/>StorageDead(_88)<br/>StorageDead(_87)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageDead(_91)<br/>StorageDead(_89)<br/>_68 = const ()<br/>StorageDead(_88)<br/>StorageDead(_87)<br/>StorageDead(_82)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>StorageDead(_85)<br/>StorageDead(_84)<br/>StorageDead(_83)<br/>_5 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageDead(_68)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>_100 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_99 = &lt;Peekable&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt; as Iterator&gt;::next(move _100)</td></tr></table>>];
    bb49__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/></td></tr><tr><td align="left">_98 = &lt;Option&lt;&amp;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as SafeUnwrap&gt;::safe_unwrap(move _99)</td></tr></table>>];
    bb50__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/></td></tr><tr><td align="left">_97 = &lt;std::result::Result&lt;&amp;anchor_lang::prelude::AccountInfo&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _98)</td></tr></table>>];
    bb51__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>_101 = discriminant(_97)<br/></td></tr><tr><td align="left">switchInt(move _101)</td></tr></table>>];
    bb52__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageLive(_105)<br/>_105 = ((_97 as Continue).0: &amp;anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_96 = _105<br/>StorageDead(_105)<br/>StorageDead(_97)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>_107 = &amp;(*_96)<br/></td></tr><tr><td align="left">_106 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::Key&gt;::key(move _107)</td></tr></table>>];
    bb53__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageLive(_102)<br/>_102 = ((_97 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_104)<br/>_104 = _102<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;OracleMap&lt;'_&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _104)</td></tr></table>>];
    bb54__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/>StorageDead(_102)<br/>StorageDead(_97)<br/>StorageDead(_96)<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">drop(_44)</td></tr></table>>];
    bb55__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>_109 = &amp;mut _4<br/>StorageLive(_110)<br/>_110 = _106<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>_112 = &amp;(*_96)<br/></td></tr><tr><td align="left">_111 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as Clone&gt;::clone(move _112)</td></tr></table>>];
    bb56__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/></td></tr><tr><td align="left">_108 = BTreeMap::&lt;anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;::insert(move _109, move _110, move _111)</td></tr></table>>];
    bb57__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/>StorageDead(_110)<br/>StorageDead(_109)<br/></td></tr><tr><td align="left">drop(_108)</td></tr></table>>];
    bb58__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/>StorageDead(_106)<br/>StorageDead(_96)<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">drop(_44)</td></tr></table>>];
    bb59__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_41)<br/>StorageDead(_40)<br/>StorageDead(_39)<br/>_12 = const ()<br/>StorageDead(_38)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>_5 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb60__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageLive(_114)<br/>_5 = const ()<br/>StorageDead(_114)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb61__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageDead(_68)<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">drop(_44)</td></tr></table>>];
    bb63__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_38)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb64__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb65__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_5)<br/>StorageLive(_116)<br/>_117 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _117)</td></tr></table>>];
    bb66__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb67__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_10)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageLive(_118)<br/>_118 = ((_3 as Some).0: state::state::OracleGuardRails)<br/>_116 = _118<br/>StorageDead(_118)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb69__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left">_116 = &lt;state::state::OracleGuardRails as Default&gt;::default()</td></tr></table>>];
    bb70__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageLive(_119)<br/>StorageLive(_120)<br/>_135 = const false<br/>_120 = move _4<br/>StorageLive(_121)<br/></td></tr><tr><td align="left">_121 = BTreeMap::&lt;(anchor_lang::prelude::Pubkey, state::oracle::OracleSource), OraclePriceData&gt;::new()</td></tr></table>>];
    bb71__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageLive(_122)<br/></td></tr><tr><td align="left">_122 = BTreeMap::&lt;(anchor_lang::prelude::Pubkey, state::oracle::OracleSource), OracleValidity&gt;::new()</td></tr></table>>];
    bb72__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageLive(_123)<br/>_123 = _2<br/>StorageLive(_124)<br/>_124 = _116<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>_126 = Option::&lt;u64&gt;::None<br/>_125 = OraclePriceData { price: const _, confidence: const 1_u64, delay: const 0_i64, has_sufficient_number_of_data_points: const true, sequence_id: move _126 }<br/>StorageDead(_126)<br/>_119 = OracleMap::&lt;'_&gt; { oracles: move _120, price_data: move _121, validity: move _122, slot: move _123, oracle_guard_rails: move _124, quote_asset_price_data: move _125 }<br/>StorageDead(_125)<br/>StorageDead(_124)<br/>StorageDead(_123)<br/>StorageDead(_122)<br/>StorageDead(_121)<br/>StorageDead(_120)<br/>_0 = std::result::Result::&lt;OracleMap&lt;'_&gt;, error::ErrorCode&gt;::Ok(move _119)<br/>StorageDead(_119)<br/>StorageDead(_116)<br/>_135 = const false<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb73__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb74__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_10)<br/>StorageDead(_7)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">drop(_4)</td></tr></table>>];
    bb75__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">_135 = const false<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb76__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left">return</td></tr></table>>];
    bb77__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">77 (cleanup)</td></tr><tr><td align="left">drop(_121)</td></tr></table>>];
    bb78__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">78 (cleanup)</td></tr><tr><td align="left">drop(_120)</td></tr></table>>];
    bb79__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">79 (cleanup)</td></tr><tr><td align="left">drop(_44)</td></tr></table>>];
    bb80__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">80 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb81__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">81 (cleanup)</td></tr><tr><td align="left" balign="left">_140 = discriminant(_45)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb82__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">82 (cleanup)</td></tr><tr><td align="left">drop(_4)</td></tr></table>>];
    bb83__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">83 (cleanup)</td></tr><tr><td align="left">switchInt(_135)</td></tr></table>>];
    bb84__0_3601 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_3601 -> bb1__0_3601 [label="return"];
    bb1__0_3601 -> bb2__0_3601 [label=""];
    bb2__0_3601 -> bb3__0_3601 [label="return"];
    bb2__0_3601 -> bb83__0_3601 [label="unwind"];
    bb3__0_3601 -> bb4__0_3601 [label="1"];
    bb3__0_3601 -> bb60__0_3601 [label="otherwise"];
    bb4__0_3601 -> bb5__0_3601 [label="return"];
    bb4__0_3601 -> bb83__0_3601 [label="unwind"];
    bb5__0_3601 -> bb18__0_3601 [label="0"];
    bb5__0_3601 -> bb6__0_3601 [label="otherwise"];
    bb6__0_3601 -> bb7__0_3601 [label="return"];
    bb6__0_3601 -> bb83__0_3601 [label="unwind"];
    bb7__0_3601 -> bb8__0_3601 [label="return"];
    bb7__0_3601 -> bb83__0_3601 [label="unwind"];
    bb8__0_3601 -> bb9__0_3601 [label="return"];
    bb8__0_3601 -> bb83__0_3601 [label="unwind"];
    bb9__0_3601 -> bb10__0_3601 [label="0"];
    bb9__0_3601 -> bb12__0_3601 [label="1"];
    bb9__0_3601 -> bb11__0_3601 [label="otherwise"];
    bb10__0_3601 -> bb14__0_3601 [label="return"];
    bb10__0_3601 -> bb83__0_3601 [label="unwind"];
    bb12__0_3601 -> bb13__0_3601 [label="return"];
    bb12__0_3601 -> bb83__0_3601 [label="unwind"];
    bb13__0_3601 -> bb74__0_3601 [label=""];
    bb14__0_3601 -> bb15__0_3601 [label="return"];
    bb14__0_3601 -> bb83__0_3601 [label="unwind"];
    bb15__0_3601 -> bb16__0_3601 [label="return"];
    bb15__0_3601 -> bb83__0_3601 [label="unwind"];
    bb16__0_3601 -> bb17__0_3601 [label="return"];
    bb16__0_3601 -> bb83__0_3601 [label="unwind"];
    bb17__0_3601 -> bb67__0_3601 [label=""];
    bb18__0_3601 -> bb19__0_3601 [label="return"];
    bb18__0_3601 -> bb83__0_3601 [label="unwind"];
    bb19__0_3601 -> bb20__0_3601 [label="return"];
    bb19__0_3601 -> bb83__0_3601 [label="unwind"];
    bb20__0_3601 -> bb59__0_3601 [label="0"];
    bb20__0_3601 -> bb21__0_3601 [label="otherwise"];
    bb21__0_3601 -> bb22__0_3601 [label="return"];
    bb21__0_3601 -> bb83__0_3601 [label="unwind"];
    bb22__0_3601 -> bb23__0_3601 [label="return"];
    bb22__0_3601 -> bb83__0_3601 [label="unwind"];
    bb23__0_3601 -> bb24__0_3601 [label="return"];
    bb23__0_3601 -> bb83__0_3601 [label="unwind"];
    bb24__0_3601 -> bb25__0_3601 [label="0"];
    bb24__0_3601 -> bb26__0_3601 [label="1"];
    bb24__0_3601 -> bb11__0_3601 [label="otherwise"];
    bb25__0_3601 -> bb28__0_3601 [label="return"];
    bb25__0_3601 -> bb79__0_3601 [label="unwind"];
    bb26__0_3601 -> bb27__0_3601 [label="return"];
    bb26__0_3601 -> bb81__0_3601 [label="unwind"];
    bb27__0_3601 -> bb73__0_3601 [label=""];
    bb28__0_3601 -> bb29__0_3601 [label="success"];
    bb28__0_3601 -> bb79__0_3601 [label="unwind"];
    bb29__0_3601 -> bb30__0_3601 [label="return"];
    bb29__0_3601 -> bb79__0_3601 [label="unwind"];
    bb30__0_3601 -> bb31__0_3601 [label="return"];
    bb30__0_3601 -> bb79__0_3601 [label="unwind"];
    bb31__0_3601 -> bb32__0_3601 [label="return"];
    bb31__0_3601 -> bb79__0_3601 [label="unwind"];
    bb32__0_3601 -> bb33__0_3601 [label="return"];
    bb32__0_3601 -> bb79__0_3601 [label="unwind"];
    bb33__0_3601 -> bb39__0_3601 [label="0"];
    bb33__0_3601 -> bb34__0_3601 [label="otherwise"];
    bb34__0_3601 -> bb35__0_3601 [label="return"];
    bb34__0_3601 -> bb79__0_3601 [label="unwind"];
    bb35__0_3601 -> bb36__0_3601 [label="return"];
    bb35__0_3601 -> bb79__0_3601 [label="unwind"];
    bb36__0_3601 -> bb38__0_3601 [label="0"];
    bb36__0_3601 -> bb37__0_3601 [label="otherwise"];
    bb37__0_3601 -> bb62__0_3601 [label=""];
    bb38__0_3601 -> bb48__0_3601 [label=""];
    bb39__0_3601 -> bb40__0_3601 [label="return"];
    bb39__0_3601 -> bb79__0_3601 [label="unwind"];
    bb40__0_3601 -> bb41__0_3601 [label="return"];
    bb40__0_3601 -> bb79__0_3601 [label="unwind"];
    bb41__0_3601 -> bb47__0_3601 [label="0"];
    bb41__0_3601 -> bb42__0_3601 [label="otherwise"];
    bb42__0_3601 -> bb43__0_3601 [label="return"];
    bb42__0_3601 -> bb79__0_3601 [label="unwind"];
    bb43__0_3601 -> bb44__0_3601 [label="return"];
    bb43__0_3601 -> bb79__0_3601 [label="unwind"];
    bb44__0_3601 -> bb46__0_3601 [label="0"];
    bb44__0_3601 -> bb45__0_3601 [label="otherwise"];
    bb45__0_3601 -> bb61__0_3601 [label=""];
    bb46__0_3601 -> bb48__0_3601 [label=""];
    bb47__0_3601 -> bb61__0_3601 [label=""];
    bb48__0_3601 -> bb49__0_3601 [label="return"];
    bb48__0_3601 -> bb79__0_3601 [label="unwind"];
    bb49__0_3601 -> bb50__0_3601 [label="return"];
    bb49__0_3601 -> bb79__0_3601 [label="unwind"];
    bb50__0_3601 -> bb51__0_3601 [label="return"];
    bb50__0_3601 -> bb79__0_3601 [label="unwind"];
    bb51__0_3601 -> bb52__0_3601 [label="0"];
    bb51__0_3601 -> bb53__0_3601 [label="1"];
    bb51__0_3601 -> bb11__0_3601 [label="otherwise"];
    bb52__0_3601 -> bb55__0_3601 [label="return"];
    bb52__0_3601 -> bb79__0_3601 [label="unwind"];
    bb53__0_3601 -> bb54__0_3601 [label="return"];
    bb53__0_3601 -> bb79__0_3601 [label="unwind"];
    bb54__0_3601 -> bb73__0_3601 [label="return"];
    bb54__0_3601 -> bb83__0_3601 [label="unwind"];
    bb55__0_3601 -> bb56__0_3601 [label="return"];
    bb55__0_3601 -> bb79__0_3601 [label="unwind"];
    bb56__0_3601 -> bb57__0_3601 [label="return"];
    bb56__0_3601 -> bb79__0_3601 [label="unwind"];
    bb57__0_3601 -> bb58__0_3601 [label="return"];
    bb57__0_3601 -> bb79__0_3601 [label="unwind"];
    bb58__0_3601 -> bb66__0_3601 [label="return"];
    bb58__0_3601 -> bb83__0_3601 [label="unwind"];
    bb59__0_3601 -> bb64__0_3601 [label=""];
    bb60__0_3601 -> bb65__0_3601 [label=""];
    bb61__0_3601 -> bb62__0_3601 [label=""];
    bb62__0_3601 -> bb63__0_3601 [label="return"];
    bb62__0_3601 -> bb83__0_3601 [label="unwind"];
    bb63__0_3601 -> bb64__0_3601 [label=""];
    bb64__0_3601 -> bb65__0_3601 [label=""];
    bb65__0_3601 -> bb68__0_3601 [label="1"];
    bb65__0_3601 -> bb69__0_3601 [label="otherwise"];
    bb66__0_3601 -> bb67__0_3601 [label=""];
    bb67__0_3601 -> bb2__0_3601 [label=""];
    bb68__0_3601 -> bb70__0_3601 [label=""];
    bb69__0_3601 -> bb84__0_3601 [label="return"];
    bb69__0_3601 -> bb83__0_3601 [label="unwind"];
    bb70__0_3601 -> bb71__0_3601 [label="return"];
    bb70__0_3601 -> bb78__0_3601 [label="unwind"];
    bb71__0_3601 -> bb72__0_3601 [label="return"];
    bb71__0_3601 -> bb77__0_3601 [label="unwind"];
    bb72__0_3601 -> bb76__0_3601 [label=""];
    bb73__0_3601 -> bb74__0_3601 [label=""];
    bb74__0_3601 -> bb75__0_3601 [label="return"];
    bb74__0_3601 -> bb80__0_3601 [label="unwind"];
    bb75__0_3601 -> bb76__0_3601 [label=""];
    bb77__0_3601 -> bb78__0_3601 [label="return"];
    bb78__0_3601 -> bb83__0_3601 [label="return"];
    bb79__0_3601 -> bb83__0_3601 [label="return"];
    bb81__0_3601 -> bb83__0_3601 [label=""];
    bb82__0_3601 -> bb80__0_3601 [label="return"];
    bb83__0_3601 -> bb80__0_3601 [label="0"];
    bb83__0_3601 -> bb82__0_3601 [label="otherwise"];
    bb84__0_3601 -> bb70__0_3601 [label=""];
}
