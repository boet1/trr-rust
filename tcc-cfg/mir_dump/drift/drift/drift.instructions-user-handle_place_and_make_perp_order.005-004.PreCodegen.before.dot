digraph Mir_0_11754 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn instructions::user::handle_place_and_make_perp_order(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::user::PlaceAndMake&lt;ReErased&gt;&gt;, _2: state::order_params::OrderParams, _3: u32) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _4: ();<br align="left"/>let mut _5: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _6: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _7: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _8: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _9: isize;<br align="left"/>let _10: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _11: !;<br align="left"/>let mut _12: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _13: ();<br align="left"/>let _14: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let _15: anchor_lang::prelude::Clock;<br align="left"/>let mut _16: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _17: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _18: isize;<br align="left"/>let _19: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _20: !;<br align="left"/>let mut _21: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _22: anchor_lang::prelude::Clock;<br align="left"/>let _23: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let _24: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _25: std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _26: std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _27: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let _28: state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _29: state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _30: state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _31: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let mut _32: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, instructions::optional_accounts::AccountMaps&lt;ReErased&gt;&gt;;<br align="left"/>let mut _33: std::result::Result&lt;instructions::optional_accounts::AccountMaps&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _34: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _35: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _36: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _37: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _38: u16;<br align="left"/>let mut _39: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _40: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _41: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _42: u64;<br align="left"/>let mut _43: anchor_lang::prelude::Clock;<br align="left"/>let mut _44: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _45: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _46: isize;<br align="left"/>let _47: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _48: !;<br align="left"/>let mut _49: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _50: anchor_lang::prelude::Clock;<br align="left"/>let mut _51: std::option::Option&lt;state::state::OracleGuardRails&gt;;<br align="left"/>let mut _52: state::state::OracleGuardRails;<br align="left"/>let mut _53: &amp;ReErased state::state::State;<br align="left"/>let mut _54: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _55: isize;<br align="left"/>let _56: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _57: !;<br align="left"/>let mut _58: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _59: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let _60: ();<br align="left"/>let mut _61: bool;<br align="left"/>let mut _62: &amp;ReErased state::order_params::OrderParams;<br align="left"/>let mut _63: bool;<br align="left"/>let mut _64: &amp;ReErased state::order_params::PostOnlyParam;<br align="left"/>let mut _65: &amp;ReErased state::order_params::PostOnlyParam;<br align="left"/>let _66: state::order_params::PostOnlyParam;<br align="left"/>let mut _67: bool;<br align="left"/>let mut _68: &amp;ReErased state::user::OrderType;<br align="left"/>let mut _69: &amp;ReErased state::user::OrderType;<br align="left"/>let _70: state::user::OrderType;<br align="left"/>let mut _71: !;<br align="left"/>let _72: ();<br align="left"/>let mut _73: &amp;ReErased str;<br align="left"/>let _74: &amp;ReErased str;<br align="left"/>let mut _75: anchor_lang::error::Error;<br align="left"/>let mut _76: error::ErrorCode;<br align="left"/>let mut _77: &amp;ReErased Closure(DefId(0:11758 ~ drift[d311]::instructions::user::handle_place_and_make_perp_order::{closure#1}), [ReErased, ReErased, i8, Binder(extern &quot;RustCall&quot; fn(()) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let _78: Closure(DefId(0:11758 ~ drift[d311]::instructions::user::handle_place_and_make_perp_order::{closure#1}), [ReErased, ReErased, i8, Binder(extern &quot;RustCall&quot; fn(()) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _79: ();<br align="left"/>let _80: i128;<br align="left"/>let mut _81: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _82: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _83: u16;<br align="left"/>let mut _84: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _85: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _86: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _87: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _88: &amp;ReErased state::state::State;<br align="left"/>let _89: &amp;ReErased state::state::State;<br align="left"/>let mut _90: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _91: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let mut _92: isize;<br align="left"/>let _93: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _94: !;<br align="left"/>let mut _95: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _96: i128;<br align="left"/>let _97: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _98: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _99: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _100: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _101: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _102: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _103: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _104: Closure(DefId(0:11759 ~ drift[d311]::instructions::user::handle_place_and_make_perp_order::{closure#2}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _105: isize;<br align="left"/>let _106: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _107: !;<br align="left"/>let mut _108: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _109: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _110: ();<br align="left"/>let mut _111: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _112: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _113: &amp;ReErased state::state::State;<br align="left"/>let _114: &amp;ReErased state::state::State;<br align="left"/>let mut _115: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _116: &amp;ReErased mut state::user::User;<br align="left"/>let mut _117: &amp;ReErased mut state::user::User;<br align="left"/>let mut _118: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _119: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _120: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _121: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _122: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _123: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let _124: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _125: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _126: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _127: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;&gt;;<br align="left"/>let _128: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;&gt;;<br align="left"/>let _129: std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;&gt;;<br align="left"/>let mut _130: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let mut _131: state::order_params::OrderParams;<br align="left"/>let mut _132: state::order_params::PlaceOrderOptions;<br align="left"/>let mut _133: isize;<br align="left"/>let _134: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _135: !;<br align="left"/>let mut _136: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _137: ();<br align="left"/>let _138: u32;<br align="left"/>let _139: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _140: (u32, anchor_lang::prelude::Pubkey);<br align="left"/>let mut _141: u32;<br align="left"/>let mut _142: &amp;ReErased state::user::User;<br align="left"/>let _143: &amp;ReErased state::user::User;<br align="left"/>let mut _144: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _145: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _146: &amp;ReErased state::user::User;<br align="left"/>let mut _147: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _148: ();<br align="left"/>let mut _149: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _150: state::user_map::UserMap&lt;ReErased&gt;;<br align="left"/>let mut _151: state::user_map::UserStatsMap&lt;ReErased&gt;;<br align="left"/>let mut _152: (state::user_map::UserMap&lt;ReErased&gt;, state::user_map::UserStatsMap&lt;ReErased&gt;);<br align="left"/>let mut _153: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (state::user_map::UserMap&lt;ReErased&gt;, state::user_map::UserStatsMap&lt;ReErased&gt;)&gt;;<br align="left"/>let mut _154: std::result::Result&lt;(state::user_map::UserMap&lt;ReErased&gt;, state::user_map::UserStatsMap&lt;ReErased&gt;), error::ErrorCode&gt;;<br align="left"/>let mut _155: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _156: isize;<br align="left"/>let _157: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _158: !;<br align="left"/>let mut _159: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _160: (state::user_map::UserMap&lt;ReErased&gt;, state::user_map::UserStatsMap&lt;ReErased&gt;);<br align="left"/>let _161: ();<br align="left"/>let mut _162: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _163: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _164: &amp;ReErased mut state::user_map::UserMap&lt;ReErased&gt;;<br align="left"/>let mut _165: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _166: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _167: anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _168: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _169: isize;<br align="left"/>let _170: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _171: !;<br align="left"/>let mut _172: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _173: ();<br align="left"/>let _174: ();<br align="left"/>let mut _175: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _176: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _177: &amp;ReErased mut state::user_map::UserStatsMap&lt;ReErased&gt;;<br align="left"/>let mut _178: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _179: anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _180: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _181: isize;<br align="left"/>let _182: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _183: !;<br align="left"/>let mut _184: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _185: ();<br align="left"/>let _186: (u64, u64);<br align="left"/>let mut _187: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (u64, u64)&gt;;<br align="left"/>let mut _188: std::result::Result&lt;(u64, u64), error::ErrorCode&gt;;<br align="left"/>let mut _189: u32;<br align="left"/>let mut _190: &amp;ReErased state::state::State;<br align="left"/>let _191: &amp;ReErased state::state::State;<br align="left"/>let mut _192: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _193: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _194: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _195: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let _196: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _197: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let _198: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _199: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _200: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _201: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _202: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _203: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _204: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _205: anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _206: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _207: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let _208: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let _209: anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _210: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _211: &amp;ReErased state::user_map::UserMap&lt;ReErased&gt;;<br align="left"/>let _212: &amp;ReErased state::user_map::UserMap&lt;ReErased&gt;;<br align="left"/>let mut _213: &amp;ReErased state::user_map::UserStatsMap&lt;ReErased&gt;;<br align="left"/>let _214: &amp;ReErased state::user_map::UserStatsMap&lt;ReErased&gt;;<br align="left"/>let mut _215: std::option::Option&lt;u32&gt;;<br align="left"/>let mut _216: u32;<br align="left"/>let mut _217: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let mut _218: state::fill_mode::FillMode;<br align="left"/>let mut _219: isize;<br align="left"/>let _220: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _221: !;<br align="left"/>let mut _222: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _223: (u64, u64);<br align="left"/>let _224: bool;<br align="left"/>let mut _225: &amp;ReErased mut std::slice::Iter&lt;ReErased, state::user::Order&gt;;<br align="left"/>let mut _226: std::slice::Iter&lt;ReErased, state::user::Order&gt;;<br align="left"/>let mut _227: &amp;ReErased [state::user::Order];<br align="left"/>let mut _228: &amp;ReErased [state::user::Order; 32_usize];<br align="left"/>let _229: &amp;ReErased state::user::User;<br align="left"/>let mut _230: &amp;ReErased std::cell::Ref&lt;ReErased, state::user::User&gt;;<br align="left"/>let _231: std::cell::Ref&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _232: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _233: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _234: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::user::User&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _235: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _236: Closure(DefId(0:11760 ~ drift[d311]::instructions::user::handle_place_and_make_perp_order::{closure#3}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _237: isize;<br align="left"/>let _238: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _239: !;<br align="left"/>let mut _240: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _241: std::cell::Ref&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _242: Closure(DefId(0:11757 ~ drift[d311]::instructions::user::handle_place_and_make_perp_order::{closure#0}), [ReErased, ReErased, i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReErased state::user::Order,)) -&gt; bool, []), (&amp;ReErased u32,)]);<br align="left"/>let mut _243: &amp;ReErased u32;<br align="left"/>let _244: ();<br align="left"/>let mut _245: bool;<br align="left"/>let _246: ();<br align="left"/>let mut _247: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _248: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _249: u32;<br align="left"/>let mut _250: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _251: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _252: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _253: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _254: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let _255: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _256: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _257: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _258: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let mut _259: isize;<br align="left"/>let _260: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _261: !;<br align="left"/>let mut _262: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _263: ();<br align="left"/>let mut _264: ();<br align="left"/>let mut _265: &amp;ReErased Closure(DefId(0:11758 ~ drift[d311]::instructions::user::handle_place_and_make_perp_order::{closure#1}), [ReErased, ReErased, i8, Binder(extern &quot;RustCall&quot; fn(()) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _266: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;&gt;;<br align="left"/>let mut _267: &amp;ReErased state::user::OrderType;<br align="left"/>let mut _268: &amp;ReErased state::order_params::PostOnlyParam;<br align="left"/>let mut _269: &amp;ReErased mut instructions::user::PlaceAndMake&lt;ReErased&gt;;<br align="left"/>let mut _270: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _271: &amp;ReErased mut instructions::user::PlaceAndMake&lt;ReErased&gt;;<br align="left"/>let mut _272: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _273: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _274: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _275: &amp;ReErased mut instructions::user::PlaceAndMake&lt;ReErased&gt;;<br align="left"/>let mut _276: &amp;ReErased mut instructions::user::PlaceAndMake&lt;ReErased&gt;;<br align="left"/>let mut _277: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _278: &amp;ReErased mut instructions::user::PlaceAndMake&lt;ReErased&gt;;<br align="left"/>let mut _279: &amp;ReErased mut instructions::user::PlaceAndMake&lt;ReErased&gt;;<br align="left"/>let mut _280: &amp;ReErased mut instructions::user::PlaceAndMake&lt;ReErased&gt;;<br align="left"/>let mut _281: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _282: &amp;ReErased mut instructions::user::PlaceAndMake&lt;ReErased&gt;;<br align="left"/>let mut _283: &amp;ReErased mut instructions::user::PlaceAndMake&lt;ReErased&gt;;<br align="left"/>let mut _284: &amp;ReErased mut instructions::user::PlaceAndMake&lt;ReErased&gt;;<br align="left"/>let mut _285: &amp;ReErased mut instructions::user::PlaceAndMake&lt;ReErased&gt;;<br align="left"/>let mut _286: &amp;ReErased mut instructions::user::PlaceAndMake&lt;ReErased&gt;;<br align="left"/>let mut _287: &amp;ReErased mut instructions::user::PlaceAndMake&lt;ReErased&gt;;<br align="left"/>let mut _288: bool;<br align="left"/>let mut _289: bool;<br align="left"/>let mut _290: bool;<br align="left"/>let mut _291: bool;<br align="left"/>let mut _292: isize;<br align="left"/>let mut _293: isize;<br align="left"/>let mut _294: isize;<br align="left"/>let mut _295: isize;<br align="left"/>let mut _296: isize;<br align="left"/>let mut _297: isize;<br align="left"/>let mut _298: isize;<br align="left"/>let mut _299: isize;<br align="left"/>let mut _300: isize;<br align="left"/>let mut _301: isize;<br align="left"/>let mut _302: isize;<br align="left"/>let mut _303: isize;<br align="left"/>let mut _304: isize;<br align="left"/>let mut _305: isize;<br align="left"/>let mut _306: isize;<br align="left"/>let mut _307: isize;<br align="left"/>let mut _308: isize;<br align="left"/>let mut _309: isize;<br align="left"/>let mut _310: isize;<br align="left"/>let mut _311: isize;<br align="left"/>let mut _312: isize;<br align="left"/>let mut _313: isize;<br align="left"/>let mut _314: isize;<br align="left"/>let mut _315: isize;<br align="left"/>let mut _316: isize;<br align="left"/>let mut _317: isize;<br align="left"/>let mut _318: isize;<br align="left"/>let mut _319: isize;<br align="left"/>let mut _320: isize;<br align="left"/>let mut _321: isize;<br align="left"/>let mut _322: isize;<br align="left"/>let mut _323: isize;<br align="left"/>let mut _324: isize;<br align="left"/>let mut _325: isize;<br align="left"/>let mut _326: isize;<br align="left"/>let mut _327: isize;<br align="left"/>let mut _328: isize;<br align="left"/>let mut _329: isize;<br align="left"/>let mut _330: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _331: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _332: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _333: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _334: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug params =&gt; _2;<br align="left"/>debug taker_order_id =&gt; _3;<br align="left"/>debug residual =&gt; _10;<br align="left"/>debug val =&gt; _13;<br align="left"/>debug clock =&gt; _14;<br align="left"/>debug residual =&gt; _19;<br align="left"/>debug val =&gt; _22;<br align="left"/>debug state =&gt; _23;<br align="left"/>debug remaining_accounts_iter =&gt; _24;<br align="left"/>debug perp_market_map =&gt; _28;<br align="left"/>debug spot_market_map =&gt; _29;<br align="left"/>debug oracle_map =&gt; _30;<br align="left"/>debug residual =&gt; _47;<br align="left"/>debug val =&gt; _50;<br align="left"/>debug residual =&gt; _56;<br align="left"/>debug val =&gt; _59;<br align="left"/>debug residual =&gt; _93;<br align="left"/>debug val =&gt; _96;<br align="left"/>debug user_key =&gt; _97;<br align="left"/>debug user =&gt; _99;<br align="left"/>debug residual =&gt; _106;<br align="left"/>debug val =&gt; _109;<br align="left"/>debug residual =&gt; _134;<br align="left"/>debug val =&gt; _137;<br align="left"/>debug order_id =&gt; _138;<br align="left"/>debug authority =&gt; _139;<br align="left"/>debug makers_and_referrer =&gt; _150;<br align="left"/>debug makers_and_referrer_stats =&gt; _151;<br align="left"/>debug residual =&gt; _157;<br align="left"/>debug val =&gt; _160;<br align="left"/>debug residual =&gt; _170;<br align="left"/>debug val =&gt; _173;<br align="left"/>debug residual =&gt; _182;<br align="left"/>debug val =&gt; _185;<br align="left"/>debug residual =&gt; _220;<br align="left"/>debug val =&gt; _223;<br align="left"/>debug order_exists =&gt; _224;<br align="left"/>debug residual =&gt; _238;<br align="left"/>debug val =&gt; _241;<br align="left"/>debug residual =&gt; _260;<br align="left"/>debug val =&gt; _263;<br align="left"/>>;
    bb0__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_288 = const false<br/>_290 = const false<br/>_289 = const false<br/>_291 = const false<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_269 = deref_copy (_1.1: &amp;mut instructions::user::PlaceAndMake&lt;'_&gt;)<br/>_8 = &amp;((*_269).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_270 = deref_copy (*_8)<br/>_330 = (((_270.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_7 = &amp;(*_330)<br/></td></tr><tr><td align="left">_6 = constraints::fill_not_paused(move _7)</td></tr></table>>];
    bb1__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/></td></tr><tr><td align="left">_5 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _6)</td></tr></table>>];
    bb2__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_9 = discriminant(_5)<br/></td></tr><tr><td align="left">switchInt(move _9)</td></tr></table>>];
    bb3__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = ((_5 as Continue).0: ())<br/>_4 = _13<br/>StorageDead(_13)<br/>_292 = discriminant(_5)<br/>StorageDead(_8)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/></td></tr><tr><td align="left">_17 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb4__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>_10 = move ((_5 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_12)<br/>_12 = move _10<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _12)</td></tr></table>>];
    bb6__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_10)<br/>_318 = discriminant(_5)<br/>StorageDead(_8)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">_16 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _17)</td></tr></table>>];
    bb8__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>_18 = discriminant(_16)<br/></td></tr><tr><td align="left">switchInt(move _18)</td></tr></table>>];
    bb9__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_22)<br/>_22 = move ((_16 as Continue).0: anchor_lang::prelude::Clock)<br/>_15 = move _22<br/>StorageDead(_22)<br/>_14 = &amp;_15<br/>_294 = discriminant(_16)<br/>StorageDead(_16)<br/>StorageLive(_23)<br/>_271 = deref_copy (_1.1: &amp;mut instructions::user::PlaceAndMake&lt;'_&gt;)<br/>_23 = &amp;((*_271).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_272 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_27 = &amp;(*_272)<br/></td></tr><tr><td align="left">_26 = core::slice::&lt;impl [anchor_lang::prelude::AccountInfo&lt;'_&gt;]&gt;::iter(move _27)</td></tr></table>>];
    bb10__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_19)<br/>_19 = move ((_16 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_21)<br/>_21 = move _19<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _21)</td></tr></table>>];
    bb11__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_19)<br/>_316 = discriminant(_16)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/></td></tr><tr><td align="left">_25 = &lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as Iterator&gt;::peekable(move _26)</td></tr></table>>];
    bb13__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>_24 = &amp;mut _25<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>_34 = &amp;mut (*_24)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>_38 = (_2.6: u16)<br/></td></tr><tr><td align="left">_37 = get_writable_perp_market_set(move _38)</td></tr></table>>];
    bb14__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>_36 = &amp;_37<br/>_35 = &amp;(*_36)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/></td></tr><tr><td align="left">_41 = BTreeSet::&lt;u16&gt;::new()</td></tr></table>>];
    bb15__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">_40 = &amp;_41<br/>_39 = &amp;(*_40)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/></td></tr><tr><td align="left">_45 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb16__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left">_44 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _45)</td></tr></table>>];
    bb17__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">_289 = const true<br/>_290 = const true<br/>StorageDead(_45)<br/>_46 = discriminant(_44)<br/></td></tr><tr><td align="left">switchInt(move _46)</td></tr></table>>];
    bb18__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_50)<br/>_50 = move ((_44 as Continue).0: anchor_lang::prelude::Clock)<br/>_43 = move _50<br/>StorageDead(_50)<br/>_42 = (_43.0: u64)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>_273 = deref_copy (*_23)<br/>_331 = (((_273.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_54 = &amp;(*_331)<br/></td></tr><tr><td align="left">_53 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _54)</td></tr></table>>];
    bb19__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>_47 = move ((_44 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_49)<br/>_49 = move _47<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _49)</td></tr></table>>];
    bb20__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_47)<br/>StorageDead(_42)<br/>StorageDead(_39)<br/>StorageDead(_35)<br/>StorageDead(_34)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>_52 = ((*_53).7: state::state::OracleGuardRails)<br/>_51 = Option::&lt;state::state::OracleGuardRails&gt;::Some(move _52)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">_33 = load_maps(move _34, move _35, move _39, move _42, move _51)</td></tr></table>>];
    bb22__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageDead(_42)<br/>StorageDead(_39)<br/>StorageDead(_35)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">_32 = &lt;std::result::Result&lt;AccountMaps&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _33)</td></tr></table>>];
    bb23__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>_55 = discriminant(_32)<br/></td></tr><tr><td align="left">switchInt(move _55)</td></tr></table>>];
    bb24__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_59)<br/>_59 = move ((_32 as Continue).0: instructions::optional_accounts::AccountMaps&lt;'_&gt;)<br/>_31 = move _59<br/>StorageDead(_59)<br/>StorageLive(_28)<br/>_28 = move (_31.0: state::perp_market_map::PerpMarketMap&lt;'_&gt;)<br/>StorageLive(_29)<br/>_29 = move (_31.1: state::spot_market_map::SpotMarketMap&lt;'_&gt;)<br/>StorageLive(_30)<br/>_30 = move (_31.2: state::oracle_map::OracleMap&lt;'_&gt;)<br/>_298 = discriminant(_32)<br/>StorageDead(_53)<br/>_300 = discriminant(_44)<br/>_289 = const false<br/>_290 = const false<br/>StorageDead(_44)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">drop(_41)</td></tr></table>>];
    bb25__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_56)<br/>_56 = ((_32 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_58)<br/>_58 = _56<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _58)</td></tr></table>>];
    bb26__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageDead(_56)<br/>_296 = discriminant(_32)<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">drop(_37)</td></tr></table>>];
    bb28__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_36)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>_62 = &amp;_2<br/></td></tr><tr><td align="left">_61 = order_params::OrderParams::is_immediate_or_cancel(move _62)</td></tr></table>>];
    bb29__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left">switchInt(move _61)</td></tr></table>>];
    bb30__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>_64 = &amp;(_2.8: state::order_params::PostOnlyParam)<br/>StorageLive(_65)<br/>_268 = const _<br/>_65 = &amp;(*_268)<br/></td></tr><tr><td align="left">_63 = &lt;PostOnlyParam as PartialEq&gt;::eq(move _64, move _65)</td></tr></table>>];
    bb31__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left">switchInt(move _63)</td></tr></table>>];
    bb33__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageDead(_64)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageDead(_64)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>_68 = &amp;(_2.0: state::user::OrderType)<br/>StorageLive(_69)<br/>_267 = const _<br/>_69 = &amp;(*_267)<br/></td></tr><tr><td align="left">_67 = &lt;state::user::OrderType as PartialEq&gt;::ne(move _68, move _69)</td></tr></table>>];
    bb35__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left">switchInt(move _67)</td></tr></table>>];
    bb36__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageDead(_68)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>_74 = const &quot;place_and_make must use IOC post only limit order&quot;<br/>_73 = &amp;(*_74)<br/></td></tr><tr><td align="left">_72 = solana_program::log::sol_log(move _73)</td></tr></table>>];
    bb37__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>StorageDead(_74)<br/>StorageDead(_72)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>_265 = const _<br/>_77 = &amp;(*_265)<br/>StorageLive(_79)<br/>_79 = ()<br/></td></tr><tr><td align="left">_76 = &lt;{closure@programs/drift/src/error.rs:647:9: 647:11} as Fn&lt;()&gt;&gt;::call(move _77, move _79)</td></tr></table>>];
    bb38__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageDead(_77)<br/></td></tr><tr><td align="left">_75 = &lt;error::ErrorCode as Into&lt;anchor_lang::error::Error&gt;&gt;::into(move _76)</td></tr></table>>];
    bb39__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _75)<br/>StorageDead(_75)<br/>StorageDead(_67)<br/>StorageDead(_63)<br/>StorageDead(_61)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageDead(_68)<br/>_60 = const ()<br/>StorageDead(_67)<br/>StorageDead(_63)<br/>StorageDead(_61)<br/>StorageDead(_60)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>_83 = (_2.6: u16)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>_85 = &amp;_28<br/>_84 = &amp;(*_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>_87 = &amp;mut _30<br/>_86 = &amp;mut (*_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>_274 = deref_copy (*_23)<br/>_332 = (((_274.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_90 = &amp;(*_332)<br/></td></tr><tr><td align="left">_89 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _90)</td></tr></table>>];
    bb41__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">_88 = &amp;(*_89)<br/>StorageDead(_90)<br/>StorageLive(_91)<br/>_91 = &amp;(*_14)<br/></td></tr><tr><td align="left">_82 = update_amm(move _83, move _84, move _86, move _88, move _91)</td></tr></table>>];
    bb42__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/>StorageDead(_88)<br/>StorageDead(_86)<br/>StorageDead(_84)<br/>StorageDead(_83)<br/></td></tr><tr><td align="left">_81 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _82)</td></tr></table>>];
    bb43__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>_92 = discriminant(_81)<br/></td></tr><tr><td align="left">switchInt(move _92)</td></tr></table>>];
    bb44__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_96)<br/>_96 = ((_81 as Continue).0: i128)<br/>_80 = _96<br/>StorageDead(_96)<br/>StorageDead(_89)<br/>StorageDead(_87)<br/>StorageDead(_85)<br/>StorageDead(_81)<br/>StorageDead(_80)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>_275 = deref_copy (_1.1: &amp;mut instructions::user::PlaceAndMake&lt;'_&gt;)<br/>_98 = &amp;((*_275).1: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_97 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt; as anchor_lang::Key&gt;::key(move _98)</td></tr></table>>];
    bb45__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageLive(_93)<br/>_93 = ((_81 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_95)<br/>_95 = _93<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _95)</td></tr></table>>];
    bb46__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/>StorageDead(_93)<br/>StorageDead(_89)<br/>StorageDead(_87)<br/>StorageDead(_85)<br/>StorageDead(_81)<br/>StorageDead(_80)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>_276 = deref_copy (_1.1: &amp;mut instructions::user::PlaceAndMake&lt;'_&gt;)<br/>_103 = &amp;((*_276).1: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_102 = anchor_lang::prelude::AccountLoader::&lt;'_, User&gt;::load_mut(move _103)</td></tr></table>>];
    bb48__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>StorageLive(_104)<br/>_104 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_101 = std::result::Result::&lt;RefMut&lt;'_, User&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _102, move _104)</td></tr></table>>];
    bb49__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/>StorageDead(_102)<br/></td></tr><tr><td align="left">_100 = &lt;std::result::Result&lt;RefMut&lt;'_, User&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _101)</td></tr></table>>];
    bb50__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/>_105 = discriminant(_100)<br/></td></tr><tr><td align="left">switchInt(move _105)</td></tr></table>>];
    bb51__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageLive(_109)<br/>_109 = move ((_100 as Continue).0: std::cell::RefMut&lt;'_, state::user::User&gt;)<br/>_288 = const true<br/>_99 = move _109<br/>StorageDead(_109)<br/>_304 = discriminant(_100)<br/>StorageDead(_100)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>_277 = deref_copy (*_23)<br/>_333 = (((_277.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_115 = &amp;(*_333)<br/></td></tr><tr><td align="left">_114 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _115)</td></tr></table>>];
    bb52__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageLive(_106)<br/>_106 = ((_100 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_108)<br/>_108 = _106<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _108)</td></tr></table>>];
    bb53__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/>StorageDead(_106)<br/>_302 = discriminant(_100)<br/>StorageDead(_100)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">_113 = &amp;(*_114)<br/>StorageDead(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>_119 = &amp;mut _99<br/>_118 = &amp;mut (*_119)<br/></td></tr><tr><td align="left">_117 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _118)</td></tr></table>>];
    bb55__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">_116 = &amp;mut (*_117)<br/>StorageDead(_118)<br/>StorageLive(_120)<br/>_120 = _97<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>_122 = &amp;_28<br/>_121 = &amp;(*_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>_124 = &amp;_29<br/>_123 = &amp;(*_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>_126 = &amp;mut _30<br/>_125 = &amp;mut (*_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>_266 = const _<br/>_128 = &amp;(*_266)<br/>_127 = &amp;(*_128)<br/>StorageLive(_130)<br/>_130 = &amp;(*_14)<br/>StorageLive(_131)<br/>_131 = _2<br/>StorageLive(_132)<br/></td></tr><tr><td align="left">_132 = &lt;PlaceOrderOptions as Default&gt;::default()</td></tr></table>>];
    bb56__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left">_112 = controller::orders::place_perp_order(move _113, move _116, move _120, move _121, move _123, move _125, move _127, move _130, move _131, move _132)</td></tr></table>>];
    bb57__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_132)<br/>StorageDead(_131)<br/>StorageDead(_130)<br/>StorageDead(_127)<br/>StorageDead(_125)<br/>StorageDead(_123)<br/>StorageDead(_121)<br/>StorageDead(_120)<br/>StorageDead(_116)<br/>StorageDead(_113)<br/></td></tr><tr><td align="left">_111 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _112)</td></tr></table>>];
    bb58__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>_133 = discriminant(_111)<br/></td></tr><tr><td align="left">switchInt(move _133)</td></tr></table>>];
    bb59__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageLive(_137)<br/>_137 = ((_111 as Continue).0: ())<br/>_110 = _137<br/>StorageDead(_137)<br/>StorageDead(_128)<br/>StorageDead(_126)<br/>StorageDead(_124)<br/>StorageDead(_122)<br/>StorageDead(_119)<br/>StorageDead(_117)<br/>StorageDead(_114)<br/>StorageDead(_111)<br/>StorageDead(_110)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>_144 = &amp;_99<br/></td></tr><tr><td align="left">_143 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _144)</td></tr></table>>];
    bb60__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageLive(_134)<br/>_134 = ((_111 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_136)<br/>_136 = _134<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _136)</td></tr></table>>];
    bb61__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_136)<br/>StorageDead(_134)<br/>StorageDead(_128)<br/>StorageDead(_126)<br/>StorageDead(_124)<br/>StorageDead(_122)<br/>StorageDead(_119)<br/>StorageDead(_117)<br/>StorageDead(_114)<br/>StorageDead(_111)<br/>StorageDead(_110)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">_142 = &amp;(*_143)<br/>StorageDead(_144)<br/></td></tr><tr><td align="left">_141 = User::get_last_order_id(move _142)</td></tr></table>>];
    bb63__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_142)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>_147 = &amp;_99<br/></td></tr><tr><td align="left">_146 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _147)</td></tr></table>>];
    bb64__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_147)<br/>_145 = ((*_146).0: anchor_lang::prelude::Pubkey)<br/>_140 = (move _141, move _145)<br/>StorageDead(_145)<br/>StorageDead(_141)<br/>StorageLive(_138)<br/>_138 = (_140.0: u32)<br/>StorageLive(_139)<br/>_139 = (_140.1: anchor_lang::prelude::Pubkey)<br/>StorageDead(_146)<br/>StorageDead(_143)<br/>StorageDead(_140)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>_288 = const false<br/>_149 = move _99<br/></td></tr><tr><td align="left">_148 = std::mem::drop::&lt;RefMut&lt;'_, User&gt;&gt;(move _149)</td></tr></table>>];
    bb65__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_149)<br/>StorageDead(_148)<br/>StorageLive(_152)<br/>StorageLive(_153)<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>_155 = &amp;mut (*_24)<br/></td></tr><tr><td align="left">_154 = load_user_maps::&lt;'_, '_&gt;(move _155, const true)</td></tr></table>>];
    bb66__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_155)<br/></td></tr><tr><td align="left">_153 = &lt;std::result::Result&lt;(UserMap&lt;'_&gt;, UserStatsMap&lt;'_&gt;), error::ErrorCode&gt; as Try&gt;::branch(move _154)</td></tr></table>>];
    bb67__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_154)<br/>_156 = discriminant(_153)<br/></td></tr><tr><td align="left">switchInt(move _156)</td></tr></table>>];
    bb68__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageLive(_160)<br/>_160 = move ((_153 as Continue).0: (state::user_map::UserMap&lt;'_&gt;, state::user_map::UserStatsMap&lt;'_&gt;))<br/>_152 = move _160<br/>StorageDead(_160)<br/>StorageLive(_150)<br/>_150 = move (_152.0: state::user_map::UserMap&lt;'_&gt;)<br/>StorageLive(_151)<br/>_151 = move (_152.1: state::user_map::UserStatsMap&lt;'_&gt;)<br/>_308 = discriminant(_153)<br/>StorageDead(_153)<br/>StorageDead(_152)<br/>StorageLive(_161)<br/>StorageLive(_162)<br/>StorageLive(_163)<br/>StorageLive(_164)<br/>_164 = &amp;mut _150<br/>StorageLive(_165)<br/>StorageLive(_166)<br/>_278 = deref_copy (_1.1: &amp;mut instructions::user::PlaceAndMake&lt;'_&gt;)<br/>_166 = &amp;((*_278).1: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_165 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt; as anchor_lang::Key&gt;::key(move _166)</td></tr></table>>];
    bb69__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageLive(_157)<br/>_157 = ((_153 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_159)<br/>_159 = _157<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _159)</td></tr></table>>];
    bb70__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_159)<br/>StorageDead(_157)<br/>_306 = discriminant(_153)<br/>StorageDead(_153)<br/>StorageDead(_152)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb71__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_166)<br/>StorageLive(_167)<br/>StorageLive(_168)<br/>_279 = deref_copy (_1.1: &amp;mut instructions::user::PlaceAndMake&lt;'_&gt;)<br/>_168 = &amp;((*_279).1: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_167 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt; as Clone&gt;::clone(move _168)</td></tr></table>>];
    bb72__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_168)<br/></td></tr><tr><td align="left">_163 = UserMap::&lt;'_&gt;::insert(move _164, move _165, move _167)</td></tr></table>>];
    bb73__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_167)<br/>StorageDead(_165)<br/>StorageDead(_164)<br/></td></tr><tr><td align="left">_162 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _163)</td></tr></table>>];
    bb74__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_163)<br/>_169 = discriminant(_162)<br/></td></tr><tr><td align="left">switchInt(move _169)</td></tr></table>>];
    bb75__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageLive(_173)<br/>_173 = ((_162 as Continue).0: ())<br/>_161 = _173<br/>StorageDead(_173)<br/>StorageDead(_162)<br/>StorageDead(_161)<br/>StorageLive(_174)<br/>StorageLive(_175)<br/>StorageLive(_176)<br/>StorageLive(_177)<br/>_177 = &amp;mut _151<br/>StorageLive(_178)<br/>_178 = _139<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>_280 = deref_copy (_1.1: &amp;mut instructions::user::PlaceAndMake&lt;'_&gt;)<br/>_180 = &amp;((*_280).2: anchor_lang::prelude::AccountLoader&lt;'_, state::user::UserStats&gt;)<br/></td></tr><tr><td align="left">_179 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, UserStats&gt; as Clone&gt;::clone(move _180)</td></tr></table>>];
    bb76__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageLive(_170)<br/>_170 = ((_162 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_172)<br/>_172 = _170<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _172)</td></tr></table>>];
    bb77__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_172)<br/>StorageDead(_170)<br/>StorageDead(_162)<br/>StorageDead(_161)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb78__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_180)<br/></td></tr><tr><td align="left">_176 = UserStatsMap::&lt;'_&gt;::insert(move _177, move _178, move _179)</td></tr></table>>];
    bb79__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_179)<br/>StorageDead(_178)<br/>StorageDead(_177)<br/></td></tr><tr><td align="left">_175 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _176)</td></tr></table>>];
    bb80__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_176)<br/>_181 = discriminant(_175)<br/></td></tr><tr><td align="left">switchInt(move _181)</td></tr></table>>];
    bb81__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageLive(_185)<br/>_185 = ((_175 as Continue).0: ())<br/>_174 = _185<br/>StorageDead(_185)<br/>StorageDead(_175)<br/>StorageDead(_174)<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>StorageLive(_189)<br/>_189 = _3<br/>StorageLive(_190)<br/>StorageLive(_191)<br/>StorageLive(_192)<br/>_281 = deref_copy (*_23)<br/>_334 = (((_281.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_192 = &amp;(*_334)<br/></td></tr><tr><td align="left">_191 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _192)</td></tr></table>>];
    bb82__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageLive(_182)<br/>_182 = ((_175 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_184)<br/>_184 = _182<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _184)</td></tr></table>>];
    bb83__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_184)<br/>StorageDead(_182)<br/>StorageDead(_175)<br/>StorageDead(_174)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb84__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">_190 = &amp;(*_191)<br/>StorageDead(_192)<br/>StorageLive(_193)<br/>StorageLive(_194)<br/>_282 = deref_copy (_1.1: &amp;mut instructions::user::PlaceAndMake&lt;'_&gt;)<br/>_194 = &amp;((*_282).3: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/>_193 = &amp;(*_194)<br/>StorageLive(_195)<br/>StorageLive(_196)<br/>_283 = deref_copy (_1.1: &amp;mut instructions::user::PlaceAndMake&lt;'_&gt;)<br/>_196 = &amp;((*_283).4: anchor_lang::prelude::AccountLoader&lt;'_, state::user::UserStats&gt;)<br/>_195 = &amp;(*_196)<br/>StorageLive(_197)<br/>StorageLive(_198)<br/>_198 = &amp;_29<br/>_197 = &amp;(*_198)<br/>StorageLive(_199)<br/>StorageLive(_200)<br/>_200 = &amp;_28<br/>_199 = &amp;(*_200)<br/>StorageLive(_201)<br/>StorageLive(_202)<br/>_202 = &amp;mut _30<br/>_201 = &amp;mut (*_202)<br/>StorageLive(_203)<br/>StorageLive(_204)<br/>StorageLive(_205)<br/>StorageLive(_206)<br/>_284 = deref_copy (_1.1: &amp;mut instructions::user::PlaceAndMake&lt;'_&gt;)<br/>_206 = &amp;((*_284).1: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_205 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt; as Clone&gt;::clone(move _206)</td></tr></table>>];
    bb85__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_206)<br/>_204 = &amp;_205<br/>_203 = &amp;(*_204)<br/>StorageLive(_207)<br/>StorageLive(_208)<br/>StorageLive(_209)<br/>StorageLive(_210)<br/>_285 = deref_copy (_1.1: &amp;mut instructions::user::PlaceAndMake&lt;'_&gt;)<br/>_210 = &amp;((*_285).2: anchor_lang::prelude::AccountLoader&lt;'_, state::user::UserStats&gt;)<br/></td></tr><tr><td align="left">_209 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, UserStats&gt; as Clone&gt;::clone(move _210)</td></tr></table>>];
    bb86__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_210)<br/>_208 = &amp;_209<br/>_207 = &amp;(*_208)<br/>StorageLive(_211)<br/>StorageLive(_212)<br/>_212 = &amp;_150<br/>_211 = &amp;(*_212)<br/>StorageLive(_213)<br/>StorageLive(_214)<br/>_214 = &amp;_151<br/>_213 = &amp;(*_214)<br/>StorageLive(_215)<br/>StorageLive(_216)<br/>_216 = _138<br/>_215 = Option::&lt;u32&gt;::Some(move _216)<br/>StorageDead(_216)<br/>StorageLive(_217)<br/>_217 = &amp;(*_14)<br/>StorageLive(_218)<br/>_218 = FillMode::PlaceAndMake<br/></td></tr><tr><td align="left">_188 = controller::orders::fill_perp_order(move _189, move _190, move _193, move _195, move _197, move _199, move _201, move _203, move _207, move _211, move _213, move _215, move _217, move _218)</td></tr></table>>];
    bb87__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_218)<br/>StorageDead(_217)<br/>StorageDead(_215)<br/>StorageDead(_213)<br/>StorageDead(_211)<br/>StorageDead(_207)<br/>StorageDead(_203)<br/>StorageDead(_201)<br/>StorageDead(_199)<br/>StorageDead(_197)<br/>StorageDead(_195)<br/>StorageDead(_193)<br/>StorageDead(_190)<br/>StorageDead(_189)<br/></td></tr><tr><td align="left">_187 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as Try&gt;::branch(move _188)</td></tr></table>>];
    bb88__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_188)<br/>_219 = discriminant(_187)<br/></td></tr><tr><td align="left">switchInt(move _219)</td></tr></table>>];
    bb89__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageLive(_223)<br/>_223 = ((_187 as Continue).0: (u64, u64))<br/>_186 = _223<br/>StorageDead(_223)<br/>StorageDead(_214)<br/>StorageDead(_212)<br/>StorageDead(_209)<br/>StorageDead(_208)<br/>StorageDead(_205)<br/>StorageDead(_204)<br/>StorageDead(_202)<br/>StorageDead(_200)<br/>StorageDead(_198)<br/>StorageDead(_196)<br/>StorageDead(_194)<br/>StorageDead(_191)<br/>StorageDead(_187)<br/>StorageDead(_186)<br/>StorageLive(_224)<br/>StorageLive(_225)<br/>StorageLive(_226)<br/>StorageLive(_227)<br/>StorageLive(_228)<br/>StorageLive(_229)<br/>StorageLive(_230)<br/>StorageLive(_231)<br/>StorageLive(_232)<br/>StorageLive(_233)<br/>StorageLive(_234)<br/>StorageLive(_235)<br/>_286 = deref_copy (_1.1: &amp;mut instructions::user::PlaceAndMake&lt;'_&gt;)<br/>_235 = &amp;((*_286).1: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_234 = anchor_lang::prelude::AccountLoader::&lt;'_, User&gt;::load(move _235)</td></tr></table>>];
    bb90__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageLive(_220)<br/>_220 = ((_187 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_222)<br/>_222 = _220<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _222)</td></tr></table>>];
    bb91__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_222)<br/>StorageDead(_220)<br/>StorageDead(_214)<br/>StorageDead(_212)<br/>StorageDead(_209)<br/>StorageDead(_208)<br/>StorageDead(_205)<br/>StorageDead(_204)<br/>StorageDead(_202)<br/>StorageDead(_200)<br/>StorageDead(_198)<br/>StorageDead(_196)<br/>StorageDead(_194)<br/>StorageDead(_191)<br/>StorageDead(_187)<br/>StorageDead(_186)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb92__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_235)<br/>StorageLive(_236)<br/>_236 = {closure@programs/drift/src/macros.rs:70:40: 70:43}<br/></td></tr><tr><td align="left">_233 = std::result::Result::&lt;Ref&lt;'_, User&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:70:40: 70:43}&gt;(move _234, move _236)</td></tr></table>>];
    bb93__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_236)<br/>StorageDead(_234)<br/></td></tr><tr><td align="left">_232 = &lt;std::result::Result&lt;Ref&lt;'_, User&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _233)</td></tr></table>>];
    bb94__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">_291 = const true<br/>StorageDead(_233)<br/>_237 = discriminant(_232)<br/></td></tr><tr><td align="left">switchInt(move _237)</td></tr></table>>];
    bb95__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageLive(_241)<br/>_241 = move ((_232 as Continue).0: std::cell::Ref&lt;'_, state::user::User&gt;)<br/>_231 = move _241<br/>StorageDead(_241)<br/>_230 = &amp;_231<br/></td></tr><tr><td align="left">_229 = &lt;Ref&lt;'_, User&gt; as Deref&gt;::deref(move _230)</td></tr></table>>];
    bb96__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageLive(_238)<br/>_238 = ((_232 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_240)<br/>_240 = _238<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _240)</td></tr></table>>];
    bb97__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_240)<br/>StorageDead(_238)<br/>StorageDead(_230)<br/>StorageDead(_228)<br/>StorageDead(_227)<br/>StorageDead(_225)<br/>_310 = discriminant(_232)<br/>_291 = const false<br/>StorageDead(_232)<br/>StorageDead(_231)<br/>StorageDead(_229)<br/>StorageDead(_226)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb98__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_230)<br/>_228 = &amp;((*_229).5: [state::user::Order; 32])<br/>_227 = move _228 as &amp;[state::user::Order] (PointerCoercion(Unsize))<br/>StorageDead(_228)<br/></td></tr><tr><td align="left">_226 = core::slice::&lt;impl [Order]&gt;::iter(move _227)</td></tr></table>>];
    bb99__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">_225 = &amp;mut _226<br/>StorageDead(_227)<br/>StorageLive(_242)<br/>StorageLive(_243)<br/>_243 = &amp;_138<br/>_242 = {closure@programs/drift/src/instructions/user.rs:2471:14: 2471:21} { order_id: move _243 }<br/>StorageDead(_243)<br/></td></tr><tr><td align="left">_224 = &lt;std::slice::Iter&lt;'_, Order&gt; as Iterator&gt;::any::&lt;{closure@programs/drift/src/instructions/user.rs:2471:14: 2471:21}&gt;(move _225, move _242)</td></tr></table>>];
    bb100__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_242)<br/>StorageDead(_225)<br/></td></tr><tr><td align="left">drop(_231)</td></tr></table>>];
    bb101__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageLive(_246)<br/>StorageLive(_247)<br/>StorageLive(_248)<br/>StorageLive(_249)<br/>_249 = _138<br/>StorageLive(_250)<br/>StorageLive(_251)<br/>_287 = deref_copy (_1.1: &amp;mut instructions::user::PlaceAndMake&lt;'_&gt;)<br/>_251 = &amp;((*_287).1: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/>_250 = &amp;(*_251)<br/>StorageLive(_252)<br/>StorageLive(_253)<br/>_253 = &amp;_28<br/>_252 = &amp;(*_253)<br/>StorageLive(_254)<br/>StorageLive(_255)<br/>_255 = &amp;_29<br/>_254 = &amp;(*_255)<br/>StorageLive(_256)<br/>StorageLive(_257)<br/>_257 = &amp;mut _30<br/>_256 = &amp;mut (*_257)<br/>StorageLive(_258)<br/>_258 = &amp;(*_14)<br/></td></tr><tr><td align="left">_248 = cancel_order_by_order_id(move _249, move _250, move _252, move _254, move _256, move _258)</td></tr></table>>];
    bb102__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_258)<br/>StorageDead(_256)<br/>StorageDead(_254)<br/>StorageDead(_252)<br/>StorageDead(_250)<br/>StorageDead(_249)<br/></td></tr><tr><td align="left">_247 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _248)</td></tr></table>>];
    bb103__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_248)<br/>_259 = discriminant(_247)<br/></td></tr><tr><td align="left">switchInt(move _259)</td></tr></table>>];
    bb104__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageLive(_263)<br/>_263 = ((_247 as Continue).0: ())<br/>_246 = _263<br/>StorageDead(_263)<br/>StorageDead(_257)<br/>StorageDead(_255)<br/>StorageDead(_253)<br/>StorageDead(_251)<br/>StorageDead(_247)<br/>StorageDead(_246)<br/>_244 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb105__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageLive(_260)<br/>_260 = ((_247 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_262)<br/>_262 = _260<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _262)</td></tr></table>>];
    bb106__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_262)<br/>StorageDead(_260)<br/>StorageDead(_257)<br/>StorageDead(_255)<br/>StorageDead(_253)<br/>StorageDead(_251)<br/>StorageDead(_247)<br/>StorageDead(_246)<br/>StorageDead(_245)<br/>StorageDead(_244)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb107__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">_244 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb108__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageDead(_245)<br/>StorageDead(_244)<br/>StorageLive(_264)<br/>_264 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _264)<br/>StorageDead(_264)<br/>StorageDead(_224)<br/></td></tr><tr><td align="left">drop(_151)</td></tr></table>>];
    bb109__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageDead(_151)<br/></td></tr><tr><td align="left">drop(_150)</td></tr></table>>];
    bb110__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_150)<br/>StorageDead(_139)<br/>StorageDead(_138)<br/>_288 = const false<br/>StorageDead(_99)<br/>StorageDead(_97)<br/></td></tr><tr><td align="left">drop(_30)</td></tr></table>>];
    bb111__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/></td></tr><tr><td align="left">drop(_29)</td></tr></table>>];
    bb112__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/></td></tr><tr><td align="left">drop(_28)</td></tr></table>>];
    bb113__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb114__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageDead(_224)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb115__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left">drop(_151)</td></tr></table>>];
    bb116__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_151)<br/></td></tr><tr><td align="left">drop(_150)</td></tr></table>>];
    bb117__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageDead(_150)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb118__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageDead(_139)<br/>StorageDead(_138)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb119__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">_288 = const false<br/>StorageDead(_99)<br/>StorageDead(_97)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb120__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left">drop(_30)</td></tr></table>>];
    bb121__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/></td></tr><tr><td align="left">drop(_29)</td></tr></table>>];
    bb122__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/></td></tr><tr><td align="left">drop(_28)</td></tr></table>>];
    bb123__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb124__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">drop(_37)</td></tr></table>>];
    bb125__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_36)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb126__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb127__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb128__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left">return</td></tr></table>>];
    bb129__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">129 (cleanup)</td></tr><tr><td align="left">drop(_231)</td></tr></table>>];
    bb130__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">130 (cleanup)</td></tr><tr><td align="left">drop(_151)</td></tr></table>>];
    bb131__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">131 (cleanup)</td></tr><tr><td align="left">drop(_150)</td></tr></table>>];
    bb132__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">132 (cleanup)</td></tr><tr><td align="left">drop(_37)</td></tr></table>>];
    bb133__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">133 (cleanup)</td></tr><tr><td align="left">drop(_30)</td></tr></table>>];
    bb134__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">134 (cleanup)</td></tr><tr><td align="left">drop(_29)</td></tr></table>>];
    bb135__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">135 (cleanup)</td></tr><tr><td align="left">drop(_28)</td></tr></table>>];
    bb136__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">136 (cleanup)</td></tr><tr><td align="left">drop(_41)</td></tr></table>>];
    bb137__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">137 (cleanup)</td></tr><tr><td align="left">drop(_37)</td></tr></table>>];
    bb138__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">138 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb139__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">_312 = discriminant(_232)<br/>_291 = const false<br/>StorageDead(_232)<br/>StorageDead(_231)<br/>StorageDead(_229)<br/>StorageDead(_226)<br/>StorageLive(_244)<br/>StorageLive(_245)<br/>_245 = _224<br/></td></tr><tr><td align="left">switchInt(move _245)</td></tr></table>>];
    bb140__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left">drop(_99)</td></tr></table>>];
    bb141__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left">switchInt(_288)</td></tr></table>>];
    bb142__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">_314 = discriminant(_44)<br/>_289 = const false<br/>_290 = const false<br/>StorageDead(_44)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">drop(_41)</td></tr></table>>];
    bb143__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">143 (cleanup)</td></tr><tr><td align="left" balign="left">_320 = discriminant(_232)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb144__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">144 (cleanup)</td></tr><tr><td align="left" balign="left">_322 = discriminant(_153)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb145__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">145 (cleanup)</td></tr><tr><td align="left">drop(_99)</td></tr></table>>];
    bb146__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">146 (cleanup)</td></tr><tr><td align="left">switchInt(_288)</td></tr></table>>];
    bb147__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">147 (cleanup)</td></tr><tr><td align="left" balign="left">_323 = discriminant(_100)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb148__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">148 (cleanup)</td></tr><tr><td align="left" balign="left">_326 = discriminant(_32)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb149__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">149 (cleanup)</td></tr><tr><td align="left" balign="left">_327 = discriminant(_44)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb150__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">150 (cleanup)</td></tr><tr><td align="left" balign="left">_328 = discriminant(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb151__0_11754 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">151 (cleanup)</td></tr><tr><td align="left" balign="left">_329 = discriminant(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_11754 -> bb1__0_11754 [label="return"];
    bb1__0_11754 -> bb2__0_11754 [label="return"];
    bb1__0_11754 -> bb138__0_11754 [label="unwind"];
    bb2__0_11754 -> bb3__0_11754 [label="0"];
    bb2__0_11754 -> bb5__0_11754 [label="1"];
    bb2__0_11754 -> bb4__0_11754 [label="otherwise"];
    bb3__0_11754 -> bb7__0_11754 [label="return"];
    bb5__0_11754 -> bb6__0_11754 [label="return"];
    bb5__0_11754 -> bb151__0_11754 [label="unwind"];
    bb6__0_11754 -> bb128__0_11754 [label=""];
    bb7__0_11754 -> bb8__0_11754 [label="return"];
    bb7__0_11754 -> bb138__0_11754 [label="unwind"];
    bb8__0_11754 -> bb9__0_11754 [label="0"];
    bb8__0_11754 -> bb10__0_11754 [label="1"];
    bb8__0_11754 -> bb4__0_11754 [label="otherwise"];
    bb9__0_11754 -> bb12__0_11754 [label="return"];
    bb10__0_11754 -> bb11__0_11754 [label="return"];
    bb10__0_11754 -> bb150__0_11754 [label="unwind"];
    bb11__0_11754 -> bb127__0_11754 [label=""];
    bb12__0_11754 -> bb13__0_11754 [label="return"];
    bb13__0_11754 -> bb14__0_11754 [label="return"];
    bb14__0_11754 -> bb15__0_11754 [label="return"];
    bb14__0_11754 -> bb137__0_11754 [label="unwind"];
    bb15__0_11754 -> bb16__0_11754 [label="return"];
    bb15__0_11754 -> bb136__0_11754 [label="unwind"];
    bb16__0_11754 -> bb17__0_11754 [label="return"];
    bb16__0_11754 -> bb136__0_11754 [label="unwind"];
    bb17__0_11754 -> bb18__0_11754 [label="0"];
    bb17__0_11754 -> bb19__0_11754 [label="1"];
    bb17__0_11754 -> bb4__0_11754 [label="otherwise"];
    bb18__0_11754 -> bb21__0_11754 [label="return"];
    bb18__0_11754 -> bb149__0_11754 [label="unwind"];
    bb19__0_11754 -> bb20__0_11754 [label="return"];
    bb19__0_11754 -> bb149__0_11754 [label="unwind"];
    bb20__0_11754 -> bb142__0_11754 [label=""];
    bb21__0_11754 -> bb22__0_11754 [label="return"];
    bb21__0_11754 -> bb149__0_11754 [label="unwind"];
    bb22__0_11754 -> bb23__0_11754 [label="return"];
    bb22__0_11754 -> bb149__0_11754 [label="unwind"];
    bb23__0_11754 -> bb24__0_11754 [label="0"];
    bb23__0_11754 -> bb25__0_11754 [label="1"];
    bb23__0_11754 -> bb4__0_11754 [label="otherwise"];
    bb24__0_11754 -> bb27__0_11754 [label="return"];
    bb24__0_11754 -> bb132__0_11754 [label="unwind"];
    bb25__0_11754 -> bb26__0_11754 [label="return"];
    bb25__0_11754 -> bb148__0_11754 [label="unwind"];
    bb26__0_11754 -> bb142__0_11754 [label=""];
    bb27__0_11754 -> bb28__0_11754 [label="return"];
    bb27__0_11754 -> bb133__0_11754 [label="unwind"];
    bb28__0_11754 -> bb29__0_11754 [label="return"];
    bb28__0_11754 -> bb133__0_11754 [label="unwind"];
    bb29__0_11754 -> bb31__0_11754 [label="0"];
    bb29__0_11754 -> bb30__0_11754 [label="otherwise"];
    bb30__0_11754 -> bb32__0_11754 [label="return"];
    bb30__0_11754 -> bb133__0_11754 [label="unwind"];
    bb31__0_11754 -> bb33__0_11754 [label=""];
    bb32__0_11754 -> bb34__0_11754 [label="0"];
    bb32__0_11754 -> bb33__0_11754 [label="otherwise"];
    bb33__0_11754 -> bb36__0_11754 [label=""];
    bb34__0_11754 -> bb35__0_11754 [label="return"];
    bb34__0_11754 -> bb133__0_11754 [label="unwind"];
    bb35__0_11754 -> bb40__0_11754 [label="0"];
    bb35__0_11754 -> bb36__0_11754 [label="otherwise"];
    bb36__0_11754 -> bb37__0_11754 [label="return"];
    bb36__0_11754 -> bb133__0_11754 [label="unwind"];
    bb37__0_11754 -> bb38__0_11754 [label="return"];
    bb37__0_11754 -> bb133__0_11754 [label="unwind"];
    bb38__0_11754 -> bb39__0_11754 [label="return"];
    bb38__0_11754 -> bb133__0_11754 [label="unwind"];
    bb39__0_11754 -> bb120__0_11754 [label=""];
    bb40__0_11754 -> bb41__0_11754 [label="return"];
    bb40__0_11754 -> bb133__0_11754 [label="unwind"];
    bb41__0_11754 -> bb42__0_11754 [label="return"];
    bb41__0_11754 -> bb133__0_11754 [label="unwind"];
    bb42__0_11754 -> bb43__0_11754 [label="return"];
    bb42__0_11754 -> bb133__0_11754 [label="unwind"];
    bb43__0_11754 -> bb44__0_11754 [label="0"];
    bb43__0_11754 -> bb45__0_11754 [label="1"];
    bb43__0_11754 -> bb4__0_11754 [label="otherwise"];
    bb44__0_11754 -> bb47__0_11754 [label="return"];
    bb44__0_11754 -> bb133__0_11754 [label="unwind"];
    bb45__0_11754 -> bb46__0_11754 [label="return"];
    bb45__0_11754 -> bb133__0_11754 [label="unwind"];
    bb46__0_11754 -> bb120__0_11754 [label=""];
    bb47__0_11754 -> bb48__0_11754 [label="return"];
    bb47__0_11754 -> bb133__0_11754 [label="unwind"];
    bb48__0_11754 -> bb49__0_11754 [label="return"];
    bb48__0_11754 -> bb133__0_11754 [label="unwind"];
    bb49__0_11754 -> bb50__0_11754 [label="return"];
    bb49__0_11754 -> bb133__0_11754 [label="unwind"];
    bb50__0_11754 -> bb51__0_11754 [label="0"];
    bb50__0_11754 -> bb52__0_11754 [label="1"];
    bb50__0_11754 -> bb4__0_11754 [label="otherwise"];
    bb51__0_11754 -> bb54__0_11754 [label="return"];
    bb51__0_11754 -> bb146__0_11754 [label="unwind"];
    bb52__0_11754 -> bb53__0_11754 [label="return"];
    bb52__0_11754 -> bb147__0_11754 [label="unwind"];
    bb53__0_11754 -> bb119__0_11754 [label=""];
    bb54__0_11754 -> bb55__0_11754 [label="return"];
    bb54__0_11754 -> bb146__0_11754 [label="unwind"];
    bb55__0_11754 -> bb56__0_11754 [label="return"];
    bb55__0_11754 -> bb146__0_11754 [label="unwind"];
    bb56__0_11754 -> bb57__0_11754 [label="return"];
    bb56__0_11754 -> bb146__0_11754 [label="unwind"];
    bb57__0_11754 -> bb58__0_11754 [label="return"];
    bb57__0_11754 -> bb146__0_11754 [label="unwind"];
    bb58__0_11754 -> bb59__0_11754 [label="0"];
    bb58__0_11754 -> bb60__0_11754 [label="1"];
    bb58__0_11754 -> bb4__0_11754 [label="otherwise"];
    bb59__0_11754 -> bb62__0_11754 [label="return"];
    bb59__0_11754 -> bb146__0_11754 [label="unwind"];
    bb60__0_11754 -> bb61__0_11754 [label="return"];
    bb60__0_11754 -> bb146__0_11754 [label="unwind"];
    bb61__0_11754 -> bb141__0_11754 [label=""];
    bb62__0_11754 -> bb63__0_11754 [label="return"];
    bb62__0_11754 -> bb146__0_11754 [label="unwind"];
    bb63__0_11754 -> bb64__0_11754 [label="return"];
    bb63__0_11754 -> bb146__0_11754 [label="unwind"];
    bb64__0_11754 -> bb65__0_11754 [label="return"];
    bb64__0_11754 -> bb146__0_11754 [label="unwind"];
    bb65__0_11754 -> bb66__0_11754 [label="return"];
    bb65__0_11754 -> bb146__0_11754 [label="unwind"];
    bb66__0_11754 -> bb67__0_11754 [label="return"];
    bb66__0_11754 -> bb146__0_11754 [label="unwind"];
    bb67__0_11754 -> bb68__0_11754 [label="0"];
    bb67__0_11754 -> bb69__0_11754 [label="1"];
    bb67__0_11754 -> bb4__0_11754 [label="otherwise"];
    bb68__0_11754 -> bb71__0_11754 [label="return"];
    bb68__0_11754 -> bb130__0_11754 [label="unwind"];
    bb69__0_11754 -> bb70__0_11754 [label="return"];
    bb69__0_11754 -> bb144__0_11754 [label="unwind"];
    bb70__0_11754 -> bb118__0_11754 [label=""];
    bb71__0_11754 -> bb72__0_11754 [label="return"];
    bb71__0_11754 -> bb130__0_11754 [label="unwind"];
    bb72__0_11754 -> bb73__0_11754 [label="return"];
    bb72__0_11754 -> bb130__0_11754 [label="unwind"];
    bb73__0_11754 -> bb74__0_11754 [label="return"];
    bb73__0_11754 -> bb130__0_11754 [label="unwind"];
    bb74__0_11754 -> bb75__0_11754 [label="0"];
    bb74__0_11754 -> bb76__0_11754 [label="1"];
    bb74__0_11754 -> bb4__0_11754 [label="otherwise"];
    bb75__0_11754 -> bb78__0_11754 [label="return"];
    bb75__0_11754 -> bb130__0_11754 [label="unwind"];
    bb76__0_11754 -> bb77__0_11754 [label="return"];
    bb76__0_11754 -> bb130__0_11754 [label="unwind"];
    bb77__0_11754 -> bb115__0_11754 [label=""];
    bb78__0_11754 -> bb79__0_11754 [label="return"];
    bb78__0_11754 -> bb130__0_11754 [label="unwind"];
    bb79__0_11754 -> bb80__0_11754 [label="return"];
    bb79__0_11754 -> bb130__0_11754 [label="unwind"];
    bb80__0_11754 -> bb81__0_11754 [label="0"];
    bb80__0_11754 -> bb82__0_11754 [label="1"];
    bb80__0_11754 -> bb4__0_11754 [label="otherwise"];
    bb81__0_11754 -> bb84__0_11754 [label="return"];
    bb81__0_11754 -> bb130__0_11754 [label="unwind"];
    bb82__0_11754 -> bb83__0_11754 [label="return"];
    bb82__0_11754 -> bb130__0_11754 [label="unwind"];
    bb83__0_11754 -> bb115__0_11754 [label=""];
    bb84__0_11754 -> bb85__0_11754 [label="return"];
    bb84__0_11754 -> bb130__0_11754 [label="unwind"];
    bb85__0_11754 -> bb86__0_11754 [label="return"];
    bb85__0_11754 -> bb130__0_11754 [label="unwind"];
    bb86__0_11754 -> bb87__0_11754 [label="return"];
    bb86__0_11754 -> bb130__0_11754 [label="unwind"];
    bb87__0_11754 -> bb88__0_11754 [label="return"];
    bb87__0_11754 -> bb130__0_11754 [label="unwind"];
    bb88__0_11754 -> bb89__0_11754 [label="0"];
    bb88__0_11754 -> bb90__0_11754 [label="1"];
    bb88__0_11754 -> bb4__0_11754 [label="otherwise"];
    bb89__0_11754 -> bb92__0_11754 [label="return"];
    bb89__0_11754 -> bb130__0_11754 [label="unwind"];
    bb90__0_11754 -> bb91__0_11754 [label="return"];
    bb90__0_11754 -> bb130__0_11754 [label="unwind"];
    bb91__0_11754 -> bb115__0_11754 [label=""];
    bb92__0_11754 -> bb93__0_11754 [label="return"];
    bb92__0_11754 -> bb130__0_11754 [label="unwind"];
    bb93__0_11754 -> bb94__0_11754 [label="return"];
    bb93__0_11754 -> bb130__0_11754 [label="unwind"];
    bb94__0_11754 -> bb95__0_11754 [label="0"];
    bb94__0_11754 -> bb96__0_11754 [label="1"];
    bb94__0_11754 -> bb4__0_11754 [label="otherwise"];
    bb95__0_11754 -> bb98__0_11754 [label="return"];
    bb95__0_11754 -> bb129__0_11754 [label="unwind"];
    bb96__0_11754 -> bb97__0_11754 [label="return"];
    bb96__0_11754 -> bb143__0_11754 [label="unwind"];
    bb97__0_11754 -> bb114__0_11754 [label=""];
    bb98__0_11754 -> bb99__0_11754 [label="return"];
    bb98__0_11754 -> bb129__0_11754 [label="unwind"];
    bb99__0_11754 -> bb100__0_11754 [label="return"];
    bb99__0_11754 -> bb129__0_11754 [label="unwind"];
    bb100__0_11754 -> bb139__0_11754 [label="return"];
    bb100__0_11754 -> bb143__0_11754 [label="unwind"];
    bb101__0_11754 -> bb102__0_11754 [label="return"];
    bb101__0_11754 -> bb130__0_11754 [label="unwind"];
    bb102__0_11754 -> bb103__0_11754 [label="return"];
    bb102__0_11754 -> bb130__0_11754 [label="unwind"];
    bb103__0_11754 -> bb104__0_11754 [label="0"];
    bb103__0_11754 -> bb105__0_11754 [label="1"];
    bb103__0_11754 -> bb4__0_11754 [label="otherwise"];
    bb104__0_11754 -> bb108__0_11754 [label=""];
    bb105__0_11754 -> bb106__0_11754 [label="return"];
    bb105__0_11754 -> bb130__0_11754 [label="unwind"];
    bb106__0_11754 -> bb114__0_11754 [label=""];
    bb107__0_11754 -> bb108__0_11754 [label=""];
    bb108__0_11754 -> bb109__0_11754 [label="return"];
    bb108__0_11754 -> bb131__0_11754 [label="unwind"];
    bb109__0_11754 -> bb110__0_11754 [label="return"];
    bb109__0_11754 -> bb146__0_11754 [label="unwind"];
    bb110__0_11754 -> bb111__0_11754 [label="return"];
    bb110__0_11754 -> bb134__0_11754 [label="unwind"];
    bb111__0_11754 -> bb112__0_11754 [label="return"];
    bb111__0_11754 -> bb135__0_11754 [label="unwind"];
    bb112__0_11754 -> bb113__0_11754 [label="return"];
    bb112__0_11754 -> bb138__0_11754 [label="unwind"];
    bb113__0_11754 -> bb128__0_11754 [label=""];
    bb114__0_11754 -> bb115__0_11754 [label=""];
    bb115__0_11754 -> bb116__0_11754 [label="return"];
    bb115__0_11754 -> bb131__0_11754 [label="unwind"];
    bb116__0_11754 -> bb117__0_11754 [label="return"];
    bb116__0_11754 -> bb146__0_11754 [label="unwind"];
    bb117__0_11754 -> bb118__0_11754 [label=""];
    bb118__0_11754 -> bb141__0_11754 [label=""];
    bb119__0_11754 -> bb120__0_11754 [label=""];
    bb120__0_11754 -> bb121__0_11754 [label="return"];
    bb120__0_11754 -> bb134__0_11754 [label="unwind"];
    bb121__0_11754 -> bb122__0_11754 [label="return"];
    bb121__0_11754 -> bb135__0_11754 [label="unwind"];
    bb122__0_11754 -> bb123__0_11754 [label="return"];
    bb122__0_11754 -> bb138__0_11754 [label="unwind"];
    bb123__0_11754 -> bb126__0_11754 [label=""];
    bb124__0_11754 -> bb125__0_11754 [label="return"];
    bb124__0_11754 -> bb138__0_11754 [label="unwind"];
    bb125__0_11754 -> bb126__0_11754 [label=""];
    bb126__0_11754 -> bb127__0_11754 [label=""];
    bb127__0_11754 -> bb128__0_11754 [label=""];
    bb129__0_11754 -> bb143__0_11754 [label="return"];
    bb130__0_11754 -> bb131__0_11754 [label="return"];
    bb131__0_11754 -> bb146__0_11754 [label="return"];
    bb132__0_11754 -> bb133__0_11754 [label="return"];
    bb133__0_11754 -> bb134__0_11754 [label="return"];
    bb134__0_11754 -> bb135__0_11754 [label="return"];
    bb135__0_11754 -> bb138__0_11754 [label="return"];
    bb136__0_11754 -> bb137__0_11754 [label="return"];
    bb137__0_11754 -> bb138__0_11754 [label="return"];
    bb139__0_11754 -> bb107__0_11754 [label="0"];
    bb139__0_11754 -> bb101__0_11754 [label="otherwise"];
    bb140__0_11754 -> bb119__0_11754 [label="return"];
    bb140__0_11754 -> bb133__0_11754 [label="unwind"];
    bb141__0_11754 -> bb119__0_11754 [label="0"];
    bb141__0_11754 -> bb140__0_11754 [label="otherwise"];
    bb142__0_11754 -> bb124__0_11754 [label="return"];
    bb142__0_11754 -> bb137__0_11754 [label="unwind"];
    bb143__0_11754 -> bb130__0_11754 [label=""];
    bb144__0_11754 -> bb146__0_11754 [label=""];
    bb145__0_11754 -> bb133__0_11754 [label="return"];
    bb146__0_11754 -> bb133__0_11754 [label="0"];
    bb146__0_11754 -> bb145__0_11754 [label="otherwise"];
    bb147__0_11754 -> bb133__0_11754 [label=""];
    bb148__0_11754 -> bb149__0_11754 [label=""];
    bb149__0_11754 -> bb136__0_11754 [label=""];
    bb150__0_11754 -> bb138__0_11754 [label=""];
    bb151__0_11754 -> bb138__0_11754 [label=""];
}
