digraph Mir_0_2473 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_max_withdrawable_amount(_1: u16, _2: &amp;ReErased state::user::User, _3: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;, _4: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;, _5: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;) -&gt; std::result::Result&lt;u64, error::ErrorCode&gt;<br align="left"/>let _6: state::margin_calculation::MarginCalculation;<br align="left"/>let mut _7: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::margin_calculation::MarginCalculation&gt;;<br align="left"/>let mut _8: std::result::Result&lt;state::margin_calculation::MarginCalculation, error::ErrorCode&gt;;<br align="left"/>let mut _9: &amp;ReErased state::user::User;<br align="left"/>let mut _10: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _11: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _12: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _13: state::margin_calculation::MarginContext;<br align="left"/>let mut _14: math::margin::MarginRequirementType;<br align="left"/>let mut _15: isize;<br align="left"/>let _16: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _17: !;<br align="left"/>let mut _18: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _19: state::margin_calculation::MarginCalculation;<br align="left"/>let _20: &amp;ReErased mut std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _21: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _22: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _23: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _24: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _25: &amp;ReErased u16;<br align="left"/>let _26: &amp;ReErased u16;<br align="left"/>let mut _27: isize;<br align="left"/>let _28: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _29: !;<br align="left"/>let mut _30: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _31: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _32: u128;<br align="left"/>let mut _33: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _34: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _35: &amp;ReErased state::user::SpotPosition;<br align="left"/>let _36: &amp;ReErased state::user::SpotPosition;<br align="left"/>let mut _37: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::user::SpotPosition&gt;;<br align="left"/>let mut _38: std::result::Result&lt;&amp;ReErased state::user::SpotPosition, error::ErrorCode&gt;;<br align="left"/>let mut _39: &amp;ReErased state::user::User;<br align="left"/>let mut _40: u16;<br align="left"/>let mut _41: isize;<br align="left"/>let _42: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _43: !;<br align="left"/>let mut _44: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _45: &amp;ReErased state::user::SpotPosition;<br align="left"/>let mut _46: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _47: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _48: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _49: isize;<br align="left"/>let _50: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _51: !;<br align="left"/>let mut _52: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _53: u128;<br align="left"/>let _54: i64;<br align="left"/>let mut _55: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _56: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _57: std::result::Result&lt;&amp;ReErased state::oracle::OraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _58: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _59: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _60: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _61: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _62: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _63: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _64: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _65: isize;<br align="left"/>let _66: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _67: !;<br align="left"/>let mut _68: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _69: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _70: u32;<br align="left"/>let mut _71: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _72: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _73: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _74: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _75: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _76: u128;<br align="left"/>let mut _77: i64;<br align="left"/>let mut _78: &amp;ReErased math::margin::MarginRequirementType;<br align="left"/>let _79: &amp;ReErased math::margin::MarginRequirementType;<br align="left"/>let _80: math::margin::MarginRequirementType;<br align="left"/>let mut _81: isize;<br align="left"/>let _82: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _83: !;<br align="left"/>let mut _84: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _85: u32;<br align="left"/>let _86: ();<br align="left"/>let mut _87: bool;<br align="left"/>let mut _88: u32;<br align="left"/>let mut _89: !;<br align="left"/>let _90: ();<br align="left"/>let mut _91: bool;<br align="left"/>let mut _92: u8;<br align="left"/>let mut _93: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u8&gt;;<br align="left"/>let mut _94: std::result::Result&lt;u8, error::ErrorCode&gt;;<br align="left"/>let mut _95: &amp;ReErased state::margin_calculation::MarginCalculation;<br align="left"/>let mut _96: isize;<br align="left"/>let _97: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _98: !;<br align="left"/>let mut _99: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _100: u8;<br align="left"/>let mut _101: !;<br align="left"/>let mut _102: u128;<br align="left"/>let _103: u128;<br align="left"/>let mut _104: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _105: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _106: &amp;ReErased state::margin_calculation::MarginCalculation;<br align="left"/>let mut _107: isize;<br align="left"/>let _108: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _109: !;<br align="left"/>let mut _110: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _111: u128;<br align="left"/>let _112: u128;<br align="left"/>let _113: u128;<br align="left"/>let mut _114: (u128, u128);<br align="left"/>let mut _115: bool;<br align="left"/>let mut _116: u32;<br align="left"/>let mut _117: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _118: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _119: u128;<br align="left"/>let mut _120: u32;<br align="left"/>let mut _121: u32;<br align="left"/>let mut _122: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _123: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _124: (u32, bool);<br align="left"/>let mut _125: u128;<br align="left"/>let mut _126: u32;<br align="left"/>let mut _127: u32;<br align="left"/>let mut _128: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _129: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _130: (u32, bool);<br align="left"/>let mut _131: u128;<br align="left"/>let mut _132: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _133: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _134: u128;<br align="left"/>let mut _135: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _136: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _137: u128;<br align="left"/>let mut _138: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _139: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _140: u128;<br align="left"/>let mut _141: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _142: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _143: u128;<br align="left"/>let mut _144: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _145: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _146: u128;<br align="left"/>let mut _147: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _148: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _149: u128;<br align="left"/>let mut _150: u128;<br align="left"/>let mut _151: isize;<br align="left"/>let _152: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _153: !;<br align="left"/>let mut _154: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _155: u128;<br align="left"/>let mut _156: u128;<br align="left"/>let mut _157: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _158: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _159: u32;<br align="left"/>let mut _160: isize;<br align="left"/>let _161: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _162: !;<br align="left"/>let mut _163: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _164: u128;<br align="left"/>let mut _165: isize;<br align="left"/>let _166: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _167: !;<br align="left"/>let mut _168: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _169: u128;<br align="left"/>let mut _170: isize;<br align="left"/>let _171: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _172: !;<br align="left"/>let mut _173: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _174: u128;<br align="left"/>let mut _175: u128;<br align="left"/>let mut _176: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _177: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _178: i64;<br align="left"/>let mut _179: isize;<br align="left"/>let _180: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _181: !;<br align="left"/>let mut _182: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _183: u128;<br align="left"/>let mut _184: isize;<br align="left"/>let _185: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _186: !;<br align="left"/>let mut _187: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _188: u128;<br align="left"/>let mut _189: u128;<br align="left"/>let mut _190: isize;<br align="left"/>let _191: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _192: !;<br align="left"/>let mut _193: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _194: u128;<br align="left"/>let mut _195: u128;<br align="left"/>let mut _196: isize;<br align="left"/>let _197: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _198: !;<br align="left"/>let mut _199: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _200: u128;<br align="left"/>let mut _201: &amp;ReErased math::margin::MarginRequirementType;<br align="left"/>let mut _202: isize;<br align="left"/>let mut _203: isize;<br align="left"/>let mut _204: isize;<br align="left"/>let mut _205: isize;<br align="left"/>let mut _206: isize;<br align="left"/>debug market_index =&gt; _1;<br align="left"/>debug user =&gt; _2;<br align="left"/>debug perp_market_map =&gt; _3;<br align="left"/>debug spot_market_map =&gt; _4;<br align="left"/>debug oracle_map =&gt; _5;<br align="left"/>debug calculation =&gt; _6;<br align="left"/>debug residual =&gt; _16;<br align="left"/>debug val =&gt; _19;<br align="left"/>debug spot_market =&gt; _20;<br align="left"/>debug residual =&gt; _28;<br align="left"/>debug val =&gt; _31;<br align="left"/>debug token_amount =&gt; _32;<br align="left"/>debug residual =&gt; _42;<br align="left"/>debug val =&gt; _45;<br align="left"/>debug residual =&gt; _50;<br align="left"/>debug val =&gt; _53;<br align="left"/>debug oracle_price =&gt; _54;<br align="left"/>debug residual =&gt; _66;<br align="left"/>debug val =&gt; _69;<br align="left"/>debug asset_weight =&gt; _70;<br align="left"/>debug residual =&gt; _82;<br align="left"/>debug val =&gt; _85;<br align="left"/>debug residual =&gt; _97;<br align="left"/>debug val =&gt; _100;<br align="left"/>debug free_collateral =&gt; _103;<br align="left"/>debug residual =&gt; _108;<br align="left"/>debug val =&gt; _111;<br align="left"/>debug numerator_scale =&gt; _112;<br align="left"/>debug denominator_scale =&gt; _113;<br align="left"/>debug residual =&gt; _152;<br align="left"/>debug val =&gt; _155;<br align="left"/>debug residual =&gt; _161;<br align="left"/>debug val =&gt; _164;<br align="left"/>debug residual =&gt; _166;<br align="left"/>debug val =&gt; _169;<br align="left"/>debug residual =&gt; _171;<br align="left"/>debug val =&gt; _174;<br align="left"/>debug residual =&gt; _180;<br align="left"/>debug val =&gt; _183;<br align="left"/>debug residual =&gt; _185;<br align="left"/>debug val =&gt; _188;<br align="left"/>debug residual =&gt; _191;<br align="left"/>debug val =&gt; _194;<br align="left"/>debug residual =&gt; _197;<br align="left"/>debug val =&gt; _200;<br align="left"/>>;
    bb0__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = &amp;(*_2)<br/>StorageLive(_10)<br/>_10 = &amp;(*_3)<br/>StorageLive(_11)<br/>_11 = &amp;(*_4)<br/>StorageLive(_12)<br/>_12 = &amp;mut (*_5)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_14 = math::margin::MarginRequirementType::Initial<br/></td></tr><tr><td align="left">_13 = MarginContext::standard(move _14)</td></tr></table>>];
    bb1__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/></td></tr><tr><td align="left">_8 = math::margin::calculate_margin_requirement_and_total_collateral_and_liability_info(move _9, move _10, move _11, move _12, move _13)</td></tr></table>>];
    bb2__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as Try&gt;::branch(move _8)</td></tr></table>>];
    bb3__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_15 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _15)</td></tr></table>>];
    bb4__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_19)<br/>_19 = ((_7 as Continue).0: state::margin_calculation::MarginCalculation)<br/>_6 = _19<br/>StorageDead(_19)<br/>StorageDead(_7)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_24 = &amp;(*_4)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_26 = &amp;_1<br/>_25 = &amp;(*_26)<br/></td></tr><tr><td align="left">_23 = SpotMarketMap::&lt;'_&gt;::get_ref(move _24, move _25)</td></tr></table>>];
    bb5__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_16)<br/>_16 = ((_7 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_18)<br/>_18 = _16<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _18)</td></tr></table>>];
    bb7__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_16)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">_22 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _23)</td></tr></table>>];
    bb9__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>_27 = discriminant(_22)<br/></td></tr><tr><td align="left">switchInt(move _27)</td></tr></table>>];
    bb10__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_31)<br/>_31 = move ((_22 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_21 = move _31<br/>StorageDead(_31)<br/>_20 = &amp;mut _21<br/>_204 = discriminant(_22)<br/>StorageDead(_26)<br/>StorageDead(_22)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>_39 = &amp;(*_2)<br/>StorageLive(_40)<br/>_40 = _1<br/></td></tr><tr><td align="left">_38 = User::get_spot_position(move _39, move _40)</td></tr></table>>];
    bb11__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_28)<br/>_28 = ((_22 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_30)<br/>_30 = _28<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _30)</td></tr></table>>];
    bb12__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_28)<br/>_202 = discriminant(_22)<br/>StorageDead(_26)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">_37 = &lt;std::result::Result&lt;&amp;SpotPosition, error::ErrorCode&gt; as Try&gt;::branch(move _38)</td></tr></table>>];
    bb14__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>_41 = discriminant(_37)<br/></td></tr><tr><td align="left">switchInt(move _41)</td></tr></table>>];
    bb15__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_45)<br/>_45 = ((_37 as Continue).0: &amp;state::user::SpotPosition)<br/>_36 = _45<br/>StorageDead(_45)<br/>_35 = &amp;(*_36)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>_48 = &amp;(*_20)<br/></td></tr><tr><td align="left">_47 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _48)</td></tr></table>>];
    bb16__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_42)<br/>_42 = ((_37 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_44)<br/>_44 = _42<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _44)</td></tr></table>>];
    bb17__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_42)<br/>StorageDead(_35)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">_46 = &amp;(*_47)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">_34 = SpotPosition::get_token_amount(move _35, move _46)</td></tr></table>>];
    bb19__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">_33 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _34)</td></tr></table>>];
    bb20__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>_49 = discriminant(_33)<br/></td></tr><tr><td align="left">switchInt(move _49)</td></tr></table>>];
    bb21__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_53)<br/>_53 = ((_33 as Continue).0: u128)<br/>_32 = _53<br/>StorageDead(_53)<br/>StorageDead(_47)<br/>StorageDead(_37)<br/>StorageDead(_36)<br/>StorageDead(_33)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>_58 = &amp;mut (*_5)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>_64 = &amp;(*_20)<br/></td></tr><tr><td align="left">_63 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _64)</td></tr></table>>];
    bb22__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_50)<br/>_50 = ((_33 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_52)<br/>_52 = _50<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _52)</td></tr></table>>];
    bb23__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_50)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">_62 = &amp;(*_63)<br/>StorageDead(_64)<br/></td></tr><tr><td align="left">_61 = SpotMarket::oracle_id(move _62)</td></tr></table>>];
    bb25__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>_60 = &amp;_61<br/>_59 = &amp;(*_60)<br/></td></tr><tr><td align="left">_57 = OracleMap::&lt;'_&gt;::get_price_data(move _58, move _59)</td></tr></table>>];
    bb26__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">_56 = &lt;std::result::Result&lt;&amp;OraclePriceData, error::ErrorCode&gt; as Try&gt;::branch(move _57)</td></tr></table>>];
    bb27__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>_65 = discriminant(_56)<br/></td></tr><tr><td align="left">switchInt(move _65)</td></tr></table>>];
    bb28__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_69)<br/>_69 = ((_56 as Continue).0: &amp;state::oracle::OraclePriceData)<br/>_55 = _69<br/>StorageDead(_69)<br/>_54 = ((*_55).0: i64)<br/>StorageDead(_63)<br/>StorageDead(_61)<br/>StorageDead(_60)<br/>StorageDead(_56)<br/>StorageDead(_55)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>_75 = &amp;(*_20)<br/></td></tr><tr><td align="left">_74 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _75)</td></tr></table>>];
    bb29__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_66)<br/>_66 = ((_56 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_68)<br/>_68 = _66<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _68)</td></tr></table>>];
    bb30__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>StorageDead(_66)<br/>StorageDead(_63)<br/>StorageDead(_61)<br/>StorageDead(_60)<br/>StorageDead(_56)<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">_73 = &amp;(*_74)<br/>StorageDead(_75)<br/>StorageLive(_76)<br/>_76 = _32<br/>StorageLive(_77)<br/>_77 = _54<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>_201 = const _<br/>_79 = &amp;(*_201)<br/>_78 = &amp;(*_79)<br/></td></tr><tr><td align="left">_72 = SpotMarket::get_asset_weight(move _73, move _76, move _77, move _78)</td></tr></table>>];
    bb32__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>StorageDead(_77)<br/>StorageDead(_76)<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">_71 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _72)</td></tr></table>>];
    bb33__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>_81 = discriminant(_71)<br/></td></tr><tr><td align="left">switchInt(move _81)</td></tr></table>>];
    bb34__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_85)<br/>_85 = ((_71 as Continue).0: u32)<br/>_70 = _85<br/>StorageDead(_85)<br/>StorageDead(_79)<br/>StorageDead(_74)<br/>StorageDead(_71)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>_88 = _70<br/>_87 = Eq(move _88, const 0_u32)<br/></td></tr><tr><td align="left">switchInt(move _87)</td></tr></table>>];
    bb35__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_82)<br/>_82 = ((_71 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_84)<br/>_84 = _82<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _84)</td></tr></table>>];
    bb36__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>StorageDead(_82)<br/>StorageDead(_79)<br/>StorageDead(_74)<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>_0 = std::result::Result::&lt;u64, error::ErrorCode&gt;::Ok(const _)<br/>StorageDead(_87)<br/>StorageDead(_86)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>_86 = const ()<br/>StorageDead(_87)<br/>StorageDead(_86)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>_95 = &amp;_6<br/></td></tr><tr><td align="left">_94 = MarginCalculation::get_num_of_liabilities(move _95)</td></tr></table>>];
    bb39__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/></td></tr><tr><td align="left">_93 = &lt;std::result::Result&lt;u8, error::ErrorCode&gt; as Try&gt;::branch(move _94)</td></tr></table>>];
    bb40__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/>_96 = discriminant(_93)<br/></td></tr><tr><td align="left">switchInt(move _96)</td></tr></table>>];
    bb41__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageLive(_100)<br/>_100 = ((_93 as Continue).0: u8)<br/>_92 = _100<br/>StorageDead(_100)<br/>_91 = Eq(move _92, const 0_u8)<br/></td></tr><tr><td align="left">switchInt(move _91)</td></tr></table>>];
    bb42__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageLive(_97)<br/>_97 = ((_93 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_99)<br/>_99 = _97<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _99)</td></tr></table>>];
    bb43__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/>StorageDead(_97)<br/>StorageDead(_93)<br/>StorageDead(_92)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageDead(_92)<br/>StorageLive(_102)<br/>_102 = _32<br/></td></tr><tr><td align="left">_0 = &lt;u128 as Cast&gt;::cast::&lt;u64&gt;(move _102)</td></tr></table>>];
    bb45__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageDead(_92)<br/>_90 = const ()<br/>StorageDead(_91)<br/>StorageDead(_90)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>_106 = &amp;_6<br/></td></tr><tr><td align="left">_105 = MarginCalculation::get_free_collateral(move _106)</td></tr></table>>];
    bb46__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/></td></tr><tr><td align="left">_104 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _105)</td></tr></table>>];
    bb48__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/>_107 = discriminant(_104)<br/></td></tr><tr><td align="left">switchInt(move _107)</td></tr></table>>];
    bb49__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageLive(_111)<br/>_111 = ((_104 as Continue).0: u128)<br/>_103 = _111<br/>StorageDead(_111)<br/>StorageDead(_104)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>_118 = &amp;(*_20)<br/></td></tr><tr><td align="left">_117 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _118)</td></tr></table>>];
    bb50__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageLive(_108)<br/>_108 = ((_104 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_110)<br/>_110 = _108<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _110)</td></tr></table>>];
    bb51__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/>StorageDead(_108)<br/>StorageDead(_104)<br/>StorageDead(_103)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb52__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>_116 = ((*_117).41: u32)<br/>_115 = Gt(move _116, const 6_u32)<br/></td></tr><tr><td align="left">switchInt(move _115)</td></tr></table>>];
    bb53__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/>StorageDead(_116)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>_123 = &amp;(*_20)<br/></td></tr><tr><td align="left">_122 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _123)</td></tr></table>>];
    bb54__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/>_121 = ((*_122).41: u32)<br/>_124 = CheckedSub(_121, const 6_u32)<br/></td></tr><tr><td align="left">assert(!move (_124.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, move _121, const 6_u32)</td></tr></table>>];
    bb55__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">_120 = move (_124.0: u32)<br/>StorageDead(_121)<br/></td></tr><tr><td align="left">_119 = core::num::&lt;impl u128&gt;::pow(const 10_u128, move _120)</td></tr></table>>];
    bb56__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/>_114 = (move _119, const 1_u128)<br/>StorageDead(_119)<br/>StorageDead(_122)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb57__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/>StorageDead(_116)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>_129 = &amp;(*_20)<br/></td></tr><tr><td align="left">_128 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _129)</td></tr></table>>];
    bb58__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_129)<br/>_127 = ((*_128).41: u32)<br/>_130 = CheckedSub(const 6_u32, _127)<br/></td></tr><tr><td align="left">assert(!move (_130.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, const 6_u32, move _127)</td></tr></table>>];
    bb59__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">_126 = move (_130.0: u32)<br/>StorageDead(_127)<br/></td></tr><tr><td align="left">_125 = core::num::&lt;impl u128&gt;::pow(const 10_u128, move _126)</td></tr></table>>];
    bb60__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/>_114 = (const 1_u128, move _125)<br/>StorageDead(_125)<br/>StorageDead(_128)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb61__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_115)<br/>StorageLive(_112)<br/>_112 = (_114.0: u128)<br/>StorageLive(_113)<br/>_113 = (_114.1: u128)<br/>StorageDead(_114)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>_150 = _103<br/></td></tr><tr><td align="left">_149 = core::num::&lt;impl u128&gt;::saturating_sub(move _150, const 1_u128)</td></tr></table>>];
    bb62__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_150)<br/></td></tr><tr><td align="left">_148 = &lt;u128 as SafeMath&gt;::safe_mul(move _149, const _)</td></tr></table>>];
    bb63__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_149)<br/></td></tr><tr><td align="left">_147 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _148)</td></tr></table>>];
    bb64__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_148)<br/>_151 = discriminant(_147)<br/></td></tr><tr><td align="left">switchInt(move _151)</td></tr></table>>];
    bb65__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageLive(_155)<br/>_155 = ((_147 as Continue).0: u128)<br/>_146 = _155<br/>StorageDead(_155)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>_159 = _70<br/></td></tr><tr><td align="left">_158 = &lt;u32 as Cast&gt;::cast::&lt;u128&gt;(move _159)</td></tr></table>>];
    bb66__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageLive(_152)<br/>_152 = ((_147 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_154)<br/>_154 = _152<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _154)</td></tr></table>>];
    bb67__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_154)<br/>StorageDead(_152)<br/>StorageDead(_146)<br/>StorageDead(_145)<br/>StorageDead(_143)<br/>StorageDead(_142)<br/>StorageDead(_140)<br/>StorageDead(_139)<br/>StorageDead(_137)<br/>StorageDead(_136)<br/>StorageDead(_134)<br/>StorageDead(_133)<br/>StorageDead(_131)<br/>StorageDead(_113)<br/>StorageDead(_112)<br/>StorageDead(_103)<br/>StorageDead(_70)<br/>StorageDead(_54)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">drop(_21)</td></tr></table>>];
    bb68__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_159)<br/></td></tr><tr><td align="left">_157 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _158)</td></tr></table>>];
    bb69__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_158)<br/>_160 = discriminant(_157)<br/></td></tr><tr><td align="left">switchInt(move _160)</td></tr></table>>];
    bb70__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageLive(_164)<br/>_164 = ((_157 as Continue).0: u128)<br/>_156 = _164<br/>StorageDead(_164)<br/></td></tr><tr><td align="left">_145 = &lt;u128 as SafeMath&gt;::safe_div(move _146, move _156)</td></tr></table>>];
    bb71__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageLive(_161)<br/>_161 = ((_157 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_163)<br/>_163 = _161<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _163)</td></tr></table>>];
    bb72__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_163)<br/>StorageDead(_161)<br/>StorageDead(_156)<br/>StorageDead(_146)<br/>StorageDead(_145)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb73__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_156)<br/>StorageDead(_146)<br/></td></tr><tr><td align="left">_144 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _145)</td></tr></table>>];
    bb74__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_145)<br/>_165 = discriminant(_144)<br/></td></tr><tr><td align="left">switchInt(move _165)</td></tr></table>>];
    bb75__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageLive(_169)<br/>_169 = ((_144 as Continue).0: u128)<br/>_143 = _169<br/>StorageDead(_169)<br/></td></tr><tr><td align="left">_142 = &lt;u128 as SafeMath&gt;::safe_mul(move _143, const _)</td></tr></table>>];
    bb76__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageLive(_166)<br/>_166 = ((_144 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_168)<br/>_168 = _166<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _168)</td></tr></table>>];
    bb77__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_168)<br/>StorageDead(_166)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb78__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_143)<br/></td></tr><tr><td align="left">_141 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _142)</td></tr></table>>];
    bb79__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_142)<br/>_170 = discriminant(_141)<br/></td></tr><tr><td align="left">switchInt(move _170)</td></tr></table>>];
    bb80__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageLive(_174)<br/>_174 = ((_141 as Continue).0: u128)<br/>_140 = _174<br/>StorageDead(_174)<br/>StorageLive(_175)<br/>StorageLive(_176)<br/>StorageLive(_177)<br/>StorageLive(_178)<br/>_178 = _54<br/></td></tr><tr><td align="left">_177 = &lt;i64 as Cast&gt;::cast::&lt;u128&gt;(move _178)</td></tr></table>>];
    bb81__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageLive(_171)<br/>_171 = ((_141 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_173)<br/>_173 = _171<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _173)</td></tr></table>>];
    bb82__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_173)<br/>StorageDead(_171)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb83__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_178)<br/></td></tr><tr><td align="left">_176 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _177)</td></tr></table>>];
    bb84__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_177)<br/>_179 = discriminant(_176)<br/></td></tr><tr><td align="left">switchInt(move _179)</td></tr></table>>];
    bb85__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageLive(_183)<br/>_183 = ((_176 as Continue).0: u128)<br/>_175 = _183<br/>StorageDead(_183)<br/></td></tr><tr><td align="left">_139 = &lt;u128 as SafeMath&gt;::safe_div(move _140, move _175)</td></tr></table>>];
    bb86__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageLive(_180)<br/>_180 = ((_176 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_182)<br/>_182 = _180<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _182)</td></tr></table>>];
    bb87__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_182)<br/>StorageDead(_180)<br/>StorageDead(_175)<br/>StorageDead(_140)<br/>StorageDead(_139)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb88__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_175)<br/>StorageDead(_140)<br/></td></tr><tr><td align="left">_138 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _139)</td></tr></table>>];
    bb89__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_139)<br/>_184 = discriminant(_138)<br/></td></tr><tr><td align="left">switchInt(move _184)</td></tr></table>>];
    bb90__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageLive(_188)<br/>_188 = ((_138 as Continue).0: u128)<br/>_137 = _188<br/>StorageDead(_188)<br/>StorageLive(_189)<br/>_189 = _112<br/></td></tr><tr><td align="left">_136 = &lt;u128 as SafeMath&gt;::safe_mul(move _137, move _189)</td></tr></table>>];
    bb91__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageLive(_185)<br/>_185 = ((_138 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_187)<br/>_187 = _185<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _187)</td></tr></table>>];
    bb92__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_187)<br/>StorageDead(_185)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb93__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_189)<br/>StorageDead(_137)<br/></td></tr><tr><td align="left">_135 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _136)</td></tr></table>>];
    bb94__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_136)<br/>_190 = discriminant(_135)<br/></td></tr><tr><td align="left">switchInt(move _190)</td></tr></table>>];
    bb95__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageLive(_194)<br/>_194 = ((_135 as Continue).0: u128)<br/>_134 = _194<br/>StorageDead(_194)<br/>StorageLive(_195)<br/>_195 = _113<br/></td></tr><tr><td align="left">_133 = &lt;u128 as SafeMath&gt;::safe_div(move _134, move _195)</td></tr></table>>];
    bb96__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageLive(_191)<br/>_191 = ((_135 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_193)<br/>_193 = _191<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _193)</td></tr></table>>];
    bb97__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_193)<br/>StorageDead(_191)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb98__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_195)<br/>StorageDead(_134)<br/></td></tr><tr><td align="left">_132 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _133)</td></tr></table>>];
    bb99__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/>_196 = discriminant(_132)<br/></td></tr><tr><td align="left">switchInt(move _196)</td></tr></table>>];
    bb100__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageLive(_200)<br/>_200 = ((_132 as Continue).0: u128)<br/>_131 = _200<br/>StorageDead(_200)<br/></td></tr><tr><td align="left">_0 = &lt;u128 as Cast&gt;::cast::&lt;u64&gt;(move _131)</td></tr></table>>];
    bb101__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageLive(_197)<br/>_197 = ((_132 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_199)<br/>_199 = _197<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _199)</td></tr></table>>];
    bb102__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_199)<br/>StorageDead(_197)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb103__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_131)<br/>StorageDead(_113)<br/>StorageDead(_112)<br/>StorageDead(_103)<br/>StorageDead(_70)<br/>StorageDead(_54)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">drop(_21)</td></tr></table>>];
    bb104__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_20)<br/>StorageDead(_6)<br/>StorageDead(_176)<br/>StorageDead(_157)<br/>StorageDead(_147)<br/>StorageDead(_144)<br/>StorageDead(_141)<br/>StorageDead(_138)<br/>StorageDead(_135)<br/>StorageDead(_132)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb105__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_137)<br/>StorageDead(_136)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb106__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_134)<br/>StorageDead(_133)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb107__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_131)<br/>StorageDead(_113)<br/>StorageDead(_112)<br/>StorageDead(_103)<br/>StorageDead(_70)<br/>StorageDead(_54)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">drop(_21)</td></tr></table>>];
    bb108__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_20)<br/>StorageDead(_6)<br/>StorageDead(_176)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb109__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageDead(_143)<br/>StorageDead(_142)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb110__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_140)<br/>StorageDead(_139)<br/>StorageDead(_137)<br/>StorageDead(_136)<br/>StorageDead(_134)<br/>StorageDead(_133)<br/>StorageDead(_131)<br/>StorageDead(_113)<br/>StorageDead(_112)<br/>StorageDead(_103)<br/>StorageDead(_70)<br/>StorageDead(_54)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">drop(_21)</td></tr></table>>];
    bb111__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_20)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb112__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageDead(_157)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb113__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_20)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb114__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageDead(_147)<br/>StorageDead(_144)<br/>StorageDead(_141)<br/>StorageDead(_138)<br/>StorageDead(_135)<br/>StorageDead(_132)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb115__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/>StorageDead(_90)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb116__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb117__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb118__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_36)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb119__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/></td></tr><tr><td align="left">drop(_21)</td></tr></table>>];
    bb120__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb121__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb122__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left">return</td></tr></table>>];
    bb123__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">123 (cleanup)</td></tr><tr><td align="left">drop(_21)</td></tr></table>>];
    bb124__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">124 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb125__0_2473 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">125 (cleanup)</td></tr><tr><td align="left" balign="left">_206 = discriminant(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_2473 -> bb1__0_2473 [label="return"];
    bb1__0_2473 -> bb2__0_2473 [label="return"];
    bb2__0_2473 -> bb3__0_2473 [label="return"];
    bb3__0_2473 -> bb4__0_2473 [label="0"];
    bb3__0_2473 -> bb6__0_2473 [label="1"];
    bb3__0_2473 -> bb5__0_2473 [label="otherwise"];
    bb4__0_2473 -> bb8__0_2473 [label="return"];
    bb6__0_2473 -> bb7__0_2473 [label="return"];
    bb7__0_2473 -> bb121__0_2473 [label=""];
    bb8__0_2473 -> bb9__0_2473 [label="return"];
    bb8__0_2473 -> bb124__0_2473 [label="unwind"];
    bb9__0_2473 -> bb10__0_2473 [label="0"];
    bb9__0_2473 -> bb11__0_2473 [label="1"];
    bb9__0_2473 -> bb5__0_2473 [label="otherwise"];
    bb10__0_2473 -> bb13__0_2473 [label="return"];
    bb10__0_2473 -> bb123__0_2473 [label="unwind"];
    bb11__0_2473 -> bb12__0_2473 [label="return"];
    bb11__0_2473 -> bb125__0_2473 [label="unwind"];
    bb12__0_2473 -> bb120__0_2473 [label=""];
    bb13__0_2473 -> bb14__0_2473 [label="return"];
    bb13__0_2473 -> bb123__0_2473 [label="unwind"];
    bb14__0_2473 -> bb15__0_2473 [label="0"];
    bb14__0_2473 -> bb16__0_2473 [label="1"];
    bb14__0_2473 -> bb5__0_2473 [label="otherwise"];
    bb15__0_2473 -> bb18__0_2473 [label="return"];
    bb15__0_2473 -> bb123__0_2473 [label="unwind"];
    bb16__0_2473 -> bb17__0_2473 [label="return"];
    bb16__0_2473 -> bb123__0_2473 [label="unwind"];
    bb17__0_2473 -> bb118__0_2473 [label=""];
    bb18__0_2473 -> bb19__0_2473 [label="return"];
    bb18__0_2473 -> bb123__0_2473 [label="unwind"];
    bb19__0_2473 -> bb20__0_2473 [label="return"];
    bb19__0_2473 -> bb123__0_2473 [label="unwind"];
    bb20__0_2473 -> bb21__0_2473 [label="0"];
    bb20__0_2473 -> bb22__0_2473 [label="1"];
    bb20__0_2473 -> bb5__0_2473 [label="otherwise"];
    bb21__0_2473 -> bb24__0_2473 [label="return"];
    bb21__0_2473 -> bb123__0_2473 [label="unwind"];
    bb22__0_2473 -> bb23__0_2473 [label="return"];
    bb22__0_2473 -> bb123__0_2473 [label="unwind"];
    bb23__0_2473 -> bb118__0_2473 [label=""];
    bb24__0_2473 -> bb25__0_2473 [label="return"];
    bb24__0_2473 -> bb123__0_2473 [label="unwind"];
    bb25__0_2473 -> bb26__0_2473 [label="return"];
    bb25__0_2473 -> bb123__0_2473 [label="unwind"];
    bb26__0_2473 -> bb27__0_2473 [label="return"];
    bb26__0_2473 -> bb123__0_2473 [label="unwind"];
    bb27__0_2473 -> bb28__0_2473 [label="0"];
    bb27__0_2473 -> bb29__0_2473 [label="1"];
    bb27__0_2473 -> bb5__0_2473 [label="otherwise"];
    bb28__0_2473 -> bb31__0_2473 [label="return"];
    bb28__0_2473 -> bb123__0_2473 [label="unwind"];
    bb29__0_2473 -> bb30__0_2473 [label="return"];
    bb29__0_2473 -> bb123__0_2473 [label="unwind"];
    bb30__0_2473 -> bb117__0_2473 [label=""];
    bb31__0_2473 -> bb32__0_2473 [label="return"];
    bb31__0_2473 -> bb123__0_2473 [label="unwind"];
    bb32__0_2473 -> bb33__0_2473 [label="return"];
    bb32__0_2473 -> bb123__0_2473 [label="unwind"];
    bb33__0_2473 -> bb34__0_2473 [label="0"];
    bb33__0_2473 -> bb35__0_2473 [label="1"];
    bb33__0_2473 -> bb5__0_2473 [label="otherwise"];
    bb34__0_2473 -> bb38__0_2473 [label="0"];
    bb34__0_2473 -> bb37__0_2473 [label="otherwise"];
    bb35__0_2473 -> bb36__0_2473 [label="return"];
    bb35__0_2473 -> bb123__0_2473 [label="unwind"];
    bb36__0_2473 -> bb116__0_2473 [label=""];
    bb37__0_2473 -> bb116__0_2473 [label=""];
    bb38__0_2473 -> bb39__0_2473 [label="return"];
    bb38__0_2473 -> bb123__0_2473 [label="unwind"];
    bb39__0_2473 -> bb40__0_2473 [label="return"];
    bb39__0_2473 -> bb123__0_2473 [label="unwind"];
    bb40__0_2473 -> bb41__0_2473 [label="0"];
    bb40__0_2473 -> bb42__0_2473 [label="1"];
    bb40__0_2473 -> bb5__0_2473 [label="otherwise"];
    bb41__0_2473 -> bb45__0_2473 [label="0"];
    bb41__0_2473 -> bb44__0_2473 [label="otherwise"];
    bb42__0_2473 -> bb43__0_2473 [label="return"];
    bb42__0_2473 -> bb123__0_2473 [label="unwind"];
    bb43__0_2473 -> bb115__0_2473 [label=""];
    bb44__0_2473 -> bb46__0_2473 [label="return"];
    bb44__0_2473 -> bb123__0_2473 [label="unwind"];
    bb45__0_2473 -> bb47__0_2473 [label="return"];
    bb45__0_2473 -> bb123__0_2473 [label="unwind"];
    bb46__0_2473 -> bb115__0_2473 [label=""];
    bb47__0_2473 -> bb48__0_2473 [label="return"];
    bb47__0_2473 -> bb123__0_2473 [label="unwind"];
    bb48__0_2473 -> bb49__0_2473 [label="0"];
    bb48__0_2473 -> bb50__0_2473 [label="1"];
    bb48__0_2473 -> bb5__0_2473 [label="otherwise"];
    bb49__0_2473 -> bb52__0_2473 [label="return"];
    bb49__0_2473 -> bb123__0_2473 [label="unwind"];
    bb50__0_2473 -> bb51__0_2473 [label="return"];
    bb50__0_2473 -> bb123__0_2473 [label="unwind"];
    bb51__0_2473 -> bb116__0_2473 [label=""];
    bb52__0_2473 -> bb57__0_2473 [label="0"];
    bb52__0_2473 -> bb53__0_2473 [label="otherwise"];
    bb53__0_2473 -> bb54__0_2473 [label="return"];
    bb53__0_2473 -> bb123__0_2473 [label="unwind"];
    bb54__0_2473 -> bb55__0_2473 [label="success"];
    bb54__0_2473 -> bb123__0_2473 [label="unwind"];
    bb55__0_2473 -> bb56__0_2473 [label="return"];
    bb55__0_2473 -> bb123__0_2473 [label="unwind"];
    bb56__0_2473 -> bb61__0_2473 [label=""];
    bb57__0_2473 -> bb58__0_2473 [label="return"];
    bb57__0_2473 -> bb123__0_2473 [label="unwind"];
    bb58__0_2473 -> bb59__0_2473 [label="success"];
    bb58__0_2473 -> bb123__0_2473 [label="unwind"];
    bb59__0_2473 -> bb60__0_2473 [label="return"];
    bb59__0_2473 -> bb123__0_2473 [label="unwind"];
    bb60__0_2473 -> bb61__0_2473 [label=""];
    bb61__0_2473 -> bb62__0_2473 [label="return"];
    bb61__0_2473 -> bb123__0_2473 [label="unwind"];
    bb62__0_2473 -> bb63__0_2473 [label="return"];
    bb62__0_2473 -> bb123__0_2473 [label="unwind"];
    bb63__0_2473 -> bb64__0_2473 [label="return"];
    bb63__0_2473 -> bb123__0_2473 [label="unwind"];
    bb64__0_2473 -> bb65__0_2473 [label="0"];
    bb64__0_2473 -> bb66__0_2473 [label="1"];
    bb64__0_2473 -> bb5__0_2473 [label="otherwise"];
    bb65__0_2473 -> bb68__0_2473 [label="return"];
    bb65__0_2473 -> bb123__0_2473 [label="unwind"];
    bb66__0_2473 -> bb67__0_2473 [label="return"];
    bb66__0_2473 -> bb123__0_2473 [label="unwind"];
    bb67__0_2473 -> bb113__0_2473 [label="return"];
    bb67__0_2473 -> bb124__0_2473 [label="unwind"];
    bb68__0_2473 -> bb69__0_2473 [label="return"];
    bb68__0_2473 -> bb123__0_2473 [label="unwind"];
    bb69__0_2473 -> bb70__0_2473 [label="0"];
    bb69__0_2473 -> bb71__0_2473 [label="1"];
    bb69__0_2473 -> bb5__0_2473 [label="otherwise"];
    bb70__0_2473 -> bb73__0_2473 [label="return"];
    bb70__0_2473 -> bb123__0_2473 [label="unwind"];
    bb71__0_2473 -> bb72__0_2473 [label="return"];
    bb71__0_2473 -> bb123__0_2473 [label="unwind"];
    bb72__0_2473 -> bb109__0_2473 [label=""];
    bb73__0_2473 -> bb74__0_2473 [label="return"];
    bb73__0_2473 -> bb123__0_2473 [label="unwind"];
    bb74__0_2473 -> bb75__0_2473 [label="0"];
    bb74__0_2473 -> bb76__0_2473 [label="1"];
    bb74__0_2473 -> bb5__0_2473 [label="otherwise"];
    bb75__0_2473 -> bb78__0_2473 [label="return"];
    bb75__0_2473 -> bb123__0_2473 [label="unwind"];
    bb76__0_2473 -> bb77__0_2473 [label="return"];
    bb76__0_2473 -> bb123__0_2473 [label="unwind"];
    bb77__0_2473 -> bb109__0_2473 [label=""];
    bb78__0_2473 -> bb79__0_2473 [label="return"];
    bb78__0_2473 -> bb123__0_2473 [label="unwind"];
    bb79__0_2473 -> bb80__0_2473 [label="0"];
    bb79__0_2473 -> bb81__0_2473 [label="1"];
    bb79__0_2473 -> bb5__0_2473 [label="otherwise"];
    bb80__0_2473 -> bb83__0_2473 [label="return"];
    bb80__0_2473 -> bb123__0_2473 [label="unwind"];
    bb81__0_2473 -> bb82__0_2473 [label="return"];
    bb81__0_2473 -> bb123__0_2473 [label="unwind"];
    bb82__0_2473 -> bb110__0_2473 [label=""];
    bb83__0_2473 -> bb84__0_2473 [label="return"];
    bb83__0_2473 -> bb123__0_2473 [label="unwind"];
    bb84__0_2473 -> bb85__0_2473 [label="0"];
    bb84__0_2473 -> bb86__0_2473 [label="1"];
    bb84__0_2473 -> bb5__0_2473 [label="otherwise"];
    bb85__0_2473 -> bb88__0_2473 [label="return"];
    bb85__0_2473 -> bb123__0_2473 [label="unwind"];
    bb86__0_2473 -> bb87__0_2473 [label="return"];
    bb86__0_2473 -> bb123__0_2473 [label="unwind"];
    bb87__0_2473 -> bb105__0_2473 [label=""];
    bb88__0_2473 -> bb89__0_2473 [label="return"];
    bb88__0_2473 -> bb123__0_2473 [label="unwind"];
    bb89__0_2473 -> bb90__0_2473 [label="0"];
    bb89__0_2473 -> bb91__0_2473 [label="1"];
    bb89__0_2473 -> bb5__0_2473 [label="otherwise"];
    bb90__0_2473 -> bb93__0_2473 [label="return"];
    bb90__0_2473 -> bb123__0_2473 [label="unwind"];
    bb91__0_2473 -> bb92__0_2473 [label="return"];
    bb91__0_2473 -> bb123__0_2473 [label="unwind"];
    bb92__0_2473 -> bb105__0_2473 [label=""];
    bb93__0_2473 -> bb94__0_2473 [label="return"];
    bb93__0_2473 -> bb123__0_2473 [label="unwind"];
    bb94__0_2473 -> bb95__0_2473 [label="0"];
    bb94__0_2473 -> bb96__0_2473 [label="1"];
    bb94__0_2473 -> bb5__0_2473 [label="otherwise"];
    bb95__0_2473 -> bb98__0_2473 [label="return"];
    bb95__0_2473 -> bb123__0_2473 [label="unwind"];
    bb96__0_2473 -> bb97__0_2473 [label="return"];
    bb96__0_2473 -> bb123__0_2473 [label="unwind"];
    bb97__0_2473 -> bb106__0_2473 [label=""];
    bb98__0_2473 -> bb99__0_2473 [label="return"];
    bb98__0_2473 -> bb123__0_2473 [label="unwind"];
    bb99__0_2473 -> bb100__0_2473 [label="0"];
    bb99__0_2473 -> bb101__0_2473 [label="1"];
    bb99__0_2473 -> bb5__0_2473 [label="otherwise"];
    bb100__0_2473 -> bb103__0_2473 [label="return"];
    bb100__0_2473 -> bb123__0_2473 [label="unwind"];
    bb101__0_2473 -> bb102__0_2473 [label="return"];
    bb101__0_2473 -> bb123__0_2473 [label="unwind"];
    bb102__0_2473 -> bb107__0_2473 [label=""];
    bb103__0_2473 -> bb104__0_2473 [label="return"];
    bb103__0_2473 -> bb124__0_2473 [label="unwind"];
    bb104__0_2473 -> bb122__0_2473 [label=""];
    bb105__0_2473 -> bb106__0_2473 [label=""];
    bb106__0_2473 -> bb107__0_2473 [label=""];
    bb107__0_2473 -> bb108__0_2473 [label="return"];
    bb107__0_2473 -> bb124__0_2473 [label="unwind"];
    bb108__0_2473 -> bb112__0_2473 [label=""];
    bb109__0_2473 -> bb110__0_2473 [label=""];
    bb110__0_2473 -> bb111__0_2473 [label="return"];
    bb110__0_2473 -> bb124__0_2473 [label="unwind"];
    bb111__0_2473 -> bb112__0_2473 [label=""];
    bb112__0_2473 -> bb114__0_2473 [label=""];
    bb113__0_2473 -> bb114__0_2473 [label=""];
    bb114__0_2473 -> bb122__0_2473 [label=""];
    bb115__0_2473 -> bb116__0_2473 [label=""];
    bb116__0_2473 -> bb117__0_2473 [label=""];
    bb117__0_2473 -> bb119__0_2473 [label=""];
    bb118__0_2473 -> bb119__0_2473 [label=""];
    bb119__0_2473 -> bb120__0_2473 [label="return"];
    bb119__0_2473 -> bb124__0_2473 [label="unwind"];
    bb120__0_2473 -> bb121__0_2473 [label=""];
    bb121__0_2473 -> bb122__0_2473 [label=""];
    bb123__0_2473 -> bb124__0_2473 [label="return"];
    bb125__0_2473 -> bb124__0_2473 [label=""];
}
