// MIR for `__idl::<impl at programs/drift/src/lib.rs:69:1: 69:11>::trailing_data` before PreCodegen

fn __idl::<impl at programs/drift/src/lib.rs:69:1: 69:11>::trailing_data(_1: &anchor_lang::prelude::Account<'_, __idl::IdlAccount>) -> Ref<'_, [u8]> {
    debug self => _1;
    let mut _0: std::cell::Ref<'_, [u8]>;
    let _2: &anchor_lang::prelude::AccountInfo<'_>;
    let _3: &anchor_lang::prelude::AccountInfo<'_>;
    let mut _4: &anchor_lang::prelude::Account<'_, __private::__idl::IdlAccount>;
    let mut _5: std::cell::Ref<'_, &mut [u8]>;
    let mut _6: std::result::Result<std::cell::Ref<'_, &mut [u8]>, anchor_lang::prelude::ProgramError>;
    let mut _7: &anchor_lang::prelude::AccountInfo<'_>;
    let mut _8: {closure@programs/drift/src/lib.rs:69:1: 69:11};
    scope 1 {
        debug info => _2;
    }

    bb0: {
        StorageLive(_2);
        StorageLive(_3);
        StorageLive(_4);
        _4 = &(*_1);
        _3 = <anchor_lang::prelude::Account<'_, __idl::IdlAccount> as AsRef<anchor_lang::prelude::AccountInfo<'_>>>::as_ref(move _4) -> [return: bb1, unwind continue];
    }

    bb1: {
        _2 = &(*_3);
        StorageDead(_4);
        StorageDead(_3);
        StorageLive(_5);
        StorageLive(_6);
        StorageLive(_7);
        _7 = &(*_2);
        _6 = anchor_lang::prelude::AccountInfo::<'_>::try_borrow_data(move _7) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_7);
        _5 = std::result::Result::<Ref<'_, &mut [u8]>, anchor_lang::prelude::ProgramError>::unwrap(move _6) -> [return: bb3, unwind: bb5];
    }

    bb3: {
        StorageDead(_6);
        StorageLive(_8);
        _8 = {closure@programs/drift/src/lib.rs:69:1: 69:11};
        _0 = Ref::<'_, &mut [u8]>::map::<[u8], {closure@programs/drift/src/lib.rs:69:1: 69:11}>(move _5, move _8) -> [return: bb4, unwind: bb5];
    }

    bb4: {
        StorageDead(_8);
        StorageDead(_5);
        StorageDead(_2);
        return;
    }

    bb5 (cleanup): {
        resume;
    }
}
