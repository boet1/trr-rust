// MIR for `state::perp_market::<impl at programs/drift/src/state/perp_market.rs:298:1: 298:16>::get_max_price_divergence_for_funding_rate` before PreCodegen

fn state::perp_market::<impl at programs/drift/src/state/perp_market.rs:298:1: 298:16>::get_max_price_divergence_for_funding_rate(_1: PerpMarket, _2: i64) -> std::result::Result<i64, error::ErrorCode> {
    debug self => _1;
    debug oracle_price_twap => _2;
    let mut _0: std::result::Result<i64, error::ErrorCode>;
    let mut _3: bool;
    let mut _4: &state::perp_market::ContractTier;
    let mut _5: &state::perp_market::ContractTier;
    let _6: &state::perp_market::ContractTier;
    let _7: state::perp_market::ContractTier;
    let mut _8: i64;
    let mut _9: bool;
    let mut _10: &state::perp_market::ContractTier;
    let mut _11: &state::perp_market::ContractTier;
    let _12: &state::perp_market::ContractTier;
    let _13: state::perp_market::ContractTier;
    let mut _14: i64;
    let mut _15: i64;
    let mut _16: &state::perp_market::ContractTier;
    let mut _17: &state::perp_market::ContractTier;

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        _4 = &(_1.24: state::perp_market::ContractTier);
        StorageLive(_5);
        StorageLive(_6);
        _17 = const _;
        _6 = &(*_17);
        _5 = &(*_6);
        _3 = state::perp_market::ContractTier::is_as_safe_as_contract(move _4, move _5) -> [return: bb1, unwind continue];
    }

    bb1: {
        switchInt(move _3) -> [0: bb4, otherwise: bb2];
    }

    bb2: {
        StorageDead(_6);
        StorageDead(_5);
        StorageDead(_4);
        StorageLive(_8);
        _8 = _2;
        _0 = <i64 as SafeMath>::safe_div(move _8, const 33_i64) -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageDead(_8);
        goto -> bb11;
    }

    bb4: {
        StorageDead(_6);
        StorageDead(_5);
        StorageDead(_4);
        StorageLive(_9);
        StorageLive(_10);
        _10 = &(_1.24: state::perp_market::ContractTier);
        StorageLive(_11);
        StorageLive(_12);
        _16 = const _;
        _12 = &(*_16);
        _11 = &(*_12);
        _9 = state::perp_market::ContractTier::is_as_safe_as_contract(move _10, move _11) -> [return: bb5, unwind continue];
    }

    bb5: {
        switchInt(move _9) -> [0: bb8, otherwise: bb6];
    }

    bb6: {
        StorageDead(_12);
        StorageDead(_11);
        StorageDead(_10);
        StorageLive(_14);
        _14 = _2;
        _0 = <i64 as SafeMath>::safe_div(move _14, const 20_i64) -> [return: bb7, unwind continue];
    }

    bb7: {
        StorageDead(_14);
        goto -> bb10;
    }

    bb8: {
        StorageDead(_12);
        StorageDead(_11);
        StorageDead(_10);
        StorageLive(_15);
        _15 = _2;
        _0 = <i64 as SafeMath>::safe_div(move _15, const 10_i64) -> [return: bb9, unwind continue];
    }

    bb9: {
        StorageDead(_15);
        goto -> bb10;
    }

    bb10: {
        StorageDead(_9);
        goto -> bb11;
    }

    bb11: {
        StorageDead(_3);
        return;
    }
}
