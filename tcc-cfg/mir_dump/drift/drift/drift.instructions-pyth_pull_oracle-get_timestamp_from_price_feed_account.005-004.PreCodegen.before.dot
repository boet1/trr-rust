digraph Mir_0_1514 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn get_timestamp_from_price_feed_account(_1: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;) -&gt; std::result::Result&lt;i64, anchor_lang::error::Error&gt;<br align="left"/>let mut _2: bool;<br align="left"/>let mut _3: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _4: std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _5: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;&gt;;<br align="left"/>let mut _6: std::result::Result&lt;std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _7: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _8: isize;<br align="left"/>let _9: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _10: !;<br align="left"/>let mut _11: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _12: std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let _13: pyth_solana_receiver_sdk::price_update::PriceUpdateV2;<br align="left"/>let mut _14: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, pyth_solana_receiver_sdk::price_update::PriceUpdateV2&gt;;<br align="left"/>let mut _15: std::result::Result&lt;pyth_solana_receiver_sdk::price_update::PriceUpdateV2, anchor_lang::error::Error&gt;;<br align="left"/>let mut _16: &amp;ReErased mut &amp;ReErased [u8];<br align="left"/>let mut _17: &amp;ReErased mut &amp;ReErased [u8];<br align="left"/>let mut _18: &amp;ReErased [u8];<br align="left"/>let _19: &amp;ReErased [u8];<br align="left"/>let mut _20: &amp;ReErased [u8];<br align="left"/>let _21: &amp;ReErased &amp;ReErased mut [u8];<br align="left"/>let mut _22: &amp;ReErased std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _23: std::ops::RangeFull;<br align="left"/>let mut _24: isize;<br align="left"/>let _25: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _26: !;<br align="left"/>let mut _27: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _28: pyth_solana_receiver_sdk::price_update::PriceUpdateV2;<br align="left"/>let mut _29: i64;<br align="left"/>let mut _30: &amp;ReErased mut [u8];<br align="left"/>let mut _31: isize;<br align="left"/>let mut _32: isize;<br align="left"/>let mut _33: isize;<br align="left"/>let mut _34: isize;<br align="left"/>let mut _35: isize;<br align="left"/>let mut _36: isize;<br align="left"/>let mut _37: isize;<br align="left"/>let mut _38: isize;<br align="left"/>let mut _39: isize;<br align="left"/>let mut _40: isize;<br align="left"/>debug price_feed_account =&gt; _1;<br align="left"/>debug price_feed_account_data =&gt; _4;<br align="left"/>debug residual =&gt; _9;<br align="left"/>debug val =&gt; _12;<br align="left"/>debug price_feed_account =&gt; _13;<br align="left"/>debug residual =&gt; _25;<br align="left"/>debug val =&gt; _28;<br align="left"/>>;
    bb0__0_1514 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>_3 = &amp;(*_1)<br/></td></tr><tr><td align="left">_2 = anchor_lang::prelude::AccountInfo::&lt;'_&gt;::data_is_empty(move _3)</td></tr></table>>];
    bb1__0_1514 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">switchInt(move _2)</td></tr></table>>];
    bb2__0_1514 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/>_0 = std::result::Result::&lt;i64, anchor_lang::error::Error&gt;::Ok(const 0_i64)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb3__0_1514 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = &amp;(*_1)<br/></td></tr><tr><td align="left">_6 = anchor_lang::prelude::AccountInfo::&lt;'_&gt;::try_borrow_data(move _7)</td></tr></table>>];
    bb4__0_1514 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/></td></tr><tr><td align="left">_5 = &lt;std::result::Result&lt;Ref&lt;'_, &amp;mut [u8]&gt;, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _6)</td></tr></table>>];
    bb5__0_1514 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_8 = discriminant(_5)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb6__0_1514 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = move ((_5 as Continue).0: std::cell::Ref&lt;'_, &amp;mut [u8]&gt;)<br/>_4 = move _12<br/>StorageDead(_12)<br/>_31 = discriminant(_5)<br/>StorageDead(_5)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_22 = &amp;_4<br/></td></tr><tr><td align="left">_21 = &lt;Ref&lt;'_, &amp;mut [u8]&gt; as Deref&gt;::deref(move _22)</td></tr></table>>];
    bb7__0_1514 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb8__0_1514 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>_9 = move ((_5 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_11)<br/>_11 = move _9<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _11)</td></tr></table>>];
    bb9__0_1514 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_9)<br/>_37 = discriminant(_5)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_1514 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">_30 = deref_copy (*_21)<br/>_20 = &amp;(*_30)<br/>StorageDead(_22)<br/>StorageLive(_23)<br/>_23 = RangeFull<br/></td></tr><tr><td align="left">_19 = &lt;[u8] as Index&lt;RangeFull&gt;&gt;::index(move _20, move _23)</td></tr></table>>];
    bb11__0_1514 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_20)<br/>_18 = &amp;(*_19)<br/>_17 = &amp;mut _18<br/>_16 = &amp;mut (*_17)<br/></td></tr><tr><td align="left">_15 = &lt;PriceUpdateV2 as anchor_lang::AccountDeserialize&gt;::try_deserialize(move _16)</td></tr></table>>];
    bb12__0_1514 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/></td></tr><tr><td align="left">_14 = &lt;std::result::Result&lt;PriceUpdateV2, anchor_lang::error::Error&gt; as Try&gt;::branch(move _15)</td></tr></table>>];
    bb13__0_1514 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>_24 = discriminant(_14)<br/></td></tr><tr><td align="left">switchInt(move _24)</td></tr></table>>];
    bb14__0_1514 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_28)<br/>_28 = move ((_14 as Continue).0: pyth_solana_receiver_sdk::price_update::PriceUpdateV2)<br/>_13 = move _28<br/>StorageDead(_28)<br/>_33 = discriminant(_14)<br/>StorageDead(_21)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/>StorageDead(_14)<br/>StorageLive(_29)<br/>_29 = ((_13.2: pyth_solana_receiver_sdk::price_update::PriceFeedMessage).4: i64)<br/>_0 = std::result::Result::&lt;i64, anchor_lang::error::Error&gt;::Ok(move _29)<br/>StorageDead(_29)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">drop(_4)</td></tr></table>>];
    bb15__0_1514 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_25)<br/>_25 = move ((_14 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_27)<br/>_27 = move _25<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _27)</td></tr></table>>];
    bb16__0_1514 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_25)<br/>_35 = discriminant(_14)<br/>StorageDead(_21)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">drop(_4)</td></tr></table>>];
    bb17__0_1514 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_1514 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_1514 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_1514 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left">return</td></tr></table>>];
    bb21__0_1514 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">21 (cleanup)</td></tr><tr><td align="left">drop(_4)</td></tr></table>>];
    bb22__0_1514 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">22 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb23__0_1514 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">23 (cleanup)</td></tr><tr><td align="left" balign="left">_39 = discriminant(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_1514 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">24 (cleanup)</td></tr><tr><td align="left" balign="left">_40 = discriminant(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_1514 -> bb1__0_1514 [label="return"];
    bb1__0_1514 -> bb3__0_1514 [label="0"];
    bb1__0_1514 -> bb2__0_1514 [label="otherwise"];
    bb2__0_1514 -> bb18__0_1514 [label=""];
    bb3__0_1514 -> bb4__0_1514 [label="return"];
    bb4__0_1514 -> bb5__0_1514 [label="return"];
    bb4__0_1514 -> bb22__0_1514 [label="unwind"];
    bb5__0_1514 -> bb6__0_1514 [label="0"];
    bb5__0_1514 -> bb8__0_1514 [label="1"];
    bb5__0_1514 -> bb7__0_1514 [label="otherwise"];
    bb6__0_1514 -> bb10__0_1514 [label="return"];
    bb6__0_1514 -> bb21__0_1514 [label="unwind"];
    bb8__0_1514 -> bb9__0_1514 [label="return"];
    bb8__0_1514 -> bb24__0_1514 [label="unwind"];
    bb9__0_1514 -> bb19__0_1514 [label=""];
    bb10__0_1514 -> bb11__0_1514 [label="return"];
    bb10__0_1514 -> bb21__0_1514 [label="unwind"];
    bb11__0_1514 -> bb12__0_1514 [label="return"];
    bb11__0_1514 -> bb21__0_1514 [label="unwind"];
    bb12__0_1514 -> bb13__0_1514 [label="return"];
    bb12__0_1514 -> bb21__0_1514 [label="unwind"];
    bb13__0_1514 -> bb14__0_1514 [label="0"];
    bb13__0_1514 -> bb15__0_1514 [label="1"];
    bb13__0_1514 -> bb7__0_1514 [label="otherwise"];
    bb14__0_1514 -> bb17__0_1514 [label="return"];
    bb14__0_1514 -> bb22__0_1514 [label="unwind"];
    bb15__0_1514 -> bb16__0_1514 [label="return"];
    bb15__0_1514 -> bb23__0_1514 [label="unwind"];
    bb16__0_1514 -> bb19__0_1514 [label="return"];
    bb16__0_1514 -> bb22__0_1514 [label="unwind"];
    bb17__0_1514 -> bb18__0_1514 [label=""];
    bb18__0_1514 -> bb20__0_1514 [label=""];
    bb19__0_1514 -> bb20__0_1514 [label=""];
    bb21__0_1514 -> bb22__0_1514 [label="return"];
    bb23__0_1514 -> bb21__0_1514 [label=""];
    bb24__0_1514 -> bb22__0_1514 [label=""];
}
