digraph Mir_0_2476 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_user_equity(_1: &amp;ReErased state::user::User, _2: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;, _3: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;, _4: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;) -&gt; std::result::Result&lt;(i128, bool), error::ErrorCode&gt;<br align="left"/>let mut _5: i128;<br align="left"/>let mut _6: bool;<br align="left"/>let _7: ();<br align="left"/>let mut _8: std::slice::Iter&lt;ReErased, state::user::SpotPosition&gt;;<br align="left"/>let mut _9: std::slice::Iter&lt;ReErased, state::user::SpotPosition&gt;;<br align="left"/>let mut _10: &amp;ReErased [state::user::SpotPosition];<br align="left"/>let mut _11: &amp;ReErased [state::user::SpotPosition; 8_usize];<br align="left"/>let mut _12: std::slice::Iter&lt;ReErased, state::user::SpotPosition&gt;;<br align="left"/>let mut _13: ();<br align="left"/>let _14: ();<br align="left"/>let mut _15: std::option::Option&lt;&amp;ReErased state::user::SpotPosition&gt;;<br align="left"/>let mut _16: &amp;ReErased mut std::slice::Iter&lt;ReErased, state::user::SpotPosition&gt;;<br align="left"/>let mut _17: &amp;ReErased mut std::slice::Iter&lt;ReErased, state::user::SpotPosition&gt;;<br align="left"/>let mut _18: isize;<br align="left"/>let mut _19: !;<br align="left"/>let _20: &amp;ReErased state::user::SpotPosition;<br align="left"/>let _21: ();<br align="left"/>let mut _22: bool;<br align="left"/>let mut _23: &amp;ReErased state::user::SpotPosition;<br align="left"/>let mut _24: !;<br align="left"/>let _25: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _26: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _27: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _28: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _29: &amp;ReErased u16;<br align="left"/>let _30: &amp;ReErased u16;<br align="left"/>let mut _31: isize;<br align="left"/>let _32: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _33: !;<br align="left"/>let mut _34: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _35: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _36: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _37: math::oracle::OracleValidity;<br align="left"/>let mut _38: (&amp;ReErased state::oracle::OraclePriceData, math::oracle::OracleValidity);<br align="left"/>let mut _39: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (&amp;ReErased state::oracle::OraclePriceData, math::oracle::OracleValidity)&gt;;<br align="left"/>let mut _40: std::result::Result&lt;(&amp;ReErased state::oracle::OraclePriceData, math::oracle::OracleValidity), error::ErrorCode&gt;;<br align="left"/>let mut _41: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _42: state::user::MarketType;<br align="left"/>let mut _43: u16;<br align="left"/>let mut _44: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _45: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _46: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _47: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _48: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _49: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _50: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _51: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _52: i64;<br align="left"/>let mut _53: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _54: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _55: u64;<br align="left"/>let mut _56: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _57: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _58: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _59: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _60: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _61: isize;<br align="left"/>let _62: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _63: !;<br align="left"/>let mut _64: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _65: u64;<br align="left"/>let mut _66: isize;<br align="left"/>let _67: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _68: !;<br align="left"/>let mut _69: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _70: (&amp;ReErased state::oracle::OraclePriceData, math::oracle::OracleValidity);<br align="left"/>let mut _71: bool;<br align="left"/>let mut _72: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _73: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _74: math::oracle::OracleValidity;<br align="left"/>let mut _75: std::option::Option&lt;math::oracle::DriftAction&gt;;<br align="left"/>let mut _76: math::oracle::DriftAction;<br align="left"/>let mut _77: isize;<br align="left"/>let _78: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _79: !;<br align="left"/>let mut _80: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _81: bool;<br align="left"/>let _82: i128;<br align="left"/>let mut _83: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _84: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _85: &amp;ReErased state::user::SpotPosition;<br align="left"/>let mut _86: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _87: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _88: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _89: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _90: isize;<br align="left"/>let _91: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _92: !;<br align="left"/>let mut _93: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _94: i128;<br align="left"/>let _95: i64;<br align="left"/>let _96: i128;<br align="left"/>let mut _97: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _98: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _99: i128;<br align="left"/>let mut _100: u32;<br align="left"/>let mut _101: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _102: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _103: i64;<br align="left"/>let mut _104: isize;<br align="left"/>let _105: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _106: !;<br align="left"/>let mut _107: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _108: i128;<br align="left"/>let mut _109: i128;<br align="left"/>let mut _110: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _111: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _112: i128;<br align="left"/>let mut _113: i128;<br align="left"/>let mut _114: isize;<br align="left"/>let _115: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _116: !;<br align="left"/>let mut _117: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _118: i128;<br align="left"/>let _119: ();<br align="left"/>let mut _120: std::slice::Iter&lt;ReErased, state::user::PerpPosition&gt;;<br align="left"/>let mut _121: std::slice::Iter&lt;ReErased, state::user::PerpPosition&gt;;<br align="left"/>let mut _122: &amp;ReErased [state::user::PerpPosition];<br align="left"/>let mut _123: &amp;ReErased [state::user::PerpPosition; 8_usize];<br align="left"/>let mut _124: std::slice::Iter&lt;ReErased, state::user::PerpPosition&gt;;<br align="left"/>let _125: ();<br align="left"/>let mut _126: std::option::Option&lt;&amp;ReErased state::user::PerpPosition&gt;;<br align="left"/>let mut _127: &amp;ReErased mut std::slice::Iter&lt;ReErased, state::user::PerpPosition&gt;;<br align="left"/>let mut _128: &amp;ReErased mut std::slice::Iter&lt;ReErased, state::user::PerpPosition&gt;;<br align="left"/>let mut _129: isize;<br align="left"/>let mut _130: !;<br align="left"/>let _131: &amp;ReErased state::user::PerpPosition;<br align="left"/>let _132: ();<br align="left"/>let mut _133: bool;<br align="left"/>let mut _134: &amp;ReErased state::user::PerpPosition;<br align="left"/>let mut _135: !;<br align="left"/>let _136: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _137: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _138: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _139: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _140: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _141: &amp;ReErased u16;<br align="left"/>let _142: &amp;ReErased u16;<br align="left"/>let mut _143: isize;<br align="left"/>let _144: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _145: !;<br align="left"/>let mut _146: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _147: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _148: i64;<br align="left"/>let _149: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _150: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _151: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _152: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _153: &amp;ReErased u16;<br align="left"/>let _154: &amp;ReErased u16;<br align="left"/>let _155: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _156: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _157: isize;<br align="left"/>let _158: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _159: !;<br align="left"/>let mut _160: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _161: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _162: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _163: math::oracle::OracleValidity;<br align="left"/>let mut _164: (&amp;ReErased state::oracle::OraclePriceData, math::oracle::OracleValidity);<br align="left"/>let mut _165: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (&amp;ReErased state::oracle::OraclePriceData, math::oracle::OracleValidity)&gt;;<br align="left"/>let mut _166: std::result::Result&lt;(&amp;ReErased state::oracle::OraclePriceData, math::oracle::OracleValidity), error::ErrorCode&gt;;<br align="left"/>let mut _167: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _168: state::user::MarketType;<br align="left"/>let mut _169: u16;<br align="left"/>let mut _170: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _171: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _172: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _173: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _174: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _175: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _176: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _177: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _178: i64;<br align="left"/>let mut _179: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _180: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _181: u64;<br align="left"/>let mut _182: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _183: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _184: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _185: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _186: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _187: isize;<br align="left"/>let _188: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _189: !;<br align="left"/>let mut _190: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _191: u64;<br align="left"/>let mut _192: isize;<br align="left"/>let _193: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _194: !;<br align="left"/>let mut _195: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _196: (&amp;ReErased state::oracle::OraclePriceData, math::oracle::OracleValidity);<br align="left"/>let mut _197: bool;<br align="left"/>let mut _198: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _199: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _200: math::oracle::OracleValidity;<br align="left"/>let mut _201: std::option::Option&lt;math::oracle::DriftAction&gt;;<br align="left"/>let mut _202: math::oracle::DriftAction;<br align="left"/>let mut _203: isize;<br align="left"/>let _204: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _205: !;<br align="left"/>let mut _206: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _207: bool;<br align="left"/>let _208: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _209: math::oracle::OracleValidity;<br align="left"/>let mut _210: (&amp;ReErased state::oracle::OraclePriceData, math::oracle::OracleValidity);<br align="left"/>let mut _211: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (&amp;ReErased state::oracle::OraclePriceData, math::oracle::OracleValidity)&gt;;<br align="left"/>let mut _212: std::result::Result&lt;(&amp;ReErased state::oracle::OraclePriceData, math::oracle::OracleValidity), error::ErrorCode&gt;;<br align="left"/>let mut _213: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _214: state::user::MarketType;<br align="left"/>let mut _215: u16;<br align="left"/>let mut _216: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _217: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _218: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _219: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _220: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _221: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _222: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _223: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _224: i64;<br align="left"/>let mut _225: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _226: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _227: u64;<br align="left"/>let mut _228: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _229: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _230: state::perp_market::PerpMarket;<br align="left"/>let mut _231: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _232: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _233: isize;<br align="left"/>let _234: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _235: !;<br align="left"/>let mut _236: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _237: u64;<br align="left"/>let mut _238: isize;<br align="left"/>let _239: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _240: !;<br align="left"/>let mut _241: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _242: (&amp;ReErased state::oracle::OraclePriceData, math::oracle::OracleValidity);<br align="left"/>let mut _243: bool;<br align="left"/>let mut _244: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _245: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _246: math::oracle::OracleValidity;<br align="left"/>let mut _247: std::option::Option&lt;math::oracle::DriftAction&gt;;<br align="left"/>let mut _248: math::oracle::DriftAction;<br align="left"/>let mut _249: isize;<br align="left"/>let _250: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _251: !;<br align="left"/>let mut _252: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _253: bool;<br align="left"/>let _254: i64;<br align="left"/>let mut _255: bool;<br align="left"/>let mut _256: &amp;ReErased state::perp_market::MarketStatus;<br align="left"/>let _257: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _258: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _259: &amp;ReErased state::perp_market::MarketStatus;<br align="left"/>let _260: state::perp_market::MarketStatus;<br align="left"/>let mut _261: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _262: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _263: i64;<br align="left"/>let mut _264: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _265: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _266: i128;<br align="left"/>let mut _267: bool;<br align="left"/>let mut _268: i64;<br align="left"/>let mut _269: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _270: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _271: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _272: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _273: &amp;ReErased state::user::PerpPosition;<br align="left"/>let mut _274: isize;<br align="left"/>let _275: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _276: !;<br align="left"/>let mut _277: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _278: i64;<br align="left"/>let _279: i128;<br align="left"/>let mut _280: (u128, i128);<br align="left"/>let mut _281: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (u128, i128)&gt;;<br align="left"/>let mut _282: std::result::Result&lt;(u128, i128), error::ErrorCode&gt;;<br align="left"/>let mut _283: &amp;ReErased state::user::PerpPosition;<br align="left"/>let _284: &amp;ReErased &amp;ReErased state::user::PerpPosition;<br align="left"/>let mut _285: i64;<br align="left"/>let mut _286: isize;<br align="left"/>let _287: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _288: !;<br align="left"/>let mut _289: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _290: (u128, i128);<br align="left"/>let _291: i128;<br align="left"/>let mut _292: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _293: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _294: i128;<br align="left"/>let mut _295: i128;<br align="left"/>let mut _296: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _297: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _298: i64;<br align="left"/>let mut _299: isize;<br align="left"/>let _300: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _301: !;<br align="left"/>let mut _302: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _303: i128;<br align="left"/>let mut _304: isize;<br align="left"/>let _305: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _306: !;<br align="left"/>let mut _307: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _308: i128;<br align="left"/>let _309: i128;<br align="left"/>let mut _310: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _311: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _312: i128;<br align="left"/>let mut _313: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _314: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _315: i128;<br align="left"/>let mut _316: i128;<br align="left"/>let mut _317: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _318: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _319: i64;<br align="left"/>let mut _320: isize;<br align="left"/>let _321: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _322: !;<br align="left"/>let mut _323: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _324: i128;<br align="left"/>let mut _325: isize;<br align="left"/>let _326: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _327: !;<br align="left"/>let mut _328: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _329: i128;<br align="left"/>let mut _330: isize;<br align="left"/>let _331: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _332: !;<br align="left"/>let mut _333: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _334: i128;<br align="left"/>let mut _335: i128;<br align="left"/>let mut _336: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _337: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _338: i128;<br align="left"/>let mut _339: i128;<br align="left"/>let mut _340: isize;<br align="left"/>let _341: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _342: !;<br align="left"/>let mut _343: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _344: i128;<br align="left"/>let mut _345: (i128, bool);<br align="left"/>let mut _346: i128;<br align="left"/>let mut _347: bool;<br align="left"/>let mut _348: &amp;ReErased state::perp_market::MarketStatus;<br align="left"/>let mut _349: &amp;ReErased state::user::PerpPosition;<br align="left"/>let mut _350: isize;<br align="left"/>let mut _351: isize;<br align="left"/>let mut _352: isize;<br align="left"/>let mut _353: isize;<br align="left"/>let mut _354: isize;<br align="left"/>let mut _355: isize;<br align="left"/>let mut _356: isize;<br align="left"/>let mut _357: isize;<br align="left"/>let mut _358: isize;<br align="left"/>let mut _359: isize;<br align="left"/>let mut _360: isize;<br align="left"/>let mut _361: isize;<br align="left"/>let mut _362: isize;<br align="left"/>let mut _363: isize;<br align="left"/>let mut _364: isize;<br align="left"/>debug user =&gt; _1;<br align="left"/>debug perp_market_map =&gt; _2;<br align="left"/>debug spot_market_map =&gt; _3;<br align="left"/>debug oracle_map =&gt; _4;<br align="left"/>debug net_usd_value =&gt; _5;<br align="left"/>debug all_oracles_valid =&gt; _6;<br align="left"/>debug iter =&gt; _12;<br align="left"/>debug spot_position =&gt; _20;<br align="left"/>debug spot_market =&gt; _25;<br align="left"/>debug residual =&gt; _32;<br align="left"/>debug val =&gt; _35;<br align="left"/>debug oracle_price_data =&gt; _36;<br align="left"/>debug oracle_validity =&gt; _37;<br align="left"/>debug residual =&gt; _62;<br align="left"/>debug val =&gt; _65;<br align="left"/>debug residual =&gt; _67;<br align="left"/>debug val =&gt; _70;<br align="left"/>debug residual =&gt; _78;<br align="left"/>debug val =&gt; _81;<br align="left"/>debug token_amount =&gt; _82;<br align="left"/>debug residual =&gt; _91;<br align="left"/>debug val =&gt; _94;<br align="left"/>debug oracle_price =&gt; _95;<br align="left"/>debug token_value =&gt; _96;<br align="left"/>debug residual =&gt; _105;<br align="left"/>debug val =&gt; _108;<br align="left"/>debug residual =&gt; _115;<br align="left"/>debug val =&gt; _118;<br align="left"/>debug iter =&gt; _124;<br align="left"/>debug market_position =&gt; _131;<br align="left"/>debug market =&gt; _136;<br align="left"/>debug residual =&gt; _144;<br align="left"/>debug val =&gt; _147;<br align="left"/>debug quote_oracle_price =&gt; _148;<br align="left"/>debug quote_spot_market =&gt; _149;<br align="left"/>debug residual =&gt; _158;<br align="left"/>debug val =&gt; _161;<br align="left"/>debug quote_oracle_price_data =&gt; _162;<br align="left"/>debug quote_oracle_validity =&gt; _163;<br align="left"/>debug residual =&gt; _188;<br align="left"/>debug val =&gt; _191;<br align="left"/>debug residual =&gt; _193;<br align="left"/>debug val =&gt; _196;<br align="left"/>debug residual =&gt; _204;<br align="left"/>debug val =&gt; _207;<br align="left"/>debug oracle_price_data =&gt; _208;<br align="left"/>debug oracle_validity =&gt; _209;<br align="left"/>debug residual =&gt; _234;<br align="left"/>debug val =&gt; _237;<br align="left"/>debug residual =&gt; _239;<br align="left"/>debug val =&gt; _242;<br align="left"/>debug residual =&gt; _250;<br align="left"/>debug val =&gt; _253;<br align="left"/>debug valuation_price =&gt; _254;<br align="left"/>debug unrealized_funding =&gt; _263;<br align="left"/>debug residual =&gt; _275;<br align="left"/>debug val =&gt; _278;<br align="left"/>debug unrealized_pnl =&gt; _279;<br align="left"/>debug residual =&gt; _287;<br align="left"/>debug val =&gt; _290;<br align="left"/>debug pnl =&gt; _291;<br align="left"/>debug residual =&gt; _300;<br align="left"/>debug val =&gt; _303;<br align="left"/>debug residual =&gt; _305;<br align="left"/>debug val =&gt; _308;<br align="left"/>debug pnl_value =&gt; _309;<br align="left"/>debug residual =&gt; _321;<br align="left"/>debug val =&gt; _324;<br align="left"/>debug residual =&gt; _326;<br align="left"/>debug val =&gt; _329;<br align="left"/>debug residual =&gt; _331;<br align="left"/>debug val =&gt; _334;<br align="left"/>debug residual =&gt; _341;<br align="left"/>debug val =&gt; _344;<br align="left"/>>;
    bb0__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>_5 = const 0_i128<br/>StorageLive(_6)<br/>_6 = const true<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = &amp;((*_1).3: [state::user::SpotPosition; 8])<br/>_10 = move _11 as &amp;[state::user::SpotPosition] (PointerCoercion(Unsize))<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">_9 = core::slice::&lt;impl [SpotPosition]&gt;::iter(move _10)</td></tr></table>>];
    bb1__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/></td></tr><tr><td align="left">_8 = &lt;std::slice::Iter&lt;'_, SpotPosition&gt; as IntoIterator&gt;::into_iter(move _9)</td></tr></table>>];
    bb2__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageLive(_12)<br/>_12 = move _8<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb3__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_17 = &amp;mut _12<br/>_16 = &amp;mut (*_17)<br/></td></tr><tr><td align="left">_15 = &lt;std::slice::Iter&lt;'_, SpotPosition&gt; as Iterator&gt;::next(move _16)</td></tr></table>>];
    bb4__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>_18 = discriminant(_15)<br/></td></tr><tr><td align="left">switchInt(move _18)</td></tr></table>>];
    bb5__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_20)<br/>_20 = ((_15 as Some).0: &amp;state::user::SpotPosition)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>_23 = &amp;(*_20)<br/></td></tr><tr><td align="left">_22 = SpotPosition::is_available(move _23)</td></tr></table>>];
    bb6__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb7__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">_7 = const ()<br/>StorageDead(_17)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_12)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>_123 = &amp;((*_1).4: [state::user::PerpPosition; 8])<br/>_122 = move _123 as &amp;[state::user::PerpPosition] (PointerCoercion(Unsize))<br/>StorageDead(_123)<br/></td></tr><tr><td align="left">_121 = core::slice::&lt;impl [PerpPosition]&gt;::iter(move _122)</td></tr></table>>];
    bb8__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left">switchInt(move _22)</td></tr></table>>];
    bb9__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_22)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/>StorageDead(_17)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>_21 = const ()<br/>StorageDead(_22)<br/>StorageDead(_21)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>_28 = &amp;(*_3)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>_30 = &amp;((*_20).4: u16)<br/>_29 = &amp;(*_30)<br/></td></tr><tr><td align="left">_27 = SpotMarketMap::&lt;'_&gt;::get_ref(move _28, move _29)</td></tr></table>>];
    bb11__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">_26 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _27)</td></tr></table>>];
    bb12__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>_31 = discriminant(_26)<br/></td></tr><tr><td align="left">switchInt(move _31)</td></tr></table>>];
    bb13__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = move ((_26 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_25 = move _35<br/>StorageDead(_35)<br/>_352 = discriminant(_26)<br/>StorageDead(_30)<br/>StorageDead(_26)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>_41 = &amp;mut (*_4)<br/>StorageLive(_42)<br/>_42 = state::user::MarketType::Spot<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>_45 = &amp;_25<br/></td></tr><tr><td align="left">_44 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _45)</td></tr></table>>];
    bb14__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_32)<br/>_32 = ((_26 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_34)<br/>_34 = _32<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i128, bool), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _34)</td></tr></table>>];
    bb15__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_32)<br/>_350 = discriminant(_26)<br/>StorageDead(_30)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>_43 = ((*_44).42: u16)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>_51 = &amp;_25<br/></td></tr><tr><td align="left">_50 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _51)</td></tr></table>>];
    bb17__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">_49 = &amp;(*_50)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">_48 = SpotMarket::oracle_id(move _49)</td></tr></table>>];
    bb18__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>_47 = &amp;_48<br/>_46 = &amp;(*_47)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>_54 = &amp;_25<br/></td></tr><tr><td align="left">_53 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _54)</td></tr></table>>];
    bb19__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>_52 = (((*_53).5: state::oracle::HistoricalOracleData).3: i64)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>_60 = &amp;_25<br/></td></tr><tr><td align="left">_59 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _60)</td></tr></table>>];
    bb20__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">_58 = &amp;(*_59)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">_57 = SpotMarket::get_max_confidence_interval_multiplier(move _58)</td></tr></table>>];
    bb21__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/></td></tr><tr><td align="left">_56 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _57)</td></tr></table>>];
    bb22__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>_61 = discriminant(_56)<br/></td></tr><tr><td align="left">switchInt(move _61)</td></tr></table>>];
    bb23__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_65)<br/>_65 = ((_56 as Continue).0: u64)<br/>_55 = _65<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">_40 = OracleMap::&lt;'_&gt;::get_price_data_and_validity(move _41, move _42, move _43, move _46, move _52, move _55, const 0_i8)</td></tr></table>>];
    bb24__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_62)<br/>_62 = ((_56 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_64)<br/>_64 = _62<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i128, bool), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _64)</td></tr></table>>];
    bb25__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageDead(_62)<br/>StorageDead(_55)<br/>StorageDead(_52)<br/>StorageDead(_46)<br/>StorageDead(_43)<br/>StorageDead(_42)<br/>StorageDead(_41)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_52)<br/>StorageDead(_46)<br/>StorageDead(_43)<br/>StorageDead(_42)<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">_39 = &lt;std::result::Result&lt;(&amp;OraclePriceData, OracleValidity), error::ErrorCode&gt; as Try&gt;::branch(move _40)</td></tr></table>>];
    bb27__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>_66 = discriminant(_39)<br/></td></tr><tr><td align="left">switchInt(move _66)</td></tr></table>>];
    bb28__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_70)<br/>_70 = ((_39 as Continue).0: (&amp;state::oracle::OraclePriceData, math::oracle::OracleValidity))<br/>_38 = _70<br/>StorageDead(_70)<br/>StorageLive(_36)<br/>_36 = (_38.0: &amp;state::oracle::OraclePriceData)<br/>StorageLive(_37)<br/>_37 = (_38.1: math::oracle::OracleValidity)<br/>StorageDead(_59)<br/>StorageDead(_56)<br/>StorageDead(_53)<br/>StorageDead(_50)<br/>StorageDead(_48)<br/>StorageDead(_47)<br/>StorageDead(_44)<br/>StorageDead(_39)<br/>StorageDead(_38)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>_74 = _37<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>_76 = DriftAction::MarginCalc<br/>_75 = Option::&lt;DriftAction&gt;::Some(move _76)<br/>StorageDead(_76)<br/></td></tr><tr><td align="left">_73 = is_oracle_valid_for_action(move _74, move _75)</td></tr></table>>];
    bb29__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_67)<br/>_67 = ((_39 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_69)<br/>_69 = _67<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i128, bool), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _69)</td></tr></table>>];
    bb30__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_74)<br/></td></tr><tr><td align="left">_72 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _73)</td></tr></table>>];
    bb32__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>_77 = discriminant(_72)<br/></td></tr><tr><td align="left">switchInt(move _77)</td></tr></table>>];
    bb33__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageLive(_81)<br/>_81 = ((_72 as Continue).0: bool)<br/>_71 = _81<br/>StorageDead(_81)<br/>_6 = BitAnd(_6, move _71)<br/>StorageDead(_71)<br/>StorageDead(_72)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>_85 = &amp;(*_20)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>_89 = &amp;_25<br/>_88 = &amp;(*_89)<br/></td></tr><tr><td align="left">_87 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _88)</td></tr></table>>];
    bb34__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_78)<br/>_78 = ((_72 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_80)<br/>_80 = _78<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i128, bool), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _80)</td></tr></table>>];
    bb35__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>StorageDead(_78)<br/>StorageDead(_71)<br/>StorageDead(_72)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">_86 = &amp;(*_87)<br/>StorageDead(_88)<br/></td></tr><tr><td align="left">_84 = SpotPosition::get_signed_token_amount(move _85, move _86)</td></tr></table>>];
    bb37__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>StorageDead(_85)<br/></td></tr><tr><td align="left">_83 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _84)</td></tr></table>>];
    bb38__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>_90 = discriminant(_83)<br/></td></tr><tr><td align="left">switchInt(move _90)</td></tr></table>>];
    bb39__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_94)<br/>_94 = ((_83 as Continue).0: i128)<br/>_82 = _94<br/>StorageDead(_94)<br/>StorageDead(_89)<br/>StorageDead(_87)<br/>StorageDead(_83)<br/>StorageLive(_95)<br/>_95 = ((*_36).0: i64)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>_99 = _82<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>_102 = &amp;_25<br/></td></tr><tr><td align="left">_101 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _102)</td></tr></table>>];
    bb40__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageLive(_91)<br/>_91 = ((_83 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_93)<br/>_93 = _91<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i128, bool), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _93)</td></tr></table>>];
    bb41__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageDead(_91)<br/>StorageDead(_89)<br/>StorageDead(_87)<br/>StorageDead(_83)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>_100 = ((*_101).41: u32)<br/>StorageLive(_103)<br/>_103 = _95<br/></td></tr><tr><td align="left">_98 = get_token_value(move _99, move _100, move _103)</td></tr></table>>];
    bb43__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>StorageDead(_100)<br/>StorageDead(_99)<br/></td></tr><tr><td align="left">_97 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _98)</td></tr></table>>];
    bb44__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>_104 = discriminant(_97)<br/></td></tr><tr><td align="left">switchInt(move _104)</td></tr></table>>];
    bb45__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageLive(_108)<br/>_108 = ((_97 as Continue).0: i128)<br/>_96 = _108<br/>StorageDead(_108)<br/>StorageDead(_101)<br/>StorageDead(_97)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>_112 = _5<br/>StorageLive(_113)<br/>_113 = _96<br/></td></tr><tr><td align="left">_111 = &lt;i128 as SafeMath&gt;::safe_add(move _112, move _113)</td></tr></table>>];
    bb46__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageLive(_105)<br/>_105 = ((_97 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_107)<br/>_107 = _105<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i128, bool), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _107)</td></tr></table>>];
    bb47__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>StorageDead(_105)<br/>StorageDead(_101)<br/>StorageDead(_97)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_113)<br/>StorageDead(_112)<br/></td></tr><tr><td align="left">_110 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _111)</td></tr></table>>];
    bb49__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/>_114 = discriminant(_110)<br/></td></tr><tr><td align="left">switchInt(move _114)</td></tr></table>>];
    bb50__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageLive(_118)<br/>_118 = ((_110 as Continue).0: i128)<br/>_109 = _118<br/>StorageDead(_118)<br/>_5 = move _109<br/>StorageDead(_109)<br/>StorageDead(_110)<br/>_14 = const ()<br/>StorageDead(_96)<br/>StorageDead(_95)<br/>StorageDead(_82)<br/>StorageDead(_37)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">drop(_25)</td></tr></table>>];
    bb51__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageLive(_115)<br/>_115 = ((_110 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_117)<br/>_117 = _115<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i128, bool), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _117)</td></tr></table>>];
    bb52__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/>StorageDead(_115)<br/>StorageDead(_109)<br/>StorageDead(_110)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_20)<br/>StorageDead(_17)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/>_13 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/></td></tr><tr><td align="left">_120 = &lt;std::slice::Iter&lt;'_, PerpPosition&gt; as IntoIterator&gt;::into_iter(move _121)</td></tr></table>>];
    bb55__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_121)<br/>StorageLive(_124)<br/>_124 = move _120<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb56__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageLive(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>_128 = &amp;mut _124<br/>_127 = &amp;mut (*_128)<br/></td></tr><tr><td align="left">_126 = &lt;std::slice::Iter&lt;'_, PerpPosition&gt; as Iterator&gt;::next(move _127)</td></tr></table>>];
    bb57__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/>_129 = discriminant(_126)<br/></td></tr><tr><td align="left">switchInt(move _129)</td></tr></table>>];
    bb58__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageLive(_131)<br/>_131 = ((_126 as Some).0: &amp;state::user::PerpPosition)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>_134 = &amp;(*_131)<br/></td></tr><tr><td align="left">_133 = PerpPosition::is_available(move _134)</td></tr></table>>];
    bb59__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">_119 = const ()<br/>StorageDead(_128)<br/>StorageDead(_126)<br/>StorageDead(_125)<br/>StorageDead(_124)<br/>StorageDead(_120)<br/>StorageDead(_119)<br/>StorageLive(_345)<br/>StorageLive(_346)<br/>_346 = _5<br/>StorageLive(_347)<br/>_347 = _6<br/>_345 = (move _346, move _347)<br/>StorageDead(_347)<br/>StorageDead(_346)<br/>_0 = std::result::Result::&lt;(i128, bool), error::ErrorCode&gt;::Ok(move _345)<br/>StorageDead(_345)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb60__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left">switchInt(move _133)</td></tr></table>>];
    bb61__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_134)<br/>StorageDead(_133)<br/>StorageDead(_132)<br/>StorageDead(_131)<br/>StorageDead(_128)<br/>StorageDead(_126)<br/>StorageDead(_125)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_134)<br/>_132 = const ()<br/>StorageDead(_133)<br/>StorageDead(_132)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>StorageLive(_140)<br/>_140 = &amp;(*_2)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>_142 = &amp;((*_131).13: u16)<br/>_141 = &amp;(*_142)<br/></td></tr><tr><td align="left">_139 = PerpMarketMap::&lt;'_&gt;::get_ref(move _140, move _141)</td></tr></table>>];
    bb63__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_141)<br/>StorageDead(_140)<br/></td></tr><tr><td align="left">_138 = &lt;std::result::Result&lt;Ref&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _139)</td></tr></table>>];
    bb64__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_139)<br/>_143 = discriminant(_138)<br/></td></tr><tr><td align="left">switchInt(move _143)</td></tr></table>>];
    bb65__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageLive(_147)<br/>_147 = move ((_138 as Continue).0: std::cell::Ref&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_137 = move _147<br/>StorageDead(_147)<br/>_136 = &amp;_137<br/>_356 = discriminant(_138)<br/>StorageDead(_142)<br/>StorageDead(_138)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>StorageLive(_152)<br/>_152 = &amp;(*_3)<br/>StorageLive(_153)<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>_156 = &amp;(*_136)<br/></td></tr><tr><td align="left">_155 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _156)</td></tr></table>>];
    bb66__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageLive(_144)<br/>_144 = ((_138 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_146)<br/>_146 = _144<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i128, bool), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _146)</td></tr></table>>];
    bb67__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_146)<br/>StorageDead(_144)<br/>_354 = discriminant(_138)<br/>StorageDead(_142)<br/>StorageDead(_138)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_156)<br/>_154 = &amp;((*_155).26: u16)<br/>_153 = &amp;(*_154)<br/></td></tr><tr><td align="left">_151 = SpotMarketMap::&lt;'_&gt;::get_ref(move _152, move _153)</td></tr></table>>];
    bb69__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_153)<br/>StorageDead(_152)<br/></td></tr><tr><td align="left">_150 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _151)</td></tr></table>>];
    bb70__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_151)<br/>_157 = discriminant(_150)<br/></td></tr><tr><td align="left">switchInt(move _157)</td></tr></table>>];
    bb71__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageLive(_161)<br/>_161 = move ((_150 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_149 = move _161<br/>StorageDead(_161)<br/>_360 = discriminant(_150)<br/>StorageDead(_155)<br/>StorageDead(_154)<br/>StorageDead(_150)<br/>StorageLive(_164)<br/>StorageLive(_165)<br/>StorageLive(_166)<br/>StorageLive(_167)<br/>_167 = &amp;mut (*_4)<br/>StorageLive(_168)<br/>_168 = state::user::MarketType::Spot<br/>StorageLive(_169)<br/>StorageLive(_170)<br/>StorageLive(_171)<br/>_171 = &amp;_149<br/></td></tr><tr><td align="left">_170 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _171)</td></tr></table>>];
    bb72__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageLive(_158)<br/>_158 = ((_150 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_160)<br/>_160 = _158<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i128, bool), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _160)</td></tr></table>>];
    bb73__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_160)<br/>StorageDead(_158)<br/>_358 = discriminant(_150)<br/>StorageDead(_155)<br/>StorageDead(_154)<br/>StorageDead(_150)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb74__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_171)<br/>_169 = ((*_170).42: u16)<br/>StorageLive(_172)<br/>StorageLive(_173)<br/>StorageLive(_174)<br/>StorageLive(_175)<br/>StorageLive(_176)<br/>StorageLive(_177)<br/>_177 = &amp;_149<br/></td></tr><tr><td align="left">_176 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _177)</td></tr></table>>];
    bb75__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">_175 = &amp;(*_176)<br/>StorageDead(_177)<br/></td></tr><tr><td align="left">_174 = SpotMarket::oracle_id(move _175)</td></tr></table>>];
    bb76__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_175)<br/>_173 = &amp;_174<br/>_172 = &amp;(*_173)<br/>StorageLive(_178)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>_180 = &amp;_149<br/></td></tr><tr><td align="left">_179 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _180)</td></tr></table>>];
    bb77__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_180)<br/>_178 = (((*_179).5: state::oracle::HistoricalOracleData).3: i64)<br/>StorageLive(_181)<br/>StorageLive(_182)<br/>StorageLive(_183)<br/>StorageLive(_184)<br/>StorageLive(_185)<br/>StorageLive(_186)<br/>_186 = &amp;_149<br/></td></tr><tr><td align="left">_185 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _186)</td></tr></table>>];
    bb78__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">_184 = &amp;(*_185)<br/>StorageDead(_186)<br/></td></tr><tr><td align="left">_183 = SpotMarket::get_max_confidence_interval_multiplier(move _184)</td></tr></table>>];
    bb79__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_184)<br/></td></tr><tr><td align="left">_182 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _183)</td></tr></table>>];
    bb80__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_183)<br/>_187 = discriminant(_182)<br/></td></tr><tr><td align="left">switchInt(move _187)</td></tr></table>>];
    bb81__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageLive(_191)<br/>_191 = ((_182 as Continue).0: u64)<br/>_181 = _191<br/>StorageDead(_191)<br/></td></tr><tr><td align="left">_166 = OracleMap::&lt;'_&gt;::get_price_data_and_validity(move _167, move _168, move _169, move _172, move _178, move _181, const 0_i8)</td></tr></table>>];
    bb82__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageLive(_188)<br/>_188 = ((_182 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_190)<br/>_190 = _188<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i128, bool), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _190)</td></tr></table>>];
    bb83__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_190)<br/>StorageDead(_188)<br/>StorageDead(_181)<br/>StorageDead(_178)<br/>StorageDead(_172)<br/>StorageDead(_169)<br/>StorageDead(_168)<br/>StorageDead(_167)<br/>StorageDead(_166)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb84__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_181)<br/>StorageDead(_178)<br/>StorageDead(_172)<br/>StorageDead(_169)<br/>StorageDead(_168)<br/>StorageDead(_167)<br/></td></tr><tr><td align="left">_165 = &lt;std::result::Result&lt;(&amp;OraclePriceData, OracleValidity), error::ErrorCode&gt; as Try&gt;::branch(move _166)</td></tr></table>>];
    bb85__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_166)<br/>_192 = discriminant(_165)<br/></td></tr><tr><td align="left">switchInt(move _192)</td></tr></table>>];
    bb86__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageLive(_196)<br/>_196 = ((_165 as Continue).0: (&amp;state::oracle::OraclePriceData, math::oracle::OracleValidity))<br/>_164 = _196<br/>StorageDead(_196)<br/>StorageLive(_162)<br/>_162 = (_164.0: &amp;state::oracle::OraclePriceData)<br/>StorageLive(_163)<br/>_163 = (_164.1: math::oracle::OracleValidity)<br/>StorageDead(_185)<br/>StorageDead(_182)<br/>StorageDead(_179)<br/>StorageDead(_176)<br/>StorageDead(_174)<br/>StorageDead(_173)<br/>StorageDead(_170)<br/>StorageDead(_165)<br/>StorageDead(_164)<br/>StorageLive(_197)<br/>StorageLive(_198)<br/>StorageLive(_199)<br/>StorageLive(_200)<br/>_200 = _163<br/>StorageLive(_201)<br/>StorageLive(_202)<br/>_202 = DriftAction::MarginCalc<br/>_201 = Option::&lt;DriftAction&gt;::Some(move _202)<br/>StorageDead(_202)<br/></td></tr><tr><td align="left">_199 = is_oracle_valid_for_action(move _200, move _201)</td></tr></table>>];
    bb87__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageLive(_193)<br/>_193 = ((_165 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_195)<br/>_195 = _193<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i128, bool), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _195)</td></tr></table>>];
    bb88__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_195)<br/>StorageDead(_193)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb89__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_201)<br/>StorageDead(_200)<br/></td></tr><tr><td align="left">_198 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _199)</td></tr></table>>];
    bb90__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_199)<br/>_203 = discriminant(_198)<br/></td></tr><tr><td align="left">switchInt(move _203)</td></tr></table>>];
    bb91__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageLive(_207)<br/>_207 = ((_198 as Continue).0: bool)<br/>_197 = _207<br/>StorageDead(_207)<br/>_6 = BitAnd(_6, move _197)<br/>StorageDead(_197)<br/>StorageDead(_198)<br/>_148 = ((*_162).0: i64)<br/>StorageDead(_163)<br/>StorageDead(_162)<br/></td></tr><tr><td align="left">drop(_149)</td></tr></table>>];
    bb92__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageLive(_204)<br/>_204 = ((_198 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_206)<br/>_206 = _204<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i128, bool), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _206)</td></tr></table>>];
    bb93__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_206)<br/>StorageDead(_204)<br/>StorageDead(_197)<br/>StorageDead(_198)<br/>StorageDead(_163)<br/>StorageDead(_162)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb94__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_149)<br/>StorageLive(_210)<br/>StorageLive(_211)<br/>StorageLive(_212)<br/>StorageLive(_213)<br/>_213 = &amp;mut (*_4)<br/>StorageLive(_214)<br/>_214 = state::user::MarketType::Perp<br/>StorageLive(_215)<br/>StorageLive(_216)<br/>StorageLive(_217)<br/>_217 = &amp;(*_136)<br/></td></tr><tr><td align="left">_216 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _217)</td></tr></table>>];
    bb95__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_217)<br/>_215 = ((*_216).21: u16)<br/>StorageLive(_218)<br/>StorageLive(_219)<br/>StorageLive(_220)<br/>StorageLive(_221)<br/>StorageLive(_222)<br/>StorageLive(_223)<br/>_223 = &amp;(*_136)<br/></td></tr><tr><td align="left">_222 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _223)</td></tr></table>>];
    bb96__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">_221 = &amp;(*_222)<br/>StorageDead(_223)<br/></td></tr><tr><td align="left">_220 = PerpMarket::oracle_id(move _221)</td></tr></table>>];
    bb97__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_221)<br/>_219 = &amp;_220<br/>_218 = &amp;(*_219)<br/>StorageLive(_224)<br/>StorageLive(_225)<br/>StorageLive(_226)<br/>_226 = &amp;(*_136)<br/></td></tr><tr><td align="left">_225 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _226)</td></tr></table>>];
    bb98__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_226)<br/>_224 = ((((*_225).1: state::perp_market::AMM).1: state::oracle::HistoricalOracleData).3: i64)<br/>StorageLive(_227)<br/>StorageLive(_228)<br/>StorageLive(_229)<br/>StorageLive(_230)<br/>StorageLive(_231)<br/>StorageLive(_232)<br/>_232 = &amp;(*_136)<br/></td></tr><tr><td align="left">_231 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _232)</td></tr></table>>];
    bb99__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">_230 = (*_231)<br/>StorageDead(_232)<br/></td></tr><tr><td align="left">_229 = PerpMarket::get_max_confidence_interval_multiplier(move _230)</td></tr></table>>];
    bb100__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_230)<br/></td></tr><tr><td align="left">_228 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _229)</td></tr></table>>];
    bb101__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_229)<br/>_233 = discriminant(_228)<br/></td></tr><tr><td align="left">switchInt(move _233)</td></tr></table>>];
    bb102__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageLive(_237)<br/>_237 = ((_228 as Continue).0: u64)<br/>_227 = _237<br/>StorageDead(_237)<br/></td></tr><tr><td align="left">_212 = OracleMap::&lt;'_&gt;::get_price_data_and_validity(move _213, move _214, move _215, move _218, move _224, move _227, const 0_i8)</td></tr></table>>];
    bb103__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageLive(_234)<br/>_234 = ((_228 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_236)<br/>_236 = _234<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i128, bool), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _236)</td></tr></table>>];
    bb104__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_236)<br/>StorageDead(_234)<br/>StorageDead(_227)<br/>StorageDead(_224)<br/>StorageDead(_218)<br/>StorageDead(_215)<br/>StorageDead(_214)<br/>StorageDead(_213)<br/>StorageDead(_212)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb105__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_227)<br/>StorageDead(_224)<br/>StorageDead(_218)<br/>StorageDead(_215)<br/>StorageDead(_214)<br/>StorageDead(_213)<br/></td></tr><tr><td align="left">_211 = &lt;std::result::Result&lt;(&amp;OraclePriceData, OracleValidity), error::ErrorCode&gt; as Try&gt;::branch(move _212)</td></tr></table>>];
    bb106__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_212)<br/>_238 = discriminant(_211)<br/></td></tr><tr><td align="left">switchInt(move _238)</td></tr></table>>];
    bb107__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageLive(_242)<br/>_242 = ((_211 as Continue).0: (&amp;state::oracle::OraclePriceData, math::oracle::OracleValidity))<br/>_210 = _242<br/>StorageDead(_242)<br/>StorageLive(_208)<br/>_208 = (_210.0: &amp;state::oracle::OraclePriceData)<br/>StorageLive(_209)<br/>_209 = (_210.1: math::oracle::OracleValidity)<br/>StorageDead(_231)<br/>StorageDead(_228)<br/>StorageDead(_225)<br/>StorageDead(_222)<br/>StorageDead(_220)<br/>StorageDead(_219)<br/>StorageDead(_216)<br/>StorageDead(_211)<br/>StorageDead(_210)<br/>StorageLive(_243)<br/>StorageLive(_244)<br/>StorageLive(_245)<br/>StorageLive(_246)<br/>_246 = _209<br/>StorageLive(_247)<br/>StorageLive(_248)<br/>_248 = DriftAction::MarginCalc<br/>_247 = Option::&lt;DriftAction&gt;::Some(move _248)<br/>StorageDead(_248)<br/></td></tr><tr><td align="left">_245 = is_oracle_valid_for_action(move _246, move _247)</td></tr></table>>];
    bb108__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageLive(_239)<br/>_239 = ((_211 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_241)<br/>_241 = _239<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i128, bool), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _241)</td></tr></table>>];
    bb109__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageDead(_241)<br/>StorageDead(_239)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb110__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_247)<br/>StorageDead(_246)<br/></td></tr><tr><td align="left">_244 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _245)</td></tr></table>>];
    bb111__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_245)<br/>_249 = discriminant(_244)<br/></td></tr><tr><td align="left">switchInt(move _249)</td></tr></table>>];
    bb112__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageLive(_253)<br/>_253 = ((_244 as Continue).0: bool)<br/>_243 = _253<br/>StorageDead(_253)<br/>_6 = BitAnd(_6, move _243)<br/>StorageDead(_243)<br/>StorageDead(_244)<br/>StorageLive(_254)<br/>StorageLive(_255)<br/>StorageLive(_256)<br/>StorageLive(_257)<br/>StorageLive(_258)<br/>_258 = &amp;(*_136)<br/></td></tr><tr><td align="left">_257 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _258)</td></tr></table>>];
    bb113__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageLive(_250)<br/>_250 = ((_244 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_252)<br/>_252 = _250<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i128, bool), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _252)</td></tr></table>>];
    bb114__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageDead(_252)<br/>StorageDead(_250)<br/>StorageDead(_243)<br/>StorageDead(_244)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb115__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageDead(_258)<br/>_256 = &amp;((*_257).22: state::perp_market::MarketStatus)<br/>StorageLive(_259)<br/>_348 = const _<br/>_259 = &amp;(*_348)<br/></td></tr><tr><td align="left">_255 = &lt;state::perp_market::MarketStatus as PartialEq&gt;::eq(move _256, move _259)</td></tr></table>>];
    bb116__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left">switchInt(move _255)</td></tr></table>>];
    bb117__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageDead(_259)<br/>StorageDead(_257)<br/>StorageDead(_256)<br/>StorageLive(_261)<br/>StorageLive(_262)<br/>_262 = &amp;(*_136)<br/></td></tr><tr><td align="left">_261 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _262)</td></tr></table>>];
    bb118__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageDead(_262)<br/>_254 = ((*_261).7: i64)<br/>StorageDead(_261)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb119__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageDead(_259)<br/>StorageDead(_257)<br/>StorageDead(_256)<br/>_254 = ((*_208).0: i64)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb120__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageDead(_255)<br/>StorageLive(_263)<br/>StorageLive(_264)<br/>StorageLive(_265)<br/>StorageLive(_266)<br/>StorageLive(_267)<br/>StorageLive(_268)<br/>_268 = ((*_131).1: i64)<br/>_267 = Gt(move _268, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _267)</td></tr></table>>];
    bb121__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageDead(_268)<br/>StorageLive(_269)<br/>StorageLive(_270)<br/>_270 = &amp;(*_136)<br/></td></tr><tr><td align="left">_269 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _270)</td></tr></table>>];
    bb122__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageDead(_270)<br/>_266 = (((*_269).1: state::perp_market::AMM).34: i128)<br/>StorageDead(_269)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb123__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageDead(_268)<br/>StorageLive(_271)<br/>StorageLive(_272)<br/>_272 = &amp;(*_136)<br/></td></tr><tr><td align="left">_271 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _272)</td></tr></table>>];
    bb124__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageDead(_272)<br/>_266 = (((*_271).1: state::perp_market::AMM).35: i128)<br/>StorageDead(_271)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb125__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageDead(_267)<br/>StorageLive(_273)<br/>_273 = &amp;(*_131)<br/></td></tr><tr><td align="left">_265 = calculate_funding_payment(move _266, move _273)</td></tr></table>>];
    bb126__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageDead(_273)<br/>StorageDead(_266)<br/></td></tr><tr><td align="left">_264 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _265)</td></tr></table>>];
    bb127__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageDead(_265)<br/>_274 = discriminant(_264)<br/></td></tr><tr><td align="left">switchInt(move _274)</td></tr></table>>];
    bb128__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageLive(_278)<br/>_278 = ((_264 as Continue).0: i64)<br/>_263 = _278<br/>StorageDead(_278)<br/>StorageDead(_264)<br/>StorageLive(_280)<br/>StorageLive(_281)<br/>StorageLive(_282)<br/>StorageLive(_283)<br/>StorageLive(_284)<br/>_284 = &amp;_131<br/>_349 = deref_copy (*_284)<br/>_283 = &amp;(*_349)<br/>StorageLive(_285)<br/>_285 = _254<br/></td></tr><tr><td align="left">_282 = calculate_base_asset_value_and_pnl_with_oracle_price(move _283, move _285)</td></tr></table>>];
    bb129__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">StorageLive(_275)<br/>_275 = ((_264 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_277)<br/>_277 = _275<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i128, bool), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _277)</td></tr></table>>];
    bb130__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageDead(_277)<br/>StorageDead(_275)<br/>StorageDead(_264)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb131__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageDead(_285)<br/>StorageDead(_283)<br/></td></tr><tr><td align="left">_281 = &lt;std::result::Result&lt;(u128, i128), error::ErrorCode&gt; as Try&gt;::branch(move _282)</td></tr></table>>];
    bb132__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageDead(_282)<br/>_286 = discriminant(_281)<br/></td></tr><tr><td align="left">switchInt(move _286)</td></tr></table>>];
    bb133__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageLive(_290)<br/>_290 = ((_281 as Continue).0: (u128, i128))<br/>_280 = _290<br/>StorageDead(_290)<br/>StorageLive(_279)<br/>_279 = (_280.1: i128)<br/>StorageDead(_284)<br/>StorageDead(_281)<br/>StorageDead(_280)<br/>StorageLive(_291)<br/>StorageLive(_292)<br/>StorageLive(_293)<br/>StorageLive(_294)<br/>_294 = _279<br/>StorageLive(_295)<br/>StorageLive(_296)<br/>StorageLive(_297)<br/>StorageLive(_298)<br/>_298 = _263<br/></td></tr><tr><td align="left">_297 = &lt;i64 as Cast&gt;::cast::&lt;i128&gt;(move _298)</td></tr></table>>];
    bb134__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageLive(_287)<br/>_287 = ((_281 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_289)<br/>_289 = _287<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i128, bool), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _289)</td></tr></table>>];
    bb135__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageDead(_289)<br/>StorageDead(_287)<br/>StorageDead(_284)<br/>StorageDead(_281)<br/>StorageDead(_280)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb136__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageDead(_298)<br/></td></tr><tr><td align="left">_296 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _297)</td></tr></table>>];
    bb137__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">StorageDead(_297)<br/>_299 = discriminant(_296)<br/></td></tr><tr><td align="left">switchInt(move _299)</td></tr></table>>];
    bb138__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">StorageLive(_303)<br/>_303 = ((_296 as Continue).0: i128)<br/>_295 = _303<br/>StorageDead(_303)<br/></td></tr><tr><td align="left">_293 = &lt;i128 as SafeMath&gt;::safe_add(move _294, move _295)</td></tr></table>>];
    bb139__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">StorageLive(_300)<br/>_300 = ((_296 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_302)<br/>_302 = _300<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i128, bool), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _302)</td></tr></table>>];
    bb140__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">StorageDead(_302)<br/>StorageDead(_300)<br/>StorageDead(_295)<br/>StorageDead(_294)<br/>StorageDead(_293)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb141__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">StorageDead(_295)<br/>StorageDead(_294)<br/></td></tr><tr><td align="left">_292 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _293)</td></tr></table>>];
    bb142__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageDead(_293)<br/>_304 = discriminant(_292)<br/></td></tr><tr><td align="left">switchInt(move _304)</td></tr></table>>];
    bb143__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageLive(_308)<br/>_308 = ((_292 as Continue).0: i128)<br/>_291 = _308<br/>StorageDead(_308)<br/>StorageDead(_296)<br/>StorageDead(_292)<br/>StorageLive(_309)<br/>StorageLive(_310)<br/>StorageLive(_311)<br/>StorageLive(_312)<br/>StorageLive(_313)<br/>StorageLive(_314)<br/>StorageLive(_315)<br/>_315 = _291<br/>StorageLive(_316)<br/>StorageLive(_317)<br/>StorageLive(_318)<br/>StorageLive(_319)<br/>_319 = _148<br/></td></tr><tr><td align="left">_318 = &lt;i64 as Cast&gt;::cast::&lt;i128&gt;(move _319)</td></tr></table>>];
    bb144__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">StorageLive(_305)<br/>_305 = ((_292 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_307)<br/>_307 = _305<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i128, bool), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _307)</td></tr></table>>];
    bb145__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageDead(_307)<br/>StorageDead(_305)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb146__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">StorageDead(_319)<br/></td></tr><tr><td align="left">_317 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _318)</td></tr></table>>];
    bb147__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left" balign="left">StorageDead(_318)<br/>_320 = discriminant(_317)<br/></td></tr><tr><td align="left">switchInt(move _320)</td></tr></table>>];
    bb148__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left" balign="left">StorageLive(_324)<br/>_324 = ((_317 as Continue).0: i128)<br/>_316 = _324<br/>StorageDead(_324)<br/></td></tr><tr><td align="left">_314 = &lt;i128 as SafeMath&gt;::safe_mul(move _315, move _316)</td></tr></table>>];
    bb149__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">149</td></tr><tr><td align="left" balign="left">StorageLive(_321)<br/>_321 = ((_317 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_323)<br/>_323 = _321<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i128, bool), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _323)</td></tr></table>>];
    bb150__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">150</td></tr><tr><td align="left" balign="left">StorageDead(_323)<br/>StorageDead(_321)<br/>StorageDead(_316)<br/>StorageDead(_315)<br/>StorageDead(_314)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb151__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">151</td></tr><tr><td align="left" balign="left">StorageDead(_316)<br/>StorageDead(_315)<br/></td></tr><tr><td align="left">_313 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _314)</td></tr></table>>];
    bb152__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">152</td></tr><tr><td align="left" balign="left">StorageDead(_314)<br/>_325 = discriminant(_313)<br/></td></tr><tr><td align="left">switchInt(move _325)</td></tr></table>>];
    bb153__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">153</td></tr><tr><td align="left" balign="left">StorageLive(_329)<br/>_329 = ((_313 as Continue).0: i128)<br/>_312 = _329<br/>StorageDead(_329)<br/></td></tr><tr><td align="left">_311 = &lt;i128 as SafeMath&gt;::safe_div(move _312, const _)</td></tr></table>>];
    bb154__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">154</td></tr><tr><td align="left" balign="left">StorageLive(_326)<br/>_326 = ((_313 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_328)<br/>_328 = _326<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i128, bool), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _328)</td></tr></table>>];
    bb155__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">155</td></tr><tr><td align="left" balign="left">StorageDead(_328)<br/>StorageDead(_326)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb156__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">156</td></tr><tr><td align="left" balign="left">StorageDead(_312)<br/></td></tr><tr><td align="left">_310 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _311)</td></tr></table>>];
    bb157__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">157</td></tr><tr><td align="left" balign="left">StorageDead(_311)<br/>_330 = discriminant(_310)<br/></td></tr><tr><td align="left">switchInt(move _330)</td></tr></table>>];
    bb158__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">158</td></tr><tr><td align="left" balign="left">StorageLive(_334)<br/>_334 = ((_310 as Continue).0: i128)<br/>_309 = _334<br/>StorageDead(_334)<br/>StorageDead(_317)<br/>StorageDead(_313)<br/>StorageDead(_310)<br/>StorageLive(_335)<br/>StorageLive(_336)<br/>StorageLive(_337)<br/>StorageLive(_338)<br/>_338 = _5<br/>StorageLive(_339)<br/>_339 = _309<br/></td></tr><tr><td align="left">_337 = &lt;i128 as SafeMath&gt;::safe_add(move _338, move _339)</td></tr></table>>];
    bb159__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">159</td></tr><tr><td align="left" balign="left">StorageLive(_331)<br/>_331 = ((_310 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_333)<br/>_333 = _331<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i128, bool), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _333)</td></tr></table>>];
    bb160__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">160</td></tr><tr><td align="left" balign="left">StorageDead(_333)<br/>StorageDead(_331)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb161__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">161</td></tr><tr><td align="left" balign="left">StorageDead(_339)<br/>StorageDead(_338)<br/></td></tr><tr><td align="left">_336 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _337)</td></tr></table>>];
    bb162__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">162</td></tr><tr><td align="left" balign="left">StorageDead(_337)<br/>_340 = discriminant(_336)<br/></td></tr><tr><td align="left">switchInt(move _340)</td></tr></table>>];
    bb163__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">163</td></tr><tr><td align="left" balign="left">StorageLive(_344)<br/>_344 = ((_336 as Continue).0: i128)<br/>_335 = _344<br/>StorageDead(_344)<br/>_5 = move _335<br/>StorageDead(_335)<br/>StorageDead(_336)<br/>_125 = const ()<br/>StorageDead(_309)<br/>StorageDead(_291)<br/>StorageDead(_279)<br/>StorageDead(_263)<br/>StorageDead(_254)<br/>StorageDead(_209)<br/>StorageDead(_208)<br/>StorageDead(_148)<br/></td></tr><tr><td align="left">drop(_137)</td></tr></table>>];
    bb164__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">164</td></tr><tr><td align="left" balign="left">StorageLive(_341)<br/>_341 = ((_336 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_343)<br/>_343 = _341<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i128, bool), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _343)</td></tr></table>>];
    bb165__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">165</td></tr><tr><td align="left" balign="left">StorageDead(_343)<br/>StorageDead(_341)<br/>StorageDead(_335)<br/>StorageDead(_336)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb166__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">166</td></tr><tr><td align="left" balign="left">StorageDead(_137)<br/>StorageDead(_136)<br/>StorageDead(_131)<br/>StorageDead(_128)<br/>StorageDead(_126)<br/>StorageDead(_125)<br/>_13 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb167__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">167</td></tr><tr><td align="left" balign="left">StorageDead(_312)<br/>StorageDead(_311)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb168__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">168</td></tr><tr><td align="left" balign="left">StorageDead(_317)<br/>StorageDead(_313)<br/>StorageDead(_310)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb169__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">169</td></tr><tr><td align="left" balign="left">StorageDead(_309)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb170__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">170</td></tr><tr><td align="left" balign="left">StorageDead(_296)<br/>StorageDead(_292)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb171__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">171</td></tr><tr><td align="left" balign="left">StorageDead(_291)<br/>StorageDead(_279)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb172__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">172</td></tr><tr><td align="left" balign="left">StorageDead(_263)<br/>StorageDead(_254)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb173__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">173</td></tr><tr><td align="left" balign="left">StorageDead(_209)<br/>StorageDead(_208)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb174__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">174</td></tr><tr><td align="left" balign="left">StorageDead(_231)<br/>StorageDead(_228)<br/>StorageDead(_225)<br/>StorageDead(_222)<br/>StorageDead(_220)<br/>StorageDead(_219)<br/>StorageDead(_216)<br/>StorageDead(_211)<br/>StorageDead(_210)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb175__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">175</td></tr><tr><td align="left" balign="left">StorageDead(_185)<br/>StorageDead(_182)<br/>StorageDead(_179)<br/>StorageDead(_176)<br/>StorageDead(_174)<br/>StorageDead(_173)<br/>StorageDead(_170)<br/>StorageDead(_165)<br/>StorageDead(_164)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb176__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">176</td></tr><tr><td align="left">drop(_149)</td></tr></table>>];
    bb177__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">177</td></tr><tr><td align="left" balign="left">StorageDead(_149)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb178__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">178</td></tr><tr><td align="left" balign="left">StorageDead(_148)<br/></td></tr><tr><td align="left">drop(_137)</td></tr></table>>];
    bb179__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">179</td></tr><tr><td align="left" balign="left">StorageDead(_137)<br/>StorageDead(_136)<br/>StorageDead(_131)<br/>StorageDead(_128)<br/>StorageDead(_126)<br/>StorageDead(_125)<br/>StorageDead(_124)<br/>StorageDead(_120)<br/>StorageDead(_119)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb180__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">180</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>StorageDead(_95)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb181__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">181</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb182__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">182</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb183__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">183</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_56)<br/>StorageDead(_53)<br/>StorageDead(_50)<br/>StorageDead(_48)<br/>StorageDead(_47)<br/>StorageDead(_44)<br/>StorageDead(_39)<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb184__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">184</td></tr><tr><td align="left">drop(_25)</td></tr></table>>];
    bb185__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">185</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_20)<br/>StorageDead(_17)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_12)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb186__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">186</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb187__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">187</td></tr><tr><td align="left">return</td></tr></table>>];
    bb188__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">188 (cleanup)</td></tr><tr><td align="left">drop(_149)</td></tr></table>>];
    bb189__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">189 (cleanup)</td></tr><tr><td align="left">drop(_137)</td></tr></table>>];
    bb190__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">190 (cleanup)</td></tr><tr><td align="left">drop(_25)</td></tr></table>>];
    bb191__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">191 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb192__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">192 (cleanup)</td></tr><tr><td align="left" balign="left">_362 = discriminant(_150)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb193__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">193 (cleanup)</td></tr><tr><td align="left" balign="left">_363 = discriminant(_138)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb194__0_2476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">194 (cleanup)</td></tr><tr><td align="left" balign="left">_364 = discriminant(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_2476 -> bb1__0_2476 [label="return"];
    bb1__0_2476 -> bb2__0_2476 [label="return"];
    bb2__0_2476 -> bb3__0_2476 [label=""];
    bb3__0_2476 -> bb4__0_2476 [label="return"];
    bb4__0_2476 -> bb7__0_2476 [label="0"];
    bb4__0_2476 -> bb5__0_2476 [label="1"];
    bb4__0_2476 -> bb6__0_2476 [label="otherwise"];
    bb5__0_2476 -> bb8__0_2476 [label="return"];
    bb7__0_2476 -> bb54__0_2476 [label="return"];
    bb8__0_2476 -> bb10__0_2476 [label="0"];
    bb8__0_2476 -> bb9__0_2476 [label="otherwise"];
    bb9__0_2476 -> bb3__0_2476 [label=""];
    bb10__0_2476 -> bb11__0_2476 [label="return"];
    bb11__0_2476 -> bb12__0_2476 [label="return"];
    bb11__0_2476 -> bb191__0_2476 [label="unwind"];
    bb12__0_2476 -> bb13__0_2476 [label="0"];
    bb12__0_2476 -> bb14__0_2476 [label="1"];
    bb12__0_2476 -> bb6__0_2476 [label="otherwise"];
    bb13__0_2476 -> bb16__0_2476 [label="return"];
    bb13__0_2476 -> bb190__0_2476 [label="unwind"];
    bb14__0_2476 -> bb15__0_2476 [label="return"];
    bb14__0_2476 -> bb194__0_2476 [label="unwind"];
    bb15__0_2476 -> bb185__0_2476 [label=""];
    bb16__0_2476 -> bb17__0_2476 [label="return"];
    bb16__0_2476 -> bb190__0_2476 [label="unwind"];
    bb17__0_2476 -> bb18__0_2476 [label="return"];
    bb17__0_2476 -> bb190__0_2476 [label="unwind"];
    bb18__0_2476 -> bb19__0_2476 [label="return"];
    bb18__0_2476 -> bb190__0_2476 [label="unwind"];
    bb19__0_2476 -> bb20__0_2476 [label="return"];
    bb19__0_2476 -> bb190__0_2476 [label="unwind"];
    bb20__0_2476 -> bb21__0_2476 [label="return"];
    bb20__0_2476 -> bb190__0_2476 [label="unwind"];
    bb21__0_2476 -> bb22__0_2476 [label="return"];
    bb21__0_2476 -> bb190__0_2476 [label="unwind"];
    bb22__0_2476 -> bb23__0_2476 [label="0"];
    bb22__0_2476 -> bb24__0_2476 [label="1"];
    bb22__0_2476 -> bb6__0_2476 [label="otherwise"];
    bb23__0_2476 -> bb26__0_2476 [label="return"];
    bb23__0_2476 -> bb190__0_2476 [label="unwind"];
    bb24__0_2476 -> bb25__0_2476 [label="return"];
    bb24__0_2476 -> bb190__0_2476 [label="unwind"];
    bb25__0_2476 -> bb183__0_2476 [label=""];
    bb26__0_2476 -> bb27__0_2476 [label="return"];
    bb26__0_2476 -> bb190__0_2476 [label="unwind"];
    bb27__0_2476 -> bb28__0_2476 [label="0"];
    bb27__0_2476 -> bb29__0_2476 [label="1"];
    bb27__0_2476 -> bb6__0_2476 [label="otherwise"];
    bb28__0_2476 -> bb31__0_2476 [label="return"];
    bb28__0_2476 -> bb190__0_2476 [label="unwind"];
    bb29__0_2476 -> bb30__0_2476 [label="return"];
    bb29__0_2476 -> bb190__0_2476 [label="unwind"];
    bb30__0_2476 -> bb183__0_2476 [label=""];
    bb31__0_2476 -> bb32__0_2476 [label="return"];
    bb31__0_2476 -> bb190__0_2476 [label="unwind"];
    bb32__0_2476 -> bb33__0_2476 [label="0"];
    bb32__0_2476 -> bb34__0_2476 [label="1"];
    bb32__0_2476 -> bb6__0_2476 [label="otherwise"];
    bb33__0_2476 -> bb36__0_2476 [label="return"];
    bb33__0_2476 -> bb190__0_2476 [label="unwind"];
    bb34__0_2476 -> bb35__0_2476 [label="return"];
    bb34__0_2476 -> bb190__0_2476 [label="unwind"];
    bb35__0_2476 -> bb182__0_2476 [label=""];
    bb36__0_2476 -> bb37__0_2476 [label="return"];
    bb36__0_2476 -> bb190__0_2476 [label="unwind"];
    bb37__0_2476 -> bb38__0_2476 [label="return"];
    bb37__0_2476 -> bb190__0_2476 [label="unwind"];
    bb38__0_2476 -> bb39__0_2476 [label="0"];
    bb38__0_2476 -> bb40__0_2476 [label="1"];
    bb38__0_2476 -> bb6__0_2476 [label="otherwise"];
    bb39__0_2476 -> bb42__0_2476 [label="return"];
    bb39__0_2476 -> bb190__0_2476 [label="unwind"];
    bb40__0_2476 -> bb41__0_2476 [label="return"];
    bb40__0_2476 -> bb190__0_2476 [label="unwind"];
    bb41__0_2476 -> bb181__0_2476 [label=""];
    bb42__0_2476 -> bb43__0_2476 [label="return"];
    bb42__0_2476 -> bb190__0_2476 [label="unwind"];
    bb43__0_2476 -> bb44__0_2476 [label="return"];
    bb43__0_2476 -> bb190__0_2476 [label="unwind"];
    bb44__0_2476 -> bb45__0_2476 [label="0"];
    bb44__0_2476 -> bb46__0_2476 [label="1"];
    bb44__0_2476 -> bb6__0_2476 [label="otherwise"];
    bb45__0_2476 -> bb48__0_2476 [label="return"];
    bb45__0_2476 -> bb190__0_2476 [label="unwind"];
    bb46__0_2476 -> bb47__0_2476 [label="return"];
    bb46__0_2476 -> bb190__0_2476 [label="unwind"];
    bb47__0_2476 -> bb180__0_2476 [label=""];
    bb48__0_2476 -> bb49__0_2476 [label="return"];
    bb48__0_2476 -> bb190__0_2476 [label="unwind"];
    bb49__0_2476 -> bb50__0_2476 [label="0"];
    bb49__0_2476 -> bb51__0_2476 [label="1"];
    bb49__0_2476 -> bb6__0_2476 [label="otherwise"];
    bb50__0_2476 -> bb53__0_2476 [label="return"];
    bb50__0_2476 -> bb191__0_2476 [label="unwind"];
    bb51__0_2476 -> bb52__0_2476 [label="return"];
    bb51__0_2476 -> bb190__0_2476 [label="unwind"];
    bb52__0_2476 -> bb180__0_2476 [label=""];
    bb53__0_2476 -> bb3__0_2476 [label=""];
    bb54__0_2476 -> bb55__0_2476 [label="return"];
    bb55__0_2476 -> bb56__0_2476 [label=""];
    bb56__0_2476 -> bb57__0_2476 [label="return"];
    bb57__0_2476 -> bb59__0_2476 [label="0"];
    bb57__0_2476 -> bb58__0_2476 [label="1"];
    bb57__0_2476 -> bb6__0_2476 [label="otherwise"];
    bb58__0_2476 -> bb60__0_2476 [label="return"];
    bb59__0_2476 -> bb187__0_2476 [label=""];
    bb60__0_2476 -> bb62__0_2476 [label="0"];
    bb60__0_2476 -> bb61__0_2476 [label="otherwise"];
    bb61__0_2476 -> bb56__0_2476 [label=""];
    bb62__0_2476 -> bb63__0_2476 [label="return"];
    bb63__0_2476 -> bb64__0_2476 [label="return"];
    bb63__0_2476 -> bb191__0_2476 [label="unwind"];
    bb64__0_2476 -> bb65__0_2476 [label="0"];
    bb64__0_2476 -> bb66__0_2476 [label="1"];
    bb64__0_2476 -> bb6__0_2476 [label="otherwise"];
    bb65__0_2476 -> bb68__0_2476 [label="return"];
    bb65__0_2476 -> bb189__0_2476 [label="unwind"];
    bb66__0_2476 -> bb67__0_2476 [label="return"];
    bb66__0_2476 -> bb193__0_2476 [label="unwind"];
    bb67__0_2476 -> bb179__0_2476 [label=""];
    bb68__0_2476 -> bb69__0_2476 [label="return"];
    bb68__0_2476 -> bb189__0_2476 [label="unwind"];
    bb69__0_2476 -> bb70__0_2476 [label="return"];
    bb69__0_2476 -> bb189__0_2476 [label="unwind"];
    bb70__0_2476 -> bb71__0_2476 [label="0"];
    bb70__0_2476 -> bb72__0_2476 [label="1"];
    bb70__0_2476 -> bb6__0_2476 [label="otherwise"];
    bb71__0_2476 -> bb74__0_2476 [label="return"];
    bb71__0_2476 -> bb188__0_2476 [label="unwind"];
    bb72__0_2476 -> bb73__0_2476 [label="return"];
    bb72__0_2476 -> bb192__0_2476 [label="unwind"];
    bb73__0_2476 -> bb177__0_2476 [label=""];
    bb74__0_2476 -> bb75__0_2476 [label="return"];
    bb74__0_2476 -> bb188__0_2476 [label="unwind"];
    bb75__0_2476 -> bb76__0_2476 [label="return"];
    bb75__0_2476 -> bb188__0_2476 [label="unwind"];
    bb76__0_2476 -> bb77__0_2476 [label="return"];
    bb76__0_2476 -> bb188__0_2476 [label="unwind"];
    bb77__0_2476 -> bb78__0_2476 [label="return"];
    bb77__0_2476 -> bb188__0_2476 [label="unwind"];
    bb78__0_2476 -> bb79__0_2476 [label="return"];
    bb78__0_2476 -> bb188__0_2476 [label="unwind"];
    bb79__0_2476 -> bb80__0_2476 [label="return"];
    bb79__0_2476 -> bb188__0_2476 [label="unwind"];
    bb80__0_2476 -> bb81__0_2476 [label="0"];
    bb80__0_2476 -> bb82__0_2476 [label="1"];
    bb80__0_2476 -> bb6__0_2476 [label="otherwise"];
    bb81__0_2476 -> bb84__0_2476 [label="return"];
    bb81__0_2476 -> bb188__0_2476 [label="unwind"];
    bb82__0_2476 -> bb83__0_2476 [label="return"];
    bb82__0_2476 -> bb188__0_2476 [label="unwind"];
    bb83__0_2476 -> bb175__0_2476 [label=""];
    bb84__0_2476 -> bb85__0_2476 [label="return"];
    bb84__0_2476 -> bb188__0_2476 [label="unwind"];
    bb85__0_2476 -> bb86__0_2476 [label="0"];
    bb85__0_2476 -> bb87__0_2476 [label="1"];
    bb85__0_2476 -> bb6__0_2476 [label="otherwise"];
    bb86__0_2476 -> bb89__0_2476 [label="return"];
    bb86__0_2476 -> bb188__0_2476 [label="unwind"];
    bb87__0_2476 -> bb88__0_2476 [label="return"];
    bb87__0_2476 -> bb188__0_2476 [label="unwind"];
    bb88__0_2476 -> bb175__0_2476 [label=""];
    bb89__0_2476 -> bb90__0_2476 [label="return"];
    bb89__0_2476 -> bb188__0_2476 [label="unwind"];
    bb90__0_2476 -> bb91__0_2476 [label="0"];
    bb90__0_2476 -> bb92__0_2476 [label="1"];
    bb90__0_2476 -> bb6__0_2476 [label="otherwise"];
    bb91__0_2476 -> bb94__0_2476 [label="return"];
    bb91__0_2476 -> bb189__0_2476 [label="unwind"];
    bb92__0_2476 -> bb93__0_2476 [label="return"];
    bb92__0_2476 -> bb188__0_2476 [label="unwind"];
    bb93__0_2476 -> bb176__0_2476 [label=""];
    bb94__0_2476 -> bb95__0_2476 [label="return"];
    bb94__0_2476 -> bb189__0_2476 [label="unwind"];
    bb95__0_2476 -> bb96__0_2476 [label="return"];
    bb95__0_2476 -> bb189__0_2476 [label="unwind"];
    bb96__0_2476 -> bb97__0_2476 [label="return"];
    bb96__0_2476 -> bb189__0_2476 [label="unwind"];
    bb97__0_2476 -> bb98__0_2476 [label="return"];
    bb97__0_2476 -> bb189__0_2476 [label="unwind"];
    bb98__0_2476 -> bb99__0_2476 [label="return"];
    bb98__0_2476 -> bb189__0_2476 [label="unwind"];
    bb99__0_2476 -> bb100__0_2476 [label="return"];
    bb99__0_2476 -> bb189__0_2476 [label="unwind"];
    bb100__0_2476 -> bb101__0_2476 [label="return"];
    bb100__0_2476 -> bb189__0_2476 [label="unwind"];
    bb101__0_2476 -> bb102__0_2476 [label="0"];
    bb101__0_2476 -> bb103__0_2476 [label="1"];
    bb101__0_2476 -> bb6__0_2476 [label="otherwise"];
    bb102__0_2476 -> bb105__0_2476 [label="return"];
    bb102__0_2476 -> bb189__0_2476 [label="unwind"];
    bb103__0_2476 -> bb104__0_2476 [label="return"];
    bb103__0_2476 -> bb189__0_2476 [label="unwind"];
    bb104__0_2476 -> bb174__0_2476 [label=""];
    bb105__0_2476 -> bb106__0_2476 [label="return"];
    bb105__0_2476 -> bb189__0_2476 [label="unwind"];
    bb106__0_2476 -> bb107__0_2476 [label="0"];
    bb106__0_2476 -> bb108__0_2476 [label="1"];
    bb106__0_2476 -> bb6__0_2476 [label="otherwise"];
    bb107__0_2476 -> bb110__0_2476 [label="return"];
    bb107__0_2476 -> bb189__0_2476 [label="unwind"];
    bb108__0_2476 -> bb109__0_2476 [label="return"];
    bb108__0_2476 -> bb189__0_2476 [label="unwind"];
    bb109__0_2476 -> bb174__0_2476 [label=""];
    bb110__0_2476 -> bb111__0_2476 [label="return"];
    bb110__0_2476 -> bb189__0_2476 [label="unwind"];
    bb111__0_2476 -> bb112__0_2476 [label="0"];
    bb111__0_2476 -> bb113__0_2476 [label="1"];
    bb111__0_2476 -> bb6__0_2476 [label="otherwise"];
    bb112__0_2476 -> bb115__0_2476 [label="return"];
    bb112__0_2476 -> bb189__0_2476 [label="unwind"];
    bb113__0_2476 -> bb114__0_2476 [label="return"];
    bb113__0_2476 -> bb189__0_2476 [label="unwind"];
    bb114__0_2476 -> bb173__0_2476 [label=""];
    bb115__0_2476 -> bb116__0_2476 [label="return"];
    bb115__0_2476 -> bb189__0_2476 [label="unwind"];
    bb116__0_2476 -> bb119__0_2476 [label="0"];
    bb116__0_2476 -> bb117__0_2476 [label="otherwise"];
    bb117__0_2476 -> bb118__0_2476 [label="return"];
    bb117__0_2476 -> bb189__0_2476 [label="unwind"];
    bb118__0_2476 -> bb120__0_2476 [label=""];
    bb119__0_2476 -> bb120__0_2476 [label=""];
    bb120__0_2476 -> bb123__0_2476 [label="0"];
    bb120__0_2476 -> bb121__0_2476 [label="otherwise"];
    bb121__0_2476 -> bb122__0_2476 [label="return"];
    bb121__0_2476 -> bb189__0_2476 [label="unwind"];
    bb122__0_2476 -> bb125__0_2476 [label=""];
    bb123__0_2476 -> bb124__0_2476 [label="return"];
    bb123__0_2476 -> bb189__0_2476 [label="unwind"];
    bb124__0_2476 -> bb125__0_2476 [label=""];
    bb125__0_2476 -> bb126__0_2476 [label="return"];
    bb125__0_2476 -> bb189__0_2476 [label="unwind"];
    bb126__0_2476 -> bb127__0_2476 [label="return"];
    bb126__0_2476 -> bb189__0_2476 [label="unwind"];
    bb127__0_2476 -> bb128__0_2476 [label="0"];
    bb127__0_2476 -> bb129__0_2476 [label="1"];
    bb127__0_2476 -> bb6__0_2476 [label="otherwise"];
    bb128__0_2476 -> bb131__0_2476 [label="return"];
    bb128__0_2476 -> bb189__0_2476 [label="unwind"];
    bb129__0_2476 -> bb130__0_2476 [label="return"];
    bb129__0_2476 -> bb189__0_2476 [label="unwind"];
    bb130__0_2476 -> bb172__0_2476 [label=""];
    bb131__0_2476 -> bb132__0_2476 [label="return"];
    bb131__0_2476 -> bb189__0_2476 [label="unwind"];
    bb132__0_2476 -> bb133__0_2476 [label="0"];
    bb132__0_2476 -> bb134__0_2476 [label="1"];
    bb132__0_2476 -> bb6__0_2476 [label="otherwise"];
    bb133__0_2476 -> bb136__0_2476 [label="return"];
    bb133__0_2476 -> bb189__0_2476 [label="unwind"];
    bb134__0_2476 -> bb135__0_2476 [label="return"];
    bb134__0_2476 -> bb189__0_2476 [label="unwind"];
    bb135__0_2476 -> bb172__0_2476 [label=""];
    bb136__0_2476 -> bb137__0_2476 [label="return"];
    bb136__0_2476 -> bb189__0_2476 [label="unwind"];
    bb137__0_2476 -> bb138__0_2476 [label="0"];
    bb137__0_2476 -> bb139__0_2476 [label="1"];
    bb137__0_2476 -> bb6__0_2476 [label="otherwise"];
    bb138__0_2476 -> bb141__0_2476 [label="return"];
    bb138__0_2476 -> bb189__0_2476 [label="unwind"];
    bb139__0_2476 -> bb140__0_2476 [label="return"];
    bb139__0_2476 -> bb189__0_2476 [label="unwind"];
    bb140__0_2476 -> bb170__0_2476 [label=""];
    bb141__0_2476 -> bb142__0_2476 [label="return"];
    bb141__0_2476 -> bb189__0_2476 [label="unwind"];
    bb142__0_2476 -> bb143__0_2476 [label="0"];
    bb142__0_2476 -> bb144__0_2476 [label="1"];
    bb142__0_2476 -> bb6__0_2476 [label="otherwise"];
    bb143__0_2476 -> bb146__0_2476 [label="return"];
    bb143__0_2476 -> bb189__0_2476 [label="unwind"];
    bb144__0_2476 -> bb145__0_2476 [label="return"];
    bb144__0_2476 -> bb189__0_2476 [label="unwind"];
    bb145__0_2476 -> bb170__0_2476 [label=""];
    bb146__0_2476 -> bb147__0_2476 [label="return"];
    bb146__0_2476 -> bb189__0_2476 [label="unwind"];
    bb147__0_2476 -> bb148__0_2476 [label="0"];
    bb147__0_2476 -> bb149__0_2476 [label="1"];
    bb147__0_2476 -> bb6__0_2476 [label="otherwise"];
    bb148__0_2476 -> bb151__0_2476 [label="return"];
    bb148__0_2476 -> bb189__0_2476 [label="unwind"];
    bb149__0_2476 -> bb150__0_2476 [label="return"];
    bb149__0_2476 -> bb189__0_2476 [label="unwind"];
    bb150__0_2476 -> bb167__0_2476 [label=""];
    bb151__0_2476 -> bb152__0_2476 [label="return"];
    bb151__0_2476 -> bb189__0_2476 [label="unwind"];
    bb152__0_2476 -> bb153__0_2476 [label="0"];
    bb152__0_2476 -> bb154__0_2476 [label="1"];
    bb152__0_2476 -> bb6__0_2476 [label="otherwise"];
    bb153__0_2476 -> bb156__0_2476 [label="return"];
    bb153__0_2476 -> bb189__0_2476 [label="unwind"];
    bb154__0_2476 -> bb155__0_2476 [label="return"];
    bb154__0_2476 -> bb189__0_2476 [label="unwind"];
    bb155__0_2476 -> bb167__0_2476 [label=""];
    bb156__0_2476 -> bb157__0_2476 [label="return"];
    bb156__0_2476 -> bb189__0_2476 [label="unwind"];
    bb157__0_2476 -> bb158__0_2476 [label="0"];
    bb157__0_2476 -> bb159__0_2476 [label="1"];
    bb157__0_2476 -> bb6__0_2476 [label="otherwise"];
    bb158__0_2476 -> bb161__0_2476 [label="return"];
    bb158__0_2476 -> bb189__0_2476 [label="unwind"];
    bb159__0_2476 -> bb160__0_2476 [label="return"];
    bb159__0_2476 -> bb189__0_2476 [label="unwind"];
    bb160__0_2476 -> bb168__0_2476 [label=""];
    bb161__0_2476 -> bb162__0_2476 [label="return"];
    bb161__0_2476 -> bb189__0_2476 [label="unwind"];
    bb162__0_2476 -> bb163__0_2476 [label="0"];
    bb162__0_2476 -> bb164__0_2476 [label="1"];
    bb162__0_2476 -> bb6__0_2476 [label="otherwise"];
    bb163__0_2476 -> bb166__0_2476 [label="return"];
    bb163__0_2476 -> bb191__0_2476 [label="unwind"];
    bb164__0_2476 -> bb165__0_2476 [label="return"];
    bb164__0_2476 -> bb189__0_2476 [label="unwind"];
    bb165__0_2476 -> bb169__0_2476 [label=""];
    bb166__0_2476 -> bb56__0_2476 [label=""];
    bb167__0_2476 -> bb168__0_2476 [label=""];
    bb168__0_2476 -> bb169__0_2476 [label=""];
    bb169__0_2476 -> bb171__0_2476 [label=""];
    bb170__0_2476 -> bb171__0_2476 [label=""];
    bb171__0_2476 -> bb172__0_2476 [label=""];
    bb172__0_2476 -> bb173__0_2476 [label=""];
    bb173__0_2476 -> bb178__0_2476 [label=""];
    bb174__0_2476 -> bb178__0_2476 [label=""];
    bb175__0_2476 -> bb176__0_2476 [label=""];
    bb176__0_2476 -> bb177__0_2476 [label="return"];
    bb176__0_2476 -> bb189__0_2476 [label="unwind"];
    bb177__0_2476 -> bb178__0_2476 [label=""];
    bb178__0_2476 -> bb179__0_2476 [label="return"];
    bb178__0_2476 -> bb191__0_2476 [label="unwind"];
    bb179__0_2476 -> bb186__0_2476 [label=""];
    bb180__0_2476 -> bb181__0_2476 [label=""];
    bb181__0_2476 -> bb182__0_2476 [label=""];
    bb182__0_2476 -> bb184__0_2476 [label=""];
    bb183__0_2476 -> bb184__0_2476 [label=""];
    bb184__0_2476 -> bb185__0_2476 [label="return"];
    bb184__0_2476 -> bb191__0_2476 [label="unwind"];
    bb185__0_2476 -> bb186__0_2476 [label=""];
    bb186__0_2476 -> bb187__0_2476 [label=""];
    bb188__0_2476 -> bb189__0_2476 [label="return"];
    bb189__0_2476 -> bb191__0_2476 [label="return"];
    bb190__0_2476 -> bb191__0_2476 [label="return"];
    bb192__0_2476 -> bb189__0_2476 [label=""];
    bb193__0_2476 -> bb191__0_2476 [label=""];
    bb194__0_2476 -> bb191__0_2476 [label=""];
}
