digraph Mir_0_1125 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn admin::handle_initialize_if_rebalance_config(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::admin::InitializeIfRebalanceConfig&lt;ReErased&gt;&gt;, _2: state::if_rebalance_config::IfRebalanceConfigParams) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _3: anchor_lang::prelude::Clock;<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _5: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _6: isize;<br align="left"/>let _7: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _8: !;<br align="left"/>let mut _9: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _10: anchor_lang::prelude::Clock;<br align="left"/>let _11: i64;<br align="left"/>let _12: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _13: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _14: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::if_rebalance_config::IfRebalanceConfig&gt;;<br align="left"/>let mut _15: std::cell::RefMut&lt;ReErased, state::if_rebalance_config::IfRebalanceConfig&gt;;<br align="left"/>let mut _16: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::RefMut&lt;ReErased, state::if_rebalance_config::IfRebalanceConfig&gt;&gt;;<br align="left"/>let mut _17: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::if_rebalance_config::IfRebalanceConfig&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _18: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::if_rebalance_config::IfRebalanceConfig&gt;;<br align="left"/>let mut _19: isize;<br align="left"/>let _20: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _21: !;<br align="left"/>let mut _22: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _23: std::cell::RefMut&lt;ReErased, state::if_rebalance_config::IfRebalanceConfig&gt;;<br align="left"/>let mut _24: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _25: &amp;ReErased mut state::if_rebalance_config::IfRebalanceConfig;<br align="left"/>let mut _26: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::if_rebalance_config::IfRebalanceConfig&gt;;<br align="left"/>let mut _27: u64;<br align="left"/>let mut _28: &amp;ReErased mut state::if_rebalance_config::IfRebalanceConfig;<br align="left"/>let mut _29: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::if_rebalance_config::IfRebalanceConfig&gt;;<br align="left"/>let mut _30: &amp;ReErased mut state::if_rebalance_config::IfRebalanceConfig;<br align="left"/>let mut _31: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::if_rebalance_config::IfRebalanceConfig&gt;;<br align="left"/>let mut _32: u64;<br align="left"/>let mut _33: &amp;ReErased mut state::if_rebalance_config::IfRebalanceConfig;<br align="left"/>let mut _34: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::if_rebalance_config::IfRebalanceConfig&gt;;<br align="left"/>let mut _35: i64;<br align="left"/>let mut _36: &amp;ReErased mut state::if_rebalance_config::IfRebalanceConfig;<br align="left"/>let mut _37: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::if_rebalance_config::IfRebalanceConfig&gt;;<br align="left"/>let mut _38: u16;<br align="left"/>let mut _39: &amp;ReErased mut state::if_rebalance_config::IfRebalanceConfig;<br align="left"/>let mut _40: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::if_rebalance_config::IfRebalanceConfig&gt;;<br align="left"/>let mut _41: u16;<br align="left"/>let mut _42: &amp;ReErased mut state::if_rebalance_config::IfRebalanceConfig;<br align="left"/>let mut _43: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::if_rebalance_config::IfRebalanceConfig&gt;;<br align="left"/>let mut _44: u16;<br align="left"/>let mut _45: &amp;ReErased mut state::if_rebalance_config::IfRebalanceConfig;<br align="left"/>let mut _46: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::if_rebalance_config::IfRebalanceConfig&gt;;<br align="left"/>let mut _47: u8;<br align="left"/>let mut _48: &amp;ReErased mut state::if_rebalance_config::IfRebalanceConfig;<br align="left"/>let mut _49: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::if_rebalance_config::IfRebalanceConfig&gt;;<br align="left"/>let mut _50: &amp;ReErased mut state::if_rebalance_config::IfRebalanceConfig;<br align="left"/>let mut _51: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::if_rebalance_config::IfRebalanceConfig&gt;;<br align="left"/>let _52: ();<br align="left"/>let mut _53: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _54: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _55: &amp;ReErased state::if_rebalance_config::IfRebalanceConfig;<br align="left"/>let _56: &amp;ReErased state::if_rebalance_config::IfRebalanceConfig;<br align="left"/>let mut _57: &amp;ReErased std::cell::RefMut&lt;ReErased, state::if_rebalance_config::IfRebalanceConfig&gt;;<br align="left"/>let mut _58: isize;<br align="left"/>let _59: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _60: !;<br align="left"/>let mut _61: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _62: ();<br align="left"/>let mut _63: ();<br align="left"/>let mut _64: &amp;ReErased mut instructions::admin::InitializeIfRebalanceConfig&lt;ReErased&gt;;<br align="left"/>let mut _65: &amp;ReErased mut instructions::admin::InitializeIfRebalanceConfig&lt;ReErased&gt;;<br align="left"/>let mut _66: isize;<br align="left"/>let mut _67: isize;<br align="left"/>let mut _68: isize;<br align="left"/>let mut _69: isize;<br align="left"/>let mut _70: isize;<br align="left"/>let mut _71: isize;<br align="left"/>let mut _72: isize;<br align="left"/>let mut _73: isize;<br align="left"/>let mut _74: isize;<br align="left"/>let mut _75: isize;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug params =&gt; _2;<br align="left"/>debug clock =&gt; _3;<br align="left"/>debug residual =&gt; _7;<br align="left"/>debug val =&gt; _10;<br align="left"/>debug now =&gt; _11;<br align="left"/>debug pubkey =&gt; _12;<br align="left"/>debug config =&gt; _15;<br align="left"/>debug residual =&gt; _20;<br align="left"/>debug val =&gt; _23;<br align="left"/>debug residual =&gt; _59;<br align="left"/>debug val =&gt; _62;<br align="left"/>>;
    bb0__0_1125 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/></td></tr><tr><td align="left">_5 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb1__0_1125 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb2__0_1125 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_6 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _6)</td></tr></table>>];
    bb3__0_1125 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>_10 = move ((_4 as Continue).0: anchor_lang::prelude::Clock)<br/>_3 = move _10<br/>StorageDead(_10)<br/>_66 = discriminant(_4)<br/>StorageDead(_4)<br/>StorageLive(_11)<br/>_11 = (_3.4: i64)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_64 = deref_copy (_1.1: &amp;mut instructions::admin::InitializeIfRebalanceConfig&lt;'_&gt;)<br/>_14 = &amp;((*_64).1: anchor_lang::prelude::AccountLoader&lt;'_, state::if_rebalance_config::IfRebalanceConfig&gt;)<br/></td></tr><tr><td align="left">_13 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, IfRebalanceConfig&gt; as anchor_lang::ToAccountInfo&lt;'_&gt;&gt;::to_account_info(move _14)</td></tr></table>>];
    bb4__0_1125 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_1125 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_7)<br/>_7 = move ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_9)<br/>_9 = move _7<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _9)</td></tr></table>>];
    bb6__0_1125 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_7)<br/>_72 = discriminant(_4)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_1125 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>_12 = (_13.0: &amp;anchor_lang::prelude::Pubkey)<br/></td></tr><tr><td align="left">drop(_13)</td></tr></table>>];
    bb8__0_1125 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_65 = deref_copy (_1.1: &amp;mut instructions::admin::InitializeIfRebalanceConfig&lt;'_&gt;)<br/>_18 = &amp;((*_65).1: anchor_lang::prelude::AccountLoader&lt;'_, state::if_rebalance_config::IfRebalanceConfig&gt;)<br/></td></tr><tr><td align="left">_17 = anchor_lang::prelude::AccountLoader::&lt;'_, IfRebalanceConfig&gt;::load_init(move _18)</td></tr></table>>];
    bb9__0_1125 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/></td></tr><tr><td align="left">_16 = &lt;std::result::Result&lt;RefMut&lt;'_, IfRebalanceConfig&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _17)</td></tr></table>>];
    bb10__0_1125 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>_19 = discriminant(_16)<br/></td></tr><tr><td align="left">switchInt(move _19)</td></tr></table>>];
    bb11__0_1125 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_23)<br/>_23 = move ((_16 as Continue).0: std::cell::RefMut&lt;'_, state::if_rebalance_config::IfRebalanceConfig&gt;)<br/>_15 = move _23<br/>StorageDead(_23)<br/>_68 = discriminant(_16)<br/>StorageDead(_16)<br/>StorageLive(_24)<br/>_24 = (*_12)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_26 = &amp;mut _15<br/></td></tr><tr><td align="left">_25 = &lt;RefMut&lt;'_, IfRebalanceConfig&gt; as DerefMut&gt;::deref_mut(move _26)</td></tr></table>>];
    bb12__0_1125 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_20)<br/>_20 = move ((_16 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_22)<br/>_22 = move _20<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _22)</td></tr></table>>];
    bb13__0_1125 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_20)<br/>_70 = discriminant(_16)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_1125 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>((*_25).0: anchor_lang::prelude::Pubkey) = move _24<br/>StorageDead(_24)<br/>StorageDead(_25)<br/>StorageLive(_27)<br/>_27 = (_2.0: u64)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_29 = &amp;mut _15<br/></td></tr><tr><td align="left">_28 = &lt;RefMut&lt;'_, IfRebalanceConfig&gt; as DerefMut&gt;::deref_mut(move _29)</td></tr></table>>];
    bb15__0_1125 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>((*_28).1: u64) = move _27<br/>StorageDead(_27)<br/>StorageDead(_28)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>_31 = &amp;mut _15<br/></td></tr><tr><td align="left">_30 = &lt;RefMut&lt;'_, IfRebalanceConfig&gt; as DerefMut&gt;::deref_mut(move _31)</td></tr></table>>];
    bb16__0_1125 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>((*_30).2: u64) = const 0_u64<br/>StorageDead(_30)<br/>StorageLive(_32)<br/>_32 = (_2.1: u64)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>_34 = &amp;mut _15<br/></td></tr><tr><td align="left">_33 = &lt;RefMut&lt;'_, IfRebalanceConfig&gt; as DerefMut&gt;::deref_mut(move _34)</td></tr></table>>];
    bb17__0_1125 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>((*_33).8: u64) = move _32<br/>StorageDead(_32)<br/>StorageDead(_33)<br/>StorageLive(_35)<br/>_35 = (_2.2: i64)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>_37 = &amp;mut _15<br/></td></tr><tr><td align="left">_36 = &lt;RefMut&lt;'_, IfRebalanceConfig&gt; as DerefMut&gt;::deref_mut(move _37)</td></tr></table>>];
    bb18__0_1125 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>((*_36).9: i64) = move _35<br/>StorageDead(_35)<br/>StorageDead(_36)<br/>StorageLive(_38)<br/>_38 = (_2.3: u16)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_40 = &amp;mut _15<br/></td></tr><tr><td align="left">_39 = &lt;RefMut&lt;'_, IfRebalanceConfig&gt; as DerefMut&gt;::deref_mut(move _40)</td></tr></table>>];
    bb19__0_1125 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>((*_39).10: u16) = move _38<br/>StorageDead(_38)<br/>StorageDead(_39)<br/>StorageLive(_41)<br/>_41 = (_2.4: u16)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>_43 = &amp;mut _15<br/></td></tr><tr><td align="left">_42 = &lt;RefMut&lt;'_, IfRebalanceConfig&gt; as DerefMut&gt;::deref_mut(move _43)</td></tr></table>>];
    bb20__0_1125 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>((*_42).11: u16) = move _41<br/>StorageDead(_41)<br/>StorageDead(_42)<br/>StorageLive(_44)<br/>_44 = (_2.5: u16)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>_46 = &amp;mut _15<br/></td></tr><tr><td align="left">_45 = &lt;RefMut&lt;'_, IfRebalanceConfig&gt; as DerefMut&gt;::deref_mut(move _46)</td></tr></table>>];
    bb21__0_1125 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>((*_45).12: u16) = move _44<br/>StorageDead(_44)<br/>StorageDead(_45)<br/>StorageLive(_47)<br/>_47 = (_2.6: u8)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>_49 = &amp;mut _15<br/></td></tr><tr><td align="left">_48 = &lt;RefMut&lt;'_, IfRebalanceConfig&gt; as DerefMut&gt;::deref_mut(move _49)</td></tr></table>>];
    bb22__0_1125 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>((*_48).13: u8) = move _47<br/>StorageDead(_47)<br/>StorageDead(_48)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>_51 = &amp;mut _15<br/></td></tr><tr><td align="left">_50 = &lt;RefMut&lt;'_, IfRebalanceConfig&gt; as DerefMut&gt;::deref_mut(move _51)</td></tr></table>>];
    bb23__0_1125 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>((*_50).14: u8) = const 0_u8<br/>StorageDead(_50)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>_57 = &amp;_15<br/></td></tr><tr><td align="left">_56 = &lt;RefMut&lt;'_, IfRebalanceConfig&gt; as Deref&gt;::deref(move _57)</td></tr></table>>];
    bb24__0_1125 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">_55 = &amp;(*_56)<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">_54 = IfRebalanceConfig::validate(move _55)</td></tr></table>>];
    bb25__0_1125 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/></td></tr><tr><td align="left">_53 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _54)</td></tr></table>>];
    bb26__0_1125 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>_58 = discriminant(_53)<br/></td></tr><tr><td align="left">switchInt(move _58)</td></tr></table>>];
    bb27__0_1125 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_62)<br/>_62 = ((_53 as Continue).0: ())<br/>_52 = _62<br/>StorageDead(_62)<br/>StorageDead(_56)<br/>StorageDead(_53)<br/>StorageDead(_52)<br/>StorageLive(_63)<br/>_63 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _63)<br/>StorageDead(_63)<br/></td></tr><tr><td align="left">drop(_15)</td></tr></table>>];
    bb28__0_1125 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_59)<br/>_59 = ((_53 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_61)<br/>_61 = _59<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _61)</td></tr></table>>];
    bb29__0_1125 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_59)<br/>StorageDead(_56)<br/>StorageDead(_53)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">drop(_15)</td></tr></table>>];
    bb30__0_1125 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_1125 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_1125 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_1125 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left">return</td></tr></table>>];
    bb34__0_1125 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">34 (cleanup)</td></tr><tr><td align="left">drop(_15)</td></tr></table>>];
    bb35__0_1125 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">35 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb36__0_1125 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">36 (cleanup)</td></tr><tr><td align="left" balign="left">_74 = discriminant(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_1125 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">37 (cleanup)</td></tr><tr><td align="left" balign="left">_75 = discriminant(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_1125 -> bb1__0_1125 [label="return"];
    bb1__0_1125 -> bb2__0_1125 [label="return"];
    bb1__0_1125 -> bb35__0_1125 [label="unwind"];
    bb2__0_1125 -> bb3__0_1125 [label="0"];
    bb2__0_1125 -> bb5__0_1125 [label="1"];
    bb2__0_1125 -> bb4__0_1125 [label="otherwise"];
    bb3__0_1125 -> bb7__0_1125 [label="return"];
    bb5__0_1125 -> bb6__0_1125 [label="return"];
    bb5__0_1125 -> bb37__0_1125 [label="unwind"];
    bb6__0_1125 -> bb32__0_1125 [label=""];
    bb7__0_1125 -> bb8__0_1125 [label="return"];
    bb7__0_1125 -> bb35__0_1125 [label="unwind"];
    bb8__0_1125 -> bb9__0_1125 [label="return"];
    bb9__0_1125 -> bb10__0_1125 [label="return"];
    bb9__0_1125 -> bb35__0_1125 [label="unwind"];
    bb10__0_1125 -> bb11__0_1125 [label="0"];
    bb10__0_1125 -> bb12__0_1125 [label="1"];
    bb10__0_1125 -> bb4__0_1125 [label="otherwise"];
    bb11__0_1125 -> bb14__0_1125 [label="return"];
    bb11__0_1125 -> bb34__0_1125 [label="unwind"];
    bb12__0_1125 -> bb13__0_1125 [label="return"];
    bb12__0_1125 -> bb36__0_1125 [label="unwind"];
    bb13__0_1125 -> bb31__0_1125 [label=""];
    bb14__0_1125 -> bb15__0_1125 [label="return"];
    bb14__0_1125 -> bb34__0_1125 [label="unwind"];
    bb15__0_1125 -> bb16__0_1125 [label="return"];
    bb15__0_1125 -> bb34__0_1125 [label="unwind"];
    bb16__0_1125 -> bb17__0_1125 [label="return"];
    bb16__0_1125 -> bb34__0_1125 [label="unwind"];
    bb17__0_1125 -> bb18__0_1125 [label="return"];
    bb17__0_1125 -> bb34__0_1125 [label="unwind"];
    bb18__0_1125 -> bb19__0_1125 [label="return"];
    bb18__0_1125 -> bb34__0_1125 [label="unwind"];
    bb19__0_1125 -> bb20__0_1125 [label="return"];
    bb19__0_1125 -> bb34__0_1125 [label="unwind"];
    bb20__0_1125 -> bb21__0_1125 [label="return"];
    bb20__0_1125 -> bb34__0_1125 [label="unwind"];
    bb21__0_1125 -> bb22__0_1125 [label="return"];
    bb21__0_1125 -> bb34__0_1125 [label="unwind"];
    bb22__0_1125 -> bb23__0_1125 [label="return"];
    bb22__0_1125 -> bb34__0_1125 [label="unwind"];
    bb23__0_1125 -> bb24__0_1125 [label="return"];
    bb23__0_1125 -> bb34__0_1125 [label="unwind"];
    bb24__0_1125 -> bb25__0_1125 [label="return"];
    bb24__0_1125 -> bb34__0_1125 [label="unwind"];
    bb25__0_1125 -> bb26__0_1125 [label="return"];
    bb25__0_1125 -> bb34__0_1125 [label="unwind"];
    bb26__0_1125 -> bb27__0_1125 [label="0"];
    bb26__0_1125 -> bb28__0_1125 [label="1"];
    bb26__0_1125 -> bb4__0_1125 [label="otherwise"];
    bb27__0_1125 -> bb30__0_1125 [label="return"];
    bb27__0_1125 -> bb35__0_1125 [label="unwind"];
    bb28__0_1125 -> bb29__0_1125 [label="return"];
    bb28__0_1125 -> bb34__0_1125 [label="unwind"];
    bb29__0_1125 -> bb31__0_1125 [label="return"];
    bb29__0_1125 -> bb35__0_1125 [label="unwind"];
    bb30__0_1125 -> bb33__0_1125 [label=""];
    bb31__0_1125 -> bb32__0_1125 [label=""];
    bb32__0_1125 -> bb33__0_1125 [label=""];
    bb34__0_1125 -> bb35__0_1125 [label="return"];
    bb36__0_1125 -> bb35__0_1125 [label=""];
    bb37__0_1125 -> bb35__0_1125 [label=""];
}
