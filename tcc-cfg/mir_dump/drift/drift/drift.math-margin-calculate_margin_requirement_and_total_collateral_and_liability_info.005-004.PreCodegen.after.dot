digraph Mir_0_2463 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn math::margin::calculate_margin_requirement_and_total_collateral_and_liability_info(_1: &amp;ReErased state::user::User, _2: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;, _3: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;, _4: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;, _5: state::margin_calculation::MarginContext) -&gt; std::result::Result&lt;state::margin_calculation::MarginCalculation, error::ErrorCode&gt;<br align="left"/>let mut _6: state::margin_calculation::MarginCalculation;<br align="left"/>let mut _7: state::margin_calculation::MarginContext;<br align="left"/>let mut _8: u32;<br align="left"/>let mut _9: bool;<br align="left"/>let mut _10: &amp;ReErased math::margin::MarginRequirementType;<br align="left"/>let mut _11: &amp;ReErased math::margin::MarginRequirementType;<br align="left"/>let _12: math::margin::MarginRequirementType;<br align="left"/>let _13: ();<br align="left"/>let mut _14: isize;<br align="left"/>let _15: u32;<br align="left"/>let mut _16: u32;<br align="left"/>let mut _17: u32;<br align="left"/>let mut _18: u32;<br align="left"/>let _19: u8;<br align="left"/>let _20: bool;<br align="left"/>let mut _21: &amp;ReErased state::user::User;<br align="left"/>let mut _22: math::margin::MarginRequirementType;<br align="left"/>let _23: ();<br align="left"/>let mut _24: std::slice::Iter&lt;ReErased, state::user::SpotPosition&gt;;<br align="left"/>let mut _25: std::slice::Iter&lt;ReErased, state::user::SpotPosition&gt;;<br align="left"/>let mut _26: &amp;ReErased [state::user::SpotPosition];<br align="left"/>let mut _27: &amp;ReErased [state::user::SpotPosition; 8_usize];<br align="left"/>let mut _28: std::slice::Iter&lt;ReErased, state::user::SpotPosition&gt;;<br align="left"/>let mut _29: ();<br align="left"/>let _30: ();<br align="left"/>let mut _31: std::option::Option&lt;&amp;ReErased state::user::SpotPosition&gt;;<br align="left"/>let mut _32: &amp;ReErased mut std::slice::Iter&lt;ReErased, state::user::SpotPosition&gt;;<br align="left"/>let mut _33: &amp;ReErased mut std::slice::Iter&lt;ReErased, state::user::SpotPosition&gt;;<br align="left"/>let mut _34: isize;<br align="left"/>let mut _35: !;<br align="left"/>let _36: &amp;ReErased state::user::SpotPosition;<br align="left"/>let _37: ();<br align="left"/>let mut _38: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _39: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _40: &amp;ReErased state::user::SpotPosition;<br align="left"/>let mut _41: isize;<br align="left"/>let _42: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _43: !;<br align="left"/>let mut _44: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _45: ();<br align="left"/>let _46: ();<br align="left"/>let mut _47: bool;<br align="left"/>let mut _48: &amp;ReErased state::user::SpotPosition;<br align="left"/>let mut _49: !;<br align="left"/>let _50: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _51: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _52: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _53: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _54: &amp;ReErased u16;<br align="left"/>let _55: &amp;ReErased u16;<br align="left"/>let mut _56: isize;<br align="left"/>let _57: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _58: !;<br align="left"/>let mut _59: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _60: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _61: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _62: math::oracle::OracleValidity;<br align="left"/>let mut _63: (&amp;ReErased state::oracle::OraclePriceData, math::oracle::OracleValidity);<br align="left"/>let mut _64: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (&amp;ReErased state::oracle::OraclePriceData, math::oracle::OracleValidity)&gt;;<br align="left"/>let mut _65: std::result::Result&lt;(&amp;ReErased state::oracle::OraclePriceData, math::oracle::OracleValidity), error::ErrorCode&gt;;<br align="left"/>let mut _66: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _67: state::user::MarketType;<br align="left"/>let mut _68: u16;<br align="left"/>let mut _69: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _70: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _71: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _72: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _73: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _74: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _75: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _76: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _77: i64;<br align="left"/>let mut _78: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _79: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _80: u64;<br align="left"/>let mut _81: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _82: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _83: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _84: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _85: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _86: isize;<br align="left"/>let _87: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _88: !;<br align="left"/>let mut _89: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _90: u64;<br align="left"/>let mut _91: isize;<br align="left"/>let _92: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _93: !;<br align="left"/>let mut _94: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _95: (&amp;ReErased state::oracle::OraclePriceData, math::oracle::OracleValidity);<br align="left"/>let mut _96: bool;<br align="left"/>let _97: ();<br align="left"/>let mut _98: bool;<br align="left"/>let mut _99: u8;<br align="left"/>let mut _100: bool;<br align="left"/>let mut _101: u16;<br align="left"/>let mut _102: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _103: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _104: bool;<br align="left"/>let mut _105: &amp;ReErased state::user::SpotPosition;<br align="left"/>let _106: ();<br align="left"/>let mut _107: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _108: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _109: bool;<br align="left"/>let mut _110: u8;<br align="left"/>let mut _111: u8;<br align="left"/>let mut _112: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _113: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _114: ();<br align="left"/>let _115: error::ErrorCode;<br align="left"/>let _116: ();<br align="left"/>let mut _117: &amp;ReErased str;<br align="left"/>let _118: &amp;ReErased str;<br align="left"/>let mut _119: &amp;ReErased std::string::String;<br align="left"/>let _120: &amp;ReErased std::string::String;<br align="left"/>let _121: std::string::String;<br align="left"/>let _122: std::string::String;<br align="left"/>let mut _123: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _124: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _125: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _126: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _127: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _128: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _129: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _130: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _131: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _132: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _133: &amp;ReErased error::ErrorCode;<br align="left"/>let _134: &amp;ReErased error::ErrorCode;<br align="left"/>let _135: ();<br align="left"/>let mut _136: &amp;ReErased str;<br align="left"/>let _137: &amp;ReErased str;<br align="left"/>let mut _138: &amp;ReErased std::string::String;<br align="left"/>let _139: &amp;ReErased std::string::String;<br align="left"/>let _140: std::string::String;<br align="left"/>let _141: std::string::String;<br align="left"/>let mut _142: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _143: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _144: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _145: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _146: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _147: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _148: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _149: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _150: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _151: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _152: &amp;ReErased u8;<br align="left"/>let _153: &amp;ReErased u8;<br align="left"/>let mut _154: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _155: &amp;ReErased u8;<br align="left"/>let _156: &amp;ReErased u8;<br align="left"/>let _157: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _158: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _159: error::ErrorCode;<br align="left"/>let mut _160: isize;<br align="left"/>let _161: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _162: !;<br align="left"/>let mut _163: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _164: ();<br align="left"/>let _165: bool;<br align="left"/>let mut _166: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _167: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _168: math::oracle::OracleValidity;<br align="left"/>let mut _169: std::option::Option&lt;math::oracle::DriftAction&gt;;<br align="left"/>let mut _170: math::oracle::DriftAction;<br align="left"/>let mut _171: isize;<br align="left"/>let _172: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _173: !;<br align="left"/>let mut _174: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _175: bool;<br align="left"/>let _176: state::oracle::StrictOraclePrice;<br align="left"/>let mut _177: i64;<br align="left"/>let mut _178: i64;<br align="left"/>let mut _179: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _180: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _181: bool;<br align="left"/>let _182: ();<br align="left"/>let mut _183: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _184: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _185: &amp;ReErased state::oracle::StrictOraclePrice;<br align="left"/>let mut _186: isize;<br align="left"/>let _187: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _188: !;<br align="left"/>let mut _189: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _190: ();<br align="left"/>let mut _191: bool;<br align="left"/>let mut _192: u16;<br align="left"/>let mut _193: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _194: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _195: i128;<br align="left"/>let mut _196: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _197: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _198: &amp;ReErased state::user::SpotPosition;<br align="left"/>let mut _199: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _200: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _201: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _202: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _203: isize;<br align="left"/>let _204: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _205: !;<br align="left"/>let mut _206: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _207: i128;<br align="left"/>let _208: ();<br align="left"/>let mut _209: bool;<br align="left"/>let mut _210: i128;<br align="left"/>let _211: ();<br align="left"/>let mut _212: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _213: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _214: bool;<br align="left"/>let mut _215: u64;<br align="left"/>let mut _216: ();<br align="left"/>let _217: error::ErrorCode;<br align="left"/>let _218: ();<br align="left"/>let mut _219: &amp;ReErased str;<br align="left"/>let _220: &amp;ReErased str;<br align="left"/>let mut _221: &amp;ReErased std::string::String;<br align="left"/>let _222: &amp;ReErased std::string::String;<br align="left"/>let _223: std::string::String;<br align="left"/>let _224: std::string::String;<br align="left"/>let mut _225: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _226: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _227: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _228: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _229: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _230: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _231: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _232: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _233: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _234: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _235: &amp;ReErased error::ErrorCode;<br align="left"/>let _236: &amp;ReErased error::ErrorCode;<br align="left"/>let _237: ();<br align="left"/>let mut _238: &amp;ReErased str;<br align="left"/>let _239: &amp;ReErased str;<br align="left"/>let mut _240: &amp;ReErased std::string::String;<br align="left"/>let _241: &amp;ReErased std::string::String;<br align="left"/>let _242: std::string::String;<br align="left"/>let _243: std::string::String;<br align="left"/>let mut _244: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _245: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _246: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _247: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _248: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _249: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _250: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _251: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _252: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _253: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _254: &amp;ReErased u64;<br align="left"/>let _255: &amp;ReErased u64;<br align="left"/>let mut _256: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _257: &amp;ReErased i128;<br align="left"/>let _258: &amp;ReErased i128;<br align="left"/>let mut _259: error::ErrorCode;<br align="left"/>let mut _260: isize;<br align="left"/>let _261: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _262: !;<br align="left"/>let mut _263: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _264: ();<br align="left"/>let _265: ();<br align="left"/>let mut _266: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _267: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _268: &amp;ReErased mut state::margin_calculation::MarginCalculation;<br align="left"/>let mut _269: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _270: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _271: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _272: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _273: i128;<br align="left"/>let mut _274: &amp;ReErased state::oracle::StrictOraclePrice;<br align="left"/>let _275: &amp;ReErased state::oracle::StrictOraclePrice;<br align="left"/>let mut _276: isize;<br align="left"/>let _277: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _278: !;<br align="left"/>let mut _279: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _280: ();<br align="left"/>let mut _281: i128;<br align="left"/>let mut _282: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _283: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _284: i128;<br align="left"/>let mut _285: u32;<br align="left"/>let mut _286: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _287: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _288: &amp;ReErased state::oracle::StrictOraclePrice;<br align="left"/>let _289: &amp;ReErased state::oracle::StrictOraclePrice;<br align="left"/>let mut _290: isize;<br align="left"/>let _291: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _292: !;<br align="left"/>let mut _293: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _294: i128;<br align="left"/>let mut _295: isize;<br align="left"/>let _296: ();<br align="left"/>let mut _297: bool;<br align="left"/>let mut _298: bool;<br align="left"/>let _299: ();<br align="left"/>let mut _300: &amp;ReErased str;<br align="left"/>let _301: &amp;ReErased str;<br align="left"/>let mut _302: &amp;ReErased std::string::String;<br align="left"/>let _303: &amp;ReErased std::string::String;<br align="left"/>let _304: std::string::String;<br align="left"/>let _305: std::string::String;<br align="left"/>let mut _306: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _307: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _308: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _309: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _310: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _311: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _312: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _313: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _314: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _315: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _316: &amp;ReErased u16;<br align="left"/>let _317: &amp;ReErased u16;<br align="left"/>let _318: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _319: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _320: ();<br align="left"/>let mut _321: bool;<br align="left"/>let _322: ();<br align="left"/>let mut _323: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _324: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _325: &amp;ReErased mut state::margin_calculation::MarginCalculation;<br align="left"/>let mut _326: i128;<br align="left"/>let mut _327: isize;<br align="left"/>let _328: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _329: !;<br align="left"/>let mut _330: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _331: ();<br align="left"/>let _332: ();<br align="left"/>let mut _333: &amp;ReErased mut state::margin_calculation::MarginCalculation;<br align="left"/>let mut _334: bool;<br align="left"/>let _335: u128;<br align="left"/>let mut _336: i128;<br align="left"/>let _337: ();<br align="left"/>let mut _338: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _339: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _340: bool;<br align="left"/>let mut _341: u128;<br align="left"/>let mut _342: ();<br align="left"/>let _343: error::ErrorCode;<br align="left"/>let _344: ();<br align="left"/>let mut _345: &amp;ReErased str;<br align="left"/>let _346: &amp;ReErased str;<br align="left"/>let mut _347: &amp;ReErased std::string::String;<br align="left"/>let _348: &amp;ReErased std::string::String;<br align="left"/>let _349: std::string::String;<br align="left"/>let _350: std::string::String;<br align="left"/>let mut _351: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _352: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _353: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _354: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _355: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _356: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _357: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _358: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _359: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _360: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _361: &amp;ReErased error::ErrorCode;<br align="left"/>let _362: &amp;ReErased error::ErrorCode;<br align="left"/>let _363: ();<br align="left"/>let mut _364: &amp;ReErased str;<br align="left"/>let _365: &amp;ReErased str;<br align="left"/>let mut _366: &amp;ReErased std::string::String;<br align="left"/>let _367: &amp;ReErased std::string::String;<br align="left"/>let _368: std::string::String;<br align="left"/>let _369: std::string::String;<br align="left"/>let mut _370: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _371: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _372: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _373: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _374: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _375: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _376: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _377: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _378: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _379: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _380: &amp;ReErased i128;<br align="left"/>let _381: &amp;ReErased i128;<br align="left"/>let mut _382: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _383: &amp;ReErased u16;<br align="left"/>let _384: &amp;ReErased u16;<br align="left"/>let _385: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _386: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _387: error::ErrorCode;<br align="left"/>let mut _388: isize;<br align="left"/>let _389: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _390: !;<br align="left"/>let mut _391: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _392: ();<br align="left"/>let _393: ();<br align="left"/>let mut _394: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _395: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _396: &amp;ReErased mut state::margin_calculation::MarginCalculation;<br align="left"/>let mut _397: u128;<br align="left"/>let mut _398: u128;<br align="left"/>let mut _399: state::margin_calculation::MarketIdentifier;<br align="left"/>let mut _400: isize;<br align="left"/>let _401: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _402: !;<br align="left"/>let mut _403: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _404: ();<br align="left"/>let _405: ();<br align="left"/>let mut _406: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _407: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _408: &amp;ReErased mut state::margin_calculation::MarginCalculation;<br align="left"/>let mut _409: isize;<br align="left"/>let _410: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _411: !;<br align="left"/>let mut _412: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _413: ();<br align="left"/>let _414: ();<br align="left"/>let mut _415: &amp;ReErased mut state::margin_calculation::MarginCalculation;<br align="left"/>let mut _416: bool;<br align="left"/>let _417: i128;<br align="left"/>let mut _418: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _419: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _420: &amp;ReErased state::user::SpotPosition;<br align="left"/>let mut _421: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _422: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _423: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _424: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _425: isize;<br align="left"/>let _426: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _427: !;<br align="left"/>let mut _428: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _429: i128;<br align="left"/>let _430: ();<br align="left"/>let mut _431: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _432: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _433: &amp;ReErased mut state::margin_calculation::MarginCalculation;<br align="left"/>let mut _434: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _435: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _436: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _437: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _438: i128;<br align="left"/>let mut _439: &amp;ReErased state::oracle::StrictOraclePrice;<br align="left"/>let _440: &amp;ReErased state::oracle::StrictOraclePrice;<br align="left"/>let mut _441: isize;<br align="left"/>let _442: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _443: !;<br align="left"/>let mut _444: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _445: ();<br align="left"/>let _446: i128;<br align="left"/>let mut _447: i128;<br align="left"/>let _448: i128;<br align="left"/>let mut _449: i128;<br align="left"/>let mut _450: state::user::OrderFillSimulation;<br align="left"/>let mut _451: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::user::OrderFillSimulation&gt;;<br align="left"/>let mut _452: std::result::Result&lt;state::user::OrderFillSimulation, error::ErrorCode&gt;;<br align="left"/>let mut _453: state::user::OrderFillSimulation;<br align="left"/>let mut _454: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::user::OrderFillSimulation&gt;;<br align="left"/>let mut _455: std::result::Result&lt;state::user::OrderFillSimulation, error::ErrorCode&gt;;<br align="left"/>let mut _456: &amp;ReErased state::user::SpotPosition;<br align="left"/>let mut _457: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _458: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _459: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _460: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _461: &amp;ReErased state::oracle::StrictOraclePrice;<br align="left"/>let _462: &amp;ReErased state::oracle::StrictOraclePrice;<br align="left"/>let mut _463: std::option::Option&lt;i128&gt;;<br align="left"/>let mut _464: i128;<br align="left"/>let mut _465: math::margin::MarginRequirementType;<br align="left"/>let mut _466: isize;<br align="left"/>let _467: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _468: !;<br align="left"/>let mut _469: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _470: state::user::OrderFillSimulation;<br align="left"/>let mut _471: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _472: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _473: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _474: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _475: i64;<br align="left"/>let mut _476: u32;<br align="left"/>let mut _477: isize;<br align="left"/>let _478: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _479: !;<br align="left"/>let mut _480: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _481: state::user::OrderFillSimulation;<br align="left"/>let _482: ();<br align="left"/>let mut _483: bool;<br align="left"/>let mut _484: i128;<br align="left"/>let _485: ();<br align="left"/>let mut _486: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _487: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _488: bool;<br align="left"/>let mut _489: u64;<br align="left"/>let mut _490: ();<br align="left"/>let _491: error::ErrorCode;<br align="left"/>let _492: ();<br align="left"/>let mut _493: &amp;ReErased str;<br align="left"/>let _494: &amp;ReErased str;<br align="left"/>let mut _495: &amp;ReErased std::string::String;<br align="left"/>let _496: &amp;ReErased std::string::String;<br align="left"/>let _497: std::string::String;<br align="left"/>let _498: std::string::String;<br align="left"/>let mut _499: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _500: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _501: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _502: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _503: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _504: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _505: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _506: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _507: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _508: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _509: &amp;ReErased error::ErrorCode;<br align="left"/>let _510: &amp;ReErased error::ErrorCode;<br align="left"/>let _511: ();<br align="left"/>let mut _512: &amp;ReErased str;<br align="left"/>let _513: &amp;ReErased str;<br align="left"/>let mut _514: &amp;ReErased std::string::String;<br align="left"/>let _515: &amp;ReErased std::string::String;<br align="left"/>let _516: std::string::String;<br align="left"/>let _517: std::string::String;<br align="left"/>let mut _518: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _519: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _520: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _521: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _522: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _523: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _524: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _525: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _526: [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let mut _527: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _528: &amp;ReErased u64;<br align="left"/>let _529: &amp;ReErased u64;<br align="left"/>let mut _530: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _531: &amp;ReErased i128;<br align="left"/>let _532: &amp;ReErased i128;<br align="left"/>let mut _533: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _534: &amp;ReErased u16;<br align="left"/>let _535: &amp;ReErased u16;<br align="left"/>let _536: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _537: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _538: error::ErrorCode;<br align="left"/>let mut _539: isize;<br align="left"/>let _540: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _541: !;<br align="left"/>let mut _542: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _543: ();<br align="left"/>let _544: ();<br align="left"/>let mut _545: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _546: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _547: &amp;ReErased mut state::margin_calculation::MarginCalculation;<br align="left"/>let mut _548: u128;<br align="left"/>let mut _549: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _550: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _551: &amp;ReErased state::user::SpotPosition;<br align="left"/>let mut _552: isize;<br align="left"/>let _553: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _554: !;<br align="left"/>let mut _555: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _556: u128;<br align="left"/>let mut _557: state::margin_calculation::MarketIdentifier;<br align="left"/>let mut _558: u16;<br align="left"/>let mut _559: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _560: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _561: isize;<br align="left"/>let _562: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _563: !;<br align="left"/>let mut _564: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _565: ();<br align="left"/>let _566: ();<br align="left"/>let mut _567: std::cmp::Ordering;<br align="left"/>let mut _568: &amp;ReErased i128;<br align="left"/>let mut _569: &amp;ReErased i128;<br align="left"/>let _570: &amp;ReErased i128;<br align="left"/>let _571: i128;<br align="left"/>let mut _572: i8;<br align="left"/>let _573: ();<br align="left"/>let mut _574: bool;<br align="left"/>let mut _575: bool;<br align="left"/>let _576: ();<br align="left"/>let mut _577: &amp;ReErased str;<br align="left"/>let _578: &amp;ReErased str;<br align="left"/>let mut _579: &amp;ReErased std::string::String;<br align="left"/>let _580: &amp;ReErased std::string::String;<br align="left"/>let _581: std::string::String;<br align="left"/>let _582: std::string::String;<br align="left"/>let mut _583: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _584: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _585: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _586: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _587: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _588: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _589: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _590: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _591: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _592: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _593: &amp;ReErased u16;<br align="left"/>let _594: &amp;ReErased u16;<br align="left"/>let _595: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _596: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _597: ();<br align="left"/>let mut _598: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _599: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _600: &amp;ReErased mut state::margin_calculation::MarginCalculation;<br align="left"/>let mut _601: i128;<br align="left"/>let mut _602: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _603: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _604: i128;<br align="left"/>let mut _605: isize;<br align="left"/>let _606: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _607: !;<br align="left"/>let mut _608: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _609: i128;<br align="left"/>let mut _610: isize;<br align="left"/>let _611: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _612: !;<br align="left"/>let mut _613: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _614: ();<br align="left"/>let _615: ();<br align="left"/>let mut _616: &amp;ReErased mut state::margin_calculation::MarginCalculation;<br align="left"/>let mut _617: bool;<br align="left"/>let _618: ();<br align="left"/>let mut _619: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _620: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _621: bool;<br align="left"/>let mut _622: u128;<br align="left"/>let mut _623: i128;<br align="left"/>let mut _624: u128;<br align="left"/>let mut _625: i128;<br align="left"/>let mut _626: ();<br align="left"/>let _627: error::ErrorCode;<br align="left"/>let _628: ();<br align="left"/>let mut _629: &amp;ReErased str;<br align="left"/>let _630: &amp;ReErased str;<br align="left"/>let mut _631: &amp;ReErased std::string::String;<br align="left"/>let _632: &amp;ReErased std::string::String;<br align="left"/>let _633: std::string::String;<br align="left"/>let _634: std::string::String;<br align="left"/>let mut _635: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _636: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _637: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _638: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _639: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _640: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _641: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _642: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _643: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _644: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _645: &amp;ReErased error::ErrorCode;<br align="left"/>let _646: &amp;ReErased error::ErrorCode;<br align="left"/>let _647: ();<br align="left"/>let mut _648: &amp;ReErased str;<br align="left"/>let _649: &amp;ReErased str;<br align="left"/>let mut _650: &amp;ReErased std::string::String;<br align="left"/>let _651: &amp;ReErased std::string::String;<br align="left"/>let _652: std::string::String;<br align="left"/>let _653: std::string::String;<br align="left"/>let mut _654: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _655: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _656: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _657: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _658: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _659: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _660: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _661: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _662: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _663: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _664: &amp;ReErased u16;<br align="left"/>let _665: &amp;ReErased u16;<br align="left"/>let _666: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _667: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _668: error::ErrorCode;<br align="left"/>let mut _669: isize;<br align="left"/>let _670: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _671: !;<br align="left"/>let mut _672: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _673: ();<br align="left"/>let _674: ();<br align="left"/>let mut _675: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _676: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _677: bool;<br align="left"/>let mut _678: i128;<br align="left"/>let mut _679: ();<br align="left"/>let _680: error::ErrorCode;<br align="left"/>let _681: ();<br align="left"/>let mut _682: &amp;ReErased str;<br align="left"/>let _683: &amp;ReErased str;<br align="left"/>let mut _684: &amp;ReErased std::string::String;<br align="left"/>let _685: &amp;ReErased std::string::String;<br align="left"/>let _686: std::string::String;<br align="left"/>let _687: std::string::String;<br align="left"/>let mut _688: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _689: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _690: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _691: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _692: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _693: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _694: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _695: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _696: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _697: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _698: &amp;ReErased error::ErrorCode;<br align="left"/>let _699: &amp;ReErased error::ErrorCode;<br align="left"/>let _700: ();<br align="left"/>let mut _701: &amp;ReErased str;<br align="left"/>let _702: &amp;ReErased str;<br align="left"/>let mut _703: &amp;ReErased std::string::String;<br align="left"/>let _704: &amp;ReErased std::string::String;<br align="left"/>let _705: std::string::String;<br align="left"/>let _706: std::string::String;<br align="left"/>let mut _707: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _708: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _709: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _710: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _711: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _712: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _713: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _714: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _715: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _716: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _717: &amp;ReErased i128;<br align="left"/>let _718: &amp;ReErased i128;<br align="left"/>let mut _719: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _720: &amp;ReErased u16;<br align="left"/>let _721: &amp;ReErased u16;<br align="left"/>let _722: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _723: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _724: error::ErrorCode;<br align="left"/>let mut _725: isize;<br align="left"/>let _726: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _727: !;<br align="left"/>let mut _728: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _729: ();<br align="left"/>let _730: ();<br align="left"/>let mut _731: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _732: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _733: &amp;ReErased mut state::margin_calculation::MarginCalculation;<br align="left"/>let mut _734: u128;<br align="left"/>let mut _735: i128;<br align="left"/>let mut _736: u128;<br align="left"/>let mut _737: i128;<br align="left"/>let mut _738: state::margin_calculation::MarketIdentifier;<br align="left"/>let mut _739: u16;<br align="left"/>let mut _740: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _741: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _742: isize;<br align="left"/>let _743: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _744: !;<br align="left"/>let mut _745: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _746: ();<br align="left"/>let _747: ();<br align="left"/>let mut _748: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _749: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _750: &amp;ReErased mut state::margin_calculation::MarginCalculation;<br align="left"/>let mut _751: isize;<br align="left"/>let _752: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _753: !;<br align="left"/>let mut _754: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _755: ();<br align="left"/>let _756: ();<br align="left"/>let mut _757: &amp;ReErased mut state::margin_calculation::MarginCalculation;<br align="left"/>let mut _758: bool;<br align="left"/>let mut _759: &amp;ReErased state::spot_market::AssetTier;<br align="left"/>let _760: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _761: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _762: &amp;ReErased state::spot_market::AssetTier;<br align="left"/>let _763: state::spot_market::AssetTier;<br align="left"/>let _764: ();<br align="left"/>let mut _765: &amp;ReErased mut state::margin_calculation::MarginCalculation;<br align="left"/>let mut _766: bool;<br align="left"/>let mut _767: bool;<br align="left"/>let mut _768: &amp;ReErased state::user::SpotPosition;<br align="left"/>let _769: ();<br align="left"/>let mut _770: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _771: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _772: &amp;ReErased mut state::margin_calculation::MarginCalculation;<br align="left"/>let mut _773: isize;<br align="left"/>let _774: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _775: !;<br align="left"/>let mut _776: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _777: ();<br align="left"/>let _778: ();<br align="left"/>let mut _779: &amp;ReErased mut state::margin_calculation::MarginCalculation;<br align="left"/>let mut _780: bool;<br align="left"/>let _781: ();<br align="left"/>let mut _782: &amp;ReErased mut state::margin_calculation::MarginCalculation;<br align="left"/>let mut _783: bool;<br align="left"/>let mut _784: &amp;ReErased state::spot_market::AssetTier;<br align="left"/>let _785: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _786: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _787: &amp;ReErased state::spot_market::AssetTier;<br align="left"/>let _788: state::spot_market::AssetTier;<br align="left"/>let mut _789: std::cmp::Ordering;<br align="left"/>let mut _790: &amp;ReErased i128;<br align="left"/>let mut _791: &amp;ReErased i128;<br align="left"/>let _792: &amp;ReErased i128;<br align="left"/>let _793: i128;<br align="left"/>let mut _794: i8;<br align="left"/>let _795: ();<br align="left"/>let mut _796: bool;<br align="left"/>let mut _797: bool;<br align="left"/>let _798: ();<br align="left"/>let mut _799: &amp;ReErased str;<br align="left"/>let _800: &amp;ReErased str;<br align="left"/>let mut _801: &amp;ReErased std::string::String;<br align="left"/>let _802: &amp;ReErased std::string::String;<br align="left"/>let _803: std::string::String;<br align="left"/>let _804: std::string::String;<br align="left"/>let mut _805: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _806: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _807: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _808: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _809: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _810: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _811: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _812: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _813: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _814: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _815: &amp;ReErased u16;<br align="left"/>let _816: &amp;ReErased u16;<br align="left"/>let _817: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _818: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _819: ();<br align="left"/>let mut _820: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _821: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _822: &amp;ReErased mut state::margin_calculation::MarginCalculation;<br align="left"/>let mut _823: i128;<br align="left"/>let mut _824: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _825: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _826: i128;<br align="left"/>let mut _827: isize;<br align="left"/>let _828: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _829: !;<br align="left"/>let mut _830: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _831: i128;<br align="left"/>let mut _832: isize;<br align="left"/>let _833: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _834: !;<br align="left"/>let mut _835: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _836: ();<br align="left"/>let _837: ();<br align="left"/>let mut _838: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _839: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _840: &amp;ReErased mut state::margin_calculation::MarginCalculation;<br align="left"/>let mut _841: u128;<br align="left"/>let mut _842: i128;<br align="left"/>let mut _843: u128;<br align="left"/>let mut _844: i128;<br align="left"/>let mut _845: state::margin_calculation::MarketIdentifier;<br align="left"/>let mut _846: isize;<br align="left"/>let _847: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _848: !;<br align="left"/>let mut _849: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _850: ();<br align="left"/>let _851: ();<br align="left"/>let mut _852: std::slice::Iter&lt;ReErased, state::user::PerpPosition&gt;;<br align="left"/>let mut _853: std::slice::Iter&lt;ReErased, state::user::PerpPosition&gt;;<br align="left"/>let mut _854: &amp;ReErased [state::user::PerpPosition];<br align="left"/>let mut _855: &amp;ReErased [state::user::PerpPosition; 8_usize];<br align="left"/>let mut _856: std::slice::Iter&lt;ReErased, state::user::PerpPosition&gt;;<br align="left"/>let _857: ();<br align="left"/>let mut _858: std::option::Option&lt;&amp;ReErased state::user::PerpPosition&gt;;<br align="left"/>let mut _859: &amp;ReErased mut std::slice::Iter&lt;ReErased, state::user::PerpPosition&gt;;<br align="left"/>let mut _860: &amp;ReErased mut std::slice::Iter&lt;ReErased, state::user::PerpPosition&gt;;<br align="left"/>let mut _861: isize;<br align="left"/>let mut _862: !;<br align="left"/>let _863: &amp;ReErased state::user::PerpPosition;<br align="left"/>let _864: ();<br align="left"/>let mut _865: bool;<br align="left"/>let mut _866: &amp;ReErased state::user::PerpPosition;<br align="left"/>let mut _867: !;<br align="left"/>let _868: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _869: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _870: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _871: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _872: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _873: &amp;ReErased u16;<br align="left"/>let _874: &amp;ReErased u16;<br align="left"/>let mut _875: isize;<br align="left"/>let _876: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _877: !;<br align="left"/>let mut _878: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _879: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _880: ();<br align="left"/>let mut _881: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _882: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _883: bool;<br align="left"/>let mut _884: u8;<br align="left"/>let mut _885: u8;<br align="left"/>let mut _886: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _887: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _888: ();<br align="left"/>let _889: error::ErrorCode;<br align="left"/>let _890: ();<br align="left"/>let mut _891: &amp;ReErased str;<br align="left"/>let _892: &amp;ReErased str;<br align="left"/>let mut _893: &amp;ReErased std::string::String;<br align="left"/>let _894: &amp;ReErased std::string::String;<br align="left"/>let _895: std::string::String;<br align="left"/>let _896: std::string::String;<br align="left"/>let mut _897: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _898: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _899: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _900: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _901: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _902: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _903: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _904: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _905: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _906: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _907: &amp;ReErased error::ErrorCode;<br align="left"/>let _908: &amp;ReErased error::ErrorCode;<br align="left"/>let _909: ();<br align="left"/>let mut _910: &amp;ReErased str;<br align="left"/>let _911: &amp;ReErased str;<br align="left"/>let mut _912: &amp;ReErased std::string::String;<br align="left"/>let _913: &amp;ReErased std::string::String;<br align="left"/>let _914: std::string::String;<br align="left"/>let _915: std::string::String;<br align="left"/>let mut _916: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _917: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _918: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _919: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _920: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _921: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _922: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _923: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _924: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _925: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _926: &amp;ReErased u8;<br align="left"/>let _927: &amp;ReErased u8;<br align="left"/>let mut _928: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _929: &amp;ReErased u8;<br align="left"/>let _930: &amp;ReErased u8;<br align="left"/>let _931: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _932: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _933: error::ErrorCode;<br align="left"/>let mut _934: isize;<br align="left"/>let _935: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _936: !;<br align="left"/>let mut _937: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _938: ();<br align="left"/>let _939: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _940: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _941: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _942: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _943: &amp;ReErased u16;<br align="left"/>let _944: &amp;ReErased u16;<br align="left"/>let _945: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _946: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _947: isize;<br align="left"/>let _948: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _949: !;<br align="left"/>let mut _950: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _951: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _952: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _953: math::oracle::OracleValidity;<br align="left"/>let mut _954: (&amp;ReErased state::oracle::OraclePriceData, math::oracle::OracleValidity);<br align="left"/>let mut _955: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (&amp;ReErased state::oracle::OraclePriceData, math::oracle::OracleValidity)&gt;;<br align="left"/>let mut _956: std::result::Result&lt;(&amp;ReErased state::oracle::OraclePriceData, math::oracle::OracleValidity), error::ErrorCode&gt;;<br align="left"/>let mut _957: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _958: state::user::MarketType;<br align="left"/>let mut _959: u16;<br align="left"/>let mut _960: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _961: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _962: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _963: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _964: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _965: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _966: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _967: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _968: i64;<br align="left"/>let mut _969: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _970: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _971: u64;<br align="left"/>let mut _972: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _973: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _974: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _975: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _976: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _977: isize;<br align="left"/>let _978: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _979: !;<br align="left"/>let mut _980: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _981: u64;<br align="left"/>let mut _982: isize;<br align="left"/>let _983: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _984: !;<br align="left"/>let mut _985: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _986: (&amp;ReErased state::oracle::OraclePriceData, math::oracle::OracleValidity);<br align="left"/>let _987: state::oracle::StrictOraclePrice;<br align="left"/>let mut _988: i64;<br align="left"/>let mut _989: i64;<br align="left"/>let mut _990: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _991: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _992: bool;<br align="left"/>let _993: ();<br align="left"/>let mut _994: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _995: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _996: math::oracle::OracleValidity;<br align="left"/>let mut _997: (&amp;ReErased state::oracle::OraclePriceData, math::oracle::OracleValidity);<br align="left"/>let mut _998: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (&amp;ReErased state::oracle::OraclePriceData, math::oracle::OracleValidity)&gt;;<br align="left"/>let mut _999: std::result::Result&lt;(&amp;ReErased state::oracle::OraclePriceData, math::oracle::OracleValidity), error::ErrorCode&gt;;<br align="left"/>let mut _1000: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _1001: state::user::MarketType;<br align="left"/>let mut _1002: u16;<br align="left"/>let mut _1003: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _1004: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _1005: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _1006: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _1007: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _1008: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _1009: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _1010: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _1011: i64;<br align="left"/>let mut _1012: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _1013: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _1014: u64;<br align="left"/>let mut _1015: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _1016: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _1017: state::perp_market::PerpMarket;<br align="left"/>let mut _1018: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _1019: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _1020: isize;<br align="left"/>let _1021: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1022: !;<br align="left"/>let mut _1023: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1024: u64;<br align="left"/>let mut _1025: isize;<br align="left"/>let _1026: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1027: !;<br align="left"/>let mut _1028: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1029: (&amp;ReErased state::oracle::OraclePriceData, math::oracle::OracleValidity);<br align="left"/>let _1030: u32;<br align="left"/>let mut _1031: bool;<br align="left"/>let mut _1032: &amp;ReErased math::margin::MarginRequirementType;<br align="left"/>let mut _1033: &amp;ReErased math::margin::MarginRequirementType;<br align="left"/>let _1034: math::margin::MarginRequirementType;<br align="left"/>let mut _1035: u16;<br align="left"/>let _1036: u128;<br align="left"/>let _1037: i128;<br align="left"/>let _1038: u128;<br align="left"/>let _1039: u128;<br align="left"/>let _1040: u128;<br align="left"/>let mut _1041: (u128, i128, u128, u128, u128);<br align="left"/>let mut _1042: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (u128, i128, u128, u128, u128)&gt;;<br align="left"/>let mut _1043: std::result::Result&lt;(u128, i128, u128, u128, u128), error::ErrorCode&gt;;<br align="left"/>let mut _1044: &amp;ReErased state::user::PerpPosition;<br align="left"/>let mut _1045: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _1046: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _1047: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _1048: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _1049: &amp;ReErased state::oracle::StrictOraclePrice;<br align="left"/>let _1050: &amp;ReErased state::oracle::StrictOraclePrice;<br align="left"/>let mut _1051: math::margin::MarginRequirementType;<br align="left"/>let mut _1052: u32;<br align="left"/>let mut _1053: u32;<br align="left"/>let mut _1054: u32;<br align="left"/>let mut _1055: bool;<br align="left"/>let mut _1056: bool;<br align="left"/>let mut _1057: &amp;ReErased state::margin_calculation::MarginCalculation;<br align="left"/>let mut _1058: isize;<br align="left"/>let _1059: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1060: !;<br align="left"/>let mut _1061: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1062: (u128, i128, u128, u128, u128);<br align="left"/>let _1063: ();<br align="left"/>let mut _1064: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _1065: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _1066: &amp;ReErased mut state::margin_calculation::MarginCalculation;<br align="left"/>let mut _1067: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _1068: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _1069: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _1070: &amp;ReErased state::user::PerpPosition;<br align="left"/>let mut _1071: u128;<br align="left"/>let mut _1072: i64;<br align="left"/>let mut _1073: isize;<br align="left"/>let _1074: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1075: !;<br align="left"/>let mut _1076: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1077: ();<br align="left"/>let _1078: ();<br align="left"/>let mut _1079: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _1080: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _1081: &amp;ReErased mut state::margin_calculation::MarginCalculation;<br align="left"/>let mut _1082: u128;<br align="left"/>let mut _1083: u128;<br align="left"/>let mut _1084: state::margin_calculation::MarketIdentifier;<br align="left"/>let mut _1085: u16;<br align="left"/>let mut _1086: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _1087: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _1088: isize;<br align="left"/>let _1089: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1090: !;<br align="left"/>let mut _1091: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1092: ();<br align="left"/>let _1093: ();<br align="left"/>let mut _1094: bool;<br align="left"/>let mut _1095: &amp;ReErased state::margin_calculation::MarginCalculation;<br align="left"/>let _1096: ();<br align="left"/>let mut _1097: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _1098: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _1099: &amp;ReErased mut state::margin_calculation::MarginCalculation;<br align="left"/>let mut _1100: u128;<br align="left"/>let mut _1101: isize;<br align="left"/>let _1102: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1103: !;<br align="left"/>let mut _1104: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1105: ();<br align="left"/>let _1106: ();<br align="left"/>let mut _1107: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _1108: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _1109: &amp;ReErased mut state::margin_calculation::MarginCalculation;<br align="left"/>let mut _1110: i128;<br align="left"/>let mut _1111: isize;<br align="left"/>let _1112: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1113: !;<br align="left"/>let mut _1114: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1115: ();<br align="left"/>let _1116: bool;<br align="left"/>let mut _1117: bool;<br align="left"/>let mut _1118: i64;<br align="left"/>let mut _1119: bool;<br align="left"/>let mut _1120: i64;<br align="left"/>let mut _1121: &amp;ReErased state::user::PerpPosition;<br align="left"/>let _1122: ();<br align="left"/>let mut _1123: bool;<br align="left"/>let _1124: ();<br align="left"/>let mut _1125: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _1126: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _1127: &amp;ReErased mut state::margin_calculation::MarginCalculation;<br align="left"/>let mut _1128: isize;<br align="left"/>let _1129: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1130: !;<br align="left"/>let mut _1131: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1132: ();<br align="left"/>let _1133: ();<br align="left"/>let mut _1134: &amp;ReErased mut state::margin_calculation::MarginCalculation;<br align="left"/>let mut _1135: bool;<br align="left"/>let mut _1136: &amp;ReErased state::perp_market::ContractTier;<br align="left"/>let _1137: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _1138: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _1139: &amp;ReErased state::perp_market::ContractTier;<br align="left"/>let _1140: state::perp_market::ContractTier;<br align="left"/>let mut _1141: bool;<br align="left"/>let mut _1142: bool;<br align="left"/>let mut _1143: &amp;ReErased math::margin::MarginRequirementType;<br align="left"/>let mut _1144: &amp;ReErased math::margin::MarginRequirementType;<br align="left"/>let _1145: math::margin::MarginRequirementType;<br align="left"/>let _1146: ();<br align="left"/>let mut _1147: &amp;ReErased mut state::margin_calculation::MarginCalculation;<br align="left"/>let mut _1148: bool;<br align="left"/>let mut _1149: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _1150: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _1151: math::oracle::OracleValidity;<br align="left"/>let mut _1152: std::option::Option&lt;math::oracle::DriftAction&gt;;<br align="left"/>let mut _1153: math::oracle::DriftAction;<br align="left"/>let mut _1154: isize;<br align="left"/>let _1155: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1156: !;<br align="left"/>let mut _1157: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1158: bool;<br align="left"/>let _1159: ();<br align="left"/>let mut _1160: &amp;ReErased mut state::margin_calculation::MarginCalculation;<br align="left"/>let mut _1161: bool;<br align="left"/>let mut _1162: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _1163: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _1164: math::oracle::OracleValidity;<br align="left"/>let mut _1165: std::option::Option&lt;math::oracle::DriftAction&gt;;<br align="left"/>let mut _1166: math::oracle::DriftAction;<br align="left"/>let mut _1167: isize;<br align="left"/>let _1168: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1169: !;<br align="left"/>let mut _1170: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1171: bool;<br align="left"/>let _1172: ();<br align="left"/>let mut _1173: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _1174: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _1175: &amp;ReErased state::margin_calculation::MarginCalculation;<br align="left"/>let mut _1176: isize;<br align="left"/>let _1177: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1178: !;<br align="left"/>let mut _1179: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1180: ();<br align="left"/>let _1181: [(u16, i128); 2_usize];<br align="left"/>let _1182: ();<br align="left"/>let mut _1183: std::slice::Iter&lt;ReErased, (u16, i128)&gt;;<br align="left"/>let mut _1184: std::slice::Iter&lt;ReErased, (u16, i128)&gt;;<br align="left"/>let mut _1185: &amp;ReErased [(u16, i128)];<br align="left"/>let mut _1186: &amp;ReErased [(u16, i128); 2_usize];<br align="left"/>let mut _1187: std::slice::Iter&lt;ReErased, (u16, i128)&gt;;<br align="left"/>let _1188: ();<br align="left"/>let mut _1189: std::option::Option&lt;&amp;ReErased (u16, i128)&gt;;<br align="left"/>let mut _1190: &amp;ReErased mut std::slice::Iter&lt;ReErased, (u16, i128)&gt;;<br align="left"/>let mut _1191: &amp;ReErased mut std::slice::Iter&lt;ReErased, (u16, i128)&gt;;<br align="left"/>let mut _1192: isize;<br align="left"/>let mut _1193: !;<br align="left"/>let _1194: &amp;ReErased u16;<br align="left"/>let _1195: &amp;ReErased i128;<br align="left"/>let _1196: ();<br align="left"/>let mut _1197: bool;<br align="left"/>let mut _1198: i128;<br align="left"/>let mut _1199: !;<br align="left"/>let _1200: ();<br align="left"/>let mut _1201: bool;<br align="left"/>let mut _1202: &amp;ReErased mut std::slice::Iter&lt;ReErased, state::user::SpotPosition&gt;;<br align="left"/>let mut _1203: std::slice::Iter&lt;ReErased, state::user::SpotPosition&gt;;<br align="left"/>let mut _1204: &amp;ReErased [state::user::SpotPosition];<br align="left"/>let mut _1205: &amp;ReErased [state::user::SpotPosition; 8_usize];<br align="left"/>let mut _1206: Closure(DefId(0:2464 ~ drift[d311]::math::margin::calculate_margin_requirement_and_total_collateral_and_liability_info::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReErased state::user::SpotPosition,)) -&gt; bool, []), (&amp;ReErased &amp;ReErased u16,)]);<br align="left"/>let mut _1207: &amp;ReErased &amp;ReErased u16;<br align="left"/>let mut _1208: !;<br align="left"/>let _1209: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _1210: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _1211: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _1212: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _1213: &amp;ReErased u16;<br align="left"/>let mut _1214: isize;<br align="left"/>let _1215: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1216: !;<br align="left"/>let mut _1217: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1218: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _1219: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _1220: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _1221: std::result::Result&lt;&amp;ReErased state::oracle::OraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _1222: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _1223: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _1224: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _1225: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _1226: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _1227: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _1228: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _1229: isize;<br align="left"/>let _1230: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1231: !;<br align="left"/>let mut _1232: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1233: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _1234: state::oracle::StrictOraclePrice;<br align="left"/>let mut _1235: i64;<br align="left"/>let mut _1236: i64;<br align="left"/>let mut _1237: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _1238: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _1239: bool;<br align="left"/>let _1240: ();<br align="left"/>let mut _1241: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _1242: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _1243: &amp;ReErased state::oracle::StrictOraclePrice;<br align="left"/>let mut _1244: isize;<br align="left"/>let _1245: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1246: !;<br align="left"/>let mut _1247: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1248: ();<br align="left"/>let _1249: ();<br align="left"/>let mut _1250: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _1251: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _1252: &amp;ReErased mut state::margin_calculation::MarginCalculation;<br align="left"/>let mut _1253: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _1254: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _1255: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _1256: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _1257: &amp;ReErased state::oracle::StrictOraclePrice;<br align="left"/>let _1258: &amp;ReErased state::oracle::StrictOraclePrice;<br align="left"/>let mut _1259: isize;<br align="left"/>let _1260: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1261: !;<br align="left"/>let mut _1262: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1263: ();<br align="left"/>let mut _1264: state::margin_calculation::MarginCalculation;<br align="left"/>let mut _1265: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1266: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1267: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _1268: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1269: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1270: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _1271: &amp;ReErased i128;<br align="left"/>let mut _1272: &amp;ReErased state::spot_market::AssetTier;<br align="left"/>let mut _1273: &amp;ReErased state::spot_market::AssetTier;<br align="left"/>let mut _1274: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1275: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1276: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _1277: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1278: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _1279: &amp;ReErased i128;<br align="left"/>let mut _1280: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _1281: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1282: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _1283: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1284: &amp;ReErased math::margin::MarginRequirementType;<br align="left"/>let mut _1285: &amp;ReErased state::perp_market::ContractTier;<br align="left"/>let mut _1286: &amp;ReErased math::margin::MarginRequirementType;<br align="left"/>let mut _1287: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _1288: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1289: &amp;ReErased math::margin::MarginRequirementType;<br align="left"/>let mut _1290: &amp;ReErased (u16, i128);<br align="left"/>let mut _1291: &amp;ReErased (u16, i128);<br align="left"/>let mut _1292: bool;<br align="left"/>let mut _1293: isize;<br align="left"/>let mut _1294: isize;<br align="left"/>let mut _1295: isize;<br align="left"/>let mut _1296: isize;<br align="left"/>let mut _1297: isize;<br align="left"/>let mut _1298: isize;<br align="left"/>let mut _1299: isize;<br align="left"/>let mut _1300: isize;<br align="left"/>let mut _1301: isize;<br align="left"/>let mut _1302: isize;<br align="left"/>let mut _1303: isize;<br align="left"/>let mut _1304: isize;<br align="left"/>let mut _1305: isize;<br align="left"/>let mut _1306: isize;<br align="left"/>let mut _1307: isize;<br align="left"/>let mut _1308: isize;<br align="left"/>let mut _1309: isize;<br align="left"/>let mut _1310: isize;<br align="left"/>let mut _1311: isize;<br align="left"/>let mut _1312: isize;<br align="left"/>debug user =&gt; _1;<br align="left"/>debug perp_market_map =&gt; _2;<br align="left"/>debug spot_market_map =&gt; _3;<br align="left"/>debug oracle_map =&gt; _4;<br align="left"/>debug context =&gt; _5;<br align="left"/>debug calculation =&gt; _6;<br align="left"/>debug user_custom_margin_ratio =&gt; _8;<br align="left"/>debug margin_ratio_override =&gt; _15;<br align="left"/>debug user_pool_id =&gt; _19;<br align="left"/>debug user_high_leverage_mode =&gt; _20;<br align="left"/>debug iter =&gt; _28;<br align="left"/>debug spot_position =&gt; _36;<br align="left"/>debug residual =&gt; _42;<br align="left"/>debug val =&gt; _45;<br align="left"/>debug spot_market =&gt; _50;<br align="left"/>debug residual =&gt; _57;<br align="left"/>debug val =&gt; _60;<br align="left"/>debug oracle_price_data =&gt; _61;<br align="left"/>debug oracle_validity =&gt; _62;<br align="left"/>debug residual =&gt; _87;<br align="left"/>debug val =&gt; _90;<br align="left"/>debug residual =&gt; _92;<br align="left"/>debug val =&gt; _95;<br align="left"/>debug skip_token_value =&gt; _96;<br align="left"/>debug error_code =&gt; _115;<br align="left"/>debug res =&gt; _122;<br align="left"/>debug res =&gt; _141;<br align="left"/>debug residual =&gt; _161;<br align="left"/>debug val =&gt; _164;<br align="left"/>debug oracle_valid =&gt; _165;<br align="left"/>debug residual =&gt; _172;<br align="left"/>debug val =&gt; _175;<br align="left"/>debug strict_oracle_price =&gt; _176;<br align="left"/>debug residual =&gt; _187;<br align="left"/>debug val =&gt; _190;<br align="left"/>debug token_amount =&gt; _195;<br align="left"/>debug residual =&gt; _204;<br align="left"/>debug val =&gt; _207;<br align="left"/>debug error_code =&gt; _217;<br align="left"/>debug res =&gt; _224;<br align="left"/>debug res =&gt; _243;<br align="left"/>debug residual =&gt; _261;<br align="left"/>debug val =&gt; _264;<br align="left"/>debug residual =&gt; _277;<br align="left"/>debug val =&gt; _280;<br align="left"/>debug token_value =&gt; _281;<br align="left"/>debug residual =&gt; _291;<br align="left"/>debug val =&gt; _294;<br align="left"/>debug res =&gt; _305;<br align="left"/>debug residual =&gt; _328;<br align="left"/>debug val =&gt; _331;<br align="left"/>debug token_value =&gt; _335;<br align="left"/>debug error_code =&gt; _343;<br align="left"/>debug res =&gt; _350;<br align="left"/>debug res =&gt; _369;<br align="left"/>debug residual =&gt; _389;<br align="left"/>debug val =&gt; _392;<br align="left"/>debug residual =&gt; _401;<br align="left"/>debug val =&gt; _404;<br align="left"/>debug residual =&gt; _410;<br align="left"/>debug val =&gt; _413;<br align="left"/>debug signed_token_amount =&gt; _417;<br align="left"/>debug residual =&gt; _426;<br align="left"/>debug val =&gt; _429;<br align="left"/>debug residual =&gt; _442;<br align="left"/>debug val =&gt; _445;<br align="left"/>debug worst_case_token_amount =&gt; _446;<br align="left"/>debug worst_case_orders_value =&gt; _447;<br align="left"/>debug worst_case_token_value =&gt; _448;<br align="left"/>debug worst_case_weighted_token_value =&gt; _449;<br align="left"/>debug residual =&gt; _467;<br align="left"/>debug val =&gt; _470;<br align="left"/>debug residual =&gt; _478;<br align="left"/>debug val =&gt; _481;<br align="left"/>debug error_code =&gt; _491;<br align="left"/>debug res =&gt; _498;<br align="left"/>debug res =&gt; _517;<br align="left"/>debug residual =&gt; _540;<br align="left"/>debug val =&gt; _543;<br align="left"/>debug residual =&gt; _553;<br align="left"/>debug val =&gt; _556;<br align="left"/>debug residual =&gt; _562;<br align="left"/>debug val =&gt; _565;<br align="left"/>debug res =&gt; _582;<br align="left"/>debug residual =&gt; _606;<br align="left"/>debug val =&gt; _609;<br align="left"/>debug residual =&gt; _611;<br align="left"/>debug val =&gt; _614;<br align="left"/>debug error_code =&gt; _627;<br align="left"/>debug res =&gt; _634;<br align="left"/>debug res =&gt; _653;<br align="left"/>debug residual =&gt; _670;<br align="left"/>debug val =&gt; _673;<br align="left"/>debug error_code =&gt; _680;<br align="left"/>debug res =&gt; _687;<br align="left"/>debug res =&gt; _706;<br align="left"/>debug residual =&gt; _726;<br align="left"/>debug val =&gt; _729;<br align="left"/>debug residual =&gt; _743;<br align="left"/>debug val =&gt; _746;<br align="left"/>debug residual =&gt; _752;<br align="left"/>debug val =&gt; _755;<br align="left"/>debug residual =&gt; _774;<br align="left"/>debug val =&gt; _777;<br align="left"/>debug res =&gt; _804;<br align="left"/>debug residual =&gt; _828;<br align="left"/>debug val =&gt; _831;<br align="left"/>debug residual =&gt; _833;<br align="left"/>debug val =&gt; _836;<br align="left"/>debug residual =&gt; _847;<br align="left"/>debug val =&gt; _850;<br align="left"/>debug iter =&gt; _856;<br align="left"/>debug market_position =&gt; _863;<br align="left"/>debug market =&gt; _868;<br align="left"/>debug residual =&gt; _876;<br align="left"/>debug val =&gt; _879;<br align="left"/>debug error_code =&gt; _889;<br align="left"/>debug res =&gt; _896;<br align="left"/>debug res =&gt; _915;<br align="left"/>debug residual =&gt; _935;<br align="left"/>debug val =&gt; _938;<br align="left"/>debug quote_spot_market =&gt; _939;<br align="left"/>debug residual =&gt; _948;<br align="left"/>debug val =&gt; _951;<br align="left"/>debug quote_oracle_price_data =&gt; _952;<br align="left"/>debug quote_oracle_validity =&gt; _953;<br align="left"/>debug residual =&gt; _978;<br align="left"/>debug val =&gt; _981;<br align="left"/>debug residual =&gt; _983;<br align="left"/>debug val =&gt; _986;<br align="left"/>debug strict_quote_price =&gt; _987;<br align="left"/>debug oracle_price_data =&gt; _995;<br align="left"/>debug oracle_validity =&gt; _996;<br align="left"/>debug residual =&gt; _1021;<br align="left"/>debug val =&gt; _1024;<br align="left"/>debug residual =&gt; _1026;<br align="left"/>debug val =&gt; _1029;<br align="left"/>debug perp_position_custom_margin_ratio =&gt; _1030;<br align="left"/>debug perp_margin_requirement =&gt; _1036;<br align="left"/>debug weighted_pnl =&gt; _1037;<br align="left"/>debug worst_case_liability_value =&gt; _1038;<br align="left"/>debug open_order_margin_requirement =&gt; _1039;<br align="left"/>debug base_asset_value =&gt; _1040;<br align="left"/>debug residual =&gt; _1059;<br align="left"/>debug val =&gt; _1062;<br align="left"/>debug residual =&gt; _1074;<br align="left"/>debug val =&gt; _1077;<br align="left"/>debug residual =&gt; _1089;<br align="left"/>debug val =&gt; _1092;<br align="left"/>debug residual =&gt; _1102;<br align="left"/>debug val =&gt; _1105;<br align="left"/>debug residual =&gt; _1112;<br align="left"/>debug val =&gt; _1115;<br align="left"/>debug has_perp_liability =&gt; _1116;<br align="left"/>debug residual =&gt; _1129;<br align="left"/>debug val =&gt; _1132;<br align="left"/>debug residual =&gt; _1155;<br align="left"/>debug val =&gt; _1158;<br align="left"/>debug residual =&gt; _1168;<br align="left"/>debug val =&gt; _1171;<br align="left"/>debug residual =&gt; _1177;<br align="left"/>debug val =&gt; _1180;<br align="left"/>debug spot_fuel_deltas =&gt; _1181;<br align="left"/>debug iter =&gt; _1187;<br align="left"/>debug market_index =&gt; _1194;<br align="left"/>debug delta =&gt; _1195;<br align="left"/>debug spot_market =&gt; _1209;<br align="left"/>debug residual =&gt; _1215;<br align="left"/>debug val =&gt; _1218;<br align="left"/>debug oracle_price_data =&gt; _1219;<br align="left"/>debug residual =&gt; _1230;<br align="left"/>debug val =&gt; _1233;<br align="left"/>debug strict_oracle_price =&gt; _1234;<br align="left"/>debug residual =&gt; _1245;<br align="left"/>debug val =&gt; _1248;<br align="left"/>debug residual =&gt; _1260;<br align="left"/>debug val =&gt; _1263;<br align="left"/>>;
    bb0__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_1292 = const false<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = _5<br/></td></tr><tr><td align="left">_6 = MarginCalculation::new(move _7)</td></tr></table>>];
    bb1__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = &amp;(_5.0: math::margin::MarginRequirementType)<br/>StorageLive(_11)<br/>_1289 = const _<br/>_11 = &amp;(*_1289)<br/></td></tr><tr><td align="left">_9 = &lt;math::margin::MarginRequirementType as PartialEq&gt;::eq(move _10, move _11)</td></tr></table>>];
    bb2__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left">switchInt(move _9)</td></tr></table>>];
    bb3__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_10)<br/>_8 = ((*_1).16: u32)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb4__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_10)<br/>_8 = const 0_u32<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb5__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageLive(_13)<br/>_14 = discriminant((_5.9: std::option::Option&lt;u32&gt;))<br/></td></tr><tr><td align="left">switchInt(move _14)</td></tr></table>>];
    bb6__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_15)<br/>_15 = (((_5.9: std::option::Option&lt;u32&gt;) as Some).0: u32)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_17 = _15<br/>StorageLive(_18)<br/>_18 = _8<br/></td></tr><tr><td align="left">_16 = &lt;u32 as Ord&gt;::max(move _17, move _18)</td></tr></table>>];
    bb7__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_17)<br/>_8 = move _16<br/>StorageDead(_16)<br/>_13 = const ()<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">_13 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageLive(_19)<br/>_19 = ((*_1).27: u8)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_21 = &amp;(*_1)<br/>StorageLive(_22)<br/>_22 = (_5.0: math::margin::MarginRequirementType)<br/></td></tr><tr><td align="left">_20 = User::is_high_leverage_mode(move _21, move _22)</td></tr></table>>];
    bb10__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_21)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_27 = &amp;((*_1).3: [state::user::SpotPosition; 8])<br/>_26 = move _27 as &amp;[state::user::SpotPosition] (PointerCoercion(Unsize))<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">_25 = core::slice::&lt;impl [SpotPosition]&gt;::iter(move _26)</td></tr></table>>];
    bb11__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/></td></tr><tr><td align="left">_24 = &lt;std::slice::Iter&lt;'_, SpotPosition&gt; as IntoIterator&gt;::into_iter(move _25)</td></tr></table>>];
    bb12__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageLive(_28)<br/>_28 = move _24<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>_33 = &amp;mut _28<br/>_32 = &amp;mut (*_33)<br/></td></tr><tr><td align="left">_31 = &lt;std::slice::Iter&lt;'_, SpotPosition&gt; as Iterator&gt;::next(move _32)</td></tr></table>>];
    bb14__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>_34 = discriminant(_31)<br/></td></tr><tr><td align="left">switchInt(move _34)</td></tr></table>>];
    bb15__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_36)<br/>_36 = ((_31 as Some).0: &amp;state::user::SpotPosition)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_40 = &amp;(*_36)<br/></td></tr><tr><td align="left">_39 = validate_spot_position(move _40)</td></tr></table>>];
    bb16__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb17__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">_23 = const ()<br/>StorageDead(_33)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/>StorageDead(_28)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/>StorageLive(_851)<br/>StorageLive(_852)<br/>StorageLive(_853)<br/>StorageLive(_854)<br/>StorageLive(_855)<br/>_855 = &amp;((*_1).4: [state::user::PerpPosition; 8])<br/>_854 = move _855 as &amp;[state::user::PerpPosition] (PointerCoercion(Unsize))<br/>StorageDead(_855)<br/></td></tr><tr><td align="left">_853 = core::slice::&lt;impl [PerpPosition]&gt;::iter(move _854)</td></tr></table>>];
    bb18__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/></td></tr><tr><td align="left">_38 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _39)</td></tr></table>>];
    bb19__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>_41 = discriminant(_38)<br/></td></tr><tr><td align="left">switchInt(move _41)</td></tr></table>>];
    bb20__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_45)<br/>_45 = ((_38 as Continue).0: ())<br/>_37 = _45<br/>StorageDead(_45)<br/>StorageDead(_38)<br/>StorageDead(_37)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>_48 = &amp;(*_36)<br/></td></tr><tr><td align="left">_47 = SpotPosition::is_available(move _48)</td></tr></table>>];
    bb21__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_42)<br/>_42 = ((_38 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_44)<br/>_44 = _42<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _44)</td></tr></table>>];
    bb22__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_42)<br/>StorageDead(_38)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left">switchInt(move _47)</td></tr></table>>];
    bb24__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageDead(_47)<br/>StorageDead(_46)<br/>StorageDead(_36)<br/>StorageDead(_33)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>_46 = const ()<br/>StorageDead(_47)<br/>StorageDead(_46)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>_53 = &amp;(*_3)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>_55 = &amp;((*_36).4: u16)<br/>_54 = &amp;(*_55)<br/></td></tr><tr><td align="left">_52 = SpotMarketMap::&lt;'_&gt;::get_ref(move _53, move _54)</td></tr></table>>];
    bb26__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">_51 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _52)</td></tr></table>>];
    bb27__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>_56 = discriminant(_51)<br/></td></tr><tr><td align="left">switchInt(move _56)</td></tr></table>>];
    bb28__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_60)<br/>_60 = move ((_51 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_50 = move _60<br/>StorageDead(_60)<br/>_1295 = discriminant(_51)<br/>StorageDead(_55)<br/>StorageDead(_51)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>_66 = &amp;mut (*_4)<br/>StorageLive(_67)<br/>_67 = state::user::MarketType::Spot<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>_70 = &amp;_50<br/></td></tr><tr><td align="left">_69 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _70)</td></tr></table>>];
    bb29__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_57)<br/>_57 = ((_51 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_59)<br/>_59 = _57<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _59)</td></tr></table>>];
    bb30__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_57)<br/>_1293 = discriminant(_51)<br/>StorageDead(_55)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>_68 = ((*_69).42: u16)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>_76 = &amp;_50<br/></td></tr><tr><td align="left">_75 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _76)</td></tr></table>>];
    bb32__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">_74 = &amp;(*_75)<br/>StorageDead(_76)<br/></td></tr><tr><td align="left">_73 = SpotMarket::oracle_id(move _74)</td></tr></table>>];
    bb33__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>_72 = &amp;_73<br/>_71 = &amp;(*_72)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>_79 = &amp;_50<br/></td></tr><tr><td align="left">_78 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _79)</td></tr></table>>];
    bb34__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>_77 = (((*_78).5: state::oracle::HistoricalOracleData).3: i64)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>_85 = &amp;_50<br/></td></tr><tr><td align="left">_84 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _85)</td></tr></table>>];
    bb35__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">_83 = &amp;(*_84)<br/>StorageDead(_85)<br/></td></tr><tr><td align="left">_82 = SpotMarket::get_max_confidence_interval_multiplier(move _83)</td></tr></table>>];
    bb36__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/></td></tr><tr><td align="left">_81 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _82)</td></tr></table>>];
    bb37__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>_86 = discriminant(_81)<br/></td></tr><tr><td align="left">switchInt(move _86)</td></tr></table>>];
    bb38__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_90)<br/>_90 = ((_81 as Continue).0: u64)<br/>_80 = _90<br/>StorageDead(_90)<br/></td></tr><tr><td align="left">_65 = OracleMap::&lt;'_&gt;::get_price_data_and_validity(move _66, move _67, move _68, move _71, move _77, move _80, const 0_i8)</td></tr></table>>];
    bb39__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_87)<br/>_87 = ((_81 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_89)<br/>_89 = _87<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _89)</td></tr></table>>];
    bb40__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>StorageDead(_87)<br/>StorageDead(_80)<br/>StorageDead(_77)<br/>StorageDead(_71)<br/>StorageDead(_68)<br/>StorageDead(_67)<br/>StorageDead(_66)<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>StorageDead(_77)<br/>StorageDead(_71)<br/>StorageDead(_68)<br/>StorageDead(_67)<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">_64 = &lt;std::result::Result&lt;(&amp;OraclePriceData, OracleValidity), error::ErrorCode&gt; as Try&gt;::branch(move _65)</td></tr></table>>];
    bb42__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>_91 = discriminant(_64)<br/></td></tr><tr><td align="left">switchInt(move _91)</td></tr></table>>];
    bb43__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageLive(_95)<br/>_95 = ((_64 as Continue).0: (&amp;state::oracle::OraclePriceData, math::oracle::OracleValidity))<br/>_63 = _95<br/>StorageDead(_95)<br/>StorageLive(_61)<br/>_61 = (_63.0: &amp;state::oracle::OraclePriceData)<br/>StorageLive(_62)<br/>_62 = (_63.1: math::oracle::OracleValidity)<br/>StorageDead(_84)<br/>StorageDead(_81)<br/>StorageDead(_78)<br/>StorageDead(_75)<br/>StorageDead(_73)<br/>StorageDead(_72)<br/>StorageDead(_69)<br/>StorageDead(_64)<br/>StorageDead(_63)<br/>StorageLive(_96)<br/>_96 = const false<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>_99 = _19<br/>_98 = Eq(move _99, const 1_u8)<br/></td></tr><tr><td align="left">switchInt(move _98)</td></tr></table>>];
    bb44__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_92)<br/>_92 = ((_64 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_94)<br/>_94 = _92<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _94)</td></tr></table>>];
    bb45__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/>StorageDead(_92)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>_103 = &amp;_50<br/></td></tr><tr><td align="left">_102 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _103)</td></tr></table>>];
    bb47__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>_101 = ((*_102).42: u16)<br/>_100 = Eq(move _101, const 0_u16)<br/></td></tr><tr><td align="left">switchInt(move _100)</td></tr></table>>];
    bb49__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>StorageDead(_101)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>_105 = &amp;(*_36)<br/></td></tr><tr><td align="left">_104 = SpotPosition::is_borrow(move _105)</td></tr></table>>];
    bb50__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left">switchInt(move _104)</td></tr></table>>];
    bb51__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb52__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/>_96 = const true<br/>_97 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>StorageDead(_101)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>_110 = _19<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>_113 = &amp;_50<br/></td></tr><tr><td align="left">_112 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _113)</td></tr></table>>];
    bb55__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_113)<br/>_111 = ((*_112).62: u8)<br/>_109 = Eq(move _110, move _111)<br/></td></tr><tr><td align="left">switchInt(move _109)</td></tr></table>>];
    bb56__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>StorageDead(_111)<br/>StorageDead(_110)<br/>StorageLive(_114)<br/>_114 = ()<br/>_108 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _114)<br/>StorageDead(_114)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb57__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>StorageDead(_111)<br/>StorageDead(_110)<br/>StorageLive(_115)<br/>_115 = error::ErrorCode::InvalidPoolId<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>_1283 = const _<br/>_126 = &amp;(*_1283)<br/>_125 = &amp;(*_126)<br/>_124 = move _125 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_125)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>_134 = &amp;_115<br/>_133 = &amp;(*_134)<br/></td></tr><tr><td align="left">_132 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _133)</td></tr></table>>];
    bb58__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/>_131 = [move _132]<br/>StorageDead(_132)<br/>_130 = &amp;_131<br/>_129 = &amp;(*_130)<br/>_128 = move _129 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_129)<br/></td></tr><tr><td align="left">_123 = Arguments::&lt;'_&gt;::new_v1(move _124, move _128)</td></tr></table>>];
    bb59__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>StorageDead(_124)<br/></td></tr><tr><td align="left">_122 = format(move _123)</td></tr></table>>];
    bb60__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/>StorageDead(_134)<br/>StorageDead(_131)<br/>StorageDead(_130)<br/>StorageDead(_126)<br/>_121 = move _122<br/>StorageDead(_122)<br/>_120 = &amp;_121<br/>_119 = &amp;(*_120)<br/></td></tr><tr><td align="left">_118 = &lt;String as Deref&gt;::deref(move _119)</td></tr></table>>];
    bb61__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">_117 = &amp;(*_118)<br/>StorageDead(_119)<br/></td></tr><tr><td align="left">_116 = solana_program::log::sol_log(move _117)</td></tr></table>>];
    bb62__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/></td></tr><tr><td align="left">drop(_121)</td></tr></table>>];
    bb63__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_121)<br/>StorageDead(_120)<br/>StorageDead(_118)<br/>StorageDead(_116)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>_1282 = const _<br/>_145 = &amp;(*_1282)<br/>_144 = &amp;(*_145)<br/>_143 = move _144 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_144)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>StorageLive(_152)<br/>StorageLive(_153)<br/>_153 = &amp;_19<br/>_152 = &amp;(*_153)<br/></td></tr><tr><td align="left">_151 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u8&gt;(move _152)</td></tr></table>>];
    bb64__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_152)<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>_158 = &amp;_50<br/></td></tr><tr><td align="left">_157 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _158)</td></tr></table>>];
    bb65__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_158)<br/>_156 = &amp;((*_157).62: u8)<br/>_155 = &amp;(*_156)<br/></td></tr><tr><td align="left">_154 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u8&gt;(move _155)</td></tr></table>>];
    bb66__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_155)<br/>_150 = [move _151, move _154]<br/>StorageDead(_154)<br/>StorageDead(_151)<br/>_149 = &amp;_150<br/>_148 = &amp;(*_149)<br/>_147 = move _148 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_148)<br/></td></tr><tr><td align="left">_142 = Arguments::&lt;'_&gt;::new_v1(move _143, move _147)</td></tr></table>>];
    bb67__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_147)<br/>StorageDead(_143)<br/></td></tr><tr><td align="left">_141 = format(move _142)</td></tr></table>>];
    bb68__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_142)<br/>StorageDead(_157)<br/>StorageDead(_156)<br/>StorageDead(_153)<br/>StorageDead(_150)<br/>StorageDead(_149)<br/>StorageDead(_145)<br/>_140 = move _141<br/>StorageDead(_141)<br/>_139 = &amp;_140<br/>_138 = &amp;(*_139)<br/></td></tr><tr><td align="left">_137 = &lt;String as Deref&gt;::deref(move _138)</td></tr></table>>];
    bb69__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">_136 = &amp;(*_137)<br/>StorageDead(_138)<br/></td></tr><tr><td align="left">_135 = solana_program::log::sol_log(move _136)</td></tr></table>>];
    bb70__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_136)<br/></td></tr><tr><td align="left">drop(_140)</td></tr></table>>];
    bb71__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_140)<br/>StorageDead(_139)<br/>StorageDead(_137)<br/>StorageDead(_135)<br/>StorageLive(_159)<br/>_159 = _115<br/>_108 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _159)<br/>StorageDead(_159)<br/>StorageDead(_115)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb72__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/></td></tr><tr><td align="left">_107 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _108)</td></tr></table>>];
    bb73__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/>_160 = discriminant(_107)<br/></td></tr><tr><td align="left">switchInt(move _160)</td></tr></table>>];
    bb74__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageLive(_164)<br/>_164 = ((_107 as Continue).0: ())<br/>_106 = _164<br/>StorageDead(_164)<br/>StorageDead(_107)<br/>StorageDead(_106)<br/>_97 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb75__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageLive(_161)<br/>_161 = ((_107 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_163)<br/>_163 = _161<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _163)</td></tr></table>>];
    bb76__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_163)<br/>StorageDead(_161)<br/>StorageDead(_107)<br/>StorageDead(_106)<br/>StorageDead(_104)<br/>StorageDead(_100)<br/>StorageDead(_98)<br/>StorageDead(_97)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb77__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/>StorageDead(_100)<br/>StorageDead(_98)<br/>StorageDead(_97)<br/>StorageLive(_165)<br/>StorageLive(_166)<br/>StorageLive(_167)<br/>StorageLive(_168)<br/>_168 = _62<br/>StorageLive(_169)<br/>StorageLive(_170)<br/>_170 = DriftAction::MarginCalc<br/>_169 = Option::&lt;DriftAction&gt;::Some(move _170)<br/>StorageDead(_170)<br/></td></tr><tr><td align="left">_167 = is_oracle_valid_for_action(move _168, move _169)</td></tr></table>>];
    bb78__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_169)<br/>StorageDead(_168)<br/></td></tr><tr><td align="left">_166 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _167)</td></tr></table>>];
    bb79__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_167)<br/>_171 = discriminant(_166)<br/></td></tr><tr><td align="left">switchInt(move _171)</td></tr></table>>];
    bb80__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageLive(_175)<br/>_175 = ((_166 as Continue).0: bool)<br/>_165 = _175<br/>StorageDead(_175)<br/>StorageDead(_166)<br/>StorageLive(_176)<br/>StorageLive(_177)<br/>_177 = ((*_61).0: i64)<br/>StorageLive(_178)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>_180 = &amp;_50<br/></td></tr><tr><td align="left">_179 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _180)</td></tr></table>>];
    bb81__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageLive(_172)<br/>_172 = ((_166 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_174)<br/>_174 = _172<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _174)</td></tr></table>>];
    bb82__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_174)<br/>StorageDead(_172)<br/>StorageDead(_166)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb83__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_180)<br/>_178 = (((*_179).5: state::oracle::HistoricalOracleData).4: i64)<br/>StorageLive(_181)<br/>_181 = ((_6.0: state::margin_calculation::MarginContext).2: bool)<br/></td></tr><tr><td align="left">_176 = StrictOraclePrice::new(move _177, move _178, move _181)</td></tr></table>>];
    bb84__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_181)<br/>StorageDead(_178)<br/>StorageDead(_177)<br/>StorageDead(_179)<br/>StorageLive(_182)<br/>StorageLive(_183)<br/>StorageLive(_184)<br/>StorageLive(_185)<br/>_185 = &amp;_176<br/></td></tr><tr><td align="left">_184 = StrictOraclePrice::validate(move _185)</td></tr></table>>];
    bb85__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_185)<br/></td></tr><tr><td align="left">_183 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _184)</td></tr></table>>];
    bb86__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_184)<br/>_186 = discriminant(_183)<br/></td></tr><tr><td align="left">switchInt(move _186)</td></tr></table>>];
    bb87__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageLive(_190)<br/>_190 = ((_183 as Continue).0: ())<br/>_182 = _190<br/>StorageDead(_190)<br/>StorageDead(_183)<br/>StorageDead(_182)<br/>StorageLive(_191)<br/>StorageLive(_192)<br/>StorageLive(_193)<br/>StorageLive(_194)<br/>_194 = &amp;_50<br/></td></tr><tr><td align="left">_193 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _194)</td></tr></table>>];
    bb88__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageLive(_187)<br/>_187 = ((_183 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_189)<br/>_189 = _187<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _189)</td></tr></table>>];
    bb89__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_189)<br/>StorageDead(_187)<br/>StorageDead(_183)<br/>StorageDead(_182)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb90__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_194)<br/>_192 = ((*_193).42: u16)<br/>_191 = Eq(move _192, const 0_u16)<br/></td></tr><tr><td align="left">switchInt(move _191)</td></tr></table>>];
    bb91__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_193)<br/>StorageDead(_192)<br/>StorageLive(_195)<br/>StorageLive(_196)<br/>StorageLive(_197)<br/>StorageLive(_198)<br/>_198 = &amp;(*_36)<br/>StorageLive(_199)<br/>StorageLive(_200)<br/>StorageLive(_201)<br/>StorageLive(_202)<br/>_202 = &amp;_50<br/>_201 = &amp;(*_202)<br/></td></tr><tr><td align="left">_200 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _201)</td></tr></table>>];
    bb92__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">_199 = &amp;(*_200)<br/>StorageDead(_201)<br/></td></tr><tr><td align="left">_197 = SpotPosition::get_signed_token_amount(move _198, move _199)</td></tr></table>>];
    bb93__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_199)<br/>StorageDead(_198)<br/></td></tr><tr><td align="left">_196 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _197)</td></tr></table>>];
    bb94__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_197)<br/>_203 = discriminant(_196)<br/></td></tr><tr><td align="left">switchInt(move _203)</td></tr></table>>];
    bb95__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageLive(_207)<br/>_207 = ((_196 as Continue).0: i128)<br/>_195 = _207<br/>StorageDead(_207)<br/>StorageDead(_202)<br/>StorageDead(_200)<br/>StorageDead(_196)<br/>StorageLive(_208)<br/>StorageLive(_209)<br/>StorageLive(_210)<br/>_210 = _195<br/>_209 = Eq(move _210, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _209)</td></tr></table>>];
    bb96__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageLive(_204)<br/>_204 = ((_196 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_206)<br/>_206 = _204<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _206)</td></tr></table>>];
    bb97__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_206)<br/>StorageDead(_204)<br/>StorageDead(_202)<br/>StorageDead(_200)<br/>StorageDead(_196)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb98__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_210)<br/>StorageLive(_211)<br/>StorageLive(_212)<br/>StorageLive(_213)<br/>StorageLive(_214)<br/>StorageLive(_215)<br/>_215 = ((*_36).0: u64)<br/>_214 = Eq(move _215, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _214)</td></tr></table>>];
    bb99__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageDead(_210)<br/>_208 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb100__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_215)<br/>StorageLive(_216)<br/>_216 = ()<br/>_213 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _216)<br/>StorageDead(_216)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb101__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_215)<br/>StorageLive(_217)<br/>_217 = error::ErrorCode::InvalidMarginRatio<br/>StorageLive(_218)<br/>StorageLive(_219)<br/>StorageLive(_220)<br/>StorageLive(_221)<br/>StorageLive(_222)<br/>StorageLive(_223)<br/>StorageLive(_224)<br/>StorageLive(_225)<br/>StorageLive(_226)<br/>StorageLive(_227)<br/>StorageLive(_228)<br/>_1269 = const _<br/>_228 = &amp;(*_1269)<br/>_227 = &amp;(*_228)<br/>_226 = move _227 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_227)<br/>StorageLive(_230)<br/>StorageLive(_231)<br/>StorageLive(_232)<br/>StorageLive(_233)<br/>StorageLive(_234)<br/>StorageLive(_235)<br/>StorageLive(_236)<br/>_236 = &amp;_217<br/>_235 = &amp;(*_236)<br/></td></tr><tr><td align="left">_234 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _235)</td></tr></table>>];
    bb102__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_235)<br/>_233 = [move _234]<br/>StorageDead(_234)<br/>_232 = &amp;_233<br/>_231 = &amp;(*_232)<br/>_230 = move _231 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_231)<br/></td></tr><tr><td align="left">_225 = Arguments::&lt;'_&gt;::new_v1(move _226, move _230)</td></tr></table>>];
    bb103__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_230)<br/>StorageDead(_226)<br/></td></tr><tr><td align="left">_224 = format(move _225)</td></tr></table>>];
    bb104__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_225)<br/>StorageDead(_236)<br/>StorageDead(_233)<br/>StorageDead(_232)<br/>StorageDead(_228)<br/>_223 = move _224<br/>StorageDead(_224)<br/>_222 = &amp;_223<br/>_221 = &amp;(*_222)<br/></td></tr><tr><td align="left">_220 = &lt;String as Deref&gt;::deref(move _221)</td></tr></table>>];
    bb105__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">_219 = &amp;(*_220)<br/>StorageDead(_221)<br/></td></tr><tr><td align="left">_218 = solana_program::log::sol_log(move _219)</td></tr></table>>];
    bb106__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_219)<br/></td></tr><tr><td align="left">drop(_223)</td></tr></table>>];
    bb107__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_223)<br/>StorageDead(_222)<br/>StorageDead(_220)<br/>StorageDead(_218)<br/>StorageLive(_237)<br/>StorageLive(_238)<br/>StorageLive(_239)<br/>StorageLive(_240)<br/>StorageLive(_241)<br/>StorageLive(_242)<br/>StorageLive(_243)<br/>StorageLive(_244)<br/>StorageLive(_245)<br/>StorageLive(_246)<br/>StorageLive(_247)<br/>_1268 = const _<br/>_247 = &amp;(*_1268)<br/>_246 = &amp;(*_247)<br/>_245 = move _246 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_246)<br/>StorageLive(_249)<br/>StorageLive(_250)<br/>StorageLive(_251)<br/>StorageLive(_252)<br/>StorageLive(_253)<br/>StorageLive(_254)<br/>StorageLive(_255)<br/>_255 = &amp;((*_36).0: u64)<br/>_254 = &amp;(*_255)<br/></td></tr><tr><td align="left">_253 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _254)</td></tr></table>>];
    bb108__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageDead(_254)<br/>StorageLive(_256)<br/>StorageLive(_257)<br/>StorageLive(_258)<br/>_258 = &amp;_195<br/>_257 = &amp;(*_258)<br/></td></tr><tr><td align="left">_256 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i128&gt;(move _257)</td></tr></table>>];
    bb109__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageDead(_257)<br/>_252 = [move _253, move _256]<br/>StorageDead(_256)<br/>StorageDead(_253)<br/>_251 = &amp;_252<br/>_250 = &amp;(*_251)<br/>_249 = move _250 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_250)<br/></td></tr><tr><td align="left">_244 = Arguments::&lt;'_&gt;::new_v1(move _245, move _249)</td></tr></table>>];
    bb110__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_249)<br/>StorageDead(_245)<br/></td></tr><tr><td align="left">_243 = format(move _244)</td></tr></table>>];
    bb111__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_244)<br/>StorageDead(_258)<br/>StorageDead(_255)<br/>StorageDead(_252)<br/>StorageDead(_251)<br/>StorageDead(_247)<br/>_242 = move _243<br/>StorageDead(_243)<br/>_241 = &amp;_242<br/>_240 = &amp;(*_241)<br/></td></tr><tr><td align="left">_239 = &lt;String as Deref&gt;::deref(move _240)</td></tr></table>>];
    bb112__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">_238 = &amp;(*_239)<br/>StorageDead(_240)<br/></td></tr><tr><td align="left">_237 = solana_program::log::sol_log(move _238)</td></tr></table>>];
    bb113__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageDead(_238)<br/></td></tr><tr><td align="left">drop(_242)</td></tr></table>>];
    bb114__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageDead(_242)<br/>StorageDead(_241)<br/>StorageDead(_239)<br/>StorageDead(_237)<br/>StorageLive(_259)<br/>_259 = _217<br/>_213 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _259)<br/>StorageDead(_259)<br/>StorageDead(_217)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb115__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageDead(_214)<br/></td></tr><tr><td align="left">_212 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _213)</td></tr></table>>];
    bb116__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_213)<br/>_260 = discriminant(_212)<br/></td></tr><tr><td align="left">switchInt(move _260)</td></tr></table>>];
    bb117__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageLive(_264)<br/>_264 = ((_212 as Continue).0: ())<br/>_211 = _264<br/>StorageDead(_264)<br/>StorageDead(_212)<br/>StorageDead(_211)<br/>_208 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb118__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageLive(_261)<br/>_261 = ((_212 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_263)<br/>_263 = _261<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _263)</td></tr></table>>];
    bb119__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageDead(_263)<br/>StorageDead(_261)<br/>StorageDead(_212)<br/>StorageDead(_211)<br/>StorageDead(_209)<br/>StorageDead(_208)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb120__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageDead(_209)<br/>StorageDead(_208)<br/>StorageLive(_265)<br/>StorageLive(_266)<br/>StorageLive(_267)<br/>StorageLive(_268)<br/>_268 = &amp;mut _6<br/>StorageLive(_269)<br/>StorageLive(_270)<br/>StorageLive(_271)<br/>StorageLive(_272)<br/>_272 = &amp;_50<br/>_271 = &amp;(*_272)<br/></td></tr><tr><td align="left">_270 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _271)</td></tr></table>>];
    bb121__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">_269 = &amp;(*_270)<br/>StorageDead(_271)<br/>StorageLive(_273)<br/>_273 = _195<br/>StorageLive(_274)<br/>StorageLive(_275)<br/>_275 = &amp;_176<br/>_274 = &amp;(*_275)<br/></td></tr><tr><td align="left">_267 = MarginCalculation::update_fuel_spot_bonus(move _268, move _269, move _273, move _274)</td></tr></table>>];
    bb122__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageDead(_274)<br/>StorageDead(_273)<br/>StorageDead(_269)<br/>StorageDead(_268)<br/></td></tr><tr><td align="left">_266 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _267)</td></tr></table>>];
    bb123__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageDead(_267)<br/>_276 = discriminant(_266)<br/></td></tr><tr><td align="left">switchInt(move _276)</td></tr></table>>];
    bb124__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageLive(_280)<br/>_280 = ((_266 as Continue).0: ())<br/>_265 = _280<br/>StorageDead(_280)<br/>StorageDead(_275)<br/>StorageDead(_272)<br/>StorageDead(_270)<br/>StorageDead(_266)<br/>StorageDead(_265)<br/>StorageLive(_281)<br/>StorageLive(_282)<br/>StorageLive(_283)<br/>StorageLive(_284)<br/>_284 = _195<br/>StorageLive(_285)<br/>StorageLive(_286)<br/>StorageLive(_287)<br/>_287 = &amp;_50<br/></td></tr><tr><td align="left">_286 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _287)</td></tr></table>>];
    bb125__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageLive(_277)<br/>_277 = ((_266 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_279)<br/>_279 = _277<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _279)</td></tr></table>>];
    bb126__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageDead(_279)<br/>StorageDead(_277)<br/>StorageDead(_275)<br/>StorageDead(_272)<br/>StorageDead(_270)<br/>StorageDead(_266)<br/>StorageDead(_265)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb127__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageDead(_287)<br/>_285 = ((*_286).41: u32)<br/>StorageLive(_288)<br/>StorageLive(_289)<br/>_289 = &amp;_176<br/>_288 = &amp;(*_289)<br/></td></tr><tr><td align="left">_283 = get_strict_token_value(move _284, move _285, move _288)</td></tr></table>>];
    bb128__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageDead(_288)<br/>StorageDead(_285)<br/>StorageDead(_284)<br/></td></tr><tr><td align="left">_282 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _283)</td></tr></table>>];
    bb129__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">StorageDead(_283)<br/>_290 = discriminant(_282)<br/></td></tr><tr><td align="left">switchInt(move _290)</td></tr></table>>];
    bb130__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageLive(_294)<br/>_294 = ((_282 as Continue).0: i128)<br/>_281 = _294<br/>StorageDead(_294)<br/>StorageDead(_289)<br/>StorageDead(_286)<br/>StorageDead(_282)<br/>_295 = discriminant(((*_36).5: state::spot_market::SpotBalanceType))<br/></td></tr><tr><td align="left">switchInt(move _295)</td></tr></table>>];
    bb131__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageLive(_291)<br/>_291 = ((_282 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_293)<br/>_293 = _291<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _293)</td></tr></table>>];
    bb132__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageDead(_293)<br/>StorageDead(_291)<br/>StorageDead(_289)<br/>StorageDead(_286)<br/>StorageDead(_282)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb133__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageLive(_335)<br/>StorageLive(_336)<br/>_336 = _281<br/></td></tr><tr><td align="left">_335 = core::num::&lt;impl i128&gt;::unsigned_abs(move _336)</td></tr></table>>];
    bb134__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageLive(_296)<br/>StorageLive(_297)<br/>_297 = ((_6.0: state::margin_calculation::MarginContext).3: bool)<br/></td></tr><tr><td align="left">switchInt(move _297)</td></tr></table>>];
    bb135__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageLive(_298)<br/>_298 = _165<br/></td></tr><tr><td align="left">switchInt(move _298)</td></tr></table>>];
    bb136__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageLive(_299)<br/>StorageLive(_300)<br/>StorageLive(_301)<br/>StorageLive(_302)<br/>StorageLive(_303)<br/>StorageLive(_304)<br/>StorageLive(_305)<br/>StorageLive(_306)<br/>StorageLive(_307)<br/>StorageLive(_308)<br/>StorageLive(_309)<br/>_1267 = const _<br/>_309 = &amp;(*_1267)<br/>_308 = &amp;(*_309)<br/>_307 = move _308 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_308)<br/>StorageLive(_311)<br/>StorageLive(_312)<br/>StorageLive(_313)<br/>StorageLive(_314)<br/>StorageLive(_315)<br/>StorageLive(_316)<br/>StorageLive(_317)<br/>StorageLive(_318)<br/>StorageLive(_319)<br/>_319 = &amp;_50<br/></td></tr><tr><td align="left">_318 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _319)</td></tr></table>>];
    bb137__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">StorageDead(_319)<br/>_317 = &amp;((*_318).42: u16)<br/>_316 = &amp;(*_317)<br/></td></tr><tr><td align="left">_315 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _316)</td></tr></table>>];
    bb138__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">StorageDead(_316)<br/>_314 = [move _315]<br/>StorageDead(_315)<br/>_313 = &amp;_314<br/>_312 = &amp;(*_313)<br/>_311 = move _312 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_312)<br/></td></tr><tr><td align="left">_306 = Arguments::&lt;'_&gt;::new_v1(move _307, move _311)</td></tr></table>>];
    bb139__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">StorageDead(_311)<br/>StorageDead(_307)<br/></td></tr><tr><td align="left">_305 = format(move _306)</td></tr></table>>];
    bb140__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">StorageDead(_306)<br/>StorageDead(_318)<br/>StorageDead(_317)<br/>StorageDead(_314)<br/>StorageDead(_313)<br/>StorageDead(_309)<br/>_304 = move _305<br/>StorageDead(_305)<br/>_303 = &amp;_304<br/>_302 = &amp;(*_303)<br/></td></tr><tr><td align="left">_301 = &lt;String as Deref&gt;::deref(move _302)</td></tr></table>>];
    bb141__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">_300 = &amp;(*_301)<br/>StorageDead(_302)<br/></td></tr><tr><td align="left">_299 = solana_program::log::sol_log(move _300)</td></tr></table>>];
    bb142__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageDead(_300)<br/></td></tr><tr><td align="left">drop(_304)</td></tr></table>>];
    bb143__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageDead(_304)<br/>StorageDead(_303)<br/>StorageDead(_301)<br/>StorageDead(_299)<br/>_281 = const 0_i128<br/>_296 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb144__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">_296 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb145__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageDead(_298)<br/>StorageDead(_297)<br/>StorageDead(_296)<br/>StorageLive(_320)<br/>StorageLive(_321)<br/>_321 = _96<br/></td></tr><tr><td align="left">switchInt(move _321)</td></tr></table>>];
    bb146__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">_281 = const 0_i128<br/>_320 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb147__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left" balign="left">_320 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb148__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left" balign="left">StorageDead(_321)<br/>StorageDead(_320)<br/>StorageLive(_322)<br/>StorageLive(_323)<br/>StorageLive(_324)<br/>StorageLive(_325)<br/>_325 = &amp;mut _6<br/>StorageLive(_326)<br/>_326 = _281<br/></td></tr><tr><td align="left">_324 = MarginCalculation::add_total_collateral(move _325, move _326)</td></tr></table>>];
    bb149__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">149</td></tr><tr><td align="left" balign="left">StorageDead(_326)<br/>StorageDead(_325)<br/></td></tr><tr><td align="left">_323 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _324)</td></tr></table>>];
    bb150__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">150</td></tr><tr><td align="left" balign="left">StorageDead(_324)<br/>_327 = discriminant(_323)<br/></td></tr><tr><td align="left">switchInt(move _327)</td></tr></table>>];
    bb151__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">151</td></tr><tr><td align="left" balign="left">StorageLive(_331)<br/>_331 = ((_323 as Continue).0: ())<br/>_322 = _331<br/>StorageDead(_331)<br/>StorageDead(_323)<br/>StorageDead(_322)<br/>StorageLive(_332)<br/>StorageLive(_333)<br/>_333 = &amp;mut _6<br/>StorageLive(_334)<br/>_334 = _165<br/></td></tr><tr><td align="left">_332 = MarginCalculation::update_all_deposit_oracles_valid(move _333, move _334)</td></tr></table>>];
    bb152__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">152</td></tr><tr><td align="left" balign="left">StorageLive(_328)<br/>_328 = ((_323 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_330)<br/>_330 = _328<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _330)</td></tr></table>>];
    bb153__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">153</td></tr><tr><td align="left" balign="left">StorageDead(_330)<br/>StorageDead(_328)<br/>StorageDead(_323)<br/>StorageDead(_322)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb154__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">154</td></tr><tr><td align="left" balign="left">StorageDead(_334)<br/>StorageDead(_333)<br/>StorageDead(_332)<br/>_30 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb155__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">155</td></tr><tr><td align="left" balign="left">StorageDead(_336)<br/>StorageLive(_337)<br/>StorageLive(_338)<br/>StorageLive(_339)<br/>StorageLive(_340)<br/>StorageLive(_341)<br/>_341 = _335<br/>_340 = Ne(move _341, const 0_u128)<br/></td></tr><tr><td align="left">switchInt(move _340)</td></tr></table>>];
    bb156__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">156</td></tr><tr><td align="left" balign="left">StorageDead(_341)<br/>StorageLive(_342)<br/>_342 = ()<br/>_339 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _342)<br/>StorageDead(_342)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb157__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">157</td></tr><tr><td align="left" balign="left">StorageDead(_341)<br/>StorageLive(_343)<br/>_343 = error::ErrorCode::InvalidMarginRatio<br/>StorageLive(_344)<br/>StorageLive(_345)<br/>StorageLive(_346)<br/>StorageLive(_347)<br/>StorageLive(_348)<br/>StorageLive(_349)<br/>StorageLive(_350)<br/>StorageLive(_351)<br/>StorageLive(_352)<br/>StorageLive(_353)<br/>StorageLive(_354)<br/>_1266 = const _<br/>_354 = &amp;(*_1266)<br/>_353 = &amp;(*_354)<br/>_352 = move _353 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_353)<br/>StorageLive(_356)<br/>StorageLive(_357)<br/>StorageLive(_358)<br/>StorageLive(_359)<br/>StorageLive(_360)<br/>StorageLive(_361)<br/>StorageLive(_362)<br/>_362 = &amp;_343<br/>_361 = &amp;(*_362)<br/></td></tr><tr><td align="left">_360 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _361)</td></tr></table>>];
    bb158__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">158</td></tr><tr><td align="left" balign="left">StorageDead(_361)<br/>_359 = [move _360]<br/>StorageDead(_360)<br/>_358 = &amp;_359<br/>_357 = &amp;(*_358)<br/>_356 = move _357 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_357)<br/></td></tr><tr><td align="left">_351 = Arguments::&lt;'_&gt;::new_v1(move _352, move _356)</td></tr></table>>];
    bb159__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">159</td></tr><tr><td align="left" balign="left">StorageDead(_356)<br/>StorageDead(_352)<br/></td></tr><tr><td align="left">_350 = format(move _351)</td></tr></table>>];
    bb160__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">160</td></tr><tr><td align="left" balign="left">StorageDead(_351)<br/>StorageDead(_362)<br/>StorageDead(_359)<br/>StorageDead(_358)<br/>StorageDead(_354)<br/>_349 = move _350<br/>StorageDead(_350)<br/>_348 = &amp;_349<br/>_347 = &amp;(*_348)<br/></td></tr><tr><td align="left">_346 = &lt;String as Deref&gt;::deref(move _347)</td></tr></table>>];
    bb161__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">161</td></tr><tr><td align="left" balign="left">_345 = &amp;(*_346)<br/>StorageDead(_347)<br/></td></tr><tr><td align="left">_344 = solana_program::log::sol_log(move _345)</td></tr></table>>];
    bb162__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">162</td></tr><tr><td align="left" balign="left">StorageDead(_345)<br/></td></tr><tr><td align="left">drop(_349)</td></tr></table>>];
    bb163__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">163</td></tr><tr><td align="left" balign="left">StorageDead(_349)<br/>StorageDead(_348)<br/>StorageDead(_346)<br/>StorageDead(_344)<br/>StorageLive(_363)<br/>StorageLive(_364)<br/>StorageLive(_365)<br/>StorageLive(_366)<br/>StorageLive(_367)<br/>StorageLive(_368)<br/>StorageLive(_369)<br/>StorageLive(_370)<br/>StorageLive(_371)<br/>StorageLive(_372)<br/>StorageLive(_373)<br/>_1265 = const _<br/>_373 = &amp;(*_1265)<br/>_372 = &amp;(*_373)<br/>_371 = move _372 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_372)<br/>StorageLive(_375)<br/>StorageLive(_376)<br/>StorageLive(_377)<br/>StorageLive(_378)<br/>StorageLive(_379)<br/>StorageLive(_380)<br/>StorageLive(_381)<br/>_381 = &amp;_195<br/>_380 = &amp;(*_381)<br/></td></tr><tr><td align="left">_379 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i128&gt;(move _380)</td></tr></table>>];
    bb164__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">164</td></tr><tr><td align="left" balign="left">StorageDead(_380)<br/>StorageLive(_382)<br/>StorageLive(_383)<br/>StorageLive(_384)<br/>StorageLive(_385)<br/>StorageLive(_386)<br/>_386 = &amp;_50<br/></td></tr><tr><td align="left">_385 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _386)</td></tr></table>>];
    bb165__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">165</td></tr><tr><td align="left" balign="left">StorageDead(_386)<br/>_384 = &amp;((*_385).42: u16)<br/>_383 = &amp;(*_384)<br/></td></tr><tr><td align="left">_382 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _383)</td></tr></table>>];
    bb166__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">166</td></tr><tr><td align="left" balign="left">StorageDead(_383)<br/>_378 = [move _379, move _382]<br/>StorageDead(_382)<br/>StorageDead(_379)<br/>_377 = &amp;_378<br/>_376 = &amp;(*_377)<br/>_375 = move _376 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_376)<br/></td></tr><tr><td align="left">_370 = Arguments::&lt;'_&gt;::new_v1(move _371, move _375)</td></tr></table>>];
    bb167__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">167</td></tr><tr><td align="left" balign="left">StorageDead(_375)<br/>StorageDead(_371)<br/></td></tr><tr><td align="left">_369 = format(move _370)</td></tr></table>>];
    bb168__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">168</td></tr><tr><td align="left" balign="left">StorageDead(_370)<br/>StorageDead(_385)<br/>StorageDead(_384)<br/>StorageDead(_381)<br/>StorageDead(_378)<br/>StorageDead(_377)<br/>StorageDead(_373)<br/>_368 = move _369<br/>StorageDead(_369)<br/>_367 = &amp;_368<br/>_366 = &amp;(*_367)<br/></td></tr><tr><td align="left">_365 = &lt;String as Deref&gt;::deref(move _366)</td></tr></table>>];
    bb169__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">169</td></tr><tr><td align="left" balign="left">_364 = &amp;(*_365)<br/>StorageDead(_366)<br/></td></tr><tr><td align="left">_363 = solana_program::log::sol_log(move _364)</td></tr></table>>];
    bb170__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">170</td></tr><tr><td align="left" balign="left">StorageDead(_364)<br/></td></tr><tr><td align="left">drop(_368)</td></tr></table>>];
    bb171__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">171</td></tr><tr><td align="left" balign="left">StorageDead(_368)<br/>StorageDead(_367)<br/>StorageDead(_365)<br/>StorageDead(_363)<br/>StorageLive(_387)<br/>_387 = _343<br/>_339 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _387)<br/>StorageDead(_387)<br/>StorageDead(_343)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb172__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">172</td></tr><tr><td align="left" balign="left">StorageDead(_340)<br/></td></tr><tr><td align="left">_338 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _339)</td></tr></table>>];
    bb173__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">173</td></tr><tr><td align="left" balign="left">StorageDead(_339)<br/>_388 = discriminant(_338)<br/></td></tr><tr><td align="left">switchInt(move _388)</td></tr></table>>];
    bb174__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">174</td></tr><tr><td align="left" balign="left">StorageLive(_392)<br/>_392 = ((_338 as Continue).0: ())<br/>_337 = _392<br/>StorageDead(_392)<br/>StorageDead(_338)<br/>StorageDead(_337)<br/>StorageLive(_393)<br/>StorageLive(_394)<br/>StorageLive(_395)<br/>StorageLive(_396)<br/>_396 = &amp;mut _6<br/>StorageLive(_397)<br/>_397 = _335<br/>StorageLive(_398)<br/>_398 = _335<br/>StorageLive(_399)<br/></td></tr><tr><td align="left">_399 = MarketIdentifier::spot(const 0_u16)</td></tr></table>>];
    bb175__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">175</td></tr><tr><td align="left" balign="left">StorageLive(_389)<br/>_389 = ((_338 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_391)<br/>_391 = _389<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _391)</td></tr></table>>];
    bb176__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">176</td></tr><tr><td align="left" balign="left">StorageDead(_391)<br/>StorageDead(_389)<br/>StorageDead(_338)<br/>StorageDead(_337)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb177__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">177</td></tr><tr><td align="left">_395 = MarginCalculation::add_margin_requirement(move _396, move _397, move _398, move _399)</td></tr></table>>];
    bb178__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">178</td></tr><tr><td align="left" balign="left">StorageDead(_399)<br/>StorageDead(_398)<br/>StorageDead(_397)<br/>StorageDead(_396)<br/></td></tr><tr><td align="left">_394 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _395)</td></tr></table>>];
    bb179__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">179</td></tr><tr><td align="left" balign="left">StorageDead(_395)<br/>_400 = discriminant(_394)<br/></td></tr><tr><td align="left">switchInt(move _400)</td></tr></table>>];
    bb180__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">180</td></tr><tr><td align="left" balign="left">StorageLive(_404)<br/>_404 = ((_394 as Continue).0: ())<br/>_393 = _404<br/>StorageDead(_404)<br/>StorageDead(_394)<br/>StorageDead(_393)<br/>StorageLive(_405)<br/>StorageLive(_406)<br/>StorageLive(_407)<br/>StorageLive(_408)<br/>_408 = &amp;mut _6<br/></td></tr><tr><td align="left">_407 = MarginCalculation::add_spot_liability(move _408)</td></tr></table>>];
    bb181__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">181</td></tr><tr><td align="left" balign="left">StorageLive(_401)<br/>_401 = ((_394 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_403)<br/>_403 = _401<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _403)</td></tr></table>>];
    bb182__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">182</td></tr><tr><td align="left" balign="left">StorageDead(_403)<br/>StorageDead(_401)<br/>StorageDead(_394)<br/>StorageDead(_393)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb183__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">183</td></tr><tr><td align="left" balign="left">StorageDead(_408)<br/></td></tr><tr><td align="left">_406 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _407)</td></tr></table>>];
    bb184__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">184</td></tr><tr><td align="left" balign="left">StorageDead(_407)<br/>_409 = discriminant(_406)<br/></td></tr><tr><td align="left">switchInt(move _409)</td></tr></table>>];
    bb185__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">185</td></tr><tr><td align="left" balign="left">StorageLive(_413)<br/>_413 = ((_406 as Continue).0: ())<br/>_405 = _413<br/>StorageDead(_413)<br/>StorageDead(_406)<br/>StorageDead(_405)<br/>StorageLive(_414)<br/>StorageLive(_415)<br/>_415 = &amp;mut _6<br/>StorageLive(_416)<br/>_416 = _165<br/></td></tr><tr><td align="left">_414 = MarginCalculation::update_all_liability_oracles_valid(move _415, move _416)</td></tr></table>>];
    bb186__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">186</td></tr><tr><td align="left" balign="left">StorageLive(_410)<br/>_410 = ((_406 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_412)<br/>_412 = _410<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _412)</td></tr></table>>];
    bb187__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">187</td></tr><tr><td align="left" balign="left">StorageDead(_412)<br/>StorageDead(_410)<br/>StorageDead(_406)<br/>StorageDead(_405)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb188__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">188</td></tr><tr><td align="left" balign="left">StorageDead(_416)<br/>StorageDead(_415)<br/>StorageDead(_414)<br/>_30 = const ()<br/>StorageDead(_335)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb189__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">189</td></tr><tr><td align="left" balign="left">StorageDead(_281)<br/>StorageDead(_195)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb190__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">190</td></tr><tr><td align="left" balign="left">StorageDead(_193)<br/>StorageDead(_192)<br/>StorageLive(_417)<br/>StorageLive(_418)<br/>StorageLive(_419)<br/>StorageLive(_420)<br/>_420 = &amp;(*_36)<br/>StorageLive(_421)<br/>StorageLive(_422)<br/>StorageLive(_423)<br/>StorageLive(_424)<br/>_424 = &amp;_50<br/>_423 = &amp;(*_424)<br/></td></tr><tr><td align="left">_422 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _423)</td></tr></table>>];
    bb191__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">191</td></tr><tr><td align="left" balign="left">_421 = &amp;(*_422)<br/>StorageDead(_423)<br/></td></tr><tr><td align="left">_419 = SpotPosition::get_signed_token_amount(move _420, move _421)</td></tr></table>>];
    bb192__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">192</td></tr><tr><td align="left" balign="left">StorageDead(_421)<br/>StorageDead(_420)<br/></td></tr><tr><td align="left">_418 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _419)</td></tr></table>>];
    bb193__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">193</td></tr><tr><td align="left" balign="left">StorageDead(_419)<br/>_425 = discriminant(_418)<br/></td></tr><tr><td align="left">switchInt(move _425)</td></tr></table>>];
    bb194__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">194</td></tr><tr><td align="left" balign="left">StorageLive(_429)<br/>_429 = ((_418 as Continue).0: i128)<br/>_417 = _429<br/>StorageDead(_429)<br/>StorageDead(_424)<br/>StorageDead(_422)<br/>StorageDead(_418)<br/>StorageLive(_430)<br/>StorageLive(_431)<br/>StorageLive(_432)<br/>StorageLive(_433)<br/>_433 = &amp;mut _6<br/>StorageLive(_434)<br/>StorageLive(_435)<br/>StorageLive(_436)<br/>StorageLive(_437)<br/>_437 = &amp;_50<br/>_436 = &amp;(*_437)<br/></td></tr><tr><td align="left">_435 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _436)</td></tr></table>>];
    bb195__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">195</td></tr><tr><td align="left" balign="left">StorageLive(_426)<br/>_426 = ((_418 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_428)<br/>_428 = _426<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _428)</td></tr></table>>];
    bb196__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">196</td></tr><tr><td align="left" balign="left">StorageDead(_428)<br/>StorageDead(_426)<br/>StorageDead(_424)<br/>StorageDead(_422)<br/>StorageDead(_418)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb197__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">197</td></tr><tr><td align="left" balign="left">_434 = &amp;(*_435)<br/>StorageDead(_436)<br/>StorageLive(_438)<br/>_438 = _417<br/>StorageLive(_439)<br/>StorageLive(_440)<br/>_440 = &amp;_176<br/>_439 = &amp;(*_440)<br/></td></tr><tr><td align="left">_432 = MarginCalculation::update_fuel_spot_bonus(move _433, move _434, move _438, move _439)</td></tr></table>>];
    bb198__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">198</td></tr><tr><td align="left" balign="left">StorageDead(_439)<br/>StorageDead(_438)<br/>StorageDead(_434)<br/>StorageDead(_433)<br/></td></tr><tr><td align="left">_431 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _432)</td></tr></table>>];
    bb199__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">199</td></tr><tr><td align="left" balign="left">StorageDead(_432)<br/>_441 = discriminant(_431)<br/></td></tr><tr><td align="left">switchInt(move _441)</td></tr></table>>];
    bb200__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">200</td></tr><tr><td align="left" balign="left">StorageLive(_445)<br/>_445 = ((_431 as Continue).0: ())<br/>_430 = _445<br/>StorageDead(_445)<br/>StorageDead(_440)<br/>StorageDead(_437)<br/>StorageDead(_435)<br/>StorageDead(_431)<br/>StorageDead(_430)<br/>StorageLive(_450)<br/>StorageLive(_451)<br/>StorageLive(_452)<br/>StorageLive(_453)<br/>StorageLive(_454)<br/>StorageLive(_455)<br/>StorageLive(_456)<br/>_456 = &amp;(*_36)<br/>StorageLive(_457)<br/>StorageLive(_458)<br/>StorageLive(_459)<br/>StorageLive(_460)<br/>_460 = &amp;_50<br/>_459 = &amp;(*_460)<br/></td></tr><tr><td align="left">_458 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _459)</td></tr></table>>];
    bb201__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">201</td></tr><tr><td align="left" balign="left">StorageLive(_442)<br/>_442 = ((_431 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_444)<br/>_444 = _442<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _444)</td></tr></table>>];
    bb202__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">202</td></tr><tr><td align="left" balign="left">StorageDead(_444)<br/>StorageDead(_442)<br/>StorageDead(_440)<br/>StorageDead(_437)<br/>StorageDead(_435)<br/>StorageDead(_431)<br/>StorageDead(_430)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb203__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">203</td></tr><tr><td align="left" balign="left">_457 = &amp;(*_458)<br/>StorageDead(_459)<br/>StorageLive(_461)<br/>StorageLive(_462)<br/>_462 = &amp;_176<br/>_461 = &amp;(*_462)<br/>StorageLive(_463)<br/>StorageLive(_464)<br/>_464 = _417<br/>_463 = Option::&lt;i128&gt;::Some(move _464)<br/>StorageDead(_464)<br/>StorageLive(_465)<br/>_465 = (_5.0: math::margin::MarginRequirementType)<br/></td></tr><tr><td align="left">_455 = SpotPosition::get_worst_case_fill_simulation(move _456, move _457, move _461, move _463, move _465)</td></tr></table>>];
    bb204__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">204</td></tr><tr><td align="left" balign="left">StorageDead(_465)<br/>StorageDead(_463)<br/>StorageDead(_461)<br/>StorageDead(_457)<br/>StorageDead(_456)<br/></td></tr><tr><td align="left">_454 = &lt;std::result::Result&lt;OrderFillSimulation, error::ErrorCode&gt; as Try&gt;::branch(move _455)</td></tr></table>>];
    bb205__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">205</td></tr><tr><td align="left" balign="left">StorageDead(_455)<br/>_466 = discriminant(_454)<br/></td></tr><tr><td align="left">switchInt(move _466)</td></tr></table>>];
    bb206__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">206</td></tr><tr><td align="left" balign="left">StorageLive(_470)<br/>_470 = ((_454 as Continue).0: state::user::OrderFillSimulation)<br/>_453 = _470<br/>StorageDead(_470)<br/>StorageLive(_471)<br/>StorageLive(_472)<br/>StorageLive(_473)<br/>StorageLive(_474)<br/>_474 = &amp;_50<br/>_473 = &amp;(*_474)<br/></td></tr><tr><td align="left">_472 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _473)</td></tr></table>>];
    bb207__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">207</td></tr><tr><td align="left" balign="left">StorageLive(_467)<br/>_467 = ((_454 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_469)<br/>_469 = _467<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _469)</td></tr></table>>];
    bb208__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">208</td></tr><tr><td align="left" balign="left">StorageDead(_469)<br/>StorageDead(_467)<br/>StorageDead(_453)<br/>StorageDead(_452)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb209__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">209</td></tr><tr><td align="left" balign="left">_471 = &amp;(*_472)<br/>StorageDead(_473)<br/>StorageLive(_475)<br/>_475 = (_176.0: i64)<br/>StorageLive(_476)<br/>_476 = _8<br/></td></tr><tr><td align="left">_452 = OrderFillSimulation::apply_user_custom_margin_ratio(move _453, move _471, move _475, move _476)</td></tr></table>>];
    bb210__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">210</td></tr><tr><td align="left" balign="left">StorageDead(_476)<br/>StorageDead(_475)<br/>StorageDead(_471)<br/>StorageDead(_453)<br/></td></tr><tr><td align="left">_451 = &lt;std::result::Result&lt;OrderFillSimulation, error::ErrorCode&gt; as Try&gt;::branch(move _452)</td></tr></table>>];
    bb211__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">211</td></tr><tr><td align="left" balign="left">StorageDead(_452)<br/>_477 = discriminant(_451)<br/></td></tr><tr><td align="left">switchInt(move _477)</td></tr></table>>];
    bb212__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">212</td></tr><tr><td align="left" balign="left">StorageLive(_481)<br/>_481 = ((_451 as Continue).0: state::user::OrderFillSimulation)<br/>_450 = _481<br/>StorageDead(_481)<br/>StorageLive(_446)<br/>_446 = (_450.0: i128)<br/>StorageLive(_447)<br/>_447 = (_450.1: i128)<br/>StorageLive(_448)<br/>_448 = (_450.2: i128)<br/>StorageLive(_449)<br/>_449 = (_450.3: i128)<br/>StorageDead(_474)<br/>StorageDead(_472)<br/>StorageDead(_462)<br/>StorageDead(_460)<br/>StorageDead(_458)<br/>StorageDead(_454)<br/>StorageDead(_451)<br/>StorageDead(_450)<br/>StorageLive(_482)<br/>StorageLive(_483)<br/>StorageLive(_484)<br/>_484 = _446<br/>_483 = Eq(move _484, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _483)</td></tr></table>>];
    bb213__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">213</td></tr><tr><td align="left" balign="left">StorageLive(_478)<br/>_478 = ((_451 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_480)<br/>_480 = _478<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _480)</td></tr></table>>];
    bb214__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">214</td></tr><tr><td align="left" balign="left">StorageDead(_480)<br/>StorageDead(_478)<br/>StorageDead(_474)<br/>StorageDead(_472)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb215__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">215</td></tr><tr><td align="left" balign="left">StorageDead(_484)<br/>StorageLive(_485)<br/>StorageLive(_486)<br/>StorageLive(_487)<br/>StorageLive(_488)<br/>StorageLive(_489)<br/>_489 = ((*_36).0: u64)<br/>_488 = Eq(move _489, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _488)</td></tr></table>>];
    bb216__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">216</td></tr><tr><td align="left" balign="left">StorageDead(_484)<br/>_482 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb217__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">217</td></tr><tr><td align="left" balign="left">StorageDead(_489)<br/>StorageLive(_490)<br/>_490 = ()<br/>_487 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _490)<br/>StorageDead(_490)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb218__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">218</td></tr><tr><td align="left" balign="left">StorageDead(_489)<br/>StorageLive(_491)<br/>_491 = error::ErrorCode::InvalidMarginRatio<br/>StorageLive(_492)<br/>StorageLive(_493)<br/>StorageLive(_494)<br/>StorageLive(_495)<br/>StorageLive(_496)<br/>StorageLive(_497)<br/>StorageLive(_498)<br/>StorageLive(_499)<br/>StorageLive(_500)<br/>StorageLive(_501)<br/>StorageLive(_502)<br/>_1281 = const _<br/>_502 = &amp;(*_1281)<br/>_501 = &amp;(*_502)<br/>_500 = move _501 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_501)<br/>StorageLive(_504)<br/>StorageLive(_505)<br/>StorageLive(_506)<br/>StorageLive(_507)<br/>StorageLive(_508)<br/>StorageLive(_509)<br/>StorageLive(_510)<br/>_510 = &amp;_491<br/>_509 = &amp;(*_510)<br/></td></tr><tr><td align="left">_508 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _509)</td></tr></table>>];
    bb219__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">219</td></tr><tr><td align="left" balign="left">StorageDead(_509)<br/>_507 = [move _508]<br/>StorageDead(_508)<br/>_506 = &amp;_507<br/>_505 = &amp;(*_506)<br/>_504 = move _505 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_505)<br/></td></tr><tr><td align="left">_499 = Arguments::&lt;'_&gt;::new_v1(move _500, move _504)</td></tr></table>>];
    bb220__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">220</td></tr><tr><td align="left" balign="left">StorageDead(_504)<br/>StorageDead(_500)<br/></td></tr><tr><td align="left">_498 = format(move _499)</td></tr></table>>];
    bb221__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">221</td></tr><tr><td align="left" balign="left">StorageDead(_499)<br/>StorageDead(_510)<br/>StorageDead(_507)<br/>StorageDead(_506)<br/>StorageDead(_502)<br/>_497 = move _498<br/>StorageDead(_498)<br/>_496 = &amp;_497<br/>_495 = &amp;(*_496)<br/></td></tr><tr><td align="left">_494 = &lt;String as Deref&gt;::deref(move _495)</td></tr></table>>];
    bb222__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">222</td></tr><tr><td align="left" balign="left">_493 = &amp;(*_494)<br/>StorageDead(_495)<br/></td></tr><tr><td align="left">_492 = solana_program::log::sol_log(move _493)</td></tr></table>>];
    bb223__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">223</td></tr><tr><td align="left" balign="left">StorageDead(_493)<br/></td></tr><tr><td align="left">drop(_497)</td></tr></table>>];
    bb224__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">224</td></tr><tr><td align="left" balign="left">StorageDead(_497)<br/>StorageDead(_496)<br/>StorageDead(_494)<br/>StorageDead(_492)<br/>StorageLive(_511)<br/>StorageLive(_512)<br/>StorageLive(_513)<br/>StorageLive(_514)<br/>StorageLive(_515)<br/>StorageLive(_516)<br/>StorageLive(_517)<br/>StorageLive(_518)<br/>StorageLive(_519)<br/>StorageLive(_520)<br/>StorageLive(_521)<br/>_1280 = const _<br/>_521 = &amp;(*_1280)<br/>_520 = &amp;(*_521)<br/>_519 = move _520 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_520)<br/>StorageLive(_523)<br/>StorageLive(_524)<br/>StorageLive(_525)<br/>StorageLive(_526)<br/>StorageLive(_527)<br/>StorageLive(_528)<br/>StorageLive(_529)<br/>_529 = &amp;((*_36).0: u64)<br/>_528 = &amp;(*_529)<br/></td></tr><tr><td align="left">_527 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _528)</td></tr></table>>];
    bb225__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">225</td></tr><tr><td align="left" balign="left">StorageDead(_528)<br/>StorageLive(_530)<br/>StorageLive(_531)<br/>StorageLive(_532)<br/>_532 = &amp;_446<br/>_531 = &amp;(*_532)<br/></td></tr><tr><td align="left">_530 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i128&gt;(move _531)</td></tr></table>>];
    bb226__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">226</td></tr><tr><td align="left" balign="left">StorageDead(_531)<br/>StorageLive(_533)<br/>StorageLive(_534)<br/>StorageLive(_535)<br/>StorageLive(_536)<br/>StorageLive(_537)<br/>_537 = &amp;_50<br/></td></tr><tr><td align="left">_536 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _537)</td></tr></table>>];
    bb227__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">227</td></tr><tr><td align="left" balign="left">StorageDead(_537)<br/>_535 = &amp;((*_536).42: u16)<br/>_534 = &amp;(*_535)<br/></td></tr><tr><td align="left">_533 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _534)</td></tr></table>>];
    bb228__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">228</td></tr><tr><td align="left" balign="left">StorageDead(_534)<br/>_526 = [move _527, move _530, move _533]<br/>StorageDead(_533)<br/>StorageDead(_530)<br/>StorageDead(_527)<br/>_525 = &amp;_526<br/>_524 = &amp;(*_525)<br/>_523 = move _524 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_524)<br/></td></tr><tr><td align="left">_518 = Arguments::&lt;'_&gt;::new_v1(move _519, move _523)</td></tr></table>>];
    bb229__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">229</td></tr><tr><td align="left" balign="left">StorageDead(_523)<br/>StorageDead(_519)<br/></td></tr><tr><td align="left">_517 = format(move _518)</td></tr></table>>];
    bb230__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">230</td></tr><tr><td align="left" balign="left">StorageDead(_518)<br/>StorageDead(_536)<br/>StorageDead(_535)<br/>StorageDead(_532)<br/>StorageDead(_529)<br/>StorageDead(_526)<br/>StorageDead(_525)<br/>StorageDead(_521)<br/>_516 = move _517<br/>StorageDead(_517)<br/>_515 = &amp;_516<br/>_514 = &amp;(*_515)<br/></td></tr><tr><td align="left">_513 = &lt;String as Deref&gt;::deref(move _514)</td></tr></table>>];
    bb231__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">231</td></tr><tr><td align="left" balign="left">_512 = &amp;(*_513)<br/>StorageDead(_514)<br/></td></tr><tr><td align="left">_511 = solana_program::log::sol_log(move _512)</td></tr></table>>];
    bb232__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">232</td></tr><tr><td align="left" balign="left">StorageDead(_512)<br/></td></tr><tr><td align="left">drop(_516)</td></tr></table>>];
    bb233__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">233</td></tr><tr><td align="left" balign="left">StorageDead(_516)<br/>StorageDead(_515)<br/>StorageDead(_513)<br/>StorageDead(_511)<br/>StorageLive(_538)<br/>_538 = _491<br/>_487 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _538)<br/>StorageDead(_538)<br/>StorageDead(_491)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb234__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">234</td></tr><tr><td align="left" balign="left">StorageDead(_488)<br/></td></tr><tr><td align="left">_486 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _487)</td></tr></table>>];
    bb235__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">235</td></tr><tr><td align="left" balign="left">StorageDead(_487)<br/>_539 = discriminant(_486)<br/></td></tr><tr><td align="left">switchInt(move _539)</td></tr></table>>];
    bb236__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">236</td></tr><tr><td align="left" balign="left">StorageLive(_543)<br/>_543 = ((_486 as Continue).0: ())<br/>_485 = _543<br/>StorageDead(_543)<br/>StorageDead(_486)<br/>StorageDead(_485)<br/>_482 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb237__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">237</td></tr><tr><td align="left" balign="left">StorageLive(_540)<br/>_540 = ((_486 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_542)<br/>_542 = _540<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _542)</td></tr></table>>];
    bb238__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">238</td></tr><tr><td align="left" balign="left">StorageDead(_542)<br/>StorageDead(_540)<br/>StorageDead(_486)<br/>StorageDead(_485)<br/>StorageDead(_483)<br/>StorageDead(_482)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb239__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">239</td></tr><tr><td align="left" balign="left">StorageDead(_483)<br/>StorageDead(_482)<br/>StorageLive(_544)<br/>StorageLive(_545)<br/>StorageLive(_546)<br/>StorageLive(_547)<br/>_547 = &amp;mut _6<br/>StorageLive(_548)<br/>StorageLive(_549)<br/>StorageLive(_550)<br/>StorageLive(_551)<br/>_551 = &amp;(*_36)<br/></td></tr><tr><td align="left">_550 = SpotPosition::margin_requirement_for_open_orders(move _551)</td></tr></table>>];
    bb240__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">240</td></tr><tr><td align="left" balign="left">StorageDead(_551)<br/></td></tr><tr><td align="left">_549 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _550)</td></tr></table>>];
    bb241__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">241</td></tr><tr><td align="left" balign="left">StorageDead(_550)<br/>_552 = discriminant(_549)<br/></td></tr><tr><td align="left">switchInt(move _552)</td></tr></table>>];
    bb242__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">242</td></tr><tr><td align="left" balign="left">StorageLive(_556)<br/>_556 = ((_549 as Continue).0: u128)<br/>_548 = _556<br/>StorageDead(_556)<br/>StorageLive(_557)<br/>StorageLive(_558)<br/>StorageLive(_559)<br/>StorageLive(_560)<br/>_560 = &amp;_50<br/></td></tr><tr><td align="left">_559 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _560)</td></tr></table>>];
    bb243__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">243</td></tr><tr><td align="left" balign="left">StorageLive(_553)<br/>_553 = ((_549 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_555)<br/>_555 = _553<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _555)</td></tr></table>>];
    bb244__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">244</td></tr><tr><td align="left" balign="left">StorageDead(_555)<br/>StorageDead(_553)<br/>StorageDead(_548)<br/>StorageDead(_547)<br/>StorageDead(_546)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb245__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">245</td></tr><tr><td align="left" balign="left">StorageDead(_560)<br/>_558 = ((*_559).42: u16)<br/></td></tr><tr><td align="left">_557 = MarketIdentifier::spot(move _558)</td></tr></table>>];
    bb246__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">246</td></tr><tr><td align="left" balign="left">StorageDead(_558)<br/></td></tr><tr><td align="left">_546 = MarginCalculation::add_margin_requirement(move _547, move _548, const 0_u128, move _557)</td></tr></table>>];
    bb247__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">247</td></tr><tr><td align="left" balign="left">StorageDead(_557)<br/>StorageDead(_548)<br/>StorageDead(_547)<br/></td></tr><tr><td align="left">_545 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _546)</td></tr></table>>];
    bb248__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">248</td></tr><tr><td align="left" balign="left">StorageDead(_546)<br/>_561 = discriminant(_545)<br/></td></tr><tr><td align="left">switchInt(move _561)</td></tr></table>>];
    bb249__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">249</td></tr><tr><td align="left" balign="left">StorageLive(_565)<br/>_565 = ((_545 as Continue).0: ())<br/>_544 = _565<br/>StorageDead(_565)<br/>StorageDead(_559)<br/>StorageDead(_549)<br/>StorageDead(_545)<br/>StorageDead(_544)<br/>StorageLive(_566)<br/>StorageLive(_567)<br/>StorageLive(_568)<br/>_568 = &amp;_448<br/>StorageLive(_569)<br/>StorageLive(_570)<br/>_1279 = const _<br/>_570 = &amp;(*_1279)<br/>_569 = &amp;(*_570)<br/></td></tr><tr><td align="left">_567 = &lt;i128 as Ord&gt;::cmp(move _568, move _569)</td></tr></table>>];
    bb250__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">250</td></tr><tr><td align="left" balign="left">StorageLive(_562)<br/>_562 = ((_545 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_564)<br/>_564 = _562<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _564)</td></tr></table>>];
    bb251__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">251</td></tr><tr><td align="left" balign="left">StorageDead(_564)<br/>StorageDead(_562)<br/>StorageDead(_559)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb252__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">252</td></tr><tr><td align="left" balign="left">StorageDead(_569)<br/>StorageDead(_568)<br/>_572 = discriminant(_567)<br/></td></tr><tr><td align="left">switchInt(move _572)</td></tr></table>>];
    bb253__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">253</td></tr><tr><td align="left" balign="left">StorageLive(_767)<br/>StorageLive(_768)<br/>_768 = &amp;(*_36)<br/></td></tr><tr><td align="left">_767 = SpotPosition::has_open_order(move _768)</td></tr></table>>];
    bb254__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">254</td></tr><tr><td align="left" balign="left">StorageLive(_573)<br/>StorageLive(_574)<br/>_574 = ((_6.0: state::margin_calculation::MarginContext).3: bool)<br/></td></tr><tr><td align="left">switchInt(move _574)</td></tr></table>>];
    bb255__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">255</td></tr><tr><td align="left" balign="left">StorageLive(_575)<br/>_575 = _165<br/></td></tr><tr><td align="left">switchInt(move _575)</td></tr></table>>];
    bb256__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">256</td></tr><tr><td align="left" balign="left">StorageLive(_576)<br/>StorageLive(_577)<br/>StorageLive(_578)<br/>StorageLive(_579)<br/>StorageLive(_580)<br/>StorageLive(_581)<br/>StorageLive(_582)<br/>StorageLive(_583)<br/>StorageLive(_584)<br/>StorageLive(_585)<br/>StorageLive(_586)<br/>_1278 = const _<br/>_586 = &amp;(*_1278)<br/>_585 = &amp;(*_586)<br/>_584 = move _585 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_585)<br/>StorageLive(_588)<br/>StorageLive(_589)<br/>StorageLive(_590)<br/>StorageLive(_591)<br/>StorageLive(_592)<br/>StorageLive(_593)<br/>StorageLive(_594)<br/>StorageLive(_595)<br/>StorageLive(_596)<br/>_596 = &amp;_50<br/></td></tr><tr><td align="left">_595 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _596)</td></tr></table>>];
    bb257__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">257</td></tr><tr><td align="left" balign="left">StorageDead(_596)<br/>_594 = &amp;((*_595).42: u16)<br/>_593 = &amp;(*_594)<br/></td></tr><tr><td align="left">_592 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _593)</td></tr></table>>];
    bb258__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">258</td></tr><tr><td align="left" balign="left">StorageDead(_593)<br/>_591 = [move _592]<br/>StorageDead(_592)<br/>_590 = &amp;_591<br/>_589 = &amp;(*_590)<br/>_588 = move _589 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_589)<br/></td></tr><tr><td align="left">_583 = Arguments::&lt;'_&gt;::new_v1(move _584, move _588)</td></tr></table>>];
    bb259__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">259</td></tr><tr><td align="left" balign="left">StorageDead(_588)<br/>StorageDead(_584)<br/></td></tr><tr><td align="left">_582 = format(move _583)</td></tr></table>>];
    bb260__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">260</td></tr><tr><td align="left" balign="left">StorageDead(_583)<br/>StorageDead(_595)<br/>StorageDead(_594)<br/>StorageDead(_591)<br/>StorageDead(_590)<br/>StorageDead(_586)<br/>_581 = move _582<br/>StorageDead(_582)<br/>_580 = &amp;_581<br/>_579 = &amp;(*_580)<br/></td></tr><tr><td align="left">_578 = &lt;String as Deref&gt;::deref(move _579)</td></tr></table>>];
    bb261__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">261</td></tr><tr><td align="left" balign="left">_577 = &amp;(*_578)<br/>StorageDead(_579)<br/></td></tr><tr><td align="left">_576 = solana_program::log::sol_log(move _577)</td></tr></table>>];
    bb262__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">262</td></tr><tr><td align="left" balign="left">StorageDead(_577)<br/></td></tr><tr><td align="left">drop(_581)</td></tr></table>>];
    bb263__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">263</td></tr><tr><td align="left" balign="left">StorageDead(_581)<br/>StorageDead(_580)<br/>StorageDead(_578)<br/>StorageDead(_576)<br/>_449 = const 0_i128<br/>_573 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb264__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">264</td></tr><tr><td align="left" balign="left">_573 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb265__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">265</td></tr><tr><td align="left" balign="left">StorageDead(_575)<br/>StorageDead(_574)<br/>StorageDead(_573)<br/>StorageLive(_597)<br/>StorageLive(_598)<br/>StorageLive(_599)<br/>StorageLive(_600)<br/>_600 = &amp;mut _6<br/>StorageLive(_601)<br/>StorageLive(_602)<br/>StorageLive(_603)<br/>StorageLive(_604)<br/>_604 = _449<br/></td></tr><tr><td align="left">_603 = &lt;i128 as Cast&gt;::cast::&lt;i128&gt;(move _604)</td></tr></table>>];
    bb266__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">266</td></tr><tr><td align="left" balign="left">StorageDead(_604)<br/></td></tr><tr><td align="left">_602 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _603)</td></tr></table>>];
    bb267__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">267</td></tr><tr><td align="left" balign="left">StorageDead(_603)<br/>_605 = discriminant(_602)<br/></td></tr><tr><td align="left">switchInt(move _605)</td></tr></table>>];
    bb268__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">268</td></tr><tr><td align="left" balign="left">StorageLive(_609)<br/>_609 = ((_602 as Continue).0: i128)<br/>_601 = _609<br/>StorageDead(_609)<br/></td></tr><tr><td align="left">_599 = MarginCalculation::add_total_collateral(move _600, move _601)</td></tr></table>>];
    bb269__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">269</td></tr><tr><td align="left" balign="left">StorageLive(_606)<br/>_606 = ((_602 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_608)<br/>_608 = _606<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _608)</td></tr></table>>];
    bb270__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">270</td></tr><tr><td align="left" balign="left">StorageDead(_608)<br/>StorageDead(_606)<br/>StorageDead(_601)<br/>StorageDead(_600)<br/>StorageDead(_599)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb271__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">271</td></tr><tr><td align="left" balign="left">StorageDead(_601)<br/>StorageDead(_600)<br/></td></tr><tr><td align="left">_598 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _599)</td></tr></table>>];
    bb272__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">272</td></tr><tr><td align="left" balign="left">StorageDead(_599)<br/>_610 = discriminant(_598)<br/></td></tr><tr><td align="left">switchInt(move _610)</td></tr></table>>];
    bb273__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">273</td></tr><tr><td align="left" balign="left">StorageLive(_614)<br/>_614 = ((_598 as Continue).0: ())<br/>_597 = _614<br/>StorageDead(_614)<br/>StorageDead(_602)<br/>StorageDead(_598)<br/>StorageDead(_597)<br/>StorageLive(_615)<br/>StorageLive(_616)<br/>_616 = &amp;mut _6<br/>StorageLive(_617)<br/>_617 = _165<br/></td></tr><tr><td align="left">_615 = MarginCalculation::update_all_deposit_oracles_valid(move _616, move _617)</td></tr></table>>];
    bb274__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">274</td></tr><tr><td align="left" balign="left">StorageLive(_611)<br/>_611 = ((_598 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_613)<br/>_613 = _611<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _613)</td></tr></table>>];
    bb275__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">275</td></tr><tr><td align="left" balign="left">StorageDead(_613)<br/>StorageDead(_611)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb276__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">276</td></tr><tr><td align="left" balign="left">StorageDead(_617)<br/>StorageDead(_616)<br/>StorageDead(_615)<br/>_566 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb277__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">277</td></tr><tr><td align="left" balign="left">StorageLive(_618)<br/>StorageLive(_619)<br/>StorageLive(_620)<br/>StorageLive(_621)<br/>StorageLive(_622)<br/>StorageLive(_623)<br/>_623 = _449<br/></td></tr><tr><td align="left">_622 = core::num::&lt;impl i128&gt;::unsigned_abs(move _623)</td></tr></table>>];
    bb278__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">278</td></tr><tr><td align="left" balign="left">StorageDead(_623)<br/>StorageLive(_624)<br/>StorageLive(_625)<br/>_625 = _448<br/></td></tr><tr><td align="left">_624 = core::num::&lt;impl i128&gt;::unsigned_abs(move _625)</td></tr></table>>];
    bb279__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">279</td></tr><tr><td align="left" balign="left">StorageDead(_625)<br/>_621 = Ge(move _622, move _624)<br/></td></tr><tr><td align="left">switchInt(move _621)</td></tr></table>>];
    bb280__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">280</td></tr><tr><td align="left" balign="left">StorageDead(_624)<br/>StorageDead(_622)<br/>StorageLive(_626)<br/>_626 = ()<br/>_620 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _626)<br/>StorageDead(_626)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb281__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">281</td></tr><tr><td align="left" balign="left">StorageDead(_624)<br/>StorageDead(_622)<br/>StorageLive(_627)<br/>_627 = error::ErrorCode::InvalidMarginRatio<br/>StorageLive(_628)<br/>StorageLive(_629)<br/>StorageLive(_630)<br/>StorageLive(_631)<br/>StorageLive(_632)<br/>StorageLive(_633)<br/>StorageLive(_634)<br/>StorageLive(_635)<br/>StorageLive(_636)<br/>StorageLive(_637)<br/>StorageLive(_638)<br/>_1277 = const _<br/>_638 = &amp;(*_1277)<br/>_637 = &amp;(*_638)<br/>_636 = move _637 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_637)<br/>StorageLive(_640)<br/>StorageLive(_641)<br/>StorageLive(_642)<br/>StorageLive(_643)<br/>StorageLive(_644)<br/>StorageLive(_645)<br/>StorageLive(_646)<br/>_646 = &amp;_627<br/>_645 = &amp;(*_646)<br/></td></tr><tr><td align="left">_644 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _645)</td></tr></table>>];
    bb282__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">282</td></tr><tr><td align="left" balign="left">StorageDead(_645)<br/>_643 = [move _644]<br/>StorageDead(_644)<br/>_642 = &amp;_643<br/>_641 = &amp;(*_642)<br/>_640 = move _641 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_641)<br/></td></tr><tr><td align="left">_635 = Arguments::&lt;'_&gt;::new_v1(move _636, move _640)</td></tr></table>>];
    bb283__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">283</td></tr><tr><td align="left" balign="left">StorageDead(_640)<br/>StorageDead(_636)<br/></td></tr><tr><td align="left">_634 = format(move _635)</td></tr></table>>];
    bb284__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">284</td></tr><tr><td align="left" balign="left">StorageDead(_635)<br/>StorageDead(_646)<br/>StorageDead(_643)<br/>StorageDead(_642)<br/>StorageDead(_638)<br/>_633 = move _634<br/>StorageDead(_634)<br/>_632 = &amp;_633<br/>_631 = &amp;(*_632)<br/></td></tr><tr><td align="left">_630 = &lt;String as Deref&gt;::deref(move _631)</td></tr></table>>];
    bb285__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">285</td></tr><tr><td align="left" balign="left">_629 = &amp;(*_630)<br/>StorageDead(_631)<br/></td></tr><tr><td align="left">_628 = solana_program::log::sol_log(move _629)</td></tr></table>>];
    bb286__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">286</td></tr><tr><td align="left" balign="left">StorageDead(_629)<br/></td></tr><tr><td align="left">drop(_633)</td></tr></table>>];
    bb287__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">287</td></tr><tr><td align="left" balign="left">StorageDead(_633)<br/>StorageDead(_632)<br/>StorageDead(_630)<br/>StorageDead(_628)<br/>StorageLive(_647)<br/>StorageLive(_648)<br/>StorageLive(_649)<br/>StorageLive(_650)<br/>StorageLive(_651)<br/>StorageLive(_652)<br/>StorageLive(_653)<br/>StorageLive(_654)<br/>StorageLive(_655)<br/>StorageLive(_656)<br/>StorageLive(_657)<br/>_1276 = const _<br/>_657 = &amp;(*_1276)<br/>_656 = &amp;(*_657)<br/>_655 = move _656 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_656)<br/>StorageLive(_659)<br/>StorageLive(_660)<br/>StorageLive(_661)<br/>StorageLive(_662)<br/>StorageLive(_663)<br/>StorageLive(_664)<br/>StorageLive(_665)<br/>StorageLive(_666)<br/>StorageLive(_667)<br/>_667 = &amp;_50<br/></td></tr><tr><td align="left">_666 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _667)</td></tr></table>>];
    bb288__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">288</td></tr><tr><td align="left" balign="left">StorageDead(_667)<br/>_665 = &amp;((*_666).42: u16)<br/>_664 = &amp;(*_665)<br/></td></tr><tr><td align="left">_663 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _664)</td></tr></table>>];
    bb289__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">289</td></tr><tr><td align="left" balign="left">StorageDead(_664)<br/>_662 = [move _663]<br/>StorageDead(_663)<br/>_661 = &amp;_662<br/>_660 = &amp;(*_661)<br/>_659 = move _660 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_660)<br/></td></tr><tr><td align="left">_654 = Arguments::&lt;'_&gt;::new_v1(move _655, move _659)</td></tr></table>>];
    bb290__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">290</td></tr><tr><td align="left" balign="left">StorageDead(_659)<br/>StorageDead(_655)<br/></td></tr><tr><td align="left">_653 = format(move _654)</td></tr></table>>];
    bb291__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">291</td></tr><tr><td align="left" balign="left">StorageDead(_654)<br/>StorageDead(_666)<br/>StorageDead(_665)<br/>StorageDead(_662)<br/>StorageDead(_661)<br/>StorageDead(_657)<br/>_652 = move _653<br/>StorageDead(_653)<br/>_651 = &amp;_652<br/>_650 = &amp;(*_651)<br/></td></tr><tr><td align="left">_649 = &lt;String as Deref&gt;::deref(move _650)</td></tr></table>>];
    bb292__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">292</td></tr><tr><td align="left" balign="left">_648 = &amp;(*_649)<br/>StorageDead(_650)<br/></td></tr><tr><td align="left">_647 = solana_program::log::sol_log(move _648)</td></tr></table>>];
    bb293__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">293</td></tr><tr><td align="left" balign="left">StorageDead(_648)<br/></td></tr><tr><td align="left">drop(_652)</td></tr></table>>];
    bb294__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">294</td></tr><tr><td align="left" balign="left">StorageDead(_652)<br/>StorageDead(_651)<br/>StorageDead(_649)<br/>StorageDead(_647)<br/>StorageLive(_668)<br/>_668 = _627<br/>_620 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _668)<br/>StorageDead(_668)<br/>StorageDead(_627)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb295__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">295</td></tr><tr><td align="left" balign="left">StorageDead(_621)<br/></td></tr><tr><td align="left">_619 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _620)</td></tr></table>>];
    bb296__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">296</td></tr><tr><td align="left" balign="left">StorageDead(_620)<br/>_669 = discriminant(_619)<br/></td></tr><tr><td align="left">switchInt(move _669)</td></tr></table>>];
    bb297__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">297</td></tr><tr><td align="left" balign="left">StorageLive(_673)<br/>_673 = ((_619 as Continue).0: ())<br/>_618 = _673<br/>StorageDead(_673)<br/>StorageDead(_619)<br/>StorageDead(_618)<br/>StorageLive(_674)<br/>StorageLive(_675)<br/>StorageLive(_676)<br/>StorageLive(_677)<br/>StorageLive(_678)<br/>_678 = _449<br/>_677 = Ne(move _678, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _677)</td></tr></table>>];
    bb298__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">298</td></tr><tr><td align="left" balign="left">StorageLive(_670)<br/>_670 = ((_619 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_672)<br/>_672 = _670<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _672)</td></tr></table>>];
    bb299__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">299</td></tr><tr><td align="left" balign="left">StorageDead(_672)<br/>StorageDead(_670)<br/>StorageDead(_619)<br/>StorageDead(_618)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb300__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">300</td></tr><tr><td align="left" balign="left">StorageDead(_678)<br/>StorageLive(_679)<br/>_679 = ()<br/>_676 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _679)<br/>StorageDead(_679)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb301__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">301</td></tr><tr><td align="left" balign="left">StorageDead(_678)<br/>StorageLive(_680)<br/>_680 = error::ErrorCode::InvalidOracle<br/>StorageLive(_681)<br/>StorageLive(_682)<br/>StorageLive(_683)<br/>StorageLive(_684)<br/>StorageLive(_685)<br/>StorageLive(_686)<br/>StorageLive(_687)<br/>StorageLive(_688)<br/>StorageLive(_689)<br/>StorageLive(_690)<br/>StorageLive(_691)<br/>_1275 = const _<br/>_691 = &amp;(*_1275)<br/>_690 = &amp;(*_691)<br/>_689 = move _690 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_690)<br/>StorageLive(_693)<br/>StorageLive(_694)<br/>StorageLive(_695)<br/>StorageLive(_696)<br/>StorageLive(_697)<br/>StorageLive(_698)<br/>StorageLive(_699)<br/>_699 = &amp;_680<br/>_698 = &amp;(*_699)<br/></td></tr><tr><td align="left">_697 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _698)</td></tr></table>>];
    bb302__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">302</td></tr><tr><td align="left" balign="left">StorageDead(_698)<br/>_696 = [move _697]<br/>StorageDead(_697)<br/>_695 = &amp;_696<br/>_694 = &amp;(*_695)<br/>_693 = move _694 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_694)<br/></td></tr><tr><td align="left">_688 = Arguments::&lt;'_&gt;::new_v1(move _689, move _693)</td></tr></table>>];
    bb303__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">303</td></tr><tr><td align="left" balign="left">StorageDead(_693)<br/>StorageDead(_689)<br/></td></tr><tr><td align="left">_687 = format(move _688)</td></tr></table>>];
    bb304__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">304</td></tr><tr><td align="left" balign="left">StorageDead(_688)<br/>StorageDead(_699)<br/>StorageDead(_696)<br/>StorageDead(_695)<br/>StorageDead(_691)<br/>_686 = move _687<br/>StorageDead(_687)<br/>_685 = &amp;_686<br/>_684 = &amp;(*_685)<br/></td></tr><tr><td align="left">_683 = &lt;String as Deref&gt;::deref(move _684)</td></tr></table>>];
    bb305__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">305</td></tr><tr><td align="left" balign="left">_682 = &amp;(*_683)<br/>StorageDead(_684)<br/></td></tr><tr><td align="left">_681 = solana_program::log::sol_log(move _682)</td></tr></table>>];
    bb306__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">306</td></tr><tr><td align="left" balign="left">StorageDead(_682)<br/></td></tr><tr><td align="left">drop(_686)</td></tr></table>>];
    bb307__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">307</td></tr><tr><td align="left" balign="left">StorageDead(_686)<br/>StorageDead(_685)<br/>StorageDead(_683)<br/>StorageDead(_681)<br/>StorageLive(_700)<br/>StorageLive(_701)<br/>StorageLive(_702)<br/>StorageLive(_703)<br/>StorageLive(_704)<br/>StorageLive(_705)<br/>StorageLive(_706)<br/>StorageLive(_707)<br/>StorageLive(_708)<br/>StorageLive(_709)<br/>StorageLive(_710)<br/>_1274 = const _<br/>_710 = &amp;(*_1274)<br/>_709 = &amp;(*_710)<br/>_708 = move _709 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_709)<br/>StorageLive(_712)<br/>StorageLive(_713)<br/>StorageLive(_714)<br/>StorageLive(_715)<br/>StorageLive(_716)<br/>StorageLive(_717)<br/>StorageLive(_718)<br/>_718 = &amp;_446<br/>_717 = &amp;(*_718)<br/></td></tr><tr><td align="left">_716 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i128&gt;(move _717)</td></tr></table>>];
    bb308__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">308</td></tr><tr><td align="left" balign="left">StorageDead(_717)<br/>StorageLive(_719)<br/>StorageLive(_720)<br/>StorageLive(_721)<br/>StorageLive(_722)<br/>StorageLive(_723)<br/>_723 = &amp;_50<br/></td></tr><tr><td align="left">_722 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _723)</td></tr></table>>];
    bb309__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">309</td></tr><tr><td align="left" balign="left">StorageDead(_723)<br/>_721 = &amp;((*_722).42: u16)<br/>_720 = &amp;(*_721)<br/></td></tr><tr><td align="left">_719 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _720)</td></tr></table>>];
    bb310__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">310</td></tr><tr><td align="left" balign="left">StorageDead(_720)<br/>_715 = [move _716, move _719]<br/>StorageDead(_719)<br/>StorageDead(_716)<br/>_714 = &amp;_715<br/>_713 = &amp;(*_714)<br/>_712 = move _713 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_713)<br/></td></tr><tr><td align="left">_707 = Arguments::&lt;'_&gt;::new_v1(move _708, move _712)</td></tr></table>>];
    bb311__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">311</td></tr><tr><td align="left" balign="left">StorageDead(_712)<br/>StorageDead(_708)<br/></td></tr><tr><td align="left">_706 = format(move _707)</td></tr></table>>];
    bb312__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">312</td></tr><tr><td align="left" balign="left">StorageDead(_707)<br/>StorageDead(_722)<br/>StorageDead(_721)<br/>StorageDead(_718)<br/>StorageDead(_715)<br/>StorageDead(_714)<br/>StorageDead(_710)<br/>_705 = move _706<br/>StorageDead(_706)<br/>_704 = &amp;_705<br/>_703 = &amp;(*_704)<br/></td></tr><tr><td align="left">_702 = &lt;String as Deref&gt;::deref(move _703)</td></tr></table>>];
    bb313__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">313</td></tr><tr><td align="left" balign="left">_701 = &amp;(*_702)<br/>StorageDead(_703)<br/></td></tr><tr><td align="left">_700 = solana_program::log::sol_log(move _701)</td></tr></table>>];
    bb314__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">314</td></tr><tr><td align="left" balign="left">StorageDead(_701)<br/></td></tr><tr><td align="left">drop(_705)</td></tr></table>>];
    bb315__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">315</td></tr><tr><td align="left" balign="left">StorageDead(_705)<br/>StorageDead(_704)<br/>StorageDead(_702)<br/>StorageDead(_700)<br/>StorageLive(_724)<br/>_724 = _680<br/>_676 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _724)<br/>StorageDead(_724)<br/>StorageDead(_680)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb316__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">316</td></tr><tr><td align="left" balign="left">StorageDead(_677)<br/></td></tr><tr><td align="left">_675 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _676)</td></tr></table>>];
    bb317__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">317</td></tr><tr><td align="left" balign="left">StorageDead(_676)<br/>_725 = discriminant(_675)<br/></td></tr><tr><td align="left">switchInt(move _725)</td></tr></table>>];
    bb318__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">318</td></tr><tr><td align="left" balign="left">StorageLive(_729)<br/>_729 = ((_675 as Continue).0: ())<br/>_674 = _729<br/>StorageDead(_729)<br/>StorageDead(_675)<br/>StorageDead(_674)<br/>StorageLive(_730)<br/>StorageLive(_731)<br/>StorageLive(_732)<br/>StorageLive(_733)<br/>_733 = &amp;mut _6<br/>StorageLive(_734)<br/>StorageLive(_735)<br/>_735 = _449<br/></td></tr><tr><td align="left">_734 = core::num::&lt;impl i128&gt;::unsigned_abs(move _735)</td></tr></table>>];
    bb319__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">319</td></tr><tr><td align="left" balign="left">StorageLive(_726)<br/>_726 = ((_675 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_728)<br/>_728 = _726<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _728)</td></tr></table>>];
    bb320__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">320</td></tr><tr><td align="left" balign="left">StorageDead(_728)<br/>StorageDead(_726)<br/>StorageDead(_675)<br/>StorageDead(_674)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb321__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">321</td></tr><tr><td align="left" balign="left">StorageDead(_735)<br/>StorageLive(_736)<br/>StorageLive(_737)<br/>_737 = _448<br/></td></tr><tr><td align="left">_736 = core::num::&lt;impl i128&gt;::unsigned_abs(move _737)</td></tr></table>>];
    bb322__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">322</td></tr><tr><td align="left" balign="left">StorageDead(_737)<br/>StorageLive(_738)<br/>StorageLive(_739)<br/>StorageLive(_740)<br/>StorageLive(_741)<br/>_741 = &amp;_50<br/></td></tr><tr><td align="left">_740 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _741)</td></tr></table>>];
    bb323__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">323</td></tr><tr><td align="left" balign="left">StorageDead(_741)<br/>_739 = ((*_740).42: u16)<br/></td></tr><tr><td align="left">_738 = MarketIdentifier::spot(move _739)</td></tr></table>>];
    bb324__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">324</td></tr><tr><td align="left" balign="left">StorageDead(_739)<br/></td></tr><tr><td align="left">_732 = MarginCalculation::add_margin_requirement(move _733, move _734, move _736, move _738)</td></tr></table>>];
    bb325__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">325</td></tr><tr><td align="left" balign="left">StorageDead(_738)<br/>StorageDead(_736)<br/>StorageDead(_734)<br/>StorageDead(_733)<br/></td></tr><tr><td align="left">_731 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _732)</td></tr></table>>];
    bb326__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">326</td></tr><tr><td align="left" balign="left">StorageDead(_732)<br/>_742 = discriminant(_731)<br/></td></tr><tr><td align="left">switchInt(move _742)</td></tr></table>>];
    bb327__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">327</td></tr><tr><td align="left" balign="left">StorageLive(_746)<br/>_746 = ((_731 as Continue).0: ())<br/>_730 = _746<br/>StorageDead(_746)<br/>StorageDead(_740)<br/>StorageDead(_731)<br/>StorageDead(_730)<br/>StorageLive(_747)<br/>StorageLive(_748)<br/>StorageLive(_749)<br/>StorageLive(_750)<br/>_750 = &amp;mut _6<br/></td></tr><tr><td align="left">_749 = MarginCalculation::add_spot_liability(move _750)</td></tr></table>>];
    bb328__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">328</td></tr><tr><td align="left" balign="left">StorageLive(_743)<br/>_743 = ((_731 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_745)<br/>_745 = _743<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _745)</td></tr></table>>];
    bb329__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">329</td></tr><tr><td align="left" balign="left">StorageDead(_745)<br/>StorageDead(_743)<br/>StorageDead(_740)<br/>StorageDead(_731)<br/>StorageDead(_730)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb330__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">330</td></tr><tr><td align="left" balign="left">StorageDead(_750)<br/></td></tr><tr><td align="left">_748 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _749)</td></tr></table>>];
    bb331__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">331</td></tr><tr><td align="left" balign="left">StorageDead(_749)<br/>_751 = discriminant(_748)<br/></td></tr><tr><td align="left">switchInt(move _751)</td></tr></table>>];
    bb332__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">332</td></tr><tr><td align="left" balign="left">StorageLive(_755)<br/>_755 = ((_748 as Continue).0: ())<br/>_747 = _755<br/>StorageDead(_755)<br/>StorageDead(_748)<br/>StorageDead(_747)<br/>StorageLive(_756)<br/>StorageLive(_757)<br/>_757 = &amp;mut _6<br/>StorageLive(_758)<br/>StorageLive(_759)<br/>StorageLive(_760)<br/>StorageLive(_761)<br/>_761 = &amp;_50<br/></td></tr><tr><td align="left">_760 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _761)</td></tr></table>>];
    bb333__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">333</td></tr><tr><td align="left" balign="left">StorageLive(_752)<br/>_752 = ((_748 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_754)<br/>_754 = _752<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _754)</td></tr></table>>];
    bb334__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">334</td></tr><tr><td align="left" balign="left">StorageDead(_754)<br/>StorageDead(_752)<br/>StorageDead(_748)<br/>StorageDead(_747)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb335__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">335</td></tr><tr><td align="left" balign="left">StorageDead(_761)<br/>_759 = &amp;((*_760).46: state::spot_market::AssetTier)<br/>StorageLive(_762)<br/>_1273 = const _<br/>_762 = &amp;(*_1273)<br/></td></tr><tr><td align="left">_758 = &lt;state::spot_market::AssetTier as PartialEq&gt;::eq(move _759, move _762)</td></tr></table>>];
    bb336__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">336</td></tr><tr><td align="left" balign="left">StorageDead(_762)<br/>StorageDead(_759)<br/></td></tr><tr><td align="left">_756 = MarginCalculation::update_with_spot_isolated_liability(move _757, move _758)</td></tr></table>>];
    bb337__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">337</td></tr><tr><td align="left" balign="left">StorageDead(_758)<br/>StorageDead(_757)<br/>StorageDead(_760)<br/>StorageDead(_756)<br/>StorageLive(_764)<br/>StorageLive(_765)<br/>_765 = &amp;mut _6<br/>StorageLive(_766)<br/>_766 = _165<br/></td></tr><tr><td align="left">_764 = MarginCalculation::update_all_liability_oracles_valid(move _765, move _766)</td></tr></table>>];
    bb338__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">338</td></tr><tr><td align="left" balign="left">StorageDead(_766)<br/>StorageDead(_765)<br/>StorageDead(_764)<br/>_566 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb339__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">339</td></tr><tr><td align="left">switchInt(move _767)</td></tr></table>>];
    bb340__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">340</td></tr><tr><td align="left" balign="left">StorageDead(_768)<br/>StorageLive(_769)<br/>StorageLive(_770)<br/>StorageLive(_771)<br/>StorageLive(_772)<br/>_772 = &amp;mut _6<br/></td></tr><tr><td align="left">_771 = MarginCalculation::add_spot_liability(move _772)</td></tr></table>>];
    bb341__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">341</td></tr><tr><td align="left" balign="left">StorageDead(_772)<br/></td></tr><tr><td align="left">_770 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _771)</td></tr></table>>];
    bb342__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">342</td></tr><tr><td align="left" balign="left">StorageDead(_771)<br/>_773 = discriminant(_770)<br/></td></tr><tr><td align="left">switchInt(move _773)</td></tr></table>>];
    bb343__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">343</td></tr><tr><td align="left" balign="left">StorageLive(_777)<br/>_777 = ((_770 as Continue).0: ())<br/>_769 = _777<br/>StorageDead(_777)<br/>StorageDead(_770)<br/>StorageDead(_769)<br/>StorageLive(_778)<br/>StorageLive(_779)<br/>_779 = &amp;mut _6<br/>StorageLive(_780)<br/>_780 = _165<br/></td></tr><tr><td align="left">_778 = MarginCalculation::update_all_liability_oracles_valid(move _779, move _780)</td></tr></table>>];
    bb344__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">344</td></tr><tr><td align="left" balign="left">StorageLive(_774)<br/>_774 = ((_770 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_776)<br/>_776 = _774<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _776)</td></tr></table>>];
    bb345__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">345</td></tr><tr><td align="left" balign="left">StorageDead(_776)<br/>StorageDead(_774)<br/>StorageDead(_770)<br/>StorageDead(_769)<br/>StorageDead(_767)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb346__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">346</td></tr><tr><td align="left" balign="left">StorageDead(_780)<br/>StorageDead(_779)<br/>StorageDead(_778)<br/>StorageLive(_781)<br/>StorageLive(_782)<br/>_782 = &amp;mut _6<br/>StorageLive(_783)<br/>StorageLive(_784)<br/>StorageLive(_785)<br/>StorageLive(_786)<br/>_786 = &amp;_50<br/></td></tr><tr><td align="left">_785 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _786)</td></tr></table>>];
    bb347__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">347</td></tr><tr><td align="left" balign="left">StorageDead(_786)<br/>_784 = &amp;((*_785).46: state::spot_market::AssetTier)<br/>StorageLive(_787)<br/>_1272 = const _<br/>_787 = &amp;(*_1272)<br/></td></tr><tr><td align="left">_783 = &lt;state::spot_market::AssetTier as PartialEq&gt;::eq(move _784, move _787)</td></tr></table>>];
    bb348__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">348</td></tr><tr><td align="left" balign="left">StorageDead(_787)<br/>StorageDead(_784)<br/></td></tr><tr><td align="left">_781 = MarginCalculation::update_with_spot_isolated_liability(move _782, move _783)</td></tr></table>>];
    bb349__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">349</td></tr><tr><td align="left" balign="left">StorageDead(_783)<br/>StorageDead(_782)<br/>StorageDead(_785)<br/>StorageDead(_781)<br/>_566 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb350__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">350</td></tr><tr><td align="left" balign="left">StorageDead(_768)<br/>_566 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb351__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">351</td></tr><tr><td align="left" balign="left">StorageDead(_767)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb352__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">352</td></tr><tr><td align="left" balign="left">StorageDead(_570)<br/>StorageDead(_567)<br/>StorageDead(_566)<br/>StorageLive(_789)<br/>StorageLive(_790)<br/>_790 = &amp;_447<br/>StorageLive(_791)<br/>StorageLive(_792)<br/>_1271 = const _<br/>_792 = &amp;(*_1271)<br/>_791 = &amp;(*_792)<br/></td></tr><tr><td align="left">_789 = &lt;i128 as Ord&gt;::cmp(move _790, move _791)</td></tr></table>>];
    bb353__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">353</td></tr><tr><td align="left" balign="left">StorageDead(_791)<br/>StorageDead(_790)<br/>_794 = discriminant(_789)<br/></td></tr><tr><td align="left">switchInt(move _794)</td></tr></table>>];
    bb354__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">354</td></tr><tr><td align="left" balign="left">_30 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb355__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">355</td></tr><tr><td align="left" balign="left">StorageLive(_795)<br/>StorageLive(_796)<br/>_796 = ((_6.0: state::margin_calculation::MarginContext).3: bool)<br/></td></tr><tr><td align="left">switchInt(move _796)</td></tr></table>>];
    bb356__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">356</td></tr><tr><td align="left" balign="left">StorageLive(_797)<br/>_797 = _165<br/></td></tr><tr><td align="left">switchInt(move _797)</td></tr></table>>];
    bb357__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">357</td></tr><tr><td align="left" balign="left">StorageLive(_798)<br/>StorageLive(_799)<br/>StorageLive(_800)<br/>StorageLive(_801)<br/>StorageLive(_802)<br/>StorageLive(_803)<br/>StorageLive(_804)<br/>StorageLive(_805)<br/>StorageLive(_806)<br/>StorageLive(_807)<br/>StorageLive(_808)<br/>_1270 = const _<br/>_808 = &amp;(*_1270)<br/>_807 = &amp;(*_808)<br/>_806 = move _807 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_807)<br/>StorageLive(_810)<br/>StorageLive(_811)<br/>StorageLive(_812)<br/>StorageLive(_813)<br/>StorageLive(_814)<br/>StorageLive(_815)<br/>StorageLive(_816)<br/>StorageLive(_817)<br/>StorageLive(_818)<br/>_818 = &amp;_50<br/></td></tr><tr><td align="left">_817 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _818)</td></tr></table>>];
    bb358__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">358</td></tr><tr><td align="left" balign="left">StorageDead(_818)<br/>_816 = &amp;((*_817).42: u16)<br/>_815 = &amp;(*_816)<br/></td></tr><tr><td align="left">_814 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _815)</td></tr></table>>];
    bb359__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">359</td></tr><tr><td align="left" balign="left">StorageDead(_815)<br/>_813 = [move _814]<br/>StorageDead(_814)<br/>_812 = &amp;_813<br/>_811 = &amp;(*_812)<br/>_810 = move _811 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_811)<br/></td></tr><tr><td align="left">_805 = Arguments::&lt;'_&gt;::new_v1(move _806, move _810)</td></tr></table>>];
    bb360__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">360</td></tr><tr><td align="left" balign="left">StorageDead(_810)<br/>StorageDead(_806)<br/></td></tr><tr><td align="left">_804 = format(move _805)</td></tr></table>>];
    bb361__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">361</td></tr><tr><td align="left" balign="left">StorageDead(_805)<br/>StorageDead(_817)<br/>StorageDead(_816)<br/>StorageDead(_813)<br/>StorageDead(_812)<br/>StorageDead(_808)<br/>_803 = move _804<br/>StorageDead(_804)<br/>_802 = &amp;_803<br/>_801 = &amp;(*_802)<br/></td></tr><tr><td align="left">_800 = &lt;String as Deref&gt;::deref(move _801)</td></tr></table>>];
    bb362__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">362</td></tr><tr><td align="left" balign="left">_799 = &amp;(*_800)<br/>StorageDead(_801)<br/></td></tr><tr><td align="left">_798 = solana_program::log::sol_log(move _799)</td></tr></table>>];
    bb363__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">363</td></tr><tr><td align="left" balign="left">StorageDead(_799)<br/></td></tr><tr><td align="left">drop(_803)</td></tr></table>>];
    bb364__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">364</td></tr><tr><td align="left" balign="left">StorageDead(_803)<br/>StorageDead(_802)<br/>StorageDead(_800)<br/>StorageDead(_798)<br/>_447 = const 0_i128<br/>_795 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb365__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">365</td></tr><tr><td align="left" balign="left">_795 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb366__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">366</td></tr><tr><td align="left" balign="left">StorageDead(_797)<br/>StorageDead(_796)<br/>StorageDead(_795)<br/>StorageLive(_819)<br/>StorageLive(_820)<br/>StorageLive(_821)<br/>StorageLive(_822)<br/>_822 = &amp;mut _6<br/>StorageLive(_823)<br/>StorageLive(_824)<br/>StorageLive(_825)<br/>StorageLive(_826)<br/>_826 = _447<br/></td></tr><tr><td align="left">_825 = &lt;i128 as Cast&gt;::cast::&lt;i128&gt;(move _826)</td></tr></table>>];
    bb367__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">367</td></tr><tr><td align="left" balign="left">StorageDead(_826)<br/></td></tr><tr><td align="left">_824 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _825)</td></tr></table>>];
    bb368__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">368</td></tr><tr><td align="left" balign="left">StorageDead(_825)<br/>_827 = discriminant(_824)<br/></td></tr><tr><td align="left">switchInt(move _827)</td></tr></table>>];
    bb369__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">369</td></tr><tr><td align="left" balign="left">StorageLive(_831)<br/>_831 = ((_824 as Continue).0: i128)<br/>_823 = _831<br/>StorageDead(_831)<br/></td></tr><tr><td align="left">_821 = MarginCalculation::add_total_collateral(move _822, move _823)</td></tr></table>>];
    bb370__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">370</td></tr><tr><td align="left" balign="left">StorageLive(_828)<br/>_828 = ((_824 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_830)<br/>_830 = _828<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _830)</td></tr></table>>];
    bb371__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">371</td></tr><tr><td align="left" balign="left">StorageDead(_830)<br/>StorageDead(_828)<br/>StorageDead(_823)<br/>StorageDead(_822)<br/>StorageDead(_821)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb372__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">372</td></tr><tr><td align="left" balign="left">StorageDead(_823)<br/>StorageDead(_822)<br/></td></tr><tr><td align="left">_820 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _821)</td></tr></table>>];
    bb373__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">373</td></tr><tr><td align="left" balign="left">StorageDead(_821)<br/>_832 = discriminant(_820)<br/></td></tr><tr><td align="left">switchInt(move _832)</td></tr></table>>];
    bb374__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">374</td></tr><tr><td align="left" balign="left">StorageLive(_836)<br/>_836 = ((_820 as Continue).0: ())<br/>_819 = _836<br/>StorageDead(_836)<br/>StorageDead(_824)<br/>StorageDead(_820)<br/>StorageDead(_819)<br/>_30 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb375__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">375</td></tr><tr><td align="left" balign="left">StorageLive(_833)<br/>_833 = ((_820 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_835)<br/>_835 = _833<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _835)</td></tr></table>>];
    bb376__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">376</td></tr><tr><td align="left" balign="left">StorageDead(_835)<br/>StorageDead(_833)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb377__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">377</td></tr><tr><td align="left" balign="left">StorageLive(_837)<br/>StorageLive(_838)<br/>StorageLive(_839)<br/>StorageLive(_840)<br/>_840 = &amp;mut _6<br/>StorageLive(_841)<br/>StorageLive(_842)<br/>_842 = _447<br/></td></tr><tr><td align="left">_841 = core::num::&lt;impl i128&gt;::unsigned_abs(move _842)</td></tr></table>>];
    bb378__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">378</td></tr><tr><td align="left" balign="left">StorageDead(_842)<br/>StorageLive(_843)<br/>StorageLive(_844)<br/>_844 = _447<br/></td></tr><tr><td align="left">_843 = core::num::&lt;impl i128&gt;::unsigned_abs(move _844)</td></tr></table>>];
    bb379__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">379</td></tr><tr><td align="left" balign="left">StorageDead(_844)<br/>StorageLive(_845)<br/></td></tr><tr><td align="left">_845 = MarketIdentifier::spot(const 0_u16)</td></tr></table>>];
    bb380__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">380</td></tr><tr><td align="left">_839 = MarginCalculation::add_margin_requirement(move _840, move _841, move _843, move _845)</td></tr></table>>];
    bb381__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">381</td></tr><tr><td align="left" balign="left">StorageDead(_845)<br/>StorageDead(_843)<br/>StorageDead(_841)<br/>StorageDead(_840)<br/></td></tr><tr><td align="left">_838 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _839)</td></tr></table>>];
    bb382__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">382</td></tr><tr><td align="left" balign="left">StorageDead(_839)<br/>_846 = discriminant(_838)<br/></td></tr><tr><td align="left">switchInt(move _846)</td></tr></table>>];
    bb383__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">383</td></tr><tr><td align="left" balign="left">StorageLive(_850)<br/>_850 = ((_838 as Continue).0: ())<br/>_837 = _850<br/>StorageDead(_850)<br/>StorageDead(_838)<br/>StorageDead(_837)<br/>_30 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb384__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">384</td></tr><tr><td align="left" balign="left">StorageLive(_847)<br/>_847 = ((_838 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_849)<br/>_849 = _847<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _849)</td></tr></table>>];
    bb385__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">385</td></tr><tr><td align="left" balign="left">StorageDead(_849)<br/>StorageDead(_847)<br/>StorageDead(_838)<br/>StorageDead(_837)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb386__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">386</td></tr><tr><td align="left" balign="left">StorageDead(_449)<br/>StorageDead(_448)<br/>StorageDead(_447)<br/>StorageDead(_446)<br/>StorageDead(_417)<br/>StorageDead(_792)<br/>StorageDead(_789)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb387__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">387</td></tr><tr><td align="left" balign="left">StorageDead(_191)<br/>StorageDead(_176)<br/>StorageDead(_165)<br/>StorageDead(_96)<br/>StorageDead(_62)<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">drop(_50)</td></tr></table>>];
    bb388__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">388</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageDead(_36)<br/>StorageDead(_33)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/>_29 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb389__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">389</td></tr><tr><td align="left" balign="left">StorageDead(_854)<br/></td></tr><tr><td align="left">_852 = &lt;std::slice::Iter&lt;'_, PerpPosition&gt; as IntoIterator&gt;::into_iter(move _853)</td></tr></table>>];
    bb390__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">390</td></tr><tr><td align="left" balign="left">StorageDead(_853)<br/>StorageLive(_856)<br/>_856 = move _852<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb391__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">391</td></tr><tr><td align="left" balign="left">StorageLive(_857)<br/>StorageLive(_858)<br/>StorageLive(_859)<br/>StorageLive(_860)<br/>_860 = &amp;mut _856<br/>_859 = &amp;mut (*_860)<br/></td></tr><tr><td align="left">_858 = &lt;std::slice::Iter&lt;'_, PerpPosition&gt; as Iterator&gt;::next(move _859)</td></tr></table>>];
    bb392__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">392</td></tr><tr><td align="left" balign="left">StorageDead(_859)<br/>_861 = discriminant(_858)<br/></td></tr><tr><td align="left">switchInt(move _861)</td></tr></table>>];
    bb393__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">393</td></tr><tr><td align="left" balign="left">StorageLive(_863)<br/>_863 = ((_858 as Some).0: &amp;state::user::PerpPosition)<br/>StorageLive(_864)<br/>StorageLive(_865)<br/>StorageLive(_866)<br/>_866 = &amp;(*_863)<br/></td></tr><tr><td align="left">_865 = PerpPosition::is_available(move _866)</td></tr></table>>];
    bb394__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">394</td></tr><tr><td align="left" balign="left">_851 = const ()<br/>StorageDead(_860)<br/>StorageDead(_858)<br/>StorageDead(_857)<br/>StorageDead(_856)<br/>StorageDead(_852)<br/>StorageDead(_851)<br/>StorageLive(_1172)<br/>StorageLive(_1173)<br/>StorageLive(_1174)<br/>StorageLive(_1175)<br/>_1175 = &amp;_6<br/></td></tr><tr><td align="left">_1174 = MarginCalculation::validate_num_spot_liabilities(move _1175)</td></tr></table>>];
    bb395__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">395</td></tr><tr><td align="left">switchInt(move _865)</td></tr></table>>];
    bb396__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">396</td></tr><tr><td align="left" balign="left">StorageDead(_866)<br/>StorageDead(_865)<br/>StorageDead(_864)<br/>StorageDead(_863)<br/>StorageDead(_860)<br/>StorageDead(_858)<br/>StorageDead(_857)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb397__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">397</td></tr><tr><td align="left" balign="left">StorageDead(_866)<br/>_864 = const ()<br/>StorageDead(_865)<br/>StorageDead(_864)<br/>StorageLive(_868)<br/>StorageLive(_869)<br/>StorageLive(_870)<br/>StorageLive(_871)<br/>StorageLive(_872)<br/>_872 = &amp;(*_2)<br/>StorageLive(_873)<br/>StorageLive(_874)<br/>_874 = &amp;((*_863).13: u16)<br/>_873 = &amp;(*_874)<br/></td></tr><tr><td align="left">_871 = PerpMarketMap::&lt;'_&gt;::get_ref(move _872, move _873)</td></tr></table>>];
    bb398__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">398</td></tr><tr><td align="left" balign="left">StorageDead(_873)<br/>StorageDead(_872)<br/></td></tr><tr><td align="left">_870 = &lt;std::result::Result&lt;Ref&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _871)</td></tr></table>>];
    bb399__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">399</td></tr><tr><td align="left" balign="left">StorageDead(_871)<br/>_875 = discriminant(_870)<br/></td></tr><tr><td align="left">switchInt(move _875)</td></tr></table>>];
    bb400__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">400</td></tr><tr><td align="left" balign="left">StorageLive(_879)<br/>_879 = move ((_870 as Continue).0: std::cell::Ref&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_869 = move _879<br/>StorageDead(_879)<br/>_868 = &amp;_869<br/>_1299 = discriminant(_870)<br/>StorageDead(_874)<br/>StorageDead(_870)<br/>StorageLive(_880)<br/>StorageLive(_881)<br/>StorageLive(_882)<br/>StorageLive(_883)<br/>StorageLive(_884)<br/>_884 = _19<br/>StorageLive(_885)<br/>StorageLive(_886)<br/>StorageLive(_887)<br/>_887 = &amp;(*_868)<br/></td></tr><tr><td align="left">_886 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _887)</td></tr></table>>];
    bb401__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">401</td></tr><tr><td align="left" balign="left">StorageLive(_876)<br/>_876 = ((_870 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_878)<br/>_878 = _876<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _878)</td></tr></table>>];
    bb402__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">402</td></tr><tr><td align="left" balign="left">StorageDead(_878)<br/>StorageDead(_876)<br/>_1297 = discriminant(_870)<br/>StorageDead(_874)<br/>StorageDead(_870)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb403__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">403</td></tr><tr><td align="left" balign="left">StorageDead(_887)<br/>_885 = ((*_886).31: u8)<br/>_883 = Eq(move _884, move _885)<br/></td></tr><tr><td align="left">switchInt(move _883)</td></tr></table>>];
    bb404__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">404</td></tr><tr><td align="left" balign="left">StorageDead(_886)<br/>StorageDead(_885)<br/>StorageDead(_884)<br/>StorageLive(_888)<br/>_888 = ()<br/>_882 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _888)<br/>StorageDead(_888)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb405__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">405</td></tr><tr><td align="left" balign="left">StorageDead(_886)<br/>StorageDead(_885)<br/>StorageDead(_884)<br/>StorageLive(_889)<br/>_889 = error::ErrorCode::InvalidPoolId<br/>StorageLive(_890)<br/>StorageLive(_891)<br/>StorageLive(_892)<br/>StorageLive(_893)<br/>StorageLive(_894)<br/>StorageLive(_895)<br/>StorageLive(_896)<br/>StorageLive(_897)<br/>StorageLive(_898)<br/>StorageLive(_899)<br/>StorageLive(_900)<br/>_1288 = const _<br/>_900 = &amp;(*_1288)<br/>_899 = &amp;(*_900)<br/>_898 = move _899 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_899)<br/>StorageLive(_902)<br/>StorageLive(_903)<br/>StorageLive(_904)<br/>StorageLive(_905)<br/>StorageLive(_906)<br/>StorageLive(_907)<br/>StorageLive(_908)<br/>_908 = &amp;_889<br/>_907 = &amp;(*_908)<br/></td></tr><tr><td align="left">_906 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _907)</td></tr></table>>];
    bb406__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">406</td></tr><tr><td align="left" balign="left">StorageDead(_907)<br/>_905 = [move _906]<br/>StorageDead(_906)<br/>_904 = &amp;_905<br/>_903 = &amp;(*_904)<br/>_902 = move _903 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_903)<br/></td></tr><tr><td align="left">_897 = Arguments::&lt;'_&gt;::new_v1(move _898, move _902)</td></tr></table>>];
    bb407__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">407</td></tr><tr><td align="left" balign="left">StorageDead(_902)<br/>StorageDead(_898)<br/></td></tr><tr><td align="left">_896 = format(move _897)</td></tr></table>>];
    bb408__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">408</td></tr><tr><td align="left" balign="left">StorageDead(_897)<br/>StorageDead(_908)<br/>StorageDead(_905)<br/>StorageDead(_904)<br/>StorageDead(_900)<br/>_895 = move _896<br/>StorageDead(_896)<br/>_894 = &amp;_895<br/>_893 = &amp;(*_894)<br/></td></tr><tr><td align="left">_892 = &lt;String as Deref&gt;::deref(move _893)</td></tr></table>>];
    bb409__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">409</td></tr><tr><td align="left" balign="left">_891 = &amp;(*_892)<br/>StorageDead(_893)<br/></td></tr><tr><td align="left">_890 = solana_program::log::sol_log(move _891)</td></tr></table>>];
    bb410__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">410</td></tr><tr><td align="left" balign="left">StorageDead(_891)<br/></td></tr><tr><td align="left">drop(_895)</td></tr></table>>];
    bb411__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">411</td></tr><tr><td align="left" balign="left">StorageDead(_895)<br/>StorageDead(_894)<br/>StorageDead(_892)<br/>StorageDead(_890)<br/>StorageLive(_909)<br/>StorageLive(_910)<br/>StorageLive(_911)<br/>StorageLive(_912)<br/>StorageLive(_913)<br/>StorageLive(_914)<br/>StorageLive(_915)<br/>StorageLive(_916)<br/>StorageLive(_917)<br/>StorageLive(_918)<br/>StorageLive(_919)<br/>_1287 = const _<br/>_919 = &amp;(*_1287)<br/>_918 = &amp;(*_919)<br/>_917 = move _918 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_918)<br/>StorageLive(_921)<br/>StorageLive(_922)<br/>StorageLive(_923)<br/>StorageLive(_924)<br/>StorageLive(_925)<br/>StorageLive(_926)<br/>StorageLive(_927)<br/>_927 = &amp;_19<br/>_926 = &amp;(*_927)<br/></td></tr><tr><td align="left">_925 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u8&gt;(move _926)</td></tr></table>>];
    bb412__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">412</td></tr><tr><td align="left" balign="left">StorageDead(_926)<br/>StorageLive(_928)<br/>StorageLive(_929)<br/>StorageLive(_930)<br/>StorageLive(_931)<br/>StorageLive(_932)<br/>_932 = &amp;(*_868)<br/></td></tr><tr><td align="left">_931 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _932)</td></tr></table>>];
    bb413__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">413</td></tr><tr><td align="left" balign="left">StorageDead(_932)<br/>_930 = &amp;((*_931).31: u8)<br/>_929 = &amp;(*_930)<br/></td></tr><tr><td align="left">_928 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u8&gt;(move _929)</td></tr></table>>];
    bb414__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">414</td></tr><tr><td align="left" balign="left">StorageDead(_929)<br/>_924 = [move _925, move _928]<br/>StorageDead(_928)<br/>StorageDead(_925)<br/>_923 = &amp;_924<br/>_922 = &amp;(*_923)<br/>_921 = move _922 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_922)<br/></td></tr><tr><td align="left">_916 = Arguments::&lt;'_&gt;::new_v1(move _917, move _921)</td></tr></table>>];
    bb415__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">415</td></tr><tr><td align="left" balign="left">StorageDead(_921)<br/>StorageDead(_917)<br/></td></tr><tr><td align="left">_915 = format(move _916)</td></tr></table>>];
    bb416__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">416</td></tr><tr><td align="left" balign="left">StorageDead(_916)<br/>StorageDead(_931)<br/>StorageDead(_930)<br/>StorageDead(_927)<br/>StorageDead(_924)<br/>StorageDead(_923)<br/>StorageDead(_919)<br/>_914 = move _915<br/>StorageDead(_915)<br/>_913 = &amp;_914<br/>_912 = &amp;(*_913)<br/></td></tr><tr><td align="left">_911 = &lt;String as Deref&gt;::deref(move _912)</td></tr></table>>];
    bb417__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">417</td></tr><tr><td align="left" balign="left">_910 = &amp;(*_911)<br/>StorageDead(_912)<br/></td></tr><tr><td align="left">_909 = solana_program::log::sol_log(move _910)</td></tr></table>>];
    bb418__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">418</td></tr><tr><td align="left" balign="left">StorageDead(_910)<br/></td></tr><tr><td align="left">drop(_914)</td></tr></table>>];
    bb419__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">419</td></tr><tr><td align="left" balign="left">StorageDead(_914)<br/>StorageDead(_913)<br/>StorageDead(_911)<br/>StorageDead(_909)<br/>StorageLive(_933)<br/>_933 = _889<br/>_882 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _933)<br/>StorageDead(_933)<br/>StorageDead(_889)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb420__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">420</td></tr><tr><td align="left" balign="left">StorageDead(_883)<br/></td></tr><tr><td align="left">_881 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _882)</td></tr></table>>];
    bb421__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">421</td></tr><tr><td align="left" balign="left">StorageDead(_882)<br/>_934 = discriminant(_881)<br/></td></tr><tr><td align="left">switchInt(move _934)</td></tr></table>>];
    bb422__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">422</td></tr><tr><td align="left" balign="left">StorageLive(_938)<br/>_938 = ((_881 as Continue).0: ())<br/>_880 = _938<br/>StorageDead(_938)<br/>StorageDead(_881)<br/>StorageDead(_880)<br/>StorageLive(_939)<br/>StorageLive(_940)<br/>StorageLive(_941)<br/>StorageLive(_942)<br/>_942 = &amp;(*_3)<br/>StorageLive(_943)<br/>StorageLive(_944)<br/>StorageLive(_945)<br/>StorageLive(_946)<br/>_946 = &amp;(*_868)<br/></td></tr><tr><td align="left">_945 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _946)</td></tr></table>>];
    bb423__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">423</td></tr><tr><td align="left" balign="left">StorageLive(_935)<br/>_935 = ((_881 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_937)<br/>_937 = _935<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _937)</td></tr></table>>];
    bb424__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">424</td></tr><tr><td align="left" balign="left">StorageDead(_937)<br/>StorageDead(_935)<br/>StorageDead(_881)<br/>StorageDead(_880)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb425__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">425</td></tr><tr><td align="left" balign="left">StorageDead(_946)<br/>_944 = &amp;((*_945).26: u16)<br/>_943 = &amp;(*_944)<br/></td></tr><tr><td align="left">_941 = SpotMarketMap::&lt;'_&gt;::get_ref(move _942, move _943)</td></tr></table>>];
    bb426__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">426</td></tr><tr><td align="left" balign="left">StorageDead(_943)<br/>StorageDead(_942)<br/></td></tr><tr><td align="left">_940 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _941)</td></tr></table>>];
    bb427__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">427</td></tr><tr><td align="left" balign="left">StorageDead(_941)<br/>_947 = discriminant(_940)<br/></td></tr><tr><td align="left">switchInt(move _947)</td></tr></table>>];
    bb428__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">428</td></tr><tr><td align="left" balign="left">StorageLive(_951)<br/>_951 = move ((_940 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_1292 = const true<br/>_939 = move _951<br/>StorageDead(_951)<br/>_1303 = discriminant(_940)<br/>StorageDead(_945)<br/>StorageDead(_944)<br/>StorageDead(_940)<br/>StorageLive(_954)<br/>StorageLive(_955)<br/>StorageLive(_956)<br/>StorageLive(_957)<br/>_957 = &amp;mut (*_4)<br/>StorageLive(_958)<br/>_958 = state::user::MarketType::Spot<br/>StorageLive(_959)<br/>StorageLive(_960)<br/>StorageLive(_961)<br/>_961 = &amp;_939<br/></td></tr><tr><td align="left">_960 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _961)</td></tr></table>>];
    bb429__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">429</td></tr><tr><td align="left" balign="left">StorageLive(_948)<br/>_948 = ((_940 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_950)<br/>_950 = _948<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _950)</td></tr></table>>];
    bb430__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">430</td></tr><tr><td align="left" balign="left">StorageDead(_950)<br/>StorageDead(_948)<br/>_1301 = discriminant(_940)<br/>StorageDead(_945)<br/>StorageDead(_944)<br/>StorageDead(_940)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb431__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">431</td></tr><tr><td align="left" balign="left">StorageDead(_961)<br/>_959 = ((*_960).42: u16)<br/>StorageLive(_962)<br/>StorageLive(_963)<br/>StorageLive(_964)<br/>StorageLive(_965)<br/>StorageLive(_966)<br/>StorageLive(_967)<br/>_967 = &amp;_939<br/></td></tr><tr><td align="left">_966 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _967)</td></tr></table>>];
    bb432__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">432</td></tr><tr><td align="left" balign="left">_965 = &amp;(*_966)<br/>StorageDead(_967)<br/></td></tr><tr><td align="left">_964 = SpotMarket::oracle_id(move _965)</td></tr></table>>];
    bb433__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">433</td></tr><tr><td align="left" balign="left">StorageDead(_965)<br/>_963 = &amp;_964<br/>_962 = &amp;(*_963)<br/>StorageLive(_968)<br/>StorageLive(_969)<br/>StorageLive(_970)<br/>_970 = &amp;_939<br/></td></tr><tr><td align="left">_969 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _970)</td></tr></table>>];
    bb434__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">434</td></tr><tr><td align="left" balign="left">StorageDead(_970)<br/>_968 = (((*_969).5: state::oracle::HistoricalOracleData).3: i64)<br/>StorageLive(_971)<br/>StorageLive(_972)<br/>StorageLive(_973)<br/>StorageLive(_974)<br/>StorageLive(_975)<br/>StorageLive(_976)<br/>_976 = &amp;_939<br/></td></tr><tr><td align="left">_975 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _976)</td></tr></table>>];
    bb435__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">435</td></tr><tr><td align="left" balign="left">_974 = &amp;(*_975)<br/>StorageDead(_976)<br/></td></tr><tr><td align="left">_973 = SpotMarket::get_max_confidence_interval_multiplier(move _974)</td></tr></table>>];
    bb436__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">436</td></tr><tr><td align="left" balign="left">StorageDead(_974)<br/></td></tr><tr><td align="left">_972 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _973)</td></tr></table>>];
    bb437__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">437</td></tr><tr><td align="left" balign="left">StorageDead(_973)<br/>_977 = discriminant(_972)<br/></td></tr><tr><td align="left">switchInt(move _977)</td></tr></table>>];
    bb438__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">438</td></tr><tr><td align="left" balign="left">StorageLive(_981)<br/>_981 = ((_972 as Continue).0: u64)<br/>_971 = _981<br/>StorageDead(_981)<br/></td></tr><tr><td align="left">_956 = OracleMap::&lt;'_&gt;::get_price_data_and_validity(move _957, move _958, move _959, move _962, move _968, move _971, const 0_i8)</td></tr></table>>];
    bb439__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">439</td></tr><tr><td align="left" balign="left">StorageLive(_978)<br/>_978 = ((_972 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_980)<br/>_980 = _978<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _980)</td></tr></table>>];
    bb440__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">440</td></tr><tr><td align="left" balign="left">StorageDead(_980)<br/>StorageDead(_978)<br/>StorageDead(_971)<br/>StorageDead(_968)<br/>StorageDead(_962)<br/>StorageDead(_959)<br/>StorageDead(_958)<br/>StorageDead(_957)<br/>StorageDead(_956)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb441__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">441</td></tr><tr><td align="left" balign="left">StorageDead(_971)<br/>StorageDead(_968)<br/>StorageDead(_962)<br/>StorageDead(_959)<br/>StorageDead(_958)<br/>StorageDead(_957)<br/></td></tr><tr><td align="left">_955 = &lt;std::result::Result&lt;(&amp;OraclePriceData, OracleValidity), error::ErrorCode&gt; as Try&gt;::branch(move _956)</td></tr></table>>];
    bb442__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">442</td></tr><tr><td align="left" balign="left">StorageDead(_956)<br/>_982 = discriminant(_955)<br/></td></tr><tr><td align="left">switchInt(move _982)</td></tr></table>>];
    bb443__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">443</td></tr><tr><td align="left" balign="left">StorageLive(_986)<br/>_986 = ((_955 as Continue).0: (&amp;state::oracle::OraclePriceData, math::oracle::OracleValidity))<br/>_954 = _986<br/>StorageDead(_986)<br/>StorageLive(_952)<br/>_952 = (_954.0: &amp;state::oracle::OraclePriceData)<br/>StorageLive(_953)<br/>_953 = (_954.1: math::oracle::OracleValidity)<br/>StorageDead(_975)<br/>StorageDead(_972)<br/>StorageDead(_969)<br/>StorageDead(_966)<br/>StorageDead(_964)<br/>StorageDead(_963)<br/>StorageDead(_960)<br/>StorageDead(_955)<br/>StorageDead(_954)<br/>StorageLive(_987)<br/>StorageLive(_988)<br/>_988 = ((*_952).0: i64)<br/>StorageLive(_989)<br/>StorageLive(_990)<br/>StorageLive(_991)<br/>_991 = &amp;_939<br/></td></tr><tr><td align="left">_990 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _991)</td></tr></table>>];
    bb444__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">444</td></tr><tr><td align="left" balign="left">StorageLive(_983)<br/>_983 = ((_955 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_985)<br/>_985 = _983<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _985)</td></tr></table>>];
    bb445__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">445</td></tr><tr><td align="left" balign="left">StorageDead(_985)<br/>StorageDead(_983)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb446__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">446</td></tr><tr><td align="left" balign="left">StorageDead(_991)<br/>_989 = (((*_990).5: state::oracle::HistoricalOracleData).4: i64)<br/>StorageLive(_992)<br/>_992 = ((_6.0: state::margin_calculation::MarginContext).2: bool)<br/></td></tr><tr><td align="left">_987 = StrictOraclePrice::new(move _988, move _989, move _992)</td></tr></table>>];
    bb447__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">447</td></tr><tr><td align="left" balign="left">StorageDead(_992)<br/>StorageDead(_989)<br/>StorageDead(_988)<br/>StorageDead(_990)<br/>StorageLive(_993)<br/>StorageLive(_994)<br/>_1292 = const false<br/>_994 = move _939<br/></td></tr><tr><td align="left">_993 = std::mem::drop::&lt;Ref&lt;'_, SpotMarket&gt;&gt;(move _994)</td></tr></table>>];
    bb448__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">448</td></tr><tr><td align="left" balign="left">StorageDead(_994)<br/>StorageDead(_993)<br/>StorageLive(_997)<br/>StorageLive(_998)<br/>StorageLive(_999)<br/>StorageLive(_1000)<br/>_1000 = &amp;mut (*_4)<br/>StorageLive(_1001)<br/>_1001 = state::user::MarketType::Perp<br/>StorageLive(_1002)<br/>StorageLive(_1003)<br/>StorageLive(_1004)<br/>_1004 = &amp;(*_868)<br/></td></tr><tr><td align="left">_1003 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _1004)</td></tr></table>>];
    bb449__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">449</td></tr><tr><td align="left" balign="left">StorageDead(_1004)<br/>_1002 = ((*_1003).21: u16)<br/>StorageLive(_1005)<br/>StorageLive(_1006)<br/>StorageLive(_1007)<br/>StorageLive(_1008)<br/>StorageLive(_1009)<br/>StorageLive(_1010)<br/>_1010 = &amp;(*_868)<br/></td></tr><tr><td align="left">_1009 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _1010)</td></tr></table>>];
    bb450__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">450</td></tr><tr><td align="left" balign="left">_1008 = &amp;(*_1009)<br/>StorageDead(_1010)<br/></td></tr><tr><td align="left">_1007 = PerpMarket::oracle_id(move _1008)</td></tr></table>>];
    bb451__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">451</td></tr><tr><td align="left" balign="left">StorageDead(_1008)<br/>_1006 = &amp;_1007<br/>_1005 = &amp;(*_1006)<br/>StorageLive(_1011)<br/>StorageLive(_1012)<br/>StorageLive(_1013)<br/>_1013 = &amp;(*_868)<br/></td></tr><tr><td align="left">_1012 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _1013)</td></tr></table>>];
    bb452__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">452</td></tr><tr><td align="left" balign="left">StorageDead(_1013)<br/>_1011 = ((((*_1012).1: state::perp_market::AMM).1: state::oracle::HistoricalOracleData).3: i64)<br/>StorageLive(_1014)<br/>StorageLive(_1015)<br/>StorageLive(_1016)<br/>StorageLive(_1017)<br/>StorageLive(_1018)<br/>StorageLive(_1019)<br/>_1019 = &amp;(*_868)<br/></td></tr><tr><td align="left">_1018 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _1019)</td></tr></table>>];
    bb453__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">453</td></tr><tr><td align="left" balign="left">_1017 = (*_1018)<br/>StorageDead(_1019)<br/></td></tr><tr><td align="left">_1016 = PerpMarket::get_max_confidence_interval_multiplier(move _1017)</td></tr></table>>];
    bb454__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">454</td></tr><tr><td align="left" balign="left">StorageDead(_1017)<br/></td></tr><tr><td align="left">_1015 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _1016)</td></tr></table>>];
    bb455__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">455</td></tr><tr><td align="left" balign="left">StorageDead(_1016)<br/>_1020 = discriminant(_1015)<br/></td></tr><tr><td align="left">switchInt(move _1020)</td></tr></table>>];
    bb456__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">456</td></tr><tr><td align="left" balign="left">StorageLive(_1024)<br/>_1024 = ((_1015 as Continue).0: u64)<br/>_1014 = _1024<br/>StorageDead(_1024)<br/></td></tr><tr><td align="left">_999 = OracleMap::&lt;'_&gt;::get_price_data_and_validity(move _1000, move _1001, move _1002, move _1005, move _1011, move _1014, const 0_i8)</td></tr></table>>];
    bb457__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">457</td></tr><tr><td align="left" balign="left">StorageLive(_1021)<br/>_1021 = ((_1015 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1023)<br/>_1023 = _1021<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1023)</td></tr></table>>];
    bb458__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">458</td></tr><tr><td align="left" balign="left">StorageDead(_1023)<br/>StorageDead(_1021)<br/>StorageDead(_1014)<br/>StorageDead(_1011)<br/>StorageDead(_1005)<br/>StorageDead(_1002)<br/>StorageDead(_1001)<br/>StorageDead(_1000)<br/>StorageDead(_999)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb459__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">459</td></tr><tr><td align="left" balign="left">StorageDead(_1014)<br/>StorageDead(_1011)<br/>StorageDead(_1005)<br/>StorageDead(_1002)<br/>StorageDead(_1001)<br/>StorageDead(_1000)<br/></td></tr><tr><td align="left">_998 = &lt;std::result::Result&lt;(&amp;OraclePriceData, OracleValidity), error::ErrorCode&gt; as Try&gt;::branch(move _999)</td></tr></table>>];
    bb460__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">460</td></tr><tr><td align="left" balign="left">StorageDead(_999)<br/>_1025 = discriminant(_998)<br/></td></tr><tr><td align="left">switchInt(move _1025)</td></tr></table>>];
    bb461__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">461</td></tr><tr><td align="left" balign="left">StorageLive(_1029)<br/>_1029 = ((_998 as Continue).0: (&amp;state::oracle::OraclePriceData, math::oracle::OracleValidity))<br/>_997 = _1029<br/>StorageDead(_1029)<br/>StorageLive(_995)<br/>_995 = (_997.0: &amp;state::oracle::OraclePriceData)<br/>StorageLive(_996)<br/>_996 = (_997.1: math::oracle::OracleValidity)<br/>StorageDead(_1018)<br/>StorageDead(_1015)<br/>StorageDead(_1012)<br/>StorageDead(_1009)<br/>StorageDead(_1007)<br/>StorageDead(_1006)<br/>StorageDead(_1003)<br/>StorageDead(_998)<br/>StorageDead(_997)<br/>StorageLive(_1030)<br/>StorageLive(_1031)<br/>StorageLive(_1032)<br/>_1032 = &amp;(_5.0: math::margin::MarginRequirementType)<br/>StorageLive(_1033)<br/>_1286 = const _<br/>_1033 = &amp;(*_1286)<br/></td></tr><tr><td align="left">_1031 = &lt;math::margin::MarginRequirementType as PartialEq&gt;::eq(move _1032, move _1033)</td></tr></table>>];
    bb462__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">462</td></tr><tr><td align="left" balign="left">StorageLive(_1026)<br/>_1026 = ((_998 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1028)<br/>_1028 = _1026<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1028)</td></tr></table>>];
    bb463__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">463</td></tr><tr><td align="left" balign="left">StorageDead(_1028)<br/>StorageDead(_1026)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb464__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">464</td></tr><tr><td align="left">switchInt(move _1031)</td></tr></table>>];
    bb465__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">465</td></tr><tr><td align="left" balign="left">StorageDead(_1033)<br/>StorageDead(_1032)<br/>StorageLive(_1035)<br/>_1035 = ((*_863).12: u16)<br/>_1030 = move _1035 as u32 (IntToInt)<br/>StorageDead(_1035)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb466__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">466</td></tr><tr><td align="left" balign="left">StorageDead(_1033)<br/>StorageDead(_1032)<br/>_1030 = const 0_u32<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb467__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">467</td></tr><tr><td align="left" balign="left">StorageDead(_1031)<br/>StorageLive(_1041)<br/>StorageLive(_1042)<br/>StorageLive(_1043)<br/>StorageLive(_1044)<br/>_1044 = &amp;(*_863)<br/>StorageLive(_1045)<br/>StorageLive(_1046)<br/>StorageLive(_1047)<br/>_1047 = &amp;(*_868)<br/></td></tr><tr><td align="left">_1046 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _1047)</td></tr></table>>];
    bb468__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">468</td></tr><tr><td align="left" balign="left">_1045 = &amp;(*_1046)<br/>StorageDead(_1047)<br/>StorageLive(_1048)<br/>_1048 = &amp;(*_995)<br/>StorageLive(_1049)<br/>StorageLive(_1050)<br/>_1050 = &amp;_987<br/>_1049 = &amp;(*_1050)<br/>StorageLive(_1051)<br/>_1051 = (_5.0: math::margin::MarginRequirementType)<br/>StorageLive(_1052)<br/>StorageLive(_1053)<br/>_1053 = _8<br/>StorageLive(_1054)<br/>_1054 = _1030<br/></td></tr><tr><td align="left">_1052 = &lt;u32 as Ord&gt;::max(move _1053, move _1054)</td></tr></table>>];
    bb469__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">469</td></tr><tr><td align="left" balign="left">StorageDead(_1054)<br/>StorageDead(_1053)<br/>StorageLive(_1055)<br/>_1055 = _20<br/>StorageLive(_1056)<br/>StorageLive(_1057)<br/>_1057 = &amp;_6<br/></td></tr><tr><td align="left">_1056 = MarginCalculation::track_open_orders_fraction(move _1057)</td></tr></table>>];
    bb470__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">470</td></tr><tr><td align="left" balign="left">StorageDead(_1057)<br/></td></tr><tr><td align="left">_1043 = calculate_perp_position_value_and_pnl(move _1044, move _1045, move _1048, move _1049, move _1051, move _1052, move _1055, move _1056)</td></tr></table>>];
    bb471__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">471</td></tr><tr><td align="left" balign="left">StorageDead(_1056)<br/>StorageDead(_1055)<br/>StorageDead(_1052)<br/>StorageDead(_1051)<br/>StorageDead(_1049)<br/>StorageDead(_1048)<br/>StorageDead(_1045)<br/>StorageDead(_1044)<br/></td></tr><tr><td align="left">_1042 = &lt;std::result::Result&lt;(u128, i128, u128, u128, u128), error::ErrorCode&gt; as Try&gt;::branch(move _1043)</td></tr></table>>];
    bb472__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">472</td></tr><tr><td align="left" balign="left">StorageDead(_1043)<br/>_1058 = discriminant(_1042)<br/></td></tr><tr><td align="left">switchInt(move _1058)</td></tr></table>>];
    bb473__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">473</td></tr><tr><td align="left" balign="left">StorageLive(_1062)<br/>_1062 = ((_1042 as Continue).0: (u128, i128, u128, u128, u128))<br/>_1041 = _1062<br/>StorageDead(_1062)<br/>StorageLive(_1036)<br/>_1036 = (_1041.0: u128)<br/>StorageLive(_1037)<br/>_1037 = (_1041.1: i128)<br/>StorageLive(_1038)<br/>_1038 = (_1041.2: u128)<br/>StorageLive(_1039)<br/>_1039 = (_1041.3: u128)<br/>StorageLive(_1040)<br/>_1040 = (_1041.4: u128)<br/>StorageDead(_1050)<br/>StorageDead(_1046)<br/>StorageDead(_1042)<br/>StorageDead(_1041)<br/>StorageLive(_1063)<br/>StorageLive(_1064)<br/>StorageLive(_1065)<br/>StorageLive(_1066)<br/>_1066 = &amp;mut _6<br/>StorageLive(_1067)<br/>StorageLive(_1068)<br/>StorageLive(_1069)<br/>_1069 = &amp;(*_868)<br/></td></tr><tr><td align="left">_1068 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _1069)</td></tr></table>>];
    bb474__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">474</td></tr><tr><td align="left" balign="left">StorageLive(_1059)<br/>_1059 = ((_1042 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1061)<br/>_1061 = _1059<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1061)</td></tr></table>>];
    bb475__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">475</td></tr><tr><td align="left" balign="left">StorageDead(_1061)<br/>StorageDead(_1059)<br/>StorageDead(_1050)<br/>StorageDead(_1046)<br/>StorageDead(_1042)<br/>StorageDead(_1041)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb476__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">476</td></tr><tr><td align="left" balign="left">_1067 = &amp;(*_1068)<br/>StorageDead(_1069)<br/>StorageLive(_1070)<br/>_1070 = &amp;(*_863)<br/>StorageLive(_1071)<br/>_1071 = _1040<br/>StorageLive(_1072)<br/>_1072 = ((*_995).0: i64)<br/></td></tr><tr><td align="left">_1065 = MarginCalculation::update_fuel_perp_bonus(move _1066, move _1067, move _1070, move _1071, move _1072)</td></tr></table>>];
    bb477__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">477</td></tr><tr><td align="left" balign="left">StorageDead(_1072)<br/>StorageDead(_1071)<br/>StorageDead(_1070)<br/>StorageDead(_1067)<br/>StorageDead(_1066)<br/></td></tr><tr><td align="left">_1064 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _1065)</td></tr></table>>];
    bb478__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">478</td></tr><tr><td align="left" balign="left">StorageDead(_1065)<br/>_1073 = discriminant(_1064)<br/></td></tr><tr><td align="left">switchInt(move _1073)</td></tr></table>>];
    bb479__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">479</td></tr><tr><td align="left" balign="left">StorageLive(_1077)<br/>_1077 = ((_1064 as Continue).0: ())<br/>_1063 = _1077<br/>StorageDead(_1077)<br/>StorageDead(_1068)<br/>StorageDead(_1064)<br/>StorageDead(_1063)<br/>StorageLive(_1078)<br/>StorageLive(_1079)<br/>StorageLive(_1080)<br/>StorageLive(_1081)<br/>_1081 = &amp;mut _6<br/>StorageLive(_1082)<br/>_1082 = _1036<br/>StorageLive(_1083)<br/>_1083 = _1038<br/>StorageLive(_1084)<br/>StorageLive(_1085)<br/>StorageLive(_1086)<br/>StorageLive(_1087)<br/>_1087 = &amp;(*_868)<br/></td></tr><tr><td align="left">_1086 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _1087)</td></tr></table>>];
    bb480__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">480</td></tr><tr><td align="left" balign="left">StorageLive(_1074)<br/>_1074 = ((_1064 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1076)<br/>_1076 = _1074<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1076)</td></tr></table>>];
    bb481__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">481</td></tr><tr><td align="left" balign="left">StorageDead(_1076)<br/>StorageDead(_1074)<br/>StorageDead(_1068)<br/>StorageDead(_1064)<br/>StorageDead(_1063)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb482__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">482</td></tr><tr><td align="left" balign="left">StorageDead(_1087)<br/>_1085 = ((*_1086).21: u16)<br/></td></tr><tr><td align="left">_1084 = MarketIdentifier::perp(move _1085)</td></tr></table>>];
    bb483__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">483</td></tr><tr><td align="left" balign="left">StorageDead(_1085)<br/></td></tr><tr><td align="left">_1080 = MarginCalculation::add_margin_requirement(move _1081, move _1082, move _1083, move _1084)</td></tr></table>>];
    bb484__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">484</td></tr><tr><td align="left" balign="left">StorageDead(_1084)<br/>StorageDead(_1083)<br/>StorageDead(_1082)<br/>StorageDead(_1081)<br/></td></tr><tr><td align="left">_1079 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _1080)</td></tr></table>>];
    bb485__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">485</td></tr><tr><td align="left" balign="left">StorageDead(_1080)<br/>_1088 = discriminant(_1079)<br/></td></tr><tr><td align="left">switchInt(move _1088)</td></tr></table>>];
    bb486__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">486</td></tr><tr><td align="left" balign="left">StorageLive(_1092)<br/>_1092 = ((_1079 as Continue).0: ())<br/>_1078 = _1092<br/>StorageDead(_1092)<br/>StorageDead(_1086)<br/>StorageDead(_1079)<br/>StorageDead(_1078)<br/>StorageLive(_1093)<br/>StorageLive(_1094)<br/>StorageLive(_1095)<br/>_1095 = &amp;_6<br/></td></tr><tr><td align="left">_1094 = MarginCalculation::track_open_orders_fraction(move _1095)</td></tr></table>>];
    bb487__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">487</td></tr><tr><td align="left" balign="left">StorageLive(_1089)<br/>_1089 = ((_1079 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1091)<br/>_1091 = _1089<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1091)</td></tr></table>>];
    bb488__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">488</td></tr><tr><td align="left" balign="left">StorageDead(_1091)<br/>StorageDead(_1089)<br/>StorageDead(_1086)<br/>StorageDead(_1079)<br/>StorageDead(_1078)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb489__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">489</td></tr><tr><td align="left">switchInt(move _1094)</td></tr></table>>];
    bb490__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">490</td></tr><tr><td align="left" balign="left">StorageDead(_1095)<br/>StorageLive(_1096)<br/>StorageLive(_1097)<br/>StorageLive(_1098)<br/>StorageLive(_1099)<br/>_1099 = &amp;mut _6<br/>StorageLive(_1100)<br/>_1100 = _1039<br/></td></tr><tr><td align="left">_1098 = MarginCalculation::add_open_orders_margin_requirement(move _1099, move _1100)</td></tr></table>>];
    bb491__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">491</td></tr><tr><td align="left" balign="left">StorageDead(_1100)<br/>StorageDead(_1099)<br/></td></tr><tr><td align="left">_1097 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _1098)</td></tr></table>>];
    bb492__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">492</td></tr><tr><td align="left" balign="left">StorageDead(_1098)<br/>_1101 = discriminant(_1097)<br/></td></tr><tr><td align="left">switchInt(move _1101)</td></tr></table>>];
    bb493__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">493</td></tr><tr><td align="left" balign="left">StorageLive(_1105)<br/>_1105 = ((_1097 as Continue).0: ())<br/>_1096 = _1105<br/>StorageDead(_1105)<br/>StorageDead(_1097)<br/>StorageDead(_1096)<br/>_1093 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb494__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">494</td></tr><tr><td align="left" balign="left">StorageLive(_1102)<br/>_1102 = ((_1097 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1104)<br/>_1104 = _1102<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1104)</td></tr></table>>];
    bb495__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">495</td></tr><tr><td align="left" balign="left">StorageDead(_1104)<br/>StorageDead(_1102)<br/>StorageDead(_1097)<br/>StorageDead(_1096)<br/>StorageDead(_1094)<br/>StorageDead(_1093)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb496__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">496</td></tr><tr><td align="left" balign="left">StorageDead(_1095)<br/>_1093 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb497__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">497</td></tr><tr><td align="left" balign="left">StorageDead(_1094)<br/>StorageDead(_1093)<br/>StorageLive(_1106)<br/>StorageLive(_1107)<br/>StorageLive(_1108)<br/>StorageLive(_1109)<br/>_1109 = &amp;mut _6<br/>StorageLive(_1110)<br/>_1110 = _1037<br/></td></tr><tr><td align="left">_1108 = MarginCalculation::add_total_collateral(move _1109, move _1110)</td></tr></table>>];
    bb498__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">498</td></tr><tr><td align="left" balign="left">StorageDead(_1110)<br/>StorageDead(_1109)<br/></td></tr><tr><td align="left">_1107 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _1108)</td></tr></table>>];
    bb499__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">499</td></tr><tr><td align="left" balign="left">StorageDead(_1108)<br/>_1111 = discriminant(_1107)<br/></td></tr><tr><td align="left">switchInt(move _1111)</td></tr></table>>];
    bb500__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">500</td></tr><tr><td align="left" balign="left">StorageLive(_1115)<br/>_1115 = ((_1107 as Continue).0: ())<br/>_1106 = _1115<br/>StorageDead(_1115)<br/>StorageDead(_1107)<br/>StorageDead(_1106)<br/>StorageLive(_1116)<br/>StorageLive(_1117)<br/>StorageLive(_1118)<br/>_1118 = ((*_863).1: i64)<br/>_1117 = Ne(move _1118, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _1117)</td></tr></table>>];
    bb501__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">501</td></tr><tr><td align="left" balign="left">StorageLive(_1112)<br/>_1112 = ((_1107 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1114)<br/>_1114 = _1112<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1114)</td></tr></table>>];
    bb502__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">502</td></tr><tr><td align="left" balign="left">StorageDead(_1114)<br/>StorageDead(_1112)<br/>StorageDead(_1107)<br/>StorageDead(_1106)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb503__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">503</td></tr><tr><td align="left" balign="left">StorageDead(_1118)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb504__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">504</td></tr><tr><td align="left" balign="left">StorageDead(_1118)<br/>StorageLive(_1119)<br/>StorageLive(_1120)<br/>_1120 = ((*_863).2: i64)<br/>_1119 = Lt(move _1120, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _1119)</td></tr></table>>];
    bb505__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">505</td></tr><tr><td align="left" balign="left">StorageDead(_1120)<br/>_1116 = const true<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb506__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">506</td></tr><tr><td align="left" balign="left">StorageDead(_1120)<br/>StorageLive(_1121)<br/>_1121 = &amp;(*_863)<br/></td></tr><tr><td align="left">_1116 = PerpPosition::has_open_order(move _1121)</td></tr></table>>];
    bb507__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">507</td></tr><tr><td align="left" balign="left">StorageDead(_1121)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb508__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">508</td></tr><tr><td align="left" balign="left">StorageDead(_1119)<br/>StorageDead(_1117)<br/>StorageLive(_1122)<br/>StorageLive(_1123)<br/>_1123 = _1116<br/></td></tr><tr><td align="left">switchInt(move _1123)</td></tr></table>>];
    bb509__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">509</td></tr><tr><td align="left" balign="left">StorageLive(_1124)<br/>StorageLive(_1125)<br/>StorageLive(_1126)<br/>StorageLive(_1127)<br/>_1127 = &amp;mut _6<br/></td></tr><tr><td align="left">_1126 = MarginCalculation::add_perp_liability(move _1127)</td></tr></table>>];
    bb510__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">510</td></tr><tr><td align="left" balign="left">StorageDead(_1127)<br/></td></tr><tr><td align="left">_1125 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _1126)</td></tr></table>>];
    bb511__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">511</td></tr><tr><td align="left" balign="left">StorageDead(_1126)<br/>_1128 = discriminant(_1125)<br/></td></tr><tr><td align="left">switchInt(move _1128)</td></tr></table>>];
    bb512__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">512</td></tr><tr><td align="left" balign="left">StorageLive(_1132)<br/>_1132 = ((_1125 as Continue).0: ())<br/>_1124 = _1132<br/>StorageDead(_1132)<br/>StorageDead(_1125)<br/>StorageDead(_1124)<br/>StorageLive(_1133)<br/>StorageLive(_1134)<br/>_1134 = &amp;mut _6<br/>StorageLive(_1135)<br/>StorageLive(_1136)<br/>StorageLive(_1137)<br/>StorageLive(_1138)<br/>_1138 = &amp;(*_868)<br/></td></tr><tr><td align="left">_1137 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _1138)</td></tr></table>>];
    bb513__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">513</td></tr><tr><td align="left" balign="left">StorageLive(_1129)<br/>_1129 = ((_1125 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1131)<br/>_1131 = _1129<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1131)</td></tr></table>>];
    bb514__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">514</td></tr><tr><td align="left" balign="left">StorageDead(_1131)<br/>StorageDead(_1129)<br/>StorageDead(_1125)<br/>StorageDead(_1124)<br/>StorageDead(_1123)<br/>StorageDead(_1122)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb515__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">515</td></tr><tr><td align="left" balign="left">StorageDead(_1138)<br/>_1136 = &amp;((*_1137).24: state::perp_market::ContractTier)<br/>StorageLive(_1139)<br/>_1285 = const _<br/>_1139 = &amp;(*_1285)<br/></td></tr><tr><td align="left">_1135 = &lt;state::perp_market::ContractTier as PartialEq&gt;::eq(move _1136, move _1139)</td></tr></table>>];
    bb516__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">516</td></tr><tr><td align="left" balign="left">StorageDead(_1139)<br/>StorageDead(_1136)<br/></td></tr><tr><td align="left">_1133 = MarginCalculation::update_with_perp_isolated_liability(move _1134, move _1135)</td></tr></table>>];
    bb517__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">517</td></tr><tr><td align="left" balign="left">StorageDead(_1135)<br/>StorageDead(_1134)<br/>StorageDead(_1137)<br/>StorageDead(_1133)<br/>_1122 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb518__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">518</td></tr><tr><td align="left" balign="left">_1122 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb519__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">519</td></tr><tr><td align="left" balign="left">StorageDead(_1123)<br/>StorageDead(_1122)<br/>StorageLive(_1141)<br/>_1141 = _1116<br/></td></tr><tr><td align="left">switchInt(move _1141)</td></tr></table>>];
    bb520__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">520</td></tr><tr><td align="left" balign="left">StorageLive(_1142)<br/>StorageLive(_1143)<br/>_1143 = &amp;((_6.0: state::margin_calculation::MarginContext).0: math::margin::MarginRequirementType)<br/>StorageLive(_1144)<br/>_1284 = const _<br/>_1144 = &amp;(*_1284)<br/></td></tr><tr><td align="left">_1142 = &lt;math::margin::MarginRequirementType as PartialEq&gt;::ne(move _1143, move _1144)</td></tr></table>>];
    bb521__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">521</td></tr><tr><td align="left">switchInt(move _1142)</td></tr></table>>];
    bb522__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">522</td></tr><tr><td align="left" balign="left">StorageDead(_1144)<br/>StorageDead(_1143)<br/>StorageLive(_1146)<br/>StorageLive(_1147)<br/>_1147 = &amp;mut _6<br/>StorageLive(_1148)<br/>StorageLive(_1149)<br/>StorageLive(_1150)<br/>StorageLive(_1151)<br/>_1151 = _953<br/>StorageLive(_1152)<br/>StorageLive(_1153)<br/>_1153 = DriftAction::MarginCalc<br/>_1152 = Option::&lt;DriftAction&gt;::Some(move _1153)<br/>StorageDead(_1153)<br/></td></tr><tr><td align="left">_1150 = is_oracle_valid_for_action(move _1151, move _1152)</td></tr></table>>];
    bb523__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">523</td></tr><tr><td align="left" balign="left">StorageDead(_1152)<br/>StorageDead(_1151)<br/></td></tr><tr><td align="left">_1149 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _1150)</td></tr></table>>];
    bb524__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">524</td></tr><tr><td align="left" balign="left">StorageDead(_1150)<br/>_1154 = discriminant(_1149)<br/></td></tr><tr><td align="left">switchInt(move _1154)</td></tr></table>>];
    bb525__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">525</td></tr><tr><td align="left" balign="left">StorageLive(_1158)<br/>_1158 = ((_1149 as Continue).0: bool)<br/>_1148 = _1158<br/>StorageDead(_1158)<br/></td></tr><tr><td align="left">_1146 = MarginCalculation::update_all_liability_oracles_valid(move _1147, move _1148)</td></tr></table>>];
    bb526__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">526</td></tr><tr><td align="left" balign="left">StorageLive(_1155)<br/>_1155 = ((_1149 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1157)<br/>_1157 = _1155<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1157)</td></tr></table>>];
    bb527__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">527</td></tr><tr><td align="left" balign="left">StorageDead(_1157)<br/>StorageDead(_1155)<br/>StorageDead(_1148)<br/>StorageDead(_1147)<br/>StorageDead(_1149)<br/>StorageDead(_1146)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb528__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">528</td></tr><tr><td align="left" balign="left">StorageDead(_1148)<br/>StorageDead(_1147)<br/>StorageDead(_1149)<br/>StorageDead(_1146)<br/>StorageLive(_1159)<br/>StorageLive(_1160)<br/>_1160 = &amp;mut _6<br/>StorageLive(_1161)<br/>StorageLive(_1162)<br/>StorageLive(_1163)<br/>StorageLive(_1164)<br/>_1164 = _996<br/>StorageLive(_1165)<br/>StorageLive(_1166)<br/>_1166 = DriftAction::MarginCalc<br/>_1165 = Option::&lt;DriftAction&gt;::Some(move _1166)<br/>StorageDead(_1166)<br/></td></tr><tr><td align="left">_1163 = is_oracle_valid_for_action(move _1164, move _1165)</td></tr></table>>];
    bb529__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">529</td></tr><tr><td align="left" balign="left">StorageDead(_1165)<br/>StorageDead(_1164)<br/></td></tr><tr><td align="left">_1162 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _1163)</td></tr></table>>];
    bb530__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">530</td></tr><tr><td align="left" balign="left">StorageDead(_1163)<br/>_1167 = discriminant(_1162)<br/></td></tr><tr><td align="left">switchInt(move _1167)</td></tr></table>>];
    bb531__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">531</td></tr><tr><td align="left" balign="left">StorageLive(_1171)<br/>_1171 = ((_1162 as Continue).0: bool)<br/>_1161 = _1171<br/>StorageDead(_1171)<br/></td></tr><tr><td align="left">_1159 = MarginCalculation::update_all_liability_oracles_valid(move _1160, move _1161)</td></tr></table>>];
    bb532__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">532</td></tr><tr><td align="left" balign="left">StorageLive(_1168)<br/>_1168 = ((_1162 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1170)<br/>_1170 = _1168<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1170)</td></tr></table>>];
    bb533__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">533</td></tr><tr><td align="left" balign="left">StorageDead(_1170)<br/>StorageDead(_1168)<br/>StorageDead(_1161)<br/>StorageDead(_1160)<br/>StorageDead(_1162)<br/>StorageDead(_1159)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb534__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">534</td></tr><tr><td align="left" balign="left">StorageDead(_1161)<br/>StorageDead(_1160)<br/>StorageDead(_1162)<br/>StorageDead(_1159)<br/>_857 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb535__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">535</td></tr><tr><td align="left" balign="left">StorageDead(_1144)<br/>StorageDead(_1143)<br/>_857 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb536__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">536</td></tr><tr><td align="left" balign="left">StorageDead(_1142)<br/>StorageDead(_1141)<br/>StorageDead(_1116)<br/>StorageDead(_1040)<br/>StorageDead(_1039)<br/>StorageDead(_1038)<br/>StorageDead(_1037)<br/>StorageDead(_1036)<br/>StorageDead(_1030)<br/>StorageDead(_996)<br/>StorageDead(_995)<br/>StorageDead(_987)<br/>StorageDead(_953)<br/>StorageDead(_952)<br/>_1292 = const false<br/>StorageDead(_939)<br/></td></tr><tr><td align="left">drop(_869)</td></tr></table>>];
    bb537__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">537</td></tr><tr><td align="left" balign="left">StorageDead(_869)<br/>StorageDead(_868)<br/>StorageDead(_863)<br/>StorageDead(_860)<br/>StorageDead(_858)<br/>StorageDead(_857)<br/>_29 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb538__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">538</td></tr><tr><td align="left" balign="left">StorageDead(_1175)<br/></td></tr><tr><td align="left">_1173 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _1174)</td></tr></table>>];
    bb539__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">539</td></tr><tr><td align="left" balign="left">StorageDead(_1174)<br/>_1176 = discriminant(_1173)<br/></td></tr><tr><td align="left">switchInt(move _1176)</td></tr></table>>];
    bb540__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">540</td></tr><tr><td align="left" balign="left">StorageLive(_1180)<br/>_1180 = ((_1173 as Continue).0: ())<br/>_1172 = _1180<br/>StorageDead(_1180)<br/>StorageDead(_1173)<br/>StorageDead(_1172)<br/>StorageLive(_1181)<br/>_1181 = ((_6.0: state::margin_calculation::MarginContext).8: [(u16, i128); 2])<br/>StorageLive(_1182)<br/>StorageLive(_1183)<br/>StorageLive(_1184)<br/>StorageLive(_1185)<br/>StorageLive(_1186)<br/>_1186 = &amp;_1181<br/>_1185 = move _1186 as &amp;[(u16, i128)] (PointerCoercion(Unsize))<br/>StorageDead(_1186)<br/></td></tr><tr><td align="left">_1184 = core::slice::&lt;impl [(u16, i128)]&gt;::iter(move _1185)</td></tr></table>>];
    bb541__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">541</td></tr><tr><td align="left" balign="left">StorageLive(_1177)<br/>_1177 = ((_1173 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1179)<br/>_1179 = _1177<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1179)</td></tr></table>>];
    bb542__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">542</td></tr><tr><td align="left" balign="left">StorageDead(_1179)<br/>StorageDead(_1177)<br/>StorageDead(_1173)<br/>StorageDead(_1172)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb543__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">543</td></tr><tr><td align="left" balign="left">StorageDead(_1185)<br/></td></tr><tr><td align="left">_1183 = &lt;std::slice::Iter&lt;'_, (u16, i128)&gt; as IntoIterator&gt;::into_iter(move _1184)</td></tr></table>>];
    bb544__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">544</td></tr><tr><td align="left" balign="left">StorageDead(_1184)<br/>StorageLive(_1187)<br/>_1187 = move _1183<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb545__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">545</td></tr><tr><td align="left" balign="left">StorageLive(_1188)<br/>StorageLive(_1189)<br/>StorageLive(_1190)<br/>StorageLive(_1191)<br/>_1191 = &amp;mut _1187<br/>_1190 = &amp;mut (*_1191)<br/></td></tr><tr><td align="left">_1189 = &lt;std::slice::Iter&lt;'_, (u16, i128)&gt; as Iterator&gt;::next(move _1190)</td></tr></table>>];
    bb546__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">546</td></tr><tr><td align="left" balign="left">StorageDead(_1190)<br/>_1192 = discriminant(_1189)<br/></td></tr><tr><td align="left">switchInt(move _1192)</td></tr></table>>];
    bb547__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">547</td></tr><tr><td align="left" balign="left">StorageLive(_1194)<br/>_1290 = deref_copy ((_1189 as Some).0: &amp;(u16, i128))<br/>_1194 = &amp;((*_1290).0: u16)<br/>StorageLive(_1195)<br/>_1291 = deref_copy ((_1189 as Some).0: &amp;(u16, i128))<br/>_1195 = &amp;((*_1291).1: i128)<br/>StorageLive(_1196)<br/>StorageLive(_1197)<br/>StorageLive(_1198)<br/>_1198 = (*_1195)<br/>_1197 = Eq(move _1198, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _1197)</td></tr></table>>];
    bb548__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">548</td></tr><tr><td align="left" balign="left">_1182 = const ()<br/>StorageDead(_1191)<br/>StorageDead(_1189)<br/>StorageDead(_1188)<br/>StorageDead(_1187)<br/>StorageDead(_1183)<br/>StorageDead(_1182)<br/>StorageLive(_1264)<br/>_1264 = _6<br/>_0 = std::result::Result::&lt;MarginCalculation, error::ErrorCode&gt;::Ok(move _1264)<br/>StorageDead(_1264)<br/>StorageDead(_1181)<br/>StorageDead(_20)<br/>StorageDead(_19)<br/>StorageDead(_8)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb549__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">549</td></tr><tr><td align="left" balign="left">StorageDead(_1198)<br/>StorageDead(_1197)<br/>StorageDead(_1196)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb550__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">550</td></tr><tr><td align="left" balign="left">StorageDead(_1198)<br/>_1196 = const ()<br/>StorageDead(_1197)<br/>StorageDead(_1196)<br/>StorageLive(_1200)<br/>StorageLive(_1201)<br/>StorageLive(_1202)<br/>StorageLive(_1203)<br/>StorageLive(_1204)<br/>StorageLive(_1205)<br/>_1205 = &amp;((*_1).3: [state::user::SpotPosition; 8])<br/>_1204 = move _1205 as &amp;[state::user::SpotPosition] (PointerCoercion(Unsize))<br/>StorageDead(_1205)<br/></td></tr><tr><td align="left">_1203 = core::slice::&lt;impl [SpotPosition]&gt;::iter(move _1204)</td></tr></table>>];
    bb551__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">551</td></tr><tr><td align="left" balign="left">_1202 = &amp;mut _1203<br/>StorageDead(_1204)<br/>StorageLive(_1206)<br/>StorageLive(_1207)<br/>_1207 = &amp;_1194<br/>_1206 = {closure@programs/drift/src/math/margin.rs:623:18: 623:21} { market_index: move _1207 }<br/>StorageDead(_1207)<br/></td></tr><tr><td align="left">_1201 = &lt;std::slice::Iter&lt;'_, SpotPosition&gt; as Iterator&gt;::any::&lt;{closure@programs/drift/src/math/margin.rs:623:18: 623:21}&gt;(move _1202, move _1206)</td></tr></table>>];
    bb552__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">552</td></tr><tr><td align="left">switchInt(move _1201)</td></tr></table>>];
    bb553__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">553</td></tr><tr><td align="left" balign="left">StorageDead(_1206)<br/>StorageDead(_1203)<br/>StorageDead(_1202)<br/>StorageDead(_1201)<br/>StorageDead(_1200)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb554__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">554</td></tr><tr><td align="left" balign="left">StorageDead(_1206)<br/>StorageDead(_1203)<br/>StorageDead(_1202)<br/>_1200 = const ()<br/>StorageDead(_1201)<br/>StorageDead(_1200)<br/>StorageLive(_1209)<br/>StorageLive(_1210)<br/>StorageLive(_1211)<br/>StorageLive(_1212)<br/>_1212 = &amp;(*_3)<br/>StorageLive(_1213)<br/>_1213 = &amp;(*_1194)<br/></td></tr><tr><td align="left">_1211 = SpotMarketMap::&lt;'_&gt;::get_ref(move _1212, move _1213)</td></tr></table>>];
    bb555__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">555</td></tr><tr><td align="left" balign="left">StorageDead(_1213)<br/>StorageDead(_1212)<br/></td></tr><tr><td align="left">_1210 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _1211)</td></tr></table>>];
    bb556__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">556</td></tr><tr><td align="left" balign="left">StorageDead(_1211)<br/>_1214 = discriminant(_1210)<br/></td></tr><tr><td align="left">switchInt(move _1214)</td></tr></table>>];
    bb557__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">557</td></tr><tr><td align="left" balign="left">StorageLive(_1218)<br/>_1218 = move ((_1210 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_1209 = move _1218<br/>StorageDead(_1218)<br/>_1307 = discriminant(_1210)<br/>StorageDead(_1210)<br/>StorageLive(_1219)<br/>StorageLive(_1220)<br/>StorageLive(_1221)<br/>StorageLive(_1222)<br/>_1222 = &amp;mut (*_4)<br/>StorageLive(_1223)<br/>StorageLive(_1224)<br/>StorageLive(_1225)<br/>StorageLive(_1226)<br/>StorageLive(_1227)<br/>StorageLive(_1228)<br/>_1228 = &amp;_1209<br/></td></tr><tr><td align="left">_1227 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _1228)</td></tr></table>>];
    bb558__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">558</td></tr><tr><td align="left" balign="left">StorageLive(_1215)<br/>_1215 = ((_1210 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1217)<br/>_1217 = _1215<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1217)</td></tr></table>>];
    bb559__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">559</td></tr><tr><td align="left" balign="left">StorageDead(_1217)<br/>StorageDead(_1215)<br/>_1305 = discriminant(_1210)<br/>StorageDead(_1210)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb560__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">560</td></tr><tr><td align="left" balign="left">_1226 = &amp;(*_1227)<br/>StorageDead(_1228)<br/></td></tr><tr><td align="left">_1225 = SpotMarket::oracle_id(move _1226)</td></tr></table>>];
    bb561__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">561</td></tr><tr><td align="left" balign="left">StorageDead(_1226)<br/>_1224 = &amp;_1225<br/>_1223 = &amp;(*_1224)<br/></td></tr><tr><td align="left">_1221 = OracleMap::&lt;'_&gt;::get_price_data(move _1222, move _1223)</td></tr></table>>];
    bb562__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">562</td></tr><tr><td align="left" balign="left">StorageDead(_1223)<br/>StorageDead(_1222)<br/></td></tr><tr><td align="left">_1220 = &lt;std::result::Result&lt;&amp;OraclePriceData, error::ErrorCode&gt; as Try&gt;::branch(move _1221)</td></tr></table>>];
    bb563__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">563</td></tr><tr><td align="left" balign="left">StorageDead(_1221)<br/>_1229 = discriminant(_1220)<br/></td></tr><tr><td align="left">switchInt(move _1229)</td></tr></table>>];
    bb564__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">564</td></tr><tr><td align="left" balign="left">StorageLive(_1233)<br/>_1233 = ((_1220 as Continue).0: &amp;state::oracle::OraclePriceData)<br/>_1219 = _1233<br/>StorageDead(_1233)<br/>StorageDead(_1227)<br/>StorageDead(_1225)<br/>StorageDead(_1224)<br/>StorageDead(_1220)<br/>StorageLive(_1234)<br/>StorageLive(_1235)<br/>_1235 = ((*_1219).0: i64)<br/>StorageLive(_1236)<br/>StorageLive(_1237)<br/>StorageLive(_1238)<br/>_1238 = &amp;_1209<br/></td></tr><tr><td align="left">_1237 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _1238)</td></tr></table>>];
    bb565__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">565</td></tr><tr><td align="left" balign="left">StorageLive(_1230)<br/>_1230 = ((_1220 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1232)<br/>_1232 = _1230<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1232)</td></tr></table>>];
    bb566__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">566</td></tr><tr><td align="left" balign="left">StorageDead(_1232)<br/>StorageDead(_1230)<br/>StorageDead(_1227)<br/>StorageDead(_1225)<br/>StorageDead(_1224)<br/>StorageDead(_1220)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb567__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">567</td></tr><tr><td align="left" balign="left">StorageDead(_1238)<br/>_1236 = (((*_1237).5: state::oracle::HistoricalOracleData).4: i64)<br/>StorageLive(_1239)<br/>_1239 = ((_6.0: state::margin_calculation::MarginContext).2: bool)<br/></td></tr><tr><td align="left">_1234 = StrictOraclePrice::new(move _1235, move _1236, move _1239)</td></tr></table>>];
    bb568__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">568</td></tr><tr><td align="left" balign="left">StorageDead(_1239)<br/>StorageDead(_1236)<br/>StorageDead(_1235)<br/>StorageDead(_1237)<br/>StorageLive(_1240)<br/>StorageLive(_1241)<br/>StorageLive(_1242)<br/>StorageLive(_1243)<br/>_1243 = &amp;_1234<br/></td></tr><tr><td align="left">_1242 = StrictOraclePrice::validate(move _1243)</td></tr></table>>];
    bb569__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">569</td></tr><tr><td align="left" balign="left">StorageDead(_1243)<br/></td></tr><tr><td align="left">_1241 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _1242)</td></tr></table>>];
    bb570__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">570</td></tr><tr><td align="left" balign="left">StorageDead(_1242)<br/>_1244 = discriminant(_1241)<br/></td></tr><tr><td align="left">switchInt(move _1244)</td></tr></table>>];
    bb571__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">571</td></tr><tr><td align="left" balign="left">StorageLive(_1248)<br/>_1248 = ((_1241 as Continue).0: ())<br/>_1240 = _1248<br/>StorageDead(_1248)<br/>StorageDead(_1241)<br/>StorageDead(_1240)<br/>StorageLive(_1249)<br/>StorageLive(_1250)<br/>StorageLive(_1251)<br/>StorageLive(_1252)<br/>_1252 = &amp;mut _6<br/>StorageLive(_1253)<br/>StorageLive(_1254)<br/>StorageLive(_1255)<br/>StorageLive(_1256)<br/>_1256 = &amp;_1209<br/>_1255 = &amp;(*_1256)<br/></td></tr><tr><td align="left">_1254 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _1255)</td></tr></table>>];
    bb572__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">572</td></tr><tr><td align="left" balign="left">StorageLive(_1245)<br/>_1245 = ((_1241 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1247)<br/>_1247 = _1245<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1247)</td></tr></table>>];
    bb573__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">573</td></tr><tr><td align="left" balign="left">StorageDead(_1247)<br/>StorageDead(_1245)<br/>StorageDead(_1241)<br/>StorageDead(_1240)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb574__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">574</td></tr><tr><td align="left" balign="left">_1253 = &amp;(*_1254)<br/>StorageDead(_1255)<br/>StorageLive(_1257)<br/>StorageLive(_1258)<br/>_1258 = &amp;_1234<br/>_1257 = &amp;(*_1258)<br/></td></tr><tr><td align="left">_1251 = MarginCalculation::update_fuel_spot_bonus(move _1252, move _1253, const 0_i128, move _1257)</td></tr></table>>];
    bb575__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">575</td></tr><tr><td align="left" balign="left">StorageDead(_1257)<br/>StorageDead(_1253)<br/>StorageDead(_1252)<br/></td></tr><tr><td align="left">_1250 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _1251)</td></tr></table>>];
    bb576__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">576</td></tr><tr><td align="left" balign="left">StorageDead(_1251)<br/>_1259 = discriminant(_1250)<br/></td></tr><tr><td align="left">switchInt(move _1259)</td></tr></table>>];
    bb577__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">577</td></tr><tr><td align="left" balign="left">StorageLive(_1263)<br/>_1263 = ((_1250 as Continue).0: ())<br/>_1249 = _1263<br/>StorageDead(_1263)<br/>StorageDead(_1258)<br/>StorageDead(_1256)<br/>StorageDead(_1254)<br/>StorageDead(_1250)<br/>StorageDead(_1249)<br/>_1188 = const ()<br/>StorageDead(_1234)<br/>StorageDead(_1219)<br/></td></tr><tr><td align="left">drop(_1209)</td></tr></table>>];
    bb578__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">578</td></tr><tr><td align="left" balign="left">StorageLive(_1260)<br/>_1260 = ((_1250 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1262)<br/>_1262 = _1260<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1262)</td></tr></table>>];
    bb579__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">579</td></tr><tr><td align="left" balign="left">StorageDead(_1262)<br/>StorageDead(_1260)<br/>StorageDead(_1258)<br/>StorageDead(_1256)<br/>StorageDead(_1254)<br/>StorageDead(_1250)<br/>StorageDead(_1249)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb580__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">580</td></tr><tr><td align="left" balign="left">StorageDead(_1209)<br/>StorageDead(_1195)<br/>StorageDead(_1194)<br/>StorageDead(_1191)<br/>StorageDead(_1189)<br/>StorageDead(_1188)<br/>_29 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb581__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">581</td></tr><tr><td align="left" balign="left">StorageDead(_1195)<br/>StorageDead(_1194)<br/>StorageDead(_1191)<br/>StorageDead(_1189)<br/>StorageDead(_1188)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb582__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">582</td></tr><tr><td align="left" balign="left">StorageDead(_1234)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb583__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">583</td></tr><tr><td align="left" balign="left">StorageDead(_1219)<br/></td></tr><tr><td align="left">drop(_1209)</td></tr></table>>];
    bb584__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">584</td></tr><tr><td align="left" balign="left">StorageDead(_1209)<br/>StorageDead(_1195)<br/>StorageDead(_1194)<br/>StorageDead(_1191)<br/>StorageDead(_1189)<br/>StorageDead(_1188)<br/>StorageDead(_1187)<br/>StorageDead(_1183)<br/>StorageDead(_1182)<br/>StorageDead(_1181)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb585__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">585</td></tr><tr><td align="left" balign="left">StorageDead(_1142)<br/>StorageDead(_1141)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb586__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">586</td></tr><tr><td align="left" balign="left">StorageDead(_1116)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb587__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">587</td></tr><tr><td align="left" balign="left">StorageDead(_1040)<br/>StorageDead(_1039)<br/>StorageDead(_1038)<br/>StorageDead(_1037)<br/>StorageDead(_1036)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb588__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">588</td></tr><tr><td align="left" balign="left">StorageDead(_1030)<br/>StorageDead(_996)<br/>StorageDead(_995)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb589__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">589</td></tr><tr><td align="left" balign="left">StorageDead(_1018)<br/>StorageDead(_1015)<br/>StorageDead(_1012)<br/>StorageDead(_1009)<br/>StorageDead(_1007)<br/>StorageDead(_1006)<br/>StorageDead(_1003)<br/>StorageDead(_998)<br/>StorageDead(_997)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb590__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">590</td></tr><tr><td align="left" balign="left">StorageDead(_987)<br/>StorageDead(_953)<br/>StorageDead(_952)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb591__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">591</td></tr><tr><td align="left" balign="left">StorageDead(_975)<br/>StorageDead(_972)<br/>StorageDead(_969)<br/>StorageDead(_966)<br/>StorageDead(_964)<br/>StorageDead(_963)<br/>StorageDead(_960)<br/>StorageDead(_955)<br/>StorageDead(_954)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb592__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">592</td></tr><tr><td align="left" balign="left">_1292 = const false<br/>StorageDead(_939)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb593__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">593</td></tr><tr><td align="left">drop(_869)</td></tr></table>>];
    bb594__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">594</td></tr><tr><td align="left" balign="left">StorageDead(_869)<br/>StorageDead(_868)<br/>StorageDead(_863)<br/>StorageDead(_860)<br/>StorageDead(_858)<br/>StorageDead(_857)<br/>StorageDead(_856)<br/>StorageDead(_852)<br/>StorageDead(_851)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb595__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">595</td></tr><tr><td align="left" balign="left">StorageDead(_824)<br/>StorageDead(_820)<br/>StorageDead(_819)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb596__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">596</td></tr><tr><td align="left" balign="left">StorageDead(_449)<br/>StorageDead(_448)<br/>StorageDead(_447)<br/>StorageDead(_446)<br/>StorageDead(_417)<br/>StorageDead(_792)<br/>StorageDead(_789)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb597__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">597</td></tr><tr><td align="left" balign="left">StorageDead(_602)<br/>StorageDead(_598)<br/>StorageDead(_597)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb598__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">598</td></tr><tr><td align="left" balign="left">StorageDead(_570)<br/>StorageDead(_567)<br/>StorageDead(_566)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb599__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">599</td></tr><tr><td align="left" balign="left">StorageDead(_549)<br/>StorageDead(_545)<br/>StorageDead(_544)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb600__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">600</td></tr><tr><td align="left" balign="left">StorageDead(_449)<br/>StorageDead(_448)<br/>StorageDead(_447)<br/>StorageDead(_446)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb601__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">601</td></tr><tr><td align="left" balign="left">StorageDead(_462)<br/>StorageDead(_460)<br/>StorageDead(_458)<br/>StorageDead(_454)<br/>StorageDead(_451)<br/>StorageDead(_450)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb602__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">602</td></tr><tr><td align="left" balign="left">StorageDead(_417)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb603__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">603</td></tr><tr><td align="left" balign="left">StorageDead(_335)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb604__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">604</td></tr><tr><td align="left" balign="left">StorageDead(_281)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb605__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">605</td></tr><tr><td align="left" balign="left">StorageDead(_195)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb606__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">606</td></tr><tr><td align="left" balign="left">StorageDead(_191)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb607__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">607</td></tr><tr><td align="left" balign="left">StorageDead(_176)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb608__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">608</td></tr><tr><td align="left" balign="left">StorageDead(_165)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb609__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">609</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>StorageDead(_62)<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb610__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">610</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>StorageDead(_81)<br/>StorageDead(_78)<br/>StorageDead(_75)<br/>StorageDead(_73)<br/>StorageDead(_72)<br/>StorageDead(_69)<br/>StorageDead(_64)<br/>StorageDead(_63)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb611__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">611</td></tr><tr><td align="left">drop(_50)</td></tr></table>>];
    bb612__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">612</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb613__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">613</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_33)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/>StorageDead(_28)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb614__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">614</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_19)<br/>StorageDead(_8)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb615__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">615</td></tr><tr><td align="left">return</td></tr></table>>];
    bb616__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">616 (cleanup)</td></tr><tr><td align="left">drop(_1209)</td></tr></table>>];
    bb617__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">617 (cleanup)</td></tr><tr><td align="left">drop(_914)</td></tr></table>>];
    bb618__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">618 (cleanup)</td></tr><tr><td align="left">drop(_895)</td></tr></table>>];
    bb619__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">619 (cleanup)</td></tr><tr><td align="left">drop(_869)</td></tr></table>>];
    bb620__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">620 (cleanup)</td></tr><tr><td align="left">drop(_803)</td></tr></table>>];
    bb621__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">621 (cleanup)</td></tr><tr><td align="left">drop(_705)</td></tr></table>>];
    bb622__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">622 (cleanup)</td></tr><tr><td align="left">drop(_686)</td></tr></table>>];
    bb623__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">623 (cleanup)</td></tr><tr><td align="left">drop(_652)</td></tr></table>>];
    bb624__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">624 (cleanup)</td></tr><tr><td align="left">drop(_633)</td></tr></table>>];
    bb625__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">625 (cleanup)</td></tr><tr><td align="left">drop(_581)</td></tr></table>>];
    bb626__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">626 (cleanup)</td></tr><tr><td align="left">drop(_516)</td></tr></table>>];
    bb627__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">627 (cleanup)</td></tr><tr><td align="left">drop(_497)</td></tr></table>>];
    bb628__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">628 (cleanup)</td></tr><tr><td align="left">drop(_368)</td></tr></table>>];
    bb629__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">629 (cleanup)</td></tr><tr><td align="left">drop(_349)</td></tr></table>>];
    bb630__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">630 (cleanup)</td></tr><tr><td align="left">drop(_304)</td></tr></table>>];
    bb631__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">631 (cleanup)</td></tr><tr><td align="left">drop(_242)</td></tr></table>>];
    bb632__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">632 (cleanup)</td></tr><tr><td align="left">drop(_223)</td></tr></table>>];
    bb633__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">633 (cleanup)</td></tr><tr><td align="left">drop(_140)</td></tr></table>>];
    bb634__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">634 (cleanup)</td></tr><tr><td align="left">drop(_121)</td></tr></table>>];
    bb635__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">635 (cleanup)</td></tr><tr><td align="left">drop(_50)</td></tr></table>>];
    bb636__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">636 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb637__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">637</td></tr><tr><td align="left">drop(_939)</td></tr></table>>];
    bb638__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">638</td></tr><tr><td align="left">switchInt(_1292)</td></tr></table>>];
    bb639__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">639 (cleanup)</td></tr><tr><td align="left" balign="left">_1309 = discriminant(_1210)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb640__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">640 (cleanup)</td></tr><tr><td align="left">drop(_939)</td></tr></table>>];
    bb641__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">641 (cleanup)</td></tr><tr><td align="left">switchInt(_1292)</td></tr></table>>];
    bb642__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">642 (cleanup)</td></tr><tr><td align="left" balign="left">_1310 = discriminant(_940)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb643__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">643 (cleanup)</td></tr><tr><td align="left" balign="left">_1311 = discriminant(_870)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb644__0_2463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">644 (cleanup)</td></tr><tr><td align="left" balign="left">_1312 = discriminant(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_2463 -> bb1__0_2463 [label="return"];
    bb1__0_2463 -> bb2__0_2463 [label="return"];
    bb2__0_2463 -> bb4__0_2463 [label="0"];
    bb2__0_2463 -> bb3__0_2463 [label="otherwise"];
    bb3__0_2463 -> bb5__0_2463 [label=""];
    bb4__0_2463 -> bb5__0_2463 [label=""];
    bb5__0_2463 -> bb6__0_2463 [label="1"];
    bb5__0_2463 -> bb8__0_2463 [label="otherwise"];
    bb6__0_2463 -> bb7__0_2463 [label="return"];
    bb7__0_2463 -> bb9__0_2463 [label=""];
    bb8__0_2463 -> bb9__0_2463 [label=""];
    bb9__0_2463 -> bb10__0_2463 [label="return"];
    bb10__0_2463 -> bb11__0_2463 [label="return"];
    bb11__0_2463 -> bb12__0_2463 [label="return"];
    bb12__0_2463 -> bb13__0_2463 [label=""];
    bb13__0_2463 -> bb14__0_2463 [label="return"];
    bb14__0_2463 -> bb17__0_2463 [label="0"];
    bb14__0_2463 -> bb15__0_2463 [label="1"];
    bb14__0_2463 -> bb16__0_2463 [label="otherwise"];
    bb15__0_2463 -> bb18__0_2463 [label="return"];
    bb17__0_2463 -> bb389__0_2463 [label="return"];
    bb18__0_2463 -> bb19__0_2463 [label="return"];
    bb19__0_2463 -> bb20__0_2463 [label="0"];
    bb19__0_2463 -> bb21__0_2463 [label="1"];
    bb19__0_2463 -> bb16__0_2463 [label="otherwise"];
    bb20__0_2463 -> bb23__0_2463 [label="return"];
    bb21__0_2463 -> bb22__0_2463 [label="return"];
    bb22__0_2463 -> bb613__0_2463 [label=""];
    bb23__0_2463 -> bb25__0_2463 [label="0"];
    bb23__0_2463 -> bb24__0_2463 [label="otherwise"];
    bb24__0_2463 -> bb13__0_2463 [label=""];
    bb25__0_2463 -> bb26__0_2463 [label="return"];
    bb26__0_2463 -> bb27__0_2463 [label="return"];
    bb26__0_2463 -> bb636__0_2463 [label="unwind"];
    bb27__0_2463 -> bb28__0_2463 [label="0"];
    bb27__0_2463 -> bb29__0_2463 [label="1"];
    bb27__0_2463 -> bb16__0_2463 [label="otherwise"];
    bb28__0_2463 -> bb31__0_2463 [label="return"];
    bb28__0_2463 -> bb635__0_2463 [label="unwind"];
    bb29__0_2463 -> bb30__0_2463 [label="return"];
    bb29__0_2463 -> bb644__0_2463 [label="unwind"];
    bb30__0_2463 -> bb612__0_2463 [label=""];
    bb31__0_2463 -> bb32__0_2463 [label="return"];
    bb31__0_2463 -> bb635__0_2463 [label="unwind"];
    bb32__0_2463 -> bb33__0_2463 [label="return"];
    bb32__0_2463 -> bb635__0_2463 [label="unwind"];
    bb33__0_2463 -> bb34__0_2463 [label="return"];
    bb33__0_2463 -> bb635__0_2463 [label="unwind"];
    bb34__0_2463 -> bb35__0_2463 [label="return"];
    bb34__0_2463 -> bb635__0_2463 [label="unwind"];
    bb35__0_2463 -> bb36__0_2463 [label="return"];
    bb35__0_2463 -> bb635__0_2463 [label="unwind"];
    bb36__0_2463 -> bb37__0_2463 [label="return"];
    bb36__0_2463 -> bb635__0_2463 [label="unwind"];
    bb37__0_2463 -> bb38__0_2463 [label="0"];
    bb37__0_2463 -> bb39__0_2463 [label="1"];
    bb37__0_2463 -> bb16__0_2463 [label="otherwise"];
    bb38__0_2463 -> bb41__0_2463 [label="return"];
    bb38__0_2463 -> bb635__0_2463 [label="unwind"];
    bb39__0_2463 -> bb40__0_2463 [label="return"];
    bb39__0_2463 -> bb635__0_2463 [label="unwind"];
    bb40__0_2463 -> bb610__0_2463 [label=""];
    bb41__0_2463 -> bb42__0_2463 [label="return"];
    bb41__0_2463 -> bb635__0_2463 [label="unwind"];
    bb42__0_2463 -> bb43__0_2463 [label="0"];
    bb42__0_2463 -> bb44__0_2463 [label="1"];
    bb42__0_2463 -> bb16__0_2463 [label="otherwise"];
    bb43__0_2463 -> bb47__0_2463 [label="0"];
    bb43__0_2463 -> bb46__0_2463 [label="otherwise"];
    bb44__0_2463 -> bb45__0_2463 [label="return"];
    bb44__0_2463 -> bb635__0_2463 [label="unwind"];
    bb45__0_2463 -> bb610__0_2463 [label=""];
    bb46__0_2463 -> bb48__0_2463 [label="return"];
    bb46__0_2463 -> bb635__0_2463 [label="unwind"];
    bb47__0_2463 -> bb54__0_2463 [label=""];
    bb48__0_2463 -> bb53__0_2463 [label="0"];
    bb48__0_2463 -> bb49__0_2463 [label="otherwise"];
    bb49__0_2463 -> bb50__0_2463 [label="return"];
    bb49__0_2463 -> bb635__0_2463 [label="unwind"];
    bb50__0_2463 -> bb52__0_2463 [label="0"];
    bb50__0_2463 -> bb51__0_2463 [label="otherwise"];
    bb51__0_2463 -> bb54__0_2463 [label=""];
    bb52__0_2463 -> bb77__0_2463 [label=""];
    bb53__0_2463 -> bb54__0_2463 [label=""];
    bb54__0_2463 -> bb55__0_2463 [label="return"];
    bb54__0_2463 -> bb635__0_2463 [label="unwind"];
    bb55__0_2463 -> bb57__0_2463 [label="0"];
    bb55__0_2463 -> bb56__0_2463 [label="otherwise"];
    bb56__0_2463 -> bb72__0_2463 [label=""];
    bb57__0_2463 -> bb58__0_2463 [label="return"];
    bb57__0_2463 -> bb635__0_2463 [label="unwind"];
    bb58__0_2463 -> bb59__0_2463 [label="return"];
    bb58__0_2463 -> bb635__0_2463 [label="unwind"];
    bb59__0_2463 -> bb60__0_2463 [label="return"];
    bb59__0_2463 -> bb635__0_2463 [label="unwind"];
    bb60__0_2463 -> bb61__0_2463 [label="return"];
    bb60__0_2463 -> bb634__0_2463 [label="unwind"];
    bb61__0_2463 -> bb62__0_2463 [label="return"];
    bb61__0_2463 -> bb634__0_2463 [label="unwind"];
    bb62__0_2463 -> bb63__0_2463 [label="return"];
    bb62__0_2463 -> bb635__0_2463 [label="unwind"];
    bb63__0_2463 -> bb64__0_2463 [label="return"];
    bb63__0_2463 -> bb635__0_2463 [label="unwind"];
    bb64__0_2463 -> bb65__0_2463 [label="return"];
    bb64__0_2463 -> bb635__0_2463 [label="unwind"];
    bb65__0_2463 -> bb66__0_2463 [label="return"];
    bb65__0_2463 -> bb635__0_2463 [label="unwind"];
    bb66__0_2463 -> bb67__0_2463 [label="return"];
    bb66__0_2463 -> bb635__0_2463 [label="unwind"];
    bb67__0_2463 -> bb68__0_2463 [label="return"];
    bb67__0_2463 -> bb635__0_2463 [label="unwind"];
    bb68__0_2463 -> bb69__0_2463 [label="return"];
    bb68__0_2463 -> bb633__0_2463 [label="unwind"];
    bb69__0_2463 -> bb70__0_2463 [label="return"];
    bb69__0_2463 -> bb633__0_2463 [label="unwind"];
    bb70__0_2463 -> bb71__0_2463 [label="return"];
    bb70__0_2463 -> bb635__0_2463 [label="unwind"];
    bb71__0_2463 -> bb72__0_2463 [label=""];
    bb72__0_2463 -> bb73__0_2463 [label="return"];
    bb72__0_2463 -> bb635__0_2463 [label="unwind"];
    bb73__0_2463 -> bb74__0_2463 [label="0"];
    bb73__0_2463 -> bb75__0_2463 [label="1"];
    bb73__0_2463 -> bb16__0_2463 [label="otherwise"];
    bb74__0_2463 -> bb77__0_2463 [label=""];
    bb75__0_2463 -> bb76__0_2463 [label="return"];
    bb75__0_2463 -> bb635__0_2463 [label="unwind"];
    bb76__0_2463 -> bb609__0_2463 [label=""];
    bb77__0_2463 -> bb78__0_2463 [label="return"];
    bb77__0_2463 -> bb635__0_2463 [label="unwind"];
    bb78__0_2463 -> bb79__0_2463 [label="return"];
    bb78__0_2463 -> bb635__0_2463 [label="unwind"];
    bb79__0_2463 -> bb80__0_2463 [label="0"];
    bb79__0_2463 -> bb81__0_2463 [label="1"];
    bb79__0_2463 -> bb16__0_2463 [label="otherwise"];
    bb80__0_2463 -> bb83__0_2463 [label="return"];
    bb80__0_2463 -> bb635__0_2463 [label="unwind"];
    bb81__0_2463 -> bb82__0_2463 [label="return"];
    bb81__0_2463 -> bb635__0_2463 [label="unwind"];
    bb82__0_2463 -> bb608__0_2463 [label=""];
    bb83__0_2463 -> bb84__0_2463 [label="return"];
    bb83__0_2463 -> bb635__0_2463 [label="unwind"];
    bb84__0_2463 -> bb85__0_2463 [label="return"];
    bb84__0_2463 -> bb635__0_2463 [label="unwind"];
    bb85__0_2463 -> bb86__0_2463 [label="return"];
    bb85__0_2463 -> bb635__0_2463 [label="unwind"];
    bb86__0_2463 -> bb87__0_2463 [label="0"];
    bb86__0_2463 -> bb88__0_2463 [label="1"];
    bb86__0_2463 -> bb16__0_2463 [label="otherwise"];
    bb87__0_2463 -> bb90__0_2463 [label="return"];
    bb87__0_2463 -> bb635__0_2463 [label="unwind"];
    bb88__0_2463 -> bb89__0_2463 [label="return"];
    bb88__0_2463 -> bb635__0_2463 [label="unwind"];
    bb89__0_2463 -> bb607__0_2463 [label=""];
    bb90__0_2463 -> bb190__0_2463 [label="0"];
    bb90__0_2463 -> bb91__0_2463 [label="otherwise"];
    bb91__0_2463 -> bb92__0_2463 [label="return"];
    bb91__0_2463 -> bb635__0_2463 [label="unwind"];
    bb92__0_2463 -> bb93__0_2463 [label="return"];
    bb92__0_2463 -> bb635__0_2463 [label="unwind"];
    bb93__0_2463 -> bb94__0_2463 [label="return"];
    bb93__0_2463 -> bb635__0_2463 [label="unwind"];
    bb94__0_2463 -> bb95__0_2463 [label="0"];
    bb94__0_2463 -> bb96__0_2463 [label="1"];
    bb94__0_2463 -> bb16__0_2463 [label="otherwise"];
    bb95__0_2463 -> bb99__0_2463 [label="0"];
    bb95__0_2463 -> bb98__0_2463 [label="otherwise"];
    bb96__0_2463 -> bb97__0_2463 [label="return"];
    bb96__0_2463 -> bb635__0_2463 [label="unwind"];
    bb97__0_2463 -> bb605__0_2463 [label=""];
    bb98__0_2463 -> bb101__0_2463 [label="0"];
    bb98__0_2463 -> bb100__0_2463 [label="otherwise"];
    bb99__0_2463 -> bb120__0_2463 [label=""];
    bb100__0_2463 -> bb115__0_2463 [label=""];
    bb101__0_2463 -> bb102__0_2463 [label="return"];
    bb101__0_2463 -> bb635__0_2463 [label="unwind"];
    bb102__0_2463 -> bb103__0_2463 [label="return"];
    bb102__0_2463 -> bb635__0_2463 [label="unwind"];
    bb103__0_2463 -> bb104__0_2463 [label="return"];
    bb103__0_2463 -> bb635__0_2463 [label="unwind"];
    bb104__0_2463 -> bb105__0_2463 [label="return"];
    bb104__0_2463 -> bb632__0_2463 [label="unwind"];
    bb105__0_2463 -> bb106__0_2463 [label="return"];
    bb105__0_2463 -> bb632__0_2463 [label="unwind"];
    bb106__0_2463 -> bb107__0_2463 [label="return"];
    bb106__0_2463 -> bb635__0_2463 [label="unwind"];
    bb107__0_2463 -> bb108__0_2463 [label="return"];
    bb107__0_2463 -> bb635__0_2463 [label="unwind"];
    bb108__0_2463 -> bb109__0_2463 [label="return"];
    bb108__0_2463 -> bb635__0_2463 [label="unwind"];
    bb109__0_2463 -> bb110__0_2463 [label="return"];
    bb109__0_2463 -> bb635__0_2463 [label="unwind"];
    bb110__0_2463 -> bb111__0_2463 [label="return"];
    bb110__0_2463 -> bb635__0_2463 [label="unwind"];
    bb111__0_2463 -> bb112__0_2463 [label="return"];
    bb111__0_2463 -> bb631__0_2463 [label="unwind"];
    bb112__0_2463 -> bb113__0_2463 [label="return"];
    bb112__0_2463 -> bb631__0_2463 [label="unwind"];
    bb113__0_2463 -> bb114__0_2463 [label="return"];
    bb113__0_2463 -> bb635__0_2463 [label="unwind"];
    bb114__0_2463 -> bb115__0_2463 [label=""];
    bb115__0_2463 -> bb116__0_2463 [label="return"];
    bb115__0_2463 -> bb635__0_2463 [label="unwind"];
    bb116__0_2463 -> bb117__0_2463 [label="0"];
    bb116__0_2463 -> bb118__0_2463 [label="1"];
    bb116__0_2463 -> bb16__0_2463 [label="otherwise"];
    bb117__0_2463 -> bb120__0_2463 [label=""];
    bb118__0_2463 -> bb119__0_2463 [label="return"];
    bb118__0_2463 -> bb635__0_2463 [label="unwind"];
    bb119__0_2463 -> bb605__0_2463 [label=""];
    bb120__0_2463 -> bb121__0_2463 [label="return"];
    bb120__0_2463 -> bb635__0_2463 [label="unwind"];
    bb121__0_2463 -> bb122__0_2463 [label="return"];
    bb121__0_2463 -> bb635__0_2463 [label="unwind"];
    bb122__0_2463 -> bb123__0_2463 [label="return"];
    bb122__0_2463 -> bb635__0_2463 [label="unwind"];
    bb123__0_2463 -> bb124__0_2463 [label="0"];
    bb123__0_2463 -> bb125__0_2463 [label="1"];
    bb123__0_2463 -> bb16__0_2463 [label="otherwise"];
    bb124__0_2463 -> bb127__0_2463 [label="return"];
    bb124__0_2463 -> bb635__0_2463 [label="unwind"];
    bb125__0_2463 -> bb126__0_2463 [label="return"];
    bb125__0_2463 -> bb635__0_2463 [label="unwind"];
    bb126__0_2463 -> bb605__0_2463 [label=""];
    bb127__0_2463 -> bb128__0_2463 [label="return"];
    bb127__0_2463 -> bb635__0_2463 [label="unwind"];
    bb128__0_2463 -> bb129__0_2463 [label="return"];
    bb128__0_2463 -> bb635__0_2463 [label="unwind"];
    bb129__0_2463 -> bb130__0_2463 [label="0"];
    bb129__0_2463 -> bb131__0_2463 [label="1"];
    bb129__0_2463 -> bb16__0_2463 [label="otherwise"];
    bb130__0_2463 -> bb134__0_2463 [label="0"];
    bb130__0_2463 -> bb133__0_2463 [label="1"];
    bb130__0_2463 -> bb16__0_2463 [label="otherwise"];
    bb131__0_2463 -> bb132__0_2463 [label="return"];
    bb131__0_2463 -> bb635__0_2463 [label="unwind"];
    bb132__0_2463 -> bb604__0_2463 [label=""];
    bb133__0_2463 -> bb155__0_2463 [label="return"];
    bb133__0_2463 -> bb635__0_2463 [label="unwind"];
    bb134__0_2463 -> bb144__0_2463 [label="0"];
    bb134__0_2463 -> bb135__0_2463 [label="otherwise"];
    bb135__0_2463 -> bb136__0_2463 [label="0"];
    bb135__0_2463 -> bb144__0_2463 [label="otherwise"];
    bb136__0_2463 -> bb137__0_2463 [label="return"];
    bb136__0_2463 -> bb635__0_2463 [label="unwind"];
    bb137__0_2463 -> bb138__0_2463 [label="return"];
    bb137__0_2463 -> bb635__0_2463 [label="unwind"];
    bb138__0_2463 -> bb139__0_2463 [label="return"];
    bb138__0_2463 -> bb635__0_2463 [label="unwind"];
    bb139__0_2463 -> bb140__0_2463 [label="return"];
    bb139__0_2463 -> bb635__0_2463 [label="unwind"];
    bb140__0_2463 -> bb141__0_2463 [label="return"];
    bb140__0_2463 -> bb630__0_2463 [label="unwind"];
    bb141__0_2463 -> bb142__0_2463 [label="return"];
    bb141__0_2463 -> bb630__0_2463 [label="unwind"];
    bb142__0_2463 -> bb143__0_2463 [label="return"];
    bb142__0_2463 -> bb635__0_2463 [label="unwind"];
    bb143__0_2463 -> bb145__0_2463 [label=""];
    bb144__0_2463 -> bb145__0_2463 [label=""];
    bb145__0_2463 -> bb147__0_2463 [label="0"];
    bb145__0_2463 -> bb146__0_2463 [label="otherwise"];
    bb146__0_2463 -> bb148__0_2463 [label=""];
    bb147__0_2463 -> bb148__0_2463 [label=""];
    bb148__0_2463 -> bb149__0_2463 [label="return"];
    bb148__0_2463 -> bb635__0_2463 [label="unwind"];
    bb149__0_2463 -> bb150__0_2463 [label="return"];
    bb149__0_2463 -> bb635__0_2463 [label="unwind"];
    bb150__0_2463 -> bb151__0_2463 [label="0"];
    bb150__0_2463 -> bb152__0_2463 [label="1"];
    bb150__0_2463 -> bb16__0_2463 [label="otherwise"];
    bb151__0_2463 -> bb154__0_2463 [label="return"];
    bb151__0_2463 -> bb635__0_2463 [label="unwind"];
    bb152__0_2463 -> bb153__0_2463 [label="return"];
    bb152__0_2463 -> bb635__0_2463 [label="unwind"];
    bb153__0_2463 -> bb604__0_2463 [label=""];
    bb154__0_2463 -> bb189__0_2463 [label=""];
    bb155__0_2463 -> bb157__0_2463 [label="0"];
    bb155__0_2463 -> bb156__0_2463 [label="otherwise"];
    bb156__0_2463 -> bb172__0_2463 [label=""];
    bb157__0_2463 -> bb158__0_2463 [label="return"];
    bb157__0_2463 -> bb635__0_2463 [label="unwind"];
    bb158__0_2463 -> bb159__0_2463 [label="return"];
    bb158__0_2463 -> bb635__0_2463 [label="unwind"];
    bb159__0_2463 -> bb160__0_2463 [label="return"];
    bb159__0_2463 -> bb635__0_2463 [label="unwind"];
    bb160__0_2463 -> bb161__0_2463 [label="return"];
    bb160__0_2463 -> bb629__0_2463 [label="unwind"];
    bb161__0_2463 -> bb162__0_2463 [label="return"];
    bb161__0_2463 -> bb629__0_2463 [label="unwind"];
    bb162__0_2463 -> bb163__0_2463 [label="return"];
    bb162__0_2463 -> bb635__0_2463 [label="unwind"];
    bb163__0_2463 -> bb164__0_2463 [label="return"];
    bb163__0_2463 -> bb635__0_2463 [label="unwind"];
    bb164__0_2463 -> bb165__0_2463 [label="return"];
    bb164__0_2463 -> bb635__0_2463 [label="unwind"];
    bb165__0_2463 -> bb166__0_2463 [label="return"];
    bb165__0_2463 -> bb635__0_2463 [label="unwind"];
    bb166__0_2463 -> bb167__0_2463 [label="return"];
    bb166__0_2463 -> bb635__0_2463 [label="unwind"];
    bb167__0_2463 -> bb168__0_2463 [label="return"];
    bb167__0_2463 -> bb635__0_2463 [label="unwind"];
    bb168__0_2463 -> bb169__0_2463 [label="return"];
    bb168__0_2463 -> bb628__0_2463 [label="unwind"];
    bb169__0_2463 -> bb170__0_2463 [label="return"];
    bb169__0_2463 -> bb628__0_2463 [label="unwind"];
    bb170__0_2463 -> bb171__0_2463 [label="return"];
    bb170__0_2463 -> bb635__0_2463 [label="unwind"];
    bb171__0_2463 -> bb172__0_2463 [label=""];
    bb172__0_2463 -> bb173__0_2463 [label="return"];
    bb172__0_2463 -> bb635__0_2463 [label="unwind"];
    bb173__0_2463 -> bb174__0_2463 [label="0"];
    bb173__0_2463 -> bb175__0_2463 [label="1"];
    bb173__0_2463 -> bb16__0_2463 [label="otherwise"];
    bb174__0_2463 -> bb177__0_2463 [label="return"];
    bb174__0_2463 -> bb635__0_2463 [label="unwind"];
    bb175__0_2463 -> bb176__0_2463 [label="return"];
    bb175__0_2463 -> bb635__0_2463 [label="unwind"];
    bb176__0_2463 -> bb603__0_2463 [label=""];
    bb177__0_2463 -> bb178__0_2463 [label="return"];
    bb177__0_2463 -> bb635__0_2463 [label="unwind"];
    bb178__0_2463 -> bb179__0_2463 [label="return"];
    bb178__0_2463 -> bb635__0_2463 [label="unwind"];
    bb179__0_2463 -> bb180__0_2463 [label="0"];
    bb179__0_2463 -> bb181__0_2463 [label="1"];
    bb179__0_2463 -> bb16__0_2463 [label="otherwise"];
    bb180__0_2463 -> bb183__0_2463 [label="return"];
    bb180__0_2463 -> bb635__0_2463 [label="unwind"];
    bb181__0_2463 -> bb182__0_2463 [label="return"];
    bb181__0_2463 -> bb635__0_2463 [label="unwind"];
    bb182__0_2463 -> bb603__0_2463 [label=""];
    bb183__0_2463 -> bb184__0_2463 [label="return"];
    bb183__0_2463 -> bb635__0_2463 [label="unwind"];
    bb184__0_2463 -> bb185__0_2463 [label="0"];
    bb184__0_2463 -> bb186__0_2463 [label="1"];
    bb184__0_2463 -> bb16__0_2463 [label="otherwise"];
    bb185__0_2463 -> bb188__0_2463 [label="return"];
    bb185__0_2463 -> bb635__0_2463 [label="unwind"];
    bb186__0_2463 -> bb187__0_2463 [label="return"];
    bb186__0_2463 -> bb635__0_2463 [label="unwind"];
    bb187__0_2463 -> bb603__0_2463 [label=""];
    bb188__0_2463 -> bb189__0_2463 [label=""];
    bb189__0_2463 -> bb387__0_2463 [label=""];
    bb190__0_2463 -> bb191__0_2463 [label="return"];
    bb190__0_2463 -> bb635__0_2463 [label="unwind"];
    bb191__0_2463 -> bb192__0_2463 [label="return"];
    bb191__0_2463 -> bb635__0_2463 [label="unwind"];
    bb192__0_2463 -> bb193__0_2463 [label="return"];
    bb192__0_2463 -> bb635__0_2463 [label="unwind"];
    bb193__0_2463 -> bb194__0_2463 [label="0"];
    bb193__0_2463 -> bb195__0_2463 [label="1"];
    bb193__0_2463 -> bb16__0_2463 [label="otherwise"];
    bb194__0_2463 -> bb197__0_2463 [label="return"];
    bb194__0_2463 -> bb635__0_2463 [label="unwind"];
    bb195__0_2463 -> bb196__0_2463 [label="return"];
    bb195__0_2463 -> bb635__0_2463 [label="unwind"];
    bb196__0_2463 -> bb602__0_2463 [label=""];
    bb197__0_2463 -> bb198__0_2463 [label="return"];
    bb197__0_2463 -> bb635__0_2463 [label="unwind"];
    bb198__0_2463 -> bb199__0_2463 [label="return"];
    bb198__0_2463 -> bb635__0_2463 [label="unwind"];
    bb199__0_2463 -> bb200__0_2463 [label="0"];
    bb199__0_2463 -> bb201__0_2463 [label="1"];
    bb199__0_2463 -> bb16__0_2463 [label="otherwise"];
    bb200__0_2463 -> bb203__0_2463 [label="return"];
    bb200__0_2463 -> bb635__0_2463 [label="unwind"];
    bb201__0_2463 -> bb202__0_2463 [label="return"];
    bb201__0_2463 -> bb635__0_2463 [label="unwind"];
    bb202__0_2463 -> bb602__0_2463 [label=""];
    bb203__0_2463 -> bb204__0_2463 [label="return"];
    bb203__0_2463 -> bb635__0_2463 [label="unwind"];
    bb204__0_2463 -> bb205__0_2463 [label="return"];
    bb204__0_2463 -> bb635__0_2463 [label="unwind"];
    bb205__0_2463 -> bb206__0_2463 [label="0"];
    bb205__0_2463 -> bb207__0_2463 [label="1"];
    bb205__0_2463 -> bb16__0_2463 [label="otherwise"];
    bb206__0_2463 -> bb209__0_2463 [label="return"];
    bb206__0_2463 -> bb635__0_2463 [label="unwind"];
    bb207__0_2463 -> bb208__0_2463 [label="return"];
    bb207__0_2463 -> bb635__0_2463 [label="unwind"];
    bb208__0_2463 -> bb601__0_2463 [label=""];
    bb209__0_2463 -> bb210__0_2463 [label="return"];
    bb209__0_2463 -> bb635__0_2463 [label="unwind"];
    bb210__0_2463 -> bb211__0_2463 [label="return"];
    bb210__0_2463 -> bb635__0_2463 [label="unwind"];
    bb211__0_2463 -> bb212__0_2463 [label="0"];
    bb211__0_2463 -> bb213__0_2463 [label="1"];
    bb211__0_2463 -> bb16__0_2463 [label="otherwise"];
    bb212__0_2463 -> bb216__0_2463 [label="0"];
    bb212__0_2463 -> bb215__0_2463 [label="otherwise"];
    bb213__0_2463 -> bb214__0_2463 [label="return"];
    bb213__0_2463 -> bb635__0_2463 [label="unwind"];
    bb214__0_2463 -> bb601__0_2463 [label=""];
    bb215__0_2463 -> bb218__0_2463 [label="0"];
    bb215__0_2463 -> bb217__0_2463 [label="otherwise"];
    bb216__0_2463 -> bb239__0_2463 [label=""];
    bb217__0_2463 -> bb234__0_2463 [label=""];
    bb218__0_2463 -> bb219__0_2463 [label="return"];
    bb218__0_2463 -> bb635__0_2463 [label="unwind"];
    bb219__0_2463 -> bb220__0_2463 [label="return"];
    bb219__0_2463 -> bb635__0_2463 [label="unwind"];
    bb220__0_2463 -> bb221__0_2463 [label="return"];
    bb220__0_2463 -> bb635__0_2463 [label="unwind"];
    bb221__0_2463 -> bb222__0_2463 [label="return"];
    bb221__0_2463 -> bb627__0_2463 [label="unwind"];
    bb222__0_2463 -> bb223__0_2463 [label="return"];
    bb222__0_2463 -> bb627__0_2463 [label="unwind"];
    bb223__0_2463 -> bb224__0_2463 [label="return"];
    bb223__0_2463 -> bb635__0_2463 [label="unwind"];
    bb224__0_2463 -> bb225__0_2463 [label="return"];
    bb224__0_2463 -> bb635__0_2463 [label="unwind"];
    bb225__0_2463 -> bb226__0_2463 [label="return"];
    bb225__0_2463 -> bb635__0_2463 [label="unwind"];
    bb226__0_2463 -> bb227__0_2463 [label="return"];
    bb226__0_2463 -> bb635__0_2463 [label="unwind"];
    bb227__0_2463 -> bb228__0_2463 [label="return"];
    bb227__0_2463 -> bb635__0_2463 [label="unwind"];
    bb228__0_2463 -> bb229__0_2463 [label="return"];
    bb228__0_2463 -> bb635__0_2463 [label="unwind"];
    bb229__0_2463 -> bb230__0_2463 [label="return"];
    bb229__0_2463 -> bb635__0_2463 [label="unwind"];
    bb230__0_2463 -> bb231__0_2463 [label="return"];
    bb230__0_2463 -> bb626__0_2463 [label="unwind"];
    bb231__0_2463 -> bb232__0_2463 [label="return"];
    bb231__0_2463 -> bb626__0_2463 [label="unwind"];
    bb232__0_2463 -> bb233__0_2463 [label="return"];
    bb232__0_2463 -> bb635__0_2463 [label="unwind"];
    bb233__0_2463 -> bb234__0_2463 [label=""];
    bb234__0_2463 -> bb235__0_2463 [label="return"];
    bb234__0_2463 -> bb635__0_2463 [label="unwind"];
    bb235__0_2463 -> bb236__0_2463 [label="0"];
    bb235__0_2463 -> bb237__0_2463 [label="1"];
    bb235__0_2463 -> bb16__0_2463 [label="otherwise"];
    bb236__0_2463 -> bb239__0_2463 [label=""];
    bb237__0_2463 -> bb238__0_2463 [label="return"];
    bb237__0_2463 -> bb635__0_2463 [label="unwind"];
    bb238__0_2463 -> bb600__0_2463 [label=""];
    bb239__0_2463 -> bb240__0_2463 [label="return"];
    bb239__0_2463 -> bb635__0_2463 [label="unwind"];
    bb240__0_2463 -> bb241__0_2463 [label="return"];
    bb240__0_2463 -> bb635__0_2463 [label="unwind"];
    bb241__0_2463 -> bb242__0_2463 [label="0"];
    bb241__0_2463 -> bb243__0_2463 [label="1"];
    bb241__0_2463 -> bb16__0_2463 [label="otherwise"];
    bb242__0_2463 -> bb245__0_2463 [label="return"];
    bb242__0_2463 -> bb635__0_2463 [label="unwind"];
    bb243__0_2463 -> bb244__0_2463 [label="return"];
    bb243__0_2463 -> bb635__0_2463 [label="unwind"];
    bb244__0_2463 -> bb599__0_2463 [label=""];
    bb245__0_2463 -> bb246__0_2463 [label="return"];
    bb245__0_2463 -> bb635__0_2463 [label="unwind"];
    bb246__0_2463 -> bb247__0_2463 [label="return"];
    bb246__0_2463 -> bb635__0_2463 [label="unwind"];
    bb247__0_2463 -> bb248__0_2463 [label="return"];
    bb247__0_2463 -> bb635__0_2463 [label="unwind"];
    bb248__0_2463 -> bb249__0_2463 [label="0"];
    bb248__0_2463 -> bb250__0_2463 [label="1"];
    bb248__0_2463 -> bb16__0_2463 [label="otherwise"];
    bb249__0_2463 -> bb252__0_2463 [label="return"];
    bb249__0_2463 -> bb635__0_2463 [label="unwind"];
    bb250__0_2463 -> bb251__0_2463 [label="return"];
    bb250__0_2463 -> bb635__0_2463 [label="unwind"];
    bb251__0_2463 -> bb599__0_2463 [label=""];
    bb252__0_2463 -> bb277__0_2463 [label="255"];
    bb252__0_2463 -> bb253__0_2463 [label="0"];
    bb252__0_2463 -> bb254__0_2463 [label="1"];
    bb252__0_2463 -> bb16__0_2463 [label="otherwise"];
    bb253__0_2463 -> bb339__0_2463 [label="return"];
    bb253__0_2463 -> bb635__0_2463 [label="unwind"];
    bb254__0_2463 -> bb264__0_2463 [label="0"];
    bb254__0_2463 -> bb255__0_2463 [label="otherwise"];
    bb255__0_2463 -> bb256__0_2463 [label="0"];
    bb255__0_2463 -> bb264__0_2463 [label="otherwise"];
    bb256__0_2463 -> bb257__0_2463 [label="return"];
    bb256__0_2463 -> bb635__0_2463 [label="unwind"];
    bb257__0_2463 -> bb258__0_2463 [label="return"];
    bb257__0_2463 -> bb635__0_2463 [label="unwind"];
    bb258__0_2463 -> bb259__0_2463 [label="return"];
    bb258__0_2463 -> bb635__0_2463 [label="unwind"];
    bb259__0_2463 -> bb260__0_2463 [label="return"];
    bb259__0_2463 -> bb635__0_2463 [label="unwind"];
    bb260__0_2463 -> bb261__0_2463 [label="return"];
    bb260__0_2463 -> bb625__0_2463 [label="unwind"];
    bb261__0_2463 -> bb262__0_2463 [label="return"];
    bb261__0_2463 -> bb625__0_2463 [label="unwind"];
    bb262__0_2463 -> bb263__0_2463 [label="return"];
    bb262__0_2463 -> bb635__0_2463 [label="unwind"];
    bb263__0_2463 -> bb265__0_2463 [label=""];
    bb264__0_2463 -> bb265__0_2463 [label=""];
    bb265__0_2463 -> bb266__0_2463 [label="return"];
    bb265__0_2463 -> bb635__0_2463 [label="unwind"];
    bb266__0_2463 -> bb267__0_2463 [label="return"];
    bb266__0_2463 -> bb635__0_2463 [label="unwind"];
    bb267__0_2463 -> bb268__0_2463 [label="0"];
    bb267__0_2463 -> bb269__0_2463 [label="1"];
    bb267__0_2463 -> bb16__0_2463 [label="otherwise"];
    bb268__0_2463 -> bb271__0_2463 [label="return"];
    bb268__0_2463 -> bb635__0_2463 [label="unwind"];
    bb269__0_2463 -> bb270__0_2463 [label="return"];
    bb269__0_2463 -> bb635__0_2463 [label="unwind"];
    bb270__0_2463 -> bb597__0_2463 [label=""];
    bb271__0_2463 -> bb272__0_2463 [label="return"];
    bb271__0_2463 -> bb635__0_2463 [label="unwind"];
    bb272__0_2463 -> bb273__0_2463 [label="0"];
    bb272__0_2463 -> bb274__0_2463 [label="1"];
    bb272__0_2463 -> bb16__0_2463 [label="otherwise"];
    bb273__0_2463 -> bb276__0_2463 [label="return"];
    bb273__0_2463 -> bb635__0_2463 [label="unwind"];
    bb274__0_2463 -> bb275__0_2463 [label="return"];
    bb274__0_2463 -> bb635__0_2463 [label="unwind"];
    bb275__0_2463 -> bb597__0_2463 [label=""];
    bb276__0_2463 -> bb352__0_2463 [label=""];
    bb277__0_2463 -> bb278__0_2463 [label="return"];
    bb277__0_2463 -> bb635__0_2463 [label="unwind"];
    bb278__0_2463 -> bb279__0_2463 [label="return"];
    bb278__0_2463 -> bb635__0_2463 [label="unwind"];
    bb279__0_2463 -> bb281__0_2463 [label="0"];
    bb279__0_2463 -> bb280__0_2463 [label="otherwise"];
    bb280__0_2463 -> bb295__0_2463 [label=""];
    bb281__0_2463 -> bb282__0_2463 [label="return"];
    bb281__0_2463 -> bb635__0_2463 [label="unwind"];
    bb282__0_2463 -> bb283__0_2463 [label="return"];
    bb282__0_2463 -> bb635__0_2463 [label="unwind"];
    bb283__0_2463 -> bb284__0_2463 [label="return"];
    bb283__0_2463 -> bb635__0_2463 [label="unwind"];
    bb284__0_2463 -> bb285__0_2463 [label="return"];
    bb284__0_2463 -> bb624__0_2463 [label="unwind"];
    bb285__0_2463 -> bb286__0_2463 [label="return"];
    bb285__0_2463 -> bb624__0_2463 [label="unwind"];
    bb286__0_2463 -> bb287__0_2463 [label="return"];
    bb286__0_2463 -> bb635__0_2463 [label="unwind"];
    bb287__0_2463 -> bb288__0_2463 [label="return"];
    bb287__0_2463 -> bb635__0_2463 [label="unwind"];
    bb288__0_2463 -> bb289__0_2463 [label="return"];
    bb288__0_2463 -> bb635__0_2463 [label="unwind"];
    bb289__0_2463 -> bb290__0_2463 [label="return"];
    bb289__0_2463 -> bb635__0_2463 [label="unwind"];
    bb290__0_2463 -> bb291__0_2463 [label="return"];
    bb290__0_2463 -> bb635__0_2463 [label="unwind"];
    bb291__0_2463 -> bb292__0_2463 [label="return"];
    bb291__0_2463 -> bb623__0_2463 [label="unwind"];
    bb292__0_2463 -> bb293__0_2463 [label="return"];
    bb292__0_2463 -> bb623__0_2463 [label="unwind"];
    bb293__0_2463 -> bb294__0_2463 [label="return"];
    bb293__0_2463 -> bb635__0_2463 [label="unwind"];
    bb294__0_2463 -> bb295__0_2463 [label=""];
    bb295__0_2463 -> bb296__0_2463 [label="return"];
    bb295__0_2463 -> bb635__0_2463 [label="unwind"];
    bb296__0_2463 -> bb297__0_2463 [label="0"];
    bb296__0_2463 -> bb298__0_2463 [label="1"];
    bb296__0_2463 -> bb16__0_2463 [label="otherwise"];
    bb297__0_2463 -> bb301__0_2463 [label="0"];
    bb297__0_2463 -> bb300__0_2463 [label="otherwise"];
    bb298__0_2463 -> bb299__0_2463 [label="return"];
    bb298__0_2463 -> bb635__0_2463 [label="unwind"];
    bb299__0_2463 -> bb598__0_2463 [label=""];
    bb300__0_2463 -> bb316__0_2463 [label=""];
    bb301__0_2463 -> bb302__0_2463 [label="return"];
    bb301__0_2463 -> bb635__0_2463 [label="unwind"];
    bb302__0_2463 -> bb303__0_2463 [label="return"];
    bb302__0_2463 -> bb635__0_2463 [label="unwind"];
    bb303__0_2463 -> bb304__0_2463 [label="return"];
    bb303__0_2463 -> bb635__0_2463 [label="unwind"];
    bb304__0_2463 -> bb305__0_2463 [label="return"];
    bb304__0_2463 -> bb622__0_2463 [label="unwind"];
    bb305__0_2463 -> bb306__0_2463 [label="return"];
    bb305__0_2463 -> bb622__0_2463 [label="unwind"];
    bb306__0_2463 -> bb307__0_2463 [label="return"];
    bb306__0_2463 -> bb635__0_2463 [label="unwind"];
    bb307__0_2463 -> bb308__0_2463 [label="return"];
    bb307__0_2463 -> bb635__0_2463 [label="unwind"];
    bb308__0_2463 -> bb309__0_2463 [label="return"];
    bb308__0_2463 -> bb635__0_2463 [label="unwind"];
    bb309__0_2463 -> bb310__0_2463 [label="return"];
    bb309__0_2463 -> bb635__0_2463 [label="unwind"];
    bb310__0_2463 -> bb311__0_2463 [label="return"];
    bb310__0_2463 -> bb635__0_2463 [label="unwind"];
    bb311__0_2463 -> bb312__0_2463 [label="return"];
    bb311__0_2463 -> bb635__0_2463 [label="unwind"];
    bb312__0_2463 -> bb313__0_2463 [label="return"];
    bb312__0_2463 -> bb621__0_2463 [label="unwind"];
    bb313__0_2463 -> bb314__0_2463 [label="return"];
    bb313__0_2463 -> bb621__0_2463 [label="unwind"];
    bb314__0_2463 -> bb315__0_2463 [label="return"];
    bb314__0_2463 -> bb635__0_2463 [label="unwind"];
    bb315__0_2463 -> bb316__0_2463 [label=""];
    bb316__0_2463 -> bb317__0_2463 [label="return"];
    bb316__0_2463 -> bb635__0_2463 [label="unwind"];
    bb317__0_2463 -> bb318__0_2463 [label="0"];
    bb317__0_2463 -> bb319__0_2463 [label="1"];
    bb317__0_2463 -> bb16__0_2463 [label="otherwise"];
    bb318__0_2463 -> bb321__0_2463 [label="return"];
    bb318__0_2463 -> bb635__0_2463 [label="unwind"];
    bb319__0_2463 -> bb320__0_2463 [label="return"];
    bb319__0_2463 -> bb635__0_2463 [label="unwind"];
    bb320__0_2463 -> bb598__0_2463 [label=""];
    bb321__0_2463 -> bb322__0_2463 [label="return"];
    bb321__0_2463 -> bb635__0_2463 [label="unwind"];
    bb322__0_2463 -> bb323__0_2463 [label="return"];
    bb322__0_2463 -> bb635__0_2463 [label="unwind"];
    bb323__0_2463 -> bb324__0_2463 [label="return"];
    bb323__0_2463 -> bb635__0_2463 [label="unwind"];
    bb324__0_2463 -> bb325__0_2463 [label="return"];
    bb324__0_2463 -> bb635__0_2463 [label="unwind"];
    bb325__0_2463 -> bb326__0_2463 [label="return"];
    bb325__0_2463 -> bb635__0_2463 [label="unwind"];
    bb326__0_2463 -> bb327__0_2463 [label="0"];
    bb326__0_2463 -> bb328__0_2463 [label="1"];
    bb326__0_2463 -> bb16__0_2463 [label="otherwise"];
    bb327__0_2463 -> bb330__0_2463 [label="return"];
    bb327__0_2463 -> bb635__0_2463 [label="unwind"];
    bb328__0_2463 -> bb329__0_2463 [label="return"];
    bb328__0_2463 -> bb635__0_2463 [label="unwind"];
    bb329__0_2463 -> bb598__0_2463 [label=""];
    bb330__0_2463 -> bb331__0_2463 [label="return"];
    bb330__0_2463 -> bb635__0_2463 [label="unwind"];
    bb331__0_2463 -> bb332__0_2463 [label="0"];
    bb331__0_2463 -> bb333__0_2463 [label="1"];
    bb331__0_2463 -> bb16__0_2463 [label="otherwise"];
    bb332__0_2463 -> bb335__0_2463 [label="return"];
    bb332__0_2463 -> bb635__0_2463 [label="unwind"];
    bb333__0_2463 -> bb334__0_2463 [label="return"];
    bb333__0_2463 -> bb635__0_2463 [label="unwind"];
    bb334__0_2463 -> bb598__0_2463 [label=""];
    bb335__0_2463 -> bb336__0_2463 [label="return"];
    bb335__0_2463 -> bb635__0_2463 [label="unwind"];
    bb336__0_2463 -> bb337__0_2463 [label="return"];
    bb336__0_2463 -> bb635__0_2463 [label="unwind"];
    bb337__0_2463 -> bb338__0_2463 [label="return"];
    bb337__0_2463 -> bb635__0_2463 [label="unwind"];
    bb338__0_2463 -> bb352__0_2463 [label=""];
    bb339__0_2463 -> bb350__0_2463 [label="0"];
    bb339__0_2463 -> bb340__0_2463 [label="otherwise"];
    bb340__0_2463 -> bb341__0_2463 [label="return"];
    bb340__0_2463 -> bb635__0_2463 [label="unwind"];
    bb341__0_2463 -> bb342__0_2463 [label="return"];
    bb341__0_2463 -> bb635__0_2463 [label="unwind"];
    bb342__0_2463 -> bb343__0_2463 [label="0"];
    bb342__0_2463 -> bb344__0_2463 [label="1"];
    bb342__0_2463 -> bb16__0_2463 [label="otherwise"];
    bb343__0_2463 -> bb346__0_2463 [label="return"];
    bb343__0_2463 -> bb635__0_2463 [label="unwind"];
    bb344__0_2463 -> bb345__0_2463 [label="return"];
    bb344__0_2463 -> bb635__0_2463 [label="unwind"];
    bb345__0_2463 -> bb598__0_2463 [label=""];
    bb346__0_2463 -> bb347__0_2463 [label="return"];
    bb346__0_2463 -> bb635__0_2463 [label="unwind"];
    bb347__0_2463 -> bb348__0_2463 [label="return"];
    bb347__0_2463 -> bb635__0_2463 [label="unwind"];
    bb348__0_2463 -> bb349__0_2463 [label="return"];
    bb348__0_2463 -> bb635__0_2463 [label="unwind"];
    bb349__0_2463 -> bb351__0_2463 [label=""];
    bb350__0_2463 -> bb351__0_2463 [label=""];
    bb351__0_2463 -> bb352__0_2463 [label=""];
    bb352__0_2463 -> bb353__0_2463 [label="return"];
    bb352__0_2463 -> bb635__0_2463 [label="unwind"];
    bb353__0_2463 -> bb377__0_2463 [label="255"];
    bb353__0_2463 -> bb354__0_2463 [label="0"];
    bb353__0_2463 -> bb355__0_2463 [label="1"];
    bb353__0_2463 -> bb16__0_2463 [label="otherwise"];
    bb354__0_2463 -> bb386__0_2463 [label=""];
    bb355__0_2463 -> bb365__0_2463 [label="0"];
    bb355__0_2463 -> bb356__0_2463 [label="otherwise"];
    bb356__0_2463 -> bb357__0_2463 [label="0"];
    bb356__0_2463 -> bb365__0_2463 [label="otherwise"];
    bb357__0_2463 -> bb358__0_2463 [label="return"];
    bb357__0_2463 -> bb635__0_2463 [label="unwind"];
    bb358__0_2463 -> bb359__0_2463 [label="return"];
    bb358__0_2463 -> bb635__0_2463 [label="unwind"];
    bb359__0_2463 -> bb360__0_2463 [label="return"];
    bb359__0_2463 -> bb635__0_2463 [label="unwind"];
    bb360__0_2463 -> bb361__0_2463 [label="return"];
    bb360__0_2463 -> bb635__0_2463 [label="unwind"];
    bb361__0_2463 -> bb362__0_2463 [label="return"];
    bb361__0_2463 -> bb620__0_2463 [label="unwind"];
    bb362__0_2463 -> bb363__0_2463 [label="return"];
    bb362__0_2463 -> bb620__0_2463 [label="unwind"];
    bb363__0_2463 -> bb364__0_2463 [label="return"];
    bb363__0_2463 -> bb635__0_2463 [label="unwind"];
    bb364__0_2463 -> bb366__0_2463 [label=""];
    bb365__0_2463 -> bb366__0_2463 [label=""];
    bb366__0_2463 -> bb367__0_2463 [label="return"];
    bb366__0_2463 -> bb635__0_2463 [label="unwind"];
    bb367__0_2463 -> bb368__0_2463 [label="return"];
    bb367__0_2463 -> bb635__0_2463 [label="unwind"];
    bb368__0_2463 -> bb369__0_2463 [label="0"];
    bb368__0_2463 -> bb370__0_2463 [label="1"];
    bb368__0_2463 -> bb16__0_2463 [label="otherwise"];
    bb369__0_2463 -> bb372__0_2463 [label="return"];
    bb369__0_2463 -> bb635__0_2463 [label="unwind"];
    bb370__0_2463 -> bb371__0_2463 [label="return"];
    bb370__0_2463 -> bb635__0_2463 [label="unwind"];
    bb371__0_2463 -> bb595__0_2463 [label=""];
    bb372__0_2463 -> bb373__0_2463 [label="return"];
    bb372__0_2463 -> bb635__0_2463 [label="unwind"];
    bb373__0_2463 -> bb374__0_2463 [label="0"];
    bb373__0_2463 -> bb375__0_2463 [label="1"];
    bb373__0_2463 -> bb16__0_2463 [label="otherwise"];
    bb374__0_2463 -> bb386__0_2463 [label=""];
    bb375__0_2463 -> bb376__0_2463 [label="return"];
    bb375__0_2463 -> bb635__0_2463 [label="unwind"];
    bb376__0_2463 -> bb595__0_2463 [label=""];
    bb377__0_2463 -> bb378__0_2463 [label="return"];
    bb377__0_2463 -> bb635__0_2463 [label="unwind"];
    bb378__0_2463 -> bb379__0_2463 [label="return"];
    bb378__0_2463 -> bb635__0_2463 [label="unwind"];
    bb379__0_2463 -> bb380__0_2463 [label="return"];
    bb379__0_2463 -> bb635__0_2463 [label="unwind"];
    bb380__0_2463 -> bb381__0_2463 [label="return"];
    bb380__0_2463 -> bb635__0_2463 [label="unwind"];
    bb381__0_2463 -> bb382__0_2463 [label="return"];
    bb381__0_2463 -> bb635__0_2463 [label="unwind"];
    bb382__0_2463 -> bb383__0_2463 [label="0"];
    bb382__0_2463 -> bb384__0_2463 [label="1"];
    bb382__0_2463 -> bb16__0_2463 [label="otherwise"];
    bb383__0_2463 -> bb386__0_2463 [label=""];
    bb384__0_2463 -> bb385__0_2463 [label="return"];
    bb384__0_2463 -> bb635__0_2463 [label="unwind"];
    bb385__0_2463 -> bb596__0_2463 [label=""];
    bb386__0_2463 -> bb387__0_2463 [label=""];
    bb387__0_2463 -> bb388__0_2463 [label="return"];
    bb387__0_2463 -> bb636__0_2463 [label="unwind"];
    bb388__0_2463 -> bb13__0_2463 [label=""];
    bb389__0_2463 -> bb390__0_2463 [label="return"];
    bb390__0_2463 -> bb391__0_2463 [label=""];
    bb391__0_2463 -> bb392__0_2463 [label="return"];
    bb392__0_2463 -> bb394__0_2463 [label="0"];
    bb392__0_2463 -> bb393__0_2463 [label="1"];
    bb392__0_2463 -> bb16__0_2463 [label="otherwise"];
    bb393__0_2463 -> bb395__0_2463 [label="return"];
    bb394__0_2463 -> bb538__0_2463 [label="return"];
    bb395__0_2463 -> bb397__0_2463 [label="0"];
    bb395__0_2463 -> bb396__0_2463 [label="otherwise"];
    bb396__0_2463 -> bb391__0_2463 [label=""];
    bb397__0_2463 -> bb398__0_2463 [label="return"];
    bb398__0_2463 -> bb399__0_2463 [label="return"];
    bb398__0_2463 -> bb636__0_2463 [label="unwind"];
    bb399__0_2463 -> bb400__0_2463 [label="0"];
    bb399__0_2463 -> bb401__0_2463 [label="1"];
    bb399__0_2463 -> bb16__0_2463 [label="otherwise"];
    bb400__0_2463 -> bb403__0_2463 [label="return"];
    bb400__0_2463 -> bb619__0_2463 [label="unwind"];
    bb401__0_2463 -> bb402__0_2463 [label="return"];
    bb401__0_2463 -> bb643__0_2463 [label="unwind"];
    bb402__0_2463 -> bb594__0_2463 [label=""];
    bb403__0_2463 -> bb405__0_2463 [label="0"];
    bb403__0_2463 -> bb404__0_2463 [label="otherwise"];
    bb404__0_2463 -> bb420__0_2463 [label=""];
    bb405__0_2463 -> bb406__0_2463 [label="return"];
    bb405__0_2463 -> bb619__0_2463 [label="unwind"];
    bb406__0_2463 -> bb407__0_2463 [label="return"];
    bb406__0_2463 -> bb619__0_2463 [label="unwind"];
    bb407__0_2463 -> bb408__0_2463 [label="return"];
    bb407__0_2463 -> bb619__0_2463 [label="unwind"];
    bb408__0_2463 -> bb409__0_2463 [label="return"];
    bb408__0_2463 -> bb618__0_2463 [label="unwind"];
    bb409__0_2463 -> bb410__0_2463 [label="return"];
    bb409__0_2463 -> bb618__0_2463 [label="unwind"];
    bb410__0_2463 -> bb411__0_2463 [label="return"];
    bb410__0_2463 -> bb619__0_2463 [label="unwind"];
    bb411__0_2463 -> bb412__0_2463 [label="return"];
    bb411__0_2463 -> bb619__0_2463 [label="unwind"];
    bb412__0_2463 -> bb413__0_2463 [label="return"];
    bb412__0_2463 -> bb619__0_2463 [label="unwind"];
    bb413__0_2463 -> bb414__0_2463 [label="return"];
    bb413__0_2463 -> bb619__0_2463 [label="unwind"];
    bb414__0_2463 -> bb415__0_2463 [label="return"];
    bb414__0_2463 -> bb619__0_2463 [label="unwind"];
    bb415__0_2463 -> bb416__0_2463 [label="return"];
    bb415__0_2463 -> bb619__0_2463 [label="unwind"];
    bb416__0_2463 -> bb417__0_2463 [label="return"];
    bb416__0_2463 -> bb617__0_2463 [label="unwind"];
    bb417__0_2463 -> bb418__0_2463 [label="return"];
    bb417__0_2463 -> bb617__0_2463 [label="unwind"];
    bb418__0_2463 -> bb419__0_2463 [label="return"];
    bb418__0_2463 -> bb619__0_2463 [label="unwind"];
    bb419__0_2463 -> bb420__0_2463 [label=""];
    bb420__0_2463 -> bb421__0_2463 [label="return"];
    bb420__0_2463 -> bb619__0_2463 [label="unwind"];
    bb421__0_2463 -> bb422__0_2463 [label="0"];
    bb421__0_2463 -> bb423__0_2463 [label="1"];
    bb421__0_2463 -> bb16__0_2463 [label="otherwise"];
    bb422__0_2463 -> bb425__0_2463 [label="return"];
    bb422__0_2463 -> bb619__0_2463 [label="unwind"];
    bb423__0_2463 -> bb424__0_2463 [label="return"];
    bb423__0_2463 -> bb619__0_2463 [label="unwind"];
    bb424__0_2463 -> bb593__0_2463 [label=""];
    bb425__0_2463 -> bb426__0_2463 [label="return"];
    bb425__0_2463 -> bb619__0_2463 [label="unwind"];
    bb426__0_2463 -> bb427__0_2463 [label="return"];
    bb426__0_2463 -> bb619__0_2463 [label="unwind"];
    bb427__0_2463 -> bb428__0_2463 [label="0"];
    bb427__0_2463 -> bb429__0_2463 [label="1"];
    bb427__0_2463 -> bb16__0_2463 [label="otherwise"];
    bb428__0_2463 -> bb431__0_2463 [label="return"];
    bb428__0_2463 -> bb641__0_2463 [label="unwind"];
    bb429__0_2463 -> bb430__0_2463 [label="return"];
    bb429__0_2463 -> bb642__0_2463 [label="unwind"];
    bb430__0_2463 -> bb592__0_2463 [label=""];
    bb431__0_2463 -> bb432__0_2463 [label="return"];
    bb431__0_2463 -> bb641__0_2463 [label="unwind"];
    bb432__0_2463 -> bb433__0_2463 [label="return"];
    bb432__0_2463 -> bb641__0_2463 [label="unwind"];
    bb433__0_2463 -> bb434__0_2463 [label="return"];
    bb433__0_2463 -> bb641__0_2463 [label="unwind"];
    bb434__0_2463 -> bb435__0_2463 [label="return"];
    bb434__0_2463 -> bb641__0_2463 [label="unwind"];
    bb435__0_2463 -> bb436__0_2463 [label="return"];
    bb435__0_2463 -> bb641__0_2463 [label="unwind"];
    bb436__0_2463 -> bb437__0_2463 [label="return"];
    bb436__0_2463 -> bb641__0_2463 [label="unwind"];
    bb437__0_2463 -> bb438__0_2463 [label="0"];
    bb437__0_2463 -> bb439__0_2463 [label="1"];
    bb437__0_2463 -> bb16__0_2463 [label="otherwise"];
    bb438__0_2463 -> bb441__0_2463 [label="return"];
    bb438__0_2463 -> bb641__0_2463 [label="unwind"];
    bb439__0_2463 -> bb440__0_2463 [label="return"];
    bb439__0_2463 -> bb641__0_2463 [label="unwind"];
    bb440__0_2463 -> bb591__0_2463 [label=""];
    bb441__0_2463 -> bb442__0_2463 [label="return"];
    bb441__0_2463 -> bb641__0_2463 [label="unwind"];
    bb442__0_2463 -> bb443__0_2463 [label="0"];
    bb442__0_2463 -> bb444__0_2463 [label="1"];
    bb442__0_2463 -> bb16__0_2463 [label="otherwise"];
    bb443__0_2463 -> bb446__0_2463 [label="return"];
    bb443__0_2463 -> bb641__0_2463 [label="unwind"];
    bb444__0_2463 -> bb445__0_2463 [label="return"];
    bb444__0_2463 -> bb641__0_2463 [label="unwind"];
    bb445__0_2463 -> bb591__0_2463 [label=""];
    bb446__0_2463 -> bb447__0_2463 [label="return"];
    bb446__0_2463 -> bb641__0_2463 [label="unwind"];
    bb447__0_2463 -> bb448__0_2463 [label="return"];
    bb447__0_2463 -> bb641__0_2463 [label="unwind"];
    bb448__0_2463 -> bb449__0_2463 [label="return"];
    bb448__0_2463 -> bb641__0_2463 [label="unwind"];
    bb449__0_2463 -> bb450__0_2463 [label="return"];
    bb449__0_2463 -> bb641__0_2463 [label="unwind"];
    bb450__0_2463 -> bb451__0_2463 [label="return"];
    bb450__0_2463 -> bb641__0_2463 [label="unwind"];
    bb451__0_2463 -> bb452__0_2463 [label="return"];
    bb451__0_2463 -> bb641__0_2463 [label="unwind"];
    bb452__0_2463 -> bb453__0_2463 [label="return"];
    bb452__0_2463 -> bb641__0_2463 [label="unwind"];
    bb453__0_2463 -> bb454__0_2463 [label="return"];
    bb453__0_2463 -> bb641__0_2463 [label="unwind"];
    bb454__0_2463 -> bb455__0_2463 [label="return"];
    bb454__0_2463 -> bb641__0_2463 [label="unwind"];
    bb455__0_2463 -> bb456__0_2463 [label="0"];
    bb455__0_2463 -> bb457__0_2463 [label="1"];
    bb455__0_2463 -> bb16__0_2463 [label="otherwise"];
    bb456__0_2463 -> bb459__0_2463 [label="return"];
    bb456__0_2463 -> bb641__0_2463 [label="unwind"];
    bb457__0_2463 -> bb458__0_2463 [label="return"];
    bb457__0_2463 -> bb641__0_2463 [label="unwind"];
    bb458__0_2463 -> bb589__0_2463 [label=""];
    bb459__0_2463 -> bb460__0_2463 [label="return"];
    bb459__0_2463 -> bb641__0_2463 [label="unwind"];
    bb460__0_2463 -> bb461__0_2463 [label="0"];
    bb460__0_2463 -> bb462__0_2463 [label="1"];
    bb460__0_2463 -> bb16__0_2463 [label="otherwise"];
    bb461__0_2463 -> bb464__0_2463 [label="return"];
    bb461__0_2463 -> bb641__0_2463 [label="unwind"];
    bb462__0_2463 -> bb463__0_2463 [label="return"];
    bb462__0_2463 -> bb641__0_2463 [label="unwind"];
    bb463__0_2463 -> bb589__0_2463 [label=""];
    bb464__0_2463 -> bb466__0_2463 [label="0"];
    bb464__0_2463 -> bb465__0_2463 [label="otherwise"];
    bb465__0_2463 -> bb467__0_2463 [label=""];
    bb466__0_2463 -> bb467__0_2463 [label=""];
    bb467__0_2463 -> bb468__0_2463 [label="return"];
    bb467__0_2463 -> bb641__0_2463 [label="unwind"];
    bb468__0_2463 -> bb469__0_2463 [label="return"];
    bb468__0_2463 -> bb641__0_2463 [label="unwind"];
    bb469__0_2463 -> bb470__0_2463 [label="return"];
    bb469__0_2463 -> bb641__0_2463 [label="unwind"];
    bb470__0_2463 -> bb471__0_2463 [label="return"];
    bb470__0_2463 -> bb641__0_2463 [label="unwind"];
    bb471__0_2463 -> bb472__0_2463 [label="return"];
    bb471__0_2463 -> bb641__0_2463 [label="unwind"];
    bb472__0_2463 -> bb473__0_2463 [label="0"];
    bb472__0_2463 -> bb474__0_2463 [label="1"];
    bb472__0_2463 -> bb16__0_2463 [label="otherwise"];
    bb473__0_2463 -> bb476__0_2463 [label="return"];
    bb473__0_2463 -> bb641__0_2463 [label="unwind"];
    bb474__0_2463 -> bb475__0_2463 [label="return"];
    bb474__0_2463 -> bb641__0_2463 [label="unwind"];
    bb475__0_2463 -> bb588__0_2463 [label=""];
    bb476__0_2463 -> bb477__0_2463 [label="return"];
    bb476__0_2463 -> bb641__0_2463 [label="unwind"];
    bb477__0_2463 -> bb478__0_2463 [label="return"];
    bb477__0_2463 -> bb641__0_2463 [label="unwind"];
    bb478__0_2463 -> bb479__0_2463 [label="0"];
    bb478__0_2463 -> bb480__0_2463 [label="1"];
    bb478__0_2463 -> bb16__0_2463 [label="otherwise"];
    bb479__0_2463 -> bb482__0_2463 [label="return"];
    bb479__0_2463 -> bb641__0_2463 [label="unwind"];
    bb480__0_2463 -> bb481__0_2463 [label="return"];
    bb480__0_2463 -> bb641__0_2463 [label="unwind"];
    bb481__0_2463 -> bb587__0_2463 [label=""];
    bb482__0_2463 -> bb483__0_2463 [label="return"];
    bb482__0_2463 -> bb641__0_2463 [label="unwind"];
    bb483__0_2463 -> bb484__0_2463 [label="return"];
    bb483__0_2463 -> bb641__0_2463 [label="unwind"];
    bb484__0_2463 -> bb485__0_2463 [label="return"];
    bb484__0_2463 -> bb641__0_2463 [label="unwind"];
    bb485__0_2463 -> bb486__0_2463 [label="0"];
    bb485__0_2463 -> bb487__0_2463 [label="1"];
    bb485__0_2463 -> bb16__0_2463 [label="otherwise"];
    bb486__0_2463 -> bb489__0_2463 [label="return"];
    bb486__0_2463 -> bb641__0_2463 [label="unwind"];
    bb487__0_2463 -> bb488__0_2463 [label="return"];
    bb487__0_2463 -> bb641__0_2463 [label="unwind"];
    bb488__0_2463 -> bb587__0_2463 [label=""];
    bb489__0_2463 -> bb496__0_2463 [label="0"];
    bb489__0_2463 -> bb490__0_2463 [label="otherwise"];
    bb490__0_2463 -> bb491__0_2463 [label="return"];
    bb490__0_2463 -> bb641__0_2463 [label="unwind"];
    bb491__0_2463 -> bb492__0_2463 [label="return"];
    bb491__0_2463 -> bb641__0_2463 [label="unwind"];
    bb492__0_2463 -> bb493__0_2463 [label="0"];
    bb492__0_2463 -> bb494__0_2463 [label="1"];
    bb492__0_2463 -> bb16__0_2463 [label="otherwise"];
    bb493__0_2463 -> bb497__0_2463 [label=""];
    bb494__0_2463 -> bb495__0_2463 [label="return"];
    bb494__0_2463 -> bb641__0_2463 [label="unwind"];
    bb495__0_2463 -> bb587__0_2463 [label=""];
    bb496__0_2463 -> bb497__0_2463 [label=""];
    bb497__0_2463 -> bb498__0_2463 [label="return"];
    bb497__0_2463 -> bb641__0_2463 [label="unwind"];
    bb498__0_2463 -> bb499__0_2463 [label="return"];
    bb498__0_2463 -> bb641__0_2463 [label="unwind"];
    bb499__0_2463 -> bb500__0_2463 [label="0"];
    bb499__0_2463 -> bb501__0_2463 [label="1"];
    bb499__0_2463 -> bb16__0_2463 [label="otherwise"];
    bb500__0_2463 -> bb504__0_2463 [label="0"];
    bb500__0_2463 -> bb503__0_2463 [label="otherwise"];
    bb501__0_2463 -> bb502__0_2463 [label="return"];
    bb501__0_2463 -> bb641__0_2463 [label="unwind"];
    bb502__0_2463 -> bb587__0_2463 [label=""];
    bb503__0_2463 -> bb505__0_2463 [label=""];
    bb504__0_2463 -> bb506__0_2463 [label="0"];
    bb504__0_2463 -> bb505__0_2463 [label="otherwise"];
    bb505__0_2463 -> bb508__0_2463 [label=""];
    bb506__0_2463 -> bb507__0_2463 [label="return"];
    bb506__0_2463 -> bb641__0_2463 [label="unwind"];
    bb507__0_2463 -> bb508__0_2463 [label=""];
    bb508__0_2463 -> bb518__0_2463 [label="0"];
    bb508__0_2463 -> bb509__0_2463 [label="otherwise"];
    bb509__0_2463 -> bb510__0_2463 [label="return"];
    bb509__0_2463 -> bb641__0_2463 [label="unwind"];
    bb510__0_2463 -> bb511__0_2463 [label="return"];
    bb510__0_2463 -> bb641__0_2463 [label="unwind"];
    bb511__0_2463 -> bb512__0_2463 [label="0"];
    bb511__0_2463 -> bb513__0_2463 [label="1"];
    bb511__0_2463 -> bb16__0_2463 [label="otherwise"];
    bb512__0_2463 -> bb515__0_2463 [label="return"];
    bb512__0_2463 -> bb641__0_2463 [label="unwind"];
    bb513__0_2463 -> bb514__0_2463 [label="return"];
    bb513__0_2463 -> bb641__0_2463 [label="unwind"];
    bb514__0_2463 -> bb586__0_2463 [label=""];
    bb515__0_2463 -> bb516__0_2463 [label="return"];
    bb515__0_2463 -> bb641__0_2463 [label="unwind"];
    bb516__0_2463 -> bb517__0_2463 [label="return"];
    bb516__0_2463 -> bb641__0_2463 [label="unwind"];
    bb517__0_2463 -> bb519__0_2463 [label=""];
    bb518__0_2463 -> bb519__0_2463 [label=""];
    bb519__0_2463 -> bb520__0_2463 [label="0"];
    bb519__0_2463 -> bb522__0_2463 [label="otherwise"];
    bb520__0_2463 -> bb521__0_2463 [label="return"];
    bb520__0_2463 -> bb641__0_2463 [label="unwind"];
    bb521__0_2463 -> bb535__0_2463 [label="0"];
    bb521__0_2463 -> bb522__0_2463 [label="otherwise"];
    bb522__0_2463 -> bb523__0_2463 [label="return"];
    bb522__0_2463 -> bb641__0_2463 [label="unwind"];
    bb523__0_2463 -> bb524__0_2463 [label="return"];
    bb523__0_2463 -> bb641__0_2463 [label="unwind"];
    bb524__0_2463 -> bb525__0_2463 [label="0"];
    bb524__0_2463 -> bb526__0_2463 [label="1"];
    bb524__0_2463 -> bb16__0_2463 [label="otherwise"];
    bb525__0_2463 -> bb528__0_2463 [label="return"];
    bb525__0_2463 -> bb641__0_2463 [label="unwind"];
    bb526__0_2463 -> bb527__0_2463 [label="return"];
    bb526__0_2463 -> bb641__0_2463 [label="unwind"];
    bb527__0_2463 -> bb585__0_2463 [label=""];
    bb528__0_2463 -> bb529__0_2463 [label="return"];
    bb528__0_2463 -> bb641__0_2463 [label="unwind"];
    bb529__0_2463 -> bb530__0_2463 [label="return"];
    bb529__0_2463 -> bb641__0_2463 [label="unwind"];
    bb530__0_2463 -> bb531__0_2463 [label="0"];
    bb530__0_2463 -> bb532__0_2463 [label="1"];
    bb530__0_2463 -> bb16__0_2463 [label="otherwise"];
    bb531__0_2463 -> bb534__0_2463 [label="return"];
    bb531__0_2463 -> bb641__0_2463 [label="unwind"];
    bb532__0_2463 -> bb533__0_2463 [label="return"];
    bb532__0_2463 -> bb641__0_2463 [label="unwind"];
    bb533__0_2463 -> bb585__0_2463 [label=""];
    bb534__0_2463 -> bb536__0_2463 [label=""];
    bb535__0_2463 -> bb536__0_2463 [label=""];
    bb536__0_2463 -> bb537__0_2463 [label="return"];
    bb536__0_2463 -> bb636__0_2463 [label="unwind"];
    bb537__0_2463 -> bb391__0_2463 [label=""];
    bb538__0_2463 -> bb539__0_2463 [label="return"];
    bb539__0_2463 -> bb540__0_2463 [label="0"];
    bb539__0_2463 -> bb541__0_2463 [label="1"];
    bb539__0_2463 -> bb16__0_2463 [label="otherwise"];
    bb540__0_2463 -> bb543__0_2463 [label="return"];
    bb541__0_2463 -> bb542__0_2463 [label="return"];
    bb542__0_2463 -> bb614__0_2463 [label=""];
    bb543__0_2463 -> bb544__0_2463 [label="return"];
    bb544__0_2463 -> bb545__0_2463 [label=""];
    bb545__0_2463 -> bb546__0_2463 [label="return"];
    bb546__0_2463 -> bb548__0_2463 [label="0"];
    bb546__0_2463 -> bb547__0_2463 [label="1"];
    bb546__0_2463 -> bb16__0_2463 [label="otherwise"];
    bb547__0_2463 -> bb550__0_2463 [label="0"];
    bb547__0_2463 -> bb549__0_2463 [label="otherwise"];
    bb548__0_2463 -> bb615__0_2463 [label=""];
    bb549__0_2463 -> bb581__0_2463 [label=""];
    bb550__0_2463 -> bb551__0_2463 [label="return"];
    bb551__0_2463 -> bb552__0_2463 [label="return"];
    bb552__0_2463 -> bb554__0_2463 [label="0"];
    bb552__0_2463 -> bb553__0_2463 [label="otherwise"];
    bb553__0_2463 -> bb581__0_2463 [label=""];
    bb554__0_2463 -> bb555__0_2463 [label="return"];
    bb555__0_2463 -> bb556__0_2463 [label="return"];
    bb555__0_2463 -> bb636__0_2463 [label="unwind"];
    bb556__0_2463 -> bb557__0_2463 [label="0"];
    bb556__0_2463 -> bb558__0_2463 [label="1"];
    bb556__0_2463 -> bb16__0_2463 [label="otherwise"];
    bb557__0_2463 -> bb560__0_2463 [label="return"];
    bb557__0_2463 -> bb616__0_2463 [label="unwind"];
    bb558__0_2463 -> bb559__0_2463 [label="return"];
    bb558__0_2463 -> bb639__0_2463 [label="unwind"];
    bb559__0_2463 -> bb584__0_2463 [label=""];
    bb560__0_2463 -> bb561__0_2463 [label="return"];
    bb560__0_2463 -> bb616__0_2463 [label="unwind"];
    bb561__0_2463 -> bb562__0_2463 [label="return"];
    bb561__0_2463 -> bb616__0_2463 [label="unwind"];
    bb562__0_2463 -> bb563__0_2463 [label="return"];
    bb562__0_2463 -> bb616__0_2463 [label="unwind"];
    bb563__0_2463 -> bb564__0_2463 [label="0"];
    bb563__0_2463 -> bb565__0_2463 [label="1"];
    bb563__0_2463 -> bb16__0_2463 [label="otherwise"];
    bb564__0_2463 -> bb567__0_2463 [label="return"];
    bb564__0_2463 -> bb616__0_2463 [label="unwind"];
    bb565__0_2463 -> bb566__0_2463 [label="return"];
    bb565__0_2463 -> bb616__0_2463 [label="unwind"];
    bb566__0_2463 -> bb583__0_2463 [label=""];
    bb567__0_2463 -> bb568__0_2463 [label="return"];
    bb567__0_2463 -> bb616__0_2463 [label="unwind"];
    bb568__0_2463 -> bb569__0_2463 [label="return"];
    bb568__0_2463 -> bb616__0_2463 [label="unwind"];
    bb569__0_2463 -> bb570__0_2463 [label="return"];
    bb569__0_2463 -> bb616__0_2463 [label="unwind"];
    bb570__0_2463 -> bb571__0_2463 [label="0"];
    bb570__0_2463 -> bb572__0_2463 [label="1"];
    bb570__0_2463 -> bb16__0_2463 [label="otherwise"];
    bb571__0_2463 -> bb574__0_2463 [label="return"];
    bb571__0_2463 -> bb616__0_2463 [label="unwind"];
    bb572__0_2463 -> bb573__0_2463 [label="return"];
    bb572__0_2463 -> bb616__0_2463 [label="unwind"];
    bb573__0_2463 -> bb582__0_2463 [label=""];
    bb574__0_2463 -> bb575__0_2463 [label="return"];
    bb574__0_2463 -> bb616__0_2463 [label="unwind"];
    bb575__0_2463 -> bb576__0_2463 [label="return"];
    bb575__0_2463 -> bb616__0_2463 [label="unwind"];
    bb576__0_2463 -> bb577__0_2463 [label="0"];
    bb576__0_2463 -> bb578__0_2463 [label="1"];
    bb576__0_2463 -> bb16__0_2463 [label="otherwise"];
    bb577__0_2463 -> bb580__0_2463 [label="return"];
    bb577__0_2463 -> bb636__0_2463 [label="unwind"];
    bb578__0_2463 -> bb579__0_2463 [label="return"];
    bb578__0_2463 -> bb616__0_2463 [label="unwind"];
    bb579__0_2463 -> bb582__0_2463 [label=""];
    bb580__0_2463 -> bb545__0_2463 [label=""];
    bb581__0_2463 -> bb545__0_2463 [label=""];
    bb582__0_2463 -> bb583__0_2463 [label=""];
    bb583__0_2463 -> bb584__0_2463 [label="return"];
    bb583__0_2463 -> bb636__0_2463 [label="unwind"];
    bb584__0_2463 -> bb614__0_2463 [label=""];
    bb585__0_2463 -> bb586__0_2463 [label=""];
    bb586__0_2463 -> bb587__0_2463 [label=""];
    bb587__0_2463 -> bb588__0_2463 [label=""];
    bb588__0_2463 -> bb590__0_2463 [label=""];
    bb589__0_2463 -> bb590__0_2463 [label=""];
    bb590__0_2463 -> bb638__0_2463 [label=""];
    bb591__0_2463 -> bb638__0_2463 [label=""];
    bb592__0_2463 -> bb593__0_2463 [label=""];
    bb593__0_2463 -> bb594__0_2463 [label="return"];
    bb593__0_2463 -> bb636__0_2463 [label="unwind"];
    bb594__0_2463 -> bb614__0_2463 [label=""];
    bb595__0_2463 -> bb596__0_2463 [label=""];
    bb596__0_2463 -> bb606__0_2463 [label=""];
    bb597__0_2463 -> bb598__0_2463 [label=""];
    bb598__0_2463 -> bb600__0_2463 [label=""];
    bb599__0_2463 -> bb600__0_2463 [label=""];
    bb600__0_2463 -> bb602__0_2463 [label=""];
    bb601__0_2463 -> bb602__0_2463 [label=""];
    bb602__0_2463 -> bb606__0_2463 [label=""];
    bb603__0_2463 -> bb604__0_2463 [label=""];
    bb604__0_2463 -> bb605__0_2463 [label=""];
    bb605__0_2463 -> bb606__0_2463 [label=""];
    bb606__0_2463 -> bb607__0_2463 [label=""];
    bb607__0_2463 -> bb608__0_2463 [label=""];
    bb608__0_2463 -> bb609__0_2463 [label=""];
    bb609__0_2463 -> bb611__0_2463 [label=""];
    bb610__0_2463 -> bb611__0_2463 [label=""];
    bb611__0_2463 -> bb612__0_2463 [label="return"];
    bb611__0_2463 -> bb636__0_2463 [label="unwind"];
    bb612__0_2463 -> bb613__0_2463 [label=""];
    bb613__0_2463 -> bb614__0_2463 [label=""];
    bb614__0_2463 -> bb615__0_2463 [label=""];
    bb616__0_2463 -> bb636__0_2463 [label="return"];
    bb617__0_2463 -> bb619__0_2463 [label="return"];
    bb618__0_2463 -> bb619__0_2463 [label="return"];
    bb619__0_2463 -> bb636__0_2463 [label="return"];
    bb620__0_2463 -> bb635__0_2463 [label="return"];
    bb621__0_2463 -> bb635__0_2463 [label="return"];
    bb622__0_2463 -> bb635__0_2463 [label="return"];
    bb623__0_2463 -> bb635__0_2463 [label="return"];
    bb624__0_2463 -> bb635__0_2463 [label="return"];
    bb625__0_2463 -> bb635__0_2463 [label="return"];
    bb626__0_2463 -> bb635__0_2463 [label="return"];
    bb627__0_2463 -> bb635__0_2463 [label="return"];
    bb628__0_2463 -> bb635__0_2463 [label="return"];
    bb629__0_2463 -> bb635__0_2463 [label="return"];
    bb630__0_2463 -> bb635__0_2463 [label="return"];
    bb631__0_2463 -> bb635__0_2463 [label="return"];
    bb632__0_2463 -> bb635__0_2463 [label="return"];
    bb633__0_2463 -> bb635__0_2463 [label="return"];
    bb634__0_2463 -> bb635__0_2463 [label="return"];
    bb635__0_2463 -> bb636__0_2463 [label="return"];
    bb637__0_2463 -> bb592__0_2463 [label="return"];
    bb637__0_2463 -> bb619__0_2463 [label="unwind"];
    bb638__0_2463 -> bb592__0_2463 [label="0"];
    bb638__0_2463 -> bb637__0_2463 [label="otherwise"];
    bb639__0_2463 -> bb636__0_2463 [label=""];
    bb640__0_2463 -> bb619__0_2463 [label="return"];
    bb641__0_2463 -> bb619__0_2463 [label="0"];
    bb641__0_2463 -> bb640__0_2463 [label="otherwise"];
    bb642__0_2463 -> bb619__0_2463 [label=""];
    bb643__0_2463 -> bb636__0_2463 [label=""];
    bb644__0_2463 -> bb636__0_2463 [label=""];
}
