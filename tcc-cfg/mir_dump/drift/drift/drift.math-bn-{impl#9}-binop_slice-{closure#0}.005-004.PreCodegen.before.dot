digraph Mir_0_14023 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn U256::binop_slice::{closure#0}(_1: &amp;ReErased mut Closure(DefId(0:14023 ~ drift[d311]::math::bn::{impl#9}::binop_slice::{closure#0}), [impl Fn(u64, u64) -&gt; (u64, bool) + Copy/#0, i16, Binder(extern &quot;RustCall&quot; fn(((&amp;ReErased mut u64, &amp;ReErased u64),)), []), (&amp;ReErased mut bool, &amp;ReErased impl Fn(u64, u64) -&gt; (u64, bool) + Copy/#0)]), _2: (&amp;ReErased mut u64, &amp;ReErased u64)) -&gt; ()<br align="left"/>let _3: &amp;ReErased mut u64;<br align="left"/>let _4: &amp;ReErased u64;<br align="left"/>let _5: u64;<br align="left"/>let _6: bool;<br align="left"/>let mut _7: (u64, bool);<br align="left"/>let mut _8: u64;<br align="left"/>let mut _9: u64;<br align="left"/>let mut _10: bool;<br align="left"/>let mut _11: impl Fn(u64, u64) -&gt; (u64, bool) + Copy/#0;<br align="left"/>let mut _12: u64;<br align="left"/>let mut _13: bool;<br align="left"/>let mut _14: &amp;ReErased mut bool;<br align="left"/>let mut _15: &amp;ReErased impl Fn(u64, u64) -&gt; (u64, bool) + Copy/#0;<br align="left"/>let mut _16: &amp;ReErased mut bool;<br align="left"/>debug c =&gt; (*((*_1).0: &amp;mut bool));<br align="left"/>debug binop =&gt; (*((*_1).1: &amp;impl Fn(u64, u64) -&gt; (u64, bool) + Copy));<br align="left"/>debug x =&gt; _3;<br align="left"/>debug y =&gt; _4;<br align="left"/>debug res =&gt; _5;<br align="left"/>debug carry =&gt; _6;<br align="left"/>>;
    bb0__0_14023 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>_3 = move (_2.0: &amp;mut u64)<br/>StorageLive(_4)<br/>_4 = (_2.1: &amp;u64)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = (*_3)<br/>StorageLive(_9)<br/>_9 = (*_4)<br/>StorageLive(_10)<br/>_14 = deref_copy ((*_1).0: &amp;mut bool)<br/>_10 = (*_14)<br/>StorageLive(_11)<br/>_15 = deref_copy ((*_1).1: &amp;impl Fn(u64, u64) -&gt; (u64, bool) + Copy)<br/>_11 = (*_15)<br/></td></tr><tr><td align="left">_7 = U256::binop_carry::&lt;impl Fn(u64, u64) -&gt; (u64, bool) + Copy&gt;(move _8, move _9, move _10, move _11)</td></tr></table>>];
    bb1__0_14023 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/>StorageLive(_5)<br/>_5 = (_7.0: u64)<br/>StorageLive(_6)<br/>_6 = (_7.1: bool)<br/>StorageDead(_7)<br/>StorageLive(_12)<br/>_12 = _5<br/>(*_3) = move _12<br/>StorageDead(_12)<br/>StorageLive(_13)<br/>_13 = _6<br/>_16 = deref_copy ((*_1).0: &amp;mut bool)<br/>(*_16) = move _13<br/>StorageDead(_13)<br/>_0 = const ()<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_14023 -> bb1__0_14023 [label="return"];
}
