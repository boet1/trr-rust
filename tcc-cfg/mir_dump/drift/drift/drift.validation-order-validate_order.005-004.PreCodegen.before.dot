digraph Mir_0_4556 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn validate_order(_1: &amp;ReErased state::user::Order, _2: &amp;ReErased state::perp_market::PerpMarket, _3: std::option::Option&lt;i64&gt;, _4: u64) -&gt; std::result::Result&lt;(), error::ErrorCode&gt;<br align="left"/>let _5: ();<br align="left"/>let mut _6: isize;<br align="left"/>let mut _7: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _8: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _9: &amp;ReErased state::user::Order;<br align="left"/>let mut _10: u64;<br align="left"/>let mut _11: u64;<br align="left"/>let mut _12: isize;<br align="left"/>let _13: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _14: !;<br align="left"/>let mut _15: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _16: ();<br align="left"/>let mut _17: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _18: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _19: &amp;ReErased state::user::Order;<br align="left"/>let mut _20: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _21: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _22: u64;<br align="left"/>let mut _23: isize;<br align="left"/>let _24: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _25: !;<br align="left"/>let mut _26: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _27: ();<br align="left"/>let mut _28: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _29: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _30: &amp;ReErased state::user::Order;<br align="left"/>let mut _31: u64;<br align="left"/>let mut _32: u64;<br align="left"/>let mut _33: isize;<br align="left"/>let _34: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _35: !;<br align="left"/>let mut _36: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _37: ();<br align="left"/>let mut _38: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _39: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _40: &amp;ReErased state::user::Order;<br align="left"/>let mut _41: u64;<br align="left"/>let mut _42: u64;<br align="left"/>let mut _43: isize;<br align="left"/>let _44: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _45: !;<br align="left"/>let mut _46: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _47: ();<br align="left"/>let mut _48: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _49: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _50: &amp;ReErased state::user::Order;<br align="left"/>let mut _51: u64;<br align="left"/>let mut _52: u64;<br align="left"/>let mut _53: isize;<br align="left"/>let _54: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _55: !;<br align="left"/>let mut _56: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _57: ();<br align="left"/>let _58: ();<br align="left"/>let mut _59: bool;<br align="left"/>let mut _60: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _61: ();<br align="left"/>let mut _62: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _63: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _64: bool;<br align="left"/>let mut _65: u64;<br align="left"/>let mut _66: ();<br align="left"/>let _67: error::ErrorCode;<br align="left"/>let _68: ();<br align="left"/>let mut _69: &amp;ReErased str;<br align="left"/>let _70: &amp;ReErased str;<br align="left"/>let mut _71: &amp;ReErased std::string::String;<br align="left"/>let _72: &amp;ReErased std::string::String;<br align="left"/>let _73: std::string::String;<br align="left"/>let _74: std::string::String;<br align="left"/>let mut _75: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _76: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _77: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _78: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _79: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _80: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _81: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _82: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _83: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _84: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _85: &amp;ReErased error::ErrorCode;<br align="left"/>let _86: &amp;ReErased error::ErrorCode;<br align="left"/>let _87: ();<br align="left"/>let mut _88: &amp;ReErased str;<br align="left"/>let _89: &amp;ReErased str;<br align="left"/>let mut _90: error::ErrorCode;<br align="left"/>let mut _91: isize;<br align="left"/>let _92: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _93: !;<br align="left"/>let mut _94: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _95: ();<br align="left"/>let _96: ();<br align="left"/>let mut _97: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _98: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _99: bool;<br align="left"/>let mut _100: u64;<br align="left"/>let mut _101: i64;<br align="left"/>let mut _102: ();<br align="left"/>let _103: error::ErrorCode;<br align="left"/>let _104: ();<br align="left"/>let mut _105: &amp;ReErased str;<br align="left"/>let _106: &amp;ReErased str;<br align="left"/>let mut _107: &amp;ReErased std::string::String;<br align="left"/>let _108: &amp;ReErased std::string::String;<br align="left"/>let _109: std::string::String;<br align="left"/>let _110: std::string::String;<br align="left"/>let mut _111: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _112: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _113: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _114: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _115: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _116: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _117: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _118: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _119: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _120: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _121: &amp;ReErased error::ErrorCode;<br align="left"/>let _122: &amp;ReErased error::ErrorCode;<br align="left"/>let _123: ();<br align="left"/>let mut _124: &amp;ReErased str;<br align="left"/>let _125: &amp;ReErased str;<br align="left"/>let mut _126: error::ErrorCode;<br align="left"/>let mut _127: isize;<br align="left"/>let _128: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _129: !;<br align="left"/>let mut _130: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _131: ();<br align="left"/>let _132: ();<br align="left"/>let mut _133: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _134: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _135: bool;<br align="left"/>let mut _136: u64;<br align="left"/>let mut _137: i64;<br align="left"/>let mut _138: ();<br align="left"/>let _139: error::ErrorCode;<br align="left"/>let _140: ();<br align="left"/>let mut _141: &amp;ReErased str;<br align="left"/>let _142: &amp;ReErased str;<br align="left"/>let mut _143: &amp;ReErased std::string::String;<br align="left"/>let _144: &amp;ReErased std::string::String;<br align="left"/>let _145: std::string::String;<br align="left"/>let _146: std::string::String;<br align="left"/>let mut _147: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _148: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _149: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _150: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _151: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _152: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _153: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _154: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _155: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _156: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _157: &amp;ReErased error::ErrorCode;<br align="left"/>let _158: &amp;ReErased error::ErrorCode;<br align="left"/>let _159: ();<br align="left"/>let mut _160: &amp;ReErased str;<br align="left"/>let _161: &amp;ReErased str;<br align="left"/>let mut _162: error::ErrorCode;<br align="left"/>let mut _163: isize;<br align="left"/>let _164: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _165: !;<br align="left"/>let mut _166: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _167: ();<br align="left"/>let _168: ();<br align="left"/>let mut _169: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _170: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _171: bool;<br align="left"/>let mut _172: u32;<br align="left"/>let mut _173: i32;<br align="left"/>let mut _174: u32;<br align="left"/>let mut _175: ();<br align="left"/>let _176: error::ErrorCode;<br align="left"/>let _177: ();<br align="left"/>let mut _178: &amp;ReErased str;<br align="left"/>let _179: &amp;ReErased str;<br align="left"/>let mut _180: &amp;ReErased std::string::String;<br align="left"/>let _181: &amp;ReErased std::string::String;<br align="left"/>let _182: std::string::String;<br align="left"/>let _183: std::string::String;<br align="left"/>let mut _184: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _185: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _186: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _187: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _188: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _189: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _190: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _191: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _192: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _193: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _194: &amp;ReErased error::ErrorCode;<br align="left"/>let _195: &amp;ReErased error::ErrorCode;<br align="left"/>let _196: ();<br align="left"/>let mut _197: &amp;ReErased str;<br align="left"/>let _198: &amp;ReErased str;<br align="left"/>let mut _199: error::ErrorCode;<br align="left"/>let mut _200: isize;<br align="left"/>let _201: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _202: !;<br align="left"/>let mut _203: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _204: ();<br align="left"/>let mut _205: ();<br align="left"/>let mut _206: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _207: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _208: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _209: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>debug order =&gt; _1;<br align="left"/>debug market =&gt; _2;<br align="left"/>debug valid_oracle_price =&gt; _3;<br align="left"/>debug slot =&gt; _4;<br align="left"/>debug residual =&gt; _13;<br align="left"/>debug val =&gt; _16;<br align="left"/>debug residual =&gt; _24;<br align="left"/>debug val =&gt; _27;<br align="left"/>debug residual =&gt; _34;<br align="left"/>debug val =&gt; _37;<br align="left"/>debug residual =&gt; _44;<br align="left"/>debug val =&gt; _47;<br align="left"/>debug residual =&gt; _54;<br align="left"/>debug val =&gt; _57;<br align="left"/>debug error_code =&gt; _67;<br align="left"/>debug res =&gt; _74;<br align="left"/>debug residual =&gt; _92;<br align="left"/>debug val =&gt; _95;<br align="left"/>debug error_code =&gt; _103;<br align="left"/>debug res =&gt; _110;<br align="left"/>debug residual =&gt; _128;<br align="left"/>debug val =&gt; _131;<br align="left"/>debug error_code =&gt; _139;<br align="left"/>debug res =&gt; _146;<br align="left"/>debug residual =&gt; _164;<br align="left"/>debug val =&gt; _167;<br align="left"/>debug error_code =&gt; _176;<br align="left"/>debug res =&gt; _183;<br align="left"/>debug residual =&gt; _201;<br align="left"/>debug val =&gt; _204;<br align="left"/>>;
    bb0__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>_6 = discriminant(((*_1).13: state::user::OrderType))<br/></td></tr><tr><td align="left">switchInt(move _6)</td></tr></table>>];
    bb1__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>_50 = &amp;(*_1)<br/>StorageLive(_51)<br/>_51 = (((*_2).1: state::perp_market::AMM).52: u64)<br/>StorageLive(_52)<br/>_52 = (((*_2).1: state::perp_market::AMM).54: u64)<br/></td></tr><tr><td align="left">_49 = validate_oracle_order(move _50, move _51, move _52)</td></tr></table>>];
    bb2__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb3__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = &amp;(*_1)<br/>StorageLive(_10)<br/>_10 = (((*_2).1: state::perp_market::AMM).52: u64)<br/>StorageLive(_11)<br/>_11 = (((*_2).1: state::perp_market::AMM).54: u64)<br/></td></tr><tr><td align="left">_8 = validate_market_order(move _9, move _10, move _11)</td></tr></table>>];
    bb4__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _8)</td></tr></table>>];
    bb5__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_12 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _12)</td></tr></table>>];
    bb6__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_16)<br/>_16 = ((_7 as Continue).0: ())<br/>_5 = _16<br/>StorageDead(_16)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = ((_7 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_15)<br/>_15 = _13<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _15)</td></tr></table>>];
    bb8__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_13)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_19 = &amp;(*_1)<br/>StorageLive(_20)<br/>_20 = &amp;(*_2)<br/>StorageLive(_21)<br/>_21 = _3<br/>StorageLive(_22)<br/>_22 = _4<br/></td></tr><tr><td align="left">_18 = validate_limit_order(move _19, move _20, move _21, move _22)</td></tr></table>>];
    bb10__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">_17 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _18)</td></tr></table>>];
    bb11__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>_23 = discriminant(_17)<br/></td></tr><tr><td align="left">switchInt(move _23)</td></tr></table>>];
    bb12__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_27)<br/>_27 = ((_17 as Continue).0: ())<br/>_5 = _27<br/>StorageDead(_27)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_24)<br/>_24 = ((_17 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_26)<br/>_26 = _24<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _26)</td></tr></table>>];
    bb14__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_24)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>_30 = &amp;(*_1)<br/>StorageLive(_31)<br/>_31 = (((*_2).1: state::perp_market::AMM).52: u64)<br/>StorageLive(_32)<br/>_32 = (((*_2).1: state::perp_market::AMM).54: u64)<br/></td></tr><tr><td align="left">_29 = validate_trigger_market_order(move _30, move _31, move _32)</td></tr></table>>];
    bb16__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">_28 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _29)</td></tr></table>>];
    bb17__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>_33 = discriminant(_28)<br/></td></tr><tr><td align="left">switchInt(move _33)</td></tr></table>>];
    bb18__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_37)<br/>_37 = ((_28 as Continue).0: ())<br/>_5 = _37<br/>StorageDead(_37)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_34)<br/>_34 = ((_28 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_36)<br/>_36 = _34<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _36)</td></tr></table>>];
    bb20__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_34)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_40 = &amp;(*_1)<br/>StorageLive(_41)<br/>_41 = (((*_2).1: state::perp_market::AMM).52: u64)<br/>StorageLive(_42)<br/>_42 = (((*_2).1: state::perp_market::AMM).54: u64)<br/></td></tr><tr><td align="left">_39 = validate_trigger_limit_order(move _40, move _41, move _42)</td></tr></table>>];
    bb22__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_41)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">_38 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _39)</td></tr></table>>];
    bb23__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>_43 = discriminant(_38)<br/></td></tr><tr><td align="left">switchInt(move _43)</td></tr></table>>];
    bb24__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>_47 = ((_38 as Continue).0: ())<br/>_5 = _47<br/>StorageDead(_47)<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_44)<br/>_44 = ((_38 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_46)<br/>_46 = _44<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _46)</td></tr></table>>];
    bb26__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_44)<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_51)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">_48 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _49)</td></tr></table>>];
    bb28__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>_53 = discriminant(_48)<br/></td></tr><tr><td align="left">switchInt(move _53)</td></tr></table>>];
    bb29__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_57)<br/>_57 = ((_48 as Continue).0: ())<br/>_5 = _57<br/>StorageDead(_57)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_54)<br/>_54 = ((_48 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_56)<br/>_56 = _54<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _56)</td></tr></table>>];
    bb31__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_54)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>_60 = &amp;(*_2)<br/></td></tr><tr><td align="left">_59 = PerpMarket::is_prediction_market(move _60)</td></tr></table>>];
    bb33__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left">switchInt(move _59)</td></tr></table>>];
    bb34__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>_65 = ((*_1).1: u64)<br/>_64 = Le(move _65, const _)<br/></td></tr><tr><td align="left">switchInt(move _64)</td></tr></table>>];
    bb35__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageLive(_66)<br/>_66 = ()<br/>_63 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _66)<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageLive(_67)<br/>_67 = error::ErrorCode::InvalidPredictionMarketOrder<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>_209 = const _<br/>_78 = &amp;(*_209)<br/>_77 = &amp;(*_78)<br/>_76 = move _77 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_77)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>_86 = &amp;_67<br/>_85 = &amp;(*_86)<br/></td></tr><tr><td align="left">_84 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _85)</td></tr></table>>];
    bb37__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>_83 = [move _84]<br/>StorageDead(_84)<br/>_82 = &amp;_83<br/>_81 = &amp;(*_82)<br/>_80 = move _81 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_81)<br/></td></tr><tr><td align="left">_75 = Arguments::&lt;'_&gt;::new_v1(move _76, move _80)</td></tr></table>>];
    bb38__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>StorageDead(_76)<br/></td></tr><tr><td align="left">_74 = format(move _75)</td></tr></table>>];
    bb39__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_86)<br/>StorageDead(_83)<br/>StorageDead(_82)<br/>StorageDead(_78)<br/>_73 = move _74<br/>StorageDead(_74)<br/>_72 = &amp;_73<br/>_71 = &amp;(*_72)<br/></td></tr><tr><td align="left">_70 = &lt;String as Deref&gt;::deref(move _71)</td></tr></table>>];
    bb40__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">_69 = &amp;(*_70)<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">_68 = solana_program::log::sol_log(move _69)</td></tr></table>>];
    bb41__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/></td></tr><tr><td align="left">drop(_73)</td></tr></table>>];
    bb42__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>StorageDead(_72)<br/>StorageDead(_70)<br/>StorageDead(_68)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>_89 = const &quot;prediction market price must be &lt;= 1&quot;<br/>_88 = &amp;(*_89)<br/></td></tr><tr><td align="left">_87 = solana_program::log::sol_log(move _88)</td></tr></table>>];
    bb43__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>StorageDead(_89)<br/>StorageDead(_87)<br/>StorageLive(_90)<br/>_90 = _67<br/>_63 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _90)<br/>StorageDead(_90)<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/></td></tr><tr><td align="left">_62 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _63)</td></tr></table>>];
    bb45__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>_91 = discriminant(_62)<br/></td></tr><tr><td align="left">switchInt(move _91)</td></tr></table>>];
    bb46__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageLive(_95)<br/>_95 = ((_62 as Continue).0: ())<br/>_61 = _95<br/>StorageDead(_95)<br/>StorageDead(_62)<br/>StorageDead(_61)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>_101 = ((*_1).6: i64)<br/></td></tr><tr><td align="left">_100 = core::num::&lt;impl i64&gt;::unsigned_abs(move _101)</td></tr></table>>];
    bb47__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageLive(_92)<br/>_92 = ((_62 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_94)<br/>_94 = _92<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _94)</td></tr></table>>];
    bb48__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/>StorageDead(_92)<br/>StorageDead(_62)<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/>_99 = Le(move _100, const _)<br/></td></tr><tr><td align="left">switchInt(move _99)</td></tr></table>>];
    bb50__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>StorageLive(_102)<br/>_102 = ()<br/>_98 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _102)<br/>StorageDead(_102)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb51__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>StorageLive(_103)<br/>_103 = error::ErrorCode::InvalidPredictionMarketOrder<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>_208 = const _<br/>_114 = &amp;(*_208)<br/>_113 = &amp;(*_114)<br/>_112 = move _113 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_113)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>_122 = &amp;_103<br/>_121 = &amp;(*_122)<br/></td></tr><tr><td align="left">_120 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _121)</td></tr></table>>];
    bb52__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_121)<br/>_119 = [move _120]<br/>StorageDead(_120)<br/>_118 = &amp;_119<br/>_117 = &amp;(*_118)<br/>_116 = move _117 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_117)<br/></td></tr><tr><td align="left">_111 = Arguments::&lt;'_&gt;::new_v1(move _112, move _116)</td></tr></table>>];
    bb53__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_116)<br/>StorageDead(_112)<br/></td></tr><tr><td align="left">_110 = format(move _111)</td></tr></table>>];
    bb54__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/>StorageDead(_122)<br/>StorageDead(_119)<br/>StorageDead(_118)<br/>StorageDead(_114)<br/>_109 = move _110<br/>StorageDead(_110)<br/>_108 = &amp;_109<br/>_107 = &amp;(*_108)<br/></td></tr><tr><td align="left">_106 = &lt;String as Deref&gt;::deref(move _107)</td></tr></table>>];
    bb55__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">_105 = &amp;(*_106)<br/>StorageDead(_107)<br/></td></tr><tr><td align="left">_104 = solana_program::log::sol_log(move _105)</td></tr></table>>];
    bb56__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/></td></tr><tr><td align="left">drop(_109)</td></tr></table>>];
    bb57__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/>StorageDead(_108)<br/>StorageDead(_106)<br/>StorageDead(_104)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>_125 = const &quot;prediction market auction start price abs must be &lt;= 1&quot;<br/>_124 = &amp;(*_125)<br/></td></tr><tr><td align="left">_123 = solana_program::log::sol_log(move _124)</td></tr></table>>];
    bb58__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_124)<br/>StorageDead(_125)<br/>StorageDead(_123)<br/>StorageLive(_126)<br/>_126 = _103<br/>_98 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _126)<br/>StorageDead(_126)<br/>StorageDead(_103)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/></td></tr><tr><td align="left">_97 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _98)</td></tr></table>>];
    bb60__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>_127 = discriminant(_97)<br/></td></tr><tr><td align="left">switchInt(move _127)</td></tr></table>>];
    bb61__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageLive(_131)<br/>_131 = ((_97 as Continue).0: ())<br/>_96 = _131<br/>StorageDead(_131)<br/>StorageDead(_97)<br/>StorageDead(_96)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>_137 = ((*_1).7: i64)<br/></td></tr><tr><td align="left">_136 = core::num::&lt;impl i64&gt;::unsigned_abs(move _137)</td></tr></table>>];
    bb62__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageLive(_128)<br/>_128 = ((_97 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_130)<br/>_130 = _128<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _130)</td></tr></table>>];
    bb63__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_130)<br/>StorageDead(_128)<br/>StorageDead(_97)<br/>StorageDead(_96)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb64__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_137)<br/>_135 = Le(move _136, const _)<br/></td></tr><tr><td align="left">switchInt(move _135)</td></tr></table>>];
    bb65__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_136)<br/>StorageLive(_138)<br/>_138 = ()<br/>_134 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _138)<br/>StorageDead(_138)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb66__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_136)<br/>StorageLive(_139)<br/>_139 = error::ErrorCode::InvalidPredictionMarketOrder<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>_207 = const _<br/>_150 = &amp;(*_207)<br/>_149 = &amp;(*_150)<br/>_148 = move _149 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_149)<br/>StorageLive(_152)<br/>StorageLive(_153)<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>_158 = &amp;_139<br/>_157 = &amp;(*_158)<br/></td></tr><tr><td align="left">_156 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _157)</td></tr></table>>];
    bb67__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_157)<br/>_155 = [move _156]<br/>StorageDead(_156)<br/>_154 = &amp;_155<br/>_153 = &amp;(*_154)<br/>_152 = move _153 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_153)<br/></td></tr><tr><td align="left">_147 = Arguments::&lt;'_&gt;::new_v1(move _148, move _152)</td></tr></table>>];
    bb68__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_152)<br/>StorageDead(_148)<br/></td></tr><tr><td align="left">_146 = format(move _147)</td></tr></table>>];
    bb69__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_147)<br/>StorageDead(_158)<br/>StorageDead(_155)<br/>StorageDead(_154)<br/>StorageDead(_150)<br/>_145 = move _146<br/>StorageDead(_146)<br/>_144 = &amp;_145<br/>_143 = &amp;(*_144)<br/></td></tr><tr><td align="left">_142 = &lt;String as Deref&gt;::deref(move _143)</td></tr></table>>];
    bb70__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">_141 = &amp;(*_142)<br/>StorageDead(_143)<br/></td></tr><tr><td align="left">_140 = solana_program::log::sol_log(move _141)</td></tr></table>>];
    bb71__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_141)<br/></td></tr><tr><td align="left">drop(_145)</td></tr></table>>];
    bb72__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_145)<br/>StorageDead(_144)<br/>StorageDead(_142)<br/>StorageDead(_140)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>StorageLive(_161)<br/>_161 = const &quot;prediction market auction end price abs must be &lt;= 1&quot;<br/>_160 = &amp;(*_161)<br/></td></tr><tr><td align="left">_159 = solana_program::log::sol_log(move _160)</td></tr></table>>];
    bb73__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_160)<br/>StorageDead(_161)<br/>StorageDead(_159)<br/>StorageLive(_162)<br/>_162 = _139<br/>_134 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _162)<br/>StorageDead(_162)<br/>StorageDead(_139)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb74__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_135)<br/></td></tr><tr><td align="left">_133 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _134)</td></tr></table>>];
    bb75__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_134)<br/>_163 = discriminant(_133)<br/></td></tr><tr><td align="left">switchInt(move _163)</td></tr></table>>];
    bb76__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageLive(_167)<br/>_167 = ((_133 as Continue).0: ())<br/>_132 = _167<br/>StorageDead(_167)<br/>StorageDead(_133)<br/>StorageDead(_132)<br/>StorageLive(_168)<br/>StorageLive(_169)<br/>StorageLive(_170)<br/>StorageLive(_171)<br/>StorageLive(_172)<br/>StorageLive(_173)<br/>_173 = ((*_1).9: i32)<br/></td></tr><tr><td align="left">_172 = core::num::&lt;impl i32&gt;::unsigned_abs(move _173)</td></tr></table>>];
    bb77__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageLive(_164)<br/>_164 = ((_133 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_166)<br/>_166 = _164<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _166)</td></tr></table>>];
    bb78__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_166)<br/>StorageDead(_164)<br/>StorageDead(_133)<br/>StorageDead(_132)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb79__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_173)<br/>StorageLive(_174)<br/>_174 = const _ as u32 (IntToInt)<br/>_171 = Le(move _172, move _174)<br/></td></tr><tr><td align="left">switchInt(move _171)</td></tr></table>>];
    bb80__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_174)<br/>StorageDead(_172)<br/>StorageLive(_175)<br/>_175 = ()<br/>_170 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _175)<br/>StorageDead(_175)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb81__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_174)<br/>StorageDead(_172)<br/>StorageLive(_176)<br/>_176 = error::ErrorCode::InvalidPredictionMarketOrder<br/>StorageLive(_177)<br/>StorageLive(_178)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>StorageLive(_181)<br/>StorageLive(_182)<br/>StorageLive(_183)<br/>StorageLive(_184)<br/>StorageLive(_185)<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>_206 = const _<br/>_187 = &amp;(*_206)<br/>_186 = &amp;(*_187)<br/>_185 = move _186 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_186)<br/>StorageLive(_189)<br/>StorageLive(_190)<br/>StorageLive(_191)<br/>StorageLive(_192)<br/>StorageLive(_193)<br/>StorageLive(_194)<br/>StorageLive(_195)<br/>_195 = &amp;_176<br/>_194 = &amp;(*_195)<br/></td></tr><tr><td align="left">_193 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _194)</td></tr></table>>];
    bb82__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_194)<br/>_192 = [move _193]<br/>StorageDead(_193)<br/>_191 = &amp;_192<br/>_190 = &amp;(*_191)<br/>_189 = move _190 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_190)<br/></td></tr><tr><td align="left">_184 = Arguments::&lt;'_&gt;::new_v1(move _185, move _189)</td></tr></table>>];
    bb83__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_189)<br/>StorageDead(_185)<br/></td></tr><tr><td align="left">_183 = format(move _184)</td></tr></table>>];
    bb84__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_184)<br/>StorageDead(_195)<br/>StorageDead(_192)<br/>StorageDead(_191)<br/>StorageDead(_187)<br/>_182 = move _183<br/>StorageDead(_183)<br/>_181 = &amp;_182<br/>_180 = &amp;(*_181)<br/></td></tr><tr><td align="left">_179 = &lt;String as Deref&gt;::deref(move _180)</td></tr></table>>];
    bb85__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">_178 = &amp;(*_179)<br/>StorageDead(_180)<br/></td></tr><tr><td align="left">_177 = solana_program::log::sol_log(move _178)</td></tr></table>>];
    bb86__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_178)<br/></td></tr><tr><td align="left">drop(_182)</td></tr></table>>];
    bb87__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_182)<br/>StorageDead(_181)<br/>StorageDead(_179)<br/>StorageDead(_177)<br/>StorageLive(_196)<br/>StorageLive(_197)<br/>StorageLive(_198)<br/>_198 = const &quot;prediction market auction end price abs must be &lt;= 1&quot;<br/>_197 = &amp;(*_198)<br/></td></tr><tr><td align="left">_196 = solana_program::log::sol_log(move _197)</td></tr></table>>];
    bb88__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_197)<br/>StorageDead(_198)<br/>StorageDead(_196)<br/>StorageLive(_199)<br/>_199 = _176<br/>_170 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _199)<br/>StorageDead(_199)<br/>StorageDead(_176)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb89__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_171)<br/></td></tr><tr><td align="left">_169 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _170)</td></tr></table>>];
    bb90__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_170)<br/>_200 = discriminant(_169)<br/></td></tr><tr><td align="left">switchInt(move _200)</td></tr></table>>];
    bb91__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageLive(_204)<br/>_204 = ((_169 as Continue).0: ())<br/>_168 = _204<br/>StorageDead(_204)<br/>StorageDead(_169)<br/>StorageDead(_168)<br/>_58 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb92__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageLive(_201)<br/>_201 = ((_169 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_203)<br/>_203 = _201<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _203)</td></tr></table>>];
    bb93__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_203)<br/>StorageDead(_201)<br/>StorageDead(_169)<br/>StorageDead(_168)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb94__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>_58 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb95__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_58)<br/>StorageLive(_205)<br/>_205 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _205)<br/>StorageDead(_205)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb96__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb97__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb98__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left">return</td></tr></table>>];
    bb99__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">99 (cleanup)</td></tr><tr><td align="left">drop(_182)</td></tr></table>>];
    bb100__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">100 (cleanup)</td></tr><tr><td align="left">drop(_145)</td></tr></table>>];
    bb101__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">101 (cleanup)</td></tr><tr><td align="left">drop(_109)</td></tr></table>>];
    bb102__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">102 (cleanup)</td></tr><tr><td align="left">drop(_73)</td></tr></table>>];
    bb103__0_4556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">103 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_4556 -> bb3__0_4556 [label="0"];
    bb0__0_4556 -> bb9__0_4556 [label="1"];
    bb0__0_4556 -> bb15__0_4556 [label="2"];
    bb0__0_4556 -> bb21__0_4556 [label="3"];
    bb0__0_4556 -> bb1__0_4556 [label="4"];
    bb0__0_4556 -> bb2__0_4556 [label="otherwise"];
    bb1__0_4556 -> bb27__0_4556 [label="return"];
    bb3__0_4556 -> bb4__0_4556 [label="return"];
    bb4__0_4556 -> bb5__0_4556 [label="return"];
    bb5__0_4556 -> bb6__0_4556 [label="0"];
    bb5__0_4556 -> bb7__0_4556 [label="1"];
    bb5__0_4556 -> bb2__0_4556 [label="otherwise"];
    bb6__0_4556 -> bb32__0_4556 [label=""];
    bb7__0_4556 -> bb8__0_4556 [label="return"];
    bb8__0_4556 -> bb97__0_4556 [label=""];
    bb9__0_4556 -> bb10__0_4556 [label="return"];
    bb10__0_4556 -> bb11__0_4556 [label="return"];
    bb11__0_4556 -> bb12__0_4556 [label="0"];
    bb11__0_4556 -> bb13__0_4556 [label="1"];
    bb11__0_4556 -> bb2__0_4556 [label="otherwise"];
    bb12__0_4556 -> bb32__0_4556 [label=""];
    bb13__0_4556 -> bb14__0_4556 [label="return"];
    bb14__0_4556 -> bb97__0_4556 [label=""];
    bb15__0_4556 -> bb16__0_4556 [label="return"];
    bb16__0_4556 -> bb17__0_4556 [label="return"];
    bb17__0_4556 -> bb18__0_4556 [label="0"];
    bb17__0_4556 -> bb19__0_4556 [label="1"];
    bb17__0_4556 -> bb2__0_4556 [label="otherwise"];
    bb18__0_4556 -> bb32__0_4556 [label=""];
    bb19__0_4556 -> bb20__0_4556 [label="return"];
    bb20__0_4556 -> bb97__0_4556 [label=""];
    bb21__0_4556 -> bb22__0_4556 [label="return"];
    bb22__0_4556 -> bb23__0_4556 [label="return"];
    bb23__0_4556 -> bb24__0_4556 [label="0"];
    bb23__0_4556 -> bb25__0_4556 [label="1"];
    bb23__0_4556 -> bb2__0_4556 [label="otherwise"];
    bb24__0_4556 -> bb32__0_4556 [label=""];
    bb25__0_4556 -> bb26__0_4556 [label="return"];
    bb26__0_4556 -> bb97__0_4556 [label=""];
    bb27__0_4556 -> bb28__0_4556 [label="return"];
    bb28__0_4556 -> bb29__0_4556 [label="0"];
    bb28__0_4556 -> bb30__0_4556 [label="1"];
    bb28__0_4556 -> bb2__0_4556 [label="otherwise"];
    bb29__0_4556 -> bb32__0_4556 [label=""];
    bb30__0_4556 -> bb31__0_4556 [label="return"];
    bb31__0_4556 -> bb97__0_4556 [label=""];
    bb32__0_4556 -> bb33__0_4556 [label="return"];
    bb33__0_4556 -> bb94__0_4556 [label="0"];
    bb33__0_4556 -> bb34__0_4556 [label="otherwise"];
    bb34__0_4556 -> bb36__0_4556 [label="0"];
    bb34__0_4556 -> bb35__0_4556 [label="otherwise"];
    bb35__0_4556 -> bb44__0_4556 [label=""];
    bb36__0_4556 -> bb37__0_4556 [label="return"];
    bb37__0_4556 -> bb38__0_4556 [label="return"];
    bb38__0_4556 -> bb39__0_4556 [label="return"];
    bb39__0_4556 -> bb40__0_4556 [label="return"];
    bb39__0_4556 -> bb102__0_4556 [label="unwind"];
    bb40__0_4556 -> bb41__0_4556 [label="return"];
    bb40__0_4556 -> bb102__0_4556 [label="unwind"];
    bb41__0_4556 -> bb42__0_4556 [label="return"];
    bb41__0_4556 -> bb103__0_4556 [label="unwind"];
    bb42__0_4556 -> bb43__0_4556 [label="return"];
    bb43__0_4556 -> bb44__0_4556 [label=""];
    bb44__0_4556 -> bb45__0_4556 [label="return"];
    bb45__0_4556 -> bb46__0_4556 [label="0"];
    bb45__0_4556 -> bb47__0_4556 [label="1"];
    bb45__0_4556 -> bb2__0_4556 [label="otherwise"];
    bb46__0_4556 -> bb49__0_4556 [label="return"];
    bb47__0_4556 -> bb48__0_4556 [label="return"];
    bb48__0_4556 -> bb96__0_4556 [label=""];
    bb49__0_4556 -> bb51__0_4556 [label="0"];
    bb49__0_4556 -> bb50__0_4556 [label="otherwise"];
    bb50__0_4556 -> bb59__0_4556 [label=""];
    bb51__0_4556 -> bb52__0_4556 [label="return"];
    bb52__0_4556 -> bb53__0_4556 [label="return"];
    bb53__0_4556 -> bb54__0_4556 [label="return"];
    bb54__0_4556 -> bb55__0_4556 [label="return"];
    bb54__0_4556 -> bb101__0_4556 [label="unwind"];
    bb55__0_4556 -> bb56__0_4556 [label="return"];
    bb55__0_4556 -> bb101__0_4556 [label="unwind"];
    bb56__0_4556 -> bb57__0_4556 [label="return"];
    bb56__0_4556 -> bb103__0_4556 [label="unwind"];
    bb57__0_4556 -> bb58__0_4556 [label="return"];
    bb58__0_4556 -> bb59__0_4556 [label=""];
    bb59__0_4556 -> bb60__0_4556 [label="return"];
    bb60__0_4556 -> bb61__0_4556 [label="0"];
    bb60__0_4556 -> bb62__0_4556 [label="1"];
    bb60__0_4556 -> bb2__0_4556 [label="otherwise"];
    bb61__0_4556 -> bb64__0_4556 [label="return"];
    bb62__0_4556 -> bb63__0_4556 [label="return"];
    bb63__0_4556 -> bb96__0_4556 [label=""];
    bb64__0_4556 -> bb66__0_4556 [label="0"];
    bb64__0_4556 -> bb65__0_4556 [label="otherwise"];
    bb65__0_4556 -> bb74__0_4556 [label=""];
    bb66__0_4556 -> bb67__0_4556 [label="return"];
    bb67__0_4556 -> bb68__0_4556 [label="return"];
    bb68__0_4556 -> bb69__0_4556 [label="return"];
    bb69__0_4556 -> bb70__0_4556 [label="return"];
    bb69__0_4556 -> bb100__0_4556 [label="unwind"];
    bb70__0_4556 -> bb71__0_4556 [label="return"];
    bb70__0_4556 -> bb100__0_4556 [label="unwind"];
    bb71__0_4556 -> bb72__0_4556 [label="return"];
    bb71__0_4556 -> bb103__0_4556 [label="unwind"];
    bb72__0_4556 -> bb73__0_4556 [label="return"];
    bb73__0_4556 -> bb74__0_4556 [label=""];
    bb74__0_4556 -> bb75__0_4556 [label="return"];
    bb75__0_4556 -> bb76__0_4556 [label="0"];
    bb75__0_4556 -> bb77__0_4556 [label="1"];
    bb75__0_4556 -> bb2__0_4556 [label="otherwise"];
    bb76__0_4556 -> bb79__0_4556 [label="return"];
    bb77__0_4556 -> bb78__0_4556 [label="return"];
    bb78__0_4556 -> bb96__0_4556 [label=""];
    bb79__0_4556 -> bb81__0_4556 [label="0"];
    bb79__0_4556 -> bb80__0_4556 [label="otherwise"];
    bb80__0_4556 -> bb89__0_4556 [label=""];
    bb81__0_4556 -> bb82__0_4556 [label="return"];
    bb82__0_4556 -> bb83__0_4556 [label="return"];
    bb83__0_4556 -> bb84__0_4556 [label="return"];
    bb84__0_4556 -> bb85__0_4556 [label="return"];
    bb84__0_4556 -> bb99__0_4556 [label="unwind"];
    bb85__0_4556 -> bb86__0_4556 [label="return"];
    bb85__0_4556 -> bb99__0_4556 [label="unwind"];
    bb86__0_4556 -> bb87__0_4556 [label="return"];
    bb86__0_4556 -> bb103__0_4556 [label="unwind"];
    bb87__0_4556 -> bb88__0_4556 [label="return"];
    bb88__0_4556 -> bb89__0_4556 [label=""];
    bb89__0_4556 -> bb90__0_4556 [label="return"];
    bb90__0_4556 -> bb91__0_4556 [label="0"];
    bb90__0_4556 -> bb92__0_4556 [label="1"];
    bb90__0_4556 -> bb2__0_4556 [label="otherwise"];
    bb91__0_4556 -> bb95__0_4556 [label=""];
    bb92__0_4556 -> bb93__0_4556 [label="return"];
    bb93__0_4556 -> bb96__0_4556 [label=""];
    bb94__0_4556 -> bb95__0_4556 [label=""];
    bb95__0_4556 -> bb98__0_4556 [label=""];
    bb96__0_4556 -> bb98__0_4556 [label=""];
    bb97__0_4556 -> bb98__0_4556 [label=""];
    bb99__0_4556 -> bb103__0_4556 [label="return"];
    bb100__0_4556 -> bb103__0_4556 [label="return"];
    bb101__0_4556 -> bb103__0_4556 [label="return"];
    bb102__0_4556 -> bb103__0_4556 [label="return"];
}
