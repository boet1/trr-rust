digraph Mir_0_526 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn get_maker_orders_info(_1: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;, _2: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;, _3: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;, _4: &amp;ReErased state::user_map::UserMap&lt;ReErased&gt;, _5: &amp;ReErased anchor_lang::prelude::Pubkey, _6: &amp;ReErased state::user::Order, _7: &amp;ReErased mut std::option::Option&lt;&amp;ReErased mut state::user::User&gt;, _8: &amp;ReErased anchor_lang::prelude::Pubkey, _9: u64, _10: i64, _11: std::option::Option&lt;u32&gt;, _12: i64, _13: u64, _14: bool, _15: u64) -&gt; std::result::Result&lt;std::vec::Vec&lt;(anchor_lang::prelude::Pubkey, usize, u64), std::alloc::Global&gt;, error::ErrorCode&gt;<br align="left"/>let _16: controller::position::PositionDirection;<br align="left"/>let mut _17: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let mut _18: std::vec::Vec&lt;(anchor_lang::prelude::Pubkey, usize, u64), std::alloc::Global&gt;;<br align="left"/>let _19: u64;<br align="left"/>let mut _20: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _21: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _22: u64;<br align="left"/>let mut _23: u64;<br align="left"/>let mut _24: isize;<br align="left"/>let _25: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _26: !;<br align="left"/>let mut _27: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _28: u64;<br align="left"/>let _29: ();<br align="left"/>let mut _30: std::collections::btree_map::Iter&lt;ReErased, anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _31: std::collections::btree_map::Iter&lt;ReErased, anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _32: &amp;ReErased std::collections::BTreeMap&lt;anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _33: std::collections::btree_map::Iter&lt;ReErased, anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _34: ();<br align="left"/>let _35: ();<br align="left"/>let mut _36: std::option::Option&lt;(&amp;ReErased anchor_lang::prelude::Pubkey, &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;)&gt;;<br align="left"/>let mut _37: &amp;ReErased mut std::collections::btree_map::Iter&lt;ReErased, anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _38: &amp;ReErased mut std::collections::btree_map::Iter&lt;ReErased, anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _39: isize;<br align="left"/>let mut _40: !;<br align="left"/>let _41: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _42: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _43: ();<br align="left"/>let mut _44: bool;<br align="left"/>let mut _45: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _46: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _47: !;<br align="left"/>let mut _48: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _49: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _50: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _51: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _52: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _53: Closure(DefId(0:4710 ~ drift[d311]::controller::orders::get_maker_orders_info::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _54: isize;<br align="left"/>let _55: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _56: !;<br align="left"/>let mut _57: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _58: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _59: ();<br align="left"/>let mut _60: bool;<br align="left"/>let mut _61: &amp;ReErased state::user::User;<br align="left"/>let _62: &amp;ReErased state::user::User;<br align="left"/>let mut _63: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _64: bool;<br align="left"/>let mut _65: &amp;ReErased state::user::User;<br align="left"/>let _66: &amp;ReErased state::user::User;<br align="left"/>let mut _67: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _68: !;<br align="left"/>let _69: bool;<br align="left"/>let mut _70: &amp;ReErased state::user::User;<br align="left"/>let _71: &amp;ReErased state::user::User;<br align="left"/>let mut _72: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _73: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _74: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _75: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _76: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _77: &amp;ReErased u16;<br align="left"/>let _78: &amp;ReErased u16;<br align="left"/>let mut _79: isize;<br align="left"/>let _80: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _81: !;<br align="left"/>let mut _82: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _83: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _84: std::vec::Vec&lt;(usize, u64), std::alloc::Global&gt;;<br align="left"/>let mut _85: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::vec::Vec&lt;(usize, u64), std::alloc::Global&gt;&gt;;<br align="left"/>let mut _86: std::result::Result&lt;std::vec::Vec&lt;(usize, u64), std::alloc::Global&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _87: &amp;ReErased state::user::User;<br align="left"/>let _88: &amp;ReErased state::user::User;<br align="left"/>let mut _89: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _90: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _91: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let _92: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let mut _93: &amp;ReErased state::user::MarketType;<br align="left"/>let _94: &amp;ReErased state::user::MarketType;<br align="left"/>let _95: state::user::MarketType;<br align="left"/>let mut _96: u16;<br align="left"/>let mut _97: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _98: i64;<br align="left"/>let mut _99: u64;<br align="left"/>let mut _100: u64;<br align="left"/>let mut _101: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _102: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _103: bool;<br align="left"/>let mut _104: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _105: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _106: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _107: std::option::Option&lt;state::protected_maker_mode_config::ProtectedMakerParams&gt;;<br align="left"/>let mut _108: bool;<br align="left"/>let mut _109: bool;<br align="left"/>let mut _110: &amp;ReErased std::option::Option&lt;u32&gt;;<br align="left"/>let mut _111: bool;<br align="left"/>let mut _112: u64;<br align="left"/>let mut _113: u64;<br align="left"/>let mut _114: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _115: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _116: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _117: isize;<br align="left"/>let _118: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _119: !;<br align="left"/>let mut _120: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _121: std::vec::Vec&lt;(usize, u64), std::alloc::Global&gt;;<br align="left"/>let _122: ();<br align="left"/>let mut _123: bool;<br align="left"/>let mut _124: &amp;ReErased std::vec::Vec&lt;(usize, u64), std::alloc::Global&gt;;<br align="left"/>let mut _125: !;<br align="left"/>let _126: ();<br align="left"/>let mut _127: &amp;ReErased mut state::user::User;<br align="left"/>let mut _128: &amp;ReErased mut state::user::User;<br align="left"/>let mut _129: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _130: u64;<br align="left"/>let _131: ();<br align="left"/>let mut _132: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _133: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _134: &amp;ReErased mut state::user::User;<br align="left"/>let mut _135: &amp;ReErased mut state::user::User;<br align="left"/>let mut _136: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _137: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _138: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _139: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _140: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _141: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _142: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _143: i64;<br align="left"/>let mut _144: isize;<br align="left"/>let _145: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _146: !;<br align="left"/>let mut _147: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _148: ();<br align="left"/>let _149: u32;<br align="left"/>let mut _150: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _151: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _152: u64;<br align="left"/>let mut _153: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _154: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _155: ();<br align="left"/>let mut _156: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _157: std::slice::Iter&lt;ReErased, (usize, u64)&gt;;<br align="left"/>let mut _158: std::slice::Iter&lt;ReErased, (usize, u64)&gt;;<br align="left"/>let mut _159: &amp;ReErased [(usize, u64)];<br align="left"/>let _160: &amp;ReErased [(usize, u64)];<br align="left"/>let mut _161: &amp;ReErased std::vec::Vec&lt;(usize, u64), std::alloc::Global&gt;;<br align="left"/>let mut _162: std::slice::Iter&lt;ReErased, (usize, u64)&gt;;<br align="left"/>let _163: ();<br align="left"/>let mut _164: std::option::Option&lt;&amp;ReErased (usize, u64)&gt;;<br align="left"/>let mut _165: &amp;ReErased mut std::slice::Iter&lt;ReErased, (usize, u64)&gt;;<br align="left"/>let mut _166: &amp;ReErased mut std::slice::Iter&lt;ReErased, (usize, u64)&gt;;<br align="left"/>let mut _167: isize;<br align="left"/>let mut _168: !;<br align="left"/>let _169: &amp;ReErased usize;<br align="left"/>let _170: &amp;ReErased u64;<br align="left"/>let _171: usize;<br align="left"/>let _172: u64;<br align="left"/>let _173: &amp;ReErased state::user::Order;<br align="left"/>let _174: &amp;ReErased state::user::User;<br align="left"/>let mut _175: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _176: usize;<br align="left"/>let mut _177: usize;<br align="left"/>let mut _178: bool;<br align="left"/>let _179: ();<br align="left"/>let mut _180: bool;<br align="left"/>let mut _181: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _182: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _183: &amp;ReErased state::user::Order;<br align="left"/>let mut _184: &amp;ReErased state::user::Order;<br align="left"/>let mut _185: u64;<br align="left"/>let mut _186: isize;<br align="left"/>let _187: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _188: !;<br align="left"/>let mut _189: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _190: bool;<br align="left"/>let mut _191: !;<br align="left"/>let _192: ();<br align="left"/>let mut _193: bool;<br align="left"/>let mut _194: &amp;ReErased state::user::Order;<br align="left"/>let mut _195: &amp;ReErased state::user::Order;<br align="left"/>let mut _196: !;<br align="left"/>let _197: ();<br align="left"/>let mut _198: isize;<br align="left"/>let _199: u32;<br align="left"/>let mut _200: bool;<br align="left"/>let mut _201: u32;<br align="left"/>let mut _202: u32;<br align="left"/>let mut _203: !;<br align="left"/>let _204: bool;<br align="left"/>let mut _205: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _206: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _207: u64;<br align="left"/>let mut _208: controller::position::PositionDirection;<br align="left"/>let mut _209: i64;<br align="left"/>let mut _210: u32;<br align="left"/>let mut _211: isize;<br align="left"/>let _212: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _213: !;<br align="left"/>let mut _214: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _215: bool;<br align="left"/>let _216: bool;<br align="left"/>let mut _217: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _218: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _219: &amp;ReErased state::user::User;<br align="left"/>let _220: &amp;ReErased state::user::User;<br align="left"/>let mut _221: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _222: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _223: usize;<br align="left"/>let mut _224: i64;<br align="left"/>let mut _225: isize;<br align="left"/>let _226: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _227: !;<br align="left"/>let mut _228: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _229: bool;<br align="left"/>let _230: i64;<br align="left"/>let mut _231: &amp;ReErased state::user::PerpPosition;<br align="left"/>let mut _232: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::user::PerpPosition&gt;;<br align="left"/>let mut _233: std::result::Result&lt;&amp;ReErased state::user::PerpPosition, error::ErrorCode&gt;;<br align="left"/>let mut _234: &amp;ReErased state::user::User;<br align="left"/>let _235: &amp;ReErased state::user::User;<br align="left"/>let mut _236: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _237: u16;<br align="left"/>let mut _238: &amp;ReErased state::user::User;<br align="left"/>let mut _239: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _240: usize;<br align="left"/>let mut _241: usize;<br align="left"/>let mut _242: bool;<br align="left"/>let mut _243: isize;<br align="left"/>let _244: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _245: !;<br align="left"/>let mut _246: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _247: &amp;ReErased state::user::PerpPosition;<br align="left"/>let _248: bool;<br align="left"/>let mut _249: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _250: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _251: &amp;ReErased state::user::Order;<br align="left"/>let _252: &amp;ReErased state::user::Order;<br align="left"/>let _253: &amp;ReErased state::user::User;<br align="left"/>let mut _254: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _255: usize;<br align="left"/>let mut _256: usize;<br align="left"/>let mut _257: bool;<br align="left"/>let mut _258: i64;<br align="left"/>let mut _259: u64;<br align="left"/>let mut _260: isize;<br align="left"/>let _261: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _262: !;<br align="left"/>let mut _263: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _264: bool;<br align="left"/>let _265: ();<br align="left"/>let mut _266: bool;<br align="left"/>let mut _267: bool;<br align="left"/>let mut _268: bool;<br align="left"/>let mut _269: !;<br align="left"/>let _270: u64;<br align="left"/>let mut _271: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _272: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _273: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _274: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _275: &amp;ReErased u16;<br align="left"/>let _276: &amp;ReErased u16;<br align="left"/>let _277: &amp;ReErased state::user::User;<br align="left"/>let mut _278: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _279: usize;<br align="left"/>let mut _280: usize;<br align="left"/>let mut _281: bool;<br align="left"/>let mut _282: isize;<br align="left"/>let _283: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _284: !;<br align="left"/>let mut _285: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _286: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _287: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _288: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _289: &amp;ReErased mut state::user::User;<br align="left"/>let mut _290: &amp;ReErased mut state::user::User;<br align="left"/>let mut _291: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _292: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _293: std::option::Option&lt;&amp;ReErased mut state::user::User&gt;;<br align="left"/>let mut _294: &amp;ReErased mut std::option::Option&lt;&amp;ReErased mut state::user::User&gt;;<br align="left"/>let mut _295: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _296: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _297: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _298: u64;<br align="left"/>let mut _299: u64;<br align="left"/>let mut _300: isize;<br align="left"/>let _301: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _302: !;<br align="left"/>let mut _303: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _304: u64;<br align="left"/>let _305: state::events::OrderActionExplanation;<br align="left"/>let mut _306: bool;<br align="left"/>let mut _307: bool;<br align="left"/>let _308: ();<br align="left"/>let mut _309: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _310: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _311: usize;<br align="left"/>let mut _312: &amp;ReErased mut state::user::User;<br align="left"/>let mut _313: &amp;ReErased mut state::user::User;<br align="left"/>let mut _314: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _315: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _316: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _317: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _318: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _319: i64;<br align="left"/>let mut _320: u64;<br align="left"/>let mut _321: state::events::OrderActionExplanation;<br align="left"/>let mut _322: std::option::Option&lt;&amp;ReErased anchor_lang::prelude::Pubkey&gt;;<br align="left"/>let mut _323: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _324: u64;<br align="left"/>let mut _325: isize;<br align="left"/>let _326: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _327: !;<br align="left"/>let mut _328: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _329: ();<br align="left"/>let _330: ();<br align="left"/>let mut _331: &amp;ReErased mut std::vec::Vec&lt;(anchor_lang::prelude::Pubkey, usize, u64), std::alloc::Global&gt;;<br align="left"/>let mut _332: &amp;ReErased mut std::vec::Vec&lt;(anchor_lang::prelude::Pubkey, usize, u64), std::alloc::Global&gt;;<br align="left"/>let mut _333: (anchor_lang::prelude::Pubkey, usize, u64);<br align="left"/>let mut _334: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _335: usize;<br align="left"/>let mut _336: u64;<br align="left"/>let mut _337: controller::position::PositionDirection;<br align="left"/>let mut _338: std::vec::Vec&lt;(anchor_lang::prelude::Pubkey, usize, u64), std::alloc::Global&gt;;<br align="left"/>let mut _339: &amp;ReErased state::user::MarketType;<br align="left"/>let mut _340: &amp;ReErased (usize, u64);<br align="left"/>let mut _341: &amp;ReErased (usize, u64);<br align="left"/>let mut _342: bool;<br align="left"/>let mut _343: isize;<br align="left"/>let mut _344: isize;<br align="left"/>let mut _345: isize;<br align="left"/>let mut _346: isize;<br align="left"/>let mut _347: isize;<br align="left"/>let mut _348: isize;<br align="left"/>let mut _349: isize;<br align="left"/>let mut _350: isize;<br align="left"/>let mut _351: isize;<br align="left"/>let mut _352: isize;<br align="left"/>let mut _353: isize;<br align="left"/>let mut _354: isize;<br align="left"/>let mut _355: isize;<br align="left"/>let mut _356: isize;<br align="left"/>let mut _357: isize;<br align="left"/>let mut _358: isize;<br align="left"/>let mut _359: isize;<br align="left"/>let mut _360: isize;<br align="left"/>let mut _361: isize;<br align="left"/>let mut _362: isize;<br align="left"/>debug perp_market_map =&gt; _1;<br align="left"/>debug spot_market_map =&gt; _2;<br align="left"/>debug oracle_map =&gt; _3;<br align="left"/>debug makers_and_referrer =&gt; _4;<br align="left"/>debug taker_key =&gt; _5;<br align="left"/>debug taker_order =&gt; _6;<br align="left"/>debug filler =&gt; _7;<br align="left"/>debug filler_key =&gt; _8;<br align="left"/>debug filler_reward =&gt; _9;<br align="left"/>debug oracle_price =&gt; _10;<br align="left"/>debug jit_maker_order_id =&gt; _11;<br align="left"/>debug now =&gt; _12;<br align="left"/>debug slot =&gt; _13;<br align="left"/>debug user_can_skip_duration =&gt; _14;<br align="left"/>debug protected_maker_min_age =&gt; _15;<br align="left"/>debug maker_direction =&gt; _16;<br align="left"/>debug maker_orders_info =&gt; _18;<br align="left"/>debug taker_order_age =&gt; _19;<br align="left"/>debug residual =&gt; _25;<br align="left"/>debug val =&gt; _28;<br align="left"/>debug iter =&gt; _33;<br align="left"/>debug maker_key =&gt; _41;<br align="left"/>debug user_account_loader =&gt; _42;<br align="left"/>debug maker =&gt; _48;<br align="left"/>debug residual =&gt; _55;<br align="left"/>debug val =&gt; _58;<br align="left"/>debug is_protected_maker =&gt; _69;<br align="left"/>debug market =&gt; _73;<br align="left"/>debug residual =&gt; _80;<br align="left"/>debug val =&gt; _83;<br align="left"/>debug maker_order_price_and_indexes =&gt; _84;<br align="left"/>debug residual =&gt; _118;<br align="left"/>debug val =&gt; _121;<br align="left"/>debug residual =&gt; _145;<br align="left"/>debug val =&gt; _148;<br align="left"/>debug initial_margin_ratio =&gt; _149;<br align="left"/>debug step_size =&gt; _152;<br align="left"/>debug iter =&gt; _162;<br align="left"/>debug maker_order_index =&gt; _169;<br align="left"/>debug maker_order_price =&gt; _170;<br align="left"/>debug maker_order_index =&gt; _171;<br align="left"/>debug maker_order_price =&gt; _172;<br align="left"/>debug maker_order =&gt; _173;<br align="left"/>debug residual =&gt; _187;<br align="left"/>debug val =&gt; _190;<br align="left"/>debug jit_maker_order_id =&gt; _199;<br align="left"/>debug breaches_oracle_price_limits =&gt; _204;<br align="left"/>debug residual =&gt; _212;<br align="left"/>debug val =&gt; _215;<br align="left"/>debug should_expire_order =&gt; _216;<br align="left"/>debug residual =&gt; _226;<br align="left"/>debug val =&gt; _229;<br align="left"/>debug existing_base_asset_amount =&gt; _230;<br align="left"/>debug residual =&gt; _244;<br align="left"/>debug val =&gt; _247;<br align="left"/>debug should_cancel_reduce_only_order =&gt; _248;<br align="left"/>debug residual =&gt; _261;<br align="left"/>debug val =&gt; _264;<br align="left"/>debug filler_reward =&gt; _270;<br align="left"/>debug market =&gt; _271;<br align="left"/>debug residual =&gt; _283;<br align="left"/>debug val =&gt; _286;<br align="left"/>debug residual =&gt; _301;<br align="left"/>debug val =&gt; _304;<br align="left"/>debug explanation =&gt; _305;<br align="left"/>debug residual =&gt; _326;<br align="left"/>debug val =&gt; _329;<br align="left"/>>;
    bb0__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_342 = const false<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_17 = &amp;((*_6).17: controller::position::PositionDirection)<br/></td></tr><tr><td align="left">_16 = controller::position::PositionDirection::opposite(move _17)</td></tr></table>>];
    bb1__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageLive(_18)<br/></td></tr><tr><td align="left">_18 = Vec::&lt;(anchor_lang::prelude::Pubkey, usize, u64)&gt;::with_capacity(const 16_usize)</td></tr></table>>];
    bb2__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_22 = _13<br/>StorageLive(_23)<br/>_23 = ((*_6).0: u64)<br/></td></tr><tr><td align="left">_21 = &lt;u64 as SafeMath&gt;::safe_sub(move _22, move _23)</td></tr></table>>];
    bb3__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">_20 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _21)</td></tr></table>>];
    bb4__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>_24 = discriminant(_20)<br/></td></tr><tr><td align="left">switchInt(move _24)</td></tr></table>>];
    bb5__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_28)<br/>_28 = ((_20 as Continue).0: u64)<br/>_19 = _28<br/>StorageDead(_28)<br/>StorageDead(_20)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>_32 = &amp;((*_4).0: std::collections::BTreeMap&lt;anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;&gt;)<br/></td></tr><tr><td align="left">_31 = BTreeMap::&lt;anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountLoader&lt;'_, User&gt;&gt;::iter(move _32)</td></tr></table>>];
    bb6__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb7__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_25)<br/>_25 = ((_20 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_27)<br/>_27 = _25<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Vec&lt;(anchor_lang::prelude::Pubkey, usize, u64)&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _27)</td></tr></table>>];
    bb8__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_25)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/></td></tr><tr><td align="left">_30 = &lt;std::collections::btree_map::Iter&lt;'_, anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountLoader&lt;'_, User&gt;&gt; as IntoIterator&gt;::into_iter(move _31)</td></tr></table>>];
    bb10__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageLive(_33)<br/>_33 = move _30<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb11__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>_38 = &amp;mut _33<br/>_37 = &amp;mut (*_38)<br/></td></tr><tr><td align="left">_36 = &lt;std::collections::btree_map::Iter&lt;'_, anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountLoader&lt;'_, User&gt;&gt; as Iterator&gt;::next(move _37)</td></tr></table>>];
    bb12__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>_39 = discriminant(_36)<br/></td></tr><tr><td align="left">switchInt(move _39)</td></tr></table>>];
    bb13__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_41)<br/>_41 = (((_36 as Some).0: (&amp;anchor_lang::prelude::Pubkey, &amp;anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)).0: &amp;anchor_lang::prelude::Pubkey)<br/>StorageLive(_42)<br/>_42 = (((_36 as Some).0: (&amp;anchor_lang::prelude::Pubkey, &amp;anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)).1: &amp;anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>_45 = &amp;_41<br/>StorageLive(_46)<br/>_46 = &amp;_5<br/></td></tr><tr><td align="left">_44 = &lt;&amp;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _45, move _46)</td></tr></table>>];
    bb14__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">_29 = const ()<br/>StorageDead(_38)<br/>StorageDead(_36)<br/>StorageDead(_35)<br/>StorageDead(_33)<br/>StorageDead(_30)<br/>StorageDead(_29)<br/>StorageLive(_338)<br/>_338 = move _18<br/>_0 = std::result::Result::&lt;Vec&lt;(anchor_lang::prelude::Pubkey, usize, u64)&gt;, error::ErrorCode&gt;::Ok(move _338)<br/>StorageDead(_338)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left">switchInt(move _44)</td></tr></table>>];
    bb16__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_45)<br/>StorageDead(_44)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_45)<br/>_43 = const ()<br/>StorageDead(_44)<br/>StorageDead(_43)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>_52 = &amp;(*_42)<br/></td></tr><tr><td align="left">_51 = anchor_lang::prelude::AccountLoader::&lt;'_, User&gt;::load_mut(move _52)</td></tr></table>>];
    bb18__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageLive(_53)<br/>_53 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_50 = std::result::Result::&lt;RefMut&lt;'_, User&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _51, move _53)</td></tr></table>>];
    bb19__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">_49 = &lt;std::result::Result&lt;RefMut&lt;'_, User&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _50)</td></tr></table>>];
    bb20__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>_54 = discriminant(_49)<br/></td></tr><tr><td align="left">switchInt(move _54)</td></tr></table>>];
    bb21__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_58)<br/>_58 = move ((_49 as Continue).0: std::cell::RefMut&lt;'_, state::user::User&gt;)<br/>_48 = move _58<br/>StorageDead(_58)<br/>_345 = discriminant(_49)<br/>StorageDead(_49)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>_63 = &amp;_48<br/></td></tr><tr><td align="left">_62 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _63)</td></tr></table>>];
    bb22__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_55)<br/>_55 = ((_49 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_57)<br/>_57 = _55<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Vec&lt;(anchor_lang::prelude::Pubkey, usize, u64)&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _57)</td></tr></table>>];
    bb23__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_55)<br/>_343 = discriminant(_49)<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">_61 = &amp;(*_62)<br/>StorageDead(_63)<br/></td></tr><tr><td align="left">_60 = User::is_being_liquidated(move _61)</td></tr></table>>];
    bb25__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left">switchInt(move _60)</td></tr></table>>];
    bb26__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageDead(_61)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>_67 = &amp;_48<br/></td></tr><tr><td align="left">_66 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _67)</td></tr></table>>];
    bb28__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">_65 = &amp;(*_66)<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">_64 = User::is_bankrupt(move _65)</td></tr></table>>];
    bb29__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left">switchInt(move _64)</td></tr></table>>];
    bb30__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageDead(_65)<br/>StorageDead(_64)<br/>StorageDead(_60)<br/>StorageDead(_59)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageDead(_65)<br/>_59 = const ()<br/>StorageDead(_64)<br/>StorageDead(_60)<br/>StorageDead(_59)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>_72 = &amp;_48<br/></td></tr><tr><td align="left">_71 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _72)</td></tr></table>>];
    bb32__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">_70 = &amp;(*_71)<br/>StorageDead(_72)<br/></td></tr><tr><td align="left">_69 = User::is_protected_maker(move _70)</td></tr></table>>];
    bb33__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_71)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>_76 = &amp;(*_1)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>_78 = &amp;((*_6).11: u16)<br/>_77 = &amp;(*_78)<br/></td></tr><tr><td align="left">_75 = PerpMarketMap::&lt;'_&gt;::get_ref_mut(move _76, move _77)</td></tr></table>>];
    bb34__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>StorageDead(_76)<br/></td></tr><tr><td align="left">_74 = &lt;std::result::Result&lt;RefMut&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _75)</td></tr></table>>];
    bb35__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>_79 = discriminant(_74)<br/></td></tr><tr><td align="left">switchInt(move _79)</td></tr></table>>];
    bb36__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageLive(_83)<br/>_83 = move ((_74 as Continue).0: std::cell::RefMut&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_342 = const true<br/>_73 = move _83<br/>StorageDead(_83)<br/>_349 = discriminant(_74)<br/>StorageDead(_78)<br/>StorageDead(_74)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>_90 = &amp;_48<br/>_89 = &amp;(*_90)<br/></td></tr><tr><td align="left">_88 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _89)</td></tr></table>>];
    bb37__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_80)<br/>_80 = ((_74 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_82)<br/>_82 = _80<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Vec&lt;(anchor_lang::prelude::Pubkey, usize, u64)&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _82)</td></tr></table>>];
    bb38__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>StorageDead(_80)<br/>_347 = discriminant(_74)<br/>StorageDead(_78)<br/>StorageDead(_74)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">_87 = &amp;(*_88)<br/>StorageDead(_89)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>_92 = &amp;_16<br/>_91 = &amp;(*_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>_339 = const _<br/>_94 = &amp;(*_339)<br/>_93 = &amp;(*_94)<br/>StorageLive(_96)<br/>_96 = ((*_6).11: u16)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>_98 = _10<br/>_97 = Option::&lt;i64&gt;::Some(move _98)<br/>StorageDead(_98)<br/>StorageLive(_99)<br/>_99 = _13<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>_102 = &amp;_73<br/></td></tr><tr><td align="left">_101 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _102)</td></tr></table>>];
    bb40__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>_100 = (((*_101).1: state::perp_market::AMM).53: u64)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>_106 = &amp;_73<br/></td></tr><tr><td align="left">_105 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _106)</td></tr></table>>];
    bb41__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">_104 = &amp;(*_105)<br/>StorageDead(_106)<br/></td></tr><tr><td align="left">_103 = PerpMarket::is_prediction_market(move _104)</td></tr></table>>];
    bb42__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>_108 = _69<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>_110 = &amp;_11<br/></td></tr><tr><td align="left">_109 = Option::&lt;u32&gt;::is_some(move _110)</td></tr></table>>];
    bb43__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/>StorageLive(_111)<br/>_111 = _14<br/>StorageLive(_112)<br/>_112 = _19<br/>StorageLive(_113)<br/>_113 = _15<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>_116 = &amp;_73<br/></td></tr><tr><td align="left">_115 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _116)</td></tr></table>>];
    bb44__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">_114 = &amp;(*_115)<br/>StorageDead(_116)<br/></td></tr><tr><td align="left">_107 = get_protected_maker_params(move _108, move _109, move _111, move _112, move _113, move _114)</td></tr></table>>];
    bb45__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/>StorageDead(_113)<br/>StorageDead(_112)<br/>StorageDead(_111)<br/>StorageDead(_109)<br/>StorageDead(_108)<br/></td></tr><tr><td align="left">_86 = math::orders::find_maker_orders(move _87, move _91, move _93, move _96, move _97, move _99, move _100, move _103, move _107)</td></tr></table>>];
    bb46__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>StorageDead(_103)<br/>StorageDead(_100)<br/>StorageDead(_99)<br/>StorageDead(_97)<br/>StorageDead(_96)<br/>StorageDead(_93)<br/>StorageDead(_91)<br/>StorageDead(_87)<br/></td></tr><tr><td align="left">_85 = &lt;std::result::Result&lt;Vec&lt;(usize, u64)&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _86)</td></tr></table>>];
    bb47__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>_117 = discriminant(_85)<br/></td></tr><tr><td align="left">switchInt(move _117)</td></tr></table>>];
    bb48__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageLive(_121)<br/>_121 = move ((_85 as Continue).0: std::vec::Vec&lt;(usize, u64)&gt;)<br/>_84 = move _121<br/>StorageDead(_121)<br/>_353 = discriminant(_85)<br/>StorageDead(_115)<br/>StorageDead(_105)<br/>StorageDead(_101)<br/>StorageDead(_94)<br/>StorageDead(_92)<br/>StorageDead(_90)<br/>StorageDead(_88)<br/>StorageDead(_85)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>_124 = &amp;_84<br/></td></tr><tr><td align="left">_123 = Vec::&lt;(usize, u64)&gt;::is_empty(move _124)</td></tr></table>>];
    bb49__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageLive(_118)<br/>_118 = ((_85 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_120)<br/>_120 = _118<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Vec&lt;(anchor_lang::prelude::Pubkey, usize, u64)&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _120)</td></tr></table>>];
    bb50__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/>StorageDead(_118)<br/>_351 = discriminant(_85)<br/>StorageDead(_115)<br/>StorageDead(_105)<br/>StorageDead(_101)<br/>StorageDead(_94)<br/>StorageDead(_92)<br/>StorageDead(_90)<br/>StorageDead(_88)<br/>StorageDead(_85)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb51__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left">switchInt(move _123)</td></tr></table>>];
    bb52__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_124)<br/>StorageDead(_123)<br/>StorageDead(_122)<br/></td></tr><tr><td align="left">drop(_84)</td></tr></table>>];
    bb53__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_124)<br/>_122 = const ()<br/>StorageDead(_123)<br/>StorageDead(_122)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>_129 = &amp;mut _48<br/></td></tr><tr><td align="left">_128 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _129)</td></tr></table>>];
    bb54__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">_127 = &amp;mut (*_128)<br/>StorageDead(_129)<br/>StorageLive(_130)<br/>_130 = _13<br/></td></tr><tr><td align="left">_126 = User::update_last_active_slot(move _127, move _130)</td></tr></table>>];
    bb55__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_130)<br/>StorageDead(_127)<br/>StorageDead(_128)<br/>StorageDead(_126)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>_137 = &amp;mut _48<br/>_136 = &amp;mut (*_137)<br/></td></tr><tr><td align="left">_135 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _136)</td></tr></table>>];
    bb56__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">_134 = &amp;mut (*_135)<br/>StorageDead(_136)<br/>StorageLive(_138)<br/>_138 = &amp;(*_41)<br/>StorageLive(_139)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>_142 = &amp;mut _73<br/>_141 = &amp;mut (*_142)<br/></td></tr><tr><td align="left">_140 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _141)</td></tr></table>>];
    bb57__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">_139 = &amp;mut (*_140)<br/>StorageDead(_141)<br/>StorageLive(_143)<br/>_143 = _12<br/></td></tr><tr><td align="left">_133 = controller::funding::settle_funding_payment(move _134, move _138, move _139, move _143)</td></tr></table>>];
    bb58__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_143)<br/>StorageDead(_139)<br/>StorageDead(_138)<br/>StorageDead(_134)<br/></td></tr><tr><td align="left">_132 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _133)</td></tr></table>>];
    bb59__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/>_144 = discriminant(_132)<br/></td></tr><tr><td align="left">switchInt(move _144)</td></tr></table>>];
    bb60__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageLive(_148)<br/>_148 = ((_132 as Continue).0: ())<br/>_131 = _148<br/>StorageDead(_148)<br/>StorageDead(_142)<br/>StorageDead(_140)<br/>StorageDead(_137)<br/>StorageDead(_135)<br/>StorageDead(_132)<br/>StorageDead(_131)<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>_151 = &amp;_73<br/></td></tr><tr><td align="left">_150 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _151)</td></tr></table>>];
    bb61__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageLive(_145)<br/>_145 = ((_132 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_147)<br/>_147 = _145<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Vec&lt;(anchor_lang::prelude::Pubkey, usize, u64)&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _147)</td></tr></table>>];
    bb62__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_147)<br/>StorageDead(_145)<br/>StorageDead(_142)<br/>StorageDead(_140)<br/>StorageDead(_137)<br/>StorageDead(_135)<br/>StorageDead(_132)<br/>StorageDead(_131)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb63__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_151)<br/>_149 = ((*_150).15: u32)<br/>StorageDead(_150)<br/>StorageLive(_152)<br/>StorageLive(_153)<br/>StorageLive(_154)<br/>_154 = &amp;_73<br/></td></tr><tr><td align="left">_153 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _154)</td></tr></table>>];
    bb64__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_154)<br/>_152 = (((*_153).1: state::perp_market::AMM).52: u64)<br/>StorageDead(_153)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>_342 = const false<br/>_156 = move _73<br/></td></tr><tr><td align="left">_155 = std::mem::drop::&lt;RefMut&lt;'_, PerpMarket&gt;&gt;(move _156)</td></tr></table>>];
    bb65__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_156)<br/>StorageDead(_155)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>StorageLive(_161)<br/>_161 = &amp;_84<br/></td></tr><tr><td align="left">_160 = &lt;Vec&lt;(usize, u64)&gt; as Deref&gt;::deref(move _161)</td></tr></table>>];
    bb66__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">_159 = &amp;(*_160)<br/>StorageDead(_161)<br/></td></tr><tr><td align="left">_158 = core::slice::&lt;impl [(usize, u64)]&gt;::iter(move _159)</td></tr></table>>];
    bb67__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_159)<br/></td></tr><tr><td align="left">_157 = &lt;std::slice::Iter&lt;'_, (usize, u64)&gt; as IntoIterator&gt;::into_iter(move _158)</td></tr></table>>];
    bb68__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_158)<br/>StorageLive(_162)<br/>_162 = move _157<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb69__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageLive(_163)<br/>StorageLive(_164)<br/>StorageLive(_165)<br/>StorageLive(_166)<br/>_166 = &amp;mut _162<br/>_165 = &amp;mut (*_166)<br/></td></tr><tr><td align="left">_164 = &lt;std::slice::Iter&lt;'_, (usize, u64)&gt; as Iterator&gt;::next(move _165)</td></tr></table>>];
    bb70__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_165)<br/>_167 = discriminant(_164)<br/></td></tr><tr><td align="left">switchInt(move _167)</td></tr></table>>];
    bb71__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageLive(_169)<br/>_340 = deref_copy ((_164 as Some).0: &amp;(usize, u64))<br/>_169 = &amp;((*_340).0: usize)<br/>StorageLive(_170)<br/>_341 = deref_copy ((_164 as Some).0: &amp;(usize, u64))<br/>_170 = &amp;((*_341).1: u64)<br/>StorageLive(_171)<br/>_171 = (*_169)<br/>StorageLive(_172)<br/>_172 = (*_170)<br/>StorageLive(_173)<br/>StorageLive(_174)<br/>StorageLive(_175)<br/>_175 = &amp;_48<br/></td></tr><tr><td align="left">_174 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _175)</td></tr></table>>];
    bb72__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">_35 = const ()<br/>StorageDead(_166)<br/>StorageDead(_164)<br/>StorageDead(_163)<br/>StorageDead(_162)<br/>StorageDead(_160)<br/>StorageDead(_157)<br/>StorageDead(_152)<br/>StorageDead(_149)<br/></td></tr><tr><td align="left">drop(_84)</td></tr></table>>];
    bb73__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_175)<br/>StorageLive(_176)<br/>_176 = _171<br/>_177 = Len(((*_174).5: [state::user::Order; 32]))<br/>_178 = Lt(_176, _177)<br/></td></tr><tr><td align="left">assert(move _178, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _177, _176)</td></tr></table>>];
    bb74__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">_173 = &amp;((*_174).5: [state::user::Order; 32])[_176]<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>StorageLive(_181)<br/>StorageLive(_182)<br/>StorageLive(_183)<br/>_183 = &amp;(*_173)<br/>StorageLive(_184)<br/>_184 = &amp;(*_6)<br/>StorageLive(_185)<br/>_185 = _13<br/></td></tr><tr><td align="left">_182 = is_maker_for_taker(move _183, move _184, move _185)</td></tr></table>>];
    bb75__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_185)<br/>StorageDead(_184)<br/>StorageDead(_183)<br/></td></tr><tr><td align="left">_181 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _182)</td></tr></table>>];
    bb76__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_182)<br/>_186 = discriminant(_181)<br/></td></tr><tr><td align="left">switchInt(move _186)</td></tr></table>>];
    bb77__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageLive(_190)<br/>_190 = ((_181 as Continue).0: bool)<br/>_180 = _190<br/>StorageDead(_190)<br/></td></tr><tr><td align="left">switchInt(move _180)</td></tr></table>>];
    bb78__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageLive(_187)<br/>_187 = ((_181 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_189)<br/>_189 = _187<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Vec&lt;(anchor_lang::prelude::Pubkey, usize, u64)&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _189)</td></tr></table>>];
    bb79__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_189)<br/>StorageDead(_187)<br/>StorageDead(_181)<br/>StorageDead(_180)<br/>StorageDead(_179)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb80__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_181)<br/>_179 = const ()<br/>StorageDead(_180)<br/>StorageDead(_179)<br/>StorageLive(_192)<br/>StorageLive(_193)<br/>StorageLive(_194)<br/>_194 = &amp;(*_173)<br/>StorageLive(_195)<br/>_195 = &amp;(*_6)<br/></td></tr><tr><td align="left">_193 = are_orders_same_market_but_different_sides(move _194, move _195)</td></tr></table>>];
    bb81__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_181)<br/>StorageDead(_180)<br/>StorageDead(_179)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb82__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left">switchInt(move _193)</td></tr></table>>];
    bb83__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_195)<br/>StorageDead(_194)<br/>_192 = const ()<br/>StorageDead(_193)<br/>StorageDead(_192)<br/>StorageLive(_197)<br/>_198 = discriminant(_11)<br/></td></tr><tr><td align="left">switchInt(move _198)</td></tr></table>>];
    bb84__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_195)<br/>StorageDead(_194)<br/>StorageDead(_193)<br/>StorageDead(_192)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb85__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">_197 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb86__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageLive(_199)<br/>_199 = ((_11 as Some).0: u32)<br/>StorageLive(_200)<br/>StorageLive(_201)<br/>_201 = ((*_173).10: u32)<br/>StorageLive(_202)<br/>_202 = _199<br/>_200 = Ne(move _201, move _202)<br/></td></tr><tr><td align="left">switchInt(move _200)</td></tr></table>>];
    bb87__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_202)<br/>StorageDead(_201)<br/>StorageDead(_200)<br/>StorageDead(_199)<br/>StorageDead(_197)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb88__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_202)<br/>StorageDead(_201)<br/>_197 = const ()<br/>StorageDead(_200)<br/>StorageDead(_199)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb89__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_197)<br/>StorageLive(_204)<br/>StorageLive(_205)<br/>StorageLive(_206)<br/>StorageLive(_207)<br/>_207 = _172<br/>StorageLive(_208)<br/>_208 = ((*_173).17: controller::position::PositionDirection)<br/>StorageLive(_209)<br/>_209 = _10<br/>StorageLive(_210)<br/>_210 = _149<br/></td></tr><tr><td align="left">_206 = math::orders::limit_price_breaches_maker_oracle_price_bands(move _207, move _208, move _209, move _210)</td></tr></table>>];
    bb90__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_210)<br/>StorageDead(_209)<br/>StorageDead(_208)<br/>StorageDead(_207)<br/></td></tr><tr><td align="left">_205 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _206)</td></tr></table>>];
    bb91__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_206)<br/>_211 = discriminant(_205)<br/></td></tr><tr><td align="left">switchInt(move _211)</td></tr></table>>];
    bb92__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageLive(_215)<br/>_215 = ((_205 as Continue).0: bool)<br/>_204 = _215<br/>StorageDead(_215)<br/>StorageDead(_205)<br/>StorageLive(_216)<br/>StorageLive(_217)<br/>StorageLive(_218)<br/>StorageLive(_219)<br/>StorageLive(_220)<br/>StorageLive(_221)<br/>StorageLive(_222)<br/>_222 = &amp;_48<br/>_221 = &amp;(*_222)<br/></td></tr><tr><td align="left">_220 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _221)</td></tr></table>>];
    bb93__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageLive(_212)<br/>_212 = ((_205 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_214)<br/>_214 = _212<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Vec&lt;(anchor_lang::prelude::Pubkey, usize, u64)&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _214)</td></tr></table>>];
    bb94__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_214)<br/>StorageDead(_212)<br/>StorageDead(_205)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb95__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">_219 = &amp;(*_220)<br/>StorageDead(_221)<br/>StorageLive(_223)<br/>_223 = _171<br/>StorageLive(_224)<br/>_224 = _12<br/></td></tr><tr><td align="left">_218 = math::orders::should_expire_order(move _219, move _223, move _224)</td></tr></table>>];
    bb96__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_224)<br/>StorageDead(_223)<br/>StorageDead(_219)<br/></td></tr><tr><td align="left">_217 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _218)</td></tr></table>>];
    bb97__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_218)<br/>_225 = discriminant(_217)<br/></td></tr><tr><td align="left">switchInt(move _225)</td></tr></table>>];
    bb98__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageLive(_229)<br/>_229 = ((_217 as Continue).0: bool)<br/>_216 = _229<br/>StorageDead(_229)<br/>StorageDead(_222)<br/>StorageDead(_220)<br/>StorageDead(_217)<br/>StorageLive(_230)<br/>StorageLive(_231)<br/>StorageLive(_232)<br/>StorageLive(_233)<br/>StorageLive(_234)<br/>StorageLive(_235)<br/>StorageLive(_236)<br/>_236 = &amp;_48<br/></td></tr><tr><td align="left">_235 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _236)</td></tr></table>>];
    bb99__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageLive(_226)<br/>_226 = ((_217 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_228)<br/>_228 = _226<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Vec&lt;(anchor_lang::prelude::Pubkey, usize, u64)&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _228)</td></tr></table>>];
    bb100__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_228)<br/>StorageDead(_226)<br/>StorageDead(_222)<br/>StorageDead(_220)<br/>StorageDead(_217)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb101__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">_234 = &amp;(*_235)<br/>StorageDead(_236)<br/>StorageLive(_237)<br/>StorageLive(_238)<br/>StorageLive(_239)<br/>_239 = &amp;_48<br/></td></tr><tr><td align="left">_238 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _239)</td></tr></table>>];
    bb102__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_239)<br/>StorageLive(_240)<br/>_240 = _171<br/>_241 = Len(((*_238).5: [state::user::Order; 32]))<br/>_242 = Lt(_240, _241)<br/></td></tr><tr><td align="left">assert(move _242, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _241, _240)</td></tr></table>>];
    bb103__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">_237 = (((*_238).5: [state::user::Order; 32])[_240].11: u16)<br/></td></tr><tr><td align="left">_233 = User::get_perp_position(move _234, move _237)</td></tr></table>>];
    bb104__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_237)<br/>StorageDead(_234)<br/></td></tr><tr><td align="left">_232 = &lt;std::result::Result&lt;&amp;PerpPosition, error::ErrorCode&gt; as Try&gt;::branch(move _233)</td></tr></table>>];
    bb105__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_233)<br/>_243 = discriminant(_232)<br/></td></tr><tr><td align="left">switchInt(move _243)</td></tr></table>>];
    bb106__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageLive(_247)<br/>_247 = ((_232 as Continue).0: &amp;state::user::PerpPosition)<br/>_231 = _247<br/>StorageDead(_247)<br/>_230 = ((*_231).1: i64)<br/>StorageDead(_240)<br/>StorageDead(_238)<br/>StorageDead(_235)<br/>StorageDead(_232)<br/>StorageDead(_231)<br/>StorageLive(_248)<br/>StorageLive(_249)<br/>StorageLive(_250)<br/>StorageLive(_251)<br/>StorageLive(_252)<br/>StorageLive(_253)<br/>StorageLive(_254)<br/>_254 = &amp;_48<br/></td></tr><tr><td align="left">_253 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _254)</td></tr></table>>];
    bb107__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageLive(_244)<br/>_244 = ((_232 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_246)<br/>_246 = _244<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Vec&lt;(anchor_lang::prelude::Pubkey, usize, u64)&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _246)</td></tr></table>>];
    bb108__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageDead(_246)<br/>StorageDead(_244)<br/>StorageDead(_240)<br/>StorageDead(_238)<br/>StorageDead(_235)<br/>StorageDead(_232)<br/>StorageDead(_231)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb109__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageDead(_254)<br/>StorageLive(_255)<br/>_255 = _171<br/>_256 = Len(((*_253).5: [state::user::Order; 32]))<br/>_257 = Lt(_255, _256)<br/></td></tr><tr><td align="left">assert(move _257, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _256, _255)</td></tr></table>>];
    bb110__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">_252 = &amp;((*_253).5: [state::user::Order; 32])[_255]<br/>_251 = &amp;(*_252)<br/>StorageLive(_258)<br/>_258 = _230<br/>StorageLive(_259)<br/>_259 = _152<br/></td></tr><tr><td align="left">_250 = math::orders::should_cancel_reduce_only_order(move _251, move _258, move _259)</td></tr></table>>];
    bb111__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_259)<br/>StorageDead(_258)<br/>StorageDead(_251)<br/></td></tr><tr><td align="left">_249 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _250)</td></tr></table>>];
    bb112__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageDead(_250)<br/>_260 = discriminant(_249)<br/></td></tr><tr><td align="left">switchInt(move _260)</td></tr></table>>];
    bb113__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageLive(_264)<br/>_264 = ((_249 as Continue).0: bool)<br/>_248 = _264<br/>StorageDead(_264)<br/>StorageDead(_255)<br/>StorageDead(_253)<br/>StorageDead(_252)<br/>StorageDead(_249)<br/>StorageLive(_265)<br/>StorageLive(_266)<br/>_266 = _204<br/></td></tr><tr><td align="left">switchInt(move _266)</td></tr></table>>];
    bb114__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageLive(_261)<br/>_261 = ((_249 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_263)<br/>_263 = _261<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Vec&lt;(anchor_lang::prelude::Pubkey, usize, u64)&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _263)</td></tr></table>>];
    bb115__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageDead(_263)<br/>StorageDead(_261)<br/>StorageDead(_255)<br/>StorageDead(_253)<br/>StorageDead(_252)<br/>StorageDead(_249)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb116__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageLive(_267)<br/>_267 = _216<br/></td></tr><tr><td align="left">switchInt(move _267)</td></tr></table>>];
    bb117__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageLive(_268)<br/>_268 = _248<br/></td></tr><tr><td align="left">switchInt(move _268)</td></tr></table>>];
    bb118__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageLive(_270)<br/>StorageLive(_271)<br/>StorageLive(_272)<br/>StorageLive(_273)<br/>StorageLive(_274)<br/>_274 = &amp;(*_1)<br/>StorageLive(_275)<br/>StorageLive(_276)<br/>StorageLive(_277)<br/>StorageLive(_278)<br/>_278 = &amp;_48<br/></td></tr><tr><td align="left">_277 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _278)</td></tr></table>>];
    bb119__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">_265 = const ()<br/>StorageDead(_268)<br/>StorageDead(_267)<br/>StorageDead(_266)<br/>StorageDead(_265)<br/>StorageLive(_330)<br/>StorageLive(_331)<br/>StorageLive(_332)<br/>_332 = &amp;mut _18<br/>_331 = &amp;mut (*_332)<br/>StorageLive(_333)<br/>StorageLive(_334)<br/>_334 = (*_41)<br/>StorageLive(_335)<br/>_335 = _171<br/>StorageLive(_336)<br/>_336 = _172<br/>_333 = (move _334, move _335, move _336)<br/>StorageDead(_336)<br/>StorageDead(_335)<br/>StorageDead(_334)<br/>StorageLive(_337)<br/>_337 = _16<br/></td></tr><tr><td align="left">_330 = insert_maker_order_info(move _331, move _333, move _337)</td></tr></table>>];
    bb120__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageDead(_278)<br/>StorageLive(_279)<br/>_279 = _171<br/>_280 = Len(((*_277).5: [state::user::Order; 32]))<br/>_281 = Lt(_279, _280)<br/></td></tr><tr><td align="left">assert(move _281, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _280, _279)</td></tr></table>>];
    bb121__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">_276 = &amp;(((*_277).5: [state::user::Order; 32])[_279].11: u16)<br/>_275 = &amp;(*_276)<br/></td></tr><tr><td align="left">_273 = PerpMarketMap::&lt;'_&gt;::get_ref_mut(move _274, move _275)</td></tr></table>>];
    bb122__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageDead(_275)<br/>StorageDead(_274)<br/></td></tr><tr><td align="left">_272 = &lt;std::result::Result&lt;RefMut&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _273)</td></tr></table>>];
    bb123__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageDead(_273)<br/>_282 = discriminant(_272)<br/></td></tr><tr><td align="left">switchInt(move _282)</td></tr></table>>];
    bb124__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageLive(_286)<br/>_286 = move ((_272 as Continue).0: std::cell::RefMut&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_271 = move _286<br/>StorageDead(_286)<br/>_357 = discriminant(_272)<br/>StorageDead(_279)<br/>StorageDead(_277)<br/>StorageDead(_276)<br/>StorageDead(_272)<br/>StorageLive(_287)<br/>StorageLive(_288)<br/>StorageLive(_289)<br/>StorageLive(_290)<br/>StorageLive(_291)<br/>StorageLive(_292)<br/>_292 = &amp;mut _48<br/>_291 = &amp;mut (*_292)<br/></td></tr><tr><td align="left">_290 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _291)</td></tr></table>>];
    bb125__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageLive(_283)<br/>_283 = ((_272 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_285)<br/>_285 = _283<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Vec&lt;(anchor_lang::prelude::Pubkey, usize, u64)&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _285)</td></tr></table>>];
    bb126__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageDead(_285)<br/>StorageDead(_283)<br/>_355 = discriminant(_272)<br/>StorageDead(_279)<br/>StorageDead(_277)<br/>StorageDead(_276)<br/>StorageDead(_272)<br/>StorageDead(_271)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb127__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">_289 = &amp;mut (*_290)<br/>StorageDead(_291)<br/>StorageLive(_293)<br/>StorageLive(_294)<br/>_294 = &amp;mut (*_7)<br/></td></tr><tr><td align="left">_293 = Option::&lt;&amp;mut User&gt;::as_deref_mut(move _294)</td></tr></table>>];
    bb128__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageDead(_294)<br/>StorageLive(_295)<br/>StorageLive(_296)<br/>StorageLive(_297)<br/>_297 = &amp;mut _271<br/></td></tr><tr><td align="left">_296 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _297)</td></tr></table>>];
    bb129__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">_295 = &amp;mut (*_296)<br/>StorageDead(_297)<br/>StorageLive(_298)<br/>_298 = _9<br/>StorageLive(_299)<br/>_299 = _13<br/></td></tr><tr><td align="left">_288 = pay_keeper_flat_reward_for_perps(move _289, move _293, move _295, move _298, move _299)</td></tr></table>>];
    bb130__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageDead(_299)<br/>StorageDead(_298)<br/>StorageDead(_295)<br/>StorageDead(_293)<br/>StorageDead(_289)<br/></td></tr><tr><td align="left">_287 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _288)</td></tr></table>>];
    bb131__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageDead(_288)<br/>_300 = discriminant(_287)<br/></td></tr><tr><td align="left">switchInt(move _300)</td></tr></table>>];
    bb132__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageLive(_304)<br/>_304 = ((_287 as Continue).0: u64)<br/>_270 = _304<br/>StorageDead(_304)<br/></td></tr><tr><td align="left">drop(_271)</td></tr></table>>];
    bb133__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageLive(_301)<br/>_301 = ((_287 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_303)<br/>_303 = _301<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Vec&lt;(anchor_lang::prelude::Pubkey, usize, u64)&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _303)</td></tr></table>>];
    bb134__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageDead(_303)<br/>StorageDead(_301)<br/></td></tr><tr><td align="left">drop(_271)</td></tr></table>>];
    bb135__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageDead(_271)<br/>StorageDead(_296)<br/>StorageDead(_292)<br/>StorageDead(_290)<br/>StorageDead(_287)<br/>StorageLive(_305)<br/>StorageLive(_306)<br/>_306 = _204<br/></td></tr><tr><td align="left">switchInt(move _306)</td></tr></table>>];
    bb136__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">_305 = OrderActionExplanation::OraclePriceBreachedLimitPrice<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb137__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">StorageLive(_307)<br/>_307 = _216<br/></td></tr><tr><td align="left">switchInt(move _307)</td></tr></table>>];
    bb138__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">_305 = OrderActionExplanation::OrderExpired<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb139__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">_305 = OrderActionExplanation::ReduceOnlyOrderIncreasedPosition<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb140__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">StorageDead(_307)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb141__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">StorageDead(_306)<br/>StorageLive(_308)<br/>StorageLive(_309)<br/>StorageLive(_310)<br/>StorageLive(_311)<br/>_311 = _171<br/>StorageLive(_312)<br/>StorageLive(_313)<br/>StorageLive(_314)<br/>_314 = &amp;mut _48<br/></td></tr><tr><td align="left">_313 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _314)</td></tr></table>>];
    bb142__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">_312 = &amp;mut (*_313)<br/>StorageDead(_314)<br/>StorageLive(_315)<br/>_315 = &amp;(*_41)<br/>StorageLive(_316)<br/>_316 = &amp;(*_1)<br/>StorageLive(_317)<br/>_317 = &amp;(*_2)<br/>StorageLive(_318)<br/>_318 = &amp;mut (*_3)<br/>StorageLive(_319)<br/>_319 = _12<br/>StorageLive(_320)<br/>_320 = _13<br/>StorageLive(_321)<br/>_321 = _305<br/>StorageLive(_322)<br/>StorageLive(_323)<br/>_323 = &amp;(*_8)<br/>_322 = Option::&lt;&amp;anchor_lang::prelude::Pubkey&gt;::Some(move _323)<br/>StorageDead(_323)<br/>StorageLive(_324)<br/>_324 = _270<br/></td></tr><tr><td align="left">_310 = controller::orders::cancel_order(move _311, move _312, move _315, move _316, move _317, move _318, move _319, move _320, move _321, move _322, move _324, const false)</td></tr></table>>];
    bb143__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageDead(_324)<br/>StorageDead(_322)<br/>StorageDead(_321)<br/>StorageDead(_320)<br/>StorageDead(_319)<br/>StorageDead(_318)<br/>StorageDead(_317)<br/>StorageDead(_316)<br/>StorageDead(_315)<br/>StorageDead(_312)<br/>StorageDead(_311)<br/></td></tr><tr><td align="left">_309 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _310)</td></tr></table>>];
    bb144__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">StorageDead(_310)<br/>_325 = discriminant(_309)<br/></td></tr><tr><td align="left">switchInt(move _325)</td></tr></table>>];
    bb145__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageLive(_329)<br/>_329 = ((_309 as Continue).0: ())<br/>_308 = _329<br/>StorageDead(_329)<br/>StorageDead(_313)<br/>StorageDead(_309)<br/>StorageDead(_308)<br/>StorageDead(_305)<br/>StorageDead(_270)<br/>StorageDead(_268)<br/>StorageDead(_267)<br/>StorageDead(_266)<br/>StorageDead(_265)<br/>StorageDead(_248)<br/>StorageDead(_230)<br/>StorageDead(_216)<br/>StorageDead(_204)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb146__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">StorageLive(_326)<br/>_326 = ((_309 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_328)<br/>_328 = _326<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Vec&lt;(anchor_lang::prelude::Pubkey, usize, u64)&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _328)</td></tr></table>>];
    bb147__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left" balign="left">StorageDead(_328)<br/>StorageDead(_326)<br/>StorageDead(_313)<br/>StorageDead(_309)<br/>StorageDead(_308)<br/>StorageDead(_305)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb148__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left" balign="left">StorageDead(_337)<br/>StorageDead(_333)<br/>StorageDead(_331)<br/>StorageDead(_332)<br/>StorageDead(_330)<br/>_163 = const ()<br/>StorageDead(_248)<br/>StorageDead(_230)<br/>StorageDead(_216)<br/>StorageDead(_204)<br/>StorageDead(_176)<br/>StorageDead(_174)<br/>StorageDead(_173)<br/>StorageDead(_172)<br/>StorageDead(_171)<br/>StorageDead(_170)<br/>StorageDead(_169)<br/>StorageDead(_166)<br/>StorageDead(_164)<br/>StorageDead(_163)<br/>_34 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb149__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">149</td></tr><tr><td align="left" balign="left">StorageDead(_176)<br/>StorageDead(_174)<br/>StorageDead(_173)<br/>StorageDead(_172)<br/>StorageDead(_171)<br/>StorageDead(_170)<br/>StorageDead(_169)<br/>StorageDead(_166)<br/>StorageDead(_164)<br/>StorageDead(_163)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb150__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">150</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>_342 = const false<br/>StorageDead(_73)<br/>StorageDead(_69)<br/></td></tr><tr><td align="left">drop(_48)</td></tr></table>>];
    bb151__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">151</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageDead(_42)<br/>StorageDead(_41)<br/>StorageDead(_38)<br/>StorageDead(_36)<br/>StorageDead(_35)<br/>_34 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb152__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">152</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/></td></tr><tr><td align="left">drop(_73)</td></tr></table>>];
    bb153__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">153</td></tr><tr><td align="left" balign="left">_342 = const false<br/>StorageDead(_73)<br/>StorageDead(_69)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb154__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">154</td></tr><tr><td align="left">drop(_48)</td></tr></table>>];
    bb155__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">155</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb156__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">156</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_41)<br/>StorageDead(_38)<br/>StorageDead(_36)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb157__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">157</td></tr><tr><td align="left" balign="left">StorageDead(_271)<br/>StorageDead(_296)<br/>StorageDead(_292)<br/>StorageDead(_290)<br/>StorageDead(_287)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb158__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">158</td></tr><tr><td align="left" balign="left">StorageDead(_270)<br/>StorageDead(_268)<br/>StorageDead(_267)<br/>StorageDead(_266)<br/>StorageDead(_265)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb159__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">159</td></tr><tr><td align="left" balign="left">StorageDead(_248)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb160__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">160</td></tr><tr><td align="left" balign="left">StorageDead(_230)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb161__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">161</td></tr><tr><td align="left" balign="left">StorageDead(_216)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb162__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">162</td></tr><tr><td align="left" balign="left">StorageDead(_204)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb163__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">163</td></tr><tr><td align="left" balign="left">StorageDead(_176)<br/>StorageDead(_174)<br/>StorageDead(_173)<br/>StorageDead(_172)<br/>StorageDead(_171)<br/>StorageDead(_170)<br/>StorageDead(_169)<br/>StorageDead(_166)<br/>StorageDead(_164)<br/>StorageDead(_163)<br/>StorageDead(_162)<br/>StorageDead(_160)<br/>StorageDead(_157)<br/>StorageDead(_152)<br/>StorageDead(_149)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb164__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">164</td></tr><tr><td align="left">drop(_84)</td></tr></table>>];
    bb165__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">165</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/></td></tr><tr><td align="left">switchInt(_342)</td></tr></table>>];
    bb166__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">166</td></tr><tr><td align="left" balign="left">_342 = const false<br/>StorageDead(_73)<br/>StorageDead(_69)<br/></td></tr><tr><td align="left">drop(_48)</td></tr></table>>];
    bb167__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">167</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageDead(_42)<br/>StorageDead(_41)<br/>StorageDead(_38)<br/>StorageDead(_36)<br/>StorageDead(_35)<br/>StorageDead(_33)<br/>StorageDead(_30)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb168__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">168</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/></td></tr><tr><td align="left">drop(_18)</td></tr></table>>];
    bb169__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">169</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb170__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">170</td></tr><tr><td align="left">return</td></tr></table>>];
    bb171__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">171 (cleanup)</td></tr><tr><td align="left">drop(_271)</td></tr></table>>];
    bb172__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">172 (cleanup)</td></tr><tr><td align="left">drop(_84)</td></tr></table>>];
    bb173__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">173 (cleanup)</td></tr><tr><td align="left">drop(_48)</td></tr></table>>];
    bb174__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">174 (cleanup)</td></tr><tr><td align="left">drop(_18)</td></tr></table>>];
    bb175__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">175 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb176__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">176</td></tr><tr><td align="left">drop(_73)</td></tr></table>>];
    bb177__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">177 (cleanup)</td></tr><tr><td align="left" balign="left">_359 = discriminant(_272)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb178__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">178 (cleanup)</td></tr><tr><td align="left" balign="left">_360 = discriminant(_85)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb179__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">179 (cleanup)</td></tr><tr><td align="left">drop(_73)</td></tr></table>>];
    bb180__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">180 (cleanup)</td></tr><tr><td align="left">switchInt(_342)</td></tr></table>>];
    bb181__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">181 (cleanup)</td></tr><tr><td align="left" balign="left">_361 = discriminant(_74)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb182__0_526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">182 (cleanup)</td></tr><tr><td align="left" balign="left">_362 = discriminant(_49)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_526 -> bb1__0_526 [label="return"];
    bb1__0_526 -> bb2__0_526 [label="return"];
    bb2__0_526 -> bb3__0_526 [label="return"];
    bb2__0_526 -> bb174__0_526 [label="unwind"];
    bb3__0_526 -> bb4__0_526 [label="return"];
    bb3__0_526 -> bb174__0_526 [label="unwind"];
    bb4__0_526 -> bb5__0_526 [label="0"];
    bb4__0_526 -> bb7__0_526 [label="1"];
    bb4__0_526 -> bb6__0_526 [label="otherwise"];
    bb5__0_526 -> bb9__0_526 [label="return"];
    bb5__0_526 -> bb174__0_526 [label="unwind"];
    bb7__0_526 -> bb8__0_526 [label="return"];
    bb7__0_526 -> bb174__0_526 [label="unwind"];
    bb8__0_526 -> bb168__0_526 [label=""];
    bb9__0_526 -> bb10__0_526 [label="return"];
    bb9__0_526 -> bb174__0_526 [label="unwind"];
    bb10__0_526 -> bb11__0_526 [label=""];
    bb11__0_526 -> bb12__0_526 [label="return"];
    bb11__0_526 -> bb174__0_526 [label="unwind"];
    bb12__0_526 -> bb14__0_526 [label="0"];
    bb12__0_526 -> bb13__0_526 [label="1"];
    bb12__0_526 -> bb6__0_526 [label="otherwise"];
    bb13__0_526 -> bb15__0_526 [label="return"];
    bb13__0_526 -> bb174__0_526 [label="unwind"];
    bb14__0_526 -> bb170__0_526 [label=""];
    bb15__0_526 -> bb17__0_526 [label="0"];
    bb15__0_526 -> bb16__0_526 [label="otherwise"];
    bb16__0_526 -> bb156__0_526 [label=""];
    bb17__0_526 -> bb18__0_526 [label="return"];
    bb17__0_526 -> bb174__0_526 [label="unwind"];
    bb18__0_526 -> bb19__0_526 [label="return"];
    bb18__0_526 -> bb174__0_526 [label="unwind"];
    bb19__0_526 -> bb20__0_526 [label="return"];
    bb19__0_526 -> bb174__0_526 [label="unwind"];
    bb20__0_526 -> bb21__0_526 [label="0"];
    bb20__0_526 -> bb22__0_526 [label="1"];
    bb20__0_526 -> bb6__0_526 [label="otherwise"];
    bb21__0_526 -> bb24__0_526 [label="return"];
    bb21__0_526 -> bb173__0_526 [label="unwind"];
    bb22__0_526 -> bb23__0_526 [label="return"];
    bb22__0_526 -> bb182__0_526 [label="unwind"];
    bb23__0_526 -> bb167__0_526 [label=""];
    bb24__0_526 -> bb25__0_526 [label="return"];
    bb24__0_526 -> bb173__0_526 [label="unwind"];
    bb25__0_526 -> bb27__0_526 [label="0"];
    bb25__0_526 -> bb26__0_526 [label="otherwise"];
    bb26__0_526 -> bb30__0_526 [label=""];
    bb27__0_526 -> bb28__0_526 [label="return"];
    bb27__0_526 -> bb173__0_526 [label="unwind"];
    bb28__0_526 -> bb29__0_526 [label="return"];
    bb28__0_526 -> bb173__0_526 [label="unwind"];
    bb29__0_526 -> bb31__0_526 [label="0"];
    bb29__0_526 -> bb30__0_526 [label="otherwise"];
    bb30__0_526 -> bb154__0_526 [label=""];
    bb31__0_526 -> bb32__0_526 [label="return"];
    bb31__0_526 -> bb173__0_526 [label="unwind"];
    bb32__0_526 -> bb33__0_526 [label="return"];
    bb32__0_526 -> bb173__0_526 [label="unwind"];
    bb33__0_526 -> bb34__0_526 [label="return"];
    bb33__0_526 -> bb173__0_526 [label="unwind"];
    bb34__0_526 -> bb35__0_526 [label="return"];
    bb34__0_526 -> bb173__0_526 [label="unwind"];
    bb35__0_526 -> bb36__0_526 [label="0"];
    bb35__0_526 -> bb37__0_526 [label="1"];
    bb35__0_526 -> bb6__0_526 [label="otherwise"];
    bb36__0_526 -> bb39__0_526 [label="return"];
    bb36__0_526 -> bb180__0_526 [label="unwind"];
    bb37__0_526 -> bb38__0_526 [label="return"];
    bb37__0_526 -> bb181__0_526 [label="unwind"];
    bb38__0_526 -> bb166__0_526 [label=""];
    bb39__0_526 -> bb40__0_526 [label="return"];
    bb39__0_526 -> bb180__0_526 [label="unwind"];
    bb40__0_526 -> bb41__0_526 [label="return"];
    bb40__0_526 -> bb180__0_526 [label="unwind"];
    bb41__0_526 -> bb42__0_526 [label="return"];
    bb41__0_526 -> bb180__0_526 [label="unwind"];
    bb42__0_526 -> bb43__0_526 [label="return"];
    bb42__0_526 -> bb180__0_526 [label="unwind"];
    bb43__0_526 -> bb44__0_526 [label="return"];
    bb43__0_526 -> bb180__0_526 [label="unwind"];
    bb44__0_526 -> bb45__0_526 [label="return"];
    bb44__0_526 -> bb180__0_526 [label="unwind"];
    bb45__0_526 -> bb46__0_526 [label="return"];
    bb45__0_526 -> bb180__0_526 [label="unwind"];
    bb46__0_526 -> bb47__0_526 [label="return"];
    bb46__0_526 -> bb180__0_526 [label="unwind"];
    bb47__0_526 -> bb48__0_526 [label="0"];
    bb47__0_526 -> bb49__0_526 [label="1"];
    bb47__0_526 -> bb6__0_526 [label="otherwise"];
    bb48__0_526 -> bb51__0_526 [label="return"];
    bb48__0_526 -> bb172__0_526 [label="unwind"];
    bb49__0_526 -> bb50__0_526 [label="return"];
    bb49__0_526 -> bb178__0_526 [label="unwind"];
    bb50__0_526 -> bb165__0_526 [label=""];
    bb51__0_526 -> bb53__0_526 [label="0"];
    bb51__0_526 -> bb52__0_526 [label="otherwise"];
    bb52__0_526 -> bb152__0_526 [label="return"];
    bb52__0_526 -> bb180__0_526 [label="unwind"];
    bb53__0_526 -> bb54__0_526 [label="return"];
    bb53__0_526 -> bb172__0_526 [label="unwind"];
    bb54__0_526 -> bb55__0_526 [label="return"];
    bb54__0_526 -> bb172__0_526 [label="unwind"];
    bb55__0_526 -> bb56__0_526 [label="return"];
    bb55__0_526 -> bb172__0_526 [label="unwind"];
    bb56__0_526 -> bb57__0_526 [label="return"];
    bb56__0_526 -> bb172__0_526 [label="unwind"];
    bb57__0_526 -> bb58__0_526 [label="return"];
    bb57__0_526 -> bb172__0_526 [label="unwind"];
    bb58__0_526 -> bb59__0_526 [label="return"];
    bb58__0_526 -> bb172__0_526 [label="unwind"];
    bb59__0_526 -> bb60__0_526 [label="0"];
    bb59__0_526 -> bb61__0_526 [label="1"];
    bb59__0_526 -> bb6__0_526 [label="otherwise"];
    bb60__0_526 -> bb63__0_526 [label="return"];
    bb60__0_526 -> bb172__0_526 [label="unwind"];
    bb61__0_526 -> bb62__0_526 [label="return"];
    bb61__0_526 -> bb172__0_526 [label="unwind"];
    bb62__0_526 -> bb164__0_526 [label=""];
    bb63__0_526 -> bb64__0_526 [label="return"];
    bb63__0_526 -> bb172__0_526 [label="unwind"];
    bb64__0_526 -> bb65__0_526 [label="return"];
    bb64__0_526 -> bb172__0_526 [label="unwind"];
    bb65__0_526 -> bb66__0_526 [label="return"];
    bb65__0_526 -> bb172__0_526 [label="unwind"];
    bb66__0_526 -> bb67__0_526 [label="return"];
    bb66__0_526 -> bb172__0_526 [label="unwind"];
    bb67__0_526 -> bb68__0_526 [label="return"];
    bb67__0_526 -> bb172__0_526 [label="unwind"];
    bb68__0_526 -> bb69__0_526 [label=""];
    bb69__0_526 -> bb70__0_526 [label="return"];
    bb69__0_526 -> bb172__0_526 [label="unwind"];
    bb70__0_526 -> bb72__0_526 [label="0"];
    bb70__0_526 -> bb71__0_526 [label="1"];
    bb70__0_526 -> bb6__0_526 [label="otherwise"];
    bb71__0_526 -> bb73__0_526 [label="return"];
    bb71__0_526 -> bb172__0_526 [label="unwind"];
    bb72__0_526 -> bb150__0_526 [label="return"];
    bb72__0_526 -> bb180__0_526 [label="unwind"];
    bb73__0_526 -> bb74__0_526 [label="success"];
    bb73__0_526 -> bb172__0_526 [label="unwind"];
    bb74__0_526 -> bb75__0_526 [label="return"];
    bb74__0_526 -> bb172__0_526 [label="unwind"];
    bb75__0_526 -> bb76__0_526 [label="return"];
    bb75__0_526 -> bb172__0_526 [label="unwind"];
    bb76__0_526 -> bb77__0_526 [label="0"];
    bb76__0_526 -> bb78__0_526 [label="1"];
    bb76__0_526 -> bb6__0_526 [label="otherwise"];
    bb77__0_526 -> bb81__0_526 [label="0"];
    bb77__0_526 -> bb80__0_526 [label="otherwise"];
    bb78__0_526 -> bb79__0_526 [label="return"];
    bb78__0_526 -> bb172__0_526 [label="unwind"];
    bb79__0_526 -> bb163__0_526 [label=""];
    bb80__0_526 -> bb82__0_526 [label="return"];
    bb80__0_526 -> bb172__0_526 [label="unwind"];
    bb81__0_526 -> bb149__0_526 [label=""];
    bb82__0_526 -> bb84__0_526 [label="0"];
    bb82__0_526 -> bb83__0_526 [label="otherwise"];
    bb83__0_526 -> bb86__0_526 [label="1"];
    bb83__0_526 -> bb85__0_526 [label="otherwise"];
    bb84__0_526 -> bb149__0_526 [label=""];
    bb85__0_526 -> bb89__0_526 [label=""];
    bb86__0_526 -> bb88__0_526 [label="0"];
    bb86__0_526 -> bb87__0_526 [label="otherwise"];
    bb87__0_526 -> bb149__0_526 [label=""];
    bb88__0_526 -> bb89__0_526 [label=""];
    bb89__0_526 -> bb90__0_526 [label="return"];
    bb89__0_526 -> bb172__0_526 [label="unwind"];
    bb90__0_526 -> bb91__0_526 [label="return"];
    bb90__0_526 -> bb172__0_526 [label="unwind"];
    bb91__0_526 -> bb92__0_526 [label="0"];
    bb91__0_526 -> bb93__0_526 [label="1"];
    bb91__0_526 -> bb6__0_526 [label="otherwise"];
    bb92__0_526 -> bb95__0_526 [label="return"];
    bb92__0_526 -> bb172__0_526 [label="unwind"];
    bb93__0_526 -> bb94__0_526 [label="return"];
    bb93__0_526 -> bb172__0_526 [label="unwind"];
    bb94__0_526 -> bb162__0_526 [label=""];
    bb95__0_526 -> bb96__0_526 [label="return"];
    bb95__0_526 -> bb172__0_526 [label="unwind"];
    bb96__0_526 -> bb97__0_526 [label="return"];
    bb96__0_526 -> bb172__0_526 [label="unwind"];
    bb97__0_526 -> bb98__0_526 [label="0"];
    bb97__0_526 -> bb99__0_526 [label="1"];
    bb97__0_526 -> bb6__0_526 [label="otherwise"];
    bb98__0_526 -> bb101__0_526 [label="return"];
    bb98__0_526 -> bb172__0_526 [label="unwind"];
    bb99__0_526 -> bb100__0_526 [label="return"];
    bb99__0_526 -> bb172__0_526 [label="unwind"];
    bb100__0_526 -> bb161__0_526 [label=""];
    bb101__0_526 -> bb102__0_526 [label="return"];
    bb101__0_526 -> bb172__0_526 [label="unwind"];
    bb102__0_526 -> bb103__0_526 [label="success"];
    bb102__0_526 -> bb172__0_526 [label="unwind"];
    bb103__0_526 -> bb104__0_526 [label="return"];
    bb103__0_526 -> bb172__0_526 [label="unwind"];
    bb104__0_526 -> bb105__0_526 [label="return"];
    bb104__0_526 -> bb172__0_526 [label="unwind"];
    bb105__0_526 -> bb106__0_526 [label="0"];
    bb105__0_526 -> bb107__0_526 [label="1"];
    bb105__0_526 -> bb6__0_526 [label="otherwise"];
    bb106__0_526 -> bb109__0_526 [label="return"];
    bb106__0_526 -> bb172__0_526 [label="unwind"];
    bb107__0_526 -> bb108__0_526 [label="return"];
    bb107__0_526 -> bb172__0_526 [label="unwind"];
    bb108__0_526 -> bb160__0_526 [label=""];
    bb109__0_526 -> bb110__0_526 [label="success"];
    bb109__0_526 -> bb172__0_526 [label="unwind"];
    bb110__0_526 -> bb111__0_526 [label="return"];
    bb110__0_526 -> bb172__0_526 [label="unwind"];
    bb111__0_526 -> bb112__0_526 [label="return"];
    bb111__0_526 -> bb172__0_526 [label="unwind"];
    bb112__0_526 -> bb113__0_526 [label="0"];
    bb112__0_526 -> bb114__0_526 [label="1"];
    bb112__0_526 -> bb6__0_526 [label="otherwise"];
    bb113__0_526 -> bb116__0_526 [label="0"];
    bb113__0_526 -> bb118__0_526 [label="otherwise"];
    bb114__0_526 -> bb115__0_526 [label="return"];
    bb114__0_526 -> bb172__0_526 [label="unwind"];
    bb115__0_526 -> bb159__0_526 [label=""];
    bb116__0_526 -> bb117__0_526 [label="0"];
    bb116__0_526 -> bb118__0_526 [label="otherwise"];
    bb117__0_526 -> bb119__0_526 [label="0"];
    bb117__0_526 -> bb118__0_526 [label="otherwise"];
    bb118__0_526 -> bb120__0_526 [label="return"];
    bb118__0_526 -> bb172__0_526 [label="unwind"];
    bb119__0_526 -> bb148__0_526 [label="return"];
    bb119__0_526 -> bb172__0_526 [label="unwind"];
    bb120__0_526 -> bb121__0_526 [label="success"];
    bb120__0_526 -> bb172__0_526 [label="unwind"];
    bb121__0_526 -> bb122__0_526 [label="return"];
    bb121__0_526 -> bb172__0_526 [label="unwind"];
    bb122__0_526 -> bb123__0_526 [label="return"];
    bb122__0_526 -> bb172__0_526 [label="unwind"];
    bb123__0_526 -> bb124__0_526 [label="0"];
    bb123__0_526 -> bb125__0_526 [label="1"];
    bb123__0_526 -> bb6__0_526 [label="otherwise"];
    bb124__0_526 -> bb127__0_526 [label="return"];
    bb124__0_526 -> bb171__0_526 [label="unwind"];
    bb125__0_526 -> bb126__0_526 [label="return"];
    bb125__0_526 -> bb177__0_526 [label="unwind"];
    bb126__0_526 -> bb158__0_526 [label=""];
    bb127__0_526 -> bb128__0_526 [label="return"];
    bb127__0_526 -> bb171__0_526 [label="unwind"];
    bb128__0_526 -> bb129__0_526 [label="return"];
    bb128__0_526 -> bb171__0_526 [label="unwind"];
    bb129__0_526 -> bb130__0_526 [label="return"];
    bb129__0_526 -> bb171__0_526 [label="unwind"];
    bb130__0_526 -> bb131__0_526 [label="return"];
    bb130__0_526 -> bb171__0_526 [label="unwind"];
    bb131__0_526 -> bb132__0_526 [label="0"];
    bb131__0_526 -> bb133__0_526 [label="1"];
    bb131__0_526 -> bb6__0_526 [label="otherwise"];
    bb132__0_526 -> bb135__0_526 [label="return"];
    bb132__0_526 -> bb172__0_526 [label="unwind"];
    bb133__0_526 -> bb134__0_526 [label="return"];
    bb133__0_526 -> bb171__0_526 [label="unwind"];
    bb134__0_526 -> bb157__0_526 [label="return"];
    bb134__0_526 -> bb172__0_526 [label="unwind"];
    bb135__0_526 -> bb137__0_526 [label="0"];
    bb135__0_526 -> bb136__0_526 [label="otherwise"];
    bb136__0_526 -> bb141__0_526 [label=""];
    bb137__0_526 -> bb139__0_526 [label="0"];
    bb137__0_526 -> bb138__0_526 [label="otherwise"];
    bb138__0_526 -> bb140__0_526 [label=""];
    bb139__0_526 -> bb140__0_526 [label=""];
    bb140__0_526 -> bb141__0_526 [label=""];
    bb141__0_526 -> bb142__0_526 [label="return"];
    bb141__0_526 -> bb172__0_526 [label="unwind"];
    bb142__0_526 -> bb143__0_526 [label="return"];
    bb142__0_526 -> bb172__0_526 [label="unwind"];
    bb143__0_526 -> bb144__0_526 [label="return"];
    bb143__0_526 -> bb172__0_526 [label="unwind"];
    bb144__0_526 -> bb145__0_526 [label="0"];
    bb144__0_526 -> bb146__0_526 [label="1"];
    bb144__0_526 -> bb6__0_526 [label="otherwise"];
    bb145__0_526 -> bb149__0_526 [label=""];
    bb146__0_526 -> bb147__0_526 [label="return"];
    bb146__0_526 -> bb172__0_526 [label="unwind"];
    bb147__0_526 -> bb158__0_526 [label=""];
    bb148__0_526 -> bb69__0_526 [label=""];
    bb149__0_526 -> bb69__0_526 [label=""];
    bb150__0_526 -> bb151__0_526 [label="return"];
    bb150__0_526 -> bb174__0_526 [label="unwind"];
    bb151__0_526 -> bb11__0_526 [label=""];
    bb152__0_526 -> bb153__0_526 [label="return"];
    bb152__0_526 -> bb173__0_526 [label="unwind"];
    bb153__0_526 -> bb154__0_526 [label=""];
    bb154__0_526 -> bb155__0_526 [label="return"];
    bb154__0_526 -> bb174__0_526 [label="unwind"];
    bb155__0_526 -> bb156__0_526 [label=""];
    bb156__0_526 -> bb11__0_526 [label=""];
    bb157__0_526 -> bb158__0_526 [label=""];
    bb158__0_526 -> bb159__0_526 [label=""];
    bb159__0_526 -> bb160__0_526 [label=""];
    bb160__0_526 -> bb161__0_526 [label=""];
    bb161__0_526 -> bb162__0_526 [label=""];
    bb162__0_526 -> bb163__0_526 [label=""];
    bb163__0_526 -> bb164__0_526 [label=""];
    bb164__0_526 -> bb165__0_526 [label="return"];
    bb164__0_526 -> bb180__0_526 [label="unwind"];
    bb165__0_526 -> bb166__0_526 [label="0"];
    bb165__0_526 -> bb176__0_526 [label="otherwise"];
    bb166__0_526 -> bb167__0_526 [label="return"];
    bb166__0_526 -> bb174__0_526 [label="unwind"];
    bb167__0_526 -> bb168__0_526 [label=""];
    bb168__0_526 -> bb169__0_526 [label="return"];
    bb168__0_526 -> bb175__0_526 [label="unwind"];
    bb169__0_526 -> bb170__0_526 [label=""];
    bb171__0_526 -> bb172__0_526 [label="return"];
    bb172__0_526 -> bb180__0_526 [label="return"];
    bb173__0_526 -> bb174__0_526 [label="return"];
    bb174__0_526 -> bb175__0_526 [label="return"];
    bb176__0_526 -> bb166__0_526 [label="return"];
    bb176__0_526 -> bb173__0_526 [label="unwind"];
    bb177__0_526 -> bb172__0_526 [label=""];
    bb178__0_526 -> bb180__0_526 [label=""];
    bb179__0_526 -> bb173__0_526 [label="return"];
    bb180__0_526 -> bb173__0_526 [label="0"];
    bb180__0_526 -> bb179__0_526 [label="otherwise"];
    bb181__0_526 -> bb173__0_526 [label=""];
    bb182__0_526 -> bb174__0_526 [label=""];
}
