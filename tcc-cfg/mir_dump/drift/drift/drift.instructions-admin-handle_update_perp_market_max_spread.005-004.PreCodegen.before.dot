digraph Mir_0_5623 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn admin::handle_update_perp_market_max_spread(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::admin::AdminUpdatePerpMarket&lt;ReErased&gt;&gt;, _2: u32) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _5: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _6: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _7: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _8: isize;<br align="left"/>let _9: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _10: !;<br align="left"/>let mut _11: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _12: ();<br align="left"/>let _13: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _14: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _15: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _16: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _17: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _18: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _19: Closure(DefId(0:5624 ~ drift[d311]::instructions::admin::handle_update_perp_market_max_spread::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _20: isize;<br align="left"/>let _21: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _22: !;<br align="left"/>let mut _23: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _24: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _25: ();<br align="left"/>let mut _26: &amp;ReErased str;<br align="left"/>let _27: &amp;ReErased str;<br align="left"/>let mut _28: &amp;ReErased std::string::String;<br align="left"/>let _29: &amp;ReErased std::string::String;<br align="left"/>let _30: std::string::String;<br align="left"/>let _31: std::string::String;<br align="left"/>let mut _32: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _33: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _34: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _35: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _36: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _37: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _38: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _39: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _40: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _41: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _42: &amp;ReErased u16;<br align="left"/>let _43: &amp;ReErased u16;<br align="left"/>let _44: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _45: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _46: ();<br align="left"/>let mut _47: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _48: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _49: bool;<br align="left"/>let mut _50: u32;<br align="left"/>let mut _51: u32;<br align="left"/>let mut _52: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _53: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _54: ();<br align="left"/>let _55: error::ErrorCode;<br align="left"/>let _56: ();<br align="left"/>let mut _57: &amp;ReErased str;<br align="left"/>let _58: &amp;ReErased str;<br align="left"/>let mut _59: &amp;ReErased std::string::String;<br align="left"/>let _60: &amp;ReErased std::string::String;<br align="left"/>let _61: std::string::String;<br align="left"/>let _62: std::string::String;<br align="left"/>let mut _63: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _64: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _65: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _66: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _67: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _68: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _69: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _70: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _71: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _72: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _73: &amp;ReErased error::ErrorCode;<br align="left"/>let _74: &amp;ReErased error::ErrorCode;<br align="left"/>let _75: ();<br align="left"/>let mut _76: &amp;ReErased str;<br align="left"/>let _77: &amp;ReErased str;<br align="left"/>let mut _78: &amp;ReErased std::string::String;<br align="left"/>let _79: &amp;ReErased std::string::String;<br align="left"/>let _80: std::string::String;<br align="left"/>let _81: std::string::String;<br align="left"/>let mut _82: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _83: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _84: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _85: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _86: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _87: error::ErrorCode;<br align="left"/>let mut _88: isize;<br align="left"/>let _89: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _90: !;<br align="left"/>let mut _91: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _92: ();<br align="left"/>let _93: ();<br align="left"/>let mut _94: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _95: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _96: bool;<br align="left"/>let mut _97: u32;<br align="left"/>let mut _98: u32;<br align="left"/>let mut _99: u32;<br align="left"/>let mut _100: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _101: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _102: (u32, bool);<br align="left"/>let mut _103: ();<br align="left"/>let _104: error::ErrorCode;<br align="left"/>let _105: ();<br align="left"/>let mut _106: &amp;ReErased str;<br align="left"/>let _107: &amp;ReErased str;<br align="left"/>let mut _108: &amp;ReErased std::string::String;<br align="left"/>let _109: &amp;ReErased std::string::String;<br align="left"/>let _110: std::string::String;<br align="left"/>let _111: std::string::String;<br align="left"/>let mut _112: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _113: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _114: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _115: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _116: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _117: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _118: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _119: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _120: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _121: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _122: &amp;ReErased error::ErrorCode;<br align="left"/>let _123: &amp;ReErased error::ErrorCode;<br align="left"/>let _124: ();<br align="left"/>let mut _125: &amp;ReErased str;<br align="left"/>let _126: &amp;ReErased str;<br align="left"/>let mut _127: &amp;ReErased std::string::String;<br align="left"/>let _128: &amp;ReErased std::string::String;<br align="left"/>let _129: std::string::String;<br align="left"/>let _130: std::string::String;<br align="left"/>let mut _131: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _132: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _133: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _134: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _135: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _136: error::ErrorCode;<br align="left"/>let mut _137: isize;<br align="left"/>let _138: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _139: !;<br align="left"/>let mut _140: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _141: ();<br align="left"/>let _142: ();<br align="left"/>let mut _143: &amp;ReErased str;<br align="left"/>let _144: &amp;ReErased str;<br align="left"/>let mut _145: &amp;ReErased std::string::String;<br align="left"/>let _146: &amp;ReErased std::string::String;<br align="left"/>let _147: std::string::String;<br align="left"/>let _148: std::string::String;<br align="left"/>let mut _149: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _150: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _151: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _152: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _153: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _154: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _155: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _156: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _157: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _158: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _159: &amp;ReErased u32;<br align="left"/>let _160: &amp;ReErased u32;<br align="left"/>let _161: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _162: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _163: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _164: &amp;ReErased u32;<br align="left"/>let _165: &amp;ReErased u32;<br align="left"/>let mut _166: u32;<br align="left"/>let mut _167: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _168: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _169: ();<br align="left"/>let mut _170: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _171: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _172: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _173: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _174: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _175: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _176: &amp;ReErased mut instructions::admin::AdminUpdatePerpMarket&lt;ReErased&gt;;<br align="left"/>let mut _177: &amp;ReErased mut instructions::admin::AdminUpdatePerpMarket&lt;ReErased&gt;;<br align="left"/>let mut _178: isize;<br align="left"/>let mut _179: isize;<br align="left"/>let mut _180: isize;<br align="left"/>let mut _181: isize;<br align="left"/>let mut _182: isize;<br align="left"/>let mut _183: isize;<br align="left"/>let mut _184: isize;<br align="left"/>let mut _185: isize;<br align="left"/>let mut _186: isize;<br align="left"/>let mut _187: isize;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug max_spread =&gt; _2;<br align="left"/>debug residual =&gt; _9;<br align="left"/>debug val =&gt; _12;<br align="left"/>debug perp_market =&gt; _13;<br align="left"/>debug residual =&gt; _21;<br align="left"/>debug val =&gt; _24;<br align="left"/>debug res =&gt; _31;<br align="left"/>debug error_code =&gt; _55;<br align="left"/>debug res =&gt; _62;<br align="left"/>debug res =&gt; _81;<br align="left"/>debug residual =&gt; _89;<br align="left"/>debug val =&gt; _92;<br align="left"/>debug error_code =&gt; _104;<br align="left"/>debug res =&gt; _111;<br align="left"/>debug res =&gt; _130;<br align="left"/>debug residual =&gt; _138;<br align="left"/>debug val =&gt; _141;<br align="left"/>debug res =&gt; _148;<br align="left"/>>;
    bb0__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_176 = deref_copy (_1.1: &amp;mut instructions::admin::AdminUpdatePerpMarket&lt;'_&gt;)<br/>_7 = &amp;((*_176).2: anchor_lang::prelude::AccountLoader&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_6 = &amp;(*_7)<br/></td></tr><tr><td align="left">_5 = constraints::perp_market_valid(move _6)</td></tr></table>>];
    bb1__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb2__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_8 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb3__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_4 as Continue).0: ())<br/>_3 = _12<br/>StorageDead(_12)<br/>_178 = discriminant(_4)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_177 = deref_copy (_1.1: &amp;mut instructions::admin::AdminUpdatePerpMarket&lt;'_&gt;)<br/>_18 = &amp;((*_177).2: anchor_lang::prelude::AccountLoader&lt;'_, state::perp_market::PerpMarket&gt;)<br/></td></tr><tr><td align="left">_17 = anchor_lang::prelude::AccountLoader::&lt;'_, PerpMarket&gt;::load_mut(move _18)</td></tr></table>>];
    bb4__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>_9 = move ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_11)<br/>_11 = move _9<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _11)</td></tr></table>>];
    bb6__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_9)<br/>_184 = discriminant(_4)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageLive(_19)<br/>_19 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_16 = std::result::Result::&lt;RefMut&lt;'_, PerpMarket&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _17, move _19)</td></tr></table>>];
    bb8__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">_15 = &lt;std::result::Result&lt;RefMut&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _16)</td></tr></table>>];
    bb9__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>_20 = discriminant(_15)<br/></td></tr><tr><td align="left">switchInt(move _20)</td></tr></table>>];
    bb10__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_24)<br/>_24 = move ((_15 as Continue).0: std::cell::RefMut&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_14 = move _24<br/>StorageDead(_24)<br/>_13 = &amp;mut _14<br/>_182 = discriminant(_15)<br/>StorageDead(_15)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>_175 = const _<br/>_35 = &amp;(*_175)<br/>_34 = &amp;(*_35)<br/>_33 = move _34 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_34)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>_45 = &amp;(*_13)<br/></td></tr><tr><td align="left">_44 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _45)</td></tr></table>>];
    bb11__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = ((_15 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_23)<br/>_23 = _21<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _23)</td></tr></table>>];
    bb12__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_21)<br/>_180 = discriminant(_15)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>_43 = &amp;((*_44).21: u16)<br/>_42 = &amp;(*_43)<br/></td></tr><tr><td align="left">_41 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _42)</td></tr></table>>];
    bb14__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>_40 = [move _41]<br/>StorageDead(_41)<br/>_39 = &amp;_40<br/>_38 = &amp;(*_39)<br/>_37 = move _38 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">_32 = Arguments::&lt;'_&gt;::new_v1(move _33, move _37)</td></tr></table>>];
    bb15__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">_31 = format(move _32)</td></tr></table>>];
    bb16__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_44)<br/>StorageDead(_43)<br/>StorageDead(_40)<br/>StorageDead(_39)<br/>StorageDead(_35)<br/>_30 = move _31<br/>StorageDead(_31)<br/>_29 = &amp;_30<br/>_28 = &amp;(*_29)<br/></td></tr><tr><td align="left">_27 = &lt;String as Deref&gt;::deref(move _28)</td></tr></table>>];
    bb17__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">_26 = &amp;(*_27)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">_25 = solana_program::log::sol_log(move _26)</td></tr></table>>];
    bb18__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/></td></tr><tr><td align="left">drop(_30)</td></tr></table>>];
    bb19__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_29)<br/>StorageDead(_27)<br/>StorageDead(_25)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>_50 = _2<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>_53 = &amp;(*_13)<br/></td></tr><tr><td align="left">_52 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _53)</td></tr></table>>];
    bb20__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>_51 = (((*_52).1: state::perp_market::AMM).63: u32)<br/>_49 = Ge(move _50, move _51)<br/></td></tr><tr><td align="left">switchInt(move _49)</td></tr></table>>];
    bb21__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_51)<br/>StorageDead(_50)<br/>StorageLive(_54)<br/>_54 = ()<br/>_48 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _54)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_51)<br/>StorageDead(_50)<br/>StorageLive(_55)<br/>_55 = error::ErrorCode::DefaultError<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>_174 = const _<br/>_66 = &amp;(*_174)<br/>_65 = &amp;(*_66)<br/>_64 = move _65 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_65)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>_74 = &amp;_55<br/>_73 = &amp;(*_74)<br/></td></tr><tr><td align="left">_72 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _73)</td></tr></table>>];
    bb23__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>_71 = [move _72]<br/>StorageDead(_72)<br/>_70 = &amp;_71<br/>_69 = &amp;(*_70)<br/>_68 = move _69 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_69)<br/></td></tr><tr><td align="left">_63 = Arguments::&lt;'_&gt;::new_v1(move _64, move _68)</td></tr></table>>];
    bb24__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>StorageDead(_64)<br/></td></tr><tr><td align="left">_62 = format(move _63)</td></tr></table>>];
    bb25__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_74)<br/>StorageDead(_71)<br/>StorageDead(_70)<br/>StorageDead(_66)<br/>_61 = move _62<br/>StorageDead(_62)<br/>_60 = &amp;_61<br/>_59 = &amp;(*_60)<br/></td></tr><tr><td align="left">_58 = &lt;String as Deref&gt;::deref(move _59)</td></tr></table>>];
    bb26__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">_57 = &amp;(*_58)<br/>StorageDead(_59)<br/></td></tr><tr><td align="left">_56 = solana_program::log::sol_log(move _57)</td></tr></table>>];
    bb27__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/></td></tr><tr><td align="left">drop(_61)</td></tr></table>>];
    bb28__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_60)<br/>StorageDead(_58)<br/>StorageDead(_56)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>_173 = const _<br/>_85 = &amp;(*_173)<br/>_84 = &amp;(*_85)<br/>_83 = move _84 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_84)<br/></td></tr><tr><td align="left">_82 = Arguments::&lt;'_&gt;::new_const(move _83)</td></tr></table>>];
    bb29__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/></td></tr><tr><td align="left">_81 = format(move _82)</td></tr></table>>];
    bb30__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>StorageDead(_85)<br/>_80 = move _81<br/>StorageDead(_81)<br/>_79 = &amp;_80<br/>_78 = &amp;(*_79)<br/></td></tr><tr><td align="left">_77 = &lt;String as Deref&gt;::deref(move _78)</td></tr></table>>];
    bb31__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">_76 = &amp;(*_77)<br/>StorageDead(_78)<br/></td></tr><tr><td align="left">_75 = solana_program::log::sol_log(move _76)</td></tr></table>>];
    bb32__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/></td></tr><tr><td align="left">drop(_80)</td></tr></table>>];
    bb33__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>StorageDead(_79)<br/>StorageDead(_77)<br/>StorageDead(_75)<br/>StorageLive(_87)<br/>_87 = _55<br/>_48 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _87)<br/>StorageDead(_87)<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/></td></tr><tr><td align="left">_47 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _48)</td></tr></table>>];
    bb35__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>_88 = discriminant(_47)<br/></td></tr><tr><td align="left">switchInt(move _88)</td></tr></table>>];
    bb36__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageLive(_92)<br/>_92 = ((_47 as Continue).0: ())<br/>_46 = _92<br/>StorageDead(_92)<br/>StorageDead(_47)<br/>StorageDead(_46)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>_97 = _2<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>_101 = &amp;(*_13)<br/></td></tr><tr><td align="left">_100 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _101)</td></tr></table>>];
    bb37__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_89)<br/>_89 = ((_47 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_91)<br/>_91 = _89<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _91)</td></tr></table>>];
    bb38__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/>StorageDead(_89)<br/>StorageDead(_47)<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/>_99 = ((*_100).15: u32)<br/>_102 = CheckedMul(_99, const 100_u32)<br/></td></tr><tr><td align="left">assert(!move (_102.1: bool), &quot;attempt to compute `{} * {}`, which would overflow&quot;, move _99, const 100_u32)</td></tr></table>>];
    bb40__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">_98 = move (_102.0: u32)<br/>StorageDead(_99)<br/>_96 = Le(move _97, move _98)<br/></td></tr><tr><td align="left">switchInt(move _96)</td></tr></table>>];
    bb41__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>StorageDead(_98)<br/>StorageDead(_97)<br/>StorageLive(_103)<br/>_103 = ()<br/>_95 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _103)<br/>StorageDead(_103)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>StorageDead(_98)<br/>StorageDead(_97)<br/>StorageLive(_104)<br/>_104 = error::ErrorCode::DefaultError<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>_172 = const _<br/>_115 = &amp;(*_172)<br/>_114 = &amp;(*_115)<br/>_113 = move _114 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_114)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>_123 = &amp;_104<br/>_122 = &amp;(*_123)<br/></td></tr><tr><td align="left">_121 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _122)</td></tr></table>>];
    bb43__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/>_120 = [move _121]<br/>StorageDead(_121)<br/>_119 = &amp;_120<br/>_118 = &amp;(*_119)<br/>_117 = move _118 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_118)<br/></td></tr><tr><td align="left">_112 = Arguments::&lt;'_&gt;::new_v1(move _113, move _117)</td></tr></table>>];
    bb44__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/>StorageDead(_113)<br/></td></tr><tr><td align="left">_111 = format(move _112)</td></tr></table>>];
    bb45__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>StorageDead(_123)<br/>StorageDead(_120)<br/>StorageDead(_119)<br/>StorageDead(_115)<br/>_110 = move _111<br/>StorageDead(_111)<br/>_109 = &amp;_110<br/>_108 = &amp;(*_109)<br/></td></tr><tr><td align="left">_107 = &lt;String as Deref&gt;::deref(move _108)</td></tr></table>>];
    bb46__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">_106 = &amp;(*_107)<br/>StorageDead(_108)<br/></td></tr><tr><td align="left">_105 = solana_program::log::sol_log(move _106)</td></tr></table>>];
    bb47__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/></td></tr><tr><td align="left">drop(_110)</td></tr></table>>];
    bb48__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/>StorageDead(_109)<br/>StorageDead(_107)<br/>StorageDead(_105)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>_171 = const _<br/>_134 = &amp;(*_171)<br/>_133 = &amp;(*_134)<br/>_132 = move _133 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_133)<br/></td></tr><tr><td align="left">_131 = Arguments::&lt;'_&gt;::new_const(move _132)</td></tr></table>>];
    bb49__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_132)<br/></td></tr><tr><td align="left">_130 = format(move _131)</td></tr></table>>];
    bb50__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_131)<br/>StorageDead(_134)<br/>_129 = move _130<br/>StorageDead(_130)<br/>_128 = &amp;_129<br/>_127 = &amp;(*_128)<br/></td></tr><tr><td align="left">_126 = &lt;String as Deref&gt;::deref(move _127)</td></tr></table>>];
    bb51__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">_125 = &amp;(*_126)<br/>StorageDead(_127)<br/></td></tr><tr><td align="left">_124 = solana_program::log::sol_log(move _125)</td></tr></table>>];
    bb52__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/></td></tr><tr><td align="left">drop(_129)</td></tr></table>>];
    bb53__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_129)<br/>StorageDead(_128)<br/>StorageDead(_126)<br/>StorageDead(_124)<br/>StorageLive(_136)<br/>_136 = _104<br/>_95 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _136)<br/>StorageDead(_136)<br/>StorageDead(_104)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/></td></tr><tr><td align="left">_94 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _95)</td></tr></table>>];
    bb55__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/>_137 = discriminant(_94)<br/></td></tr><tr><td align="left">switchInt(move _137)</td></tr></table>>];
    bb56__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageLive(_141)<br/>_141 = ((_94 as Continue).0: ())<br/>_93 = _141<br/>StorageDead(_141)<br/>StorageDead(_94)<br/>StorageDead(_93)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>StorageLive(_152)<br/>_170 = const _<br/>_152 = &amp;(*_170)<br/>_151 = &amp;(*_152)<br/>_150 = move _151 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_151)<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>StorageLive(_161)<br/>StorageLive(_162)<br/>_162 = &amp;(*_13)<br/></td></tr><tr><td align="left">_161 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _162)</td></tr></table>>];
    bb57__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageLive(_138)<br/>_138 = ((_94 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_140)<br/>_140 = _138<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _140)</td></tr></table>>];
    bb58__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_140)<br/>StorageDead(_138)<br/>StorageDead(_94)<br/>StorageDead(_93)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_162)<br/>_160 = &amp;(((*_161).1: state::perp_market::AMM).64: u32)<br/>_159 = &amp;(*_160)<br/></td></tr><tr><td align="left">_158 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;u32&gt;(move _159)</td></tr></table>>];
    bb60__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_159)<br/>StorageLive(_163)<br/>StorageLive(_164)<br/>StorageLive(_165)<br/>_165 = &amp;_2<br/>_164 = &amp;(*_165)<br/></td></tr><tr><td align="left">_163 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;u32&gt;(move _164)</td></tr></table>>];
    bb61__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_164)<br/>_157 = [move _158, move _163]<br/>StorageDead(_163)<br/>StorageDead(_158)<br/>_156 = &amp;_157<br/>_155 = &amp;(*_156)<br/>_154 = move _155 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_155)<br/></td></tr><tr><td align="left">_149 = Arguments::&lt;'_&gt;::new_v1(move _150, move _154)</td></tr></table>>];
    bb62__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_154)<br/>StorageDead(_150)<br/></td></tr><tr><td align="left">_148 = format(move _149)</td></tr></table>>];
    bb63__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_149)<br/>StorageDead(_165)<br/>StorageDead(_161)<br/>StorageDead(_160)<br/>StorageDead(_157)<br/>StorageDead(_156)<br/>StorageDead(_152)<br/>_147 = move _148<br/>StorageDead(_148)<br/>_146 = &amp;_147<br/>_145 = &amp;(*_146)<br/></td></tr><tr><td align="left">_144 = &lt;String as Deref&gt;::deref(move _145)</td></tr></table>>];
    bb64__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">_143 = &amp;(*_144)<br/>StorageDead(_145)<br/></td></tr><tr><td align="left">_142 = solana_program::log::sol_log(move _143)</td></tr></table>>];
    bb65__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_143)<br/></td></tr><tr><td align="left">drop(_147)</td></tr></table>>];
    bb66__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_147)<br/>StorageDead(_146)<br/>StorageDead(_144)<br/>StorageDead(_142)<br/>StorageLive(_166)<br/>_166 = _2<br/>StorageLive(_167)<br/>StorageLive(_168)<br/>_168 = &amp;mut (*_13)<br/></td></tr><tr><td align="left">_167 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _168)</td></tr></table>>];
    bb67__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_168)<br/>(((*_167).1: state::perp_market::AMM).64: u32) = move _166<br/>StorageDead(_166)<br/>StorageDead(_167)<br/>StorageLive(_169)<br/>_169 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _169)<br/>StorageDead(_169)<br/></td></tr><tr><td align="left">drop(_14)</td></tr></table>>];
    bb68__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb69__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left">drop(_14)</td></tr></table>>];
    bb70__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb71__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left">return</td></tr></table>>];
    bb72__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">72 (cleanup)</td></tr><tr><td align="left">drop(_147)</td></tr></table>>];
    bb73__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">73 (cleanup)</td></tr><tr><td align="left">drop(_129)</td></tr></table>>];
    bb74__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">74 (cleanup)</td></tr><tr><td align="left">drop(_110)</td></tr></table>>];
    bb75__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">75 (cleanup)</td></tr><tr><td align="left">drop(_80)</td></tr></table>>];
    bb76__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">76 (cleanup)</td></tr><tr><td align="left">drop(_61)</td></tr></table>>];
    bb77__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">77 (cleanup)</td></tr><tr><td align="left">drop(_30)</td></tr></table>>];
    bb78__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">78 (cleanup)</td></tr><tr><td align="left">drop(_14)</td></tr></table>>];
    bb79__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">79 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb80__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">80 (cleanup)</td></tr><tr><td align="left" balign="left">_186 = discriminant(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb81__0_5623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">81 (cleanup)</td></tr><tr><td align="left" balign="left">_187 = discriminant(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_5623 -> bb1__0_5623 [label="return"];
    bb1__0_5623 -> bb2__0_5623 [label="return"];
    bb1__0_5623 -> bb79__0_5623 [label="unwind"];
    bb2__0_5623 -> bb3__0_5623 [label="0"];
    bb2__0_5623 -> bb5__0_5623 [label="1"];
    bb2__0_5623 -> bb4__0_5623 [label="otherwise"];
    bb3__0_5623 -> bb7__0_5623 [label="return"];
    bb5__0_5623 -> bb6__0_5623 [label="return"];
    bb5__0_5623 -> bb81__0_5623 [label="unwind"];
    bb6__0_5623 -> bb71__0_5623 [label=""];
    bb7__0_5623 -> bb8__0_5623 [label="return"];
    bb7__0_5623 -> bb79__0_5623 [label="unwind"];
    bb8__0_5623 -> bb9__0_5623 [label="return"];
    bb8__0_5623 -> bb79__0_5623 [label="unwind"];
    bb9__0_5623 -> bb10__0_5623 [label="0"];
    bb9__0_5623 -> bb11__0_5623 [label="1"];
    bb9__0_5623 -> bb4__0_5623 [label="otherwise"];
    bb10__0_5623 -> bb13__0_5623 [label="return"];
    bb10__0_5623 -> bb78__0_5623 [label="unwind"];
    bb11__0_5623 -> bb12__0_5623 [label="return"];
    bb11__0_5623 -> bb80__0_5623 [label="unwind"];
    bb12__0_5623 -> bb70__0_5623 [label=""];
    bb13__0_5623 -> bb14__0_5623 [label="return"];
    bb13__0_5623 -> bb78__0_5623 [label="unwind"];
    bb14__0_5623 -> bb15__0_5623 [label="return"];
    bb14__0_5623 -> bb78__0_5623 [label="unwind"];
    bb15__0_5623 -> bb16__0_5623 [label="return"];
    bb15__0_5623 -> bb78__0_5623 [label="unwind"];
    bb16__0_5623 -> bb17__0_5623 [label="return"];
    bb16__0_5623 -> bb77__0_5623 [label="unwind"];
    bb17__0_5623 -> bb18__0_5623 [label="return"];
    bb17__0_5623 -> bb77__0_5623 [label="unwind"];
    bb18__0_5623 -> bb19__0_5623 [label="return"];
    bb18__0_5623 -> bb78__0_5623 [label="unwind"];
    bb19__0_5623 -> bb20__0_5623 [label="return"];
    bb19__0_5623 -> bb78__0_5623 [label="unwind"];
    bb20__0_5623 -> bb22__0_5623 [label="0"];
    bb20__0_5623 -> bb21__0_5623 [label="otherwise"];
    bb21__0_5623 -> bb34__0_5623 [label=""];
    bb22__0_5623 -> bb23__0_5623 [label="return"];
    bb22__0_5623 -> bb78__0_5623 [label="unwind"];
    bb23__0_5623 -> bb24__0_5623 [label="return"];
    bb23__0_5623 -> bb78__0_5623 [label="unwind"];
    bb24__0_5623 -> bb25__0_5623 [label="return"];
    bb24__0_5623 -> bb78__0_5623 [label="unwind"];
    bb25__0_5623 -> bb26__0_5623 [label="return"];
    bb25__0_5623 -> bb76__0_5623 [label="unwind"];
    bb26__0_5623 -> bb27__0_5623 [label="return"];
    bb26__0_5623 -> bb76__0_5623 [label="unwind"];
    bb27__0_5623 -> bb28__0_5623 [label="return"];
    bb27__0_5623 -> bb78__0_5623 [label="unwind"];
    bb28__0_5623 -> bb29__0_5623 [label="return"];
    bb28__0_5623 -> bb78__0_5623 [label="unwind"];
    bb29__0_5623 -> bb30__0_5623 [label="return"];
    bb29__0_5623 -> bb78__0_5623 [label="unwind"];
    bb30__0_5623 -> bb31__0_5623 [label="return"];
    bb30__0_5623 -> bb75__0_5623 [label="unwind"];
    bb31__0_5623 -> bb32__0_5623 [label="return"];
    bb31__0_5623 -> bb75__0_5623 [label="unwind"];
    bb32__0_5623 -> bb33__0_5623 [label="return"];
    bb32__0_5623 -> bb78__0_5623 [label="unwind"];
    bb33__0_5623 -> bb34__0_5623 [label=""];
    bb34__0_5623 -> bb35__0_5623 [label="return"];
    bb34__0_5623 -> bb78__0_5623 [label="unwind"];
    bb35__0_5623 -> bb36__0_5623 [label="0"];
    bb35__0_5623 -> bb37__0_5623 [label="1"];
    bb35__0_5623 -> bb4__0_5623 [label="otherwise"];
    bb36__0_5623 -> bb39__0_5623 [label="return"];
    bb36__0_5623 -> bb78__0_5623 [label="unwind"];
    bb37__0_5623 -> bb38__0_5623 [label="return"];
    bb37__0_5623 -> bb78__0_5623 [label="unwind"];
    bb38__0_5623 -> bb69__0_5623 [label=""];
    bb39__0_5623 -> bb40__0_5623 [label="success"];
    bb39__0_5623 -> bb78__0_5623 [label="unwind"];
    bb40__0_5623 -> bb42__0_5623 [label="0"];
    bb40__0_5623 -> bb41__0_5623 [label="otherwise"];
    bb41__0_5623 -> bb54__0_5623 [label=""];
    bb42__0_5623 -> bb43__0_5623 [label="return"];
    bb42__0_5623 -> bb78__0_5623 [label="unwind"];
    bb43__0_5623 -> bb44__0_5623 [label="return"];
    bb43__0_5623 -> bb78__0_5623 [label="unwind"];
    bb44__0_5623 -> bb45__0_5623 [label="return"];
    bb44__0_5623 -> bb78__0_5623 [label="unwind"];
    bb45__0_5623 -> bb46__0_5623 [label="return"];
    bb45__0_5623 -> bb74__0_5623 [label="unwind"];
    bb46__0_5623 -> bb47__0_5623 [label="return"];
    bb46__0_5623 -> bb74__0_5623 [label="unwind"];
    bb47__0_5623 -> bb48__0_5623 [label="return"];
    bb47__0_5623 -> bb78__0_5623 [label="unwind"];
    bb48__0_5623 -> bb49__0_5623 [label="return"];
    bb48__0_5623 -> bb78__0_5623 [label="unwind"];
    bb49__0_5623 -> bb50__0_5623 [label="return"];
    bb49__0_5623 -> bb78__0_5623 [label="unwind"];
    bb50__0_5623 -> bb51__0_5623 [label="return"];
    bb50__0_5623 -> bb73__0_5623 [label="unwind"];
    bb51__0_5623 -> bb52__0_5623 [label="return"];
    bb51__0_5623 -> bb73__0_5623 [label="unwind"];
    bb52__0_5623 -> bb53__0_5623 [label="return"];
    bb52__0_5623 -> bb78__0_5623 [label="unwind"];
    bb53__0_5623 -> bb54__0_5623 [label=""];
    bb54__0_5623 -> bb55__0_5623 [label="return"];
    bb54__0_5623 -> bb78__0_5623 [label="unwind"];
    bb55__0_5623 -> bb56__0_5623 [label="0"];
    bb55__0_5623 -> bb57__0_5623 [label="1"];
    bb55__0_5623 -> bb4__0_5623 [label="otherwise"];
    bb56__0_5623 -> bb59__0_5623 [label="return"];
    bb56__0_5623 -> bb78__0_5623 [label="unwind"];
    bb57__0_5623 -> bb58__0_5623 [label="return"];
    bb57__0_5623 -> bb78__0_5623 [label="unwind"];
    bb58__0_5623 -> bb69__0_5623 [label=""];
    bb59__0_5623 -> bb60__0_5623 [label="return"];
    bb59__0_5623 -> bb78__0_5623 [label="unwind"];
    bb60__0_5623 -> bb61__0_5623 [label="return"];
    bb60__0_5623 -> bb78__0_5623 [label="unwind"];
    bb61__0_5623 -> bb62__0_5623 [label="return"];
    bb61__0_5623 -> bb78__0_5623 [label="unwind"];
    bb62__0_5623 -> bb63__0_5623 [label="return"];
    bb62__0_5623 -> bb78__0_5623 [label="unwind"];
    bb63__0_5623 -> bb64__0_5623 [label="return"];
    bb63__0_5623 -> bb72__0_5623 [label="unwind"];
    bb64__0_5623 -> bb65__0_5623 [label="return"];
    bb64__0_5623 -> bb72__0_5623 [label="unwind"];
    bb65__0_5623 -> bb66__0_5623 [label="return"];
    bb65__0_5623 -> bb78__0_5623 [label="unwind"];
    bb66__0_5623 -> bb67__0_5623 [label="return"];
    bb66__0_5623 -> bb78__0_5623 [label="unwind"];
    bb67__0_5623 -> bb68__0_5623 [label="return"];
    bb67__0_5623 -> bb79__0_5623 [label="unwind"];
    bb68__0_5623 -> bb71__0_5623 [label=""];
    bb69__0_5623 -> bb70__0_5623 [label="return"];
    bb69__0_5623 -> bb79__0_5623 [label="unwind"];
    bb70__0_5623 -> bb71__0_5623 [label=""];
    bb72__0_5623 -> bb78__0_5623 [label="return"];
    bb73__0_5623 -> bb78__0_5623 [label="return"];
    bb74__0_5623 -> bb78__0_5623 [label="return"];
    bb75__0_5623 -> bb78__0_5623 [label="return"];
    bb76__0_5623 -> bb78__0_5623 [label="return"];
    bb77__0_5623 -> bb78__0_5623 [label="return"];
    bb78__0_5623 -> bb79__0_5623 [label="return"];
    bb80__0_5623 -> bb79__0_5623 [label=""];
    bb81__0_5623 -> bb79__0_5623 [label=""];
}
