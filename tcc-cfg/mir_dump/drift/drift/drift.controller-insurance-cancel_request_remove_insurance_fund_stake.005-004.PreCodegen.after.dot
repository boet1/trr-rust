digraph Mir_0_198 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn controller::insurance::cancel_request_remove_insurance_fund_stake(_1: u64, _2: &amp;ReErased mut state::insurance_fund_stake::InsuranceFundStake, _3: &amp;ReErased mut state::user::UserStats, _4: &amp;ReErased mut state::spot_market::SpotMarket, _5: i64) -&gt; std::result::Result&lt;(), error::ErrorCode&gt;<br align="left"/>let _6: ();<br align="left"/>let mut _7: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _8: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _9: u64;<br align="left"/>let mut _10: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _11: isize;<br align="left"/>let _12: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _13: !;<br align="left"/>let mut _14: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _15: ();<br align="left"/>let _16: ();<br align="left"/>let mut _17: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _18: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _19: &amp;ReErased mut state::insurance_fund_stake::InsuranceFundStake;<br align="left"/>let mut _20: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _21: isize;<br align="left"/>let _22: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _23: !;<br align="left"/>let mut _24: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _25: ();<br align="left"/>let _26: u128;<br align="left"/>let mut _27: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _28: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _29: &amp;ReErased state::insurance_fund_stake::InsuranceFundStake;<br align="left"/>let mut _30: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _31: isize;<br align="left"/>let _32: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _33: !;<br align="left"/>let mut _34: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _35: u128;<br align="left"/>let _36: u128;<br align="left"/>let _37: u128;<br align="left"/>let _38: ();<br align="left"/>let mut _39: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _40: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _41: bool;<br align="left"/>let mut _42: u128;<br align="left"/>let mut _43: u128;<br align="left"/>let mut _44: ();<br align="left"/>let _45: error::ErrorCode;<br align="left"/>let _46: ();<br align="left"/>let mut _47: &amp;ReErased str;<br align="left"/>let _48: &amp;ReErased str;<br align="left"/>let mut _49: &amp;ReErased std::string::String;<br align="left"/>let _50: &amp;ReErased std::string::String;<br align="left"/>let _51: std::string::String;<br align="left"/>let _52: std::string::String;<br align="left"/>let mut _53: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _54: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _55: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _56: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _57: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _58: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _59: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _60: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _61: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _62: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _63: &amp;ReErased error::ErrorCode;<br align="left"/>let _64: &amp;ReErased error::ErrorCode;<br align="left"/>let _65: ();<br align="left"/>let mut _66: &amp;ReErased str;<br align="left"/>let _67: &amp;ReErased str;<br align="left"/>let mut _68: error::ErrorCode;<br align="left"/>let mut _69: isize;<br align="left"/>let _70: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _71: !;<br align="left"/>let mut _72: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _73: ();<br align="left"/>let _74: ();<br align="left"/>let mut _75: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _76: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _77: bool;<br align="left"/>let mut _78: u128;<br align="left"/>let mut _79: ();<br align="left"/>let _80: error::ErrorCode;<br align="left"/>let _81: ();<br align="left"/>let mut _82: &amp;ReErased str;<br align="left"/>let _83: &amp;ReErased str;<br align="left"/>let mut _84: &amp;ReErased std::string::String;<br align="left"/>let _85: &amp;ReErased std::string::String;<br align="left"/>let _86: std::string::String;<br align="left"/>let _87: std::string::String;<br align="left"/>let mut _88: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _89: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _90: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _91: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _92: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _93: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _94: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _95: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _96: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _97: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _98: &amp;ReErased error::ErrorCode;<br align="left"/>let _99: &amp;ReErased error::ErrorCode;<br align="left"/>let _100: ();<br align="left"/>let mut _101: &amp;ReErased str;<br align="left"/>let _102: &amp;ReErased str;<br align="left"/>let mut _103: error::ErrorCode;<br align="left"/>let mut _104: isize;<br align="left"/>let _105: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _106: !;<br align="left"/>let mut _107: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _108: ();<br align="left"/>let _109: u128;<br align="left"/>let mut _110: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _111: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _112: &amp;ReErased state::insurance_fund_stake::InsuranceFundStake;<br align="left"/>let mut _113: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _114: u64;<br align="left"/>let mut _115: isize;<br align="left"/>let _116: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _117: !;<br align="left"/>let mut _118: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _119: u128;<br align="left"/>let _120: ();<br align="left"/>let mut _121: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _122: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _123: &amp;ReErased mut state::insurance_fund_stake::InsuranceFundStake;<br align="left"/>let mut _124: u128;<br align="left"/>let mut _125: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _126: isize;<br align="left"/>let _127: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _128: !;<br align="left"/>let mut _129: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _130: ();<br align="left"/>let mut _131: u128;<br align="left"/>let mut _132: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _133: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _134: u128;<br align="left"/>let mut _135: u128;<br align="left"/>let mut _136: isize;<br align="left"/>let _137: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _138: !;<br align="left"/>let mut _139: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _140: u128;<br align="left"/>let mut _141: u128;<br align="left"/>let mut _142: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _143: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _144: u128;<br align="left"/>let mut _145: u128;<br align="left"/>let mut _146: isize;<br align="left"/>let _147: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _148: !;<br align="left"/>let mut _149: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _150: u128;<br align="left"/>let _151: u128;<br align="left"/>let mut _152: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _153: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _154: &amp;ReErased state::insurance_fund_stake::InsuranceFundStake;<br align="left"/>let mut _155: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _156: isize;<br align="left"/>let _157: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _158: !;<br align="left"/>let mut _159: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _160: u128;<br align="left"/>let _161: ();<br align="left"/>let mut _162: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _163: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _164: u64;<br align="left"/>let mut _165: &amp;ReErased mut state::insurance_fund_stake::InsuranceFundStake;<br align="left"/>let mut _166: &amp;ReErased mut state::user::UserStats;<br align="left"/>let mut _167: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _168: i64;<br align="left"/>let mut _169: isize;<br align="left"/>let _170: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _171: !;<br align="left"/>let mut _172: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _173: ();<br align="left"/>let _174: ();<br align="left"/>let _175: ();<br align="left"/>let mut _176: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let mut _177: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let _178: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let _179: [&amp;ReErased [u8]; 1_usize];<br align="left"/>let mut _180: &amp;ReErased [u8];<br align="left"/>let _181: &amp;ReErased [u8];<br align="left"/>let mut _182: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _183: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _184: std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _185: &amp;ReErased state::events::InsuranceFundStakeRecord;<br align="left"/>let _186: &amp;ReErased state::events::InsuranceFundStakeRecord;<br align="left"/>let _187: state::events::InsuranceFundStakeRecord;<br align="left"/>let mut _188: i64;<br align="left"/>let mut _189: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _190: state::events::StakeAction;<br align="left"/>let mut _191: u16;<br align="left"/>let mut _192: u64;<br align="left"/>let mut _193: u128;<br align="left"/>let mut _194: u128;<br align="left"/>let mut _195: u128;<br align="left"/>let mut _196: u128;<br align="left"/>let mut _197: u128;<br align="left"/>let mut _198: u128;<br align="left"/>let mut _199: i64;<br align="left"/>let mut _200: ();<br align="left"/>let mut _201: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _202: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>debug insurance_vault_amount =&gt; _1;<br align="left"/>debug insurance_fund_stake =&gt; _2;<br align="left"/>debug user_stats =&gt; _3;<br align="left"/>debug spot_market =&gt; _4;<br align="left"/>debug now =&gt; _5;<br align="left"/>debug residual =&gt; _12;<br align="left"/>debug val =&gt; _15;<br align="left"/>debug residual =&gt; _22;<br align="left"/>debug val =&gt; _25;<br align="left"/>debug if_shares_before =&gt; _26;<br align="left"/>debug residual =&gt; _32;<br align="left"/>debug val =&gt; _35;<br align="left"/>debug total_if_shares_before =&gt; _36;<br align="left"/>debug user_if_shares_before =&gt; _37;<br align="left"/>debug error_code =&gt; _45;<br align="left"/>debug res =&gt; _52;<br align="left"/>debug residual =&gt; _70;<br align="left"/>debug val =&gt; _73;<br align="left"/>debug error_code =&gt; _80;<br align="left"/>debug res =&gt; _87;<br align="left"/>debug residual =&gt; _105;<br align="left"/>debug val =&gt; _108;<br align="left"/>debug if_shares_lost =&gt; _109;<br align="left"/>debug residual =&gt; _116;<br align="left"/>debug val =&gt; _119;<br align="left"/>debug residual =&gt; _127;<br align="left"/>debug val =&gt; _130;<br align="left"/>debug residual =&gt; _137;<br align="left"/>debug val =&gt; _140;<br align="left"/>debug residual =&gt; _147;<br align="left"/>debug val =&gt; _150;<br align="left"/>debug if_shares_after =&gt; _151;<br align="left"/>debug residual =&gt; _157;<br align="left"/>debug val =&gt; _160;<br align="left"/>debug residual =&gt; _170;<br align="left"/>debug val =&gt; _173;<br align="left"/>>;
    bb0__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = _1<br/>StorageLive(_10)<br/>_10 = &amp;mut (*_4)<br/></td></tr><tr><td align="left">_8 = apply_rebase_to_insurance_fund(move _9, move _10)</td></tr></table>>];
    bb1__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _8)</td></tr></table>>];
    bb2__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_11 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _11)</td></tr></table>>];
    bb3__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_15)<br/>_15 = ((_7 as Continue).0: ())<br/>_6 = _15<br/>StorageDead(_15)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_19 = &amp;mut (*_2)<br/>StorageLive(_20)<br/>_20 = &amp;mut (*_4)<br/></td></tr><tr><td align="left">_18 = apply_rebase_to_insurance_fund_stake(move _19, move _20)</td></tr></table>>];
    bb4__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_7 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_14)<br/>_14 = _12<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _14)</td></tr></table>>];
    bb6__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_12)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">_17 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _18)</td></tr></table>>];
    bb8__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>_21 = discriminant(_17)<br/></td></tr><tr><td align="left">switchInt(move _21)</td></tr></table>>];
    bb9__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_25)<br/>_25 = ((_17 as Continue).0: ())<br/>_16 = _25<br/>StorageDead(_25)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_29 = &amp;(*_2)<br/>StorageLive(_30)<br/>_30 = &amp;(*_4)<br/></td></tr><tr><td align="left">_28 = InsuranceFundStake::checked_if_shares(move _29, move _30)</td></tr></table>>];
    bb10__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_22)<br/>_22 = ((_17 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_24)<br/>_24 = _22<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _24)</td></tr></table>>];
    bb11__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_22)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">_27 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _28)</td></tr></table>>];
    bb13__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>_31 = discriminant(_27)<br/></td></tr><tr><td align="left">switchInt(move _31)</td></tr></table>>];
    bb14__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = ((_27 as Continue).0: u128)<br/>_26 = _35<br/>StorageDead(_35)<br/>StorageDead(_27)<br/>StorageLive(_36)<br/>_36 = (((*_4).9: state::spot_market::InsuranceFund).1: u128)<br/>StorageLive(_37)<br/>_37 = (((*_4).9: state::spot_market::InsuranceFund).2: u128)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>_42 = ((*_2).3: u128)<br/>StorageLive(_43)<br/>_43 = (((*_4).9: state::spot_market::InsuranceFund).3: u128)<br/>_41 = Eq(move _42, move _43)<br/></td></tr><tr><td align="left">switchInt(move _41)</td></tr></table>>];
    bb15__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_32)<br/>_32 = ((_27 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_34)<br/>_34 = _32<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _34)</td></tr></table>>];
    bb16__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_32)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_42)<br/>StorageLive(_44)<br/>_44 = ()<br/>_40 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _44)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_42)<br/>StorageLive(_45)<br/>_45 = error::ErrorCode::InvalidIFRebase<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>_202 = const _<br/>_56 = &amp;(*_202)<br/>_55 = &amp;(*_56)<br/>_54 = move _55 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_55)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>_64 = &amp;_45<br/>_63 = &amp;(*_64)<br/></td></tr><tr><td align="left">_62 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _63)</td></tr></table>>];
    bb19__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>_61 = [move _62]<br/>StorageDead(_62)<br/>_60 = &amp;_61<br/>_59 = &amp;(*_60)<br/>_58 = move _59 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_59)<br/></td></tr><tr><td align="left">_53 = Arguments::&lt;'_&gt;::new_v1(move _54, move _58)</td></tr></table>>];
    bb20__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">_52 = format(move _53)</td></tr></table>>];
    bb21__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_64)<br/>StorageDead(_61)<br/>StorageDead(_60)<br/>StorageDead(_56)<br/>_51 = move _52<br/>StorageDead(_52)<br/>_50 = &amp;_51<br/>_49 = &amp;(*_50)<br/></td></tr><tr><td align="left">_48 = &lt;String as Deref&gt;::deref(move _49)</td></tr></table>>];
    bb22__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">_47 = &amp;(*_48)<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">_46 = solana_program::log::sol_log(move _47)</td></tr></table>>];
    bb23__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/></td></tr><tr><td align="left">drop(_51)</td></tr></table>>];
    bb24__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageDead(_50)<br/>StorageDead(_48)<br/>StorageDead(_46)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>_67 = const &quot;if stake base != spot market base&quot;<br/>_66 = &amp;(*_67)<br/></td></tr><tr><td align="left">_65 = solana_program::log::sol_log(move _66)</td></tr></table>>];
    bb25__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageDead(_67)<br/>StorageDead(_65)<br/>StorageLive(_68)<br/>_68 = _45<br/>_40 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _68)<br/>StorageDead(_68)<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/></td></tr><tr><td align="left">_39 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _40)</td></tr></table>>];
    bb27__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>_69 = discriminant(_39)<br/></td></tr><tr><td align="left">switchInt(move _69)</td></tr></table>>];
    bb28__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_73)<br/>_73 = ((_39 as Continue).0: ())<br/>_38 = _73<br/>StorageDead(_73)<br/>StorageDead(_39)<br/>StorageDead(_38)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>_78 = ((*_2).2: u128)<br/>_77 = Ne(move _78, const 0_u128)<br/></td></tr><tr><td align="left">switchInt(move _77)</td></tr></table>>];
    bb29__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_70)<br/>_70 = ((_39 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_72)<br/>_72 = _70<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _72)</td></tr></table>>];
    bb30__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_70)<br/>StorageDead(_39)<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>StorageLive(_79)<br/>_79 = ()<br/>_76 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _79)<br/>StorageDead(_79)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>StorageLive(_80)<br/>_80 = error::ErrorCode::InvalidIFUnstakeCancel<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>_201 = const _<br/>_91 = &amp;(*_201)<br/>_90 = &amp;(*_91)<br/>_89 = move _90 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_90)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>_99 = &amp;_80<br/>_98 = &amp;(*_99)<br/></td></tr><tr><td align="left">_97 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _98)</td></tr></table>>];
    bb33__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>_96 = [move _97]<br/>StorageDead(_97)<br/>_95 = &amp;_96<br/>_94 = &amp;(*_95)<br/>_93 = move _94 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_94)<br/></td></tr><tr><td align="left">_88 = Arguments::&lt;'_&gt;::new_v1(move _89, move _93)</td></tr></table>>];
    bb34__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageDead(_89)<br/></td></tr><tr><td align="left">_87 = format(move _88)</td></tr></table>>];
    bb35__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>StorageDead(_99)<br/>StorageDead(_96)<br/>StorageDead(_95)<br/>StorageDead(_91)<br/>_86 = move _87<br/>StorageDead(_87)<br/>_85 = &amp;_86<br/>_84 = &amp;(*_85)<br/></td></tr><tr><td align="left">_83 = &lt;String as Deref&gt;::deref(move _84)</td></tr></table>>];
    bb36__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">_82 = &amp;(*_83)<br/>StorageDead(_84)<br/></td></tr><tr><td align="left">_81 = solana_program::log::sol_log(move _82)</td></tr></table>>];
    bb37__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/></td></tr><tr><td align="left">drop(_86)</td></tr></table>>];
    bb38__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>StorageDead(_85)<br/>StorageDead(_83)<br/>StorageDead(_81)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>_102 = const &quot;No withdraw request in progress&quot;<br/>_101 = &amp;(*_102)<br/></td></tr><tr><td align="left">_100 = solana_program::log::sol_log(move _101)</td></tr></table>>];
    bb39__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/>StorageDead(_102)<br/>StorageDead(_100)<br/>StorageLive(_103)<br/>_103 = _80<br/>_76 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _103)<br/>StorageDead(_103)<br/>StorageDead(_80)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/></td></tr><tr><td align="left">_75 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _76)</td></tr></table>>];
    bb41__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>_104 = discriminant(_75)<br/></td></tr><tr><td align="left">switchInt(move _104)</td></tr></table>>];
    bb42__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageLive(_108)<br/>_108 = ((_75 as Continue).0: ())<br/>_74 = _108<br/>StorageDead(_108)<br/>StorageDead(_75)<br/>StorageDead(_74)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>_112 = &amp;(*_2)<br/>StorageLive(_113)<br/>_113 = &amp;(*_4)<br/>StorageLive(_114)<br/>_114 = _1<br/></td></tr><tr><td align="left">_111 = calculate_if_shares_lost(move _112, move _113, move _114)</td></tr></table>>];
    bb43__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageLive(_105)<br/>_105 = ((_75 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_107)<br/>_107 = _105<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _107)</td></tr></table>>];
    bb44__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>StorageDead(_105)<br/>StorageDead(_75)<br/>StorageDead(_74)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/>StorageDead(_113)<br/>StorageDead(_112)<br/></td></tr><tr><td align="left">_110 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _111)</td></tr></table>>];
    bb46__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/>_115 = discriminant(_110)<br/></td></tr><tr><td align="left">switchInt(move _115)</td></tr></table>>];
    bb47__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageLive(_119)<br/>_119 = ((_110 as Continue).0: u128)<br/>_109 = _119<br/>StorageDead(_119)<br/>StorageDead(_110)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>_123 = &amp;mut (*_2)<br/>StorageLive(_124)<br/>_124 = _109<br/>StorageLive(_125)<br/>_125 = &amp;(*_4)<br/></td></tr><tr><td align="left">_122 = InsuranceFundStake::decrease_if_shares(move _123, move _124, move _125)</td></tr></table>>];
    bb48__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageLive(_116)<br/>_116 = ((_110 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_118)<br/>_118 = _116<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _118)</td></tr></table>>];
    bb49__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>StorageDead(_116)<br/>StorageDead(_110)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/>StorageDead(_124)<br/>StorageDead(_123)<br/></td></tr><tr><td align="left">_121 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _122)</td></tr></table>>];
    bb51__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/>_126 = discriminant(_121)<br/></td></tr><tr><td align="left">switchInt(move _126)</td></tr></table>>];
    bb52__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageLive(_130)<br/>_130 = ((_121 as Continue).0: ())<br/>_120 = _130<br/>StorageDead(_130)<br/>StorageDead(_121)<br/>StorageDead(_120)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>_134 = (((*_4).9: state::spot_market::InsuranceFund).1: u128)<br/>StorageLive(_135)<br/>_135 = _109<br/></td></tr><tr><td align="left">_133 = &lt;u128 as SafeMath&gt;::safe_sub(move _134, move _135)</td></tr></table>>];
    bb53__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageLive(_127)<br/>_127 = ((_121 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_129)<br/>_129 = _127<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _129)</td></tr></table>>];
    bb54__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_129)<br/>StorageDead(_127)<br/>StorageDead(_121)<br/>StorageDead(_120)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb55__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_135)<br/>StorageDead(_134)<br/></td></tr><tr><td align="left">_132 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _133)</td></tr></table>>];
    bb56__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/>_136 = discriminant(_132)<br/></td></tr><tr><td align="left">switchInt(move _136)</td></tr></table>>];
    bb57__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageLive(_140)<br/>_140 = ((_132 as Continue).0: u128)<br/>_131 = _140<br/>StorageDead(_140)<br/>(((*_4).9: state::spot_market::InsuranceFund).1: u128) = move _131<br/>StorageDead(_131)<br/>StorageDead(_132)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>_144 = (((*_4).9: state::spot_market::InsuranceFund).2: u128)<br/>StorageLive(_145)<br/>_145 = _109<br/></td></tr><tr><td align="left">_143 = &lt;u128 as SafeMath&gt;::safe_sub(move _144, move _145)</td></tr></table>>];
    bb58__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageLive(_137)<br/>_137 = ((_132 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_139)<br/>_139 = _137<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _139)</td></tr></table>>];
    bb59__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_139)<br/>StorageDead(_137)<br/>StorageDead(_131)<br/>StorageDead(_132)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb60__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_145)<br/>StorageDead(_144)<br/></td></tr><tr><td align="left">_142 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _143)</td></tr></table>>];
    bb61__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_143)<br/>_146 = discriminant(_142)<br/></td></tr><tr><td align="left">switchInt(move _146)</td></tr></table>>];
    bb62__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageLive(_150)<br/>_150 = ((_142 as Continue).0: u128)<br/>_141 = _150<br/>StorageDead(_150)<br/>(((*_4).9: state::spot_market::InsuranceFund).2: u128) = move _141<br/>StorageDead(_141)<br/>StorageDead(_142)<br/>StorageLive(_151)<br/>StorageLive(_152)<br/>StorageLive(_153)<br/>StorageLive(_154)<br/>_154 = &amp;(*_2)<br/>StorageLive(_155)<br/>_155 = &amp;(*_4)<br/></td></tr><tr><td align="left">_153 = InsuranceFundStake::checked_if_shares(move _154, move _155)</td></tr></table>>];
    bb63__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageLive(_147)<br/>_147 = ((_142 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_149)<br/>_149 = _147<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _149)</td></tr></table>>];
    bb64__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_149)<br/>StorageDead(_147)<br/>StorageDead(_141)<br/>StorageDead(_142)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb65__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_155)<br/>StorageDead(_154)<br/></td></tr><tr><td align="left">_152 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _153)</td></tr></table>>];
    bb66__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_153)<br/>_156 = discriminant(_152)<br/></td></tr><tr><td align="left">switchInt(move _156)</td></tr></table>>];
    bb67__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageLive(_160)<br/>_160 = ((_152 as Continue).0: u128)<br/>_151 = _160<br/>StorageDead(_160)<br/>StorageDead(_152)<br/>StorageLive(_161)<br/>StorageLive(_162)<br/>StorageLive(_163)<br/>StorageLive(_164)<br/>_164 = _1<br/>StorageLive(_165)<br/>_165 = &amp;mut (*_2)<br/>StorageLive(_166)<br/>_166 = &amp;mut (*_3)<br/>StorageLive(_167)<br/>_167 = &amp;mut (*_4)<br/>StorageLive(_168)<br/>_168 = _5<br/></td></tr><tr><td align="left">_163 = update_user_stats_if_stake_amount(const 0_i64, move _164, move _165, move _166, move _167, move _168)</td></tr></table>>];
    bb68__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageLive(_157)<br/>_157 = ((_152 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_159)<br/>_159 = _157<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _159)</td></tr></table>>];
    bb69__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_159)<br/>StorageDead(_157)<br/>StorageDead(_152)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb70__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_168)<br/>StorageDead(_167)<br/>StorageDead(_166)<br/>StorageDead(_165)<br/>StorageDead(_164)<br/></td></tr><tr><td align="left">_162 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _163)</td></tr></table>>];
    bb71__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_163)<br/>_169 = discriminant(_162)<br/></td></tr><tr><td align="left">switchInt(move _169)</td></tr></table>>];
    bb72__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageLive(_173)<br/>_173 = ((_162 as Continue).0: ())<br/>_161 = _173<br/>StorageDead(_173)<br/>StorageDead(_162)<br/>StorageDead(_161)<br/>StorageLive(_174)<br/>StorageLive(_175)<br/>StorageLive(_176)<br/>StorageLive(_177)<br/>StorageLive(_178)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>StorageLive(_181)<br/>StorageLive(_182)<br/>StorageLive(_183)<br/>StorageLive(_184)<br/>StorageLive(_185)<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>_188 = _5<br/>StorageLive(_189)<br/>_189 = ((*_3).0: anchor_lang::prelude::Pubkey)<br/>StorageLive(_190)<br/>_190 = StakeAction::UnstakeCancelRequest<br/>StorageLive(_191)<br/>_191 = ((*_4).42: u16)<br/>StorageLive(_192)<br/>_192 = _1<br/>StorageLive(_193)<br/>_193 = _26<br/>StorageLive(_194)<br/>_194 = _37<br/>StorageLive(_195)<br/>_195 = _36<br/>StorageLive(_196)<br/>_196 = _151<br/>StorageLive(_197)<br/>_197 = (((*_4).9: state::spot_market::InsuranceFund).1: u128)<br/>StorageLive(_198)<br/>_198 = (((*_4).9: state::spot_market::InsuranceFund).2: u128)<br/>_187 = InsuranceFundStakeRecord { ts: move _188, user_authority: move _189, action: move _190, amount: const 0_u64, market_index: move _191, insurance_vault_amount_before: move _192, if_shares_before: move _193, user_if_shares_before: move _194, total_if_shares_before: move _195, if_shares_after: move _196, user_if_shares_after: move _198, total_if_shares_after: move _197 }<br/>StorageDead(_198)<br/>StorageDead(_197)<br/>StorageDead(_196)<br/>StorageDead(_195)<br/>StorageDead(_194)<br/>StorageDead(_193)<br/>StorageDead(_192)<br/>StorageDead(_191)<br/>StorageDead(_190)<br/>StorageDead(_189)<br/>StorageDead(_188)<br/>_186 = &amp;_187<br/>_185 = &amp;(*_186)<br/></td></tr><tr><td align="left">_184 = &lt;InsuranceFundStakeRecord as anchor_lang::Event&gt;::data(move _185)</td></tr></table>>];
    bb73__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageLive(_170)<br/>_170 = ((_162 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_172)<br/>_172 = _170<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _172)</td></tr></table>>];
    bb74__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_172)<br/>StorageDead(_170)<br/>StorageDead(_162)<br/>StorageDead(_161)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb75__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_185)<br/>_183 = &amp;_184<br/>_182 = &amp;(*_183)<br/></td></tr><tr><td align="left">_181 = &lt;Vec&lt;u8&gt; as Deref&gt;::deref(move _182)</td></tr></table>>];
    bb76__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">_180 = &amp;(*_181)<br/>StorageDead(_182)<br/>_179 = [move _180]<br/>StorageDead(_180)<br/>_178 = &amp;_179<br/>_177 = &amp;(*_178)<br/>_176 = move _177 as &amp;[&amp;[u8]] (PointerCoercion(Unsize))<br/>StorageDead(_177)<br/></td></tr><tr><td align="left">_175 = solana_program::log::sol_log_data(move _176)</td></tr></table>>];
    bb77__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_176)<br/></td></tr><tr><td align="left">drop(_184)</td></tr></table>>];
    bb78__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_187)<br/>StorageDead(_186)<br/>StorageDead(_184)<br/>StorageDead(_183)<br/>StorageDead(_181)<br/>StorageDead(_179)<br/>StorageDead(_178)<br/>StorageDead(_175)<br/>_174 = const ()<br/>StorageDead(_174)<br/>((*_2).2: u128) = const 0_u128<br/>((*_2).5: u64) = const 0_u64<br/>StorageLive(_199)<br/>_199 = _5<br/>((*_2).6: i64) = move _199<br/>StorageDead(_199)<br/>StorageLive(_200)<br/>_200 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _200)<br/>StorageDead(_200)<br/>StorageDead(_151)<br/>StorageDead(_109)<br/>StorageDead(_37)<br/>StorageDead(_36)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb79__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_151)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb80__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb81__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb82__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb83__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left">return</td></tr></table>>];
    bb84__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">84 (cleanup)</td></tr><tr><td align="left">drop(_184)</td></tr></table>>];
    bb85__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">85 (cleanup)</td></tr><tr><td align="left">drop(_86)</td></tr></table>>];
    bb86__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">86 (cleanup)</td></tr><tr><td align="left">drop(_51)</td></tr></table>>];
    bb87__0_198 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">87 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_198 -> bb1__0_198 [label="return"];
    bb1__0_198 -> bb2__0_198 [label="return"];
    bb2__0_198 -> bb3__0_198 [label="0"];
    bb2__0_198 -> bb5__0_198 [label="1"];
    bb2__0_198 -> bb4__0_198 [label="otherwise"];
    bb3__0_198 -> bb7__0_198 [label="return"];
    bb5__0_198 -> bb6__0_198 [label="return"];
    bb6__0_198 -> bb83__0_198 [label=""];
    bb7__0_198 -> bb8__0_198 [label="return"];
    bb8__0_198 -> bb9__0_198 [label="0"];
    bb8__0_198 -> bb10__0_198 [label="1"];
    bb8__0_198 -> bb4__0_198 [label="otherwise"];
    bb9__0_198 -> bb12__0_198 [label="return"];
    bb10__0_198 -> bb11__0_198 [label="return"];
    bb11__0_198 -> bb83__0_198 [label=""];
    bb12__0_198 -> bb13__0_198 [label="return"];
    bb13__0_198 -> bb14__0_198 [label="0"];
    bb13__0_198 -> bb15__0_198 [label="1"];
    bb13__0_198 -> bb4__0_198 [label="otherwise"];
    bb14__0_198 -> bb18__0_198 [label="0"];
    bb14__0_198 -> bb17__0_198 [label="otherwise"];
    bb15__0_198 -> bb16__0_198 [label="return"];
    bb16__0_198 -> bb82__0_198 [label=""];
    bb17__0_198 -> bb26__0_198 [label=""];
    bb18__0_198 -> bb19__0_198 [label="return"];
    bb19__0_198 -> bb20__0_198 [label="return"];
    bb20__0_198 -> bb21__0_198 [label="return"];
    bb21__0_198 -> bb22__0_198 [label="return"];
    bb21__0_198 -> bb86__0_198 [label="unwind"];
    bb22__0_198 -> bb23__0_198 [label="return"];
    bb22__0_198 -> bb86__0_198 [label="unwind"];
    bb23__0_198 -> bb24__0_198 [label="return"];
    bb23__0_198 -> bb87__0_198 [label="unwind"];
    bb24__0_198 -> bb25__0_198 [label="return"];
    bb25__0_198 -> bb26__0_198 [label=""];
    bb26__0_198 -> bb27__0_198 [label="return"];
    bb27__0_198 -> bb28__0_198 [label="0"];
    bb27__0_198 -> bb29__0_198 [label="1"];
    bb27__0_198 -> bb4__0_198 [label="otherwise"];
    bb28__0_198 -> bb32__0_198 [label="0"];
    bb28__0_198 -> bb31__0_198 [label="otherwise"];
    bb29__0_198 -> bb30__0_198 [label="return"];
    bb30__0_198 -> bb81__0_198 [label=""];
    bb31__0_198 -> bb40__0_198 [label=""];
    bb32__0_198 -> bb33__0_198 [label="return"];
    bb33__0_198 -> bb34__0_198 [label="return"];
    bb34__0_198 -> bb35__0_198 [label="return"];
    bb35__0_198 -> bb36__0_198 [label="return"];
    bb35__0_198 -> bb85__0_198 [label="unwind"];
    bb36__0_198 -> bb37__0_198 [label="return"];
    bb36__0_198 -> bb85__0_198 [label="unwind"];
    bb37__0_198 -> bb38__0_198 [label="return"];
    bb37__0_198 -> bb87__0_198 [label="unwind"];
    bb38__0_198 -> bb39__0_198 [label="return"];
    bb39__0_198 -> bb40__0_198 [label=""];
    bb40__0_198 -> bb41__0_198 [label="return"];
    bb41__0_198 -> bb42__0_198 [label="0"];
    bb41__0_198 -> bb43__0_198 [label="1"];
    bb41__0_198 -> bb4__0_198 [label="otherwise"];
    bb42__0_198 -> bb45__0_198 [label="return"];
    bb43__0_198 -> bb44__0_198 [label="return"];
    bb44__0_198 -> bb81__0_198 [label=""];
    bb45__0_198 -> bb46__0_198 [label="return"];
    bb46__0_198 -> bb47__0_198 [label="0"];
    bb46__0_198 -> bb48__0_198 [label="1"];
    bb46__0_198 -> bb4__0_198 [label="otherwise"];
    bb47__0_198 -> bb50__0_198 [label="return"];
    bb48__0_198 -> bb49__0_198 [label="return"];
    bb49__0_198 -> bb80__0_198 [label=""];
    bb50__0_198 -> bb51__0_198 [label="return"];
    bb51__0_198 -> bb52__0_198 [label="0"];
    bb51__0_198 -> bb53__0_198 [label="1"];
    bb51__0_198 -> bb4__0_198 [label="otherwise"];
    bb52__0_198 -> bb55__0_198 [label="return"];
    bb53__0_198 -> bb54__0_198 [label="return"];
    bb54__0_198 -> bb80__0_198 [label=""];
    bb55__0_198 -> bb56__0_198 [label="return"];
    bb56__0_198 -> bb57__0_198 [label="0"];
    bb56__0_198 -> bb58__0_198 [label="1"];
    bb56__0_198 -> bb4__0_198 [label="otherwise"];
    bb57__0_198 -> bb60__0_198 [label="return"];
    bb58__0_198 -> bb59__0_198 [label="return"];
    bb59__0_198 -> bb80__0_198 [label=""];
    bb60__0_198 -> bb61__0_198 [label="return"];
    bb61__0_198 -> bb62__0_198 [label="0"];
    bb61__0_198 -> bb63__0_198 [label="1"];
    bb61__0_198 -> bb4__0_198 [label="otherwise"];
    bb62__0_198 -> bb65__0_198 [label="return"];
    bb63__0_198 -> bb64__0_198 [label="return"];
    bb64__0_198 -> bb80__0_198 [label=""];
    bb65__0_198 -> bb66__0_198 [label="return"];
    bb66__0_198 -> bb67__0_198 [label="0"];
    bb66__0_198 -> bb68__0_198 [label="1"];
    bb66__0_198 -> bb4__0_198 [label="otherwise"];
    bb67__0_198 -> bb70__0_198 [label="return"];
    bb68__0_198 -> bb69__0_198 [label="return"];
    bb69__0_198 -> bb79__0_198 [label=""];
    bb70__0_198 -> bb71__0_198 [label="return"];
    bb71__0_198 -> bb72__0_198 [label="0"];
    bb71__0_198 -> bb73__0_198 [label="1"];
    bb71__0_198 -> bb4__0_198 [label="otherwise"];
    bb72__0_198 -> bb75__0_198 [label="return"];
    bb73__0_198 -> bb74__0_198 [label="return"];
    bb74__0_198 -> bb79__0_198 [label=""];
    bb75__0_198 -> bb76__0_198 [label="return"];
    bb75__0_198 -> bb84__0_198 [label="unwind"];
    bb76__0_198 -> bb77__0_198 [label="return"];
    bb76__0_198 -> bb84__0_198 [label="unwind"];
    bb77__0_198 -> bb78__0_198 [label="return"];
    bb77__0_198 -> bb87__0_198 [label="unwind"];
    bb78__0_198 -> bb83__0_198 [label=""];
    bb79__0_198 -> bb80__0_198 [label=""];
    bb80__0_198 -> bb81__0_198 [label=""];
    bb81__0_198 -> bb82__0_198 [label=""];
    bb82__0_198 -> bb83__0_198 [label=""];
    bb84__0_198 -> bb87__0_198 [label="return"];
    bb85__0_198 -> bb87__0_198 [label="return"];
    bb86__0_198 -> bb87__0_198 [label="return"];
}
