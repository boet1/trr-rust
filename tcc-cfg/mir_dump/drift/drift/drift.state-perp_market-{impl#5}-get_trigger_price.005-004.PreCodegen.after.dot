digraph Mir_0_3811 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn PerpMarket::get_trigger_price(_1: &amp;ReErased state::perp_market::PerpMarket, _2: i64, _3: i64, _4: bool) -&gt; std::result::Result&lt;u64, error::ErrorCode&gt;<br align="left"/>let _5: ();<br align="left"/>let mut _6: bool;<br align="left"/>let mut _7: !;<br align="left"/>let mut _8: i64;<br align="left"/>let _9: u64;<br align="left"/>let _10: u64;<br align="left"/>let _11: i64;<br align="left"/>let _12: i64;<br align="left"/>let mut _13: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _14: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _15: i64;<br align="left"/>let mut _16: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _17: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _18: u64;<br align="left"/>let mut _19: isize;<br align="left"/>let _20: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _21: !;<br align="left"/>let mut _22: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _23: i64;<br align="left"/>let mut _24: i64;<br align="left"/>let mut _25: isize;<br align="left"/>let _26: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _27: !;<br align="left"/>let mut _28: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _29: i64;<br align="left"/>let _30: u64;<br align="left"/>let mut _31: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _32: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _33: i64;<br align="left"/>let mut _34: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _35: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _36: i64;<br align="left"/>let mut _37: i64;<br align="left"/>let mut _38: isize;<br align="left"/>let _39: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _40: !;<br align="left"/>let mut _41: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _42: i64;<br align="left"/>let mut _43: isize;<br align="left"/>let _44: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _45: !;<br align="left"/>let mut _46: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _47: u64;<br align="left"/>let _48: i64;<br align="left"/>let mut _49: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _50: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _51: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _52: i64;<br align="left"/>let mut _53: i64;<br align="left"/>let mut _54: isize;<br align="left"/>let _55: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _56: !;<br align="left"/>let mut _57: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _58: i64;<br align="left"/>let _59: u64;<br align="left"/>let mut _60: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _61: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _62: i64;<br align="left"/>let mut _63: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _64: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _65: i64;<br align="left"/>let mut _66: i64;<br align="left"/>let mut _67: isize;<br align="left"/>let _68: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _69: !;<br align="left"/>let mut _70: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _71: i64;<br align="left"/>let mut _72: isize;<br align="left"/>let _73: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _74: !;<br align="left"/>let mut _75: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _76: u64;<br align="left"/>let _77: u64;<br align="left"/>let mut _78: bool;<br align="left"/>let mut _79: u64;<br align="left"/>let _80: ();<br align="left"/>let _81: ();<br align="left"/>let mut _82: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _83: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _84: &amp;ReErased [&amp;ReErased str; 4_usize];<br align="left"/>let _85: &amp;ReErased [&amp;ReErased str; 4_usize];<br align="left"/>let _86: [&amp;ReErased str; 4_usize];<br align="left"/>let mut _87: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _88: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _89: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _90: [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let mut _91: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _92: &amp;ReErased u64;<br align="left"/>let _93: &amp;ReErased u64;<br align="left"/>let mut _94: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _95: &amp;ReErased u64;<br align="left"/>let _96: &amp;ReErased u64;<br align="left"/>let mut _97: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _98: &amp;ReErased u64;<br align="left"/>let _99: &amp;ReErased u64;<br align="left"/>let mut _100: [u64; 3_usize];<br align="left"/>let mut _101: u64;<br align="left"/>let mut _102: u64;<br align="left"/>let mut _103: u64;<br align="left"/>let _104: ();<br align="left"/>let mut _105: &amp;ReErased mut [u64];<br align="left"/>let mut _106: &amp;ReErased mut [u64; 3_usize];<br align="left"/>let _107: usize;<br align="left"/>let mut _108: usize;<br align="left"/>let mut _109: bool;<br align="left"/>let mut _110: [u64; 3_usize];<br align="left"/>let mut _111: u64;<br align="left"/>let mut _112: i64;<br align="left"/>let mut _113: u64;<br align="left"/>let mut _114: u64;<br align="left"/>let _115: ();<br align="left"/>let mut _116: &amp;ReErased mut [u64];<br align="left"/>let mut _117: &amp;ReErased mut [u64; 3_usize];<br align="left"/>let _118: usize;<br align="left"/>let mut _119: usize;<br align="left"/>let mut _120: bool;<br align="left"/>let mut _121: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _122: u64;<br align="left"/>let mut _123: i64;<br align="left"/>let mut _124: u64;<br align="left"/>let mut _125: &amp;ReErased [&amp;ReErased str; 4_usize];<br align="left"/>debug self =&gt; _1;<br align="left"/>debug oracle_price =&gt; _2;<br align="left"/>debug now =&gt; _3;<br align="left"/>debug use_median_price =&gt; _4;<br align="left"/>debug last_fill_price =&gt; _9;<br align="left"/>debug mark_price_5min_twap =&gt; _10;<br align="left"/>debug last_oracle_price_twap_5min =&gt; _11;<br align="left"/>debug basis_5min =&gt; _12;<br align="left"/>debug residual =&gt; _20;<br align="left"/>debug val =&gt; _23;<br align="left"/>debug residual =&gt; _26;<br align="left"/>debug val =&gt; _29;<br align="left"/>debug oracle_plus_basis_5min =&gt; _30;<br align="left"/>debug residual =&gt; _39;<br align="left"/>debug val =&gt; _42;<br align="left"/>debug residual =&gt; _44;<br align="left"/>debug val =&gt; _47;<br align="left"/>debug last_funding_basis =&gt; _48;<br align="left"/>debug residual =&gt; _55;<br align="left"/>debug val =&gt; _58;<br align="left"/>debug oracle_plus_funding_basis =&gt; _59;<br align="left"/>debug residual =&gt; _68;<br align="left"/>debug val =&gt; _71;<br align="left"/>debug residual =&gt; _73;<br align="left"/>debug val =&gt; _76;<br align="left"/>debug median_price =&gt; _77;<br align="left"/>debug prices =&gt; _100;<br align="left"/>debug prices =&gt; _110;<br align="left"/>>;
    bb0__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = _4<br/></td></tr><tr><td align="left">switchInt(move _6)</td></tr></table>>];
    bb1__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/>_8 = _2<br/></td></tr><tr><td align="left">_0 = &lt;i64 as Cast&gt;::cast::&lt;u64&gt;(move _8)</td></tr></table>>];
    bb2__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb3__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">_5 = const ()<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageLive(_9)<br/>_9 = ((*_1).37: u64)<br/>StorageLive(_10)<br/>_10 = (((*_1).1: state::perp_market::AMM).46: u64)<br/>StorageLive(_11)<br/>_11 = ((((*_1).1: state::perp_market::AMM).1: state::oracle::HistoricalOracleData).4: i64)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = _10<br/></td></tr><tr><td align="left">_17 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _18)</td></tr></table>>];
    bb4__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/></td></tr><tr><td align="left">_16 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _17)</td></tr></table>>];
    bb5__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>_19 = discriminant(_16)<br/></td></tr><tr><td align="left">switchInt(move _19)</td></tr></table>>];
    bb6__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_23)<br/>_23 = ((_16 as Continue).0: i64)<br/>_15 = _23<br/>StorageDead(_23)<br/>StorageLive(_24)<br/>_24 = _11<br/></td></tr><tr><td align="left">_14 = &lt;i64 as SafeMath&gt;::safe_sub(move _15, move _24)</td></tr></table>>];
    bb7__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb8__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_20)<br/>_20 = ((_16 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_22)<br/>_22 = _20<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _22)</td></tr></table>>];
    bb9__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_20)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">_13 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _14)</td></tr></table>>];
    bb11__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>_25 = discriminant(_13)<br/></td></tr><tr><td align="left">switchInt(move _25)</td></tr></table>>];
    bb12__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_29)<br/>_29 = ((_13 as Continue).0: i64)<br/>_12 = _29<br/>StorageDead(_29)<br/>StorageDead(_16)<br/>StorageDead(_13)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>_36 = _2<br/>StorageLive(_37)<br/>_37 = _12<br/></td></tr><tr><td align="left">_35 = &lt;i64 as SafeMath&gt;::safe_add(move _36, move _37)</td></tr></table>>];
    bb13__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_26)<br/>_26 = ((_13 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_28)<br/>_28 = _26<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _28)</td></tr></table>>];
    bb14__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">_34 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _35)</td></tr></table>>];
    bb16__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>_38 = discriminant(_34)<br/></td></tr><tr><td align="left">switchInt(move _38)</td></tr></table>>];
    bb17__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_42)<br/>_42 = ((_34 as Continue).0: i64)<br/>_33 = _42<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">_32 = &lt;i64 as Cast&gt;::cast::&lt;u64&gt;(move _33)</td></tr></table>>];
    bb18__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_39)<br/>_39 = ((_34 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_41)<br/>_41 = _39<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _41)</td></tr></table>>];
    bb19__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_39)<br/>StorageDead(_33)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/></td></tr><tr><td align="left">_31 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _32)</td></tr></table>>];
    bb21__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>_43 = discriminant(_31)<br/></td></tr><tr><td align="left">switchInt(move _43)</td></tr></table>>];
    bb22__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>_47 = ((_31 as Continue).0: u64)<br/>_30 = _47<br/>StorageDead(_47)<br/>StorageDead(_34)<br/>StorageDead(_31)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>_51 = &amp;(*_1)<br/>StorageLive(_52)<br/>_52 = _2<br/>StorageLive(_53)<br/>_53 = _3<br/></td></tr><tr><td align="left">_50 = PerpMarket::get_last_funding_basis(move _51, move _52, move _53)</td></tr></table>>];
    bb23__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_44)<br/>_44 = ((_31 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_46)<br/>_46 = _44<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _46)</td></tr></table>>];
    bb24__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_52)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">_49 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _50)</td></tr></table>>];
    bb26__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>_54 = discriminant(_49)<br/></td></tr><tr><td align="left">switchInt(move _54)</td></tr></table>>];
    bb27__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_58)<br/>_58 = ((_49 as Continue).0: i64)<br/>_48 = _58<br/>StorageDead(_58)<br/>StorageDead(_49)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>_65 = _2<br/>StorageLive(_66)<br/>_66 = _48<br/></td></tr><tr><td align="left">_64 = &lt;i64 as SafeMath&gt;::safe_add(move _65, move _66)</td></tr></table>>];
    bb28__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_55)<br/>_55 = ((_49 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_57)<br/>_57 = _55<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _57)</td></tr></table>>];
    bb29__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_55)<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">_63 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _64)</td></tr></table>>];
    bb31__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>_67 = discriminant(_63)<br/></td></tr><tr><td align="left">switchInt(move _67)</td></tr></table>>];
    bb32__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_71)<br/>_71 = ((_63 as Continue).0: i64)<br/>_62 = _71<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">_61 = &lt;i64 as Cast&gt;::cast::&lt;u64&gt;(move _62)</td></tr></table>>];
    bb33__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageLive(_68)<br/>_68 = ((_63 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_70)<br/>_70 = _68<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _70)</td></tr></table>>];
    bb34__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_68)<br/>StorageDead(_62)<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/></td></tr><tr><td align="left">_60 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _61)</td></tr></table>>];
    bb36__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>_72 = discriminant(_60)<br/></td></tr><tr><td align="left">switchInt(move _72)</td></tr></table>>];
    bb37__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_76)<br/>_76 = ((_60 as Continue).0: u64)<br/>_59 = _76<br/>StorageDead(_76)<br/>StorageDead(_63)<br/>StorageDead(_60)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>_79 = _9<br/>_78 = Gt(move _79, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _78)</td></tr></table>>];
    bb38__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_73)<br/>_73 = ((_60 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_75)<br/>_75 = _73<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _75)</td></tr></table>>];
    bb39__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>_125 = const _<br/>_85 = &amp;(*_125)<br/>_84 = &amp;(*_85)<br/>_83 = move _84 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_84)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>_93 = &amp;_9<br/>_92 = &amp;(*_93)<br/></td></tr><tr><td align="left">_91 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _92)</td></tr></table>>];
    bb41__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>_112 = _2<br/></td></tr><tr><td align="left">_111 = core::num::&lt;impl i64&gt;::unsigned_abs(move _112)</td></tr></table>>];
    bb42__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>_96 = &amp;_59<br/>_95 = &amp;(*_96)<br/></td></tr><tr><td align="left">_94 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _95)</td></tr></table>>];
    bb43__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>_99 = &amp;_30<br/>_98 = &amp;(*_99)<br/></td></tr><tr><td align="left">_97 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _98)</td></tr></table>>];
    bb44__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>_90 = [move _91, move _94, move _97]<br/>StorageDead(_97)<br/>StorageDead(_94)<br/>StorageDead(_91)<br/>_89 = &amp;_90<br/>_88 = &amp;(*_89)<br/>_87 = move _88 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_88)<br/></td></tr><tr><td align="left">_82 = Arguments::&lt;'_&gt;::new_v1(move _83, move _87)</td></tr></table>>];
    bb45__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>StorageDead(_83)<br/></td></tr><tr><td align="left">_81 = _print(move _82)</td></tr></table>>];
    bb46__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>StorageDead(_99)<br/>StorageDead(_96)<br/>StorageDead(_93)<br/>StorageDead(_90)<br/>StorageDead(_89)<br/>StorageDead(_85)<br/>StorageDead(_81)<br/>_80 = const ()<br/>StorageDead(_80)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>_101 = _9<br/>StorageLive(_102)<br/>_102 = _59<br/>StorageLive(_103)<br/>_103 = _30<br/>_100 = [move _101, move _102, move _103]<br/>StorageDead(_103)<br/>StorageDead(_102)<br/>StorageDead(_101)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>_106 = &amp;mut _100<br/>_105 = move _106 as &amp;mut [u64] (PointerCoercion(Unsize))<br/>StorageDead(_106)<br/></td></tr><tr><td align="left">_104 = core::slice::&lt;impl [u64]&gt;::sort_unstable(move _105)</td></tr></table>>];
    bb47__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/>StorageDead(_104)<br/>StorageLive(_107)<br/>_107 = const 1_usize<br/>_108 = Len(_100)<br/>_109 = Lt(_107, _108)<br/></td></tr><tr><td align="left">assert(move _109, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _108, _107)</td></tr></table>>];
    bb48__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">_77 = _100[_107]<br/>StorageDead(_100)<br/>StorageDead(_107)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>StorageLive(_113)<br/>_113 = _59<br/>StorageLive(_114)<br/>_114 = _30<br/>_110 = [move _111, move _113, move _114]<br/>StorageDead(_114)<br/>StorageDead(_113)<br/>StorageDead(_111)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>_117 = &amp;mut _110<br/>_116 = move _117 as &amp;mut [u64] (PointerCoercion(Unsize))<br/>StorageDead(_117)<br/></td></tr><tr><td align="left">_115 = core::slice::&lt;impl [u64]&gt;::sort_unstable(move _116)</td></tr></table>>];
    bb50__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_116)<br/>StorageDead(_115)<br/>StorageLive(_118)<br/>_118 = const 1_usize<br/>_119 = Len(_110)<br/>_120 = Lt(_118, _119)<br/></td></tr><tr><td align="left">assert(move _120, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _119, _118)</td></tr></table>>];
    bb51__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">_77 = _110[_118]<br/>StorageDead(_110)<br/>StorageDead(_118)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb52__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>StorageLive(_121)<br/>_121 = &amp;(*_1)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>_123 = _2<br/></td></tr><tr><td align="left">_122 = core::num::&lt;impl i64&gt;::unsigned_abs(move _123)</td></tr></table>>];
    bb53__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/>StorageLive(_124)<br/>_124 = _77<br/></td></tr><tr><td align="left">_0 = PerpMarket::clamp_trigger_price(move _121, move _122, move _124)</td></tr></table>>];
    bb54__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_124)<br/>StorageDead(_122)<br/>StorageDead(_121)<br/>StorageDead(_77)<br/>StorageDead(_59)<br/>StorageDead(_48)<br/>StorageDead(_30)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb55__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_60)<br/>StorageDead(_59)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb56__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb57__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb58__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb60__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb61__0_3811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_3811 -> bb1__0_3811 [label="0"];
    bb0__0_3811 -> bb3__0_3811 [label="otherwise"];
    bb1__0_3811 -> bb2__0_3811 [label="return"];
    bb2__0_3811 -> bb61__0_3811 [label=""];
    bb3__0_3811 -> bb4__0_3811 [label="return"];
    bb4__0_3811 -> bb5__0_3811 [label="return"];
    bb5__0_3811 -> bb6__0_3811 [label="0"];
    bb5__0_3811 -> bb8__0_3811 [label="1"];
    bb5__0_3811 -> bb7__0_3811 [label="otherwise"];
    bb6__0_3811 -> bb10__0_3811 [label="return"];
    bb8__0_3811 -> bb9__0_3811 [label="return"];
    bb9__0_3811 -> bb59__0_3811 [label=""];
    bb10__0_3811 -> bb11__0_3811 [label="return"];
    bb11__0_3811 -> bb12__0_3811 [label="0"];
    bb11__0_3811 -> bb13__0_3811 [label="1"];
    bb11__0_3811 -> bb7__0_3811 [label="otherwise"];
    bb12__0_3811 -> bb15__0_3811 [label="return"];
    bb13__0_3811 -> bb14__0_3811 [label="return"];
    bb14__0_3811 -> bb59__0_3811 [label=""];
    bb15__0_3811 -> bb16__0_3811 [label="return"];
    bb16__0_3811 -> bb17__0_3811 [label="0"];
    bb16__0_3811 -> bb18__0_3811 [label="1"];
    bb16__0_3811 -> bb7__0_3811 [label="otherwise"];
    bb17__0_3811 -> bb20__0_3811 [label="return"];
    bb18__0_3811 -> bb19__0_3811 [label="return"];
    bb19__0_3811 -> bb57__0_3811 [label=""];
    bb20__0_3811 -> bb21__0_3811 [label="return"];
    bb21__0_3811 -> bb22__0_3811 [label="0"];
    bb21__0_3811 -> bb23__0_3811 [label="1"];
    bb21__0_3811 -> bb7__0_3811 [label="otherwise"];
    bb22__0_3811 -> bb25__0_3811 [label="return"];
    bb23__0_3811 -> bb24__0_3811 [label="return"];
    bb24__0_3811 -> bb57__0_3811 [label=""];
    bb25__0_3811 -> bb26__0_3811 [label="return"];
    bb26__0_3811 -> bb27__0_3811 [label="0"];
    bb26__0_3811 -> bb28__0_3811 [label="1"];
    bb26__0_3811 -> bb7__0_3811 [label="otherwise"];
    bb27__0_3811 -> bb30__0_3811 [label="return"];
    bb28__0_3811 -> bb29__0_3811 [label="return"];
    bb29__0_3811 -> bb56__0_3811 [label=""];
    bb30__0_3811 -> bb31__0_3811 [label="return"];
    bb31__0_3811 -> bb32__0_3811 [label="0"];
    bb31__0_3811 -> bb33__0_3811 [label="1"];
    bb31__0_3811 -> bb7__0_3811 [label="otherwise"];
    bb32__0_3811 -> bb35__0_3811 [label="return"];
    bb33__0_3811 -> bb34__0_3811 [label="return"];
    bb34__0_3811 -> bb55__0_3811 [label=""];
    bb35__0_3811 -> bb36__0_3811 [label="return"];
    bb36__0_3811 -> bb37__0_3811 [label="0"];
    bb36__0_3811 -> bb38__0_3811 [label="1"];
    bb36__0_3811 -> bb7__0_3811 [label="otherwise"];
    bb37__0_3811 -> bb41__0_3811 [label="0"];
    bb37__0_3811 -> bb40__0_3811 [label="otherwise"];
    bb38__0_3811 -> bb39__0_3811 [label="return"];
    bb39__0_3811 -> bb55__0_3811 [label=""];
    bb40__0_3811 -> bb42__0_3811 [label="return"];
    bb41__0_3811 -> bb49__0_3811 [label="return"];
    bb42__0_3811 -> bb43__0_3811 [label="return"];
    bb43__0_3811 -> bb44__0_3811 [label="return"];
    bb44__0_3811 -> bb45__0_3811 [label="return"];
    bb45__0_3811 -> bb46__0_3811 [label="return"];
    bb46__0_3811 -> bb47__0_3811 [label="return"];
    bb47__0_3811 -> bb48__0_3811 [label="success"];
    bb48__0_3811 -> bb52__0_3811 [label=""];
    bb49__0_3811 -> bb50__0_3811 [label="return"];
    bb50__0_3811 -> bb51__0_3811 [label="success"];
    bb51__0_3811 -> bb52__0_3811 [label=""];
    bb52__0_3811 -> bb53__0_3811 [label="return"];
    bb53__0_3811 -> bb54__0_3811 [label="return"];
    bb54__0_3811 -> bb61__0_3811 [label=""];
    bb55__0_3811 -> bb56__0_3811 [label=""];
    bb56__0_3811 -> bb58__0_3811 [label=""];
    bb57__0_3811 -> bb58__0_3811 [label=""];
    bb58__0_3811 -> bb60__0_3811 [label=""];
    bb59__0_3811 -> bb60__0_3811 [label=""];
    bb60__0_3811 -> bb61__0_3811 [label=""];
}
