digraph Mir_0_9208 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn keeper::handle_force_cancel_orders(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::keeper::ForceCancelOrder&lt;ReErased&gt;&gt;) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _2: ();<br align="left"/>let mut _3: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _4: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _5: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _6: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _7: isize;<br align="left"/>let _8: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _9: !;<br align="left"/>let mut _10: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _11: ();<br align="left"/>let _12: state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _13: state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _14: state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _15: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let mut _16: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, instructions::optional_accounts::AccountMaps&lt;ReErased&gt;&gt;;<br align="left"/>let mut _17: std::result::Result&lt;instructions::optional_accounts::AccountMaps&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _18: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _19: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _20: std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _21: std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _22: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _23: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _24: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _25: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _26: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _27: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _28: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _29: u64;<br align="left"/>let mut _30: anchor_lang::prelude::Clock;<br align="left"/>let mut _31: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _32: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _33: isize;<br align="left"/>let _34: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _35: !;<br align="left"/>let mut _36: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _37: anchor_lang::prelude::Clock;<br align="left"/>let mut _38: std::option::Option&lt;state::state::OracleGuardRails&gt;;<br align="left"/>let mut _39: isize;<br align="left"/>let _40: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _41: !;<br align="left"/>let mut _42: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _43: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let _44: ();<br align="left"/>let mut _45: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _46: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _47: &amp;ReErased state::state::State;<br align="left"/>let _48: &amp;ReErased state::state::State;<br align="left"/>let mut _49: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _50: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _51: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _52: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _53: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let _54: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _55: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _56: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _57: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _58: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _59: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _60: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _61: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let _62: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let _63: anchor_lang::prelude::Clock;<br align="left"/>let mut _64: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _65: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _66: isize;<br align="left"/>let _67: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _68: !;<br align="left"/>let mut _69: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _70: anchor_lang::prelude::Clock;<br align="left"/>let mut _71: isize;<br align="left"/>let _72: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _73: !;<br align="left"/>let mut _74: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _75: ();<br align="left"/>let mut _76: ();<br align="left"/>let mut _77: &amp;ReErased mut instructions::keeper::ForceCancelOrder&lt;ReErased&gt;;<br align="left"/>let mut _78: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _79: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _80: &amp;ReErased mut instructions::keeper::ForceCancelOrder&lt;ReErased&gt;;<br align="left"/>let mut _81: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _82: &amp;ReErased mut instructions::keeper::ForceCancelOrder&lt;ReErased&gt;;<br align="left"/>let mut _83: &amp;ReErased mut instructions::keeper::ForceCancelOrder&lt;ReErased&gt;;<br align="left"/>let mut _84: bool;<br align="left"/>let mut _85: bool;<br align="left"/>let mut _86: bool;<br align="left"/>let mut _87: bool;<br align="left"/>let mut _88: isize;<br align="left"/>let mut _89: isize;<br align="left"/>let mut _90: isize;<br align="left"/>let mut _91: isize;<br align="left"/>let mut _92: isize;<br align="left"/>let mut _93: isize;<br align="left"/>let mut _94: isize;<br align="left"/>let mut _95: isize;<br align="left"/>let mut _96: isize;<br align="left"/>let mut _97: isize;<br align="left"/>let mut _98: isize;<br align="left"/>let mut _99: isize;<br align="left"/>let mut _100: isize;<br align="left"/>let mut _101: isize;<br align="left"/>let mut _102: isize;<br align="left"/>let mut _103: isize;<br align="left"/>let mut _104: isize;<br align="left"/>let mut _105: isize;<br align="left"/>let mut _106: isize;<br align="left"/>let mut _107: isize;<br align="left"/>let mut _108: isize;<br align="left"/>let mut _109: isize;<br align="left"/>let mut _110: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _111: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug residual =&gt; _8;<br align="left"/>debug val =&gt; _11;<br align="left"/>debug perp_market_map =&gt; _12;<br align="left"/>debug spot_market_map =&gt; _13;<br align="left"/>debug oracle_map =&gt; _14;<br align="left"/>debug residual =&gt; _34;<br align="left"/>debug val =&gt; _37;<br align="left"/>debug residual =&gt; _40;<br align="left"/>debug val =&gt; _43;<br align="left"/>debug residual =&gt; _67;<br align="left"/>debug val =&gt; _70;<br align="left"/>debug residual =&gt; _72;<br align="left"/>debug val =&gt; _75;<br align="left"/>>;
    bb0__0_9208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_87 = const false<br/>_86 = const false<br/>_85 = const false<br/>_84 = const false<br/>StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_77 = deref_copy (_1.1: &amp;mut instructions::keeper::ForceCancelOrder&lt;'_&gt;)<br/>_6 = &amp;((*_77).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_78 = deref_copy (*_6)<br/>_110 = (((_78.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_5 = &amp;(*_110)<br/></td></tr><tr><td align="left">_4 = constraints::exchange_not_paused(move _5)</td></tr></table>>];
    bb1__0_9208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">_3 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _4)</td></tr></table>>];
    bb2__0_9208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>_7 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _7)</td></tr></table>>];
    bb3__0_9208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = ((_3 as Continue).0: ())<br/>_2 = _11<br/>StorageDead(_11)<br/>_88 = discriminant(_3)<br/>StorageDead(_6)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_79 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_22 = &amp;(*_79)<br/></td></tr><tr><td align="left">_21 = core::slice::&lt;impl [anchor_lang::prelude::AccountInfo&lt;'_&gt;]&gt;::iter(move _22)</td></tr></table>>];
    bb4__0_9208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_9208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/>_8 = move ((_3 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_10)<br/>_10 = move _8<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _10)</td></tr></table>>];
    bb6__0_9208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_8)<br/>_102 = discriminant(_3)<br/>StorageDead(_6)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_9208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/></td></tr><tr><td align="left">_20 = &lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as Iterator&gt;::peekable(move _21)</td></tr></table>>];
    bb8__0_9208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>_19 = &amp;mut _20<br/>_18 = &amp;mut (*_19)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/></td></tr><tr><td align="left">_25 = BTreeSet::&lt;u16&gt;::new()</td></tr></table>>];
    bb9__0_9208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">_24 = &amp;_25<br/>_23 = &amp;(*_24)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/></td></tr><tr><td align="left">_28 = get_writable_spot_market_set(const _)</td></tr></table>>];
    bb10__0_9208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">_27 = &amp;_28<br/>_26 = &amp;(*_27)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/></td></tr><tr><td align="left">_32 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb11__0_9208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left">_31 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _32)</td></tr></table>>];
    bb12__0_9208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">_86 = const true<br/>_87 = const true<br/>StorageDead(_32)<br/>_33 = discriminant(_31)<br/></td></tr><tr><td align="left">switchInt(move _33)</td></tr></table>>];
    bb13__0_9208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_37)<br/>_37 = move ((_31 as Continue).0: anchor_lang::prelude::Clock)<br/>_30 = move _37<br/>StorageDead(_37)<br/>_29 = (_30.0: u64)<br/>StorageLive(_38)<br/>_38 = Option::&lt;state::state::OracleGuardRails&gt;::None<br/></td></tr><tr><td align="left">_17 = load_maps(move _18, move _23, move _26, move _29, move _38)</td></tr></table>>];
    bb14__0_9208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_34)<br/>_34 = move ((_31 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_36)<br/>_36 = move _34<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _36)</td></tr></table>>];
    bb15__0_9208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_34)<br/>StorageDead(_29)<br/>StorageDead(_26)<br/>StorageDead(_23)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_9208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_29)<br/>StorageDead(_26)<br/>StorageDead(_23)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">_16 = &lt;std::result::Result&lt;AccountMaps&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _17)</td></tr></table>>];
    bb17__0_9208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>_39 = discriminant(_16)<br/></td></tr><tr><td align="left">switchInt(move _39)</td></tr></table>>];
    bb18__0_9208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_43)<br/>_43 = move ((_16 as Continue).0: instructions::optional_accounts::AccountMaps&lt;'_&gt;)<br/>_15 = move _43<br/>StorageDead(_43)<br/>StorageLive(_12)<br/>_12 = move (_15.0: state::perp_market_map::PerpMarketMap&lt;'_&gt;)<br/>StorageLive(_13)<br/>_13 = move (_15.1: state::spot_market_map::SpotMarketMap&lt;'_&gt;)<br/>StorageLive(_14)<br/>_14 = move (_15.2: state::oracle_map::OracleMap&lt;'_&gt;)<br/>_92 = discriminant(_16)<br/>_94 = discriminant(_31)<br/>_86 = const false<br/>_87 = const false<br/>StorageDead(_31)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">drop(_28)</td></tr></table>>];
    bb19__0_9208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_40)<br/>_40 = ((_16 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_42)<br/>_42 = _40<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _42)</td></tr></table>>];
    bb20__0_9208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_40)<br/>_90 = discriminant(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_9208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">drop(_25)</td></tr></table>>];
    bb22__0_9208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_20)<br/>StorageDead(_19)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>_80 = deref_copy (_1.1: &amp;mut instructions::keeper::ForceCancelOrder&lt;'_&gt;)<br/>_50 = &amp;((*_80).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_81 = deref_copy (*_50)<br/>_111 = (((_81.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_49 = &amp;(*_111)<br/></td></tr><tr><td align="left">_48 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _49)</td></tr></table>>];
    bb23__0_9208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">_47 = &amp;(*_48)<br/>StorageDead(_49)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>_82 = deref_copy (_1.1: &amp;mut instructions::keeper::ForceCancelOrder&lt;'_&gt;)<br/>_52 = &amp;((*_82).3: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/>_51 = &amp;(*_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>_54 = &amp;_13<br/>_53 = &amp;(*_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>_56 = &amp;_12<br/>_55 = &amp;(*_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>_58 = &amp;mut _14<br/>_57 = &amp;mut (*_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>_83 = deref_copy (_1.1: &amp;mut instructions::keeper::ForceCancelOrder&lt;'_&gt;)<br/>_60 = &amp;((*_83).2: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/>_59 = &amp;(*_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/></td></tr><tr><td align="left">_65 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb24__0_9208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left">_64 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _65)</td></tr></table>>];
    bb25__0_9208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">_84 = const true<br/>_85 = const true<br/>StorageDead(_65)<br/>_66 = discriminant(_64)<br/></td></tr><tr><td align="left">switchInt(move _66)</td></tr></table>>];
    bb26__0_9208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_70)<br/>_70 = move ((_64 as Continue).0: anchor_lang::prelude::Clock)<br/>_63 = move _70<br/>StorageDead(_70)<br/>_62 = &amp;_63<br/>_61 = &amp;(*_62)<br/></td></tr><tr><td align="left">_46 = controller::orders::force_cancel_orders(move _47, move _51, move _53, move _55, move _57, move _59, move _61)</td></tr></table>>];
    bb27__0_9208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_67)<br/>_67 = move ((_64 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_69)<br/>_69 = move _67<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _69)</td></tr></table>>];
    bb28__0_9208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageDead(_67)<br/>StorageDead(_61)<br/>StorageDead(_59)<br/>StorageDead(_57)<br/>StorageDead(_55)<br/>StorageDead(_53)<br/>StorageDead(_51)<br/>StorageDead(_47)<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_9208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_59)<br/>StorageDead(_57)<br/>StorageDead(_55)<br/>StorageDead(_53)<br/>StorageDead(_51)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">_45 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _46)</td></tr></table>>];
    bb30__0_9208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>_71 = discriminant(_45)<br/></td></tr><tr><td align="left">switchInt(move _71)</td></tr></table>>];
    bb31__0_9208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_75)<br/>_75 = ((_45 as Continue).0: ())<br/>_44 = _75<br/>StorageDead(_75)<br/>_96 = discriminant(_64)<br/>_84 = const false<br/>_85 = const false<br/>StorageDead(_64)<br/>StorageDead(_63)<br/>StorageDead(_62)<br/>StorageDead(_60)<br/>StorageDead(_58)<br/>StorageDead(_56)<br/>StorageDead(_54)<br/>StorageDead(_52)<br/>StorageDead(_50)<br/>StorageDead(_48)<br/>StorageDead(_45)<br/>StorageDead(_44)<br/>StorageLive(_76)<br/>_76 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _76)<br/>StorageDead(_76)<br/></td></tr><tr><td align="left">drop(_14)</td></tr></table>>];
    bb32__0_9208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_72)<br/>_72 = ((_45 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_74)<br/>_74 = _72<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _74)</td></tr></table>>];
    bb33__0_9208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageDead(_72)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_9208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/></td></tr><tr><td align="left">drop(_13)</td></tr></table>>];
    bb35__0_9208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/></td></tr><tr><td align="left">drop(_12)</td></tr></table>>];
    bb36__0_9208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_9208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/></td></tr><tr><td align="left">drop(_13)</td></tr></table>>];
    bb38__0_9208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/></td></tr><tr><td align="left">drop(_12)</td></tr></table>>];
    bb39__0_9208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_9208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">_100 = discriminant(_31)<br/>_86 = const false<br/>_87 = const false<br/>StorageDead(_31)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">drop(_28)</td></tr></table>>];
    bb41__0_9208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">drop(_25)</td></tr></table>>];
    bb42__0_9208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_20)<br/>StorageDead(_19)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_9208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left">return</td></tr></table>>];
    bb44__0_9208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">44 (cleanup)</td></tr><tr><td align="left">drop(_25)</td></tr></table>>];
    bb45__0_9208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">45 (cleanup)</td></tr><tr><td align="left">drop(_14)</td></tr></table>>];
    bb46__0_9208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">46 (cleanup)</td></tr><tr><td align="left">drop(_13)</td></tr></table>>];
    bb47__0_9208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">47 (cleanup)</td></tr><tr><td align="left">drop(_12)</td></tr></table>>];
    bb48__0_9208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">48 (cleanup)</td></tr><tr><td align="left">drop(_28)</td></tr></table>>];
    bb49__0_9208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">49 (cleanup)</td></tr><tr><td align="left">drop(_25)</td></tr></table>>];
    bb50__0_9208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">50 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb51__0_9208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">_98 = discriminant(_64)<br/>_84 = const false<br/>_85 = const false<br/>StorageDead(_64)<br/>StorageDead(_63)<br/>StorageDead(_62)<br/>StorageDead(_60)<br/>StorageDead(_58)<br/>StorageDead(_56)<br/>StorageDead(_54)<br/>StorageDead(_52)<br/>StorageDead(_50)<br/>StorageDead(_48)<br/>StorageDead(_45)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">drop(_14)</td></tr></table>>];
    bb52__0_9208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">52 (cleanup)</td></tr><tr><td align="left" balign="left">_104 = discriminant(_64)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_9208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">53 (cleanup)</td></tr><tr><td align="left" balign="left">_107 = discriminant(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_9208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">54 (cleanup)</td></tr><tr><td align="left" balign="left">_108 = discriminant(_31)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb55__0_9208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">55 (cleanup)</td></tr><tr><td align="left" balign="left">_109 = discriminant(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_9208 -> bb1__0_9208 [label="return"];
    bb1__0_9208 -> bb2__0_9208 [label="return"];
    bb1__0_9208 -> bb50__0_9208 [label="unwind"];
    bb2__0_9208 -> bb3__0_9208 [label="0"];
    bb2__0_9208 -> bb5__0_9208 [label="1"];
    bb2__0_9208 -> bb4__0_9208 [label="otherwise"];
    bb3__0_9208 -> bb7__0_9208 [label="return"];
    bb5__0_9208 -> bb6__0_9208 [label="return"];
    bb5__0_9208 -> bb55__0_9208 [label="unwind"];
    bb6__0_9208 -> bb43__0_9208 [label=""];
    bb7__0_9208 -> bb8__0_9208 [label="return"];
    bb8__0_9208 -> bb9__0_9208 [label="return"];
    bb9__0_9208 -> bb10__0_9208 [label="return"];
    bb9__0_9208 -> bb49__0_9208 [label="unwind"];
    bb10__0_9208 -> bb11__0_9208 [label="return"];
    bb10__0_9208 -> bb48__0_9208 [label="unwind"];
    bb11__0_9208 -> bb12__0_9208 [label="return"];
    bb11__0_9208 -> bb48__0_9208 [label="unwind"];
    bb12__0_9208 -> bb13__0_9208 [label="0"];
    bb12__0_9208 -> bb14__0_9208 [label="1"];
    bb12__0_9208 -> bb4__0_9208 [label="otherwise"];
    bb13__0_9208 -> bb16__0_9208 [label="return"];
    bb13__0_9208 -> bb54__0_9208 [label="unwind"];
    bb14__0_9208 -> bb15__0_9208 [label="return"];
    bb14__0_9208 -> bb54__0_9208 [label="unwind"];
    bb15__0_9208 -> bb40__0_9208 [label=""];
    bb16__0_9208 -> bb17__0_9208 [label="return"];
    bb16__0_9208 -> bb54__0_9208 [label="unwind"];
    bb17__0_9208 -> bb18__0_9208 [label="0"];
    bb17__0_9208 -> bb19__0_9208 [label="1"];
    bb17__0_9208 -> bb4__0_9208 [label="otherwise"];
    bb18__0_9208 -> bb21__0_9208 [label="return"];
    bb18__0_9208 -> bb44__0_9208 [label="unwind"];
    bb19__0_9208 -> bb20__0_9208 [label="return"];
    bb19__0_9208 -> bb53__0_9208 [label="unwind"];
    bb20__0_9208 -> bb40__0_9208 [label=""];
    bb21__0_9208 -> bb22__0_9208 [label="return"];
    bb21__0_9208 -> bb45__0_9208 [label="unwind"];
    bb22__0_9208 -> bb23__0_9208 [label="return"];
    bb22__0_9208 -> bb45__0_9208 [label="unwind"];
    bb23__0_9208 -> bb24__0_9208 [label="return"];
    bb23__0_9208 -> bb45__0_9208 [label="unwind"];
    bb24__0_9208 -> bb25__0_9208 [label="return"];
    bb24__0_9208 -> bb45__0_9208 [label="unwind"];
    bb25__0_9208 -> bb26__0_9208 [label="0"];
    bb25__0_9208 -> bb27__0_9208 [label="1"];
    bb25__0_9208 -> bb4__0_9208 [label="otherwise"];
    bb26__0_9208 -> bb29__0_9208 [label="return"];
    bb26__0_9208 -> bb52__0_9208 [label="unwind"];
    bb27__0_9208 -> bb28__0_9208 [label="return"];
    bb27__0_9208 -> bb52__0_9208 [label="unwind"];
    bb28__0_9208 -> bb51__0_9208 [label=""];
    bb29__0_9208 -> bb30__0_9208 [label="return"];
    bb29__0_9208 -> bb52__0_9208 [label="unwind"];
    bb30__0_9208 -> bb31__0_9208 [label="0"];
    bb30__0_9208 -> bb32__0_9208 [label="1"];
    bb30__0_9208 -> bb4__0_9208 [label="otherwise"];
    bb31__0_9208 -> bb34__0_9208 [label="return"];
    bb31__0_9208 -> bb46__0_9208 [label="unwind"];
    bb32__0_9208 -> bb33__0_9208 [label="return"];
    bb32__0_9208 -> bb52__0_9208 [label="unwind"];
    bb33__0_9208 -> bb51__0_9208 [label=""];
    bb34__0_9208 -> bb35__0_9208 [label="return"];
    bb34__0_9208 -> bb47__0_9208 [label="unwind"];
    bb35__0_9208 -> bb36__0_9208 [label="return"];
    bb35__0_9208 -> bb50__0_9208 [label="unwind"];
    bb36__0_9208 -> bb43__0_9208 [label=""];
    bb37__0_9208 -> bb38__0_9208 [label="return"];
    bb37__0_9208 -> bb47__0_9208 [label="unwind"];
    bb38__0_9208 -> bb39__0_9208 [label="return"];
    bb38__0_9208 -> bb50__0_9208 [label="unwind"];
    bb39__0_9208 -> bb43__0_9208 [label=""];
    bb40__0_9208 -> bb41__0_9208 [label="return"];
    bb40__0_9208 -> bb49__0_9208 [label="unwind"];
    bb41__0_9208 -> bb42__0_9208 [label="return"];
    bb41__0_9208 -> bb50__0_9208 [label="unwind"];
    bb42__0_9208 -> bb43__0_9208 [label=""];
    bb44__0_9208 -> bb45__0_9208 [label="return"];
    bb45__0_9208 -> bb46__0_9208 [label="return"];
    bb46__0_9208 -> bb47__0_9208 [label="return"];
    bb47__0_9208 -> bb50__0_9208 [label="return"];
    bb48__0_9208 -> bb49__0_9208 [label="return"];
    bb49__0_9208 -> bb50__0_9208 [label="return"];
    bb51__0_9208 -> bb37__0_9208 [label="return"];
    bb51__0_9208 -> bb46__0_9208 [label="unwind"];
    bb52__0_9208 -> bb45__0_9208 [label=""];
    bb53__0_9208 -> bb54__0_9208 [label=""];
    bb54__0_9208 -> bb48__0_9208 [label=""];
    bb55__0_9208 -> bb50__0_9208 [label=""];
}
