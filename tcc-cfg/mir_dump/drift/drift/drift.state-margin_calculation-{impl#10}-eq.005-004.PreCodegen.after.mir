// MIR for `margin_calculation::<impl at programs/drift/src/state/margin_calculation.rs:40:10: 40:19>::eq` after PreCodegen

fn margin_calculation::<impl at programs/drift/src/state/margin_calculation.rs:40:10: 40:19>::eq(_1: &MarketIdentifier, _2: &MarketIdentifier) -> bool {
    debug self => _1;
    debug other => _2;
    let mut _0: bool;
    let mut _3: bool;
    let mut _4: &state::user::MarketType;
    let mut _5: &state::user::MarketType;
    let mut _6: u16;
    let mut _7: u16;

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        _4 = &((*_1).0: state::user::MarketType);
        StorageLive(_5);
        _5 = &((*_2).0: state::user::MarketType);
        _3 = <state::user::MarketType as PartialEq>::eq(move _4, move _5) -> [return: bb1, unwind continue];
    }

    bb1: {
        switchInt(move _3) -> [0: bb3, otherwise: bb2];
    }

    bb2: {
        StorageDead(_5);
        StorageDead(_4);
        StorageLive(_6);
        _6 = ((*_1).1: u16);
        StorageLive(_7);
        _7 = ((*_2).1: u16);
        _0 = Eq(move _6, move _7);
        StorageDead(_7);
        StorageDead(_6);
        goto -> bb4;
    }

    bb3: {
        StorageDead(_5);
        StorageDead(_4);
        _0 = const false;
        goto -> bb4;
    }

    bb4: {
        StorageDead(_3);
        return;
    }
}
