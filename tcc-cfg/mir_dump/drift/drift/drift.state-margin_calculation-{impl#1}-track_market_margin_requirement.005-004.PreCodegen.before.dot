digraph Mir_0_3437 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn MarginContext::track_market_margin_requirement(_1: state::margin_calculation::MarginContext, _2: state::margin_calculation::MarketIdentifier) -&gt; std::result::Result&lt;state::margin_calculation::MarginContext, error::ErrorCode&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: isize;<br align="left"/>let _5: &amp;ReErased mut std::option::Option&lt;state::margin_calculation::MarketIdentifier&gt;;<br align="left"/>let mut _6: std::option::Option&lt;state::margin_calculation::MarketIdentifier&gt;;<br align="left"/>let mut _7: state::margin_calculation::MarketIdentifier;<br align="left"/>let mut _8: !;<br align="left"/>let _9: ();<br align="left"/>let mut _10: &amp;ReErased str;<br align="left"/>let _11: &amp;ReErased str;<br align="left"/>let mut _12: error::ErrorCode;<br align="left"/>let mut _13: state::margin_calculation::MarginContext;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug market_identifier =&gt; _2;<br align="left"/>debug market_to_track =&gt; _5;<br align="left"/>>;
    bb0__0_3437 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>_4 = discriminant((_1.1: state::margin_calculation::MarginCalculationMode))<br/></td></tr><tr><td align="left">switchInt(move _4)</td></tr></table>>];
    bb1__0_3437 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = const &quot;Cant track market outside of liquidation mode&quot;<br/>_10 = &amp;(*_11)<br/></td></tr><tr><td align="left">_9 = solana_program::log::sol_log(move _10)</td></tr></table>>];
    bb2__0_3437 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>_5 = &amp;mut (((_1.1: state::margin_calculation::MarginCalculationMode) as Liquidation).0: std::option::Option&lt;state::margin_calculation::MarketIdentifier&gt;)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = _2<br/>_6 = Option::&lt;MarketIdentifier&gt;::Some(move _7)<br/>StorageDead(_7)<br/>(*_5) = move _6<br/>StorageDead(_6)<br/>_3 = const ()<br/>StorageDead(_5)<br/>StorageDead(_3)<br/>StorageLive(_13)<br/>_13 = _1<br/>_0 = std::result::Result::&lt;MarginContext, error::ErrorCode&gt;::Ok(move _13)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb3__0_3437 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_11)<br/>StorageDead(_9)<br/>StorageLive(_12)<br/>_12 = error::ErrorCode::InvalidMarginCalculation<br/>_0 = std::result::Result::&lt;MarginContext, error::ErrorCode&gt;::Err(move _12)<br/>StorageDead(_12)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb4__0_3437 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_3437 -> bb2__0_3437 [label="1"];
    bb0__0_3437 -> bb1__0_3437 [label="otherwise"];
    bb1__0_3437 -> bb3__0_3437 [label="return"];
    bb2__0_3437 -> bb4__0_3437 [label=""];
    bb3__0_3437 -> bb4__0_3437 [label=""];
}
