// MIR for `state::user::<impl at programs/drift/src/state/user.rs:2046:10: 2046:17>::default` before PreCodegen

fn state::user::<impl at programs/drift/src/state/user.rs:2046:10: 2046:17>::default() -> FuelOverflow {
    let mut _0: state::user::FuelOverflow;
    let mut _1: anchor_lang::prelude::Pubkey;
    let mut _2: u128;
    let mut _3: u128;
    let mut _4: u128;
    let mut _5: u128;
    let mut _6: u128;
    let mut _7: u128;
    let mut _8: u32;
    let mut _9: u32;
    let mut _10: [u128; 6];

    bb0: {
        StorageLive(_1);
        _1 = <anchor_lang::prelude::Pubkey as Default>::default() -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageLive(_2);
        _2 = <u128 as Default>::default() -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageLive(_3);
        _3 = <u128 as Default>::default() -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageLive(_4);
        _4 = <u128 as Default>::default() -> [return: bb4, unwind continue];
    }

    bb4: {
        StorageLive(_5);
        _5 = <u128 as Default>::default() -> [return: bb5, unwind continue];
    }

    bb5: {
        StorageLive(_6);
        _6 = <u128 as Default>::default() -> [return: bb6, unwind continue];
    }

    bb6: {
        StorageLive(_7);
        _7 = <u128 as Default>::default() -> [return: bb7, unwind continue];
    }

    bb7: {
        StorageLive(_8);
        _8 = <u32 as Default>::default() -> [return: bb8, unwind continue];
    }

    bb8: {
        StorageLive(_9);
        _9 = <u32 as Default>::default() -> [return: bb9, unwind continue];
    }

    bb9: {
        StorageLive(_10);
        _10 = <[u128; 6] as Default>::default() -> [return: bb10, unwind continue];
    }

    bb10: {
        _0 = FuelOverflow { authority: move _1, fuel_insurance: move _2, fuel_deposits: move _3, fuel_borrows: move _4, fuel_positions: move _5, fuel_taker: move _6, fuel_maker: move _7, last_fuel_sweep_ts: move _8, last_reset_ts: move _9, padding: move _10 };
        StorageDead(_10);
        StorageDead(_9);
        StorageDead(_8);
        StorageDead(_7);
        StorageDead(_6);
        StorageDead(_5);
        StorageDead(_4);
        StorageDead(_3);
        StorageDead(_2);
        StorageDead(_1);
        return;
    }
}
