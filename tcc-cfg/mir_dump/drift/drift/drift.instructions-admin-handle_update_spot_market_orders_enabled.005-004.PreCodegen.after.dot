digraph Mir_0_5599 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn admin::handle_update_spot_market_orders_enabled(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::admin::AdminUpdateSpotMarket&lt;ReErased&gt;&gt;, _2: bool) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _5: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _6: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _7: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _8: isize;<br align="left"/>let _9: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _10: !;<br align="left"/>let mut _11: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _12: ();<br align="left"/>let _13: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _14: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _15: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _16: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _17: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _18: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _19: Closure(DefId(0:5600 ~ drift[d311]::instructions::admin::handle_update_spot_market_orders_enabled::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _20: isize;<br align="left"/>let _21: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _22: !;<br align="left"/>let mut _23: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _24: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _25: ();<br align="left"/>let mut _26: &amp;ReErased str;<br align="left"/>let _27: &amp;ReErased str;<br align="left"/>let mut _28: &amp;ReErased std::string::String;<br align="left"/>let _29: &amp;ReErased std::string::String;<br align="left"/>let _30: std::string::String;<br align="left"/>let _31: std::string::String;<br align="left"/>let mut _32: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _33: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _34: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _35: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _36: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _37: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _38: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _39: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _40: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _41: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _42: &amp;ReErased u16;<br align="left"/>let _43: &amp;ReErased u16;<br align="left"/>let _44: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _45: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _46: ();<br align="left"/>let mut _47: &amp;ReErased str;<br align="left"/>let _48: &amp;ReErased str;<br align="left"/>let mut _49: &amp;ReErased std::string::String;<br align="left"/>let _50: &amp;ReErased std::string::String;<br align="left"/>let _51: std::string::String;<br align="left"/>let _52: std::string::String;<br align="left"/>let mut _53: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _54: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _55: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _56: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _57: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _58: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _59: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _60: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _61: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _62: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _63: &amp;ReErased bool;<br align="left"/>let _64: &amp;ReErased bool;<br align="left"/>let _65: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _66: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _67: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _68: &amp;ReErased bool;<br align="left"/>let _69: &amp;ReErased bool;<br align="left"/>let mut _70: bool;<br align="left"/>let mut _71: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _72: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _73: ();<br align="left"/>let mut _74: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _75: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _76: &amp;ReErased mut instructions::admin::AdminUpdateSpotMarket&lt;ReErased&gt;;<br align="left"/>let mut _77: &amp;ReErased mut instructions::admin::AdminUpdateSpotMarket&lt;ReErased&gt;;<br align="left"/>let mut _78: isize;<br align="left"/>let mut _79: isize;<br align="left"/>let mut _80: isize;<br align="left"/>let mut _81: isize;<br align="left"/>let mut _82: isize;<br align="left"/>let mut _83: isize;<br align="left"/>let mut _84: isize;<br align="left"/>let mut _85: isize;<br align="left"/>let mut _86: isize;<br align="left"/>let mut _87: isize;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug orders_enabled =&gt; _2;<br align="left"/>debug residual =&gt; _9;<br align="left"/>debug val =&gt; _12;<br align="left"/>debug spot_market =&gt; _13;<br align="left"/>debug residual =&gt; _21;<br align="left"/>debug val =&gt; _24;<br align="left"/>debug res =&gt; _31;<br align="left"/>debug res =&gt; _52;<br align="left"/>>;
    bb0__0_5599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_76 = deref_copy (_1.1: &amp;mut instructions::admin::AdminUpdateSpotMarket&lt;'_&gt;)<br/>_7 = &amp;((*_76).2: anchor_lang::prelude::AccountLoader&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_6 = &amp;(*_7)<br/></td></tr><tr><td align="left">_5 = constraints::spot_market_valid(move _6)</td></tr></table>>];
    bb1__0_5599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb2__0_5599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_8 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb3__0_5599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_4 as Continue).0: ())<br/>_3 = _12<br/>StorageDead(_12)<br/>_78 = discriminant(_4)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_77 = deref_copy (_1.1: &amp;mut instructions::admin::AdminUpdateSpotMarket&lt;'_&gt;)<br/>_18 = &amp;((*_77).2: anchor_lang::prelude::AccountLoader&lt;'_, state::spot_market::SpotMarket&gt;)<br/></td></tr><tr><td align="left">_17 = anchor_lang::prelude::AccountLoader::&lt;'_, SpotMarket&gt;::load_mut(move _18)</td></tr></table>>];
    bb4__0_5599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_5599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>_9 = move ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_11)<br/>_11 = move _9<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _11)</td></tr></table>>];
    bb6__0_5599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_9)<br/>_84 = discriminant(_4)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_5599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageLive(_19)<br/>_19 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_16 = std::result::Result::&lt;RefMut&lt;'_, SpotMarket&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _17, move _19)</td></tr></table>>];
    bb8__0_5599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">_15 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _16)</td></tr></table>>];
    bb9__0_5599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>_20 = discriminant(_15)<br/></td></tr><tr><td align="left">switchInt(move _20)</td></tr></table>>];
    bb10__0_5599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_24)<br/>_24 = move ((_15 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_14 = move _24<br/>StorageDead(_24)<br/>_13 = &amp;mut _14<br/>_82 = discriminant(_15)<br/>StorageDead(_15)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>_75 = const _<br/>_35 = &amp;(*_75)<br/>_34 = &amp;(*_35)<br/>_33 = move _34 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_34)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>_45 = &amp;(*_13)<br/></td></tr><tr><td align="left">_44 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _45)</td></tr></table>>];
    bb11__0_5599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = ((_15 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_23)<br/>_23 = _21<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _23)</td></tr></table>>];
    bb12__0_5599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_21)<br/>_80 = discriminant(_15)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_5599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>_43 = &amp;((*_44).42: u16)<br/>_42 = &amp;(*_43)<br/></td></tr><tr><td align="left">_41 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _42)</td></tr></table>>];
    bb14__0_5599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>_40 = [move _41]<br/>StorageDead(_41)<br/>_39 = &amp;_40<br/>_38 = &amp;(*_39)<br/>_37 = move _38 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">_32 = Arguments::&lt;'_&gt;::new_v1(move _33, move _37)</td></tr></table>>];
    bb15__0_5599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">_31 = format(move _32)</td></tr></table>>];
    bb16__0_5599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_44)<br/>StorageDead(_43)<br/>StorageDead(_40)<br/>StorageDead(_39)<br/>StorageDead(_35)<br/>_30 = move _31<br/>StorageDead(_31)<br/>_29 = &amp;_30<br/>_28 = &amp;(*_29)<br/></td></tr><tr><td align="left">_27 = &lt;String as Deref&gt;::deref(move _28)</td></tr></table>>];
    bb17__0_5599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">_26 = &amp;(*_27)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">_25 = solana_program::log::sol_log(move _26)</td></tr></table>>];
    bb18__0_5599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/></td></tr><tr><td align="left">drop(_30)</td></tr></table>>];
    bb19__0_5599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_29)<br/>StorageDead(_27)<br/>StorageDead(_25)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>_74 = const _<br/>_56 = &amp;(*_74)<br/>_55 = &amp;(*_56)<br/>_54 = move _55 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_55)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>_66 = &amp;(*_13)<br/></td></tr><tr><td align="left">_65 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _66)</td></tr></table>>];
    bb20__0_5599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>_64 = &amp;((*_65).43: bool)<br/>_63 = &amp;(*_64)<br/></td></tr><tr><td align="left">_62 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;bool&gt;(move _63)</td></tr></table>>];
    bb21__0_5599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>_69 = &amp;_2<br/>_68 = &amp;(*_69)<br/></td></tr><tr><td align="left">_67 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;bool&gt;(move _68)</td></tr></table>>];
    bb22__0_5599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>_61 = [move _62, move _67]<br/>StorageDead(_67)<br/>StorageDead(_62)<br/>_60 = &amp;_61<br/>_59 = &amp;(*_60)<br/>_58 = move _59 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_59)<br/></td></tr><tr><td align="left">_53 = Arguments::&lt;'_&gt;::new_v1(move _54, move _58)</td></tr></table>>];
    bb23__0_5599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">_52 = format(move _53)</td></tr></table>>];
    bb24__0_5599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_69)<br/>StorageDead(_65)<br/>StorageDead(_64)<br/>StorageDead(_61)<br/>StorageDead(_60)<br/>StorageDead(_56)<br/>_51 = move _52<br/>StorageDead(_52)<br/>_50 = &amp;_51<br/>_49 = &amp;(*_50)<br/></td></tr><tr><td align="left">_48 = &lt;String as Deref&gt;::deref(move _49)</td></tr></table>>];
    bb25__0_5599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">_47 = &amp;(*_48)<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">_46 = solana_program::log::sol_log(move _47)</td></tr></table>>];
    bb26__0_5599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/></td></tr><tr><td align="left">drop(_51)</td></tr></table>>];
    bb27__0_5599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageDead(_50)<br/>StorageDead(_48)<br/>StorageDead(_46)<br/>StorageLive(_70)<br/>_70 = _2<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>_72 = &amp;mut (*_13)<br/></td></tr><tr><td align="left">_71 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _72)</td></tr></table>>];
    bb28__0_5599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>((*_71).43: bool) = move _70<br/>StorageDead(_70)<br/>StorageDead(_71)<br/>StorageLive(_73)<br/>_73 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _73)<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">drop(_14)</td></tr></table>>];
    bb29__0_5599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_5599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left">return</td></tr></table>>];
    bb31__0_5599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">31 (cleanup)</td></tr><tr><td align="left">drop(_51)</td></tr></table>>];
    bb32__0_5599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">32 (cleanup)</td></tr><tr><td align="left">drop(_30)</td></tr></table>>];
    bb33__0_5599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">33 (cleanup)</td></tr><tr><td align="left">drop(_14)</td></tr></table>>];
    bb34__0_5599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">34 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb35__0_5599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">35 (cleanup)</td></tr><tr><td align="left" balign="left">_86 = discriminant(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_5599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">36 (cleanup)</td></tr><tr><td align="left" balign="left">_87 = discriminant(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_5599 -> bb1__0_5599 [label="return"];
    bb1__0_5599 -> bb2__0_5599 [label="return"];
    bb1__0_5599 -> bb34__0_5599 [label="unwind"];
    bb2__0_5599 -> bb3__0_5599 [label="0"];
    bb2__0_5599 -> bb5__0_5599 [label="1"];
    bb2__0_5599 -> bb4__0_5599 [label="otherwise"];
    bb3__0_5599 -> bb7__0_5599 [label="return"];
    bb5__0_5599 -> bb6__0_5599 [label="return"];
    bb5__0_5599 -> bb36__0_5599 [label="unwind"];
    bb6__0_5599 -> bb30__0_5599 [label=""];
    bb7__0_5599 -> bb8__0_5599 [label="return"];
    bb7__0_5599 -> bb34__0_5599 [label="unwind"];
    bb8__0_5599 -> bb9__0_5599 [label="return"];
    bb8__0_5599 -> bb34__0_5599 [label="unwind"];
    bb9__0_5599 -> bb10__0_5599 [label="0"];
    bb9__0_5599 -> bb11__0_5599 [label="1"];
    bb9__0_5599 -> bb4__0_5599 [label="otherwise"];
    bb10__0_5599 -> bb13__0_5599 [label="return"];
    bb10__0_5599 -> bb33__0_5599 [label="unwind"];
    bb11__0_5599 -> bb12__0_5599 [label="return"];
    bb11__0_5599 -> bb35__0_5599 [label="unwind"];
    bb12__0_5599 -> bb30__0_5599 [label=""];
    bb13__0_5599 -> bb14__0_5599 [label="return"];
    bb13__0_5599 -> bb33__0_5599 [label="unwind"];
    bb14__0_5599 -> bb15__0_5599 [label="return"];
    bb14__0_5599 -> bb33__0_5599 [label="unwind"];
    bb15__0_5599 -> bb16__0_5599 [label="return"];
    bb15__0_5599 -> bb33__0_5599 [label="unwind"];
    bb16__0_5599 -> bb17__0_5599 [label="return"];
    bb16__0_5599 -> bb32__0_5599 [label="unwind"];
    bb17__0_5599 -> bb18__0_5599 [label="return"];
    bb17__0_5599 -> bb32__0_5599 [label="unwind"];
    bb18__0_5599 -> bb19__0_5599 [label="return"];
    bb18__0_5599 -> bb33__0_5599 [label="unwind"];
    bb19__0_5599 -> bb20__0_5599 [label="return"];
    bb19__0_5599 -> bb33__0_5599 [label="unwind"];
    bb20__0_5599 -> bb21__0_5599 [label="return"];
    bb20__0_5599 -> bb33__0_5599 [label="unwind"];
    bb21__0_5599 -> bb22__0_5599 [label="return"];
    bb21__0_5599 -> bb33__0_5599 [label="unwind"];
    bb22__0_5599 -> bb23__0_5599 [label="return"];
    bb22__0_5599 -> bb33__0_5599 [label="unwind"];
    bb23__0_5599 -> bb24__0_5599 [label="return"];
    bb23__0_5599 -> bb33__0_5599 [label="unwind"];
    bb24__0_5599 -> bb25__0_5599 [label="return"];
    bb24__0_5599 -> bb31__0_5599 [label="unwind"];
    bb25__0_5599 -> bb26__0_5599 [label="return"];
    bb25__0_5599 -> bb31__0_5599 [label="unwind"];
    bb26__0_5599 -> bb27__0_5599 [label="return"];
    bb26__0_5599 -> bb33__0_5599 [label="unwind"];
    bb27__0_5599 -> bb28__0_5599 [label="return"];
    bb27__0_5599 -> bb33__0_5599 [label="unwind"];
    bb28__0_5599 -> bb29__0_5599 [label="return"];
    bb28__0_5599 -> bb34__0_5599 [label="unwind"];
    bb29__0_5599 -> bb30__0_5599 [label=""];
    bb31__0_5599 -> bb33__0_5599 [label="return"];
    bb32__0_5599 -> bb33__0_5599 [label="return"];
    bb33__0_5599 -> bb34__0_5599 [label="return"];
    bb35__0_5599 -> bb34__0_5599 [label=""];
    bb36__0_5599 -> bb34__0_5599 [label=""];
}
