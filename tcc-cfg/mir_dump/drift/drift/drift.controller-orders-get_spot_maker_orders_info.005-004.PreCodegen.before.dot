digraph Mir_0_561 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn get_spot_maker_orders_info(_1: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;, _2: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;, _3: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;, _4: &amp;ReErased state::user_map::UserMap&lt;ReErased&gt;, _5: &amp;ReErased anchor_lang::prelude::Pubkey, _6: &amp;ReErased state::user::Order, _7: &amp;ReErased mut std::option::Option&lt;&amp;ReErased mut state::user::User&gt;, _8: &amp;ReErased anchor_lang::prelude::Pubkey, _9: u64, _10: i64, _11: std::option::Option&lt;u32&gt;, _12: i64, _13: u64) -&gt; std::result::Result&lt;std::vec::Vec&lt;(anchor_lang::prelude::Pubkey, usize, u64), std::alloc::Global&gt;, error::ErrorCode&gt;<br align="left"/>let _14: controller::position::PositionDirection;<br align="left"/>let mut _15: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let mut _16: std::vec::Vec&lt;(anchor_lang::prelude::Pubkey, usize, u64), std::alloc::Global&gt;;<br align="left"/>let _17: ();<br align="left"/>let mut _18: std::collections::btree_map::Iter&lt;ReErased, anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _19: std::collections::btree_map::Iter&lt;ReErased, anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _20: &amp;ReErased std::collections::BTreeMap&lt;anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _21: std::collections::btree_map::Iter&lt;ReErased, anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _22: ();<br align="left"/>let _23: ();<br align="left"/>let mut _24: std::option::Option&lt;(&amp;ReErased anchor_lang::prelude::Pubkey, &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;)&gt;;<br align="left"/>let mut _25: &amp;ReErased mut std::collections::btree_map::Iter&lt;ReErased, anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _26: &amp;ReErased mut std::collections::btree_map::Iter&lt;ReErased, anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _27: isize;<br align="left"/>let mut _28: !;<br align="left"/>let _29: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _30: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _31: ();<br align="left"/>let mut _32: bool;<br align="left"/>let mut _33: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _34: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _35: !;<br align="left"/>let mut _36: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _37: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _38: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _39: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _40: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _41: Closure(DefId(0:4723 ~ drift[d311]::controller::orders::get_spot_maker_orders_info::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _42: isize;<br align="left"/>let _43: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _44: !;<br align="left"/>let mut _45: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _46: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _47: ();<br align="left"/>let mut _48: bool;<br align="left"/>let mut _49: &amp;ReErased state::user::User;<br align="left"/>let _50: &amp;ReErased state::user::User;<br align="left"/>let mut _51: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _52: bool;<br align="left"/>let mut _53: &amp;ReErased state::user::User;<br align="left"/>let _54: &amp;ReErased state::user::User;<br align="left"/>let mut _55: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _56: !;<br align="left"/>let _57: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _58: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _59: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _60: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _61: &amp;ReErased u16;<br align="left"/>let _62: &amp;ReErased u16;<br align="left"/>let mut _63: isize;<br align="left"/>let _64: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _65: !;<br align="left"/>let mut _66: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _67: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _68: std::vec::Vec&lt;(usize, u64), std::alloc::Global&gt;;<br align="left"/>let mut _69: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::vec::Vec&lt;(usize, u64), std::alloc::Global&gt;&gt;;<br align="left"/>let mut _70: std::result::Result&lt;std::vec::Vec&lt;(usize, u64), std::alloc::Global&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _71: &amp;ReErased state::user::User;<br align="left"/>let _72: &amp;ReErased state::user::User;<br align="left"/>let mut _73: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _74: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _75: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let _76: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let mut _77: &amp;ReErased state::user::MarketType;<br align="left"/>let _78: &amp;ReErased state::user::MarketType;<br align="left"/>let _79: state::user::MarketType;<br align="left"/>let mut _80: u16;<br align="left"/>let mut _81: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _82: i64;<br align="left"/>let mut _83: u64;<br align="left"/>let mut _84: u64;<br align="left"/>let mut _85: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _86: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _87: std::option::Option&lt;state::protected_maker_mode_config::ProtectedMakerParams&gt;;<br align="left"/>let mut _88: isize;<br align="left"/>let _89: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _90: !;<br align="left"/>let mut _91: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _92: std::vec::Vec&lt;(usize, u64), std::alloc::Global&gt;;<br align="left"/>let _93: ();<br align="left"/>let mut _94: bool;<br align="left"/>let mut _95: &amp;ReErased std::vec::Vec&lt;(usize, u64), std::alloc::Global&gt;;<br align="left"/>let mut _96: !;<br align="left"/>let _97: ();<br align="left"/>let mut _98: &amp;ReErased mut state::user::User;<br align="left"/>let mut _99: &amp;ReErased mut state::user::User;<br align="left"/>let mut _100: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _101: u64;<br align="left"/>let _102: u32;<br align="left"/>let mut _103: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _104: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _105: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _106: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _107: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _108: &amp;ReErased math::margin::MarginRequirementType;<br align="left"/>let _109: &amp;ReErased math::margin::MarginRequirementType;<br align="left"/>let _110: math::margin::MarginRequirementType;<br align="left"/>let mut _111: isize;<br align="left"/>let _112: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _113: !;<br align="left"/>let mut _114: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _115: u32;<br align="left"/>let _116: u64;<br align="left"/>let mut _117: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _118: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _119: i128;<br align="left"/>let mut _120: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _121: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _122: &amp;ReErased state::user::SpotPosition;<br align="left"/>let _123: &amp;ReErased state::user::SpotPosition;<br align="left"/>let mut _124: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::user::SpotPosition&gt;;<br align="left"/>let mut _125: std::result::Result&lt;&amp;ReErased state::user::SpotPosition, error::ErrorCode&gt;;<br align="left"/>let mut _126: &amp;ReErased state::user::User;<br align="left"/>let _127: &amp;ReErased state::user::User;<br align="left"/>let mut _128: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _129: u16;<br align="left"/>let mut _130: isize;<br align="left"/>let _131: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _132: !;<br align="left"/>let mut _133: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _134: &amp;ReErased state::user::SpotPosition;<br align="left"/>let mut _135: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _136: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _137: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _138: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _139: isize;<br align="left"/>let _140: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _141: !;<br align="left"/>let mut _142: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _143: i128;<br align="left"/>let _144: ();<br align="left"/>let mut _145: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _146: std::slice::Iter&lt;ReErased, (usize, u64)&gt;;<br align="left"/>let mut _147: std::slice::Iter&lt;ReErased, (usize, u64)&gt;;<br align="left"/>let mut _148: &amp;ReErased [(usize, u64)];<br align="left"/>let _149: &amp;ReErased [(usize, u64)];<br align="left"/>let mut _150: &amp;ReErased std::vec::Vec&lt;(usize, u64), std::alloc::Global&gt;;<br align="left"/>let mut _151: std::slice::Iter&lt;ReErased, (usize, u64)&gt;;<br align="left"/>let _152: ();<br align="left"/>let mut _153: std::option::Option&lt;&amp;ReErased (usize, u64)&gt;;<br align="left"/>let mut _154: &amp;ReErased mut std::slice::Iter&lt;ReErased, (usize, u64)&gt;;<br align="left"/>let mut _155: &amp;ReErased mut std::slice::Iter&lt;ReErased, (usize, u64)&gt;;<br align="left"/>let mut _156: isize;<br align="left"/>let mut _157: !;<br align="left"/>let _158: &amp;ReErased usize;<br align="left"/>let _159: &amp;ReErased u64;<br align="left"/>let _160: usize;<br align="left"/>let _161: u64;<br align="left"/>let _162: &amp;ReErased state::user::Order;<br align="left"/>let _163: &amp;ReErased state::user::User;<br align="left"/>let mut _164: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _165: usize;<br align="left"/>let mut _166: usize;<br align="left"/>let mut _167: bool;<br align="left"/>let _168: ();<br align="left"/>let mut _169: bool;<br align="left"/>let mut _170: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _171: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _172: &amp;ReErased state::user::Order;<br align="left"/>let mut _173: &amp;ReErased state::user::Order;<br align="left"/>let mut _174: u64;<br align="left"/>let mut _175: isize;<br align="left"/>let _176: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _177: !;<br align="left"/>let mut _178: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _179: bool;<br align="left"/>let mut _180: !;<br align="left"/>let _181: ();<br align="left"/>let mut _182: bool;<br align="left"/>let mut _183: &amp;ReErased state::user::Order;<br align="left"/>let mut _184: &amp;ReErased state::user::Order;<br align="left"/>let mut _185: !;<br align="left"/>let _186: ();<br align="left"/>let mut _187: isize;<br align="left"/>let _188: u32;<br align="left"/>let mut _189: bool;<br align="left"/>let mut _190: u32;<br align="left"/>let mut _191: u32;<br align="left"/>let mut _192: !;<br align="left"/>let _193: bool;<br align="left"/>let mut _194: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _195: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _196: u64;<br align="left"/>let mut _197: controller::position::PositionDirection;<br align="left"/>let mut _198: i64;<br align="left"/>let mut _199: u32;<br align="left"/>let mut _200: isize;<br align="left"/>let _201: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _202: !;<br align="left"/>let mut _203: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _204: bool;<br align="left"/>let _205: bool;<br align="left"/>let mut _206: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _207: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _208: &amp;ReErased state::user::User;<br align="left"/>let _209: &amp;ReErased state::user::User;<br align="left"/>let mut _210: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _211: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _212: usize;<br align="left"/>let mut _213: i64;<br align="left"/>let mut _214: isize;<br align="left"/>let _215: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _216: !;<br align="left"/>let mut _217: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _218: bool;<br align="left"/>let _219: bool;<br align="left"/>let mut _220: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _221: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _222: &amp;ReErased state::user::Order;<br align="left"/>let _223: &amp;ReErased state::user::Order;<br align="left"/>let _224: &amp;ReErased state::user::User;<br align="left"/>let mut _225: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _226: usize;<br align="left"/>let mut _227: usize;<br align="left"/>let mut _228: bool;<br align="left"/>let mut _229: i64;<br align="left"/>let mut _230: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _231: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _232: i128;<br align="left"/>let mut _233: isize;<br align="left"/>let _234: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _235: !;<br align="left"/>let mut _236: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _237: i64;<br align="left"/>let mut _238: u64;<br align="left"/>let mut _239: isize;<br align="left"/>let _240: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _241: !;<br align="left"/>let mut _242: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _243: bool;<br align="left"/>let _244: ();<br align="left"/>let mut _245: bool;<br align="left"/>let mut _246: bool;<br align="left"/>let mut _247: bool;<br align="left"/>let mut _248: !;<br align="left"/>let _249: u64;<br align="left"/>let mut _250: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _251: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _252: &amp;ReErased mut state::user::User;<br align="left"/>let mut _253: &amp;ReErased mut state::user::User;<br align="left"/>let mut _254: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _255: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _256: std::option::Option&lt;&amp;ReErased mut state::user::User&gt;;<br align="left"/>let mut _257: &amp;ReErased mut std::option::Option&lt;&amp;ReErased mut state::user::User&gt;;<br align="left"/>let mut _258: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _259: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _260: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _261: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _262: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _263: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _264: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _265: isize;<br align="left"/>let _266: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _267: !;<br align="left"/>let mut _268: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _269: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _270: u64;<br align="left"/>let mut _271: u64;<br align="left"/>let mut _272: isize;<br align="left"/>let _273: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _274: !;<br align="left"/>let mut _275: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _276: u64;<br align="left"/>let _277: state::events::OrderActionExplanation;<br align="left"/>let mut _278: bool;<br align="left"/>let mut _279: bool;<br align="left"/>let _280: ();<br align="left"/>let mut _281: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _282: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _283: usize;<br align="left"/>let mut _284: &amp;ReErased mut state::user::User;<br align="left"/>let mut _285: &amp;ReErased mut state::user::User;<br align="left"/>let mut _286: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _287: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _288: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _289: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _290: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _291: i64;<br align="left"/>let mut _292: u64;<br align="left"/>let mut _293: state::events::OrderActionExplanation;<br align="left"/>let mut _294: std::option::Option&lt;&amp;ReErased anchor_lang::prelude::Pubkey&gt;;<br align="left"/>let mut _295: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _296: u64;<br align="left"/>let mut _297: isize;<br align="left"/>let _298: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _299: !;<br align="left"/>let mut _300: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _301: ();<br align="left"/>let _302: ();<br align="left"/>let mut _303: &amp;ReErased mut std::vec::Vec&lt;(anchor_lang::prelude::Pubkey, usize, u64), std::alloc::Global&gt;;<br align="left"/>let mut _304: &amp;ReErased mut std::vec::Vec&lt;(anchor_lang::prelude::Pubkey, usize, u64), std::alloc::Global&gt;;<br align="left"/>let mut _305: (anchor_lang::prelude::Pubkey, usize, u64);<br align="left"/>let mut _306: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _307: usize;<br align="left"/>let mut _308: u64;<br align="left"/>let mut _309: controller::position::PositionDirection;<br align="left"/>let mut _310: std::vec::Vec&lt;(anchor_lang::prelude::Pubkey, usize, u64), std::alloc::Global&gt;;<br align="left"/>let mut _311: &amp;ReErased math::margin::MarginRequirementType;<br align="left"/>let mut _312: &amp;ReErased state::user::MarketType;<br align="left"/>let mut _313: &amp;ReErased (usize, u64);<br align="left"/>let mut _314: &amp;ReErased (usize, u64);<br align="left"/>let mut _315: bool;<br align="left"/>let mut _316: bool;<br align="left"/>let mut _317: isize;<br align="left"/>let mut _318: isize;<br align="left"/>let mut _319: isize;<br align="left"/>let mut _320: isize;<br align="left"/>let mut _321: isize;<br align="left"/>let mut _322: isize;<br align="left"/>let mut _323: isize;<br align="left"/>let mut _324: isize;<br align="left"/>let mut _325: isize;<br align="left"/>let mut _326: isize;<br align="left"/>let mut _327: isize;<br align="left"/>let mut _328: isize;<br align="left"/>let mut _329: isize;<br align="left"/>let mut _330: isize;<br align="left"/>let mut _331: isize;<br align="left"/>let mut _332: isize;<br align="left"/>let mut _333: isize;<br align="left"/>let mut _334: isize;<br align="left"/>let mut _335: isize;<br align="left"/>let mut _336: isize;<br align="left"/>debug perp_market_map =&gt; _1;<br align="left"/>debug spot_market_map =&gt; _2;<br align="left"/>debug oracle_map =&gt; _3;<br align="left"/>debug makers_and_referrer =&gt; _4;<br align="left"/>debug taker_key =&gt; _5;<br align="left"/>debug taker_order =&gt; _6;<br align="left"/>debug filler =&gt; _7;<br align="left"/>debug filler_key =&gt; _8;<br align="left"/>debug filler_reward =&gt; _9;<br align="left"/>debug oracle_price =&gt; _10;<br align="left"/>debug jit_maker_order_id =&gt; _11;<br align="left"/>debug now =&gt; _12;<br align="left"/>debug slot =&gt; _13;<br align="left"/>debug maker_direction =&gt; _14;<br align="left"/>debug maker_orders_info =&gt; _16;<br align="left"/>debug iter =&gt; _21;<br align="left"/>debug maker_key =&gt; _29;<br align="left"/>debug user_account_loader =&gt; _30;<br align="left"/>debug maker =&gt; _36;<br align="left"/>debug residual =&gt; _43;<br align="left"/>debug val =&gt; _46;<br align="left"/>debug market =&gt; _57;<br align="left"/>debug residual =&gt; _64;<br align="left"/>debug val =&gt; _67;<br align="left"/>debug maker_order_price_and_indexes =&gt; _68;<br align="left"/>debug residual =&gt; _89;<br align="left"/>debug val =&gt; _92;<br align="left"/>debug initial_margin_ratio =&gt; _102;<br align="left"/>debug residual =&gt; _112;<br align="left"/>debug val =&gt; _115;<br align="left"/>debug step_size =&gt; _116;<br align="left"/>debug existing_base_asset_amount =&gt; _119;<br align="left"/>debug residual =&gt; _131;<br align="left"/>debug val =&gt; _134;<br align="left"/>debug residual =&gt; _140;<br align="left"/>debug val =&gt; _143;<br align="left"/>debug iter =&gt; _151;<br align="left"/>debug maker_order_index =&gt; _158;<br align="left"/>debug maker_order_price =&gt; _159;<br align="left"/>debug maker_order_index =&gt; _160;<br align="left"/>debug maker_order_price =&gt; _161;<br align="left"/>debug maker_order =&gt; _162;<br align="left"/>debug residual =&gt; _176;<br align="left"/>debug val =&gt; _179;<br align="left"/>debug jit_maker_order_id =&gt; _188;<br align="left"/>debug breaches_oracle_price_limits =&gt; _193;<br align="left"/>debug residual =&gt; _201;<br align="left"/>debug val =&gt; _204;<br align="left"/>debug should_expire_order =&gt; _205;<br align="left"/>debug residual =&gt; _215;<br align="left"/>debug val =&gt; _218;<br align="left"/>debug should_cancel_reduce_only_order =&gt; _219;<br align="left"/>debug residual =&gt; _234;<br align="left"/>debug val =&gt; _237;<br align="left"/>debug residual =&gt; _240;<br align="left"/>debug val =&gt; _243;<br align="left"/>debug filler_reward =&gt; _249;<br align="left"/>debug residual =&gt; _266;<br align="left"/>debug val =&gt; _269;<br align="left"/>debug residual =&gt; _273;<br align="left"/>debug val =&gt; _276;<br align="left"/>debug explanation =&gt; _277;<br align="left"/>debug residual =&gt; _298;<br align="left"/>debug val =&gt; _301;<br align="left"/>>;
    bb0__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_316 = const false<br/>_315 = const false<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = &amp;((*_6).17: controller::position::PositionDirection)<br/></td></tr><tr><td align="left">_14 = controller::position::PositionDirection::opposite(move _15)</td></tr></table>>];
    bb1__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageLive(_16)<br/></td></tr><tr><td align="left">_16 = Vec::&lt;(anchor_lang::prelude::Pubkey, usize, u64)&gt;::with_capacity(const 16_usize)</td></tr></table>>];
    bb2__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_20 = &amp;((*_4).0: std::collections::BTreeMap&lt;anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;&gt;)<br/></td></tr><tr><td align="left">_19 = BTreeMap::&lt;anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountLoader&lt;'_, User&gt;&gt;::iter(move _20)</td></tr></table>>];
    bb3__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/></td></tr><tr><td align="left">_18 = &lt;std::collections::btree_map::Iter&lt;'_, anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountLoader&lt;'_, User&gt;&gt; as IntoIterator&gt;::into_iter(move _19)</td></tr></table>>];
    bb4__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageLive(_21)<br/>_21 = move _18<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb5__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_26 = &amp;mut _21<br/>_25 = &amp;mut (*_26)<br/></td></tr><tr><td align="left">_24 = &lt;std::collections::btree_map::Iter&lt;'_, anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountLoader&lt;'_, User&gt;&gt; as Iterator&gt;::next(move _25)</td></tr></table>>];
    bb6__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>_27 = discriminant(_24)<br/></td></tr><tr><td align="left">switchInt(move _27)</td></tr></table>>];
    bb7__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_29)<br/>_29 = (((_24 as Some).0: (&amp;anchor_lang::prelude::Pubkey, &amp;anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)).0: &amp;anchor_lang::prelude::Pubkey)<br/>StorageLive(_30)<br/>_30 = (((_24 as Some).0: (&amp;anchor_lang::prelude::Pubkey, &amp;anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)).1: &amp;anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>_33 = &amp;_29<br/>StorageLive(_34)<br/>_34 = &amp;_5<br/></td></tr><tr><td align="left">_32 = &lt;&amp;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _33, move _34)</td></tr></table>>];
    bb8__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb9__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">_17 = const ()<br/>StorageDead(_26)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/>StorageDead(_21)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/>StorageLive(_310)<br/>_310 = move _16<br/>_0 = std::result::Result::&lt;Vec&lt;(anchor_lang::prelude::Pubkey, usize, u64)&gt;, error::ErrorCode&gt;::Ok(move _310)<br/>StorageDead(_310)<br/>StorageDead(_16)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left">switchInt(move _32)</td></tr></table>>];
    bb11__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_33)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_33)<br/>_31 = const ()<br/>StorageDead(_32)<br/>StorageDead(_31)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_40 = &amp;(*_30)<br/></td></tr><tr><td align="left">_39 = anchor_lang::prelude::AccountLoader::&lt;'_, User&gt;::load_mut(move _40)</td></tr></table>>];
    bb13__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageLive(_41)<br/>_41 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_38 = std::result::Result::&lt;RefMut&lt;'_, User&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _39, move _41)</td></tr></table>>];
    bb14__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">_37 = &lt;std::result::Result&lt;RefMut&lt;'_, User&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _38)</td></tr></table>>];
    bb15__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>_42 = discriminant(_37)<br/></td></tr><tr><td align="left">switchInt(move _42)</td></tr></table>>];
    bb16__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_46)<br/>_46 = move ((_37 as Continue).0: std::cell::RefMut&lt;'_, state::user::User&gt;)<br/>_36 = move _46<br/>StorageDead(_46)<br/>_319 = discriminant(_37)<br/>StorageDead(_37)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>_51 = &amp;_36<br/></td></tr><tr><td align="left">_50 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _51)</td></tr></table>>];
    bb17__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_43)<br/>_43 = ((_37 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_45)<br/>_45 = _43<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Vec&lt;(anchor_lang::prelude::Pubkey, usize, u64)&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _45)</td></tr></table>>];
    bb18__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_43)<br/>_317 = discriminant(_37)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">_49 = &amp;(*_50)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">_48 = User::is_being_liquidated(move _49)</td></tr></table>>];
    bb20__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left">switchInt(move _48)</td></tr></table>>];
    bb21__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageDead(_49)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>_55 = &amp;_36<br/></td></tr><tr><td align="left">_54 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _55)</td></tr></table>>];
    bb23__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">_53 = &amp;(*_54)<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">_52 = User::is_bankrupt(move _53)</td></tr></table>>];
    bb24__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left">switchInt(move _52)</td></tr></table>>];
    bb25__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_53)<br/>StorageDead(_52)<br/>StorageDead(_48)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_53)<br/>_47 = const ()<br/>StorageDead(_52)<br/>StorageDead(_48)<br/>StorageDead(_47)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>_60 = &amp;(*_2)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>_62 = &amp;((*_6).11: u16)<br/>_61 = &amp;(*_62)<br/></td></tr><tr><td align="left">_59 = SpotMarketMap::&lt;'_&gt;::get_ref_mut(move _60, move _61)</td></tr></table>>];
    bb27__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">_58 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _59)</td></tr></table>>];
    bb28__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>_63 = discriminant(_58)<br/></td></tr><tr><td align="left">switchInt(move _63)</td></tr></table>>];
    bb29__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_67)<br/>_67 = move ((_58 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_316 = const true<br/>_57 = move _67<br/>StorageDead(_67)<br/>_323 = discriminant(_58)<br/>StorageDead(_62)<br/>StorageDead(_58)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>_74 = &amp;_36<br/>_73 = &amp;(*_74)<br/></td></tr><tr><td align="left">_72 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _73)</td></tr></table>>];
    bb30__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_64)<br/>_64 = ((_58 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_66)<br/>_66 = _64<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Vec&lt;(anchor_lang::prelude::Pubkey, usize, u64)&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _66)</td></tr></table>>];
    bb31__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageDead(_64)<br/>_321 = discriminant(_58)<br/>StorageDead(_62)<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">_71 = &amp;(*_72)<br/>StorageDead(_73)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>_76 = &amp;_14<br/>_75 = &amp;(*_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>_312 = const _<br/>_78 = &amp;(*_312)<br/>_77 = &amp;(*_78)<br/>StorageLive(_80)<br/>_80 = ((*_6).11: u16)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>_82 = _10<br/>_81 = Option::&lt;i64&gt;::Some(move _82)<br/>StorageDead(_82)<br/>StorageLive(_83)<br/>_83 = _13<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>_86 = &amp;_57<br/></td></tr><tr><td align="left">_85 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _86)</td></tr></table>>];
    bb33__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>_84 = ((*_85).26: u64)<br/>StorageLive(_87)<br/>_87 = Option::&lt;ProtectedMakerParams&gt;::None<br/></td></tr><tr><td align="left">_70 = math::orders::find_maker_orders(move _71, move _75, move _77, move _80, move _81, move _83, move _84, const false, move _87)</td></tr></table>>];
    bb34__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>StorageDead(_84)<br/>StorageDead(_83)<br/>StorageDead(_81)<br/>StorageDead(_80)<br/>StorageDead(_77)<br/>StorageDead(_75)<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">_69 = &lt;std::result::Result&lt;Vec&lt;(usize, u64)&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _70)</td></tr></table>>];
    bb35__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>_88 = discriminant(_69)<br/></td></tr><tr><td align="left">switchInt(move _88)</td></tr></table>>];
    bb36__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageLive(_92)<br/>_92 = move ((_69 as Continue).0: std::vec::Vec&lt;(usize, u64)&gt;)<br/>_68 = move _92<br/>StorageDead(_92)<br/>_327 = discriminant(_69)<br/>StorageDead(_85)<br/>StorageDead(_78)<br/>StorageDead(_76)<br/>StorageDead(_74)<br/>StorageDead(_72)<br/>StorageDead(_69)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>_95 = &amp;_68<br/></td></tr><tr><td align="left">_94 = Vec::&lt;(usize, u64)&gt;::is_empty(move _95)</td></tr></table>>];
    bb37__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_89)<br/>_89 = ((_69 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_91)<br/>_91 = _89<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Vec&lt;(anchor_lang::prelude::Pubkey, usize, u64)&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _91)</td></tr></table>>];
    bb38__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/>StorageDead(_89)<br/>_325 = discriminant(_69)<br/>StorageDead(_85)<br/>StorageDead(_78)<br/>StorageDead(_76)<br/>StorageDead(_74)<br/>StorageDead(_72)<br/>StorageDead(_69)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left">switchInt(move _94)</td></tr></table>>];
    bb40__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/>StorageDead(_94)<br/>StorageDead(_93)<br/></td></tr><tr><td align="left">drop(_68)</td></tr></table>>];
    bb41__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/>_93 = const ()<br/>StorageDead(_94)<br/>StorageDead(_93)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>_100 = &amp;mut _36<br/></td></tr><tr><td align="left">_99 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _100)</td></tr></table>>];
    bb42__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">_98 = &amp;mut (*_99)<br/>StorageDead(_100)<br/>StorageLive(_101)<br/>_101 = _13<br/></td></tr><tr><td align="left">_97 = User::update_last_active_slot(move _98, move _101)</td></tr></table>>];
    bb43__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/>StorageDead(_98)<br/>StorageDead(_99)<br/>StorageDead(_97)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>_107 = &amp;_57<br/></td></tr><tr><td align="left">_106 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _107)</td></tr></table>>];
    bb44__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">_105 = &amp;(*_106)<br/>StorageDead(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>_311 = const _<br/>_109 = &amp;(*_311)<br/>_108 = &amp;(*_109)<br/></td></tr><tr><td align="left">_104 = SpotMarket::get_margin_ratio(move _105, move _108)</td></tr></table>>];
    bb45__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/>StorageDead(_105)<br/></td></tr><tr><td align="left">_103 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _104)</td></tr></table>>];
    bb46__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/>_111 = discriminant(_103)<br/></td></tr><tr><td align="left">switchInt(move _111)</td></tr></table>>];
    bb47__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageLive(_115)<br/>_115 = ((_103 as Continue).0: u32)<br/>_102 = _115<br/>StorageDead(_115)<br/>StorageDead(_109)<br/>StorageDead(_106)<br/>StorageDead(_103)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>_118 = &amp;_57<br/></td></tr><tr><td align="left">_117 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _118)</td></tr></table>>];
    bb48__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageLive(_112)<br/>_112 = ((_103 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_114)<br/>_114 = _112<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Vec&lt;(anchor_lang::prelude::Pubkey, usize, u64)&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _114)</td></tr></table>>];
    bb49__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/>StorageDead(_112)<br/>StorageDead(_109)<br/>StorageDead(_106)<br/>StorageDead(_103)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>_116 = ((*_117).25: u64)<br/>StorageDead(_117)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>_128 = &amp;_36<br/></td></tr><tr><td align="left">_127 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _128)</td></tr></table>>];
    bb51__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">_126 = &amp;(*_127)<br/>StorageDead(_128)<br/>StorageLive(_129)<br/>_129 = ((*_6).11: u16)<br/></td></tr><tr><td align="left">_125 = User::get_spot_position(move _126, move _129)</td></tr></table>>];
    bb52__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_129)<br/>StorageDead(_126)<br/></td></tr><tr><td align="left">_124 = &lt;std::result::Result&lt;&amp;SpotPosition, error::ErrorCode&gt; as Try&gt;::branch(move _125)</td></tr></table>>];
    bb53__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/>_130 = discriminant(_124)<br/></td></tr><tr><td align="left">switchInt(move _130)</td></tr></table>>];
    bb54__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageLive(_134)<br/>_134 = ((_124 as Continue).0: &amp;state::user::SpotPosition)<br/>_123 = _134<br/>StorageDead(_134)<br/>_122 = &amp;(*_123)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>_138 = &amp;_57<br/>_137 = &amp;(*_138)<br/></td></tr><tr><td align="left">_136 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _137)</td></tr></table>>];
    bb55__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageLive(_131)<br/>_131 = ((_124 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_133)<br/>_133 = _131<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Vec&lt;(anchor_lang::prelude::Pubkey, usize, u64)&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _133)</td></tr></table>>];
    bb56__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/>StorageDead(_131)<br/>StorageDead(_122)<br/>StorageDead(_121)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb57__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">_135 = &amp;(*_136)<br/>StorageDead(_137)<br/></td></tr><tr><td align="left">_121 = SpotPosition::get_signed_token_amount(move _122, move _135)</td></tr></table>>];
    bb58__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_135)<br/>StorageDead(_122)<br/></td></tr><tr><td align="left">_120 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _121)</td></tr></table>>];
    bb59__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_121)<br/>_139 = discriminant(_120)<br/></td></tr><tr><td align="left">switchInt(move _139)</td></tr></table>>];
    bb60__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageLive(_143)<br/>_143 = ((_120 as Continue).0: i128)<br/>_119 = _143<br/>StorageDead(_143)<br/>StorageDead(_138)<br/>StorageDead(_136)<br/>StorageDead(_127)<br/>StorageDead(_124)<br/>StorageDead(_123)<br/>StorageDead(_120)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>_316 = const false<br/>_145 = move _57<br/></td></tr><tr><td align="left">_144 = std::mem::drop::&lt;RefMut&lt;'_, SpotMarket&gt;&gt;(move _145)</td></tr></table>>];
    bb61__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageLive(_140)<br/>_140 = ((_120 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_142)<br/>_142 = _140<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Vec&lt;(anchor_lang::prelude::Pubkey, usize, u64)&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _142)</td></tr></table>>];
    bb62__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_142)<br/>StorageDead(_140)<br/>StorageDead(_138)<br/>StorageDead(_136)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb63__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_145)<br/>StorageDead(_144)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>_150 = &amp;_68<br/></td></tr><tr><td align="left">_149 = &lt;Vec&lt;(usize, u64)&gt; as Deref&gt;::deref(move _150)</td></tr></table>>];
    bb64__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">_148 = &amp;(*_149)<br/>StorageDead(_150)<br/></td></tr><tr><td align="left">_147 = core::slice::&lt;impl [(usize, u64)]&gt;::iter(move _148)</td></tr></table>>];
    bb65__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_148)<br/></td></tr><tr><td align="left">_146 = &lt;std::slice::Iter&lt;'_, (usize, u64)&gt; as IntoIterator&gt;::into_iter(move _147)</td></tr></table>>];
    bb66__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_147)<br/>StorageLive(_151)<br/>_151 = move _146<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb67__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageLive(_152)<br/>StorageLive(_153)<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>_155 = &amp;mut _151<br/>_154 = &amp;mut (*_155)<br/></td></tr><tr><td align="left">_153 = &lt;std::slice::Iter&lt;'_, (usize, u64)&gt; as Iterator&gt;::next(move _154)</td></tr></table>>];
    bb68__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_154)<br/>_156 = discriminant(_153)<br/></td></tr><tr><td align="left">switchInt(move _156)</td></tr></table>>];
    bb69__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageLive(_158)<br/>_313 = deref_copy ((_153 as Some).0: &amp;(usize, u64))<br/>_158 = &amp;((*_313).0: usize)<br/>StorageLive(_159)<br/>_314 = deref_copy ((_153 as Some).0: &amp;(usize, u64))<br/>_159 = &amp;((*_314).1: u64)<br/>StorageLive(_160)<br/>_160 = (*_158)<br/>StorageLive(_161)<br/>_161 = (*_159)<br/>StorageLive(_162)<br/>StorageLive(_163)<br/>StorageLive(_164)<br/>_164 = &amp;_36<br/></td></tr><tr><td align="left">_163 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _164)</td></tr></table>>];
    bb70__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">_23 = const ()<br/>StorageDead(_155)<br/>StorageDead(_153)<br/>StorageDead(_152)<br/>StorageDead(_151)<br/>StorageDead(_149)<br/>StorageDead(_146)<br/>StorageDead(_119)<br/>StorageDead(_116)<br/>StorageDead(_102)<br/></td></tr><tr><td align="left">drop(_68)</td></tr></table>>];
    bb71__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_164)<br/>StorageLive(_165)<br/>_165 = _160<br/>_166 = Len(((*_163).5: [state::user::Order; 32]))<br/>_167 = Lt(_165, _166)<br/></td></tr><tr><td align="left">assert(move _167, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _166, _165)</td></tr></table>>];
    bb72__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">_162 = &amp;((*_163).5: [state::user::Order; 32])[_165]<br/>StorageLive(_168)<br/>StorageLive(_169)<br/>StorageLive(_170)<br/>StorageLive(_171)<br/>StorageLive(_172)<br/>_172 = &amp;(*_162)<br/>StorageLive(_173)<br/>_173 = &amp;(*_6)<br/>StorageLive(_174)<br/>_174 = _13<br/></td></tr><tr><td align="left">_171 = is_maker_for_taker(move _172, move _173, move _174)</td></tr></table>>];
    bb73__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_174)<br/>StorageDead(_173)<br/>StorageDead(_172)<br/></td></tr><tr><td align="left">_170 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _171)</td></tr></table>>];
    bb74__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_171)<br/>_175 = discriminant(_170)<br/></td></tr><tr><td align="left">switchInt(move _175)</td></tr></table>>];
    bb75__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageLive(_179)<br/>_179 = ((_170 as Continue).0: bool)<br/>_169 = _179<br/>StorageDead(_179)<br/></td></tr><tr><td align="left">switchInt(move _169)</td></tr></table>>];
    bb76__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageLive(_176)<br/>_176 = ((_170 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_178)<br/>_178 = _176<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Vec&lt;(anchor_lang::prelude::Pubkey, usize, u64)&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _178)</td></tr></table>>];
    bb77__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_178)<br/>StorageDead(_176)<br/>StorageDead(_170)<br/>StorageDead(_169)<br/>StorageDead(_168)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb78__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_170)<br/>_168 = const ()<br/>StorageDead(_169)<br/>StorageDead(_168)<br/>StorageLive(_181)<br/>StorageLive(_182)<br/>StorageLive(_183)<br/>_183 = &amp;(*_162)<br/>StorageLive(_184)<br/>_184 = &amp;(*_6)<br/></td></tr><tr><td align="left">_182 = are_orders_same_market_but_different_sides(move _183, move _184)</td></tr></table>>];
    bb79__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_170)<br/>StorageDead(_169)<br/>StorageDead(_168)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb80__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left">switchInt(move _182)</td></tr></table>>];
    bb81__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_184)<br/>StorageDead(_183)<br/>_181 = const ()<br/>StorageDead(_182)<br/>StorageDead(_181)<br/>StorageLive(_186)<br/>_187 = discriminant(_11)<br/></td></tr><tr><td align="left">switchInt(move _187)</td></tr></table>>];
    bb82__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_184)<br/>StorageDead(_183)<br/>StorageDead(_182)<br/>StorageDead(_181)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb83__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">_186 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb84__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageLive(_188)<br/>_188 = ((_11 as Some).0: u32)<br/>StorageLive(_189)<br/>StorageLive(_190)<br/>_190 = ((*_162).10: u32)<br/>StorageLive(_191)<br/>_191 = _188<br/>_189 = Ne(move _190, move _191)<br/></td></tr><tr><td align="left">switchInt(move _189)</td></tr></table>>];
    bb85__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_191)<br/>StorageDead(_190)<br/>StorageDead(_189)<br/>StorageDead(_188)<br/>StorageDead(_186)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb86__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_191)<br/>StorageDead(_190)<br/>_186 = const ()<br/>StorageDead(_189)<br/>StorageDead(_188)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb87__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_186)<br/>StorageLive(_193)<br/>StorageLive(_194)<br/>StorageLive(_195)<br/>StorageLive(_196)<br/>_196 = _161<br/>StorageLive(_197)<br/>_197 = ((*_162).17: controller::position::PositionDirection)<br/>StorageLive(_198)<br/>_198 = _10<br/>StorageLive(_199)<br/>_199 = _102<br/></td></tr><tr><td align="left">_195 = math::orders::limit_price_breaches_maker_oracle_price_bands(move _196, move _197, move _198, move _199)</td></tr></table>>];
    bb88__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_199)<br/>StorageDead(_198)<br/>StorageDead(_197)<br/>StorageDead(_196)<br/></td></tr><tr><td align="left">_194 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _195)</td></tr></table>>];
    bb89__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_195)<br/>_200 = discriminant(_194)<br/></td></tr><tr><td align="left">switchInt(move _200)</td></tr></table>>];
    bb90__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageLive(_204)<br/>_204 = ((_194 as Continue).0: bool)<br/>_193 = _204<br/>StorageDead(_204)<br/>StorageDead(_194)<br/>StorageLive(_205)<br/>StorageLive(_206)<br/>StorageLive(_207)<br/>StorageLive(_208)<br/>StorageLive(_209)<br/>StorageLive(_210)<br/>StorageLive(_211)<br/>_211 = &amp;_36<br/>_210 = &amp;(*_211)<br/></td></tr><tr><td align="left">_209 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _210)</td></tr></table>>];
    bb91__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageLive(_201)<br/>_201 = ((_194 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_203)<br/>_203 = _201<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Vec&lt;(anchor_lang::prelude::Pubkey, usize, u64)&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _203)</td></tr></table>>];
    bb92__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_203)<br/>StorageDead(_201)<br/>StorageDead(_194)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb93__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">_208 = &amp;(*_209)<br/>StorageDead(_210)<br/>StorageLive(_212)<br/>_212 = _160<br/>StorageLive(_213)<br/>_213 = _12<br/></td></tr><tr><td align="left">_207 = math::orders::should_expire_order(move _208, move _212, move _213)</td></tr></table>>];
    bb94__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_213)<br/>StorageDead(_212)<br/>StorageDead(_208)<br/></td></tr><tr><td align="left">_206 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _207)</td></tr></table>>];
    bb95__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_207)<br/>_214 = discriminant(_206)<br/></td></tr><tr><td align="left">switchInt(move _214)</td></tr></table>>];
    bb96__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageLive(_218)<br/>_218 = ((_206 as Continue).0: bool)<br/>_205 = _218<br/>StorageDead(_218)<br/>StorageDead(_211)<br/>StorageDead(_209)<br/>StorageDead(_206)<br/>StorageLive(_219)<br/>StorageLive(_220)<br/>StorageLive(_221)<br/>StorageLive(_222)<br/>StorageLive(_223)<br/>StorageLive(_224)<br/>StorageLive(_225)<br/>_225 = &amp;_36<br/></td></tr><tr><td align="left">_224 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _225)</td></tr></table>>];
    bb97__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageLive(_215)<br/>_215 = ((_206 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_217)<br/>_217 = _215<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Vec&lt;(anchor_lang::prelude::Pubkey, usize, u64)&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _217)</td></tr></table>>];
    bb98__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_217)<br/>StorageDead(_215)<br/>StorageDead(_211)<br/>StorageDead(_209)<br/>StorageDead(_206)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb99__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageDead(_225)<br/>StorageLive(_226)<br/>_226 = _160<br/>_227 = Len(((*_224).5: [state::user::Order; 32]))<br/>_228 = Lt(_226, _227)<br/></td></tr><tr><td align="left">assert(move _228, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _227, _226)</td></tr></table>>];
    bb100__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">_223 = &amp;((*_224).5: [state::user::Order; 32])[_226]<br/>_222 = &amp;(*_223)<br/>StorageLive(_229)<br/>StorageLive(_230)<br/>StorageLive(_231)<br/>StorageLive(_232)<br/>_232 = _119<br/></td></tr><tr><td align="left">_231 = &lt;i128 as Cast&gt;::cast::&lt;i64&gt;(move _232)</td></tr></table>>];
    bb101__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_232)<br/></td></tr><tr><td align="left">_230 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _231)</td></tr></table>>];
    bb102__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_231)<br/>_233 = discriminant(_230)<br/></td></tr><tr><td align="left">switchInt(move _233)</td></tr></table>>];
    bb103__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageLive(_237)<br/>_237 = ((_230 as Continue).0: i64)<br/>_229 = _237<br/>StorageDead(_237)<br/>StorageLive(_238)<br/>_238 = _116<br/></td></tr><tr><td align="left">_221 = math::orders::should_cancel_reduce_only_order(move _222, move _229, move _238)</td></tr></table>>];
    bb104__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageLive(_234)<br/>_234 = ((_230 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_236)<br/>_236 = _234<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Vec&lt;(anchor_lang::prelude::Pubkey, usize, u64)&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _236)</td></tr></table>>];
    bb105__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_236)<br/>StorageDead(_234)<br/>StorageDead(_229)<br/>StorageDead(_222)<br/>StorageDead(_221)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb106__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_238)<br/>StorageDead(_229)<br/>StorageDead(_222)<br/></td></tr><tr><td align="left">_220 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _221)</td></tr></table>>];
    bb107__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_221)<br/>_239 = discriminant(_220)<br/></td></tr><tr><td align="left">switchInt(move _239)</td></tr></table>>];
    bb108__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageLive(_243)<br/>_243 = ((_220 as Continue).0: bool)<br/>_219 = _243<br/>StorageDead(_243)<br/>StorageDead(_230)<br/>StorageDead(_226)<br/>StorageDead(_224)<br/>StorageDead(_223)<br/>StorageDead(_220)<br/>StorageLive(_244)<br/>StorageLive(_245)<br/>_245 = _193<br/></td></tr><tr><td align="left">switchInt(move _245)</td></tr></table>>];
    bb109__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageLive(_240)<br/>_240 = ((_220 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_242)<br/>_242 = _240<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Vec&lt;(anchor_lang::prelude::Pubkey, usize, u64)&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _242)</td></tr></table>>];
    bb110__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_242)<br/>StorageDead(_240)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb111__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageLive(_246)<br/>_246 = _205<br/></td></tr><tr><td align="left">switchInt(move _246)</td></tr></table>>];
    bb112__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageLive(_247)<br/>_247 = _219<br/></td></tr><tr><td align="left">switchInt(move _247)</td></tr></table>>];
    bb113__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageLive(_249)<br/>StorageLive(_250)<br/>StorageLive(_251)<br/>StorageLive(_252)<br/>StorageLive(_253)<br/>StorageLive(_254)<br/>StorageLive(_255)<br/>_255 = &amp;mut _36<br/>_254 = &amp;mut (*_255)<br/></td></tr><tr><td align="left">_253 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _254)</td></tr></table>>];
    bb114__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">_244 = const ()<br/>StorageDead(_247)<br/>StorageDead(_246)<br/>StorageDead(_245)<br/>StorageDead(_244)<br/>StorageLive(_302)<br/>StorageLive(_303)<br/>StorageLive(_304)<br/>_304 = &amp;mut _16<br/>_303 = &amp;mut (*_304)<br/>StorageLive(_305)<br/>StorageLive(_306)<br/>_306 = (*_29)<br/>StorageLive(_307)<br/>_307 = _160<br/>StorageLive(_308)<br/>_308 = _161<br/>_305 = (move _306, move _307, move _308)<br/>StorageDead(_308)<br/>StorageDead(_307)<br/>StorageDead(_306)<br/>StorageLive(_309)<br/>_309 = _14<br/></td></tr><tr><td align="left">_302 = insert_maker_order_info(move _303, move _305, move _309)</td></tr></table>>];
    bb115__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">_252 = &amp;mut (*_253)<br/>StorageDead(_254)<br/>StorageLive(_256)<br/>StorageLive(_257)<br/>_257 = &amp;mut (*_7)<br/></td></tr><tr><td align="left">_256 = Option::&lt;&amp;mut User&gt;::as_deref_mut(move _257)</td></tr></table>>];
    bb116__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_257)<br/>StorageLive(_258)<br/>StorageLive(_259)<br/>StorageLive(_260)<br/>StorageLive(_261)<br/>StorageLive(_262)<br/>StorageLive(_263)<br/>StorageLive(_264)<br/>_264 = &amp;(*_2)<br/></td></tr><tr><td align="left">_263 = SpotMarketMap::&lt;'_&gt;::get_quote_spot_market_mut(move _264)</td></tr></table>>];
    bb117__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageDead(_264)<br/></td></tr><tr><td align="left">_262 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _263)</td></tr></table>>];
    bb118__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">_315 = const true<br/>StorageDead(_263)<br/>_265 = discriminant(_262)<br/></td></tr><tr><td align="left">switchInt(move _265)</td></tr></table>>];
    bb119__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageLive(_269)<br/>_269 = move ((_262 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_261 = move _269<br/>StorageDead(_269)<br/>_260 = &amp;mut _261<br/></td></tr><tr><td align="left">_259 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _260)</td></tr></table>>];
    bb120__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageLive(_266)<br/>_266 = ((_262 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_268)<br/>_268 = _266<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Vec&lt;(anchor_lang::prelude::Pubkey, usize, u64)&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _268)</td></tr></table>>];
    bb121__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageDead(_268)<br/>StorageDead(_266)<br/>StorageDead(_260)<br/>StorageDead(_258)<br/>StorageDead(_256)<br/>StorageDead(_252)<br/>StorageDead(_251)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb122__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">_258 = &amp;mut (*_259)<br/>StorageDead(_260)<br/>StorageLive(_270)<br/>_270 = _9<br/>StorageLive(_271)<br/>_271 = _13<br/></td></tr><tr><td align="left">_251 = pay_keeper_flat_reward_for_spot(move _252, move _256, move _258, move _270, move _271)</td></tr></table>>];
    bb123__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageDead(_271)<br/>StorageDead(_270)<br/>StorageDead(_258)<br/>StorageDead(_256)<br/>StorageDead(_252)<br/></td></tr><tr><td align="left">_250 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _251)</td></tr></table>>];
    bb124__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageDead(_251)<br/>_272 = discriminant(_250)<br/></td></tr><tr><td align="left">switchInt(move _272)</td></tr></table>>];
    bb125__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageLive(_276)<br/>_276 = ((_250 as Continue).0: u64)<br/>_249 = _276<br/>StorageDead(_276)<br/></td></tr><tr><td align="left">drop(_261)</td></tr></table>>];
    bb126__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageLive(_273)<br/>_273 = ((_250 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_275)<br/>_275 = _273<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Vec&lt;(anchor_lang::prelude::Pubkey, usize, u64)&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _275)</td></tr></table>>];
    bb127__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageDead(_275)<br/>StorageDead(_273)<br/></td></tr><tr><td align="left">drop(_261)</td></tr></table>>];
    bb128__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">_277 = OrderActionExplanation::OraclePriceBreachedLimitPrice<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb129__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">StorageLive(_279)<br/>_279 = _205<br/></td></tr><tr><td align="left">switchInt(move _279)</td></tr></table>>];
    bb130__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">_277 = OrderActionExplanation::OrderExpired<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb131__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">_277 = OrderActionExplanation::ReduceOnlyOrderIncreasedPosition<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb132__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageDead(_279)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb133__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageDead(_278)<br/>StorageLive(_280)<br/>StorageLive(_281)<br/>StorageLive(_282)<br/>StorageLive(_283)<br/>_283 = _160<br/>StorageLive(_284)<br/>StorageLive(_285)<br/>StorageLive(_286)<br/>_286 = &amp;mut _36<br/></td></tr><tr><td align="left">_285 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _286)</td></tr></table>>];
    bb134__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">_284 = &amp;mut (*_285)<br/>StorageDead(_286)<br/>StorageLive(_287)<br/>_287 = &amp;(*_29)<br/>StorageLive(_288)<br/>_288 = &amp;(*_1)<br/>StorageLive(_289)<br/>_289 = &amp;(*_2)<br/>StorageLive(_290)<br/>_290 = &amp;mut (*_3)<br/>StorageLive(_291)<br/>_291 = _12<br/>StorageLive(_292)<br/>_292 = _13<br/>StorageLive(_293)<br/>_293 = _277<br/>StorageLive(_294)<br/>StorageLive(_295)<br/>_295 = &amp;(*_8)<br/>_294 = Option::&lt;&amp;anchor_lang::prelude::Pubkey&gt;::Some(move _295)<br/>StorageDead(_295)<br/>StorageLive(_296)<br/>_296 = _249<br/></td></tr><tr><td align="left">_282 = controller::orders::cancel_order(move _283, move _284, move _287, move _288, move _289, move _290, move _291, move _292, move _293, move _294, move _296, const false)</td></tr></table>>];
    bb135__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageDead(_296)<br/>StorageDead(_294)<br/>StorageDead(_293)<br/>StorageDead(_292)<br/>StorageDead(_291)<br/>StorageDead(_290)<br/>StorageDead(_289)<br/>StorageDead(_288)<br/>StorageDead(_287)<br/>StorageDead(_284)<br/>StorageDead(_283)<br/></td></tr><tr><td align="left">_281 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _282)</td></tr></table>>];
    bb136__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageDead(_282)<br/>_297 = discriminant(_281)<br/></td></tr><tr><td align="left">switchInt(move _297)</td></tr></table>>];
    bb137__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">StorageLive(_301)<br/>_301 = ((_281 as Continue).0: ())<br/>_280 = _301<br/>StorageDead(_301)<br/>StorageDead(_285)<br/>StorageDead(_281)<br/>StorageDead(_280)<br/>StorageDead(_277)<br/>StorageDead(_249)<br/>StorageDead(_247)<br/>StorageDead(_246)<br/>StorageDead(_245)<br/>StorageDead(_244)<br/>StorageDead(_219)<br/>StorageDead(_205)<br/>StorageDead(_193)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb138__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">StorageLive(_298)<br/>_298 = ((_281 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_300)<br/>_300 = _298<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Vec&lt;(anchor_lang::prelude::Pubkey, usize, u64)&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _300)</td></tr></table>>];
    bb139__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">StorageDead(_300)<br/>StorageDead(_298)<br/>StorageDead(_285)<br/>StorageDead(_281)<br/>StorageDead(_280)<br/>StorageDead(_277)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb140__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">StorageDead(_309)<br/>StorageDead(_305)<br/>StorageDead(_303)<br/>StorageDead(_304)<br/>StorageDead(_302)<br/>_152 = const ()<br/>StorageDead(_219)<br/>StorageDead(_205)<br/>StorageDead(_193)<br/>StorageDead(_165)<br/>StorageDead(_163)<br/>StorageDead(_162)<br/>StorageDead(_161)<br/>StorageDead(_160)<br/>StorageDead(_159)<br/>StorageDead(_158)<br/>StorageDead(_155)<br/>StorageDead(_153)<br/>StorageDead(_152)<br/>_22 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb141__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">StorageDead(_165)<br/>StorageDead(_163)<br/>StorageDead(_162)<br/>StorageDead(_161)<br/>StorageDead(_160)<br/>StorageDead(_159)<br/>StorageDead(_158)<br/>StorageDead(_155)<br/>StorageDead(_153)<br/>StorageDead(_152)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb142__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>_316 = const false<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">drop(_36)</td></tr></table>>];
    bb143__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_30)<br/>StorageDead(_29)<br/>StorageDead(_26)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/>_22 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb144__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/></td></tr><tr><td align="left">drop(_57)</td></tr></table>>];
    bb145__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">_316 = const false<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb146__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left">drop(_36)</td></tr></table>>];
    bb147__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb148__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_29)<br/>StorageDead(_26)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb149__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">149</td></tr><tr><td align="left" balign="left">StorageDead(_249)<br/>StorageDead(_247)<br/>StorageDead(_246)<br/>StorageDead(_245)<br/>StorageDead(_244)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb150__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">150</td></tr><tr><td align="left" balign="left">StorageDead(_230)<br/>StorageDead(_226)<br/>StorageDead(_224)<br/>StorageDead(_223)<br/>StorageDead(_220)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb151__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">151</td></tr><tr><td align="left" balign="left">StorageDead(_219)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb152__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">152</td></tr><tr><td align="left" balign="left">StorageDead(_205)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb153__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">153</td></tr><tr><td align="left" balign="left">StorageDead(_193)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb154__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">154</td></tr><tr><td align="left" balign="left">StorageDead(_165)<br/>StorageDead(_163)<br/>StorageDead(_162)<br/>StorageDead(_161)<br/>StorageDead(_160)<br/>StorageDead(_159)<br/>StorageDead(_158)<br/>StorageDead(_155)<br/>StorageDead(_153)<br/>StorageDead(_152)<br/>StorageDead(_151)<br/>StorageDead(_149)<br/>StorageDead(_146)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb155__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">155</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/>StorageDead(_124)<br/>StorageDead(_123)<br/>StorageDead(_120)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb156__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">156</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/>StorageDead(_116)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb157__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">157</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/></td></tr><tr><td align="left">drop(_68)</td></tr></table>>];
    bb158__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">158</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/></td></tr><tr><td align="left">switchInt(_316)</td></tr></table>>];
    bb159__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">159</td></tr><tr><td align="left" balign="left">_316 = const false<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">drop(_36)</td></tr></table>>];
    bb160__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">160</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_30)<br/>StorageDead(_29)<br/>StorageDead(_26)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/>StorageDead(_21)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">drop(_16)</td></tr></table>>];
    bb161__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">161</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb162__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">162</td></tr><tr><td align="left">return</td></tr></table>>];
    bb163__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">163 (cleanup)</td></tr><tr><td align="left">drop(_261)</td></tr></table>>];
    bb164__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">164 (cleanup)</td></tr><tr><td align="left">drop(_68)</td></tr></table>>];
    bb165__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">165 (cleanup)</td></tr><tr><td align="left">drop(_36)</td></tr></table>>];
    bb166__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">166 (cleanup)</td></tr><tr><td align="left">drop(_16)</td></tr></table>>];
    bb167__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">167 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb168__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">168</td></tr><tr><td align="left" balign="left">_329 = discriminant(_262)<br/>_315 = const false<br/>StorageDead(_262)<br/>StorageDead(_261)<br/>StorageDead(_259)<br/>StorageDead(_255)<br/>StorageDead(_253)<br/>StorageDead(_250)<br/>StorageLive(_277)<br/>StorageLive(_278)<br/>_278 = _193<br/></td></tr><tr><td align="left">switchInt(move _278)</td></tr></table>>];
    bb169__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">169</td></tr><tr><td align="left" balign="left">_331 = discriminant(_262)<br/>_315 = const false<br/>StorageDead(_262)<br/>StorageDead(_261)<br/>StorageDead(_259)<br/>StorageDead(_255)<br/>StorageDead(_253)<br/>StorageDead(_250)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb170__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">170</td></tr><tr><td align="left">drop(_57)</td></tr></table>>];
    bb171__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">171 (cleanup)</td></tr><tr><td align="left" balign="left">_333 = discriminant(_262)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb172__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">172 (cleanup)</td></tr><tr><td align="left" balign="left">_334 = discriminant(_69)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb173__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">173 (cleanup)</td></tr><tr><td align="left">drop(_57)</td></tr></table>>];
    bb174__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">174 (cleanup)</td></tr><tr><td align="left">switchInt(_316)</td></tr></table>>];
    bb175__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">175 (cleanup)</td></tr><tr><td align="left" balign="left">_335 = discriminant(_58)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb176__0_561 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">176 (cleanup)</td></tr><tr><td align="left" balign="left">_336 = discriminant(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_561 -> bb1__0_561 [label="return"];
    bb1__0_561 -> bb2__0_561 [label="return"];
    bb2__0_561 -> bb3__0_561 [label="return"];
    bb2__0_561 -> bb166__0_561 [label="unwind"];
    bb3__0_561 -> bb4__0_561 [label="return"];
    bb3__0_561 -> bb166__0_561 [label="unwind"];
    bb4__0_561 -> bb5__0_561 [label=""];
    bb5__0_561 -> bb6__0_561 [label="return"];
    bb5__0_561 -> bb166__0_561 [label="unwind"];
    bb6__0_561 -> bb9__0_561 [label="0"];
    bb6__0_561 -> bb7__0_561 [label="1"];
    bb6__0_561 -> bb8__0_561 [label="otherwise"];
    bb7__0_561 -> bb10__0_561 [label="return"];
    bb7__0_561 -> bb166__0_561 [label="unwind"];
    bb9__0_561 -> bb162__0_561 [label=""];
    bb10__0_561 -> bb12__0_561 [label="0"];
    bb10__0_561 -> bb11__0_561 [label="otherwise"];
    bb11__0_561 -> bb148__0_561 [label=""];
    bb12__0_561 -> bb13__0_561 [label="return"];
    bb12__0_561 -> bb166__0_561 [label="unwind"];
    bb13__0_561 -> bb14__0_561 [label="return"];
    bb13__0_561 -> bb166__0_561 [label="unwind"];
    bb14__0_561 -> bb15__0_561 [label="return"];
    bb14__0_561 -> bb166__0_561 [label="unwind"];
    bb15__0_561 -> bb16__0_561 [label="0"];
    bb15__0_561 -> bb17__0_561 [label="1"];
    bb15__0_561 -> bb8__0_561 [label="otherwise"];
    bb16__0_561 -> bb19__0_561 [label="return"];
    bb16__0_561 -> bb165__0_561 [label="unwind"];
    bb17__0_561 -> bb18__0_561 [label="return"];
    bb17__0_561 -> bb176__0_561 [label="unwind"];
    bb18__0_561 -> bb160__0_561 [label=""];
    bb19__0_561 -> bb20__0_561 [label="return"];
    bb19__0_561 -> bb165__0_561 [label="unwind"];
    bb20__0_561 -> bb22__0_561 [label="0"];
    bb20__0_561 -> bb21__0_561 [label="otherwise"];
    bb21__0_561 -> bb25__0_561 [label=""];
    bb22__0_561 -> bb23__0_561 [label="return"];
    bb22__0_561 -> bb165__0_561 [label="unwind"];
    bb23__0_561 -> bb24__0_561 [label="return"];
    bb23__0_561 -> bb165__0_561 [label="unwind"];
    bb24__0_561 -> bb26__0_561 [label="0"];
    bb24__0_561 -> bb25__0_561 [label="otherwise"];
    bb25__0_561 -> bb146__0_561 [label=""];
    bb26__0_561 -> bb27__0_561 [label="return"];
    bb26__0_561 -> bb165__0_561 [label="unwind"];
    bb27__0_561 -> bb28__0_561 [label="return"];
    bb27__0_561 -> bb165__0_561 [label="unwind"];
    bb28__0_561 -> bb29__0_561 [label="0"];
    bb28__0_561 -> bb30__0_561 [label="1"];
    bb28__0_561 -> bb8__0_561 [label="otherwise"];
    bb29__0_561 -> bb32__0_561 [label="return"];
    bb29__0_561 -> bb174__0_561 [label="unwind"];
    bb30__0_561 -> bb31__0_561 [label="return"];
    bb30__0_561 -> bb175__0_561 [label="unwind"];
    bb31__0_561 -> bb159__0_561 [label=""];
    bb32__0_561 -> bb33__0_561 [label="return"];
    bb32__0_561 -> bb174__0_561 [label="unwind"];
    bb33__0_561 -> bb34__0_561 [label="return"];
    bb33__0_561 -> bb174__0_561 [label="unwind"];
    bb34__0_561 -> bb35__0_561 [label="return"];
    bb34__0_561 -> bb174__0_561 [label="unwind"];
    bb35__0_561 -> bb36__0_561 [label="0"];
    bb35__0_561 -> bb37__0_561 [label="1"];
    bb35__0_561 -> bb8__0_561 [label="otherwise"];
    bb36__0_561 -> bb39__0_561 [label="return"];
    bb36__0_561 -> bb164__0_561 [label="unwind"];
    bb37__0_561 -> bb38__0_561 [label="return"];
    bb37__0_561 -> bb172__0_561 [label="unwind"];
    bb38__0_561 -> bb158__0_561 [label=""];
    bb39__0_561 -> bb41__0_561 [label="0"];
    bb39__0_561 -> bb40__0_561 [label="otherwise"];
    bb40__0_561 -> bb144__0_561 [label="return"];
    bb40__0_561 -> bb174__0_561 [label="unwind"];
    bb41__0_561 -> bb42__0_561 [label="return"];
    bb41__0_561 -> bb164__0_561 [label="unwind"];
    bb42__0_561 -> bb43__0_561 [label="return"];
    bb42__0_561 -> bb164__0_561 [label="unwind"];
    bb43__0_561 -> bb44__0_561 [label="return"];
    bb43__0_561 -> bb164__0_561 [label="unwind"];
    bb44__0_561 -> bb45__0_561 [label="return"];
    bb44__0_561 -> bb164__0_561 [label="unwind"];
    bb45__0_561 -> bb46__0_561 [label="return"];
    bb45__0_561 -> bb164__0_561 [label="unwind"];
    bb46__0_561 -> bb47__0_561 [label="0"];
    bb46__0_561 -> bb48__0_561 [label="1"];
    bb46__0_561 -> bb8__0_561 [label="otherwise"];
    bb47__0_561 -> bb50__0_561 [label="return"];
    bb47__0_561 -> bb164__0_561 [label="unwind"];
    bb48__0_561 -> bb49__0_561 [label="return"];
    bb48__0_561 -> bb164__0_561 [label="unwind"];
    bb49__0_561 -> bb157__0_561 [label=""];
    bb50__0_561 -> bb51__0_561 [label="return"];
    bb50__0_561 -> bb164__0_561 [label="unwind"];
    bb51__0_561 -> bb52__0_561 [label="return"];
    bb51__0_561 -> bb164__0_561 [label="unwind"];
    bb52__0_561 -> bb53__0_561 [label="return"];
    bb52__0_561 -> bb164__0_561 [label="unwind"];
    bb53__0_561 -> bb54__0_561 [label="0"];
    bb53__0_561 -> bb55__0_561 [label="1"];
    bb53__0_561 -> bb8__0_561 [label="otherwise"];
    bb54__0_561 -> bb57__0_561 [label="return"];
    bb54__0_561 -> bb164__0_561 [label="unwind"];
    bb55__0_561 -> bb56__0_561 [label="return"];
    bb55__0_561 -> bb164__0_561 [label="unwind"];
    bb56__0_561 -> bb155__0_561 [label=""];
    bb57__0_561 -> bb58__0_561 [label="return"];
    bb57__0_561 -> bb164__0_561 [label="unwind"];
    bb58__0_561 -> bb59__0_561 [label="return"];
    bb58__0_561 -> bb164__0_561 [label="unwind"];
    bb59__0_561 -> bb60__0_561 [label="0"];
    bb59__0_561 -> bb61__0_561 [label="1"];
    bb59__0_561 -> bb8__0_561 [label="otherwise"];
    bb60__0_561 -> bb63__0_561 [label="return"];
    bb60__0_561 -> bb164__0_561 [label="unwind"];
    bb61__0_561 -> bb62__0_561 [label="return"];
    bb61__0_561 -> bb164__0_561 [label="unwind"];
    bb62__0_561 -> bb155__0_561 [label=""];
    bb63__0_561 -> bb64__0_561 [label="return"];
    bb63__0_561 -> bb164__0_561 [label="unwind"];
    bb64__0_561 -> bb65__0_561 [label="return"];
    bb64__0_561 -> bb164__0_561 [label="unwind"];
    bb65__0_561 -> bb66__0_561 [label="return"];
    bb65__0_561 -> bb164__0_561 [label="unwind"];
    bb66__0_561 -> bb67__0_561 [label=""];
    bb67__0_561 -> bb68__0_561 [label="return"];
    bb67__0_561 -> bb164__0_561 [label="unwind"];
    bb68__0_561 -> bb70__0_561 [label="0"];
    bb68__0_561 -> bb69__0_561 [label="1"];
    bb68__0_561 -> bb8__0_561 [label="otherwise"];
    bb69__0_561 -> bb71__0_561 [label="return"];
    bb69__0_561 -> bb164__0_561 [label="unwind"];
    bb70__0_561 -> bb142__0_561 [label="return"];
    bb70__0_561 -> bb174__0_561 [label="unwind"];
    bb71__0_561 -> bb72__0_561 [label="success"];
    bb71__0_561 -> bb164__0_561 [label="unwind"];
    bb72__0_561 -> bb73__0_561 [label="return"];
    bb72__0_561 -> bb164__0_561 [label="unwind"];
    bb73__0_561 -> bb74__0_561 [label="return"];
    bb73__0_561 -> bb164__0_561 [label="unwind"];
    bb74__0_561 -> bb75__0_561 [label="0"];
    bb74__0_561 -> bb76__0_561 [label="1"];
    bb74__0_561 -> bb8__0_561 [label="otherwise"];
    bb75__0_561 -> bb79__0_561 [label="0"];
    bb75__0_561 -> bb78__0_561 [label="otherwise"];
    bb76__0_561 -> bb77__0_561 [label="return"];
    bb76__0_561 -> bb164__0_561 [label="unwind"];
    bb77__0_561 -> bb154__0_561 [label=""];
    bb78__0_561 -> bb80__0_561 [label="return"];
    bb78__0_561 -> bb164__0_561 [label="unwind"];
    bb79__0_561 -> bb141__0_561 [label=""];
    bb80__0_561 -> bb82__0_561 [label="0"];
    bb80__0_561 -> bb81__0_561 [label="otherwise"];
    bb81__0_561 -> bb84__0_561 [label="1"];
    bb81__0_561 -> bb83__0_561 [label="otherwise"];
    bb82__0_561 -> bb141__0_561 [label=""];
    bb83__0_561 -> bb87__0_561 [label=""];
    bb84__0_561 -> bb86__0_561 [label="0"];
    bb84__0_561 -> bb85__0_561 [label="otherwise"];
    bb85__0_561 -> bb141__0_561 [label=""];
    bb86__0_561 -> bb87__0_561 [label=""];
    bb87__0_561 -> bb88__0_561 [label="return"];
    bb87__0_561 -> bb164__0_561 [label="unwind"];
    bb88__0_561 -> bb89__0_561 [label="return"];
    bb88__0_561 -> bb164__0_561 [label="unwind"];
    bb89__0_561 -> bb90__0_561 [label="0"];
    bb89__0_561 -> bb91__0_561 [label="1"];
    bb89__0_561 -> bb8__0_561 [label="otherwise"];
    bb90__0_561 -> bb93__0_561 [label="return"];
    bb90__0_561 -> bb164__0_561 [label="unwind"];
    bb91__0_561 -> bb92__0_561 [label="return"];
    bb91__0_561 -> bb164__0_561 [label="unwind"];
    bb92__0_561 -> bb153__0_561 [label=""];
    bb93__0_561 -> bb94__0_561 [label="return"];
    bb93__0_561 -> bb164__0_561 [label="unwind"];
    bb94__0_561 -> bb95__0_561 [label="return"];
    bb94__0_561 -> bb164__0_561 [label="unwind"];
    bb95__0_561 -> bb96__0_561 [label="0"];
    bb95__0_561 -> bb97__0_561 [label="1"];
    bb95__0_561 -> bb8__0_561 [label="otherwise"];
    bb96__0_561 -> bb99__0_561 [label="return"];
    bb96__0_561 -> bb164__0_561 [label="unwind"];
    bb97__0_561 -> bb98__0_561 [label="return"];
    bb97__0_561 -> bb164__0_561 [label="unwind"];
    bb98__0_561 -> bb152__0_561 [label=""];
    bb99__0_561 -> bb100__0_561 [label="success"];
    bb99__0_561 -> bb164__0_561 [label="unwind"];
    bb100__0_561 -> bb101__0_561 [label="return"];
    bb100__0_561 -> bb164__0_561 [label="unwind"];
    bb101__0_561 -> bb102__0_561 [label="return"];
    bb101__0_561 -> bb164__0_561 [label="unwind"];
    bb102__0_561 -> bb103__0_561 [label="0"];
    bb102__0_561 -> bb104__0_561 [label="1"];
    bb102__0_561 -> bb8__0_561 [label="otherwise"];
    bb103__0_561 -> bb106__0_561 [label="return"];
    bb103__0_561 -> bb164__0_561 [label="unwind"];
    bb104__0_561 -> bb105__0_561 [label="return"];
    bb104__0_561 -> bb164__0_561 [label="unwind"];
    bb105__0_561 -> bb150__0_561 [label=""];
    bb106__0_561 -> bb107__0_561 [label="return"];
    bb106__0_561 -> bb164__0_561 [label="unwind"];
    bb107__0_561 -> bb108__0_561 [label="0"];
    bb107__0_561 -> bb109__0_561 [label="1"];
    bb107__0_561 -> bb8__0_561 [label="otherwise"];
    bb108__0_561 -> bb111__0_561 [label="0"];
    bb108__0_561 -> bb113__0_561 [label="otherwise"];
    bb109__0_561 -> bb110__0_561 [label="return"];
    bb109__0_561 -> bb164__0_561 [label="unwind"];
    bb110__0_561 -> bb150__0_561 [label=""];
    bb111__0_561 -> bb112__0_561 [label="0"];
    bb111__0_561 -> bb113__0_561 [label="otherwise"];
    bb112__0_561 -> bb114__0_561 [label="0"];
    bb112__0_561 -> bb113__0_561 [label="otherwise"];
    bb113__0_561 -> bb115__0_561 [label="return"];
    bb113__0_561 -> bb164__0_561 [label="unwind"];
    bb114__0_561 -> bb140__0_561 [label="return"];
    bb114__0_561 -> bb164__0_561 [label="unwind"];
    bb115__0_561 -> bb116__0_561 [label="return"];
    bb115__0_561 -> bb164__0_561 [label="unwind"];
    bb116__0_561 -> bb117__0_561 [label="return"];
    bb116__0_561 -> bb164__0_561 [label="unwind"];
    bb117__0_561 -> bb118__0_561 [label="return"];
    bb117__0_561 -> bb164__0_561 [label="unwind"];
    bb118__0_561 -> bb119__0_561 [label="0"];
    bb118__0_561 -> bb120__0_561 [label="1"];
    bb118__0_561 -> bb8__0_561 [label="otherwise"];
    bb119__0_561 -> bb122__0_561 [label="return"];
    bb119__0_561 -> bb163__0_561 [label="unwind"];
    bb120__0_561 -> bb121__0_561 [label="return"];
    bb120__0_561 -> bb171__0_561 [label="unwind"];
    bb121__0_561 -> bb169__0_561 [label=""];
    bb122__0_561 -> bb123__0_561 [label="return"];
    bb122__0_561 -> bb163__0_561 [label="unwind"];
    bb123__0_561 -> bb124__0_561 [label="return"];
    bb123__0_561 -> bb163__0_561 [label="unwind"];
    bb124__0_561 -> bb125__0_561 [label="0"];
    bb124__0_561 -> bb126__0_561 [label="1"];
    bb124__0_561 -> bb8__0_561 [label="otherwise"];
    bb125__0_561 -> bb168__0_561 [label="return"];
    bb125__0_561 -> bb171__0_561 [label="unwind"];
    bb126__0_561 -> bb127__0_561 [label="return"];
    bb126__0_561 -> bb163__0_561 [label="unwind"];
    bb127__0_561 -> bb169__0_561 [label="return"];
    bb127__0_561 -> bb171__0_561 [label="unwind"];
    bb128__0_561 -> bb133__0_561 [label=""];
    bb129__0_561 -> bb131__0_561 [label="0"];
    bb129__0_561 -> bb130__0_561 [label="otherwise"];
    bb130__0_561 -> bb132__0_561 [label=""];
    bb131__0_561 -> bb132__0_561 [label=""];
    bb132__0_561 -> bb133__0_561 [label=""];
    bb133__0_561 -> bb134__0_561 [label="return"];
    bb133__0_561 -> bb164__0_561 [label="unwind"];
    bb134__0_561 -> bb135__0_561 [label="return"];
    bb134__0_561 -> bb164__0_561 [label="unwind"];
    bb135__0_561 -> bb136__0_561 [label="return"];
    bb135__0_561 -> bb164__0_561 [label="unwind"];
    bb136__0_561 -> bb137__0_561 [label="0"];
    bb136__0_561 -> bb138__0_561 [label="1"];
    bb136__0_561 -> bb8__0_561 [label="otherwise"];
    bb137__0_561 -> bb141__0_561 [label=""];
    bb138__0_561 -> bb139__0_561 [label="return"];
    bb138__0_561 -> bb164__0_561 [label="unwind"];
    bb139__0_561 -> bb149__0_561 [label=""];
    bb140__0_561 -> bb67__0_561 [label=""];
    bb141__0_561 -> bb67__0_561 [label=""];
    bb142__0_561 -> bb143__0_561 [label="return"];
    bb142__0_561 -> bb166__0_561 [label="unwind"];
    bb143__0_561 -> bb5__0_561 [label=""];
    bb144__0_561 -> bb145__0_561 [label="return"];
    bb144__0_561 -> bb165__0_561 [label="unwind"];
    bb145__0_561 -> bb146__0_561 [label=""];
    bb146__0_561 -> bb147__0_561 [label="return"];
    bb146__0_561 -> bb166__0_561 [label="unwind"];
    bb147__0_561 -> bb148__0_561 [label=""];
    bb148__0_561 -> bb5__0_561 [label=""];
    bb149__0_561 -> bb151__0_561 [label=""];
    bb150__0_561 -> bb151__0_561 [label=""];
    bb151__0_561 -> bb152__0_561 [label=""];
    bb152__0_561 -> bb153__0_561 [label=""];
    bb153__0_561 -> bb154__0_561 [label=""];
    bb154__0_561 -> bb156__0_561 [label=""];
    bb155__0_561 -> bb156__0_561 [label=""];
    bb156__0_561 -> bb157__0_561 [label=""];
    bb157__0_561 -> bb158__0_561 [label="return"];
    bb157__0_561 -> bb174__0_561 [label="unwind"];
    bb158__0_561 -> bb159__0_561 [label="0"];
    bb158__0_561 -> bb170__0_561 [label="otherwise"];
    bb159__0_561 -> bb160__0_561 [label="return"];
    bb159__0_561 -> bb166__0_561 [label="unwind"];
    bb160__0_561 -> bb161__0_561 [label="return"];
    bb160__0_561 -> bb167__0_561 [label="unwind"];
    bb161__0_561 -> bb162__0_561 [label=""];
    bb163__0_561 -> bb171__0_561 [label="return"];
    bb164__0_561 -> bb174__0_561 [label="return"];
    bb165__0_561 -> bb166__0_561 [label="return"];
    bb166__0_561 -> bb167__0_561 [label="return"];
    bb168__0_561 -> bb129__0_561 [label="0"];
    bb168__0_561 -> bb128__0_561 [label="otherwise"];
    bb169__0_561 -> bb149__0_561 [label=""];
    bb170__0_561 -> bb159__0_561 [label="return"];
    bb170__0_561 -> bb165__0_561 [label="unwind"];
    bb171__0_561 -> bb164__0_561 [label=""];
    bb172__0_561 -> bb174__0_561 [label=""];
    bb173__0_561 -> bb165__0_561 [label="return"];
    bb174__0_561 -> bb165__0_561 [label="0"];
    bb174__0_561 -> bb173__0_561 [label="otherwise"];
    bb175__0_561 -> bb165__0_561 [label=""];
    bb176__0_561 -> bb166__0_561 [label=""];
}
