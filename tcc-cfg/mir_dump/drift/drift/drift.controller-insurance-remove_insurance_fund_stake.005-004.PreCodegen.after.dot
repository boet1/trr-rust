digraph Mir_0_199 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn controller::insurance::remove_insurance_fund_stake(_1: u64, _2: &amp;ReErased mut state::insurance_fund_stake::InsuranceFundStake, _3: &amp;ReErased mut state::user::UserStats, _4: &amp;ReErased mut state::spot_market::SpotMarket, _5: i64) -&gt; std::result::Result&lt;u64, error::ErrorCode&gt;<br align="left"/>let _6: i64;<br align="left"/>let mut _7: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _8: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _9: i64;<br align="left"/>let mut _10: i64;<br align="left"/>let mut _11: isize;<br align="left"/>let _12: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _13: !;<br align="left"/>let mut _14: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _15: i64;<br align="left"/>let _16: ();<br align="left"/>let mut _17: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _18: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _19: bool;<br align="left"/>let mut _20: i64;<br align="left"/>let mut _21: i64;<br align="left"/>let mut _22: ();<br align="left"/>let _23: error::ErrorCode;<br align="left"/>let _24: ();<br align="left"/>let mut _25: &amp;ReErased str;<br align="left"/>let _26: &amp;ReErased str;<br align="left"/>let mut _27: &amp;ReErased std::string::String;<br align="left"/>let _28: &amp;ReErased std::string::String;<br align="left"/>let _29: std::string::String;<br align="left"/>let _30: std::string::String;<br align="left"/>let mut _31: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _32: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _33: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _34: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _35: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _36: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _37: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _38: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _39: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _40: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _41: &amp;ReErased error::ErrorCode;<br align="left"/>let _42: &amp;ReErased error::ErrorCode;<br align="left"/>let mut _43: error::ErrorCode;<br align="left"/>let mut _44: isize;<br align="left"/>let _45: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _46: !;<br align="left"/>let mut _47: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _48: ();<br align="left"/>let _49: ();<br align="left"/>let mut _50: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _51: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _52: u64;<br align="left"/>let mut _53: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _54: isize;<br align="left"/>let _55: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _56: !;<br align="left"/>let mut _57: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _58: ();<br align="left"/>let _59: ();<br align="left"/>let mut _60: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _61: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _62: &amp;ReErased mut state::insurance_fund_stake::InsuranceFundStake;<br align="left"/>let mut _63: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _64: isize;<br align="left"/>let _65: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _66: !;<br align="left"/>let mut _67: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _68: ();<br align="left"/>let _69: u128;<br align="left"/>let mut _70: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _71: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _72: &amp;ReErased state::insurance_fund_stake::InsuranceFundStake;<br align="left"/>let mut _73: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _74: isize;<br align="left"/>let _75: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _76: !;<br align="left"/>let mut _77: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _78: u128;<br align="left"/>let _79: u128;<br align="left"/>let _80: u128;<br align="left"/>let _81: u128;<br align="left"/>let _82: ();<br align="left"/>let mut _83: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _84: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _85: bool;<br align="left"/>let mut _86: u128;<br align="left"/>let mut _87: ();<br align="left"/>let _88: error::ErrorCode;<br align="left"/>let _89: ();<br align="left"/>let mut _90: &amp;ReErased str;<br align="left"/>let _91: &amp;ReErased str;<br align="left"/>let mut _92: &amp;ReErased std::string::String;<br align="left"/>let _93: &amp;ReErased std::string::String;<br align="left"/>let _94: std::string::String;<br align="left"/>let _95: std::string::String;<br align="left"/>let mut _96: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _97: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _98: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _99: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _100: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _101: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _102: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _103: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _104: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _105: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _106: &amp;ReErased error::ErrorCode;<br align="left"/>let _107: &amp;ReErased error::ErrorCode;<br align="left"/>let _108: ();<br align="left"/>let mut _109: &amp;ReErased str;<br align="left"/>let _110: &amp;ReErased str;<br align="left"/>let mut _111: error::ErrorCode;<br align="left"/>let mut _112: isize;<br align="left"/>let _113: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _114: !;<br align="left"/>let mut _115: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _116: ();<br align="left"/>let _117: ();<br align="left"/>let mut _118: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _119: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _120: bool;<br align="left"/>let mut _121: u128;<br align="left"/>let mut _122: u128;<br align="left"/>let mut _123: ();<br align="left"/>let _124: error::ErrorCode;<br align="left"/>let _125: ();<br align="left"/>let mut _126: &amp;ReErased str;<br align="left"/>let _127: &amp;ReErased str;<br align="left"/>let mut _128: &amp;ReErased std::string::String;<br align="left"/>let _129: &amp;ReErased std::string::String;<br align="left"/>let _130: std::string::String;<br align="left"/>let _131: std::string::String;<br align="left"/>let mut _132: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _133: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _134: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _135: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _136: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _137: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _138: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _139: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _140: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _141: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _142: &amp;ReErased error::ErrorCode;<br align="left"/>let _143: &amp;ReErased error::ErrorCode;<br align="left"/>let mut _144: error::ErrorCode;<br align="left"/>let mut _145: isize;<br align="left"/>let _146: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _147: !;<br align="left"/>let mut _148: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _149: ();<br align="left"/>let _150: u64;<br align="left"/>let mut _151: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _152: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _153: u128;<br align="left"/>let mut _154: u128;<br align="left"/>let mut _155: u64;<br align="left"/>let mut _156: isize;<br align="left"/>let _157: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _158: !;<br align="left"/>let mut _159: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _160: u64;<br align="left"/>let _161: u128;<br align="left"/>let mut _162: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _163: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _164: &amp;ReErased state::insurance_fund_stake::InsuranceFundStake;<br align="left"/>let mut _165: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _166: u64;<br align="left"/>let mut _167: isize;<br align="left"/>let _168: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _169: !;<br align="left"/>let mut _170: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _171: u128;<br align="left"/>let _172: u64;<br align="left"/>let mut _173: u64;<br align="left"/>let mut _174: u64;<br align="left"/>let _175: ();<br align="left"/>let mut _176: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _177: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _178: &amp;ReErased mut state::insurance_fund_stake::InsuranceFundStake;<br align="left"/>let mut _179: u128;<br align="left"/>let mut _180: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _181: isize;<br align="left"/>let _182: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _183: !;<br align="left"/>let mut _184: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _185: ();<br align="left"/>let mut _186: i64;<br align="left"/>let mut _187: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _188: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _189: i64;<br align="left"/>let mut _190: i64;<br align="left"/>let mut _191: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _192: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _193: u64;<br align="left"/>let mut _194: isize;<br align="left"/>let _195: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _196: !;<br align="left"/>let mut _197: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _198: i64;<br align="left"/>let mut _199: isize;<br align="left"/>let _200: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _201: !;<br align="left"/>let mut _202: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _203: i64;<br align="left"/>let mut _204: u128;<br align="left"/>let mut _205: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _206: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _207: u128;<br align="left"/>let mut _208: u128;<br align="left"/>let mut _209: isize;<br align="left"/>let _210: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _211: !;<br align="left"/>let mut _212: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _213: u128;<br align="left"/>let mut _214: u128;<br align="left"/>let mut _215: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _216: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _217: u128;<br align="left"/>let mut _218: u128;<br align="left"/>let mut _219: isize;<br align="left"/>let _220: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _221: !;<br align="left"/>let mut _222: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _223: u128;<br align="left"/>let mut _224: i64;<br align="left"/>let _225: u128;<br align="left"/>let mut _226: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _227: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _228: &amp;ReErased state::insurance_fund_stake::InsuranceFundStake;<br align="left"/>let mut _229: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _230: isize;<br align="left"/>let _231: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _232: !;<br align="left"/>let mut _233: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _234: u128;<br align="left"/>let _235: ();<br align="left"/>let mut _236: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _237: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _238: i64;<br align="left"/>let mut _239: i64;<br align="left"/>let mut _240: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _241: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _242: u64;<br align="left"/>let mut _243: isize;<br align="left"/>let _244: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _245: !;<br align="left"/>let mut _246: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _247: i64;<br align="left"/>let mut _248: bool;<br align="left"/>let mut _249: u64;<br align="left"/>let mut _250: &amp;ReErased mut state::insurance_fund_stake::InsuranceFundStake;<br align="left"/>let mut _251: &amp;ReErased mut state::user::UserStats;<br align="left"/>let mut _252: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _253: i64;<br align="left"/>let mut _254: isize;<br align="left"/>let _255: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _256: !;<br align="left"/>let mut _257: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _258: ();<br align="left"/>let _259: ();<br align="left"/>let _260: ();<br align="left"/>let mut _261: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let mut _262: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let _263: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let _264: [&amp;ReErased [u8]; 1_usize];<br align="left"/>let mut _265: &amp;ReErased [u8];<br align="left"/>let _266: &amp;ReErased [u8];<br align="left"/>let mut _267: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _268: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _269: std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _270: &amp;ReErased state::events::InsuranceFundStakeRecord;<br align="left"/>let _271: &amp;ReErased state::events::InsuranceFundStakeRecord;<br align="left"/>let _272: state::events::InsuranceFundStakeRecord;<br align="left"/>let mut _273: i64;<br align="left"/>let mut _274: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _275: state::events::StakeAction;<br align="left"/>let mut _276: u64;<br align="left"/>let mut _277: u16;<br align="left"/>let mut _278: u64;<br align="left"/>let mut _279: u128;<br align="left"/>let mut _280: u128;<br align="left"/>let mut _281: u128;<br align="left"/>let mut _282: u128;<br align="left"/>let mut _283: u128;<br align="left"/>let mut _284: u128;<br align="left"/>let mut _285: u64;<br align="left"/>let mut _286: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _287: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _288: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>debug insurance_vault_amount =&gt; _1;<br align="left"/>debug insurance_fund_stake =&gt; _2;<br align="left"/>debug user_stats =&gt; _3;<br align="left"/>debug spot_market =&gt; _4;<br align="left"/>debug now =&gt; _5;<br align="left"/>debug time_since_withdraw_request =&gt; _6;<br align="left"/>debug residual =&gt; _12;<br align="left"/>debug val =&gt; _15;<br align="left"/>debug error_code =&gt; _23;<br align="left"/>debug res =&gt; _30;<br align="left"/>debug residual =&gt; _45;<br align="left"/>debug val =&gt; _48;<br align="left"/>debug residual =&gt; _55;<br align="left"/>debug val =&gt; _58;<br align="left"/>debug residual =&gt; _65;<br align="left"/>debug val =&gt; _68;<br align="left"/>debug if_shares_before =&gt; _69;<br align="left"/>debug residual =&gt; _75;<br align="left"/>debug val =&gt; _78;<br align="left"/>debug total_if_shares_before =&gt; _79;<br align="left"/>debug user_if_shares_before =&gt; _80;<br align="left"/>debug n_shares =&gt; _81;<br align="left"/>debug error_code =&gt; _88;<br align="left"/>debug res =&gt; _95;<br align="left"/>debug residual =&gt; _113;<br align="left"/>debug val =&gt; _116;<br align="left"/>debug error_code =&gt; _124;<br align="left"/>debug res =&gt; _131;<br align="left"/>debug residual =&gt; _146;<br align="left"/>debug val =&gt; _149;<br align="left"/>debug amount =&gt; _150;<br align="left"/>debug residual =&gt; _157;<br align="left"/>debug val =&gt; _160;<br align="left"/>debug _if_shares_lost =&gt; _161;<br align="left"/>debug residual =&gt; _168;<br align="left"/>debug val =&gt; _171;<br align="left"/>debug withdraw_amount =&gt; _172;<br align="left"/>debug residual =&gt; _182;<br align="left"/>debug val =&gt; _185;<br align="left"/>debug residual =&gt; _195;<br align="left"/>debug val =&gt; _198;<br align="left"/>debug residual =&gt; _200;<br align="left"/>debug val =&gt; _203;<br align="left"/>debug residual =&gt; _210;<br align="left"/>debug val =&gt; _213;<br align="left"/>debug residual =&gt; _220;<br align="left"/>debug val =&gt; _223;<br align="left"/>debug if_shares_after =&gt; _225;<br align="left"/>debug residual =&gt; _231;<br align="left"/>debug val =&gt; _234;<br align="left"/>debug residual =&gt; _244;<br align="left"/>debug val =&gt; _247;<br align="left"/>debug residual =&gt; _255;<br align="left"/>debug val =&gt; _258;<br align="left"/>>;
    bb0__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = _5<br/>StorageLive(_10)<br/>_10 = ((*_2).6: i64)<br/></td></tr><tr><td align="left">_8 = &lt;i64 as SafeMath&gt;::safe_sub(move _9, move _10)</td></tr></table>>];
    bb1__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _8)</td></tr></table>>];
    bb2__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_11 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _11)</td></tr></table>>];
    bb3__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_15)<br/>_15 = ((_7 as Continue).0: i64)<br/>_6 = _15<br/>StorageDead(_15)<br/>StorageDead(_7)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_20 = _6<br/>StorageLive(_21)<br/>_21 = (((*_4).9: state::spot_market::InsuranceFund).4: i64)<br/>_19 = Ge(move _20, move _21)<br/></td></tr><tr><td align="left">switchInt(move _19)</td></tr></table>>];
    bb4__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_7 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_14)<br/>_14 = _12<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _14)</td></tr></table>>];
    bb6__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_12)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_20)<br/>StorageLive(_22)<br/>_22 = ()<br/>_18 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _22)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_20)<br/>StorageLive(_23)<br/>_23 = error::ErrorCode::TryingToRemoveLiquidityTooFast<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>_288 = const _<br/>_34 = &amp;(*_288)<br/>_33 = &amp;(*_34)<br/>_32 = move _33 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_33)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>_42 = &amp;_23<br/>_41 = &amp;(*_42)<br/></td></tr><tr><td align="left">_40 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _41)</td></tr></table>>];
    bb9__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>_39 = [move _40]<br/>StorageDead(_40)<br/>_38 = &amp;_39<br/>_37 = &amp;(*_38)<br/>_36 = move _37 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">_31 = Arguments::&lt;'_&gt;::new_v1(move _32, move _36)</td></tr></table>>];
    bb10__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">_30 = format(move _31)</td></tr></table>>];
    bb11__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_42)<br/>StorageDead(_39)<br/>StorageDead(_38)<br/>StorageDead(_34)<br/>_29 = move _30<br/>StorageDead(_30)<br/>_28 = &amp;_29<br/>_27 = &amp;(*_28)<br/></td></tr><tr><td align="left">_26 = &lt;String as Deref&gt;::deref(move _27)</td></tr></table>>];
    bb12__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">_25 = &amp;(*_26)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">_24 = solana_program::log::sol_log(move _25)</td></tr></table>>];
    bb13__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/></td></tr><tr><td align="left">drop(_29)</td></tr></table>>];
    bb14__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_28)<br/>StorageDead(_26)<br/>StorageDead(_24)<br/>StorageLive(_43)<br/>_43 = _23<br/>_18 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _43)<br/>StorageDead(_43)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/></td></tr><tr><td align="left">_17 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _18)</td></tr></table>>];
    bb16__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>_44 = discriminant(_17)<br/></td></tr><tr><td align="left">switchInt(move _44)</td></tr></table>>];
    bb17__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_48)<br/>_48 = ((_17 as Continue).0: ())<br/>_16 = _48<br/>StorageDead(_48)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>_52 = _1<br/>StorageLive(_53)<br/>_53 = &amp;mut (*_4)<br/></td></tr><tr><td align="left">_51 = apply_rebase_to_insurance_fund(move _52, move _53)</td></tr></table>>];
    bb18__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_45)<br/>_45 = ((_17 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_47)<br/>_47 = _45<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _47)</td></tr></table>>];
    bb19__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_45)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">_50 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _51)</td></tr></table>>];
    bb21__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>_54 = discriminant(_50)<br/></td></tr><tr><td align="left">switchInt(move _54)</td></tr></table>>];
    bb22__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_58)<br/>_58 = ((_50 as Continue).0: ())<br/>_49 = _58<br/>StorageDead(_58)<br/>StorageDead(_50)<br/>StorageDead(_49)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>_62 = &amp;mut (*_2)<br/>StorageLive(_63)<br/>_63 = &amp;mut (*_4)<br/></td></tr><tr><td align="left">_61 = apply_rebase_to_insurance_fund_stake(move _62, move _63)</td></tr></table>>];
    bb23__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_55)<br/>_55 = ((_50 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_57)<br/>_57 = _55<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _57)</td></tr></table>>];
    bb24__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_55)<br/>StorageDead(_50)<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">_60 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _61)</td></tr></table>>];
    bb26__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>_64 = discriminant(_60)<br/></td></tr><tr><td align="left">switchInt(move _64)</td></tr></table>>];
    bb27__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_68)<br/>_68 = ((_60 as Continue).0: ())<br/>_59 = _68<br/>StorageDead(_68)<br/>StorageDead(_60)<br/>StorageDead(_59)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>_72 = &amp;(*_2)<br/>StorageLive(_73)<br/>_73 = &amp;(*_4)<br/></td></tr><tr><td align="left">_71 = InsuranceFundStake::checked_if_shares(move _72, move _73)</td></tr></table>>];
    bb28__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_65)<br/>_65 = ((_60 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_67)<br/>_67 = _65<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _67)</td></tr></table>>];
    bb29__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>StorageDead(_65)<br/>StorageDead(_60)<br/>StorageDead(_59)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>StorageDead(_72)<br/></td></tr><tr><td align="left">_70 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _71)</td></tr></table>>];
    bb31__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>_74 = discriminant(_70)<br/></td></tr><tr><td align="left">switchInt(move _74)</td></tr></table>>];
    bb32__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_78)<br/>_78 = ((_70 as Continue).0: u128)<br/>_69 = _78<br/>StorageDead(_78)<br/>StorageDead(_70)<br/>StorageLive(_79)<br/>_79 = (((*_4).9: state::spot_market::InsuranceFund).1: u128)<br/>StorageLive(_80)<br/>_80 = (((*_4).9: state::spot_market::InsuranceFund).2: u128)<br/>StorageLive(_81)<br/>_81 = ((*_2).2: u128)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>_86 = _81<br/>_85 = Gt(move _86, const 0_u128)<br/></td></tr><tr><td align="left">switchInt(move _85)</td></tr></table>>];
    bb33__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageLive(_75)<br/>_75 = ((_70 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_77)<br/>_77 = _75<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _77)</td></tr></table>>];
    bb34__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>StorageDead(_75)<br/>StorageDead(_70)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>StorageLive(_87)<br/>_87 = ()<br/>_84 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _87)<br/>StorageDead(_87)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>StorageLive(_88)<br/>_88 = error::ErrorCode::InvalidIFUnstake<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>_287 = const _<br/>_99 = &amp;(*_287)<br/>_98 = &amp;(*_99)<br/>_97 = move _98 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_98)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>_107 = &amp;_88<br/>_106 = &amp;(*_107)<br/></td></tr><tr><td align="left">_105 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _106)</td></tr></table>>];
    bb37__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/>_104 = [move _105]<br/>StorageDead(_105)<br/>_103 = &amp;_104<br/>_102 = &amp;(*_103)<br/>_101 = move _102 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_102)<br/></td></tr><tr><td align="left">_96 = Arguments::&lt;'_&gt;::new_v1(move _97, move _101)</td></tr></table>>];
    bb38__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/>StorageDead(_97)<br/></td></tr><tr><td align="left">_95 = format(move _96)</td></tr></table>>];
    bb39__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>StorageDead(_107)<br/>StorageDead(_104)<br/>StorageDead(_103)<br/>StorageDead(_99)<br/>_94 = move _95<br/>StorageDead(_95)<br/>_93 = &amp;_94<br/>_92 = &amp;(*_93)<br/></td></tr><tr><td align="left">_91 = &lt;String as Deref&gt;::deref(move _92)</td></tr></table>>];
    bb40__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">_90 = &amp;(*_91)<br/>StorageDead(_92)<br/></td></tr><tr><td align="left">_89 = solana_program::log::sol_log(move _90)</td></tr></table>>];
    bb41__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/></td></tr><tr><td align="left">drop(_94)</td></tr></table>>];
    bb42__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/>StorageDead(_93)<br/>StorageDead(_91)<br/>StorageDead(_89)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>_110 = const &quot;Must submit withdraw request and wait the escrow period&quot;<br/>_109 = &amp;(*_110)<br/></td></tr><tr><td align="left">_108 = solana_program::log::sol_log(move _109)</td></tr></table>>];
    bb43__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/>StorageDead(_110)<br/>StorageDead(_108)<br/>StorageLive(_111)<br/>_111 = _88<br/>_84 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _111)<br/>StorageDead(_111)<br/>StorageDead(_88)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/></td></tr><tr><td align="left">_83 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _84)</td></tr></table>>];
    bb45__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>_112 = discriminant(_83)<br/></td></tr><tr><td align="left">switchInt(move _112)</td></tr></table>>];
    bb46__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageLive(_116)<br/>_116 = ((_83 as Continue).0: ())<br/>_82 = _116<br/>StorageDead(_116)<br/>StorageDead(_83)<br/>StorageDead(_82)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>_121 = _69<br/>StorageLive(_122)<br/>_122 = _81<br/>_120 = Ge(move _121, move _122)<br/></td></tr><tr><td align="left">switchInt(move _120)</td></tr></table>>];
    bb47__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageLive(_113)<br/>_113 = ((_83 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_115)<br/>_115 = _113<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _115)</td></tr></table>>];
    bb48__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_115)<br/>StorageDead(_113)<br/>StorageDead(_83)<br/>StorageDead(_82)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/>StorageDead(_121)<br/>StorageLive(_123)<br/>_123 = ()<br/>_119 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _123)<br/>StorageDead(_123)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/>StorageDead(_121)<br/>StorageLive(_124)<br/>_124 = error::ErrorCode::InsufficientIFShares<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>_286 = const _<br/>_135 = &amp;(*_286)<br/>_134 = &amp;(*_135)<br/>_133 = move _134 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_134)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>_143 = &amp;_124<br/>_142 = &amp;(*_143)<br/></td></tr><tr><td align="left">_141 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _142)</td></tr></table>>];
    bb51__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_142)<br/>_140 = [move _141]<br/>StorageDead(_141)<br/>_139 = &amp;_140<br/>_138 = &amp;(*_139)<br/>_137 = move _138 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_138)<br/></td></tr><tr><td align="left">_132 = Arguments::&lt;'_&gt;::new_v1(move _133, move _137)</td></tr></table>>];
    bb52__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_137)<br/>StorageDead(_133)<br/></td></tr><tr><td align="left">_131 = format(move _132)</td></tr></table>>];
    bb53__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_132)<br/>StorageDead(_143)<br/>StorageDead(_140)<br/>StorageDead(_139)<br/>StorageDead(_135)<br/>_130 = move _131<br/>StorageDead(_131)<br/>_129 = &amp;_130<br/>_128 = &amp;(*_129)<br/></td></tr><tr><td align="left">_127 = &lt;String as Deref&gt;::deref(move _128)</td></tr></table>>];
    bb54__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">_126 = &amp;(*_127)<br/>StorageDead(_128)<br/></td></tr><tr><td align="left">_125 = solana_program::log::sol_log(move _126)</td></tr></table>>];
    bb55__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/></td></tr><tr><td align="left">drop(_130)</td></tr></table>>];
    bb56__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_130)<br/>StorageDead(_129)<br/>StorageDead(_127)<br/>StorageDead(_125)<br/>StorageLive(_144)<br/>_144 = _124<br/>_119 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _144)<br/>StorageDead(_144)<br/>StorageDead(_124)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb57__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/></td></tr><tr><td align="left">_118 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _119)</td></tr></table>>];
    bb58__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/>_145 = discriminant(_118)<br/></td></tr><tr><td align="left">switchInt(move _145)</td></tr></table>>];
    bb59__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageLive(_149)<br/>_149 = ((_118 as Continue).0: ())<br/>_117 = _149<br/>StorageDead(_149)<br/>StorageDead(_118)<br/>StorageDead(_117)<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>StorageLive(_152)<br/>StorageLive(_153)<br/>_153 = _81<br/>StorageLive(_154)<br/>_154 = (((*_4).9: state::spot_market::InsuranceFund).1: u128)<br/>StorageLive(_155)<br/>_155 = _1<br/></td></tr><tr><td align="left">_152 = if_shares_to_vault_amount(move _153, move _154, move _155)</td></tr></table>>];
    bb60__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageLive(_146)<br/>_146 = ((_118 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_148)<br/>_148 = _146<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _148)</td></tr></table>>];
    bb61__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_148)<br/>StorageDead(_146)<br/>StorageDead(_118)<br/>StorageDead(_117)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_155)<br/>StorageDead(_154)<br/>StorageDead(_153)<br/></td></tr><tr><td align="left">_151 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _152)</td></tr></table>>];
    bb63__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_152)<br/>_156 = discriminant(_151)<br/></td></tr><tr><td align="left">switchInt(move _156)</td></tr></table>>];
    bb64__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageLive(_160)<br/>_160 = ((_151 as Continue).0: u64)<br/>_150 = _160<br/>StorageDead(_160)<br/>StorageDead(_151)<br/>StorageLive(_161)<br/>StorageLive(_162)<br/>StorageLive(_163)<br/>StorageLive(_164)<br/>_164 = &amp;(*_2)<br/>StorageLive(_165)<br/>_165 = &amp;(*_4)<br/>StorageLive(_166)<br/>_166 = _1<br/></td></tr><tr><td align="left">_163 = calculate_if_shares_lost(move _164, move _165, move _166)</td></tr></table>>];
    bb65__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageLive(_157)<br/>_157 = ((_151 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_159)<br/>_159 = _157<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _159)</td></tr></table>>];
    bb66__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_159)<br/>StorageDead(_157)<br/>StorageDead(_151)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb67__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_166)<br/>StorageDead(_165)<br/>StorageDead(_164)<br/></td></tr><tr><td align="left">_162 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _163)</td></tr></table>>];
    bb68__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_163)<br/>_167 = discriminant(_162)<br/></td></tr><tr><td align="left">switchInt(move _167)</td></tr></table>>];
    bb69__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageLive(_171)<br/>_171 = ((_162 as Continue).0: u128)<br/>_161 = _171<br/>StorageDead(_171)<br/>StorageDead(_162)<br/>StorageLive(_172)<br/>StorageLive(_173)<br/>_173 = _150<br/>StorageLive(_174)<br/>_174 = ((*_2).5: u64)<br/></td></tr><tr><td align="left">_172 = &lt;u64 as Ord&gt;::min(move _173, move _174)</td></tr></table>>];
    bb70__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageLive(_168)<br/>_168 = ((_162 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_170)<br/>_170 = _168<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _170)</td></tr></table>>];
    bb71__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_170)<br/>StorageDead(_168)<br/>StorageDead(_162)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb72__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_174)<br/>StorageDead(_173)<br/>StorageLive(_175)<br/>StorageLive(_176)<br/>StorageLive(_177)<br/>StorageLive(_178)<br/>_178 = &amp;mut (*_2)<br/>StorageLive(_179)<br/>_179 = _81<br/>StorageLive(_180)<br/>_180 = &amp;(*_4)<br/></td></tr><tr><td align="left">_177 = InsuranceFundStake::decrease_if_shares(move _178, move _179, move _180)</td></tr></table>>];
    bb73__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_180)<br/>StorageDead(_179)<br/>StorageDead(_178)<br/></td></tr><tr><td align="left">_176 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _177)</td></tr></table>>];
    bb74__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_177)<br/>_181 = discriminant(_176)<br/></td></tr><tr><td align="left">switchInt(move _181)</td></tr></table>>];
    bb75__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageLive(_185)<br/>_185 = ((_176 as Continue).0: ())<br/>_175 = _185<br/>StorageDead(_185)<br/>StorageDead(_176)<br/>StorageDead(_175)<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>StorageLive(_189)<br/>_189 = ((*_2).7: i64)<br/>StorageLive(_190)<br/>StorageLive(_191)<br/>StorageLive(_192)<br/>StorageLive(_193)<br/>_193 = _172<br/></td></tr><tr><td align="left">_192 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _193)</td></tr></table>>];
    bb76__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageLive(_182)<br/>_182 = ((_176 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_184)<br/>_184 = _182<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _184)</td></tr></table>>];
    bb77__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_184)<br/>StorageDead(_182)<br/>StorageDead(_176)<br/>StorageDead(_175)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb78__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_193)<br/></td></tr><tr><td align="left">_191 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _192)</td></tr></table>>];
    bb79__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_192)<br/>_194 = discriminant(_191)<br/></td></tr><tr><td align="left">switchInt(move _194)</td></tr></table>>];
    bb80__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageLive(_198)<br/>_198 = ((_191 as Continue).0: i64)<br/>_190 = _198<br/>StorageDead(_198)<br/></td></tr><tr><td align="left">_188 = &lt;i64 as SafeMath&gt;::safe_sub(move _189, move _190)</td></tr></table>>];
    bb81__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageLive(_195)<br/>_195 = ((_191 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_197)<br/>_197 = _195<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _197)</td></tr></table>>];
    bb82__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_197)<br/>StorageDead(_195)<br/>StorageDead(_190)<br/>StorageDead(_189)<br/>StorageDead(_188)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb83__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_190)<br/>StorageDead(_189)<br/></td></tr><tr><td align="left">_187 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _188)</td></tr></table>>];
    bb84__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_188)<br/>_199 = discriminant(_187)<br/></td></tr><tr><td align="left">switchInt(move _199)</td></tr></table>>];
    bb85__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageLive(_203)<br/>_203 = ((_187 as Continue).0: i64)<br/>_186 = _203<br/>StorageDead(_203)<br/>((*_2).7: i64) = move _186<br/>StorageDead(_186)<br/>StorageDead(_191)<br/>StorageDead(_187)<br/>StorageLive(_204)<br/>StorageLive(_205)<br/>StorageLive(_206)<br/>StorageLive(_207)<br/>_207 = (((*_4).9: state::spot_market::InsuranceFund).1: u128)<br/>StorageLive(_208)<br/>_208 = _81<br/></td></tr><tr><td align="left">_206 = &lt;u128 as SafeMath&gt;::safe_sub(move _207, move _208)</td></tr></table>>];
    bb86__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageLive(_200)<br/>_200 = ((_187 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_202)<br/>_202 = _200<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _202)</td></tr></table>>];
    bb87__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_202)<br/>StorageDead(_200)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb88__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_208)<br/>StorageDead(_207)<br/></td></tr><tr><td align="left">_205 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _206)</td></tr></table>>];
    bb89__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_206)<br/>_209 = discriminant(_205)<br/></td></tr><tr><td align="left">switchInt(move _209)</td></tr></table>>];
    bb90__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageLive(_213)<br/>_213 = ((_205 as Continue).0: u128)<br/>_204 = _213<br/>StorageDead(_213)<br/>(((*_4).9: state::spot_market::InsuranceFund).1: u128) = move _204<br/>StorageDead(_204)<br/>StorageDead(_205)<br/>StorageLive(_214)<br/>StorageLive(_215)<br/>StorageLive(_216)<br/>StorageLive(_217)<br/>_217 = (((*_4).9: state::spot_market::InsuranceFund).2: u128)<br/>StorageLive(_218)<br/>_218 = _81<br/></td></tr><tr><td align="left">_216 = &lt;u128 as SafeMath&gt;::safe_sub(move _217, move _218)</td></tr></table>>];
    bb91__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageLive(_210)<br/>_210 = ((_205 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_212)<br/>_212 = _210<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _212)</td></tr></table>>];
    bb92__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_212)<br/>StorageDead(_210)<br/>StorageDead(_204)<br/>StorageDead(_205)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb93__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_218)<br/>StorageDead(_217)<br/></td></tr><tr><td align="left">_215 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _216)</td></tr></table>>];
    bb94__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_216)<br/>_219 = discriminant(_215)<br/></td></tr><tr><td align="left">switchInt(move _219)</td></tr></table>>];
    bb95__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageLive(_223)<br/>_223 = ((_215 as Continue).0: u128)<br/>_214 = _223<br/>StorageDead(_223)<br/>(((*_4).9: state::spot_market::InsuranceFund).2: u128) = move _214<br/>StorageDead(_214)<br/>StorageDead(_215)<br/>((*_2).2: u128) = const 0_u128<br/>((*_2).5: u64) = const 0_u64<br/>StorageLive(_224)<br/>_224 = _5<br/>((*_2).6: i64) = move _224<br/>StorageDead(_224)<br/>StorageLive(_225)<br/>StorageLive(_226)<br/>StorageLive(_227)<br/>StorageLive(_228)<br/>_228 = &amp;(*_2)<br/>StorageLive(_229)<br/>_229 = &amp;(*_4)<br/></td></tr><tr><td align="left">_227 = InsuranceFundStake::checked_if_shares(move _228, move _229)</td></tr></table>>];
    bb96__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageLive(_220)<br/>_220 = ((_215 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_222)<br/>_222 = _220<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _222)</td></tr></table>>];
    bb97__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_222)<br/>StorageDead(_220)<br/>StorageDead(_214)<br/>StorageDead(_215)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb98__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_229)<br/>StorageDead(_228)<br/></td></tr><tr><td align="left">_226 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _227)</td></tr></table>>];
    bb99__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageDead(_227)<br/>_230 = discriminant(_226)<br/></td></tr><tr><td align="left">switchInt(move _230)</td></tr></table>>];
    bb100__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageLive(_234)<br/>_234 = ((_226 as Continue).0: u128)<br/>_225 = _234<br/>StorageDead(_234)<br/>StorageDead(_226)<br/>StorageLive(_235)<br/>StorageLive(_236)<br/>StorageLive(_237)<br/>StorageLive(_238)<br/>StorageLive(_239)<br/>StorageLive(_240)<br/>StorageLive(_241)<br/>StorageLive(_242)<br/>_242 = _172<br/></td></tr><tr><td align="left">_241 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _242)</td></tr></table>>];
    bb101__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageLive(_231)<br/>_231 = ((_226 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_233)<br/>_233 = _231<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _233)</td></tr></table>>];
    bb102__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_233)<br/>StorageDead(_231)<br/>StorageDead(_226)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb103__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_242)<br/></td></tr><tr><td align="left">_240 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _241)</td></tr></table>>];
    bb104__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_241)<br/>_243 = discriminant(_240)<br/></td></tr><tr><td align="left">switchInt(move _243)</td></tr></table>>];
    bb105__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageLive(_247)<br/>_247 = ((_240 as Continue).0: i64)<br/>_239 = _247<br/>StorageDead(_247)<br/>_248 = Eq(_239, const i64::MIN)<br/></td></tr><tr><td align="left">assert(!move _248, &quot;attempt to negate `{}`, which would overflow&quot;, _239)</td></tr></table>>];
    bb106__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageLive(_244)<br/>_244 = ((_240 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_246)<br/>_246 = _244<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _246)</td></tr></table>>];
    bb107__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_246)<br/>StorageDead(_244)<br/>StorageDead(_239)<br/>StorageDead(_238)<br/>StorageDead(_237)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb108__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">_238 = Neg(move _239)<br/>StorageDead(_239)<br/>StorageLive(_249)<br/>_249 = _1<br/>StorageLive(_250)<br/>_250 = &amp;mut (*_2)<br/>StorageLive(_251)<br/>_251 = &amp;mut (*_3)<br/>StorageLive(_252)<br/>_252 = &amp;mut (*_4)<br/>StorageLive(_253)<br/>_253 = _5<br/></td></tr><tr><td align="left">_237 = update_user_stats_if_stake_amount(move _238, move _249, move _250, move _251, move _252, move _253)</td></tr></table>>];
    bb109__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageDead(_253)<br/>StorageDead(_252)<br/>StorageDead(_251)<br/>StorageDead(_250)<br/>StorageDead(_249)<br/>StorageDead(_238)<br/></td></tr><tr><td align="left">_236 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _237)</td></tr></table>>];
    bb110__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_237)<br/>_254 = discriminant(_236)<br/></td></tr><tr><td align="left">switchInt(move _254)</td></tr></table>>];
    bb111__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageLive(_258)<br/>_258 = ((_236 as Continue).0: ())<br/>_235 = _258<br/>StorageDead(_258)<br/>StorageDead(_240)<br/>StorageDead(_236)<br/>StorageDead(_235)<br/>StorageLive(_259)<br/>StorageLive(_260)<br/>StorageLive(_261)<br/>StorageLive(_262)<br/>StorageLive(_263)<br/>StorageLive(_264)<br/>StorageLive(_265)<br/>StorageLive(_266)<br/>StorageLive(_267)<br/>StorageLive(_268)<br/>StorageLive(_269)<br/>StorageLive(_270)<br/>StorageLive(_271)<br/>StorageLive(_272)<br/>StorageLive(_273)<br/>_273 = _5<br/>StorageLive(_274)<br/>_274 = ((*_3).0: anchor_lang::prelude::Pubkey)<br/>StorageLive(_275)<br/>_275 = StakeAction::Unstake<br/>StorageLive(_276)<br/>_276 = _172<br/>StorageLive(_277)<br/>_277 = ((*_4).42: u16)<br/>StorageLive(_278)<br/>_278 = _1<br/>StorageLive(_279)<br/>_279 = _69<br/>StorageLive(_280)<br/>_280 = _80<br/>StorageLive(_281)<br/>_281 = _79<br/>StorageLive(_282)<br/>_282 = _225<br/>StorageLive(_283)<br/>_283 = (((*_4).9: state::spot_market::InsuranceFund).1: u128)<br/>StorageLive(_284)<br/>_284 = (((*_4).9: state::spot_market::InsuranceFund).2: u128)<br/>_272 = InsuranceFundStakeRecord { ts: move _273, user_authority: move _274, action: move _275, amount: move _276, market_index: move _277, insurance_vault_amount_before: move _278, if_shares_before: move _279, user_if_shares_before: move _280, total_if_shares_before: move _281, if_shares_after: move _282, user_if_shares_after: move _284, total_if_shares_after: move _283 }<br/>StorageDead(_284)<br/>StorageDead(_283)<br/>StorageDead(_282)<br/>StorageDead(_281)<br/>StorageDead(_280)<br/>StorageDead(_279)<br/>StorageDead(_278)<br/>StorageDead(_277)<br/>StorageDead(_276)<br/>StorageDead(_275)<br/>StorageDead(_274)<br/>StorageDead(_273)<br/>_271 = &amp;_272<br/>_270 = &amp;(*_271)<br/></td></tr><tr><td align="left">_269 = &lt;InsuranceFundStakeRecord as anchor_lang::Event&gt;::data(move _270)</td></tr></table>>];
    bb112__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageLive(_255)<br/>_255 = ((_236 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_257)<br/>_257 = _255<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _257)</td></tr></table>>];
    bb113__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageDead(_257)<br/>StorageDead(_255)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb114__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageDead(_270)<br/>_268 = &amp;_269<br/>_267 = &amp;(*_268)<br/></td></tr><tr><td align="left">_266 = &lt;Vec&lt;u8&gt; as Deref&gt;::deref(move _267)</td></tr></table>>];
    bb115__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">_265 = &amp;(*_266)<br/>StorageDead(_267)<br/>_264 = [move _265]<br/>StorageDead(_265)<br/>_263 = &amp;_264<br/>_262 = &amp;(*_263)<br/>_261 = move _262 as &amp;[&amp;[u8]] (PointerCoercion(Unsize))<br/>StorageDead(_262)<br/></td></tr><tr><td align="left">_260 = solana_program::log::sol_log_data(move _261)</td></tr></table>>];
    bb116__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_261)<br/></td></tr><tr><td align="left">drop(_269)</td></tr></table>>];
    bb117__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageDead(_272)<br/>StorageDead(_271)<br/>StorageDead(_269)<br/>StorageDead(_268)<br/>StorageDead(_266)<br/>StorageDead(_264)<br/>StorageDead(_263)<br/>StorageDead(_260)<br/>_259 = const ()<br/>StorageDead(_259)<br/>StorageLive(_285)<br/>_285 = _172<br/>_0 = std::result::Result::&lt;u64, error::ErrorCode&gt;::Ok(move _285)<br/>StorageDead(_285)<br/>StorageDead(_225)<br/>StorageDead(_172)<br/>StorageDead(_161)<br/>StorageDead(_150)<br/>StorageDead(_81)<br/>StorageDead(_80)<br/>StorageDead(_79)<br/>StorageDead(_69)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb118__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageDead(_240)<br/>StorageDead(_236)<br/>StorageDead(_235)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb119__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageDead(_225)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb120__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageDead(_186)<br/>StorageDead(_191)<br/>StorageDead(_187)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb121__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageDead(_172)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb122__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageDead(_161)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb123__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageDead(_150)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb124__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>StorageDead(_80)<br/>StorageDead(_79)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb125__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb126__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb127__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left">return</td></tr></table>>];
    bb128__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">128 (cleanup)</td></tr><tr><td align="left">drop(_269)</td></tr></table>>];
    bb129__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">129 (cleanup)</td></tr><tr><td align="left">drop(_130)</td></tr></table>>];
    bb130__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">130 (cleanup)</td></tr><tr><td align="left">drop(_94)</td></tr></table>>];
    bb131__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">131 (cleanup)</td></tr><tr><td align="left">drop(_29)</td></tr></table>>];
    bb132__0_199 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">132 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_199 -> bb1__0_199 [label="return"];
    bb1__0_199 -> bb2__0_199 [label="return"];
    bb2__0_199 -> bb3__0_199 [label="0"];
    bb2__0_199 -> bb5__0_199 [label="1"];
    bb2__0_199 -> bb4__0_199 [label="otherwise"];
    bb3__0_199 -> bb8__0_199 [label="0"];
    bb3__0_199 -> bb7__0_199 [label="otherwise"];
    bb5__0_199 -> bb6__0_199 [label="return"];
    bb6__0_199 -> bb126__0_199 [label=""];
    bb7__0_199 -> bb15__0_199 [label=""];
    bb8__0_199 -> bb9__0_199 [label="return"];
    bb9__0_199 -> bb10__0_199 [label="return"];
    bb10__0_199 -> bb11__0_199 [label="return"];
    bb11__0_199 -> bb12__0_199 [label="return"];
    bb11__0_199 -> bb131__0_199 [label="unwind"];
    bb12__0_199 -> bb13__0_199 [label="return"];
    bb12__0_199 -> bb131__0_199 [label="unwind"];
    bb13__0_199 -> bb14__0_199 [label="return"];
    bb13__0_199 -> bb132__0_199 [label="unwind"];
    bb14__0_199 -> bb15__0_199 [label=""];
    bb15__0_199 -> bb16__0_199 [label="return"];
    bb16__0_199 -> bb17__0_199 [label="0"];
    bb16__0_199 -> bb18__0_199 [label="1"];
    bb16__0_199 -> bb4__0_199 [label="otherwise"];
    bb17__0_199 -> bb20__0_199 [label="return"];
    bb18__0_199 -> bb19__0_199 [label="return"];
    bb19__0_199 -> bb126__0_199 [label=""];
    bb20__0_199 -> bb21__0_199 [label="return"];
    bb21__0_199 -> bb22__0_199 [label="0"];
    bb21__0_199 -> bb23__0_199 [label="1"];
    bb21__0_199 -> bb4__0_199 [label="otherwise"];
    bb22__0_199 -> bb25__0_199 [label="return"];
    bb23__0_199 -> bb24__0_199 [label="return"];
    bb24__0_199 -> bb126__0_199 [label=""];
    bb25__0_199 -> bb26__0_199 [label="return"];
    bb26__0_199 -> bb27__0_199 [label="0"];
    bb26__0_199 -> bb28__0_199 [label="1"];
    bb26__0_199 -> bb4__0_199 [label="otherwise"];
    bb27__0_199 -> bb30__0_199 [label="return"];
    bb28__0_199 -> bb29__0_199 [label="return"];
    bb29__0_199 -> bb126__0_199 [label=""];
    bb30__0_199 -> bb31__0_199 [label="return"];
    bb31__0_199 -> bb32__0_199 [label="0"];
    bb31__0_199 -> bb33__0_199 [label="1"];
    bb31__0_199 -> bb4__0_199 [label="otherwise"];
    bb32__0_199 -> bb36__0_199 [label="0"];
    bb32__0_199 -> bb35__0_199 [label="otherwise"];
    bb33__0_199 -> bb34__0_199 [label="return"];
    bb34__0_199 -> bb125__0_199 [label=""];
    bb35__0_199 -> bb44__0_199 [label=""];
    bb36__0_199 -> bb37__0_199 [label="return"];
    bb37__0_199 -> bb38__0_199 [label="return"];
    bb38__0_199 -> bb39__0_199 [label="return"];
    bb39__0_199 -> bb40__0_199 [label="return"];
    bb39__0_199 -> bb130__0_199 [label="unwind"];
    bb40__0_199 -> bb41__0_199 [label="return"];
    bb40__0_199 -> bb130__0_199 [label="unwind"];
    bb41__0_199 -> bb42__0_199 [label="return"];
    bb41__0_199 -> bb132__0_199 [label="unwind"];
    bb42__0_199 -> bb43__0_199 [label="return"];
    bb43__0_199 -> bb44__0_199 [label=""];
    bb44__0_199 -> bb45__0_199 [label="return"];
    bb45__0_199 -> bb46__0_199 [label="0"];
    bb45__0_199 -> bb47__0_199 [label="1"];
    bb45__0_199 -> bb4__0_199 [label="otherwise"];
    bb46__0_199 -> bb50__0_199 [label="0"];
    bb46__0_199 -> bb49__0_199 [label="otherwise"];
    bb47__0_199 -> bb48__0_199 [label="return"];
    bb48__0_199 -> bb124__0_199 [label=""];
    bb49__0_199 -> bb57__0_199 [label=""];
    bb50__0_199 -> bb51__0_199 [label="return"];
    bb51__0_199 -> bb52__0_199 [label="return"];
    bb52__0_199 -> bb53__0_199 [label="return"];
    bb53__0_199 -> bb54__0_199 [label="return"];
    bb53__0_199 -> bb129__0_199 [label="unwind"];
    bb54__0_199 -> bb55__0_199 [label="return"];
    bb54__0_199 -> bb129__0_199 [label="unwind"];
    bb55__0_199 -> bb56__0_199 [label="return"];
    bb55__0_199 -> bb132__0_199 [label="unwind"];
    bb56__0_199 -> bb57__0_199 [label=""];
    bb57__0_199 -> bb58__0_199 [label="return"];
    bb58__0_199 -> bb59__0_199 [label="0"];
    bb58__0_199 -> bb60__0_199 [label="1"];
    bb58__0_199 -> bb4__0_199 [label="otherwise"];
    bb59__0_199 -> bb62__0_199 [label="return"];
    bb60__0_199 -> bb61__0_199 [label="return"];
    bb61__0_199 -> bb124__0_199 [label=""];
    bb62__0_199 -> bb63__0_199 [label="return"];
    bb63__0_199 -> bb64__0_199 [label="0"];
    bb63__0_199 -> bb65__0_199 [label="1"];
    bb63__0_199 -> bb4__0_199 [label="otherwise"];
    bb64__0_199 -> bb67__0_199 [label="return"];
    bb65__0_199 -> bb66__0_199 [label="return"];
    bb66__0_199 -> bb123__0_199 [label=""];
    bb67__0_199 -> bb68__0_199 [label="return"];
    bb68__0_199 -> bb69__0_199 [label="0"];
    bb68__0_199 -> bb70__0_199 [label="1"];
    bb68__0_199 -> bb4__0_199 [label="otherwise"];
    bb69__0_199 -> bb72__0_199 [label="return"];
    bb70__0_199 -> bb71__0_199 [label="return"];
    bb71__0_199 -> bb122__0_199 [label=""];
    bb72__0_199 -> bb73__0_199 [label="return"];
    bb73__0_199 -> bb74__0_199 [label="return"];
    bb74__0_199 -> bb75__0_199 [label="0"];
    bb74__0_199 -> bb76__0_199 [label="1"];
    bb74__0_199 -> bb4__0_199 [label="otherwise"];
    bb75__0_199 -> bb78__0_199 [label="return"];
    bb76__0_199 -> bb77__0_199 [label="return"];
    bb77__0_199 -> bb121__0_199 [label=""];
    bb78__0_199 -> bb79__0_199 [label="return"];
    bb79__0_199 -> bb80__0_199 [label="0"];
    bb79__0_199 -> bb81__0_199 [label="1"];
    bb79__0_199 -> bb4__0_199 [label="otherwise"];
    bb80__0_199 -> bb83__0_199 [label="return"];
    bb81__0_199 -> bb82__0_199 [label="return"];
    bb82__0_199 -> bb120__0_199 [label=""];
    bb83__0_199 -> bb84__0_199 [label="return"];
    bb84__0_199 -> bb85__0_199 [label="0"];
    bb84__0_199 -> bb86__0_199 [label="1"];
    bb84__0_199 -> bb4__0_199 [label="otherwise"];
    bb85__0_199 -> bb88__0_199 [label="return"];
    bb86__0_199 -> bb87__0_199 [label="return"];
    bb87__0_199 -> bb120__0_199 [label=""];
    bb88__0_199 -> bb89__0_199 [label="return"];
    bb89__0_199 -> bb90__0_199 [label="0"];
    bb89__0_199 -> bb91__0_199 [label="1"];
    bb89__0_199 -> bb4__0_199 [label="otherwise"];
    bb90__0_199 -> bb93__0_199 [label="return"];
    bb91__0_199 -> bb92__0_199 [label="return"];
    bb92__0_199 -> bb121__0_199 [label=""];
    bb93__0_199 -> bb94__0_199 [label="return"];
    bb94__0_199 -> bb95__0_199 [label="0"];
    bb94__0_199 -> bb96__0_199 [label="1"];
    bb94__0_199 -> bb4__0_199 [label="otherwise"];
    bb95__0_199 -> bb98__0_199 [label="return"];
    bb96__0_199 -> bb97__0_199 [label="return"];
    bb97__0_199 -> bb121__0_199 [label=""];
    bb98__0_199 -> bb99__0_199 [label="return"];
    bb99__0_199 -> bb100__0_199 [label="0"];
    bb99__0_199 -> bb101__0_199 [label="1"];
    bb99__0_199 -> bb4__0_199 [label="otherwise"];
    bb100__0_199 -> bb103__0_199 [label="return"];
    bb101__0_199 -> bb102__0_199 [label="return"];
    bb102__0_199 -> bb119__0_199 [label=""];
    bb103__0_199 -> bb104__0_199 [label="return"];
    bb104__0_199 -> bb105__0_199 [label="0"];
    bb104__0_199 -> bb106__0_199 [label="1"];
    bb104__0_199 -> bb4__0_199 [label="otherwise"];
    bb105__0_199 -> bb108__0_199 [label="success"];
    bb106__0_199 -> bb107__0_199 [label="return"];
    bb107__0_199 -> bb118__0_199 [label=""];
    bb108__0_199 -> bb109__0_199 [label="return"];
    bb109__0_199 -> bb110__0_199 [label="return"];
    bb110__0_199 -> bb111__0_199 [label="0"];
    bb110__0_199 -> bb112__0_199 [label="1"];
    bb110__0_199 -> bb4__0_199 [label="otherwise"];
    bb111__0_199 -> bb114__0_199 [label="return"];
    bb112__0_199 -> bb113__0_199 [label="return"];
    bb113__0_199 -> bb118__0_199 [label=""];
    bb114__0_199 -> bb115__0_199 [label="return"];
    bb114__0_199 -> bb128__0_199 [label="unwind"];
    bb115__0_199 -> bb116__0_199 [label="return"];
    bb115__0_199 -> bb128__0_199 [label="unwind"];
    bb116__0_199 -> bb117__0_199 [label="return"];
    bb116__0_199 -> bb132__0_199 [label="unwind"];
    bb117__0_199 -> bb127__0_199 [label=""];
    bb118__0_199 -> bb119__0_199 [label=""];
    bb119__0_199 -> bb121__0_199 [label=""];
    bb120__0_199 -> bb121__0_199 [label=""];
    bb121__0_199 -> bb122__0_199 [label=""];
    bb122__0_199 -> bb123__0_199 [label=""];
    bb123__0_199 -> bb124__0_199 [label=""];
    bb124__0_199 -> bb125__0_199 [label=""];
    bb125__0_199 -> bb126__0_199 [label=""];
    bb126__0_199 -> bb127__0_199 [label=""];
    bb128__0_199 -> bb132__0_199 [label="return"];
    bb129__0_199 -> bb132__0_199 [label="return"];
    bb130__0_199 -> bb132__0_199 [label="return"];
    bb131__0_199 -> bb132__0_199 [label="return"];
}
