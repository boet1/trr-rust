digraph Mir_0_5625 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn admin::handle_update_perp_market_step_size_and_tick_size(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::admin::AdminUpdatePerpMarket&lt;ReErased&gt;&gt;, _2: u64, _3: u64) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _4: ();<br align="left"/>let mut _5: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _6: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _7: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _8: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _9: isize;<br align="left"/>let _10: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _11: !;<br align="left"/>let mut _12: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _13: ();<br align="left"/>let _14: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _15: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _16: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _17: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _18: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _19: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _20: Closure(DefId(0:5626 ~ drift[d311]::instructions::admin::handle_update_perp_market_step_size_and_tick_size::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _21: isize;<br align="left"/>let _22: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _23: !;<br align="left"/>let mut _24: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _25: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _26: ();<br align="left"/>let mut _27: &amp;ReErased str;<br align="left"/>let _28: &amp;ReErased str;<br align="left"/>let mut _29: &amp;ReErased std::string::String;<br align="left"/>let _30: &amp;ReErased std::string::String;<br align="left"/>let _31: std::string::String;<br align="left"/>let _32: std::string::String;<br align="left"/>let mut _33: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _34: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _35: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _36: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _37: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _38: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _39: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _40: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _41: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _42: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _43: &amp;ReErased u16;<br align="left"/>let _44: &amp;ReErased u16;<br align="left"/>let _45: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _46: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _47: ();<br align="left"/>let mut _48: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _49: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _50: bool;<br align="left"/>let mut _51: u64;<br align="left"/>let mut _52: bool;<br align="left"/>let mut _53: u64;<br align="left"/>let mut _54: ();<br align="left"/>let _55: error::ErrorCode;<br align="left"/>let _56: ();<br align="left"/>let mut _57: &amp;ReErased str;<br align="left"/>let _58: &amp;ReErased str;<br align="left"/>let mut _59: &amp;ReErased std::string::String;<br align="left"/>let _60: &amp;ReErased std::string::String;<br align="left"/>let _61: std::string::String;<br align="left"/>let _62: std::string::String;<br align="left"/>let mut _63: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _64: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _65: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _66: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _67: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _68: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _69: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _70: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _71: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _72: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _73: &amp;ReErased error::ErrorCode;<br align="left"/>let _74: &amp;ReErased error::ErrorCode;<br align="left"/>let mut _75: error::ErrorCode;<br align="left"/>let mut _76: isize;<br align="left"/>let _77: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _78: !;<br align="left"/>let mut _79: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _80: ();<br align="left"/>let _81: ();<br align="left"/>let mut _82: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _83: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _84: bool;<br align="left"/>let mut _85: u64;<br align="left"/>let mut _86: ();<br align="left"/>let _87: error::ErrorCode;<br align="left"/>let _88: ();<br align="left"/>let mut _89: &amp;ReErased str;<br align="left"/>let _90: &amp;ReErased str;<br align="left"/>let mut _91: &amp;ReErased std::string::String;<br align="left"/>let _92: &amp;ReErased std::string::String;<br align="left"/>let _93: std::string::String;<br align="left"/>let _94: std::string::String;<br align="left"/>let mut _95: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _96: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _97: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _98: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _99: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _100: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _101: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _102: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _103: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _104: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _105: &amp;ReErased error::ErrorCode;<br align="left"/>let _106: &amp;ReErased error::ErrorCode;<br align="left"/>let mut _107: error::ErrorCode;<br align="left"/>let mut _108: isize;<br align="left"/>let _109: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _110: !;<br align="left"/>let mut _111: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _112: ();<br align="left"/>let _113: ();<br align="left"/>let mut _114: &amp;ReErased str;<br align="left"/>let _115: &amp;ReErased str;<br align="left"/>let mut _116: &amp;ReErased std::string::String;<br align="left"/>let _117: &amp;ReErased std::string::String;<br align="left"/>let _118: std::string::String;<br align="left"/>let _119: std::string::String;<br align="left"/>let mut _120: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _121: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _122: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _123: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _124: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _125: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _126: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _127: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _128: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _129: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _130: &amp;ReErased u64;<br align="left"/>let _131: &amp;ReErased u64;<br align="left"/>let _132: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _133: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _134: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _135: &amp;ReErased u64;<br align="left"/>let _136: &amp;ReErased u64;<br align="left"/>let _137: ();<br align="left"/>let mut _138: &amp;ReErased str;<br align="left"/>let _139: &amp;ReErased str;<br align="left"/>let mut _140: &amp;ReErased std::string::String;<br align="left"/>let _141: &amp;ReErased std::string::String;<br align="left"/>let _142: std::string::String;<br align="left"/>let _143: std::string::String;<br align="left"/>let mut _144: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _145: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _146: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _147: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _148: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _149: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _150: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _151: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _152: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _153: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _154: &amp;ReErased u64;<br align="left"/>let _155: &amp;ReErased u64;<br align="left"/>let _156: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _157: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _158: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _159: &amp;ReErased u64;<br align="left"/>let _160: &amp;ReErased u64;<br align="left"/>let mut _161: u64;<br align="left"/>let mut _162: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _163: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _164: u64;<br align="left"/>let mut _165: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _166: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _167: ();<br align="left"/>let mut _168: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _169: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _170: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _171: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _172: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _173: &amp;ReErased mut instructions::admin::AdminUpdatePerpMarket&lt;ReErased&gt;;<br align="left"/>let mut _174: &amp;ReErased mut instructions::admin::AdminUpdatePerpMarket&lt;ReErased&gt;;<br align="left"/>let mut _175: isize;<br align="left"/>let mut _176: isize;<br align="left"/>let mut _177: isize;<br align="left"/>let mut _178: isize;<br align="left"/>let mut _179: isize;<br align="left"/>let mut _180: isize;<br align="left"/>let mut _181: isize;<br align="left"/>let mut _182: isize;<br align="left"/>let mut _183: isize;<br align="left"/>let mut _184: isize;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug step_size =&gt; _2;<br align="left"/>debug tick_size =&gt; _3;<br align="left"/>debug residual =&gt; _10;<br align="left"/>debug val =&gt; _13;<br align="left"/>debug perp_market =&gt; _14;<br align="left"/>debug residual =&gt; _22;<br align="left"/>debug val =&gt; _25;<br align="left"/>debug res =&gt; _32;<br align="left"/>debug error_code =&gt; _55;<br align="left"/>debug res =&gt; _62;<br align="left"/>debug residual =&gt; _77;<br align="left"/>debug val =&gt; _80;<br align="left"/>debug error_code =&gt; _87;<br align="left"/>debug res =&gt; _94;<br align="left"/>debug residual =&gt; _109;<br align="left"/>debug val =&gt; _112;<br align="left"/>debug res =&gt; _119;<br align="left"/>debug res =&gt; _143;<br align="left"/>>;
    bb0__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_173 = deref_copy (_1.1: &amp;mut instructions::admin::AdminUpdatePerpMarket&lt;'_&gt;)<br/>_8 = &amp;((*_173).2: anchor_lang::prelude::AccountLoader&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_7 = &amp;(*_8)<br/></td></tr><tr><td align="left">_6 = constraints::perp_market_valid(move _7)</td></tr></table>>];
    bb1__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/></td></tr><tr><td align="left">_5 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _6)</td></tr></table>>];
    bb2__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_9 = discriminant(_5)<br/></td></tr><tr><td align="left">switchInt(move _9)</td></tr></table>>];
    bb3__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = ((_5 as Continue).0: ())<br/>_4 = _13<br/>StorageDead(_13)<br/>_175 = discriminant(_5)<br/>StorageDead(_8)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_174 = deref_copy (_1.1: &amp;mut instructions::admin::AdminUpdatePerpMarket&lt;'_&gt;)<br/>_19 = &amp;((*_174).2: anchor_lang::prelude::AccountLoader&lt;'_, state::perp_market::PerpMarket&gt;)<br/></td></tr><tr><td align="left">_18 = anchor_lang::prelude::AccountLoader::&lt;'_, PerpMarket&gt;::load_mut(move _19)</td></tr></table>>];
    bb4__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>_10 = move ((_5 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_12)<br/>_12 = move _10<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _12)</td></tr></table>>];
    bb6__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_10)<br/>_181 = discriminant(_5)<br/>StorageDead(_8)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageLive(_20)<br/>_20 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_17 = std::result::Result::&lt;RefMut&lt;'_, PerpMarket&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _18, move _20)</td></tr></table>>];
    bb8__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">_16 = &lt;std::result::Result&lt;RefMut&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _17)</td></tr></table>>];
    bb9__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>_21 = discriminant(_16)<br/></td></tr><tr><td align="left">switchInt(move _21)</td></tr></table>>];
    bb10__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_25)<br/>_25 = move ((_16 as Continue).0: std::cell::RefMut&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_15 = move _25<br/>StorageDead(_25)<br/>_14 = &amp;mut _15<br/>_179 = discriminant(_16)<br/>StorageDead(_16)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>_172 = const _<br/>_36 = &amp;(*_172)<br/>_35 = &amp;(*_36)<br/>_34 = move _35 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_35)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>_46 = &amp;(*_14)<br/></td></tr><tr><td align="left">_45 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _46)</td></tr></table>>];
    bb11__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_22)<br/>_22 = ((_16 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_24)<br/>_24 = _22<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _24)</td></tr></table>>];
    bb12__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_22)<br/>_177 = discriminant(_16)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>_44 = &amp;((*_45).21: u16)<br/>_43 = &amp;(*_44)<br/></td></tr><tr><td align="left">_42 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _43)</td></tr></table>>];
    bb14__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>_41 = [move _42]<br/>StorageDead(_42)<br/>_40 = &amp;_41<br/>_39 = &amp;(*_40)<br/>_38 = move _39 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">_33 = Arguments::&lt;'_&gt;::new_v1(move _34, move _38)</td></tr></table>>];
    bb15__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">_32 = format(move _33)</td></tr></table>>];
    bb16__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_45)<br/>StorageDead(_44)<br/>StorageDead(_41)<br/>StorageDead(_40)<br/>StorageDead(_36)<br/>_31 = move _32<br/>StorageDead(_32)<br/>_30 = &amp;_31<br/>_29 = &amp;(*_30)<br/></td></tr><tr><td align="left">_28 = &lt;String as Deref&gt;::deref(move _29)</td></tr></table>>];
    bb17__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">_27 = &amp;(*_28)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">_26 = solana_program::log::sol_log(move _27)</td></tr></table>>];
    bb18__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/></td></tr><tr><td align="left">drop(_31)</td></tr></table>>];
    bb19__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_30)<br/>StorageDead(_28)<br/>StorageDead(_26)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>_51 = _2<br/>_50 = Gt(move _51, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _50)</td></tr></table>>];
    bb20__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>_53 = _3<br/>_52 = Gt(move _53, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _52)</td></tr></table>>];
    bb21__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageLive(_54)<br/>_54 = ()<br/>_49 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _54)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_55)<br/>_55 = error::ErrorCode::DefaultError<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>_171 = const _<br/>_66 = &amp;(*_171)<br/>_65 = &amp;(*_66)<br/>_64 = move _65 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_65)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>_74 = &amp;_55<br/>_73 = &amp;(*_74)<br/></td></tr><tr><td align="left">_72 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _73)</td></tr></table>>];
    bb25__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>_71 = [move _72]<br/>StorageDead(_72)<br/>_70 = &amp;_71<br/>_69 = &amp;(*_70)<br/>_68 = move _69 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_69)<br/></td></tr><tr><td align="left">_63 = Arguments::&lt;'_&gt;::new_v1(move _64, move _68)</td></tr></table>>];
    bb26__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>StorageDead(_64)<br/></td></tr><tr><td align="left">_62 = format(move _63)</td></tr></table>>];
    bb27__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_74)<br/>StorageDead(_71)<br/>StorageDead(_70)<br/>StorageDead(_66)<br/>_61 = move _62<br/>StorageDead(_62)<br/>_60 = &amp;_61<br/>_59 = &amp;(*_60)<br/></td></tr><tr><td align="left">_58 = &lt;String as Deref&gt;::deref(move _59)</td></tr></table>>];
    bb28__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">_57 = &amp;(*_58)<br/>StorageDead(_59)<br/></td></tr><tr><td align="left">_56 = solana_program::log::sol_log(move _57)</td></tr></table>>];
    bb29__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/></td></tr><tr><td align="left">drop(_61)</td></tr></table>>];
    bb30__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_60)<br/>StorageDead(_58)<br/>StorageDead(_56)<br/>StorageLive(_75)<br/>_75 = _55<br/>_49 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _75)<br/>StorageDead(_75)<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">_48 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _49)</td></tr></table>>];
    bb32__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>_76 = discriminant(_48)<br/></td></tr><tr><td align="left">switchInt(move _76)</td></tr></table>>];
    bb33__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageLive(_80)<br/>_80 = ((_48 as Continue).0: ())<br/>_47 = _80<br/>StorageDead(_80)<br/>StorageDead(_48)<br/>StorageDead(_47)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>_85 = _2<br/>_84 = Le(move _85, const 2000000000_u64)<br/></td></tr><tr><td align="left">switchInt(move _84)</td></tr></table>>];
    bb34__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_77)<br/>_77 = ((_48 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_79)<br/>_79 = _77<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _79)</td></tr></table>>];
    bb35__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageDead(_77)<br/>StorageDead(_48)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>StorageLive(_86)<br/>_86 = ()<br/>_83 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _86)<br/>StorageDead(_86)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>StorageLive(_87)<br/>_87 = error::ErrorCode::DefaultError<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>_170 = const _<br/>_98 = &amp;(*_170)<br/>_97 = &amp;(*_98)<br/>_96 = move _97 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_97)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>_106 = &amp;_87<br/>_105 = &amp;(*_106)<br/></td></tr><tr><td align="left">_104 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _105)</td></tr></table>>];
    bb38__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/>_103 = [move _104]<br/>StorageDead(_104)<br/>_102 = &amp;_103<br/>_101 = &amp;(*_102)<br/>_100 = move _101 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_101)<br/></td></tr><tr><td align="left">_95 = Arguments::&lt;'_&gt;::new_v1(move _96, move _100)</td></tr></table>>];
    bb39__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>StorageDead(_96)<br/></td></tr><tr><td align="left">_94 = format(move _95)</td></tr></table>>];
    bb40__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/>StorageDead(_106)<br/>StorageDead(_103)<br/>StorageDead(_102)<br/>StorageDead(_98)<br/>_93 = move _94<br/>StorageDead(_94)<br/>_92 = &amp;_93<br/>_91 = &amp;(*_92)<br/></td></tr><tr><td align="left">_90 = &lt;String as Deref&gt;::deref(move _91)</td></tr></table>>];
    bb41__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">_89 = &amp;(*_90)<br/>StorageDead(_91)<br/></td></tr><tr><td align="left">_88 = solana_program::log::sol_log(move _89)</td></tr></table>>];
    bb42__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/></td></tr><tr><td align="left">drop(_93)</td></tr></table>>];
    bb43__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageDead(_92)<br/>StorageDead(_90)<br/>StorageDead(_88)<br/>StorageLive(_107)<br/>_107 = _87<br/>_83 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _107)<br/>StorageDead(_107)<br/>StorageDead(_87)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/></td></tr><tr><td align="left">_82 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _83)</td></tr></table>>];
    bb45__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>_108 = discriminant(_82)<br/></td></tr><tr><td align="left">switchInt(move _108)</td></tr></table>>];
    bb46__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageLive(_112)<br/>_112 = ((_82 as Continue).0: ())<br/>_81 = _112<br/>StorageDead(_112)<br/>StorageDead(_82)<br/>StorageDead(_81)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>_169 = const _<br/>_123 = &amp;(*_169)<br/>_122 = &amp;(*_123)<br/>_121 = move _122 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_122)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>_133 = &amp;(*_14)<br/></td></tr><tr><td align="left">_132 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _133)</td></tr></table>>];
    bb47__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageLive(_109)<br/>_109 = ((_82 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_111)<br/>_111 = _109<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _111)</td></tr></table>>];
    bb48__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/>StorageDead(_109)<br/>StorageDead(_82)<br/>StorageDead(_81)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/>_131 = &amp;(((*_132).1: state::perp_market::AMM).52: u64)<br/>_130 = &amp;(*_131)<br/></td></tr><tr><td align="left">_129 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;u64&gt;(move _130)</td></tr></table>>];
    bb50__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_130)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>_136 = &amp;_2<br/>_135 = &amp;(*_136)<br/></td></tr><tr><td align="left">_134 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;u64&gt;(move _135)</td></tr></table>>];
    bb51__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_135)<br/>_128 = [move _129, move _134]<br/>StorageDead(_134)<br/>StorageDead(_129)<br/>_127 = &amp;_128<br/>_126 = &amp;(*_127)<br/>_125 = move _126 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_126)<br/></td></tr><tr><td align="left">_120 = Arguments::&lt;'_&gt;::new_v1(move _121, move _125)</td></tr></table>>];
    bb52__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/>StorageDead(_121)<br/></td></tr><tr><td align="left">_119 = format(move _120)</td></tr></table>>];
    bb53__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/>StorageDead(_136)<br/>StorageDead(_132)<br/>StorageDead(_131)<br/>StorageDead(_128)<br/>StorageDead(_127)<br/>StorageDead(_123)<br/>_118 = move _119<br/>StorageDead(_119)<br/>_117 = &amp;_118<br/>_116 = &amp;(*_117)<br/></td></tr><tr><td align="left">_115 = &lt;String as Deref&gt;::deref(move _116)</td></tr></table>>];
    bb54__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">_114 = &amp;(*_115)<br/>StorageDead(_116)<br/></td></tr><tr><td align="left">_113 = solana_program::log::sol_log(move _114)</td></tr></table>>];
    bb55__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/></td></tr><tr><td align="left">drop(_118)</td></tr></table>>];
    bb56__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>StorageDead(_117)<br/>StorageDead(_115)<br/>StorageDead(_113)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>_168 = const _<br/>_147 = &amp;(*_168)<br/>_146 = &amp;(*_147)<br/>_145 = move _146 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_146)<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>StorageLive(_152)<br/>StorageLive(_153)<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>_157 = &amp;(*_14)<br/></td></tr><tr><td align="left">_156 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _157)</td></tr></table>>];
    bb57__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_157)<br/>_155 = &amp;(((*_156).1: state::perp_market::AMM).53: u64)<br/>_154 = &amp;(*_155)<br/></td></tr><tr><td align="left">_153 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;u64&gt;(move _154)</td></tr></table>>];
    bb58__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_154)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>_160 = &amp;_3<br/>_159 = &amp;(*_160)<br/></td></tr><tr><td align="left">_158 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;u64&gt;(move _159)</td></tr></table>>];
    bb59__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_159)<br/>_152 = [move _153, move _158]<br/>StorageDead(_158)<br/>StorageDead(_153)<br/>_151 = &amp;_152<br/>_150 = &amp;(*_151)<br/>_149 = move _150 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_150)<br/></td></tr><tr><td align="left">_144 = Arguments::&lt;'_&gt;::new_v1(move _145, move _149)</td></tr></table>>];
    bb60__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_149)<br/>StorageDead(_145)<br/></td></tr><tr><td align="left">_143 = format(move _144)</td></tr></table>>];
    bb61__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_144)<br/>StorageDead(_160)<br/>StorageDead(_156)<br/>StorageDead(_155)<br/>StorageDead(_152)<br/>StorageDead(_151)<br/>StorageDead(_147)<br/>_142 = move _143<br/>StorageDead(_143)<br/>_141 = &amp;_142<br/>_140 = &amp;(*_141)<br/></td></tr><tr><td align="left">_139 = &lt;String as Deref&gt;::deref(move _140)</td></tr></table>>];
    bb62__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">_138 = &amp;(*_139)<br/>StorageDead(_140)<br/></td></tr><tr><td align="left">_137 = solana_program::log::sol_log(move _138)</td></tr></table>>];
    bb63__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/></td></tr><tr><td align="left">drop(_142)</td></tr></table>>];
    bb64__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_142)<br/>StorageDead(_141)<br/>StorageDead(_139)<br/>StorageDead(_137)<br/>StorageLive(_161)<br/>_161 = _2<br/>StorageLive(_162)<br/>StorageLive(_163)<br/>_163 = &amp;mut (*_14)<br/></td></tr><tr><td align="left">_162 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _163)</td></tr></table>>];
    bb65__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_163)<br/>(((*_162).1: state::perp_market::AMM).52: u64) = move _161<br/>StorageDead(_161)<br/>StorageDead(_162)<br/>StorageLive(_164)<br/>_164 = _3<br/>StorageLive(_165)<br/>StorageLive(_166)<br/>_166 = &amp;mut (*_14)<br/></td></tr><tr><td align="left">_165 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _166)</td></tr></table>>];
    bb66__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_166)<br/>(((*_165).1: state::perp_market::AMM).53: u64) = move _164<br/>StorageDead(_164)<br/>StorageDead(_165)<br/>StorageLive(_167)<br/>_167 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _167)<br/>StorageDead(_167)<br/></td></tr><tr><td align="left">drop(_15)</td></tr></table>>];
    bb67__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left">drop(_15)</td></tr></table>>];
    bb69__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb70__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left">return</td></tr></table>>];
    bb71__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">71 (cleanup)</td></tr><tr><td align="left">drop(_142)</td></tr></table>>];
    bb72__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">72 (cleanup)</td></tr><tr><td align="left">drop(_118)</td></tr></table>>];
    bb73__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">73 (cleanup)</td></tr><tr><td align="left">drop(_93)</td></tr></table>>];
    bb74__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">74 (cleanup)</td></tr><tr><td align="left">drop(_61)</td></tr></table>>];
    bb75__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">75 (cleanup)</td></tr><tr><td align="left">drop(_31)</td></tr></table>>];
    bb76__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">76 (cleanup)</td></tr><tr><td align="left">drop(_15)</td></tr></table>>];
    bb77__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">77 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb78__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">78 (cleanup)</td></tr><tr><td align="left" balign="left">_183 = discriminant(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb79__0_5625 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">79 (cleanup)</td></tr><tr><td align="left" balign="left">_184 = discriminant(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_5625 -> bb1__0_5625 [label="return"];
    bb1__0_5625 -> bb2__0_5625 [label="return"];
    bb1__0_5625 -> bb77__0_5625 [label="unwind"];
    bb2__0_5625 -> bb3__0_5625 [label="0"];
    bb2__0_5625 -> bb5__0_5625 [label="1"];
    bb2__0_5625 -> bb4__0_5625 [label="otherwise"];
    bb3__0_5625 -> bb7__0_5625 [label="return"];
    bb5__0_5625 -> bb6__0_5625 [label="return"];
    bb5__0_5625 -> bb79__0_5625 [label="unwind"];
    bb6__0_5625 -> bb70__0_5625 [label=""];
    bb7__0_5625 -> bb8__0_5625 [label="return"];
    bb7__0_5625 -> bb77__0_5625 [label="unwind"];
    bb8__0_5625 -> bb9__0_5625 [label="return"];
    bb8__0_5625 -> bb77__0_5625 [label="unwind"];
    bb9__0_5625 -> bb10__0_5625 [label="0"];
    bb9__0_5625 -> bb11__0_5625 [label="1"];
    bb9__0_5625 -> bb4__0_5625 [label="otherwise"];
    bb10__0_5625 -> bb13__0_5625 [label="return"];
    bb10__0_5625 -> bb76__0_5625 [label="unwind"];
    bb11__0_5625 -> bb12__0_5625 [label="return"];
    bb11__0_5625 -> bb78__0_5625 [label="unwind"];
    bb12__0_5625 -> bb69__0_5625 [label=""];
    bb13__0_5625 -> bb14__0_5625 [label="return"];
    bb13__0_5625 -> bb76__0_5625 [label="unwind"];
    bb14__0_5625 -> bb15__0_5625 [label="return"];
    bb14__0_5625 -> bb76__0_5625 [label="unwind"];
    bb15__0_5625 -> bb16__0_5625 [label="return"];
    bb15__0_5625 -> bb76__0_5625 [label="unwind"];
    bb16__0_5625 -> bb17__0_5625 [label="return"];
    bb16__0_5625 -> bb75__0_5625 [label="unwind"];
    bb17__0_5625 -> bb18__0_5625 [label="return"];
    bb17__0_5625 -> bb75__0_5625 [label="unwind"];
    bb18__0_5625 -> bb19__0_5625 [label="return"];
    bb18__0_5625 -> bb76__0_5625 [label="unwind"];
    bb19__0_5625 -> bb23__0_5625 [label="0"];
    bb19__0_5625 -> bb20__0_5625 [label="otherwise"];
    bb20__0_5625 -> bb22__0_5625 [label="0"];
    bb20__0_5625 -> bb21__0_5625 [label="otherwise"];
    bb21__0_5625 -> bb31__0_5625 [label=""];
    bb22__0_5625 -> bb24__0_5625 [label=""];
    bb23__0_5625 -> bb24__0_5625 [label=""];
    bb24__0_5625 -> bb25__0_5625 [label="return"];
    bb24__0_5625 -> bb76__0_5625 [label="unwind"];
    bb25__0_5625 -> bb26__0_5625 [label="return"];
    bb25__0_5625 -> bb76__0_5625 [label="unwind"];
    bb26__0_5625 -> bb27__0_5625 [label="return"];
    bb26__0_5625 -> bb76__0_5625 [label="unwind"];
    bb27__0_5625 -> bb28__0_5625 [label="return"];
    bb27__0_5625 -> bb74__0_5625 [label="unwind"];
    bb28__0_5625 -> bb29__0_5625 [label="return"];
    bb28__0_5625 -> bb74__0_5625 [label="unwind"];
    bb29__0_5625 -> bb30__0_5625 [label="return"];
    bb29__0_5625 -> bb76__0_5625 [label="unwind"];
    bb30__0_5625 -> bb31__0_5625 [label=""];
    bb31__0_5625 -> bb32__0_5625 [label="return"];
    bb31__0_5625 -> bb76__0_5625 [label="unwind"];
    bb32__0_5625 -> bb33__0_5625 [label="0"];
    bb32__0_5625 -> bb34__0_5625 [label="1"];
    bb32__0_5625 -> bb4__0_5625 [label="otherwise"];
    bb33__0_5625 -> bb37__0_5625 [label="0"];
    bb33__0_5625 -> bb36__0_5625 [label="otherwise"];
    bb34__0_5625 -> bb35__0_5625 [label="return"];
    bb34__0_5625 -> bb76__0_5625 [label="unwind"];
    bb35__0_5625 -> bb68__0_5625 [label=""];
    bb36__0_5625 -> bb44__0_5625 [label=""];
    bb37__0_5625 -> bb38__0_5625 [label="return"];
    bb37__0_5625 -> bb76__0_5625 [label="unwind"];
    bb38__0_5625 -> bb39__0_5625 [label="return"];
    bb38__0_5625 -> bb76__0_5625 [label="unwind"];
    bb39__0_5625 -> bb40__0_5625 [label="return"];
    bb39__0_5625 -> bb76__0_5625 [label="unwind"];
    bb40__0_5625 -> bb41__0_5625 [label="return"];
    bb40__0_5625 -> bb73__0_5625 [label="unwind"];
    bb41__0_5625 -> bb42__0_5625 [label="return"];
    bb41__0_5625 -> bb73__0_5625 [label="unwind"];
    bb42__0_5625 -> bb43__0_5625 [label="return"];
    bb42__0_5625 -> bb76__0_5625 [label="unwind"];
    bb43__0_5625 -> bb44__0_5625 [label=""];
    bb44__0_5625 -> bb45__0_5625 [label="return"];
    bb44__0_5625 -> bb76__0_5625 [label="unwind"];
    bb45__0_5625 -> bb46__0_5625 [label="0"];
    bb45__0_5625 -> bb47__0_5625 [label="1"];
    bb45__0_5625 -> bb4__0_5625 [label="otherwise"];
    bb46__0_5625 -> bb49__0_5625 [label="return"];
    bb46__0_5625 -> bb76__0_5625 [label="unwind"];
    bb47__0_5625 -> bb48__0_5625 [label="return"];
    bb47__0_5625 -> bb76__0_5625 [label="unwind"];
    bb48__0_5625 -> bb68__0_5625 [label=""];
    bb49__0_5625 -> bb50__0_5625 [label="return"];
    bb49__0_5625 -> bb76__0_5625 [label="unwind"];
    bb50__0_5625 -> bb51__0_5625 [label="return"];
    bb50__0_5625 -> bb76__0_5625 [label="unwind"];
    bb51__0_5625 -> bb52__0_5625 [label="return"];
    bb51__0_5625 -> bb76__0_5625 [label="unwind"];
    bb52__0_5625 -> bb53__0_5625 [label="return"];
    bb52__0_5625 -> bb76__0_5625 [label="unwind"];
    bb53__0_5625 -> bb54__0_5625 [label="return"];
    bb53__0_5625 -> bb72__0_5625 [label="unwind"];
    bb54__0_5625 -> bb55__0_5625 [label="return"];
    bb54__0_5625 -> bb72__0_5625 [label="unwind"];
    bb55__0_5625 -> bb56__0_5625 [label="return"];
    bb55__0_5625 -> bb76__0_5625 [label="unwind"];
    bb56__0_5625 -> bb57__0_5625 [label="return"];
    bb56__0_5625 -> bb76__0_5625 [label="unwind"];
    bb57__0_5625 -> bb58__0_5625 [label="return"];
    bb57__0_5625 -> bb76__0_5625 [label="unwind"];
    bb58__0_5625 -> bb59__0_5625 [label="return"];
    bb58__0_5625 -> bb76__0_5625 [label="unwind"];
    bb59__0_5625 -> bb60__0_5625 [label="return"];
    bb59__0_5625 -> bb76__0_5625 [label="unwind"];
    bb60__0_5625 -> bb61__0_5625 [label="return"];
    bb60__0_5625 -> bb76__0_5625 [label="unwind"];
    bb61__0_5625 -> bb62__0_5625 [label="return"];
    bb61__0_5625 -> bb71__0_5625 [label="unwind"];
    bb62__0_5625 -> bb63__0_5625 [label="return"];
    bb62__0_5625 -> bb71__0_5625 [label="unwind"];
    bb63__0_5625 -> bb64__0_5625 [label="return"];
    bb63__0_5625 -> bb76__0_5625 [label="unwind"];
    bb64__0_5625 -> bb65__0_5625 [label="return"];
    bb64__0_5625 -> bb76__0_5625 [label="unwind"];
    bb65__0_5625 -> bb66__0_5625 [label="return"];
    bb65__0_5625 -> bb76__0_5625 [label="unwind"];
    bb66__0_5625 -> bb67__0_5625 [label="return"];
    bb66__0_5625 -> bb77__0_5625 [label="unwind"];
    bb67__0_5625 -> bb70__0_5625 [label=""];
    bb68__0_5625 -> bb69__0_5625 [label="return"];
    bb68__0_5625 -> bb77__0_5625 [label="unwind"];
    bb69__0_5625 -> bb70__0_5625 [label=""];
    bb71__0_5625 -> bb76__0_5625 [label="return"];
    bb72__0_5625 -> bb76__0_5625 [label="return"];
    bb73__0_5625 -> bb76__0_5625 [label="return"];
    bb74__0_5625 -> bb76__0_5625 [label="return"];
    bb75__0_5625 -> bb76__0_5625 [label="return"];
    bb76__0_5625 -> bb77__0_5625 [label="return"];
    bb78__0_5625 -> bb77__0_5625 [label=""];
    bb79__0_5625 -> bb77__0_5625 [label=""];
}
