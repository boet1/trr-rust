digraph Mir_0_88 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn update_concentration_coef(_1: &amp;ReErased mut state::perp_market::PerpMarket, _2: u128) -&gt; std::result::Result&lt;(), error::ErrorCode&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _5: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _6: bool;<br align="left"/>let mut _7: u128;<br align="left"/>let mut _8: ();<br align="left"/>let _9: error::ErrorCode;<br align="left"/>let _10: ();<br align="left"/>let mut _11: &amp;ReErased str;<br align="left"/>let _12: &amp;ReErased str;<br align="left"/>let mut _13: &amp;ReErased std::string::String;<br align="left"/>let _14: &amp;ReErased std::string::String;<br align="left"/>let _15: std::string::String;<br align="left"/>let _16: std::string::String;<br align="left"/>let mut _17: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _18: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _19: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _20: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _21: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _22: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _23: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _24: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _25: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _26: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _27: &amp;ReErased error::ErrorCode;<br align="left"/>let _28: &amp;ReErased error::ErrorCode;<br align="left"/>let _29: ();<br align="left"/>let mut _30: &amp;ReErased str;<br align="left"/>let _31: &amp;ReErased str;<br align="left"/>let mut _32: &amp;ReErased std::string::String;<br align="left"/>let _33: &amp;ReErased std::string::String;<br align="left"/>let _34: std::string::String;<br align="left"/>let _35: std::string::String;<br align="left"/>let mut _36: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _37: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _38: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _39: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _40: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _41: error::ErrorCode;<br align="left"/>let mut _42: isize;<br align="left"/>let _43: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _44: !;<br align="left"/>let mut _45: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _46: ();<br align="left"/>let _47: u128;<br align="left"/>let mut _48: u128;<br align="left"/>let mut _49: u128;<br align="left"/>let mut _50: (u128, bool);<br align="left"/>let mut _51: u128;<br align="left"/>let mut _52: bool;<br align="left"/>let mut _53: (u128, bool);<br align="left"/>let _54: ();<br align="left"/>let mut _55: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _56: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _57: bool;<br align="left"/>let mut _58: u128;<br align="left"/>let mut _59: bool;<br align="left"/>let mut _60: u128;<br align="left"/>let mut _61: ();<br align="left"/>let _62: error::ErrorCode;<br align="left"/>let _63: ();<br align="left"/>let mut _64: &amp;ReErased str;<br align="left"/>let _65: &amp;ReErased str;<br align="left"/>let mut _66: &amp;ReErased std::string::String;<br align="left"/>let _67: &amp;ReErased std::string::String;<br align="left"/>let _68: std::string::String;<br align="left"/>let _69: std::string::String;<br align="left"/>let mut _70: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _71: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _72: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _73: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _74: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _75: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _76: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _77: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _78: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _79: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _80: &amp;ReErased error::ErrorCode;<br align="left"/>let _81: &amp;ReErased error::ErrorCode;<br align="left"/>let _82: ();<br align="left"/>let mut _83: &amp;ReErased str;<br align="left"/>let _84: &amp;ReErased str;<br align="left"/>let mut _85: &amp;ReErased std::string::String;<br align="left"/>let _86: &amp;ReErased std::string::String;<br align="left"/>let _87: std::string::String;<br align="left"/>let _88: std::string::String;<br align="left"/>let mut _89: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _90: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _91: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _92: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _93: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _94: error::ErrorCode;<br align="left"/>let mut _95: isize;<br align="left"/>let _96: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _97: !;<br align="left"/>let mut _98: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _99: ();<br align="left"/>let mut _100: u128;<br align="left"/>let _101: u128;<br align="left"/>let _102: u128;<br align="left"/>let mut _103: (u64, u128, u128);<br align="left"/>let mut _104: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (u64, u128, u128)&gt;;<br align="left"/>let mut _105: std::result::Result&lt;(u64, u128, u128), error::ErrorCode&gt;;<br align="left"/>let mut _106: &amp;ReErased state::perp_market::AMM;<br align="left"/>let _107: &amp;ReErased state::perp_market::AMM;<br align="left"/>let mut _108: isize;<br align="left"/>let _109: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _110: !;<br align="left"/>let mut _111: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _112: (u64, u128, u128);<br align="left"/>let _113: ();<br align="left"/>let mut _114: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _115: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _116: bool;<br align="left"/>let mut _117: u128;<br align="left"/>let mut _118: u128;<br align="left"/>let mut _119: ();<br align="left"/>let _120: error::ErrorCode;<br align="left"/>let _121: ();<br align="left"/>let mut _122: &amp;ReErased str;<br align="left"/>let _123: &amp;ReErased str;<br align="left"/>let mut _124: &amp;ReErased std::string::String;<br align="left"/>let _125: &amp;ReErased std::string::String;<br align="left"/>let _126: std::string::String;<br align="left"/>let _127: std::string::String;<br align="left"/>let mut _128: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _129: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _130: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _131: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _132: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _133: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _134: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _135: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _136: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _137: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _138: &amp;ReErased error::ErrorCode;<br align="left"/>let _139: &amp;ReErased error::ErrorCode;<br align="left"/>let _140: ();<br align="left"/>let mut _141: &amp;ReErased str;<br align="left"/>let _142: &amp;ReErased str;<br align="left"/>let mut _143: &amp;ReErased std::string::String;<br align="left"/>let _144: &amp;ReErased std::string::String;<br align="left"/>let _145: std::string::String;<br align="left"/>let _146: std::string::String;<br align="left"/>let mut _147: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _148: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _149: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _150: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _151: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _152: error::ErrorCode;<br align="left"/>let mut _153: isize;<br align="left"/>let _154: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _155: !;<br align="left"/>let mut _156: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _157: ();<br align="left"/>let _158: u128;<br align="left"/>let _159: u128;<br align="left"/>let mut _160: (u128, u128);<br align="left"/>let mut _161: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (u128, u128)&gt;;<br align="left"/>let mut _162: std::result::Result&lt;(u128, u128), error::ErrorCode&gt;;<br align="left"/>let mut _163: u128;<br align="left"/>let mut _164: u128;<br align="left"/>let mut _165: isize;<br align="left"/>let _166: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _167: !;<br align="left"/>let mut _168: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _169: (u128, u128);<br align="left"/>let mut _170: u128;<br align="left"/>let mut _171: u128;<br align="left"/>let _172: u64;<br align="left"/>let mut _173: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _174: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _175: &amp;ReErased state::perp_market::AMM;<br align="left"/>let mut _176: isize;<br align="left"/>let _177: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _178: !;<br align="left"/>let mut _179: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _180: u64;<br align="left"/>let _181: (u32, u32);<br align="left"/>let mut _182: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (u32, u32)&gt;;<br align="left"/>let mut _183: std::result::Result&lt;(u32, u32), error::ErrorCode&gt;;<br align="left"/>let mut _184: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _185: u64;<br align="left"/>let mut _186: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _187: isize;<br align="left"/>let _188: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _189: !;<br align="left"/>let mut _190: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _191: (u32, u32);<br align="left"/>let _192: i128;<br align="left"/>let _193: i128;<br align="left"/>let mut _194: (i128, i128);<br align="left"/>let mut _195: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (i128, i128)&gt;;<br align="left"/>let mut _196: std::result::Result&lt;(i128, i128), error::ErrorCode&gt;;<br align="left"/>let mut _197: &amp;ReErased state::perp_market::AMM;<br align="left"/>let _198: &amp;ReErased state::perp_market::AMM;<br align="left"/>let mut _199: isize;<br align="left"/>let _200: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _201: !;<br align="left"/>let mut _202: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _203: (i128, i128);<br align="left"/>let _204: ();<br align="left"/>let mut _205: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _206: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _207: bool;<br align="left"/>let mut _208: i128;<br align="left"/>let mut _209: i128;<br align="left"/>let mut _210: bool;<br align="left"/>let mut _211: i128;<br align="left"/>let mut _212: i128;<br align="left"/>let mut _213: ();<br align="left"/>let _214: error::ErrorCode;<br align="left"/>let _215: ();<br align="left"/>let mut _216: &amp;ReErased str;<br align="left"/>let _217: &amp;ReErased str;<br align="left"/>let mut _218: &amp;ReErased std::string::String;<br align="left"/>let _219: &amp;ReErased std::string::String;<br align="left"/>let _220: std::string::String;<br align="left"/>let _221: std::string::String;<br align="left"/>let mut _222: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _223: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _224: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _225: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _226: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _227: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _228: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _229: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _230: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _231: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _232: &amp;ReErased error::ErrorCode;<br align="left"/>let _233: &amp;ReErased error::ErrorCode;<br align="left"/>let _234: ();<br align="left"/>let mut _235: &amp;ReErased str;<br align="left"/>let _236: &amp;ReErased str;<br align="left"/>let mut _237: error::ErrorCode;<br align="left"/>let mut _238: isize;<br align="left"/>let _239: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _240: !;<br align="left"/>let mut _241: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _242: ();<br align="left"/>let mut _243: ();<br align="left"/>let mut _244: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _245: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _246: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _247: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _248: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _249: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _250: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>debug market =&gt; _1;<br align="left"/>debug scale =&gt; _2;<br align="left"/>debug error_code =&gt; _9;<br align="left"/>debug res =&gt; _16;<br align="left"/>debug res =&gt; _35;<br align="left"/>debug residual =&gt; _43;<br align="left"/>debug val =&gt; _46;<br align="left"/>debug new_concentration_coef =&gt; _47;<br align="left"/>debug error_code =&gt; _62;<br align="left"/>debug res =&gt; _69;<br align="left"/>debug res =&gt; _88;<br align="left"/>debug residual =&gt; _96;<br align="left"/>debug val =&gt; _99;<br align="left"/>debug terminal_quote_reserves =&gt; _101;<br align="left"/>debug terminal_base_reserves =&gt; _102;<br align="left"/>debug residual =&gt; _109;<br align="left"/>debug val =&gt; _112;<br align="left"/>debug error_code =&gt; _120;<br align="left"/>debug res =&gt; _127;<br align="left"/>debug res =&gt; _146;<br align="left"/>debug residual =&gt; _154;<br align="left"/>debug val =&gt; _157;<br align="left"/>debug min_base_asset_reserve =&gt; _158;<br align="left"/>debug max_base_asset_reserve =&gt; _159;<br align="left"/>debug residual =&gt; _166;<br align="left"/>debug val =&gt; _169;<br align="left"/>debug reserve_price_after =&gt; _172;<br align="left"/>debug residual =&gt; _177;<br align="left"/>debug val =&gt; _180;<br align="left"/>debug residual =&gt; _188;<br align="left"/>debug val =&gt; _191;<br align="left"/>debug max_bids =&gt; _192;<br align="left"/>debug max_asks =&gt; _193;<br align="left"/>debug residual =&gt; _200;<br align="left"/>debug val =&gt; _203;<br align="left"/>debug error_code =&gt; _214;<br align="left"/>debug res =&gt; _221;<br align="left"/>debug residual =&gt; _239;<br align="left"/>debug val =&gt; _242;<br align="left"/>>;
    bb0__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = _2<br/>_6 = Gt(move _7, const 0_u128)<br/></td></tr><tr><td align="left">switchInt(move _6)</td></tr></table>>];
    bb1__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageLive(_8)<br/>_8 = ()<br/>_5 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _8)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb2__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageLive(_9)<br/>_9 = error::ErrorCode::InvalidConcentrationCoef<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_250 = const _<br/>_20 = &amp;(*_250)<br/>_19 = &amp;(*_20)<br/>_18 = move _19 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_19)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>_28 = &amp;_9<br/>_27 = &amp;(*_28)<br/></td></tr><tr><td align="left">_26 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _27)</td></tr></table>>];
    bb3__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>_25 = [move _26]<br/>StorageDead(_26)<br/>_24 = &amp;_25<br/>_23 = &amp;(*_24)<br/>_22 = move _23 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">_17 = Arguments::&lt;'_&gt;::new_v1(move _18, move _22)</td></tr></table>>];
    bb4__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">_16 = format(move _17)</td></tr></table>>];
    bb5__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_28)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_20)<br/>_15 = move _16<br/>StorageDead(_16)<br/>_14 = &amp;_15<br/>_13 = &amp;(*_14)<br/></td></tr><tr><td align="left">_12 = &lt;String as Deref&gt;::deref(move _13)</td></tr></table>>];
    bb6__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">_11 = &amp;(*_12)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">_10 = solana_program::log::sol_log(move _11)</td></tr></table>>];
    bb7__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/></td></tr><tr><td align="left">drop(_15)</td></tr></table>>];
    bb8__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_12)<br/>StorageDead(_10)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>_249 = const _<br/>_39 = &amp;(*_249)<br/>_38 = &amp;(*_39)<br/>_37 = move _38 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">_36 = Arguments::&lt;'_&gt;::new_const(move _37)</td></tr></table>>];
    bb9__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/></td></tr><tr><td align="left">_35 = format(move _36)</td></tr></table>>];
    bb10__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_39)<br/>_34 = move _35<br/>StorageDead(_35)<br/>_33 = &amp;_34<br/>_32 = &amp;(*_33)<br/></td></tr><tr><td align="left">_31 = &lt;String as Deref&gt;::deref(move _32)</td></tr></table>>];
    bb11__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">_30 = &amp;(*_31)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">_29 = solana_program::log::sol_log(move _30)</td></tr></table>>];
    bb12__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/></td></tr><tr><td align="left">drop(_34)</td></tr></table>>];
    bb13__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_33)<br/>StorageDead(_31)<br/>StorageDead(_29)<br/>StorageLive(_41)<br/>_41 = _9<br/>_5 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _41)<br/>StorageDead(_41)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb15__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_42 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _42)</td></tr></table>>];
    bb16__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_46)<br/>_46 = ((_4 as Continue).0: ())<br/>_3 = _46<br/>StorageDead(_46)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>_50 = CheckedSub(const _, const _)<br/></td></tr><tr><td align="left">assert(!move (_50.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, const _, const _)</td></tr></table>>];
    bb17__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb18__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_43)<br/>_43 = ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_45)<br/>_45 = _43<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _45)</td></tr></table>>];
    bb19__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_43)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">_49 = move (_50.0: u128)<br/>StorageLive(_51)<br/>_51 = _2<br/>_52 = Eq(_51, const 0_u128)<br/></td></tr><tr><td align="left">assert(!move _52, &quot;attempt to divide `{}` by zero&quot;, _49)</td></tr></table>>];
    bb21__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">_48 = Div(move _49, move _51)<br/>StorageDead(_51)<br/>StorageDead(_49)<br/>_53 = CheckedAdd(const _, _48)<br/></td></tr><tr><td align="left">assert(!move (_53.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, const _, move _48)</td></tr></table>>];
    bb22__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">_47 = move (_53.0: u128)<br/>StorageDead(_48)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>_58 = _47<br/>_57 = Gt(move _58, const _)<br/></td></tr><tr><td align="left">switchInt(move _57)</td></tr></table>>];
    bb23__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>_60 = _47<br/>_59 = Le(move _60, const _)<br/></td></tr><tr><td align="left">switchInt(move _59)</td></tr></table>>];
    bb24__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageLive(_61)<br/>_61 = ()<br/>_56 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _61)<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_62)<br/>_62 = error::ErrorCode::InvalidConcentrationCoef<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>_248 = const _<br/>_73 = &amp;(*_248)<br/>_72 = &amp;(*_73)<br/>_71 = move _72 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_72)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>_81 = &amp;_62<br/>_80 = &amp;(*_81)<br/></td></tr><tr><td align="left">_79 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _80)</td></tr></table>>];
    bb28__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>_78 = [move _79]<br/>StorageDead(_79)<br/>_77 = &amp;_78<br/>_76 = &amp;(*_77)<br/>_75 = move _76 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_76)<br/></td></tr><tr><td align="left">_70 = Arguments::&lt;'_&gt;::new_v1(move _71, move _75)</td></tr></table>>];
    bb29__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">_69 = format(move _70)</td></tr></table>>];
    bb30__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_81)<br/>StorageDead(_78)<br/>StorageDead(_77)<br/>StorageDead(_73)<br/>_68 = move _69<br/>StorageDead(_69)<br/>_67 = &amp;_68<br/>_66 = &amp;(*_67)<br/></td></tr><tr><td align="left">_65 = &lt;String as Deref&gt;::deref(move _66)</td></tr></table>>];
    bb31__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">_64 = &amp;(*_65)<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">_63 = solana_program::log::sol_log(move _64)</td></tr></table>>];
    bb32__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/></td></tr><tr><td align="left">drop(_68)</td></tr></table>>];
    bb33__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>StorageDead(_67)<br/>StorageDead(_65)<br/>StorageDead(_63)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>_247 = const _<br/>_92 = &amp;(*_247)<br/>_91 = &amp;(*_92)<br/>_90 = move _91 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_91)<br/></td></tr><tr><td align="left">_89 = Arguments::&lt;'_&gt;::new_const(move _90)</td></tr></table>>];
    bb34__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/></td></tr><tr><td align="left">_88 = format(move _89)</td></tr></table>>];
    bb35__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>StorageDead(_92)<br/>_87 = move _88<br/>StorageDead(_88)<br/>_86 = &amp;_87<br/>_85 = &amp;(*_86)<br/></td></tr><tr><td align="left">_84 = &lt;String as Deref&gt;::deref(move _85)</td></tr></table>>];
    bb36__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">_83 = &amp;(*_84)<br/>StorageDead(_85)<br/></td></tr><tr><td align="left">_82 = solana_program::log::sol_log(move _83)</td></tr></table>>];
    bb37__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/></td></tr><tr><td align="left">drop(_87)</td></tr></table>>];
    bb38__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>StorageDead(_86)<br/>StorageDead(_84)<br/>StorageDead(_82)<br/>StorageLive(_94)<br/>_94 = _62<br/>_56 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _94)<br/>StorageDead(_94)<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">_55 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _56)</td></tr></table>>];
    bb40__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>_95 = discriminant(_55)<br/></td></tr><tr><td align="left">switchInt(move _95)</td></tr></table>>];
    bb41__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageLive(_99)<br/>_99 = ((_55 as Continue).0: ())<br/>_54 = _99<br/>StorageDead(_99)<br/>StorageDead(_55)<br/>StorageDead(_54)<br/>StorageLive(_100)<br/>_100 = _47<br/>(((*_1).1: state::perp_market::AMM).7: u128) = move _100<br/>StorageDead(_100)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>_107 = &amp;((*_1).1: state::perp_market::AMM)<br/>_106 = &amp;(*_107)<br/></td></tr><tr><td align="left">_105 = calculate_terminal_price_and_reserves(move _106)</td></tr></table>>];
    bb42__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageLive(_96)<br/>_96 = ((_55 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_98)<br/>_98 = _96<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _98)</td></tr></table>>];
    bb43__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>StorageDead(_96)<br/>StorageDead(_55)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/></td></tr><tr><td align="left">_104 = &lt;std::result::Result&lt;(u64, u128, u128), error::ErrorCode&gt; as Try&gt;::branch(move _105)</td></tr></table>>];
    bb45__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/>_108 = discriminant(_104)<br/></td></tr><tr><td align="left">switchInt(move _108)</td></tr></table>>];
    bb46__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageLive(_112)<br/>_112 = ((_104 as Continue).0: (u64, u128, u128))<br/>_103 = _112<br/>StorageDead(_112)<br/>StorageLive(_101)<br/>_101 = (_103.1: u128)<br/>StorageLive(_102)<br/>_102 = (_103.2: u128)<br/>StorageDead(_107)<br/>StorageDead(_104)<br/>StorageDead(_103)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>_117 = _101<br/>StorageLive(_118)<br/>_118 = (((*_1).1: state::perp_market::AMM).12: u128)<br/>_116 = Eq(move _117, move _118)<br/></td></tr><tr><td align="left">switchInt(move _116)</td></tr></table>>];
    bb47__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageLive(_109)<br/>_109 = ((_104 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_111)<br/>_111 = _109<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _111)</td></tr></table>>];
    bb48__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/>StorageDead(_109)<br/>StorageDead(_107)<br/>StorageDead(_104)<br/>StorageDead(_103)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>StorageDead(_117)<br/>StorageLive(_119)<br/>_119 = ()<br/>_115 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _119)<br/>StorageDead(_119)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>StorageDead(_117)<br/>StorageLive(_120)<br/>_120 = error::ErrorCode::InvalidAmmDetected<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>_246 = const _<br/>_131 = &amp;(*_246)<br/>_130 = &amp;(*_131)<br/>_129 = move _130 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_130)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>_139 = &amp;_120<br/>_138 = &amp;(*_139)<br/></td></tr><tr><td align="left">_137 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _138)</td></tr></table>>];
    bb51__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/>_136 = [move _137]<br/>StorageDead(_137)<br/>_135 = &amp;_136<br/>_134 = &amp;(*_135)<br/>_133 = move _134 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_134)<br/></td></tr><tr><td align="left">_128 = Arguments::&lt;'_&gt;::new_v1(move _129, move _133)</td></tr></table>>];
    bb52__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/>StorageDead(_129)<br/></td></tr><tr><td align="left">_127 = format(move _128)</td></tr></table>>];
    bb53__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>StorageDead(_139)<br/>StorageDead(_136)<br/>StorageDead(_135)<br/>StorageDead(_131)<br/>_126 = move _127<br/>StorageDead(_127)<br/>_125 = &amp;_126<br/>_124 = &amp;(*_125)<br/></td></tr><tr><td align="left">_123 = &lt;String as Deref&gt;::deref(move _124)</td></tr></table>>];
    bb54__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">_122 = &amp;(*_123)<br/>StorageDead(_124)<br/></td></tr><tr><td align="left">_121 = solana_program::log::sol_log(move _122)</td></tr></table>>];
    bb55__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/></td></tr><tr><td align="left">drop(_126)</td></tr></table>>];
    bb56__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/>StorageDead(_125)<br/>StorageDead(_123)<br/>StorageDead(_121)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>_245 = const _<br/>_150 = &amp;(*_245)<br/>_149 = &amp;(*_150)<br/>_148 = move _149 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_149)<br/></td></tr><tr><td align="left">_147 = Arguments::&lt;'_&gt;::new_const(move _148)</td></tr></table>>];
    bb57__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_148)<br/></td></tr><tr><td align="left">_146 = format(move _147)</td></tr></table>>];
    bb58__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_147)<br/>StorageDead(_150)<br/>_145 = move _146<br/>StorageDead(_146)<br/>_144 = &amp;_145<br/>_143 = &amp;(*_144)<br/></td></tr><tr><td align="left">_142 = &lt;String as Deref&gt;::deref(move _143)</td></tr></table>>];
    bb59__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">_141 = &amp;(*_142)<br/>StorageDead(_143)<br/></td></tr><tr><td align="left">_140 = solana_program::log::sol_log(move _141)</td></tr></table>>];
    bb60__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_141)<br/></td></tr><tr><td align="left">drop(_145)</td></tr></table>>];
    bb61__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_145)<br/>StorageDead(_144)<br/>StorageDead(_142)<br/>StorageDead(_140)<br/>StorageLive(_152)<br/>_152 = _120<br/>_115 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _152)<br/>StorageDead(_152)<br/>StorageDead(_120)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_116)<br/></td></tr><tr><td align="left">_114 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _115)</td></tr></table>>];
    bb63__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_115)<br/>_153 = discriminant(_114)<br/></td></tr><tr><td align="left">switchInt(move _153)</td></tr></table>>];
    bb64__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageLive(_157)<br/>_157 = ((_114 as Continue).0: ())<br/>_113 = _157<br/>StorageDead(_157)<br/>StorageDead(_114)<br/>StorageDead(_113)<br/>StorageLive(_160)<br/>StorageLive(_161)<br/>StorageLive(_162)<br/>StorageLive(_163)<br/>_163 = (((*_1).1: state::perp_market::AMM).7: u128)<br/>StorageLive(_164)<br/>_164 = _102<br/></td></tr><tr><td align="left">_162 = calculate_bid_ask_bounds(move _163, move _164)</td></tr></table>>];
    bb65__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageLive(_154)<br/>_154 = ((_114 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_156)<br/>_156 = _154<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _156)</td></tr></table>>];
    bb66__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_156)<br/>StorageDead(_154)<br/>StorageDead(_114)<br/>StorageDead(_113)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb67__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_164)<br/>StorageDead(_163)<br/></td></tr><tr><td align="left">_161 = &lt;std::result::Result&lt;(u128, u128), error::ErrorCode&gt; as Try&gt;::branch(move _162)</td></tr></table>>];
    bb68__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_162)<br/>_165 = discriminant(_161)<br/></td></tr><tr><td align="left">switchInt(move _165)</td></tr></table>>];
    bb69__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageLive(_169)<br/>_169 = ((_161 as Continue).0: (u128, u128))<br/>_160 = _169<br/>StorageDead(_169)<br/>StorageLive(_158)<br/>_158 = (_160.0: u128)<br/>StorageLive(_159)<br/>_159 = (_160.1: u128)<br/>StorageDead(_161)<br/>StorageDead(_160)<br/>StorageLive(_170)<br/>_170 = _159<br/>(((*_1).1: state::perp_market::AMM).9: u128) = move _170<br/>StorageDead(_170)<br/>StorageLive(_171)<br/>_171 = _158<br/>(((*_1).1: state::perp_market::AMM).8: u128) = move _171<br/>StorageDead(_171)<br/>StorageLive(_172)<br/>StorageLive(_173)<br/>StorageLive(_174)<br/>StorageLive(_175)<br/>_175 = &amp;((*_1).1: state::perp_market::AMM)<br/></td></tr><tr><td align="left">_174 = AMM::reserve_price(move _175)</td></tr></table>>];
    bb70__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageLive(_166)<br/>_166 = ((_161 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_168)<br/>_168 = _166<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _168)</td></tr></table>>];
    bb71__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_168)<br/>StorageDead(_166)<br/>StorageDead(_161)<br/>StorageDead(_160)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb72__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_175)<br/></td></tr><tr><td align="left">_173 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _174)</td></tr></table>>];
    bb73__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_174)<br/>_176 = discriminant(_173)<br/></td></tr><tr><td align="left">switchInt(move _176)</td></tr></table>>];
    bb74__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageLive(_180)<br/>_180 = ((_173 as Continue).0: u64)<br/>_172 = _180<br/>StorageDead(_180)<br/>StorageDead(_173)<br/>StorageLive(_181)<br/>StorageLive(_182)<br/>StorageLive(_183)<br/>StorageLive(_184)<br/>_184 = &amp;mut (*_1)<br/>StorageLive(_185)<br/>_185 = _172<br/>StorageLive(_186)<br/>_186 = Option::&lt;u64&gt;::None<br/></td></tr><tr><td align="left">_183 = update_spreads(move _184, move _185, move _186)</td></tr></table>>];
    bb75__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageLive(_177)<br/>_177 = ((_173 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_179)<br/>_179 = _177<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _179)</td></tr></table>>];
    bb76__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_179)<br/>StorageDead(_177)<br/>StorageDead(_173)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb77__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_186)<br/>StorageDead(_185)<br/>StorageDead(_184)<br/></td></tr><tr><td align="left">_182 = &lt;std::result::Result&lt;(u32, u32), error::ErrorCode&gt; as Try&gt;::branch(move _183)</td></tr></table>>];
    bb78__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_183)<br/>_187 = discriminant(_182)<br/></td></tr><tr><td align="left">switchInt(move _187)</td></tr></table>>];
    bb79__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageLive(_191)<br/>_191 = ((_182 as Continue).0: (u32, u32))<br/>_181 = _191<br/>StorageDead(_191)<br/>StorageDead(_182)<br/>StorageDead(_181)<br/>StorageLive(_194)<br/>StorageLive(_195)<br/>StorageLive(_196)<br/>StorageLive(_197)<br/>StorageLive(_198)<br/>_198 = &amp;((*_1).1: state::perp_market::AMM)<br/>_197 = &amp;(*_198)<br/></td></tr><tr><td align="left">_196 = calculate_market_open_bids_asks(move _197)</td></tr></table>>];
    bb80__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageLive(_188)<br/>_188 = ((_182 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_190)<br/>_190 = _188<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _190)</td></tr></table>>];
    bb81__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_190)<br/>StorageDead(_188)<br/>StorageDead(_182)<br/>StorageDead(_181)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb82__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_197)<br/></td></tr><tr><td align="left">_195 = &lt;std::result::Result&lt;(i128, i128), error::ErrorCode&gt; as Try&gt;::branch(move _196)</td></tr></table>>];
    bb83__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_196)<br/>_199 = discriminant(_195)<br/></td></tr><tr><td align="left">switchInt(move _199)</td></tr></table>>];
    bb84__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageLive(_203)<br/>_203 = ((_195 as Continue).0: (i128, i128))<br/>_194 = _203<br/>StorageDead(_203)<br/>StorageLive(_192)<br/>_192 = (_194.0: i128)<br/>StorageLive(_193)<br/>_193 = (_194.1: i128)<br/>StorageDead(_198)<br/>StorageDead(_195)<br/>StorageDead(_194)<br/>StorageLive(_204)<br/>StorageLive(_205)<br/>StorageLive(_206)<br/>StorageLive(_207)<br/>StorageLive(_208)<br/>_208 = _192<br/>StorageLive(_209)<br/>_209 = (((*_1).1: state::perp_market::AMM).15: i128)<br/>_207 = Gt(move _208, move _209)<br/></td></tr><tr><td align="left">switchInt(move _207)</td></tr></table>>];
    bb85__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageLive(_200)<br/>_200 = ((_195 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_202)<br/>_202 = _200<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _202)</td></tr></table>>];
    bb86__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_202)<br/>StorageDead(_200)<br/>StorageDead(_198)<br/>StorageDead(_195)<br/>StorageDead(_194)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb87__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_209)<br/>StorageDead(_208)<br/>StorageLive(_210)<br/>StorageLive(_211)<br/>_211 = _193<br/>StorageLive(_212)<br/>_212 = (((*_1).1: state::perp_market::AMM).15: i128)<br/>_210 = Lt(move _211, move _212)<br/></td></tr><tr><td align="left">switchInt(move _210)</td></tr></table>>];
    bb88__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_209)<br/>StorageDead(_208)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb89__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_212)<br/>StorageDead(_211)<br/>StorageLive(_213)<br/>_213 = ()<br/>_206 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _213)<br/>StorageDead(_213)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb90__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_212)<br/>StorageDead(_211)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb91__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageLive(_214)<br/>_214 = error::ErrorCode::InvalidConcentrationCoef<br/>StorageLive(_215)<br/>StorageLive(_216)<br/>StorageLive(_217)<br/>StorageLive(_218)<br/>StorageLive(_219)<br/>StorageLive(_220)<br/>StorageLive(_221)<br/>StorageLive(_222)<br/>StorageLive(_223)<br/>StorageLive(_224)<br/>StorageLive(_225)<br/>_244 = const _<br/>_225 = &amp;(*_244)<br/>_224 = &amp;(*_225)<br/>_223 = move _224 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_224)<br/>StorageLive(_227)<br/>StorageLive(_228)<br/>StorageLive(_229)<br/>StorageLive(_230)<br/>StorageLive(_231)<br/>StorageLive(_232)<br/>StorageLive(_233)<br/>_233 = &amp;_214<br/>_232 = &amp;(*_233)<br/></td></tr><tr><td align="left">_231 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _232)</td></tr></table>>];
    bb92__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_232)<br/>_230 = [move _231]<br/>StorageDead(_231)<br/>_229 = &amp;_230<br/>_228 = &amp;(*_229)<br/>_227 = move _228 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_228)<br/></td></tr><tr><td align="left">_222 = Arguments::&lt;'_&gt;::new_v1(move _223, move _227)</td></tr></table>>];
    bb93__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_227)<br/>StorageDead(_223)<br/></td></tr><tr><td align="left">_221 = format(move _222)</td></tr></table>>];
    bb94__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_222)<br/>StorageDead(_233)<br/>StorageDead(_230)<br/>StorageDead(_229)<br/>StorageDead(_225)<br/>_220 = move _221<br/>StorageDead(_221)<br/>_219 = &amp;_220<br/>_218 = &amp;(*_219)<br/></td></tr><tr><td align="left">_217 = &lt;String as Deref&gt;::deref(move _218)</td></tr></table>>];
    bb95__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">_216 = &amp;(*_217)<br/>StorageDead(_218)<br/></td></tr><tr><td align="left">_215 = solana_program::log::sol_log(move _216)</td></tr></table>>];
    bb96__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_216)<br/></td></tr><tr><td align="left">drop(_220)</td></tr></table>>];
    bb97__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_220)<br/>StorageDead(_219)<br/>StorageDead(_217)<br/>StorageDead(_215)<br/>StorageLive(_234)<br/>StorageLive(_235)<br/>StorageLive(_236)<br/>_236 = const &quot;amm.base_asset_amount_with_amm exceeds the unload liquidity available after concentration adjustment&quot;<br/>_235 = &amp;(*_236)<br/></td></tr><tr><td align="left">_234 = solana_program::log::sol_log(move _235)</td></tr></table>>];
    bb98__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_235)<br/>StorageDead(_236)<br/>StorageDead(_234)<br/>StorageLive(_237)<br/>_237 = _214<br/>_206 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _237)<br/>StorageDead(_237)<br/>StorageDead(_214)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb99__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageDead(_210)<br/>StorageDead(_207)<br/></td></tr><tr><td align="left">_205 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _206)</td></tr></table>>];
    bb100__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_206)<br/>_238 = discriminant(_205)<br/></td></tr><tr><td align="left">switchInt(move _238)</td></tr></table>>];
    bb101__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageLive(_242)<br/>_242 = ((_205 as Continue).0: ())<br/>_204 = _242<br/>StorageDead(_242)<br/>StorageDead(_205)<br/>StorageDead(_204)<br/>StorageLive(_243)<br/>_243 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _243)<br/>StorageDead(_243)<br/>StorageDead(_193)<br/>StorageDead(_192)<br/>StorageDead(_172)<br/>StorageDead(_159)<br/>StorageDead(_158)<br/>StorageDead(_102)<br/>StorageDead(_101)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb102__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageLive(_239)<br/>_239 = ((_205 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_241)<br/>_241 = _239<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _241)</td></tr></table>>];
    bb103__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_241)<br/>StorageDead(_239)<br/>StorageDead(_205)<br/>StorageDead(_204)<br/>StorageDead(_193)<br/>StorageDead(_192)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb104__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_172)<br/>StorageDead(_159)<br/>StorageDead(_158)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb105__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>StorageDead(_101)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb106__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb107__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left">return</td></tr></table>>];
    bb108__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">108 (cleanup)</td></tr><tr><td align="left">drop(_220)</td></tr></table>>];
    bb109__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">109 (cleanup)</td></tr><tr><td align="left">drop(_145)</td></tr></table>>];
    bb110__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">110 (cleanup)</td></tr><tr><td align="left">drop(_126)</td></tr></table>>];
    bb111__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">111 (cleanup)</td></tr><tr><td align="left">drop(_87)</td></tr></table>>];
    bb112__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">112 (cleanup)</td></tr><tr><td align="left">drop(_68)</td></tr></table>>];
    bb113__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">113 (cleanup)</td></tr><tr><td align="left">drop(_34)</td></tr></table>>];
    bb114__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">114 (cleanup)</td></tr><tr><td align="left">drop(_15)</td></tr></table>>];
    bb115__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">115 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_88 -> bb2__0_88 [label="0"];
    bb0__0_88 -> bb1__0_88 [label="otherwise"];
    bb1__0_88 -> bb14__0_88 [label=""];
    bb2__0_88 -> bb3__0_88 [label="return"];
    bb3__0_88 -> bb4__0_88 [label="return"];
    bb4__0_88 -> bb5__0_88 [label="return"];
    bb5__0_88 -> bb6__0_88 [label="return"];
    bb5__0_88 -> bb114__0_88 [label="unwind"];
    bb6__0_88 -> bb7__0_88 [label="return"];
    bb6__0_88 -> bb114__0_88 [label="unwind"];
    bb7__0_88 -> bb8__0_88 [label="return"];
    bb7__0_88 -> bb115__0_88 [label="unwind"];
    bb8__0_88 -> bb9__0_88 [label="return"];
    bb9__0_88 -> bb10__0_88 [label="return"];
    bb10__0_88 -> bb11__0_88 [label="return"];
    bb10__0_88 -> bb113__0_88 [label="unwind"];
    bb11__0_88 -> bb12__0_88 [label="return"];
    bb11__0_88 -> bb113__0_88 [label="unwind"];
    bb12__0_88 -> bb13__0_88 [label="return"];
    bb12__0_88 -> bb115__0_88 [label="unwind"];
    bb13__0_88 -> bb14__0_88 [label=""];
    bb14__0_88 -> bb15__0_88 [label="return"];
    bb15__0_88 -> bb16__0_88 [label="0"];
    bb15__0_88 -> bb18__0_88 [label="1"];
    bb15__0_88 -> bb17__0_88 [label="otherwise"];
    bb16__0_88 -> bb20__0_88 [label="success"];
    bb18__0_88 -> bb19__0_88 [label="return"];
    bb19__0_88 -> bb107__0_88 [label=""];
    bb20__0_88 -> bb21__0_88 [label="success"];
    bb21__0_88 -> bb22__0_88 [label="success"];
    bb22__0_88 -> bb26__0_88 [label="0"];
    bb22__0_88 -> bb23__0_88 [label="otherwise"];
    bb23__0_88 -> bb25__0_88 [label="0"];
    bb23__0_88 -> bb24__0_88 [label="otherwise"];
    bb24__0_88 -> bb39__0_88 [label=""];
    bb25__0_88 -> bb27__0_88 [label=""];
    bb26__0_88 -> bb27__0_88 [label=""];
    bb27__0_88 -> bb28__0_88 [label="return"];
    bb28__0_88 -> bb29__0_88 [label="return"];
    bb29__0_88 -> bb30__0_88 [label="return"];
    bb30__0_88 -> bb31__0_88 [label="return"];
    bb30__0_88 -> bb112__0_88 [label="unwind"];
    bb31__0_88 -> bb32__0_88 [label="return"];
    bb31__0_88 -> bb112__0_88 [label="unwind"];
    bb32__0_88 -> bb33__0_88 [label="return"];
    bb32__0_88 -> bb115__0_88 [label="unwind"];
    bb33__0_88 -> bb34__0_88 [label="return"];
    bb34__0_88 -> bb35__0_88 [label="return"];
    bb35__0_88 -> bb36__0_88 [label="return"];
    bb35__0_88 -> bb111__0_88 [label="unwind"];
    bb36__0_88 -> bb37__0_88 [label="return"];
    bb36__0_88 -> bb111__0_88 [label="unwind"];
    bb37__0_88 -> bb38__0_88 [label="return"];
    bb37__0_88 -> bb115__0_88 [label="unwind"];
    bb38__0_88 -> bb39__0_88 [label=""];
    bb39__0_88 -> bb40__0_88 [label="return"];
    bb40__0_88 -> bb41__0_88 [label="0"];
    bb40__0_88 -> bb42__0_88 [label="1"];
    bb40__0_88 -> bb17__0_88 [label="otherwise"];
    bb41__0_88 -> bb44__0_88 [label="return"];
    bb42__0_88 -> bb43__0_88 [label="return"];
    bb43__0_88 -> bb106__0_88 [label=""];
    bb44__0_88 -> bb45__0_88 [label="return"];
    bb45__0_88 -> bb46__0_88 [label="0"];
    bb45__0_88 -> bb47__0_88 [label="1"];
    bb45__0_88 -> bb17__0_88 [label="otherwise"];
    bb46__0_88 -> bb50__0_88 [label="0"];
    bb46__0_88 -> bb49__0_88 [label="otherwise"];
    bb47__0_88 -> bb48__0_88 [label="return"];
    bb48__0_88 -> bb106__0_88 [label=""];
    bb49__0_88 -> bb62__0_88 [label=""];
    bb50__0_88 -> bb51__0_88 [label="return"];
    bb51__0_88 -> bb52__0_88 [label="return"];
    bb52__0_88 -> bb53__0_88 [label="return"];
    bb53__0_88 -> bb54__0_88 [label="return"];
    bb53__0_88 -> bb110__0_88 [label="unwind"];
    bb54__0_88 -> bb55__0_88 [label="return"];
    bb54__0_88 -> bb110__0_88 [label="unwind"];
    bb55__0_88 -> bb56__0_88 [label="return"];
    bb55__0_88 -> bb115__0_88 [label="unwind"];
    bb56__0_88 -> bb57__0_88 [label="return"];
    bb57__0_88 -> bb58__0_88 [label="return"];
    bb58__0_88 -> bb59__0_88 [label="return"];
    bb58__0_88 -> bb109__0_88 [label="unwind"];
    bb59__0_88 -> bb60__0_88 [label="return"];
    bb59__0_88 -> bb109__0_88 [label="unwind"];
    bb60__0_88 -> bb61__0_88 [label="return"];
    bb60__0_88 -> bb115__0_88 [label="unwind"];
    bb61__0_88 -> bb62__0_88 [label=""];
    bb62__0_88 -> bb63__0_88 [label="return"];
    bb63__0_88 -> bb64__0_88 [label="0"];
    bb63__0_88 -> bb65__0_88 [label="1"];
    bb63__0_88 -> bb17__0_88 [label="otherwise"];
    bb64__0_88 -> bb67__0_88 [label="return"];
    bb65__0_88 -> bb66__0_88 [label="return"];
    bb66__0_88 -> bb105__0_88 [label=""];
    bb67__0_88 -> bb68__0_88 [label="return"];
    bb68__0_88 -> bb69__0_88 [label="0"];
    bb68__0_88 -> bb70__0_88 [label="1"];
    bb68__0_88 -> bb17__0_88 [label="otherwise"];
    bb69__0_88 -> bb72__0_88 [label="return"];
    bb70__0_88 -> bb71__0_88 [label="return"];
    bb71__0_88 -> bb105__0_88 [label=""];
    bb72__0_88 -> bb73__0_88 [label="return"];
    bb73__0_88 -> bb74__0_88 [label="0"];
    bb73__0_88 -> bb75__0_88 [label="1"];
    bb73__0_88 -> bb17__0_88 [label="otherwise"];
    bb74__0_88 -> bb77__0_88 [label="return"];
    bb75__0_88 -> bb76__0_88 [label="return"];
    bb76__0_88 -> bb104__0_88 [label=""];
    bb77__0_88 -> bb78__0_88 [label="return"];
    bb78__0_88 -> bb79__0_88 [label="0"];
    bb78__0_88 -> bb80__0_88 [label="1"];
    bb78__0_88 -> bb17__0_88 [label="otherwise"];
    bb79__0_88 -> bb82__0_88 [label="return"];
    bb80__0_88 -> bb81__0_88 [label="return"];
    bb81__0_88 -> bb104__0_88 [label=""];
    bb82__0_88 -> bb83__0_88 [label="return"];
    bb83__0_88 -> bb84__0_88 [label="0"];
    bb83__0_88 -> bb85__0_88 [label="1"];
    bb83__0_88 -> bb17__0_88 [label="otherwise"];
    bb84__0_88 -> bb88__0_88 [label="0"];
    bb84__0_88 -> bb87__0_88 [label="otherwise"];
    bb85__0_88 -> bb86__0_88 [label="return"];
    bb86__0_88 -> bb104__0_88 [label=""];
    bb87__0_88 -> bb90__0_88 [label="0"];
    bb87__0_88 -> bb89__0_88 [label="otherwise"];
    bb88__0_88 -> bb91__0_88 [label=""];
    bb89__0_88 -> bb99__0_88 [label=""];
    bb90__0_88 -> bb91__0_88 [label=""];
    bb91__0_88 -> bb92__0_88 [label="return"];
    bb92__0_88 -> bb93__0_88 [label="return"];
    bb93__0_88 -> bb94__0_88 [label="return"];
    bb94__0_88 -> bb95__0_88 [label="return"];
    bb94__0_88 -> bb108__0_88 [label="unwind"];
    bb95__0_88 -> bb96__0_88 [label="return"];
    bb95__0_88 -> bb108__0_88 [label="unwind"];
    bb96__0_88 -> bb97__0_88 [label="return"];
    bb96__0_88 -> bb115__0_88 [label="unwind"];
    bb97__0_88 -> bb98__0_88 [label="return"];
    bb98__0_88 -> bb99__0_88 [label=""];
    bb99__0_88 -> bb100__0_88 [label="return"];
    bb100__0_88 -> bb101__0_88 [label="0"];
    bb100__0_88 -> bb102__0_88 [label="1"];
    bb100__0_88 -> bb17__0_88 [label="otherwise"];
    bb101__0_88 -> bb107__0_88 [label=""];
    bb102__0_88 -> bb103__0_88 [label="return"];
    bb103__0_88 -> bb104__0_88 [label=""];
    bb104__0_88 -> bb105__0_88 [label=""];
    bb105__0_88 -> bb106__0_88 [label=""];
    bb106__0_88 -> bb107__0_88 [label=""];
    bb108__0_88 -> bb115__0_88 [label="return"];
    bb109__0_88 -> bb115__0_88 [label="return"];
    bb110__0_88 -> bb115__0_88 [label="return"];
    bb111__0_88 -> bb115__0_88 [label="return"];
    bb112__0_88 -> bb115__0_88 [label="return"];
    bb113__0_88 -> bb115__0_88 [label="return"];
    bb114__0_88 -> bb115__0_88 [label="return"];
}
