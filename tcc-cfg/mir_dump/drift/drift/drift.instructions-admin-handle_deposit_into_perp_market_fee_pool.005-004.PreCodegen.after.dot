digraph Mir_0_5535 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn admin::handle_deposit_into_perp_market_fee_pool(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::admin::DepositIntoMarketFeePool&lt;ReErased&gt;&gt;, _2: u64) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _5: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _6: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _7: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _8: isize;<br align="left"/>let _9: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _10: !;<br align="left"/>let mut _11: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _12: ();<br align="left"/>let _13: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _14: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _15: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _16: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _17: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _18: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _19: Closure(DefId(0:5538 ~ drift[d311]::instructions::admin::handle_deposit_into_perp_market_fee_pool::{closure#0}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _20: isize;<br align="left"/>let _21: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _22: !;<br align="left"/>let mut _23: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _24: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _25: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _26: std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _27: std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _28: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let _29: std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let mut _30: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;&gt;;<br align="left"/>let mut _31: std::result::Result&lt;std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _32: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _33: isize;<br align="left"/>let _34: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _35: !;<br align="left"/>let mut _36: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _37: std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let _38: ();<br align="left"/>let mut _39: &amp;ReErased str;<br align="left"/>let _40: &amp;ReErased str;<br align="left"/>let mut _41: &amp;ReErased std::string::String;<br align="left"/>let _42: &amp;ReErased std::string::String;<br align="left"/>let _43: std::string::String;<br align="left"/>let _44: std::string::String;<br align="left"/>let mut _45: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _46: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _47: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _48: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _49: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _50: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _51: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _52: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _53: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _54: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _55: &amp;ReErased u64;<br align="left"/>let _56: &amp;ReErased u64;<br align="left"/>let mut _57: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _58: &amp;ReErased u16;<br align="left"/>let _59: &amp;ReErased u16;<br align="left"/>let _60: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _61: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _62: ();<br align="left"/>let mut _63: &amp;ReErased str;<br align="left"/>let _64: &amp;ReErased str;<br align="left"/>let mut _65: &amp;ReErased std::string::String;<br align="left"/>let _66: &amp;ReErased std::string::String;<br align="left"/>let _67: std::string::String;<br align="left"/>let _68: std::string::String;<br align="left"/>let mut _69: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _70: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _71: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _72: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _73: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _74: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _75: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _76: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _77: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _78: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _79: &amp;ReErased i128;<br align="left"/>let _80: &amp;ReErased i128;<br align="left"/>let _81: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _82: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _83: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _84: &amp;ReErased i128;<br align="left"/>let _85: &amp;ReErased i128;<br align="left"/>let _86: i128;<br align="left"/>let mut _87: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _88: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _89: i128;<br align="left"/>let mut _90: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _91: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _92: i128;<br align="left"/>let mut _93: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _94: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _95: u64;<br align="left"/>let mut _96: isize;<br align="left"/>let _97: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _98: !;<br align="left"/>let mut _99: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _100: i128;<br align="left"/>let mut _101: isize;<br align="left"/>let _102: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _103: !;<br align="left"/>let mut _104: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _105: i128;<br align="left"/>let mut _106: i128;<br align="left"/>let mut _107: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _108: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _109: i128;<br align="left"/>let mut _110: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _111: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _112: i128;<br align="left"/>let mut _113: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _114: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _115: u64;<br align="left"/>let mut _116: isize;<br align="left"/>let _117: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _118: !;<br align="left"/>let mut _119: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _120: i128;<br align="left"/>let mut _121: isize;<br align="left"/>let _122: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _123: !;<br align="left"/>let mut _124: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _125: i128;<br align="left"/>let mut _126: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _127: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _128: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _129: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _130: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _131: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _132: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _133: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _134: Closure(DefId(0:5539 ~ drift[d311]::instructions::admin::handle_deposit_into_perp_market_fee_pool::{closure#1}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _135: isize;<br align="left"/>let _136: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _137: !;<br align="left"/>let mut _138: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _139: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _140: ();<br align="left"/>let mut _141: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _142: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _143: u128;<br align="left"/>let mut _144: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _145: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _146: u64;<br align="left"/>let mut _147: isize;<br align="left"/>let _148: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _149: !;<br align="left"/>let mut _150: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _151: u128;<br align="left"/>let mut _152: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _153: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _154: state::spot_market::SpotBalanceType;<br align="left"/>let mut _155: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _156: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _157: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _158: &amp;ReErased mut dyn [Binder(Trait(state::spot_market::SpotBalance), [])] + ReErased;<br align="left"/>let mut _159: &amp;ReErased mut state::perp_market::PoolBalance;<br align="left"/>let mut _160: &amp;ReErased mut state::perp_market::PoolBalance;<br align="left"/>let mut _161: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _162: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _163: isize;<br align="left"/>let _164: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _165: !;<br align="left"/>let mut _166: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _167: ();<br align="left"/>let _168: ();<br align="left"/>let mut _169: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _170: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _171: &amp;ReErased anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let _172: &amp;ReErased anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let mut _173: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let _174: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _175: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let _176: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _177: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _178: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _179: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _180: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _181: u64;<br align="left"/>let mut _182: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let _183: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let mut _184: std::option::Option&lt;&amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;&gt;;<br align="left"/>let mut _185: bool;<br align="left"/>let mut _186: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _187: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _188: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _189: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _190: isize;<br align="left"/>let _191: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _192: !;<br align="left"/>let mut _193: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _194: ();<br align="left"/>let mut _195: ();<br align="left"/>let mut _196: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _197: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _198: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _199: &amp;ReErased mut instructions::admin::DepositIntoMarketFeePool&lt;ReErased&gt;;<br align="left"/>let mut _200: &amp;ReErased mut instructions::admin::DepositIntoMarketFeePool&lt;ReErased&gt;;<br align="left"/>let mut _201: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _202: &amp;ReErased mut instructions::admin::DepositIntoMarketFeePool&lt;ReErased&gt;;<br align="left"/>let mut _203: &amp;ReErased mut instructions::admin::DepositIntoMarketFeePool&lt;ReErased&gt;;<br align="left"/>let mut _204: &amp;ReErased mut instructions::admin::DepositIntoMarketFeePool&lt;ReErased&gt;;<br align="left"/>let mut _205: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _206: &amp;ReErased mut instructions::admin::DepositIntoMarketFeePool&lt;ReErased&gt;;<br align="left"/>let mut _207: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _208: &amp;ReErased mut instructions::admin::DepositIntoMarketFeePool&lt;ReErased&gt;;<br align="left"/>let mut _209: isize;<br align="left"/>let mut _210: isize;<br align="left"/>let mut _211: isize;<br align="left"/>let mut _212: isize;<br align="left"/>let mut _213: isize;<br align="left"/>let mut _214: isize;<br align="left"/>let mut _215: isize;<br align="left"/>let mut _216: isize;<br align="left"/>let mut _217: isize;<br align="left"/>let mut _218: isize;<br align="left"/>let mut _219: isize;<br align="left"/>let mut _220: isize;<br align="left"/>let mut _221: isize;<br align="left"/>let mut _222: isize;<br align="left"/>let mut _223: isize;<br align="left"/>let mut _224: isize;<br align="left"/>let mut _225: isize;<br align="left"/>let mut _226: isize;<br align="left"/>let mut _227: isize;<br align="left"/>let mut _228: isize;<br align="left"/>let mut _229: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _230: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug amount =&gt; _2;<br align="left"/>debug residual =&gt; _9;<br align="left"/>debug val =&gt; _12;<br align="left"/>debug perp_market =&gt; _13;<br align="left"/>debug residual =&gt; _21;<br align="left"/>debug val =&gt; _24;<br align="left"/>debug remaining_accounts_iter =&gt; _25;<br align="left"/>debug mint =&gt; _29;<br align="left"/>debug residual =&gt; _34;<br align="left"/>debug val =&gt; _37;<br align="left"/>debug res =&gt; _44;<br align="left"/>debug res =&gt; _68;<br align="left"/>debug residual =&gt; _97;<br align="left"/>debug val =&gt; _100;<br align="left"/>debug residual =&gt; _102;<br align="left"/>debug val =&gt; _105;<br align="left"/>debug residual =&gt; _117;<br align="left"/>debug val =&gt; _120;<br align="left"/>debug residual =&gt; _122;<br align="left"/>debug val =&gt; _125;<br align="left"/>debug quote_spot_market =&gt; _128;<br align="left"/>debug residual =&gt; _136;<br align="left"/>debug val =&gt; _139;<br align="left"/>debug residual =&gt; _148;<br align="left"/>debug val =&gt; _151;<br align="left"/>debug residual =&gt; _164;<br align="left"/>debug val =&gt; _167;<br align="left"/>debug residual =&gt; _191;<br align="left"/>debug val =&gt; _194;<br align="left"/>>;
    bb0__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_199 = deref_copy (_1.1: &amp;mut instructions::admin::DepositIntoMarketFeePool&lt;'_&gt;)<br/>_7 = &amp;((*_199).1: anchor_lang::prelude::AccountLoader&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_6 = &amp;(*_7)<br/></td></tr><tr><td align="left">_5 = constraints::perp_market_valid(move _6)</td></tr></table>>];
    bb1__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb2__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_8 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb3__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_4 as Continue).0: ())<br/>_3 = _12<br/>StorageDead(_12)<br/>_209 = discriminant(_4)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_200 = deref_copy (_1.1: &amp;mut instructions::admin::DepositIntoMarketFeePool&lt;'_&gt;)<br/>_18 = &amp;((*_200).1: anchor_lang::prelude::AccountLoader&lt;'_, state::perp_market::PerpMarket&gt;)<br/></td></tr><tr><td align="left">_17 = anchor_lang::prelude::AccountLoader::&lt;'_, PerpMarket&gt;::load_mut(move _18)</td></tr></table>>];
    bb4__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>_9 = move ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_11)<br/>_11 = move _9<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _11)</td></tr></table>>];
    bb6__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_9)<br/>_223 = discriminant(_4)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageLive(_19)<br/>_19 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_16 = std::result::Result::&lt;RefMut&lt;'_, PerpMarket&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _17, move _19)</td></tr></table>>];
    bb8__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">_15 = &lt;std::result::Result&lt;RefMut&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _16)</td></tr></table>>];
    bb9__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>_20 = discriminant(_15)<br/></td></tr><tr><td align="left">switchInt(move _20)</td></tr></table>>];
    bb10__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_24)<br/>_24 = move ((_15 as Continue).0: std::cell::RefMut&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_14 = move _24<br/>StorageDead(_24)<br/>_13 = &amp;mut _14<br/>_213 = discriminant(_15)<br/>StorageDead(_15)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>_201 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_28 = &amp;(*_201)<br/></td></tr><tr><td align="left">_27 = core::slice::&lt;impl [anchor_lang::prelude::AccountInfo&lt;'_&gt;]&gt;::iter(move _28)</td></tr></table>>];
    bb11__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = ((_15 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_23)<br/>_23 = _21<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _23)</td></tr></table>>];
    bb12__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_21)<br/>_211 = discriminant(_15)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/></td></tr><tr><td align="left">_26 = &lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as Iterator&gt;::peekable(move _27)</td></tr></table>>];
    bb14__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>_25 = &amp;mut _26<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>_32 = &amp;mut (*_25)<br/></td></tr><tr><td align="left">_31 = get_token_mint(move _32)</td></tr></table>>];
    bb15__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/></td></tr><tr><td align="left">_30 = &lt;std::result::Result&lt;Option&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt;&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _31)</td></tr></table>>];
    bb16__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>_33 = discriminant(_30)<br/></td></tr><tr><td align="left">switchInt(move _33)</td></tr></table>>];
    bb17__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_37)<br/>_37 = move ((_30 as Continue).0: std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt;&gt;)<br/>_29 = move _37<br/>StorageDead(_37)<br/>StorageDead(_30)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>_198 = const _<br/>_48 = &amp;(*_198)<br/>_47 = &amp;(*_48)<br/>_46 = move _47 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_47)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>_56 = &amp;_2<br/>_55 = &amp;(*_56)<br/></td></tr><tr><td align="left">_54 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _55)</td></tr></table>>];
    bb18__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_34)<br/>_34 = ((_30 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_36)<br/>_36 = _34<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _36)</td></tr></table>>];
    bb19__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_34)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>_61 = &amp;(*_13)<br/></td></tr><tr><td align="left">_60 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _61)</td></tr></table>>];
    bb21__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>_59 = &amp;((*_60).21: u16)<br/>_58 = &amp;(*_59)<br/></td></tr><tr><td align="left">_57 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _58)</td></tr></table>>];
    bb22__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>_53 = [move _54, move _57]<br/>StorageDead(_57)<br/>StorageDead(_54)<br/>_52 = &amp;_53<br/>_51 = &amp;(*_52)<br/>_50 = move _51 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">_45 = Arguments::&lt;'_&gt;::new_v1(move _46, move _50)</td></tr></table>>];
    bb23__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">_44 = format(move _45)</td></tr></table>>];
    bb24__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_60)<br/>StorageDead(_59)<br/>StorageDead(_56)<br/>StorageDead(_53)<br/>StorageDead(_52)<br/>StorageDead(_48)<br/>_43 = move _44<br/>StorageDead(_44)<br/>_42 = &amp;_43<br/>_41 = &amp;(*_42)<br/></td></tr><tr><td align="left">_40 = &lt;String as Deref&gt;::deref(move _41)</td></tr></table>>];
    bb25__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">_39 = &amp;(*_40)<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">_38 = solana_program::log::sol_log(move _39)</td></tr></table>>];
    bb26__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/></td></tr><tr><td align="left">drop(_43)</td></tr></table>>];
    bb27__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_42)<br/>StorageDead(_40)<br/>StorageDead(_38)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>_197 = const _<br/>_72 = &amp;(*_197)<br/>_71 = &amp;(*_72)<br/>_70 = move _71 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_71)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>_82 = &amp;(*_13)<br/></td></tr><tr><td align="left">_81 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _82)</td></tr></table>>];
    bb28__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>_80 = &amp;(((*_81).1: state::perp_market::AMM).31: i128)<br/>_79 = &amp;(*_80)<br/></td></tr><tr><td align="left">_78 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;i128&gt;(move _79)</td></tr></table>>];
    bb29__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>_91 = &amp;(*_13)<br/></td></tr><tr><td align="left">_90 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _91)</td></tr></table>>];
    bb30__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/>_89 = (((*_90).1: state::perp_market::AMM).31: i128)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>_95 = _2<br/></td></tr><tr><td align="left">_94 = &lt;u64 as Cast&gt;::cast::&lt;i128&gt;(move _95)</td></tr></table>>];
    bb31__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/></td></tr><tr><td align="left">_93 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _94)</td></tr></table>>];
    bb32__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/>_96 = discriminant(_93)<br/></td></tr><tr><td align="left">switchInt(move _96)</td></tr></table>>];
    bb33__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageLive(_100)<br/>_100 = ((_93 as Continue).0: i128)<br/>_92 = _100<br/>StorageDead(_100)<br/></td></tr><tr><td align="left">_88 = &lt;i128 as SafeMath&gt;::safe_add(move _89, move _92)</td></tr></table>>];
    bb34__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_97)<br/>_97 = ((_93 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_99)<br/>_99 = _97<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _99)</td></tr></table>>];
    bb35__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/>StorageDead(_97)<br/>StorageDead(_92)<br/>StorageDead(_89)<br/>StorageDead(_88)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>StorageDead(_89)<br/></td></tr><tr><td align="left">_87 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _88)</td></tr></table>>];
    bb37__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>_101 = discriminant(_87)<br/></td></tr><tr><td align="left">switchInt(move _101)</td></tr></table>>];
    bb38__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_105)<br/>_105 = ((_87 as Continue).0: i128)<br/>_86 = _105<br/>StorageDead(_105)<br/>_85 = &amp;_86<br/>_84 = &amp;(*_85)<br/></td></tr><tr><td align="left">_83 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;i128&gt;(move _84)</td></tr></table>>];
    bb39__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_102)<br/>_102 = ((_87 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_104)<br/>_104 = _102<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _104)</td></tr></table>>];
    bb40__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/>StorageDead(_102)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>_77 = [move _78, move _83]<br/>StorageDead(_83)<br/>StorageDead(_78)<br/>_76 = &amp;_77<br/>_75 = &amp;(*_76)<br/>_74 = move _75 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_75)<br/></td></tr><tr><td align="left">_69 = Arguments::&lt;'_&gt;::new_v1(move _70, move _74)</td></tr></table>>];
    bb42__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageDead(_70)<br/></td></tr><tr><td align="left">_68 = format(move _69)</td></tr></table>>];
    bb43__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageDead(_93)<br/>StorageDead(_90)<br/>StorageDead(_87)<br/>StorageDead(_86)<br/>StorageDead(_85)<br/>StorageDead(_81)<br/>StorageDead(_80)<br/>StorageDead(_77)<br/>StorageDead(_76)<br/>StorageDead(_72)<br/>_67 = move _68<br/>StorageDead(_68)<br/>_66 = &amp;_67<br/>_65 = &amp;(*_66)<br/></td></tr><tr><td align="left">_64 = &lt;String as Deref&gt;::deref(move _65)</td></tr></table>>];
    bb44__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">_63 = &amp;(*_64)<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">_62 = solana_program::log::sol_log(move _63)</td></tr></table>>];
    bb45__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/></td></tr><tr><td align="left">drop(_67)</td></tr></table>>];
    bb46__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>StorageDead(_66)<br/>StorageDead(_64)<br/>StorageDead(_62)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>_111 = &amp;(*_13)<br/></td></tr><tr><td align="left">_110 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _111)</td></tr></table>>];
    bb47__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/>_109 = (((*_110).1: state::perp_market::AMM).31: i128)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>_115 = _2<br/></td></tr><tr><td align="left">_114 = &lt;u64 as Cast&gt;::cast::&lt;i128&gt;(move _115)</td></tr></table>>];
    bb48__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_115)<br/></td></tr><tr><td align="left">_113 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _114)</td></tr></table>>];
    bb49__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/>_116 = discriminant(_113)<br/></td></tr><tr><td align="left">switchInt(move _116)</td></tr></table>>];
    bb50__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageLive(_120)<br/>_120 = ((_113 as Continue).0: i128)<br/>_112 = _120<br/>StorageDead(_120)<br/></td></tr><tr><td align="left">_108 = &lt;i128 as SafeMath&gt;::safe_add(move _109, move _112)</td></tr></table>>];
    bb51__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageLive(_117)<br/>_117 = ((_113 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_119)<br/>_119 = _117<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _119)</td></tr></table>>];
    bb52__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/>StorageDead(_117)<br/>StorageDead(_112)<br/>StorageDead(_109)<br/>StorageDead(_108)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>StorageDead(_109)<br/></td></tr><tr><td align="left">_107 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _108)</td></tr></table>>];
    bb54__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/>_121 = discriminant(_107)<br/></td></tr><tr><td align="left">switchInt(move _121)</td></tr></table>>];
    bb55__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageLive(_125)<br/>_125 = ((_107 as Continue).0: i128)<br/>_106 = _125<br/>StorageDead(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>_127 = &amp;mut (*_13)<br/></td></tr><tr><td align="left">_126 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _127)</td></tr></table>>];
    bb56__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageLive(_122)<br/>_122 = ((_107 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_124)<br/>_124 = _122<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _124)</td></tr></table>>];
    bb57__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_124)<br/>StorageDead(_122)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb58__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/>(((*_126).1: state::perp_market::AMM).31: i128) = move _106<br/>StorageDead(_106)<br/>StorageDead(_126)<br/>StorageDead(_113)<br/>StorageDead(_110)<br/>StorageDead(_107)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>_202 = deref_copy (_1.1: &amp;mut instructions::admin::DepositIntoMarketFeePool&lt;'_&gt;)<br/>_133 = &amp;((*_202).5: anchor_lang::prelude::AccountLoader&lt;'_, state::spot_market::SpotMarket&gt;)<br/></td></tr><tr><td align="left">_132 = anchor_lang::prelude::AccountLoader::&lt;'_, SpotMarket&gt;::load_mut(move _133)</td></tr></table>>];
    bb59__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/>StorageLive(_134)<br/>_134 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_131 = std::result::Result::&lt;RefMut&lt;'_, SpotMarket&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _132, move _134)</td></tr></table>>];
    bb60__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_134)<br/>StorageDead(_132)<br/></td></tr><tr><td align="left">_130 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _131)</td></tr></table>>];
    bb61__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_131)<br/>_135 = discriminant(_130)<br/></td></tr><tr><td align="left">switchInt(move _135)</td></tr></table>>];
    bb62__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageLive(_139)<br/>_139 = move ((_130 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_129 = move _139<br/>StorageDead(_139)<br/>_128 = &amp;mut _129<br/>_217 = discriminant(_130)<br/>StorageDead(_130)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>_146 = _2<br/></td></tr><tr><td align="left">_145 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _146)</td></tr></table>>];
    bb63__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageLive(_136)<br/>_136 = ((_130 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_138)<br/>_138 = _136<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _138)</td></tr></table>>];
    bb64__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/>StorageDead(_136)<br/>_215 = discriminant(_130)<br/>StorageDead(_130)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb65__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_146)<br/></td></tr><tr><td align="left">_144 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _145)</td></tr></table>>];
    bb66__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_145)<br/>_147 = discriminant(_144)<br/></td></tr><tr><td align="left">switchInt(move _147)</td></tr></table>>];
    bb67__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageLive(_151)<br/>_151 = ((_144 as Continue).0: u128)<br/>_143 = _151<br/>StorageDead(_151)<br/>StorageLive(_152)<br/>StorageLive(_153)<br/>_196 = const _<br/>_153 = &amp;(*_196)<br/>_152 = &amp;(*_153)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>_157 = &amp;mut (*_128)<br/></td></tr><tr><td align="left">_156 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _157)</td></tr></table>>];
    bb68__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageLive(_148)<br/>_148 = ((_144 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_150)<br/>_150 = _148<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _150)</td></tr></table>>];
    bb69__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_150)<br/>StorageDead(_148)<br/>StorageDead(_143)<br/>StorageDead(_142)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb70__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">_155 = &amp;mut (*_156)<br/>StorageDead(_157)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>StorageLive(_161)<br/>StorageLive(_162)<br/>_162 = &amp;mut (*_13)<br/></td></tr><tr><td align="left">_161 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _162)</td></tr></table>>];
    bb71__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_162)<br/>_160 = &amp;mut (((*_161).1: state::perp_market::AMM).4: state::perp_market::PoolBalance)<br/>_159 = &amp;mut (*_160)<br/>_158 = move _159 as &amp;mut dyn state::spot_market::SpotBalance (PointerCoercion(Unsize))<br/>StorageDead(_159)<br/></td></tr><tr><td align="left">_142 = update_spot_balances(move _143, move _152, move _155, move _158, const false)</td></tr></table>>];
    bb72__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_158)<br/>StorageDead(_155)<br/>StorageDead(_152)<br/>StorageDead(_143)<br/></td></tr><tr><td align="left">_141 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _142)</td></tr></table>>];
    bb73__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_142)<br/>_163 = discriminant(_141)<br/></td></tr><tr><td align="left">switchInt(move _163)</td></tr></table>>];
    bb74__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageLive(_167)<br/>_167 = ((_141 as Continue).0: ())<br/>_140 = _167<br/>StorageDead(_167)<br/>StorageDead(_161)<br/>StorageDead(_160)<br/>StorageDead(_156)<br/>StorageDead(_153)<br/>StorageDead(_144)<br/>StorageDead(_141)<br/>StorageDead(_140)<br/>StorageLive(_168)<br/>StorageLive(_169)<br/>StorageLive(_170)<br/>StorageLive(_171)<br/>StorageLive(_172)<br/>_203 = deref_copy (_1.1: &amp;mut instructions::admin::DepositIntoMarketFeePool&lt;'_&gt;)<br/>_172 = &amp;((*_203).7: anchor_lang::prelude::Interface&lt;'_, anchor_spl::token_interface::TokenInterface&gt;)<br/>_171 = &amp;(*_172)<br/>StorageLive(_173)<br/>StorageLive(_174)<br/>_204 = deref_copy (_1.1: &amp;mut instructions::admin::DepositIntoMarketFeePool&lt;'_&gt;)<br/>_174 = &amp;((*_204).3: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_205 = deref_copy (*_174)<br/>_229 = (((_205.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_173 = &amp;(*_229)<br/>StorageLive(_175)<br/>StorageLive(_176)<br/>_206 = deref_copy (_1.1: &amp;mut instructions::admin::DepositIntoMarketFeePool&lt;'_&gt;)<br/>_176 = &amp;((*_206).6: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_207 = deref_copy (*_176)<br/>_230 = (((_207.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_175 = &amp;(*_230)<br/>StorageLive(_177)<br/>StorageLive(_178)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>_208 = deref_copy (_1.1: &amp;mut instructions::admin::DepositIntoMarketFeePool&lt;'_&gt;)<br/>_180 = &amp;((*_208).2: anchor_lang::prelude::Signer&lt;'_&gt;)<br/></td></tr><tr><td align="left">_179 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::ToAccountInfo&lt;'_&gt;&gt;::to_account_info(move _180)</td></tr></table>>];
    bb75__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageLive(_164)<br/>_164 = ((_141 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_166)<br/>_166 = _164<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _166)</td></tr></table>>];
    bb76__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_166)<br/>StorageDead(_164)<br/>StorageDead(_161)<br/>StorageDead(_160)<br/>StorageDead(_156)<br/>StorageDead(_153)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb77__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_180)<br/>_178 = &amp;_179<br/>_177 = &amp;(*_178)<br/>StorageLive(_181)<br/>_181 = _2<br/>StorageLive(_182)<br/>StorageLive(_183)<br/>_183 = &amp;_29<br/>_182 = &amp;(*_183)<br/>StorageLive(_184)<br/>StorageLive(_185)<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>_188 = &amp;(*_128)<br/></td></tr><tr><td align="left">_187 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _188)</td></tr></table>>];
    bb78__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">_186 = &amp;(*_187)<br/>StorageDead(_188)<br/></td></tr><tr><td align="left">_185 = SpotMarket::has_transfer_hook(move _186)</td></tr></table>>];
    bb79__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left">switchInt(move _185)</td></tr></table>>];
    bb80__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_187)<br/>StorageDead(_186)<br/>StorageLive(_189)<br/>_189 = &amp;mut (*_25)<br/>_184 = Option::&lt;&amp;mut Peekable&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;&gt;::Some(move _189)<br/>StorageDead(_189)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb81__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_187)<br/>StorageDead(_186)<br/>_184 = Option::&lt;&amp;mut Peekable&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;&gt;::None<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb82__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_185)<br/></td></tr><tr><td align="left">_170 = receive(move _171, move _173, move _175, move _177, move _181, move _182, move _184)</td></tr></table>>];
    bb83__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_184)<br/>StorageDead(_182)<br/>StorageDead(_181)<br/>StorageDead(_177)<br/>StorageDead(_175)<br/>StorageDead(_173)<br/>StorageDead(_171)<br/></td></tr><tr><td align="left">_169 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _170)</td></tr></table>>];
    bb84__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_170)<br/>_190 = discriminant(_169)<br/></td></tr><tr><td align="left">switchInt(move _190)</td></tr></table>>];
    bb85__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageLive(_194)<br/>_194 = ((_169 as Continue).0: ())<br/>_168 = _194<br/>StorageDead(_194)<br/>_219 = discriminant(_169)<br/>StorageDead(_183)<br/></td></tr><tr><td align="left">drop(_179)</td></tr></table>>];
    bb86__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageLive(_191)<br/>_191 = move ((_169 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_193)<br/>_193 = move _191<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _193)</td></tr></table>>];
    bb87__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_193)<br/>StorageDead(_191)<br/>_221 = discriminant(_169)<br/>StorageDead(_183)<br/></td></tr><tr><td align="left">drop(_179)</td></tr></table>>];
    bb88__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_179)<br/>StorageDead(_178)<br/>StorageDead(_176)<br/>StorageDead(_174)<br/>StorageDead(_172)<br/>StorageDead(_169)<br/>StorageDead(_168)<br/>StorageLive(_195)<br/>_195 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _195)<br/>StorageDead(_195)<br/></td></tr><tr><td align="left">drop(_129)</td></tr></table>>];
    bb89__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_129)<br/>StorageDead(_128)<br/>StorageDead(_29)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">drop(_14)</td></tr></table>>];
    bb90__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb91__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_179)<br/>StorageDead(_178)<br/>StorageDead(_176)<br/>StorageDead(_174)<br/>StorageDead(_172)<br/>StorageDead(_169)<br/>StorageDead(_168)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb92__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_144)<br/>StorageDead(_141)<br/>StorageDead(_140)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb93__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left">drop(_129)</td></tr></table>>];
    bb94__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_129)<br/>StorageDead(_128)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb95__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/>StorageDead(_113)<br/>StorageDead(_110)<br/>StorageDead(_107)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb96__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>StorageDead(_83)<br/>StorageDead(_78)<br/>StorageDead(_75)<br/>StorageDead(_74)<br/>StorageDead(_70)<br/>StorageDead(_69)<br/>StorageDead(_93)<br/>StorageDead(_90)<br/>StorageDead(_87)<br/>StorageDead(_86)<br/>StorageDead(_85)<br/>StorageDead(_81)<br/>StorageDead(_80)<br/>StorageDead(_77)<br/>StorageDead(_76)<br/>StorageDead(_72)<br/>StorageDead(_68)<br/>StorageDead(_65)<br/>StorageDead(_63)<br/>StorageDead(_67)<br/>StorageDead(_66)<br/>StorageDead(_64)<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb97__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">drop(_14)</td></tr></table>>];
    bb98__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb99__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left">return</td></tr></table>>];
    bb100__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">100 (cleanup)</td></tr><tr><td align="left">drop(_179)</td></tr></table>>];
    bb101__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">101 (cleanup)</td></tr><tr><td align="left">drop(_129)</td></tr></table>>];
    bb102__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">102 (cleanup)</td></tr><tr><td align="left">drop(_67)</td></tr></table>>];
    bb103__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">103 (cleanup)</td></tr><tr><td align="left">drop(_43)</td></tr></table>>];
    bb104__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">104 (cleanup)</td></tr><tr><td align="left">drop(_14)</td></tr></table>>];
    bb105__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">105 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb106__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">106 (cleanup)</td></tr><tr><td align="left" balign="left">_225 = discriminant(_169)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb107__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">107 (cleanup)</td></tr><tr><td align="left" balign="left">_226 = discriminant(_130)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb108__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">108 (cleanup)</td></tr><tr><td align="left" balign="left">_227 = discriminant(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb109__0_5535 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">109 (cleanup)</td></tr><tr><td align="left" balign="left">_228 = discriminant(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_5535 -> bb1__0_5535 [label="return"];
    bb1__0_5535 -> bb2__0_5535 [label="return"];
    bb1__0_5535 -> bb105__0_5535 [label="unwind"];
    bb2__0_5535 -> bb3__0_5535 [label="0"];
    bb2__0_5535 -> bb5__0_5535 [label="1"];
    bb2__0_5535 -> bb4__0_5535 [label="otherwise"];
    bb3__0_5535 -> bb7__0_5535 [label="return"];
    bb5__0_5535 -> bb6__0_5535 [label="return"];
    bb5__0_5535 -> bb109__0_5535 [label="unwind"];
    bb6__0_5535 -> bb99__0_5535 [label=""];
    bb7__0_5535 -> bb8__0_5535 [label="return"];
    bb7__0_5535 -> bb105__0_5535 [label="unwind"];
    bb8__0_5535 -> bb9__0_5535 [label="return"];
    bb8__0_5535 -> bb105__0_5535 [label="unwind"];
    bb9__0_5535 -> bb10__0_5535 [label="0"];
    bb9__0_5535 -> bb11__0_5535 [label="1"];
    bb9__0_5535 -> bb4__0_5535 [label="otherwise"];
    bb10__0_5535 -> bb13__0_5535 [label="return"];
    bb10__0_5535 -> bb104__0_5535 [label="unwind"];
    bb11__0_5535 -> bb12__0_5535 [label="return"];
    bb11__0_5535 -> bb108__0_5535 [label="unwind"];
    bb12__0_5535 -> bb98__0_5535 [label=""];
    bb13__0_5535 -> bb14__0_5535 [label="return"];
    bb13__0_5535 -> bb104__0_5535 [label="unwind"];
    bb14__0_5535 -> bb15__0_5535 [label="return"];
    bb14__0_5535 -> bb104__0_5535 [label="unwind"];
    bb15__0_5535 -> bb16__0_5535 [label="return"];
    bb15__0_5535 -> bb104__0_5535 [label="unwind"];
    bb16__0_5535 -> bb17__0_5535 [label="0"];
    bb16__0_5535 -> bb18__0_5535 [label="1"];
    bb16__0_5535 -> bb4__0_5535 [label="otherwise"];
    bb17__0_5535 -> bb20__0_5535 [label="return"];
    bb17__0_5535 -> bb104__0_5535 [label="unwind"];
    bb18__0_5535 -> bb19__0_5535 [label="return"];
    bb18__0_5535 -> bb104__0_5535 [label="unwind"];
    bb19__0_5535 -> bb97__0_5535 [label=""];
    bb20__0_5535 -> bb21__0_5535 [label="return"];
    bb20__0_5535 -> bb104__0_5535 [label="unwind"];
    bb21__0_5535 -> bb22__0_5535 [label="return"];
    bb21__0_5535 -> bb104__0_5535 [label="unwind"];
    bb22__0_5535 -> bb23__0_5535 [label="return"];
    bb22__0_5535 -> bb104__0_5535 [label="unwind"];
    bb23__0_5535 -> bb24__0_5535 [label="return"];
    bb23__0_5535 -> bb104__0_5535 [label="unwind"];
    bb24__0_5535 -> bb25__0_5535 [label="return"];
    bb24__0_5535 -> bb103__0_5535 [label="unwind"];
    bb25__0_5535 -> bb26__0_5535 [label="return"];
    bb25__0_5535 -> bb103__0_5535 [label="unwind"];
    bb26__0_5535 -> bb27__0_5535 [label="return"];
    bb26__0_5535 -> bb104__0_5535 [label="unwind"];
    bb27__0_5535 -> bb28__0_5535 [label="return"];
    bb27__0_5535 -> bb104__0_5535 [label="unwind"];
    bb28__0_5535 -> bb29__0_5535 [label="return"];
    bb28__0_5535 -> bb104__0_5535 [label="unwind"];
    bb29__0_5535 -> bb30__0_5535 [label="return"];
    bb29__0_5535 -> bb104__0_5535 [label="unwind"];
    bb30__0_5535 -> bb31__0_5535 [label="return"];
    bb30__0_5535 -> bb104__0_5535 [label="unwind"];
    bb31__0_5535 -> bb32__0_5535 [label="return"];
    bb31__0_5535 -> bb104__0_5535 [label="unwind"];
    bb32__0_5535 -> bb33__0_5535 [label="0"];
    bb32__0_5535 -> bb34__0_5535 [label="1"];
    bb32__0_5535 -> bb4__0_5535 [label="otherwise"];
    bb33__0_5535 -> bb36__0_5535 [label="return"];
    bb33__0_5535 -> bb104__0_5535 [label="unwind"];
    bb34__0_5535 -> bb35__0_5535 [label="return"];
    bb34__0_5535 -> bb104__0_5535 [label="unwind"];
    bb35__0_5535 -> bb96__0_5535 [label=""];
    bb36__0_5535 -> bb37__0_5535 [label="return"];
    bb36__0_5535 -> bb104__0_5535 [label="unwind"];
    bb37__0_5535 -> bb38__0_5535 [label="0"];
    bb37__0_5535 -> bb39__0_5535 [label="1"];
    bb37__0_5535 -> bb4__0_5535 [label="otherwise"];
    bb38__0_5535 -> bb41__0_5535 [label="return"];
    bb38__0_5535 -> bb104__0_5535 [label="unwind"];
    bb39__0_5535 -> bb40__0_5535 [label="return"];
    bb39__0_5535 -> bb104__0_5535 [label="unwind"];
    bb40__0_5535 -> bb96__0_5535 [label=""];
    bb41__0_5535 -> bb42__0_5535 [label="return"];
    bb41__0_5535 -> bb104__0_5535 [label="unwind"];
    bb42__0_5535 -> bb43__0_5535 [label="return"];
    bb42__0_5535 -> bb104__0_5535 [label="unwind"];
    bb43__0_5535 -> bb44__0_5535 [label="return"];
    bb43__0_5535 -> bb102__0_5535 [label="unwind"];
    bb44__0_5535 -> bb45__0_5535 [label="return"];
    bb44__0_5535 -> bb102__0_5535 [label="unwind"];
    bb45__0_5535 -> bb46__0_5535 [label="return"];
    bb45__0_5535 -> bb104__0_5535 [label="unwind"];
    bb46__0_5535 -> bb47__0_5535 [label="return"];
    bb46__0_5535 -> bb104__0_5535 [label="unwind"];
    bb47__0_5535 -> bb48__0_5535 [label="return"];
    bb47__0_5535 -> bb104__0_5535 [label="unwind"];
    bb48__0_5535 -> bb49__0_5535 [label="return"];
    bb48__0_5535 -> bb104__0_5535 [label="unwind"];
    bb49__0_5535 -> bb50__0_5535 [label="0"];
    bb49__0_5535 -> bb51__0_5535 [label="1"];
    bb49__0_5535 -> bb4__0_5535 [label="otherwise"];
    bb50__0_5535 -> bb53__0_5535 [label="return"];
    bb50__0_5535 -> bb104__0_5535 [label="unwind"];
    bb51__0_5535 -> bb52__0_5535 [label="return"];
    bb51__0_5535 -> bb104__0_5535 [label="unwind"];
    bb52__0_5535 -> bb95__0_5535 [label=""];
    bb53__0_5535 -> bb54__0_5535 [label="return"];
    bb53__0_5535 -> bb104__0_5535 [label="unwind"];
    bb54__0_5535 -> bb55__0_5535 [label="0"];
    bb54__0_5535 -> bb56__0_5535 [label="1"];
    bb54__0_5535 -> bb4__0_5535 [label="otherwise"];
    bb55__0_5535 -> bb58__0_5535 [label="return"];
    bb55__0_5535 -> bb104__0_5535 [label="unwind"];
    bb56__0_5535 -> bb57__0_5535 [label="return"];
    bb56__0_5535 -> bb104__0_5535 [label="unwind"];
    bb57__0_5535 -> bb95__0_5535 [label=""];
    bb58__0_5535 -> bb59__0_5535 [label="return"];
    bb58__0_5535 -> bb104__0_5535 [label="unwind"];
    bb59__0_5535 -> bb60__0_5535 [label="return"];
    bb59__0_5535 -> bb104__0_5535 [label="unwind"];
    bb60__0_5535 -> bb61__0_5535 [label="return"];
    bb60__0_5535 -> bb104__0_5535 [label="unwind"];
    bb61__0_5535 -> bb62__0_5535 [label="0"];
    bb61__0_5535 -> bb63__0_5535 [label="1"];
    bb61__0_5535 -> bb4__0_5535 [label="otherwise"];
    bb62__0_5535 -> bb65__0_5535 [label="return"];
    bb62__0_5535 -> bb101__0_5535 [label="unwind"];
    bb63__0_5535 -> bb64__0_5535 [label="return"];
    bb63__0_5535 -> bb107__0_5535 [label="unwind"];
    bb64__0_5535 -> bb94__0_5535 [label=""];
    bb65__0_5535 -> bb66__0_5535 [label="return"];
    bb65__0_5535 -> bb101__0_5535 [label="unwind"];
    bb66__0_5535 -> bb67__0_5535 [label="0"];
    bb66__0_5535 -> bb68__0_5535 [label="1"];
    bb66__0_5535 -> bb4__0_5535 [label="otherwise"];
    bb67__0_5535 -> bb70__0_5535 [label="return"];
    bb67__0_5535 -> bb101__0_5535 [label="unwind"];
    bb68__0_5535 -> bb69__0_5535 [label="return"];
    bb68__0_5535 -> bb101__0_5535 [label="unwind"];
    bb69__0_5535 -> bb92__0_5535 [label=""];
    bb70__0_5535 -> bb71__0_5535 [label="return"];
    bb70__0_5535 -> bb101__0_5535 [label="unwind"];
    bb71__0_5535 -> bb72__0_5535 [label="return"];
    bb71__0_5535 -> bb101__0_5535 [label="unwind"];
    bb72__0_5535 -> bb73__0_5535 [label="return"];
    bb72__0_5535 -> bb101__0_5535 [label="unwind"];
    bb73__0_5535 -> bb74__0_5535 [label="0"];
    bb73__0_5535 -> bb75__0_5535 [label="1"];
    bb73__0_5535 -> bb4__0_5535 [label="otherwise"];
    bb74__0_5535 -> bb77__0_5535 [label="return"];
    bb74__0_5535 -> bb101__0_5535 [label="unwind"];
    bb75__0_5535 -> bb76__0_5535 [label="return"];
    bb75__0_5535 -> bb101__0_5535 [label="unwind"];
    bb76__0_5535 -> bb92__0_5535 [label=""];
    bb77__0_5535 -> bb78__0_5535 [label="return"];
    bb77__0_5535 -> bb100__0_5535 [label="unwind"];
    bb78__0_5535 -> bb79__0_5535 [label="return"];
    bb78__0_5535 -> bb100__0_5535 [label="unwind"];
    bb79__0_5535 -> bb81__0_5535 [label="0"];
    bb79__0_5535 -> bb80__0_5535 [label="otherwise"];
    bb80__0_5535 -> bb82__0_5535 [label=""];
    bb81__0_5535 -> bb82__0_5535 [label=""];
    bb82__0_5535 -> bb83__0_5535 [label="return"];
    bb82__0_5535 -> bb100__0_5535 [label="unwind"];
    bb83__0_5535 -> bb84__0_5535 [label="return"];
    bb83__0_5535 -> bb100__0_5535 [label="unwind"];
    bb84__0_5535 -> bb85__0_5535 [label="0"];
    bb84__0_5535 -> bb86__0_5535 [label="1"];
    bb84__0_5535 -> bb4__0_5535 [label="otherwise"];
    bb85__0_5535 -> bb88__0_5535 [label="return"];
    bb85__0_5535 -> bb101__0_5535 [label="unwind"];
    bb86__0_5535 -> bb87__0_5535 [label="return"];
    bb86__0_5535 -> bb106__0_5535 [label="unwind"];
    bb87__0_5535 -> bb91__0_5535 [label="return"];
    bb87__0_5535 -> bb101__0_5535 [label="unwind"];
    bb88__0_5535 -> bb89__0_5535 [label="return"];
    bb88__0_5535 -> bb104__0_5535 [label="unwind"];
    bb89__0_5535 -> bb90__0_5535 [label="return"];
    bb89__0_5535 -> bb105__0_5535 [label="unwind"];
    bb90__0_5535 -> bb99__0_5535 [label=""];
    bb91__0_5535 -> bb93__0_5535 [label=""];
    bb92__0_5535 -> bb93__0_5535 [label=""];
    bb93__0_5535 -> bb94__0_5535 [label="return"];
    bb93__0_5535 -> bb104__0_5535 [label="unwind"];
    bb94__0_5535 -> bb97__0_5535 [label=""];
    bb95__0_5535 -> bb97__0_5535 [label=""];
    bb96__0_5535 -> bb97__0_5535 [label=""];
    bb97__0_5535 -> bb98__0_5535 [label="return"];
    bb97__0_5535 -> bb105__0_5535 [label="unwind"];
    bb98__0_5535 -> bb99__0_5535 [label=""];
    bb100__0_5535 -> bb101__0_5535 [label="return"];
    bb101__0_5535 -> bb104__0_5535 [label="return"];
    bb102__0_5535 -> bb104__0_5535 [label="return"];
    bb103__0_5535 -> bb104__0_5535 [label="return"];
    bb104__0_5535 -> bb105__0_5535 [label="return"];
    bb106__0_5535 -> bb100__0_5535 [label=""];
    bb107__0_5535 -> bb104__0_5535 [label=""];
    bb108__0_5535 -> bb105__0_5535 [label=""];
    bb109__0_5535 -> bb105__0_5535 [label=""];
}
