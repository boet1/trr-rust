digraph Mir_0_14003 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn U256::overflowing_pow::{closure#0}(_1: &amp;ReErased Closure(DefId(0:14003 ~ drift[d311]::math::bn::{impl#9}::overflowing_pow::{closure#0}), [i8, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) math::bn::U256,)) -&gt; bool, [Region(BrAnon)]), ()]), _2: &amp;ReErased math::bn::U256) -&gt; bool<br align="left"/>let mut _3: u64;<br align="left"/>let mut _4: u64;<br align="left"/>let mut _5: &amp;ReErased math::bn::U256;<br align="left"/>debug x =&gt; _2;<br align="left"/>>;
    bb0__0_14003 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = &amp;(*_2)<br/></td></tr><tr><td align="left">_4 = U256::low_u64(move _5)</td></tr></table>>];
    bb1__0_14003 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_3 = BitAnd(move _4, const 1_u64)<br/>StorageDead(_4)<br/>_0 = Eq(move _3, const 0_u64)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_14003 -> bb1__0_14003 [label="return"];
}
