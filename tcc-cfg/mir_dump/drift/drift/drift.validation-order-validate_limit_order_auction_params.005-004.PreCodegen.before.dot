digraph Mir_0_4560 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn validate_limit_order_auction_params(_1: &amp;ReErased state::user::Order) -&gt; std::result::Result&lt;(), error::ErrorCode&gt;<br align="left"/>let _2: ();<br align="left"/>let mut _3: bool;<br align="left"/>let mut _4: &amp;ReErased state::user::Order;<br align="left"/>let mut _5: bool;<br align="left"/>let mut _6: state::user::Order;<br align="left"/>let _7: ();<br align="left"/>let mut _8: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _9: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _10: &amp;ReErased state::user::Order;<br align="left"/>let mut _11: isize;<br align="left"/>let _12: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _13: !;<br align="left"/>let mut _14: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _15: ();<br align="left"/>let _16: ();<br align="left"/>let mut _17: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _18: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _19: &amp;ReErased state::user::Order;<br align="left"/>let mut _20: isize;<br align="left"/>let _21: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _22: !;<br align="left"/>let mut _23: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _24: ();<br align="left"/>let _25: ();<br align="left"/>let mut _26: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _27: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _28: bool;<br align="left"/>let mut _29: i64;<br align="left"/>let mut _30: ();<br align="left"/>let _31: error::ErrorCode;<br align="left"/>let _32: ();<br align="left"/>let mut _33: &amp;ReErased str;<br align="left"/>let _34: &amp;ReErased str;<br align="left"/>let mut _35: &amp;ReErased std::string::String;<br align="left"/>let _36: &amp;ReErased std::string::String;<br align="left"/>let _37: std::string::String;<br align="left"/>let _38: std::string::String;<br align="left"/>let mut _39: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _40: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _41: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _42: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _43: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _44: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _45: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _46: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _47: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _48: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _49: &amp;ReErased error::ErrorCode;<br align="left"/>let _50: &amp;ReErased error::ErrorCode;<br align="left"/>let _51: ();<br align="left"/>let mut _52: &amp;ReErased str;<br align="left"/>let _53: &amp;ReErased str;<br align="left"/>let mut _54: error::ErrorCode;<br align="left"/>let mut _55: isize;<br align="left"/>let _56: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _57: !;<br align="left"/>let mut _58: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _59: ();<br align="left"/>let _60: ();<br align="left"/>let mut _61: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _62: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _63: bool;<br align="left"/>let mut _64: i64;<br align="left"/>let mut _65: ();<br align="left"/>let _66: error::ErrorCode;<br align="left"/>let _67: ();<br align="left"/>let mut _68: &amp;ReErased str;<br align="left"/>let _69: &amp;ReErased str;<br align="left"/>let mut _70: &amp;ReErased std::string::String;<br align="left"/>let _71: &amp;ReErased std::string::String;<br align="left"/>let _72: std::string::String;<br align="left"/>let _73: std::string::String;<br align="left"/>let mut _74: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _75: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _76: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _77: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _78: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _79: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _80: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _81: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _82: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _83: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _84: &amp;ReErased error::ErrorCode;<br align="left"/>let _85: &amp;ReErased error::ErrorCode;<br align="left"/>let _86: ();<br align="left"/>let mut _87: &amp;ReErased str;<br align="left"/>let _88: &amp;ReErased str;<br align="left"/>let mut _89: error::ErrorCode;<br align="left"/>let mut _90: isize;<br align="left"/>let _91: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _92: !;<br align="left"/>let mut _93: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _94: ();<br align="left"/>let mut _95: ();<br align="left"/>let mut _96: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _97: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>debug order =&gt; _1;<br align="left"/>debug residual =&gt; _12;<br align="left"/>debug val =&gt; _15;<br align="left"/>debug residual =&gt; _21;<br align="left"/>debug val =&gt; _24;<br align="left"/>debug error_code =&gt; _31;<br align="left"/>debug res =&gt; _38;<br align="left"/>debug residual =&gt; _56;<br align="left"/>debug val =&gt; _59;<br align="left"/>debug error_code =&gt; _66;<br align="left"/>debug res =&gt; _73;<br align="left"/>debug residual =&gt; _91;<br align="left"/>debug val =&gt; _94;<br align="left"/>>;
    bb0__0_4560 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>_4 = &amp;(*_1)<br/></td></tr><tr><td align="left">_3 = Order::has_auction(move _4)</td></tr></table>>];
    bb1__0_4560 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">switchInt(move _3)</td></tr></table>>];
    bb2__0_4560 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = (*_1)<br/></td></tr><tr><td align="left">_5 = Order::has_oracle_price_offset(move _6)</td></tr></table>>];
    bb3__0_4560 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left">switchInt(move _5)</td></tr></table>>];
    bb4__0_4560 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = &amp;(*_1)<br/></td></tr><tr><td align="left">_9 = validate_oracle_auction_params(move _10)</td></tr></table>>];
    bb5__0_4560 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/></td></tr><tr><td align="left">_8 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _9)</td></tr></table>>];
    bb6__0_4560 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>_11 = discriminant(_8)<br/></td></tr><tr><td align="left">switchInt(move _11)</td></tr></table>>];
    bb7__0_4560 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_15)<br/>_15 = ((_8 as Continue).0: ())<br/>_7 = _15<br/>StorageDead(_15)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/>_2 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_4560 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb9__0_4560 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_8 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_14)<br/>_14 = _12<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _14)</td></tr></table>>];
    bb10__0_4560 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_12)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb11__0_4560 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_19 = &amp;(*_1)<br/></td></tr><tr><td align="left">_18 = validate_auction_params(move _19)</td></tr></table>>];
    bb12__0_4560 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/></td></tr><tr><td align="left">_17 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _18)</td></tr></table>>];
    bb13__0_4560 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>_20 = discriminant(_17)<br/></td></tr><tr><td align="left">switchInt(move _20)</td></tr></table>>];
    bb14__0_4560 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_24)<br/>_24 = ((_17 as Continue).0: ())<br/>_16 = _24<br/>StorageDead(_24)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/>_2 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_4560 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = ((_17 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_23)<br/>_23 = _21<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _23)</td></tr></table>>];
    bb16__0_4560 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_21)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_4560 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_4560 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_29 = ((*_1).6: i64)<br/>_28 = Eq(move _29, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _28)</td></tr></table>>];
    bb19__0_4560 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageLive(_30)<br/>_30 = ()<br/>_27 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _30)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_4560 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageLive(_31)<br/>_31 = error::ErrorCode::InvalidOrder<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>_97 = const _<br/>_42 = &amp;(*_97)<br/>_41 = &amp;(*_42)<br/>_40 = move _41 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_41)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>_50 = &amp;_31<br/>_49 = &amp;(*_50)<br/></td></tr><tr><td align="left">_48 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _49)</td></tr></table>>];
    bb21__0_4560 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>_47 = [move _48]<br/>StorageDead(_48)<br/>_46 = &amp;_47<br/>_45 = &amp;(*_46)<br/>_44 = move _45 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">_39 = Arguments::&lt;'_&gt;::new_v1(move _40, move _44)</td></tr></table>>];
    bb22__0_4560 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">_38 = format(move _39)</td></tr></table>>];
    bb23__0_4560 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_50)<br/>StorageDead(_47)<br/>StorageDead(_46)<br/>StorageDead(_42)<br/>_37 = move _38<br/>StorageDead(_38)<br/>_36 = &amp;_37<br/>_35 = &amp;(*_36)<br/></td></tr><tr><td align="left">_34 = &lt;String as Deref&gt;::deref(move _35)</td></tr></table>>];
    bb24__0_4560 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">_33 = &amp;(*_34)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">_32 = solana_program::log::sol_log(move _33)</td></tr></table>>];
    bb25__0_4560 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/></td></tr><tr><td align="left">drop(_37)</td></tr></table>>];
    bb26__0_4560 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_36)<br/>StorageDead(_34)<br/>StorageDead(_32)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>_53 = const &quot;limit order without auction can not have an auction start price&quot;<br/>_52 = &amp;(*_53)<br/></td></tr><tr><td align="left">_51 = solana_program::log::sol_log(move _52)</td></tr></table>>];
    bb27__0_4560 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_53)<br/>StorageDead(_51)<br/>StorageLive(_54)<br/>_54 = _31<br/>_27 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _54)<br/>StorageDead(_54)<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_4560 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/></td></tr><tr><td align="left">_26 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _27)</td></tr></table>>];
    bb29__0_4560 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>_55 = discriminant(_26)<br/></td></tr><tr><td align="left">switchInt(move _55)</td></tr></table>>];
    bb30__0_4560 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_59)<br/>_59 = ((_26 as Continue).0: ())<br/>_25 = _59<br/>StorageDead(_59)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>_64 = ((*_1).7: i64)<br/>_63 = Eq(move _64, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _63)</td></tr></table>>];
    bb31__0_4560 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_56)<br/>_56 = ((_26 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_58)<br/>_58 = _56<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _58)</td></tr></table>>];
    bb32__0_4560 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageDead(_56)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_4560 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageLive(_65)<br/>_65 = ()<br/>_62 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _65)<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_4560 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageLive(_66)<br/>_66 = error::ErrorCode::InvalidOrder<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>_96 = const _<br/>_77 = &amp;(*_96)<br/>_76 = &amp;(*_77)<br/>_75 = move _76 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_76)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>_85 = &amp;_66<br/>_84 = &amp;(*_85)<br/></td></tr><tr><td align="left">_83 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _84)</td></tr></table>>];
    bb35__0_4560 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>_82 = [move _83]<br/>StorageDead(_83)<br/>_81 = &amp;_82<br/>_80 = &amp;(*_81)<br/>_79 = move _80 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_80)<br/></td></tr><tr><td align="left">_74 = Arguments::&lt;'_&gt;::new_v1(move _75, move _79)</td></tr></table>>];
    bb36__0_4560 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageDead(_75)<br/></td></tr><tr><td align="left">_73 = format(move _74)</td></tr></table>>];
    bb37__0_4560 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageDead(_85)<br/>StorageDead(_82)<br/>StorageDead(_81)<br/>StorageDead(_77)<br/>_72 = move _73<br/>StorageDead(_73)<br/>_71 = &amp;_72<br/>_70 = &amp;(*_71)<br/></td></tr><tr><td align="left">_69 = &lt;String as Deref&gt;::deref(move _70)</td></tr></table>>];
    bb38__0_4560 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">_68 = &amp;(*_69)<br/>StorageDead(_70)<br/></td></tr><tr><td align="left">_67 = solana_program::log::sol_log(move _68)</td></tr></table>>];
    bb39__0_4560 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/></td></tr><tr><td align="left">drop(_72)</td></tr></table>>];
    bb40__0_4560 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_71)<br/>StorageDead(_69)<br/>StorageDead(_67)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>_88 = const &quot;limit order without auction can not have an auction end price&quot;<br/>_87 = &amp;(*_88)<br/></td></tr><tr><td align="left">_86 = solana_program::log::sol_log(move _87)</td></tr></table>>];
    bb41__0_4560 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>StorageDead(_88)<br/>StorageDead(_86)<br/>StorageLive(_89)<br/>_89 = _66<br/>_62 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _89)<br/>StorageDead(_89)<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_4560 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/></td></tr><tr><td align="left">_61 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _62)</td></tr></table>>];
    bb43__0_4560 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>_90 = discriminant(_61)<br/></td></tr><tr><td align="left">switchInt(move _90)</td></tr></table>>];
    bb44__0_4560 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_94)<br/>_94 = ((_61 as Continue).0: ())<br/>_60 = _94<br/>StorageDead(_94)<br/>StorageDead(_61)<br/>StorageDead(_60)<br/>_2 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_4560 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageLive(_91)<br/>_91 = ((_61 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_93)<br/>_93 = _91<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _93)</td></tr></table>>];
    bb46__0_4560 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageDead(_91)<br/>StorageDead(_61)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_4560 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/>StorageDead(_2)<br/>StorageLive(_95)<br/>_95 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _95)<br/>StorageDead(_95)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_4560 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_4560 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_4560 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left">return</td></tr></table>>];
    bb51__0_4560 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">51 (cleanup)</td></tr><tr><td align="left">drop(_72)</td></tr></table>>];
    bb52__0_4560 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">52 (cleanup)</td></tr><tr><td align="left">drop(_37)</td></tr></table>>];
    bb53__0_4560 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">53 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_4560 -> bb1__0_4560 [label="return"];
    bb1__0_4560 -> bb18__0_4560 [label="0"];
    bb1__0_4560 -> bb2__0_4560 [label="otherwise"];
    bb2__0_4560 -> bb3__0_4560 [label="return"];
    bb3__0_4560 -> bb11__0_4560 [label="0"];
    bb3__0_4560 -> bb4__0_4560 [label="otherwise"];
    bb4__0_4560 -> bb5__0_4560 [label="return"];
    bb5__0_4560 -> bb6__0_4560 [label="return"];
    bb6__0_4560 -> bb7__0_4560 [label="0"];
    bb6__0_4560 -> bb9__0_4560 [label="1"];
    bb6__0_4560 -> bb8__0_4560 [label="otherwise"];
    bb7__0_4560 -> bb17__0_4560 [label=""];
    bb9__0_4560 -> bb10__0_4560 [label="return"];
    bb10__0_4560 -> bb48__0_4560 [label=""];
    bb11__0_4560 -> bb12__0_4560 [label="return"];
    bb12__0_4560 -> bb13__0_4560 [label="return"];
    bb13__0_4560 -> bb14__0_4560 [label="0"];
    bb13__0_4560 -> bb15__0_4560 [label="1"];
    bb13__0_4560 -> bb8__0_4560 [label="otherwise"];
    bb14__0_4560 -> bb17__0_4560 [label=""];
    bb15__0_4560 -> bb16__0_4560 [label="return"];
    bb16__0_4560 -> bb48__0_4560 [label=""];
    bb17__0_4560 -> bb47__0_4560 [label=""];
    bb18__0_4560 -> bb20__0_4560 [label="0"];
    bb18__0_4560 -> bb19__0_4560 [label="otherwise"];
    bb19__0_4560 -> bb28__0_4560 [label=""];
    bb20__0_4560 -> bb21__0_4560 [label="return"];
    bb21__0_4560 -> bb22__0_4560 [label="return"];
    bb22__0_4560 -> bb23__0_4560 [label="return"];
    bb23__0_4560 -> bb24__0_4560 [label="return"];
    bb23__0_4560 -> bb52__0_4560 [label="unwind"];
    bb24__0_4560 -> bb25__0_4560 [label="return"];
    bb24__0_4560 -> bb52__0_4560 [label="unwind"];
    bb25__0_4560 -> bb26__0_4560 [label="return"];
    bb25__0_4560 -> bb53__0_4560 [label="unwind"];
    bb26__0_4560 -> bb27__0_4560 [label="return"];
    bb27__0_4560 -> bb28__0_4560 [label=""];
    bb28__0_4560 -> bb29__0_4560 [label="return"];
    bb29__0_4560 -> bb30__0_4560 [label="0"];
    bb29__0_4560 -> bb31__0_4560 [label="1"];
    bb29__0_4560 -> bb8__0_4560 [label="otherwise"];
    bb30__0_4560 -> bb34__0_4560 [label="0"];
    bb30__0_4560 -> bb33__0_4560 [label="otherwise"];
    bb31__0_4560 -> bb32__0_4560 [label="return"];
    bb32__0_4560 -> bb49__0_4560 [label=""];
    bb33__0_4560 -> bb42__0_4560 [label=""];
    bb34__0_4560 -> bb35__0_4560 [label="return"];
    bb35__0_4560 -> bb36__0_4560 [label="return"];
    bb36__0_4560 -> bb37__0_4560 [label="return"];
    bb37__0_4560 -> bb38__0_4560 [label="return"];
    bb37__0_4560 -> bb51__0_4560 [label="unwind"];
    bb38__0_4560 -> bb39__0_4560 [label="return"];
    bb38__0_4560 -> bb51__0_4560 [label="unwind"];
    bb39__0_4560 -> bb40__0_4560 [label="return"];
    bb39__0_4560 -> bb53__0_4560 [label="unwind"];
    bb40__0_4560 -> bb41__0_4560 [label="return"];
    bb41__0_4560 -> bb42__0_4560 [label=""];
    bb42__0_4560 -> bb43__0_4560 [label="return"];
    bb43__0_4560 -> bb44__0_4560 [label="0"];
    bb43__0_4560 -> bb45__0_4560 [label="1"];
    bb43__0_4560 -> bb8__0_4560 [label="otherwise"];
    bb44__0_4560 -> bb47__0_4560 [label=""];
    bb45__0_4560 -> bb46__0_4560 [label="return"];
    bb46__0_4560 -> bb49__0_4560 [label=""];
    bb47__0_4560 -> bb50__0_4560 [label=""];
    bb48__0_4560 -> bb49__0_4560 [label=""];
    bb49__0_4560 -> bb50__0_4560 [label=""];
    bb51__0_4560 -> bb53__0_4560 [label="return"];
    bb52__0_4560 -> bb53__0_4560 [label="return"];
}
