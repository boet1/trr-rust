digraph Mir_0_521 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn controller::orders::modify_order(_1: controller::orders::ModifyOrderId, _2: state::order_params::ModifyOrderParams, _3: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;, _4: &amp;ReErased state::state::State, _5: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;, _6: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;, _7: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;, _8: &amp;ReErased anchor_lang::prelude::Clock) -&gt; std::result::Result&lt;(), error::ErrorCode&gt;<br align="left"/>let _9: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _10: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _11: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _12: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _13: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _14: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _15: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _16: Closure(DefId(0:4704 ~ drift[d311]::controller::orders::modify_order::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _17: isize;<br align="left"/>let _18: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _19: !;<br align="left"/>let mut _20: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _21: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _22: usize;<br align="left"/>let mut _23: isize;<br align="left"/>let _24: u8;<br align="left"/>let mut _25: std::result::Result&lt;usize, error::ErrorCode&gt;;<br align="left"/>let mut _26: &amp;ReErased state::user::User;<br align="left"/>let _27: &amp;ReErased state::user::User;<br align="left"/>let mut _28: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _29: u8;<br align="left"/>let mut _30: isize;<br align="left"/>let _31: usize;<br align="left"/>let _32: error::ErrorCode;<br align="left"/>let _33: ();<br align="left"/>let mut _34: &amp;ReErased str;<br align="left"/>let _35: &amp;ReErased str;<br align="left"/>let mut _36: &amp;ReErased std::string::String;<br align="left"/>let _37: &amp;ReErased std::string::String;<br align="left"/>let _38: std::string::String;<br align="left"/>let _39: std::string::String;<br align="left"/>let mut _40: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _41: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _42: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _43: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _44: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _45: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _46: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _47: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _48: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _49: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _50: &amp;ReErased u8;<br align="left"/>let _51: &amp;ReErased u8;<br align="left"/>let mut _52: bool;<br align="left"/>let mut _53: &amp;ReErased state::order_params::ModifyOrderParams;<br align="left"/>let mut _54: !;<br align="left"/>let mut _55: error::ErrorCode;<br align="left"/>let mut _56: !;<br align="left"/>let mut _57: ();<br align="left"/>let _58: u32;<br align="left"/>let mut _59: std::result::Result&lt;usize, error::ErrorCode&gt;;<br align="left"/>let mut _60: &amp;ReErased state::user::User;<br align="left"/>let _61: &amp;ReErased state::user::User;<br align="left"/>let mut _62: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _63: u32;<br align="left"/>let mut _64: isize;<br align="left"/>let _65: usize;<br align="left"/>let _66: error::ErrorCode;<br align="left"/>let _67: ();<br align="left"/>let mut _68: &amp;ReErased str;<br align="left"/>let _69: &amp;ReErased str;<br align="left"/>let mut _70: &amp;ReErased std::string::String;<br align="left"/>let _71: &amp;ReErased std::string::String;<br align="left"/>let _72: std::string::String;<br align="left"/>let _73: std::string::String;<br align="left"/>let mut _74: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _75: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _76: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _77: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _78: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _79: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _80: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _81: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _82: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _83: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _84: &amp;ReErased u32;<br align="left"/>let _85: &amp;ReErased u32;<br align="left"/>let mut _86: bool;<br align="left"/>let mut _87: &amp;ReErased state::order_params::ModifyOrderParams;<br align="left"/>let mut _88: !;<br align="left"/>let mut _89: error::ErrorCode;<br align="left"/>let mut _90: !;<br align="left"/>let mut _91: ();<br align="left"/>let _92: state::user::Order;<br align="left"/>let mut _93: &amp;ReErased state::user::User;<br align="left"/>let mut _94: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _95: usize;<br align="left"/>let mut _96: usize;<br align="left"/>let mut _97: bool;<br align="left"/>let _98: ();<br align="left"/>let mut _99: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _100: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _101: usize;<br align="left"/>let mut _102: &amp;ReErased mut state::user::User;<br align="left"/>let mut _103: &amp;ReErased mut state::user::User;<br align="left"/>let mut _104: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _105: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _106: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _107: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _108: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _109: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _110: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _111: i64;<br align="left"/>let mut _112: u64;<br align="left"/>let mut _113: state::events::OrderActionExplanation;<br align="left"/>let mut _114: std::option::Option&lt;&amp;ReErased anchor_lang::prelude::Pubkey&gt;;<br align="left"/>let mut _115: isize;<br align="left"/>let _116: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _117: !;<br align="left"/>let mut _118: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _119: ();<br align="left"/>let _120: ();<br align="left"/>let mut _121: &amp;ReErased mut state::user::User;<br align="left"/>let mut _122: &amp;ReErased mut state::user::User;<br align="left"/>let mut _123: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _124: u64;<br align="left"/>let _125: std::option::Option&lt;state::order_params::OrderParams&gt;;<br align="left"/>let mut _126: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::option::Option&lt;state::order_params::OrderParams&gt;&gt;;<br align="left"/>let mut _127: std::result::Result&lt;std::option::Option&lt;state::order_params::OrderParams&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _128: &amp;ReErased state::user::Order;<br align="left"/>let _129: &amp;ReErased state::user::Order;<br align="left"/>let mut _130: &amp;ReErased state::order_params::ModifyOrderParams;<br align="left"/>let _131: &amp;ReErased state::order_params::ModifyOrderParams;<br align="left"/>let mut _132: isize;<br align="left"/>let _133: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _134: !;<br align="left"/>let mut _135: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _136: std::option::Option&lt;state::order_params::OrderParams&gt;;<br align="left"/>let _137: ();<br align="left"/>let mut _138: isize;<br align="left"/>let _139: state::order_params::OrderParams;<br align="left"/>let mut _140: bool;<br align="left"/>let mut _141: &amp;ReErased state::user::MarketType;<br align="left"/>let mut _142: &amp;ReErased state::user::MarketType;<br align="left"/>let _143: state::user::MarketType;<br align="left"/>let _144: ();<br align="left"/>let mut _145: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _146: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _147: &amp;ReErased state::state::State;<br align="left"/>let mut _148: &amp;ReErased mut state::user::User;<br align="left"/>let mut _149: &amp;ReErased mut state::user::User;<br align="left"/>let mut _150: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _151: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _152: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _153: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _154: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _155: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _156: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;&gt;;<br align="left"/>let _157: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;&gt;;<br align="left"/>let _158: std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;&gt;;<br align="left"/>let mut _159: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let mut _160: state::order_params::OrderParams;<br align="left"/>let mut _161: state::order_params::PlaceOrderOptions;<br align="left"/>let mut _162: isize;<br align="left"/>let _163: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _164: !;<br align="left"/>let mut _165: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _166: ();<br align="left"/>let _167: ();<br align="left"/>let mut _168: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _169: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _170: &amp;ReErased state::state::State;<br align="left"/>let mut _171: &amp;ReErased mut state::user::User;<br align="left"/>let mut _172: &amp;ReErased mut state::user::User;<br align="left"/>let mut _173: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _174: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _175: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _176: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _177: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _178: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _179: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let mut _180: state::order_params::OrderParams;<br align="left"/>let mut _181: state::order_params::PlaceOrderOptions;<br align="left"/>let mut _182: isize;<br align="left"/>let _183: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _184: !;<br align="left"/>let mut _185: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _186: ();<br align="left"/>let mut _187: ();<br align="left"/>let mut _188: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _189: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;&gt;;<br align="left"/>let mut _190: &amp;ReErased state::user::MarketType;<br align="left"/>let mut _191: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _192: isize;<br align="left"/>let mut _193: isize;<br align="left"/>let mut _194: isize;<br align="left"/>let mut _195: isize;<br align="left"/>let mut _196: isize;<br align="left"/>debug order_id =&gt; _1;<br align="left"/>debug modify_order_params =&gt; _2;<br align="left"/>debug user_loader =&gt; _3;<br align="left"/>debug state =&gt; _4;<br align="left"/>debug perp_market_map =&gt; _5;<br align="left"/>debug spot_market_map =&gt; _6;<br align="left"/>debug oracle_map =&gt; _7;<br align="left"/>debug clock =&gt; _8;<br align="left"/>debug user_key =&gt; _9;<br align="left"/>debug user =&gt; _11;<br align="left"/>debug residual =&gt; _18;<br align="left"/>debug val =&gt; _21;<br align="left"/>debug order_index =&gt; _22;<br align="left"/>debug user_order_id =&gt; _24;<br align="left"/>debug order_index =&gt; _31;<br align="left"/>debug e =&gt; _32;<br align="left"/>debug res =&gt; _39;<br align="left"/>debug order_id =&gt; _58;<br align="left"/>debug order_index =&gt; _65;<br align="left"/>debug e =&gt; _66;<br align="left"/>debug res =&gt; _73;<br align="left"/>debug existing_order =&gt; _92;<br align="left"/>debug residual =&gt; _116;<br align="left"/>debug val =&gt; _119;<br align="left"/>debug order_params =&gt; _125;<br align="left"/>debug residual =&gt; _133;<br align="left"/>debug val =&gt; _136;<br align="left"/>debug order_params =&gt; _139;<br align="left"/>debug residual =&gt; _163;<br align="left"/>debug val =&gt; _166;<br align="left"/>debug residual =&gt; _183;<br align="left"/>debug val =&gt; _186;<br align="left"/>>;
    bb0__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = &amp;(*_3)<br/></td></tr><tr><td align="left">_9 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt; as anchor_lang::Key&gt;::key(move _10)</td></tr></table>>];
    bb1__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = &amp;(*_3)<br/></td></tr><tr><td align="left">_14 = anchor_lang::prelude::AccountLoader::&lt;'_, User&gt;::load_mut(move _15)</td></tr></table>>];
    bb2__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageLive(_16)<br/>_16 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_13 = std::result::Result::&lt;RefMut&lt;'_, User&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _14, move _16)</td></tr></table>>];
    bb3__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">_12 = &lt;std::result::Result&lt;RefMut&lt;'_, User&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _13)</td></tr></table>>];
    bb4__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>_17 = discriminant(_12)<br/></td></tr><tr><td align="left">switchInt(move _17)</td></tr></table>>];
    bb5__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = move ((_12 as Continue).0: std::cell::RefMut&lt;'_, state::user::User&gt;)<br/>_11 = move _21<br/>StorageDead(_21)<br/>_194 = discriminant(_12)<br/>StorageDead(_12)<br/>StorageLive(_22)<br/>_23 = discriminant(_1)<br/></td></tr><tr><td align="left">switchInt(move _23)</td></tr></table>>];
    bb6__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb7__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_18)<br/>_18 = ((_12 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_20)<br/>_20 = _18<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _20)</td></tr></table>>];
    bb8__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_18)<br/>_192 = discriminant(_12)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_58)<br/>_58 = ((_1 as OrderId).0: u32)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>_62 = &amp;_11<br/></td></tr><tr><td align="left">_61 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _62)</td></tr></table>>];
    bb10__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_24)<br/>_24 = ((_1 as UserOrderId).0: u8)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>_28 = &amp;_11<br/></td></tr><tr><td align="left">_27 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _28)</td></tr></table>>];
    bb11__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">_26 = &amp;(*_27)<br/>StorageDead(_28)<br/>StorageLive(_29)<br/>_29 = _24<br/></td></tr><tr><td align="left">_25 = User::get_order_index_by_user_order_id(move _26, move _29)</td></tr></table>>];
    bb12__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_26)<br/>_30 = discriminant(_25)<br/></td></tr><tr><td align="left">switchInt(move _30)</td></tr></table>>];
    bb13__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_32)<br/>_32 = ((_25 as Err).0: error::ErrorCode)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>_191 = const _<br/>_43 = &amp;(*_191)<br/>_42 = &amp;(*_43)<br/>_41 = move _42 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_42)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>_51 = &amp;_24<br/>_50 = &amp;(*_51)<br/></td></tr><tr><td align="left">_49 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u8&gt;(move _50)</td></tr></table>>];
    bb14__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_31)<br/>_31 = ((_25 as Ok).0: usize)<br/>_22 = _31<br/>StorageDead(_31)<br/>StorageDead(_27)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>_48 = [move _49]<br/>StorageDead(_49)<br/>_47 = &amp;_48<br/>_46 = &amp;(*_47)<br/>_45 = move _46 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">_40 = Arguments::&lt;'_&gt;::new_v1(move _41, move _45)</td></tr></table>>];
    bb16__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">_39 = format(move _40)</td></tr></table>>];
    bb17__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageDead(_51)<br/>StorageDead(_48)<br/>StorageDead(_47)<br/>StorageDead(_43)<br/>_38 = move _39<br/>StorageDead(_39)<br/>_37 = &amp;_38<br/>_36 = &amp;(*_37)<br/></td></tr><tr><td align="left">_35 = &lt;String as Deref&gt;::deref(move _36)</td></tr></table>>];
    bb18__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">_34 = &amp;(*_35)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">_33 = solana_program::log::sol_log(move _34)</td></tr></table>>];
    bb19__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/></td></tr><tr><td align="left">drop(_38)</td></tr></table>>];
    bb20__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_37)<br/>StorageDead(_35)<br/>StorageDead(_33)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>_53 = &amp;_2<br/></td></tr><tr><td align="left">_52 = order_params::ModifyOrderParams::must_modify(move _53)</td></tr></table>>];
    bb21__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left">switchInt(move _52)</td></tr></table>>];
    bb22__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageLive(_55)<br/>_55 = _32<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _55)<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageLive(_57)<br/>_57 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _57)<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">_60 = &amp;(*_61)<br/>StorageDead(_62)<br/>StorageLive(_63)<br/>_63 = _58<br/></td></tr><tr><td align="left">_59 = User::get_order_index(move _60, move _63)</td></tr></table>>];
    bb25__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_60)<br/>_64 = discriminant(_59)<br/></td></tr><tr><td align="left">switchInt(move _64)</td></tr></table>>];
    bb26__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_66)<br/>_66 = ((_59 as Err).0: error::ErrorCode)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>_188 = const _<br/>_77 = &amp;(*_188)<br/>_76 = &amp;(*_77)<br/>_75 = move _76 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_76)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>_85 = &amp;_58<br/>_84 = &amp;(*_85)<br/></td></tr><tr><td align="left">_83 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u32&gt;(move _84)</td></tr></table>>];
    bb27__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_65)<br/>_65 = ((_59 as Ok).0: usize)<br/>_22 = _65<br/>StorageDead(_65)<br/>StorageDead(_61)<br/>StorageDead(_59)<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>_82 = [move _83]<br/>StorageDead(_83)<br/>_81 = &amp;_82<br/>_80 = &amp;(*_81)<br/>_79 = move _80 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_80)<br/></td></tr><tr><td align="left">_74 = Arguments::&lt;'_&gt;::new_v1(move _75, move _79)</td></tr></table>>];
    bb29__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageDead(_75)<br/></td></tr><tr><td align="left">_73 = format(move _74)</td></tr></table>>];
    bb30__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageDead(_85)<br/>StorageDead(_82)<br/>StorageDead(_81)<br/>StorageDead(_77)<br/>_72 = move _73<br/>StorageDead(_73)<br/>_71 = &amp;_72<br/>_70 = &amp;(*_71)<br/></td></tr><tr><td align="left">_69 = &lt;String as Deref&gt;::deref(move _70)</td></tr></table>>];
    bb31__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">_68 = &amp;(*_69)<br/>StorageDead(_70)<br/></td></tr><tr><td align="left">_67 = solana_program::log::sol_log(move _68)</td></tr></table>>];
    bb32__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/></td></tr><tr><td align="left">drop(_72)</td></tr></table>>];
    bb33__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_71)<br/>StorageDead(_69)<br/>StorageDead(_67)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>_87 = &amp;_2<br/></td></tr><tr><td align="left">_86 = order_params::ModifyOrderParams::must_modify(move _87)</td></tr></table>>];
    bb34__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left">switchInt(move _86)</td></tr></table>>];
    bb35__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>StorageLive(_89)<br/>_89 = _66<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _89)<br/>StorageDead(_89)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>StorageLive(_91)<br/>_91 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _91)<br/>StorageDead(_91)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>_94 = &amp;_11<br/></td></tr><tr><td align="left">_93 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _94)</td></tr></table>>];
    bb38__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/>StorageLive(_95)<br/>_95 = _22<br/>_96 = Len(((*_93).5: [state::user::Order; 32]))<br/>_97 = Lt(_95, _96)<br/></td></tr><tr><td align="left">assert(move _97, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _96, _95)</td></tr></table>>];
    bb39__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">_92 = ((*_93).5: [state::user::Order; 32])[_95]<br/>StorageDead(_95)<br/>StorageDead(_93)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>_101 = _22<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>_105 = &amp;mut _11<br/>_104 = &amp;mut (*_105)<br/></td></tr><tr><td align="left">_103 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _104)</td></tr></table>>];
    bb40__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">_102 = &amp;mut (*_103)<br/>StorageDead(_104)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>_107 = &amp;_9<br/>_106 = &amp;(*_107)<br/>StorageLive(_108)<br/>_108 = &amp;(*_5)<br/>StorageLive(_109)<br/>_109 = &amp;(*_6)<br/>StorageLive(_110)<br/>_110 = &amp;mut (*_7)<br/>StorageLive(_111)<br/>_111 = ((*_8).4: i64)<br/>StorageLive(_112)<br/>_112 = ((*_8).0: u64)<br/>StorageLive(_113)<br/>_113 = OrderActionExplanation::None<br/>StorageLive(_114)<br/>_114 = Option::&lt;&amp;anchor_lang::prelude::Pubkey&gt;::None<br/></td></tr><tr><td align="left">_100 = controller::orders::cancel_order(move _101, move _102, move _106, move _108, move _109, move _110, move _111, move _112, move _113, move _114, const 0_u64, const false)</td></tr></table>>];
    bb41__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/>StorageDead(_113)<br/>StorageDead(_112)<br/>StorageDead(_111)<br/>StorageDead(_110)<br/>StorageDead(_109)<br/>StorageDead(_108)<br/>StorageDead(_106)<br/>StorageDead(_102)<br/>StorageDead(_101)<br/></td></tr><tr><td align="left">_99 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _100)</td></tr></table>>];
    bb42__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>_115 = discriminant(_99)<br/></td></tr><tr><td align="left">switchInt(move _115)</td></tr></table>>];
    bb43__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageLive(_119)<br/>_119 = ((_99 as Continue).0: ())<br/>_98 = _119<br/>StorageDead(_119)<br/>StorageDead(_107)<br/>StorageDead(_105)<br/>StorageDead(_103)<br/>StorageDead(_99)<br/>StorageDead(_98)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>_123 = &amp;mut _11<br/></td></tr><tr><td align="left">_122 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _123)</td></tr></table>>];
    bb44__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_116)<br/>_116 = ((_99 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_118)<br/>_118 = _116<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _118)</td></tr></table>>];
    bb45__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>StorageDead(_116)<br/>StorageDead(_107)<br/>StorageDead(_105)<br/>StorageDead(_103)<br/>StorageDead(_99)<br/>StorageDead(_98)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">_121 = &amp;mut (*_122)<br/>StorageDead(_123)<br/>StorageLive(_124)<br/>_124 = ((*_8).0: u64)<br/></td></tr><tr><td align="left">_120 = User::update_last_active_slot(move _121, move _124)</td></tr></table>>];
    bb47__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_124)<br/>StorageDead(_121)<br/>StorageDead(_122)<br/>StorageDead(_120)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>_129 = &amp;_92<br/>_128 = &amp;(*_129)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>_131 = &amp;_2<br/>_130 = &amp;(*_131)<br/></td></tr><tr><td align="left">_127 = merge_modify_order_params_with_existing_order(move _128, move _130)</td></tr></table>>];
    bb48__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_130)<br/>StorageDead(_128)<br/></td></tr><tr><td align="left">_126 = &lt;std::result::Result&lt;Option&lt;order_params::OrderParams&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _127)</td></tr></table>>];
    bb49__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/>_132 = discriminant(_126)<br/></td></tr><tr><td align="left">switchInt(move _132)</td></tr></table>>];
    bb50__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageLive(_136)<br/>_136 = ((_126 as Continue).0: std::option::Option&lt;state::order_params::OrderParams&gt;)<br/>_125 = _136<br/>StorageDead(_136)<br/>StorageDead(_131)<br/>StorageDead(_129)<br/>StorageDead(_126)<br/>StorageLive(_137)<br/>_138 = discriminant(_125)<br/></td></tr><tr><td align="left">switchInt(move _138)</td></tr></table>>];
    bb51__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageLive(_133)<br/>_133 = ((_126 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_135)<br/>_135 = _133<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _135)</td></tr></table>>];
    bb52__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_135)<br/>StorageDead(_133)<br/>StorageDead(_131)<br/>StorageDead(_129)<br/>StorageDead(_126)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">_137 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageLive(_139)<br/>_139 = ((_125 as Some).0: state::order_params::OrderParams)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>_141 = &amp;(_139.1: state::user::MarketType)<br/>StorageLive(_142)<br/>_190 = const _<br/>_142 = &amp;(*_190)<br/></td></tr><tr><td align="left">_140 = &lt;state::user::MarketType as PartialEq&gt;::eq(move _141, move _142)</td></tr></table>>];
    bb55__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left">switchInt(move _140)</td></tr></table>>];
    bb56__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_142)<br/>StorageDead(_141)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>_147 = &amp;(*_4)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>_151 = &amp;mut _11<br/>_150 = &amp;mut (*_151)<br/></td></tr><tr><td align="left">_149 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _150)</td></tr></table>>];
    bb57__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">_148 = &amp;mut (*_149)<br/>StorageDead(_150)<br/>StorageLive(_152)<br/>_152 = _9<br/>StorageLive(_153)<br/>_153 = &amp;(*_5)<br/>StorageLive(_154)<br/>_154 = &amp;(*_6)<br/>StorageLive(_155)<br/>_155 = &amp;mut (*_7)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>_189 = const _<br/>_157 = &amp;(*_189)<br/>_156 = &amp;(*_157)<br/>StorageLive(_159)<br/>_159 = &amp;(*_8)<br/>StorageLive(_160)<br/>_160 = _139<br/>StorageLive(_161)<br/></td></tr><tr><td align="left">_161 = &lt;PlaceOrderOptions as Default&gt;::default()</td></tr></table>>];
    bb58__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left">_146 = controller::orders::place_perp_order(move _147, move _148, move _152, move _153, move _154, move _155, move _156, move _159, move _160, move _161)</td></tr></table>>];
    bb59__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_161)<br/>StorageDead(_160)<br/>StorageDead(_159)<br/>StorageDead(_156)<br/>StorageDead(_155)<br/>StorageDead(_154)<br/>StorageDead(_153)<br/>StorageDead(_152)<br/>StorageDead(_148)<br/>StorageDead(_147)<br/></td></tr><tr><td align="left">_145 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _146)</td></tr></table>>];
    bb60__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_146)<br/>_162 = discriminant(_145)<br/></td></tr><tr><td align="left">switchInt(move _162)</td></tr></table>>];
    bb61__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageLive(_166)<br/>_166 = ((_145 as Continue).0: ())<br/>_144 = _166<br/>StorageDead(_166)<br/>StorageDead(_157)<br/>StorageDead(_151)<br/>StorageDead(_149)<br/>StorageDead(_145)<br/>StorageDead(_144)<br/>_137 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageLive(_163)<br/>_163 = ((_145 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_165)<br/>_165 = _163<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _165)</td></tr></table>>];
    bb63__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_165)<br/>StorageDead(_163)<br/>StorageDead(_157)<br/>StorageDead(_151)<br/>StorageDead(_149)<br/>StorageDead(_145)<br/>StorageDead(_144)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb64__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_142)<br/>StorageDead(_141)<br/>StorageLive(_167)<br/>StorageLive(_168)<br/>StorageLive(_169)<br/>StorageLive(_170)<br/>_170 = &amp;(*_4)<br/>StorageLive(_171)<br/>StorageLive(_172)<br/>StorageLive(_173)<br/>StorageLive(_174)<br/>_174 = &amp;mut _11<br/>_173 = &amp;mut (*_174)<br/></td></tr><tr><td align="left">_172 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _173)</td></tr></table>>];
    bb65__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">_171 = &amp;mut (*_172)<br/>StorageDead(_173)<br/>StorageLive(_175)<br/>_175 = _9<br/>StorageLive(_176)<br/>_176 = &amp;(*_5)<br/>StorageLive(_177)<br/>_177 = &amp;(*_6)<br/>StorageLive(_178)<br/>_178 = &amp;mut (*_7)<br/>StorageLive(_179)<br/>_179 = &amp;(*_8)<br/>StorageLive(_180)<br/>_180 = _139<br/>StorageLive(_181)<br/></td></tr><tr><td align="left">_181 = &lt;PlaceOrderOptions as Default&gt;::default()</td></tr></table>>];
    bb66__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left">_169 = controller::orders::place_spot_order(move _170, move _171, move _175, move _176, move _177, move _178, move _179, move _180, move _181)</td></tr></table>>];
    bb67__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_181)<br/>StorageDead(_180)<br/>StorageDead(_179)<br/>StorageDead(_178)<br/>StorageDead(_177)<br/>StorageDead(_176)<br/>StorageDead(_175)<br/>StorageDead(_171)<br/>StorageDead(_170)<br/></td></tr><tr><td align="left">_168 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _169)</td></tr></table>>];
    bb68__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_169)<br/>_182 = discriminant(_168)<br/></td></tr><tr><td align="left">switchInt(move _182)</td></tr></table>>];
    bb69__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageLive(_186)<br/>_186 = ((_168 as Continue).0: ())<br/>_167 = _186<br/>StorageDead(_186)<br/>StorageDead(_174)<br/>StorageDead(_172)<br/>StorageDead(_168)<br/>StorageDead(_167)<br/>_137 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb70__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageLive(_183)<br/>_183 = ((_168 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_185)<br/>_185 = _183<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _185)</td></tr></table>>];
    bb71__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_185)<br/>StorageDead(_183)<br/>StorageDead(_174)<br/>StorageDead(_172)<br/>StorageDead(_168)<br/>StorageDead(_167)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb72__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_140)<br/>StorageDead(_139)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb73__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_137)<br/>StorageLive(_187)<br/>_187 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _187)<br/>StorageDead(_187)<br/>StorageDead(_125)<br/>StorageDead(_92)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">drop(_11)</td></tr></table>>];
    bb74__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb75__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_140)<br/>StorageDead(_139)<br/>StorageDead(_137)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb76__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb77__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb78__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>StorageDead(_66)<br/>StorageDead(_61)<br/>StorageDead(_59)<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb79__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_32)<br/>StorageDead(_27)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb80__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/></td></tr><tr><td align="left">drop(_11)</td></tr></table>>];
    bb81__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb82__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left">return</td></tr></table>>];
    bb83__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">83 (cleanup)</td></tr><tr><td align="left">drop(_72)</td></tr></table>>];
    bb84__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">84 (cleanup)</td></tr><tr><td align="left">drop(_38)</td></tr></table>>];
    bb85__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">85 (cleanup)</td></tr><tr><td align="left">drop(_11)</td></tr></table>>];
    bb86__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">86 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb87__0_521 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">87 (cleanup)</td></tr><tr><td align="left" balign="left">_196 = discriminant(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_521 -> bb1__0_521 [label="return"];
    bb1__0_521 -> bb2__0_521 [label="return"];
    bb2__0_521 -> bb3__0_521 [label="return"];
    bb2__0_521 -> bb86__0_521 [label="unwind"];
    bb3__0_521 -> bb4__0_521 [label="return"];
    bb3__0_521 -> bb86__0_521 [label="unwind"];
    bb4__0_521 -> bb5__0_521 [label="0"];
    bb4__0_521 -> bb7__0_521 [label="1"];
    bb4__0_521 -> bb6__0_521 [label="otherwise"];
    bb5__0_521 -> bb10__0_521 [label="0"];
    bb5__0_521 -> bb9__0_521 [label="1"];
    bb5__0_521 -> bb6__0_521 [label="otherwise"];
    bb7__0_521 -> bb8__0_521 [label="return"];
    bb7__0_521 -> bb87__0_521 [label="unwind"];
    bb8__0_521 -> bb81__0_521 [label=""];
    bb9__0_521 -> bb24__0_521 [label="return"];
    bb9__0_521 -> bb85__0_521 [label="unwind"];
    bb10__0_521 -> bb11__0_521 [label="return"];
    bb10__0_521 -> bb85__0_521 [label="unwind"];
    bb11__0_521 -> bb12__0_521 [label="return"];
    bb11__0_521 -> bb85__0_521 [label="unwind"];
    bb12__0_521 -> bb14__0_521 [label="0"];
    bb12__0_521 -> bb13__0_521 [label="1"];
    bb12__0_521 -> bb6__0_521 [label="otherwise"];
    bb13__0_521 -> bb15__0_521 [label="return"];
    bb13__0_521 -> bb85__0_521 [label="unwind"];
    bb14__0_521 -> bb37__0_521 [label=""];
    bb15__0_521 -> bb16__0_521 [label="return"];
    bb15__0_521 -> bb85__0_521 [label="unwind"];
    bb16__0_521 -> bb17__0_521 [label="return"];
    bb16__0_521 -> bb85__0_521 [label="unwind"];
    bb17__0_521 -> bb18__0_521 [label="return"];
    bb17__0_521 -> bb84__0_521 [label="unwind"];
    bb18__0_521 -> bb19__0_521 [label="return"];
    bb18__0_521 -> bb84__0_521 [label="unwind"];
    bb19__0_521 -> bb20__0_521 [label="return"];
    bb19__0_521 -> bb85__0_521 [label="unwind"];
    bb20__0_521 -> bb21__0_521 [label="return"];
    bb20__0_521 -> bb85__0_521 [label="unwind"];
    bb21__0_521 -> bb23__0_521 [label="0"];
    bb21__0_521 -> bb22__0_521 [label="otherwise"];
    bb22__0_521 -> bb79__0_521 [label=""];
    bb23__0_521 -> bb79__0_521 [label=""];
    bb24__0_521 -> bb25__0_521 [label="return"];
    bb24__0_521 -> bb85__0_521 [label="unwind"];
    bb25__0_521 -> bb27__0_521 [label="0"];
    bb25__0_521 -> bb26__0_521 [label="1"];
    bb25__0_521 -> bb6__0_521 [label="otherwise"];
    bb26__0_521 -> bb28__0_521 [label="return"];
    bb26__0_521 -> bb85__0_521 [label="unwind"];
    bb27__0_521 -> bb37__0_521 [label=""];
    bb28__0_521 -> bb29__0_521 [label="return"];
    bb28__0_521 -> bb85__0_521 [label="unwind"];
    bb29__0_521 -> bb30__0_521 [label="return"];
    bb29__0_521 -> bb85__0_521 [label="unwind"];
    bb30__0_521 -> bb31__0_521 [label="return"];
    bb30__0_521 -> bb83__0_521 [label="unwind"];
    bb31__0_521 -> bb32__0_521 [label="return"];
    bb31__0_521 -> bb83__0_521 [label="unwind"];
    bb32__0_521 -> bb33__0_521 [label="return"];
    bb32__0_521 -> bb85__0_521 [label="unwind"];
    bb33__0_521 -> bb34__0_521 [label="return"];
    bb33__0_521 -> bb85__0_521 [label="unwind"];
    bb34__0_521 -> bb36__0_521 [label="0"];
    bb34__0_521 -> bb35__0_521 [label="otherwise"];
    bb35__0_521 -> bb78__0_521 [label=""];
    bb36__0_521 -> bb78__0_521 [label=""];
    bb37__0_521 -> bb38__0_521 [label="return"];
    bb37__0_521 -> bb85__0_521 [label="unwind"];
    bb38__0_521 -> bb39__0_521 [label="success"];
    bb38__0_521 -> bb85__0_521 [label="unwind"];
    bb39__0_521 -> bb40__0_521 [label="return"];
    bb39__0_521 -> bb85__0_521 [label="unwind"];
    bb40__0_521 -> bb41__0_521 [label="return"];
    bb40__0_521 -> bb85__0_521 [label="unwind"];
    bb41__0_521 -> bb42__0_521 [label="return"];
    bb41__0_521 -> bb85__0_521 [label="unwind"];
    bb42__0_521 -> bb43__0_521 [label="0"];
    bb42__0_521 -> bb44__0_521 [label="1"];
    bb42__0_521 -> bb6__0_521 [label="otherwise"];
    bb43__0_521 -> bb46__0_521 [label="return"];
    bb43__0_521 -> bb85__0_521 [label="unwind"];
    bb44__0_521 -> bb45__0_521 [label="return"];
    bb44__0_521 -> bb85__0_521 [label="unwind"];
    bb45__0_521 -> bb77__0_521 [label=""];
    bb46__0_521 -> bb47__0_521 [label="return"];
    bb46__0_521 -> bb85__0_521 [label="unwind"];
    bb47__0_521 -> bb48__0_521 [label="return"];
    bb47__0_521 -> bb85__0_521 [label="unwind"];
    bb48__0_521 -> bb49__0_521 [label="return"];
    bb48__0_521 -> bb85__0_521 [label="unwind"];
    bb49__0_521 -> bb50__0_521 [label="0"];
    bb49__0_521 -> bb51__0_521 [label="1"];
    bb49__0_521 -> bb6__0_521 [label="otherwise"];
    bb50__0_521 -> bb54__0_521 [label="1"];
    bb50__0_521 -> bb53__0_521 [label="otherwise"];
    bb51__0_521 -> bb52__0_521 [label="return"];
    bb51__0_521 -> bb85__0_521 [label="unwind"];
    bb52__0_521 -> bb76__0_521 [label=""];
    bb53__0_521 -> bb73__0_521 [label=""];
    bb54__0_521 -> bb55__0_521 [label="return"];
    bb54__0_521 -> bb85__0_521 [label="unwind"];
    bb55__0_521 -> bb64__0_521 [label="0"];
    bb55__0_521 -> bb56__0_521 [label="otherwise"];
    bb56__0_521 -> bb57__0_521 [label="return"];
    bb56__0_521 -> bb85__0_521 [label="unwind"];
    bb57__0_521 -> bb58__0_521 [label="return"];
    bb57__0_521 -> bb85__0_521 [label="unwind"];
    bb58__0_521 -> bb59__0_521 [label="return"];
    bb58__0_521 -> bb85__0_521 [label="unwind"];
    bb59__0_521 -> bb60__0_521 [label="return"];
    bb59__0_521 -> bb85__0_521 [label="unwind"];
    bb60__0_521 -> bb61__0_521 [label="0"];
    bb60__0_521 -> bb62__0_521 [label="1"];
    bb60__0_521 -> bb6__0_521 [label="otherwise"];
    bb61__0_521 -> bb72__0_521 [label=""];
    bb62__0_521 -> bb63__0_521 [label="return"];
    bb62__0_521 -> bb85__0_521 [label="unwind"];
    bb63__0_521 -> bb75__0_521 [label=""];
    bb64__0_521 -> bb65__0_521 [label="return"];
    bb64__0_521 -> bb85__0_521 [label="unwind"];
    bb65__0_521 -> bb66__0_521 [label="return"];
    bb65__0_521 -> bb85__0_521 [label="unwind"];
    bb66__0_521 -> bb67__0_521 [label="return"];
    bb66__0_521 -> bb85__0_521 [label="unwind"];
    bb67__0_521 -> bb68__0_521 [label="return"];
    bb67__0_521 -> bb85__0_521 [label="unwind"];
    bb68__0_521 -> bb69__0_521 [label="0"];
    bb68__0_521 -> bb70__0_521 [label="1"];
    bb68__0_521 -> bb6__0_521 [label="otherwise"];
    bb69__0_521 -> bb72__0_521 [label=""];
    bb70__0_521 -> bb71__0_521 [label="return"];
    bb70__0_521 -> bb85__0_521 [label="unwind"];
    bb71__0_521 -> bb75__0_521 [label=""];
    bb72__0_521 -> bb73__0_521 [label=""];
    bb73__0_521 -> bb74__0_521 [label="return"];
    bb73__0_521 -> bb86__0_521 [label="unwind"];
    bb74__0_521 -> bb82__0_521 [label=""];
    bb75__0_521 -> bb76__0_521 [label=""];
    bb76__0_521 -> bb77__0_521 [label=""];
    bb77__0_521 -> bb80__0_521 [label=""];
    bb78__0_521 -> bb80__0_521 [label=""];
    bb79__0_521 -> bb80__0_521 [label=""];
    bb80__0_521 -> bb81__0_521 [label="return"];
    bb80__0_521 -> bb86__0_521 [label="unwind"];
    bb81__0_521 -> bb82__0_521 [label=""];
    bb83__0_521 -> bb85__0_521 [label="return"];
    bb84__0_521 -> bb85__0_521 [label="return"];
    bb85__0_521 -> bb86__0_521 [label="return"];
    bb87__0_521 -> bb86__0_521 [label=""];
}
