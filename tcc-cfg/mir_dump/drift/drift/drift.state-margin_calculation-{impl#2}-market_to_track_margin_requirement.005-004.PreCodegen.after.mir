// MIR for `margin_calculation::<impl at programs/drift/src/state/margin_calculation.rs:208:1: 208:23>::market_to_track_margin_requirement` after PreCodegen

fn margin_calculation::<impl at programs/drift/src/state/margin_calculation.rs:208:1: 208:23>::market_to_track_margin_requirement(_1: &MarginCalculation) -> Option<MarketIdentifier> {
    debug self => _1;
    let mut _0: std::option::Option<state::margin_calculation::MarketIdentifier>;
    let mut _2: isize;
    scope 1 {
        debug track_margin_requirement => _3;
        let _3: std::option::Option<state::margin_calculation::MarketIdentifier>;
    }

    bb0: {
        _2 = discriminant((((*_1).0: state::margin_calculation::MarginContext).1: state::margin_calculation::MarginCalculationMode));
        switchInt(move _2) -> [1: bb1, otherwise: bb2];
    }

    bb1: {
        StorageLive(_3);
        _3 = (((((*_1).0: state::margin_calculation::MarginContext).1: state::margin_calculation::MarginCalculationMode) as Liquidation).0: std::option::Option<state::margin_calculation::MarketIdentifier>);
        _0 = _3;
        StorageDead(_3);
        goto -> bb3;
    }

    bb2: {
        _0 = Option::<MarketIdentifier>::None;
        goto -> bb3;
    }

    bb3: {
        return;
    }
}
