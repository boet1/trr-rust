digraph Mir_0_1872 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_max_target_spread(_1: u64, _2: i64, _3: u64, _4: u64, _5: u64, _6: u32) -&gt; std::result::Result&lt;u64, error::ErrorCode&gt;<br align="left"/>let _7: u64;<br align="left"/>let mut _8: u64;<br align="left"/>let mut _9: i64;<br align="left"/>let mut _10: u64;<br align="left"/>let mut _11: u64;<br align="left"/>let mut _12: u64;<br align="left"/>let mut _13: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _14: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _15: u64;<br align="left"/>let mut _16: isize;<br align="left"/>let _17: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _18: !;<br align="left"/>let mut _19: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _20: u64;<br align="left"/>let mut _21: u64;<br align="left"/>let mut _22: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _23: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _24: u64;<br align="left"/>let mut _25: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _26: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _27: u64;<br align="left"/>let mut _28: u64;<br align="left"/>let mut _29: u64;<br align="left"/>let mut _30: isize;<br align="left"/>let _31: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _32: !;<br align="left"/>let mut _33: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _34: u64;<br align="left"/>let mut _35: u64;<br align="left"/>let mut _36: isize;<br align="left"/>let _37: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _38: !;<br align="left"/>let mut _39: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _40: u64;<br align="left"/>let _41: u64;<br align="left"/>let mut _42: u64;<br align="left"/>let mut _43: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _44: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _45: u32;<br align="left"/>let mut _46: isize;<br align="left"/>let _47: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _48: !;<br align="left"/>let mut _49: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _50: u64;<br align="left"/>let mut _51: u64;<br align="left"/>let mut _52: u64;<br align="left"/>debug reserve_price =&gt; _1;<br align="left"/>debug last_oracle_reserve_price_spread_pct =&gt; _2;<br align="left"/>debug last_oracle_conf_pct =&gt; _3;<br align="left"/>debug mark_std =&gt; _4;<br align="left"/>debug oracle_std =&gt; _5;<br align="left"/>debug max_spread =&gt; _6;<br align="left"/>debug max_spread_baseline =&gt; _7;<br align="left"/>debug residual =&gt; _17;<br align="left"/>debug val =&gt; _20;<br align="left"/>debug residual =&gt; _31;<br align="left"/>debug val =&gt; _34;<br align="left"/>debug residual =&gt; _37;<br align="left"/>debug val =&gt; _40;<br align="left"/>debug max_target_spread =&gt; _41;<br align="left"/>debug residual =&gt; _47;<br align="left"/>debug val =&gt; _50;<br align="left"/>>;
    bb0__0_1872 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = _2<br/></td></tr><tr><td align="left">_8 = core::num::&lt;impl i64&gt;::unsigned_abs(move _9)</td></tr></table>>];
    bb1__0_1872 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = _3<br/></td></tr><tr><td align="left">_14 = &lt;u64 as SafeMath&gt;::safe_mul(move _15, const 2_u64)</td></tr></table>>];
    bb2__0_1872 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/></td></tr><tr><td align="left">_13 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _14)</td></tr></table>>];
    bb3__0_1872 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>_16 = discriminant(_13)<br/></td></tr><tr><td align="left">switchInt(move _16)</td></tr></table>>];
    bb4__0_1872 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_20)<br/>_20 = ((_13 as Continue).0: u64)<br/>_12 = _20<br/>StorageDead(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>_28 = _4<br/>StorageLive(_29)<br/>_29 = _5<br/></td></tr><tr><td align="left">_27 = &lt;u64 as Ord&gt;::max(move _28, move _29)</td></tr></table>>];
    bb5__0_1872 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_1872 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>_17 = ((_13 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_19)<br/>_19 = _17<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _19)</td></tr></table>>];
    bb7__0_1872 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_17)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_10)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_1872 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">_26 = &lt;u64 as SafeMath&gt;::safe_mul(move _27, const _)</td></tr></table>>];
    bb9__0_1872 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/></td></tr><tr><td align="left">_25 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _26)</td></tr></table>>];
    bb10__0_1872 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>_30 = discriminant(_25)<br/></td></tr><tr><td align="left">switchInt(move _30)</td></tr></table>>];
    bb11__0_1872 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_34)<br/>_34 = ((_25 as Continue).0: u64)<br/>_24 = _34<br/>StorageDead(_34)<br/>StorageLive(_35)<br/>_35 = _1<br/></td></tr><tr><td align="left">_23 = &lt;u64 as SafeMath&gt;::safe_div(move _24, move _35)</td></tr></table>>];
    bb12__0_1872 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_31)<br/>_31 = ((_25 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_33)<br/>_33 = _31<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _33)</td></tr></table>>];
    bb13__0_1872 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_31)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_1872 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">_22 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _23)</td></tr></table>>];
    bb15__0_1872 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>_36 = discriminant(_22)<br/></td></tr><tr><td align="left">switchInt(move _36)</td></tr></table>>];
    bb16__0_1872 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_40)<br/>_40 = ((_22 as Continue).0: u64)<br/>_21 = _40<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">_11 = &lt;u64 as Ord&gt;::max(move _12, move _21)</td></tr></table>>];
    bb17__0_1872 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_37)<br/>_37 = ((_22 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_39)<br/>_39 = _37<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _39)</td></tr></table>>];
    bb18__0_1872 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_1872 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">_10 = &lt;u64 as Ord&gt;::min(move _11, const _)</td></tr></table>>];
    bb20__0_1872 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/></td></tr><tr><td align="left">_7 = &lt;u64 as Ord&gt;::max(move _8, move _10)</td></tr></table>>];
    bb21__0_1872 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_8)<br/>StorageDead(_25)<br/>StorageDead(_22)<br/>StorageDead(_13)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>_45 = _6<br/></td></tr><tr><td align="left">_44 = &lt;u32 as Cast&gt;::cast::&lt;u64&gt;(move _45)</td></tr></table>>];
    bb22__0_1872 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/></td></tr><tr><td align="left">_43 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _44)</td></tr></table>>];
    bb23__0_1872 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>_46 = discriminant(_43)<br/></td></tr><tr><td align="left">switchInt(move _46)</td></tr></table>>];
    bb24__0_1872 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_50)<br/>_50 = ((_43 as Continue).0: u64)<br/>_42 = _50<br/>StorageDead(_50)<br/>StorageLive(_51)<br/>_51 = _7<br/></td></tr><tr><td align="left">_41 = &lt;u64 as Ord&gt;::max(move _42, move _51)</td></tr></table>>];
    bb25__0_1872 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>_47 = ((_43 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_49)<br/>_49 = _47<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _49)</td></tr></table>>];
    bb26__0_1872 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_47)<br/>StorageDead(_42)<br/>StorageDead(_43)<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_1872 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageDead(_42)<br/>StorageDead(_43)<br/>StorageLive(_52)<br/>_52 = _41<br/>_0 = std::result::Result::&lt;u64, error::ErrorCode&gt;::Ok(move _52)<br/>StorageDead(_52)<br/>StorageDead(_41)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_1872 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_10)<br/>StorageDead(_8)<br/>StorageDead(_25)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_1872 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_1872 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_1872 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_1872 -> bb1__0_1872 [label="return"];
    bb1__0_1872 -> bb2__0_1872 [label="return"];
    bb2__0_1872 -> bb3__0_1872 [label="return"];
    bb3__0_1872 -> bb4__0_1872 [label="0"];
    bb3__0_1872 -> bb6__0_1872 [label="1"];
    bb3__0_1872 -> bb5__0_1872 [label="otherwise"];
    bb4__0_1872 -> bb8__0_1872 [label="return"];
    bb6__0_1872 -> bb7__0_1872 [label="return"];
    bb7__0_1872 -> bb29__0_1872 [label=""];
    bb8__0_1872 -> bb9__0_1872 [label="return"];
    bb9__0_1872 -> bb10__0_1872 [label="return"];
    bb10__0_1872 -> bb11__0_1872 [label="0"];
    bb10__0_1872 -> bb12__0_1872 [label="1"];
    bb10__0_1872 -> bb5__0_1872 [label="otherwise"];
    bb11__0_1872 -> bb14__0_1872 [label="return"];
    bb12__0_1872 -> bb13__0_1872 [label="return"];
    bb13__0_1872 -> bb28__0_1872 [label=""];
    bb14__0_1872 -> bb15__0_1872 [label="return"];
    bb15__0_1872 -> bb16__0_1872 [label="0"];
    bb15__0_1872 -> bb17__0_1872 [label="1"];
    bb15__0_1872 -> bb5__0_1872 [label="otherwise"];
    bb16__0_1872 -> bb19__0_1872 [label="return"];
    bb17__0_1872 -> bb18__0_1872 [label="return"];
    bb18__0_1872 -> bb28__0_1872 [label=""];
    bb19__0_1872 -> bb20__0_1872 [label="return"];
    bb20__0_1872 -> bb21__0_1872 [label="return"];
    bb21__0_1872 -> bb22__0_1872 [label="return"];
    bb22__0_1872 -> bb23__0_1872 [label="return"];
    bb23__0_1872 -> bb24__0_1872 [label="0"];
    bb23__0_1872 -> bb25__0_1872 [label="1"];
    bb23__0_1872 -> bb5__0_1872 [label="otherwise"];
    bb24__0_1872 -> bb27__0_1872 [label="return"];
    bb25__0_1872 -> bb26__0_1872 [label="return"];
    bb26__0_1872 -> bb30__0_1872 [label=""];
    bb27__0_1872 -> bb31__0_1872 [label=""];
    bb28__0_1872 -> bb29__0_1872 [label=""];
    bb29__0_1872 -> bb30__0_1872 [label=""];
    bb30__0_1872 -> bb31__0_1872 [label=""];
}
