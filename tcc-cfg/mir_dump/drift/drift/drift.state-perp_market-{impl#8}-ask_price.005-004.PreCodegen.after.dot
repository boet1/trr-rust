digraph Mir_0_3835 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn AMM::ask_price(_1: &amp;ReErased state::perp_market::AMM, _2: u64) -&gt; std::result::Result&lt;u64, error::ErrorCode&gt;<br align="left"/>let _3: i32;<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i32&gt;;<br align="left"/>let mut _5: std::result::Result&lt;i32, error::ErrorCode&gt;;<br align="left"/>let mut _6: i32;<br align="left"/>let mut _7: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i32&gt;;<br align="left"/>let mut _8: std::result::Result&lt;i32, error::ErrorCode&gt;;<br align="left"/>let mut _9: u32;<br align="left"/>let mut _10: isize;<br align="left"/>let _11: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _12: !;<br align="left"/>let mut _13: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _14: i32;<br align="left"/>let mut _15: i32;<br align="left"/>let mut _16: isize;<br align="left"/>let _17: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _18: !;<br align="left"/>let mut _19: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _20: i32;<br align="left"/>let _21: i128;<br align="left"/>let mut _22: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _23: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _24: i128;<br align="left"/>let mut _25: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _26: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _27: i32;<br align="left"/>let mut _28: isize;<br align="left"/>let _29: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _30: !;<br align="left"/>let mut _31: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _32: i128;<br align="left"/>let mut _33: isize;<br align="left"/>let _34: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _35: !;<br align="left"/>let mut _36: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _37: i128;<br align="left"/>let mut _38: u128;<br align="left"/>let mut _39: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _40: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _41: u128;<br align="left"/>let mut _42: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _43: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _44: u128;<br align="left"/>let mut _45: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _46: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _47: u64;<br align="left"/>let mut _48: isize;<br align="left"/>let _49: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _50: !;<br align="left"/>let mut _51: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _52: u128;<br align="left"/>let mut _53: u128;<br align="left"/>let mut _54: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _55: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _56: i128;<br align="left"/>let mut _57: isize;<br align="left"/>let _58: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _59: !;<br align="left"/>let mut _60: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _61: u128;<br align="left"/>let mut _62: isize;<br align="left"/>let _63: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _64: !;<br align="left"/>let mut _65: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _66: u128;<br align="left"/>let mut _67: isize;<br align="left"/>let _68: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _69: !;<br align="left"/>let mut _70: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _71: u128;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug reserve_price =&gt; _2;<br align="left"/>debug adjusted_spread =&gt; _3;<br align="left"/>debug residual =&gt; _11;<br align="left"/>debug val =&gt; _14;<br align="left"/>debug residual =&gt; _17;<br align="left"/>debug val =&gt; _20;<br align="left"/>debug multiplier =&gt; _21;<br align="left"/>debug residual =&gt; _29;<br align="left"/>debug val =&gt; _32;<br align="left"/>debug residual =&gt; _34;<br align="left"/>debug val =&gt; _37;<br align="left"/>debug residual =&gt; _49;<br align="left"/>debug val =&gt; _52;<br align="left"/>debug residual =&gt; _58;<br align="left"/>debug val =&gt; _61;<br align="left"/>debug residual =&gt; _63;<br align="left"/>debug val =&gt; _66;<br align="left"/>debug residual =&gt; _68;<br align="left"/>debug val =&gt; _71;<br align="left"/>>;
    bb0__0_3835 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = ((*_1).65: u32)<br/></td></tr><tr><td align="left">_8 = &lt;u32 as Cast&gt;::cast::&lt;i32&gt;(move _9)</td></tr></table>>];
    bb1__0_3835 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = &lt;std::result::Result&lt;i32, error::ErrorCode&gt; as Try&gt;::branch(move _8)</td></tr></table>>];
    bb2__0_3835 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_10 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _10)</td></tr></table>>];
    bb3__0_3835 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = ((_7 as Continue).0: i32)<br/>_6 = _14<br/>StorageDead(_14)<br/>StorageLive(_15)<br/>_15 = ((*_1).82: i32)<br/></td></tr><tr><td align="left">_5 = &lt;i32 as SafeMath&gt;::safe_add(move _6, move _15)</td></tr></table>>];
    bb4__0_3835 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_3835 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = ((_7 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_13)<br/>_13 = _11<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _13)</td></tr></table>>];
    bb6__0_3835 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_11)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_3835 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;i32, error::ErrorCode&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb8__0_3835 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_16 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _16)</td></tr></table>>];
    bb9__0_3835 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_20)<br/>_20 = ((_4 as Continue).0: i32)<br/>_3 = _20<br/>StorageDead(_20)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_27 = _3<br/></td></tr><tr><td align="left">_26 = &lt;i32 as Cast&gt;::cast::&lt;i128&gt;(move _27)</td></tr></table>>];
    bb10__0_3835 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>_17 = ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_19)<br/>_19 = _17<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _19)</td></tr></table>>];
    bb11__0_3835 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_3835 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/></td></tr><tr><td align="left">_25 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _26)</td></tr></table>>];
    bb13__0_3835 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>_28 = discriminant(_25)<br/></td></tr><tr><td align="left">switchInt(move _28)</td></tr></table>>];
    bb14__0_3835 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_32)<br/>_32 = ((_25 as Continue).0: i128)<br/>_24 = _32<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">_23 = &lt;i128 as SafeMath&gt;::safe_add(const _, move _24)</td></tr></table>>];
    bb15__0_3835 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_29)<br/>_29 = ((_25 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_31)<br/>_31 = _29<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _31)</td></tr></table>>];
    bb16__0_3835 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_29)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_3835 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/></td></tr><tr><td align="left">_22 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _23)</td></tr></table>>];
    bb18__0_3835 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>_33 = discriminant(_22)<br/></td></tr><tr><td align="left">switchInt(move _33)</td></tr></table>>];
    bb19__0_3835 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_37)<br/>_37 = ((_22 as Continue).0: i128)<br/>_21 = _37<br/>StorageDead(_37)<br/>StorageDead(_25)<br/>StorageDead(_22)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>_47 = _2<br/></td></tr><tr><td align="left">_46 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _47)</td></tr></table>>];
    bb20__0_3835 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_34)<br/>_34 = ((_22 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_36)<br/>_36 = _34<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _36)</td></tr></table>>];
    bb21__0_3835 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_3835 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/></td></tr><tr><td align="left">_45 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _46)</td></tr></table>>];
    bb23__0_3835 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>_48 = discriminant(_45)<br/></td></tr><tr><td align="left">switchInt(move _48)</td></tr></table>>];
    bb24__0_3835 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_52)<br/>_52 = ((_45 as Continue).0: u128)<br/>_44 = _52<br/>StorageDead(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>_56 = _21<br/></td></tr><tr><td align="left">_55 = &lt;i128 as Cast&gt;::cast::&lt;u128&gt;(move _56)</td></tr></table>>];
    bb25__0_3835 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_49)<br/>_49 = ((_45 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_51)<br/>_51 = _49<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _51)</td></tr></table>>];
    bb26__0_3835 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageDead(_49)<br/>StorageDead(_44)<br/>StorageDead(_43)<br/>StorageDead(_41)<br/>StorageDead(_40)<br/>StorageDead(_38)<br/>StorageDead(_21)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_3835 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/></td></tr><tr><td align="left">_54 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _55)</td></tr></table>>];
    bb28__0_3835 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>_57 = discriminant(_54)<br/></td></tr><tr><td align="left">switchInt(move _57)</td></tr></table>>];
    bb29__0_3835 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_61)<br/>_61 = ((_54 as Continue).0: u128)<br/>_53 = _61<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">_43 = &lt;u128 as SafeMath&gt;::safe_mul(move _44, move _53)</td></tr></table>>];
    bb30__0_3835 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_58)<br/>_58 = ((_54 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_60)<br/>_60 = _58<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _60)</td></tr></table>>];
    bb31__0_3835 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageDead(_58)<br/>StorageDead(_53)<br/>StorageDead(_44)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_3835 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">_42 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _43)</td></tr></table>>];
    bb33__0_3835 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>_62 = discriminant(_42)<br/></td></tr><tr><td align="left">switchInt(move _62)</td></tr></table>>];
    bb34__0_3835 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_66)<br/>_66 = ((_42 as Continue).0: u128)<br/>_41 = _66<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">_40 = &lt;u128 as SafeMath&gt;::safe_div(move _41, const _)</td></tr></table>>];
    bb35__0_3835 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_63)<br/>_63 = ((_42 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_65)<br/>_65 = _63<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _65)</td></tr></table>>];
    bb36__0_3835 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageDead(_63)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_3835 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/></td></tr><tr><td align="left">_39 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _40)</td></tr></table>>];
    bb38__0_3835 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>_67 = discriminant(_39)<br/></td></tr><tr><td align="left">switchInt(move _67)</td></tr></table>>];
    bb39__0_3835 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_71)<br/>_71 = ((_39 as Continue).0: u128)<br/>_38 = _71<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">_0 = &lt;u128 as Cast&gt;::cast::&lt;u64&gt;(move _38)</td></tr></table>>];
    bb40__0_3835 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageLive(_68)<br/>_68 = ((_39 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_70)<br/>_70 = _68<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _70)</td></tr></table>>];
    bb41__0_3835 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_68)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_3835 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_21)<br/>StorageDead(_3)<br/>StorageDead(_54)<br/>StorageDead(_45)<br/>StorageDead(_42)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_3835 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_3835 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_21)<br/>StorageDead(_3)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_3835 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_42)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_3835 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_22)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_3835 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_3835 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_3835 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_3835 -> bb1__0_3835 [label="return"];
    bb1__0_3835 -> bb2__0_3835 [label="return"];
    bb2__0_3835 -> bb3__0_3835 [label="0"];
    bb2__0_3835 -> bb5__0_3835 [label="1"];
    bb2__0_3835 -> bb4__0_3835 [label="otherwise"];
    bb3__0_3835 -> bb7__0_3835 [label="return"];
    bb5__0_3835 -> bb6__0_3835 [label="return"];
    bb6__0_3835 -> bb47__0_3835 [label=""];
    bb7__0_3835 -> bb8__0_3835 [label="return"];
    bb8__0_3835 -> bb9__0_3835 [label="0"];
    bb8__0_3835 -> bb10__0_3835 [label="1"];
    bb8__0_3835 -> bb4__0_3835 [label="otherwise"];
    bb9__0_3835 -> bb12__0_3835 [label="return"];
    bb10__0_3835 -> bb11__0_3835 [label="return"];
    bb11__0_3835 -> bb47__0_3835 [label=""];
    bb12__0_3835 -> bb13__0_3835 [label="return"];
    bb13__0_3835 -> bb14__0_3835 [label="0"];
    bb13__0_3835 -> bb15__0_3835 [label="1"];
    bb13__0_3835 -> bb4__0_3835 [label="otherwise"];
    bb14__0_3835 -> bb17__0_3835 [label="return"];
    bb15__0_3835 -> bb16__0_3835 [label="return"];
    bb16__0_3835 -> bb46__0_3835 [label=""];
    bb17__0_3835 -> bb18__0_3835 [label="return"];
    bb18__0_3835 -> bb19__0_3835 [label="0"];
    bb18__0_3835 -> bb20__0_3835 [label="1"];
    bb18__0_3835 -> bb4__0_3835 [label="otherwise"];
    bb19__0_3835 -> bb22__0_3835 [label="return"];
    bb20__0_3835 -> bb21__0_3835 [label="return"];
    bb21__0_3835 -> bb46__0_3835 [label=""];
    bb22__0_3835 -> bb23__0_3835 [label="return"];
    bb23__0_3835 -> bb24__0_3835 [label="0"];
    bb23__0_3835 -> bb25__0_3835 [label="1"];
    bb23__0_3835 -> bb4__0_3835 [label="otherwise"];
    bb24__0_3835 -> bb27__0_3835 [label="return"];
    bb25__0_3835 -> bb26__0_3835 [label="return"];
    bb26__0_3835 -> bb45__0_3835 [label=""];
    bb27__0_3835 -> bb28__0_3835 [label="return"];
    bb28__0_3835 -> bb29__0_3835 [label="0"];
    bb28__0_3835 -> bb30__0_3835 [label="1"];
    bb28__0_3835 -> bb4__0_3835 [label="otherwise"];
    bb29__0_3835 -> bb32__0_3835 [label="return"];
    bb30__0_3835 -> bb31__0_3835 [label="return"];
    bb31__0_3835 -> bb43__0_3835 [label=""];
    bb32__0_3835 -> bb33__0_3835 [label="return"];
    bb33__0_3835 -> bb34__0_3835 [label="0"];
    bb33__0_3835 -> bb35__0_3835 [label="1"];
    bb33__0_3835 -> bb4__0_3835 [label="otherwise"];
    bb34__0_3835 -> bb37__0_3835 [label="return"];
    bb35__0_3835 -> bb36__0_3835 [label="return"];
    bb36__0_3835 -> bb43__0_3835 [label=""];
    bb37__0_3835 -> bb38__0_3835 [label="return"];
    bb38__0_3835 -> bb39__0_3835 [label="0"];
    bb38__0_3835 -> bb40__0_3835 [label="1"];
    bb38__0_3835 -> bb4__0_3835 [label="otherwise"];
    bb39__0_3835 -> bb42__0_3835 [label="return"];
    bb40__0_3835 -> bb41__0_3835 [label="return"];
    bb41__0_3835 -> bb44__0_3835 [label=""];
    bb42__0_3835 -> bb49__0_3835 [label=""];
    bb43__0_3835 -> bb44__0_3835 [label=""];
    bb44__0_3835 -> bb45__0_3835 [label=""];
    bb45__0_3835 -> bb49__0_3835 [label=""];
    bb46__0_3835 -> bb48__0_3835 [label=""];
    bb47__0_3835 -> bb48__0_3835 [label=""];
    bb48__0_3835 -> bb49__0_3835 [label=""];
}
