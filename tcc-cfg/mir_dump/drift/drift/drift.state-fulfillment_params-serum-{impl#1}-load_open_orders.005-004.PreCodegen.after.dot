digraph Mir_0_3251 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn SerumContext::&lt;'a, 'b&gt;::load_open_orders(_1: &amp;ReErased state::fulfillment_params::serum::SerumContext&lt;ReErased, ReErased&gt;) -&gt; std::result::Result&lt;std::cell::Ref&lt;ReErased, serum_dex::state::OpenOrders&gt;, error::ErrorCode&gt;<br align="left"/>let _2: ();<br align="left"/>let mut _3: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _4: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _5: bool;<br align="left"/>let mut _6: usize;<br align="left"/>let mut _7: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _8: ();<br align="left"/>let _9: error::ErrorCode;<br align="left"/>let _10: ();<br align="left"/>let mut _11: &amp;ReErased str;<br align="left"/>let _12: &amp;ReErased str;<br align="left"/>let mut _13: &amp;ReErased std::string::String;<br align="left"/>let _14: &amp;ReErased std::string::String;<br align="left"/>let _15: std::string::String;<br align="left"/>let _16: std::string::String;<br align="left"/>let mut _17: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _18: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _19: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _20: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _21: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _22: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _23: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _24: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _25: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _26: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _27: &amp;ReErased error::ErrorCode;<br align="left"/>let _28: &amp;ReErased error::ErrorCode;<br align="left"/>let mut _29: error::ErrorCode;<br align="left"/>let mut _30: isize;<br align="left"/>let _31: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _32: !;<br align="left"/>let mut _33: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _34: ();<br align="left"/>let _35: std::cell::Ref&lt;ReErased, [u8]&gt;;<br align="left"/>let mut _36: std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _37: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;&gt;;<br align="left"/>let mut _38: std::result::Result&lt;std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _39: std::result::Result&lt;std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _40: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _41: Closure(DefId(0:3252 ~ drift[d311]::state::fulfillment_params::serum::{impl#1}::load_open_orders::{closure#0}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::prelude::ProgramError,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _42: isize;<br align="left"/>let _43: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _44: !;<br align="left"/>let mut _45: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _46: std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _47: Closure(DefId(0:3253 ~ drift[d311]::state::fulfillment_params::serum::{impl#1}::load_open_orders::{closure#1}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) &amp;ReErased mut [u8],)) -&gt; &amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) [u8], [Region(BrAnon)]), ()]);<br align="left"/>let mut _48: std::cell::Ref&lt;ReErased, serum_dex::state::OpenOrders&gt;;<br align="left"/>let mut _49: std::cell::Ref&lt;ReErased, [u8]&gt;;<br align="left"/>let mut _50: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _51: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _52: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _53: bool;<br align="left"/>let mut _54: bool;<br align="left"/>let mut _55: isize;<br align="left"/>let mut _56: isize;<br align="left"/>let mut _57: isize;<br align="left"/>let mut _58: isize;<br align="left"/>let mut _59: isize;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug error_code =&gt; _9;<br align="left"/>debug res =&gt; _16;<br align="left"/>debug residual =&gt; _31;<br align="left"/>debug val =&gt; _34;<br align="left"/>debug unpadded_data =&gt; _35;<br align="left"/>debug residual =&gt; _43;<br align="left"/>debug val =&gt; _46;<br align="left"/>>;
    bb0__0_3251 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_53 = const false<br/>_54 = const false<br/>StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_51 = deref_copy ((*_1).2: &amp;anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_7 = &amp;(*_51)<br/></td></tr><tr><td align="left">_6 = anchor_lang::prelude::AccountInfo::&lt;'_&gt;::data_len(move _7)</td></tr></table>>];
    bb1__0_3251 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>_5 = Ge(move _6, const 12_usize)<br/></td></tr><tr><td align="left">switchInt(move _5)</td></tr></table>>];
    bb2__0_3251 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageLive(_8)<br/>_8 = ()<br/>_4 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _8)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb3__0_3251 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageLive(_9)<br/>_9 = error::ErrorCode::InvalidSerumOpenOrders<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_50 = const _<br/>_20 = &amp;(*_50)<br/>_19 = &amp;(*_20)<br/>_18 = move _19 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_19)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>_28 = &amp;_9<br/>_27 = &amp;(*_28)<br/></td></tr><tr><td align="left">_26 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _27)</td></tr></table>>];
    bb4__0_3251 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>_25 = [move _26]<br/>StorageDead(_26)<br/>_24 = &amp;_25<br/>_23 = &amp;(*_24)<br/>_22 = move _23 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">_17 = Arguments::&lt;'_&gt;::new_v1(move _18, move _22)</td></tr></table>>];
    bb5__0_3251 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">_16 = format(move _17)</td></tr></table>>];
    bb6__0_3251 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_28)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_20)<br/>_15 = move _16<br/>StorageDead(_16)<br/>_14 = &amp;_15<br/>_13 = &amp;(*_14)<br/></td></tr><tr><td align="left">_12 = &lt;String as Deref&gt;::deref(move _13)</td></tr></table>>];
    bb7__0_3251 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">_11 = &amp;(*_12)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">_10 = solana_program::log::sol_log(move _11)</td></tr></table>>];
    bb8__0_3251 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/></td></tr><tr><td align="left">drop(_15)</td></tr></table>>];
    bb9__0_3251 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_12)<br/>StorageDead(_10)<br/>StorageLive(_29)<br/>_29 = _9<br/>_4 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _29)<br/>StorageDead(_29)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_3251 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">_3 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _4)</td></tr></table>>];
    bb11__0_3251 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>_30 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _30)</td></tr></table>>];
    bb12__0_3251 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_34)<br/>_34 = ((_3 as Continue).0: ())<br/>_2 = _34<br/>StorageDead(_34)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_52 = deref_copy ((*_1).2: &amp;anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_40 = &amp;(*_52)<br/></td></tr><tr><td align="left">_39 = anchor_lang::prelude::AccountInfo::&lt;'_&gt;::try_borrow_data(move _40)</td></tr></table>>];
    bb13__0_3251 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb14__0_3251 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_31)<br/>_31 = ((_3 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_33)<br/>_33 = _31<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Ref&lt;'_, serum_dex::state::OpenOrders&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _33)</td></tr></table>>];
    bb15__0_3251 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_31)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_3251 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageLive(_41)<br/>_41 = {closure@programs/drift/src/state/fulfillment_params/serum.rs:83:26: 83:30}<br/></td></tr><tr><td align="left">_38 = std::result::Result::&lt;Ref&lt;'_, &amp;mut [u8]&gt;, anchor_lang::prelude::ProgramError&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/state/fulfillment_params/serum.rs:83:26: 83:30}&gt;(move _39, move _41)</td></tr></table>>];
    bb17__0_3251 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">_37 = &lt;std::result::Result&lt;Ref&lt;'_, &amp;mut [u8]&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _38)</td></tr></table>>];
    bb18__0_3251 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">_54 = const true<br/>StorageDead(_38)<br/>_42 = discriminant(_37)<br/></td></tr><tr><td align="left">switchInt(move _42)</td></tr></table>>];
    bb19__0_3251 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_46)<br/>_46 = move ((_37 as Continue).0: std::cell::Ref&lt;'_, &amp;mut [u8]&gt;)<br/>_36 = move _46<br/>StorageDead(_46)<br/>StorageLive(_47)<br/>_47 = {closure@programs/drift/src/state/fulfillment_params/serum.rs:84:13: 84:19}<br/></td></tr><tr><td align="left">_35 = Ref::&lt;'_, &amp;mut [u8]&gt;::map::&lt;[u8], {closure@programs/drift/src/state/fulfillment_params/serum.rs:84:13: 84:19}&gt;(move _36, move _47)</td></tr></table>>];
    bb20__0_3251 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_43)<br/>_43 = ((_37 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_45)<br/>_45 = _43<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Ref&lt;'_, serum_dex::state::OpenOrders&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _45)</td></tr></table>>];
    bb21__0_3251 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_43)<br/>StorageDead(_36)<br/>_55 = discriminant(_37)<br/>_54 = const false<br/>StorageDead(_37)<br/>_53 = const false<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_3251 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">_53 = const true<br/>StorageDead(_47)<br/>StorageDead(_36)<br/>_57 = discriminant(_37)<br/>_54 = const false<br/>StorageDead(_37)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>_53 = const false<br/>_49 = move _35<br/></td></tr><tr><td align="left">_48 = Ref::&lt;'_, [u8]&gt;::map::&lt;serum_dex::state::OpenOrders, for&lt;'a&gt; fn(&amp;'a [u8]) -&gt; &amp;'a serum_dex::state::OpenOrders {bytemuck::from_bytes::&lt;serum_dex::state::OpenOrders&gt;}&gt;(move _49, bytemuck::from_bytes::&lt;serum_dex::state::OpenOrders&gt;)</td></tr></table>>];
    bb23__0_3251 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>_0 = std::result::Result::&lt;Ref&lt;'_, serum_dex::state::OpenOrders&gt;, error::ErrorCode&gt;::Ok(move _48)<br/>StorageDead(_48)<br/>_53 = const false<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_3251 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left">return</td></tr></table>>];
    bb25__0_3251 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">25 (cleanup)</td></tr><tr><td align="left">drop(_15)</td></tr></table>>];
    bb26__0_3251 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">26 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb27__0_3251 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">27 (cleanup)</td></tr><tr><td align="left">drop(_35)</td></tr></table>>];
    bb28__0_3251 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">28 (cleanup)</td></tr><tr><td align="left">switchInt(_53)</td></tr></table>>];
    bb29__0_3251 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">29 (cleanup)</td></tr><tr><td align="left" balign="left">_59 = discriminant(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_3251 -> bb1__0_3251 [label="return"];
    bb1__0_3251 -> bb3__0_3251 [label="0"];
    bb1__0_3251 -> bb2__0_3251 [label="otherwise"];
    bb2__0_3251 -> bb10__0_3251 [label=""];
    bb3__0_3251 -> bb4__0_3251 [label="return"];
    bb4__0_3251 -> bb5__0_3251 [label="return"];
    bb5__0_3251 -> bb6__0_3251 [label="return"];
    bb6__0_3251 -> bb7__0_3251 [label="return"];
    bb6__0_3251 -> bb25__0_3251 [label="unwind"];
    bb7__0_3251 -> bb8__0_3251 [label="return"];
    bb7__0_3251 -> bb25__0_3251 [label="unwind"];
    bb8__0_3251 -> bb9__0_3251 [label="return"];
    bb8__0_3251 -> bb26__0_3251 [label="unwind"];
    bb9__0_3251 -> bb10__0_3251 [label=""];
    bb10__0_3251 -> bb11__0_3251 [label="return"];
    bb11__0_3251 -> bb12__0_3251 [label="0"];
    bb11__0_3251 -> bb14__0_3251 [label="1"];
    bb11__0_3251 -> bb13__0_3251 [label="otherwise"];
    bb12__0_3251 -> bb16__0_3251 [label="return"];
    bb14__0_3251 -> bb15__0_3251 [label="return"];
    bb15__0_3251 -> bb24__0_3251 [label=""];
    bb16__0_3251 -> bb17__0_3251 [label="return"];
    bb16__0_3251 -> bb26__0_3251 [label="unwind"];
    bb17__0_3251 -> bb18__0_3251 [label="return"];
    bb17__0_3251 -> bb26__0_3251 [label="unwind"];
    bb18__0_3251 -> bb19__0_3251 [label="0"];
    bb18__0_3251 -> bb20__0_3251 [label="1"];
    bb18__0_3251 -> bb13__0_3251 [label="otherwise"];
    bb19__0_3251 -> bb22__0_3251 [label="return"];
    bb19__0_3251 -> bb29__0_3251 [label="unwind"];
    bb20__0_3251 -> bb21__0_3251 [label="return"];
    bb20__0_3251 -> bb29__0_3251 [label="unwind"];
    bb21__0_3251 -> bb24__0_3251 [label=""];
    bb22__0_3251 -> bb23__0_3251 [label="return"];
    bb22__0_3251 -> bb28__0_3251 [label="unwind"];
    bb23__0_3251 -> bb24__0_3251 [label=""];
    bb25__0_3251 -> bb26__0_3251 [label="return"];
    bb27__0_3251 -> bb26__0_3251 [label="return"];
    bb28__0_3251 -> bb26__0_3251 [label="0"];
    bb28__0_3251 -> bb27__0_3251 [label="otherwise"];
    bb29__0_3251 -> bb26__0_3251 [label=""];
}
