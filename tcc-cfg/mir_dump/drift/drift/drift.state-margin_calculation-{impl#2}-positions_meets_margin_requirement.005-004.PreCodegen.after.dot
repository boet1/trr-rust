digraph Mir_0_3454 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn MarginCalculation::positions_meets_margin_requirement(_1: &amp;ReErased state::margin_calculation::MarginCalculation) -&gt; std::result::Result&lt;bool, error::ErrorCode&gt;<br align="left"/>let mut _2: bool;<br align="left"/>let mut _3: i128;<br align="left"/>let mut _4: i128;<br align="left"/>let mut _5: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _6: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _7: u128;<br align="left"/>let mut _8: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _9: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _10: u128;<br align="left"/>let mut _11: u128;<br align="left"/>let mut _12: isize;<br align="left"/>let _13: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _14: !;<br align="left"/>let mut _15: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _16: u128;<br align="left"/>let mut _17: isize;<br align="left"/>let _18: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _19: !;<br align="left"/>let mut _20: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _21: i128;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug residual =&gt; _13;<br align="left"/>debug val =&gt; _16;<br align="left"/>debug residual =&gt; _18;<br align="left"/>debug val =&gt; _21;<br align="left"/>>;
    bb0__0_3454 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>_3 = ((*_1).1: i128)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = ((*_1).3: u128)<br/>StorageLive(_11)<br/>_11 = ((*_1).15: u128)<br/></td></tr><tr><td align="left">_9 = &lt;u128 as SafeMath&gt;::safe_sub(move _10, move _11)</td></tr></table>>];
    bb1__0_3454 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">_8 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _9)</td></tr></table>>];
    bb2__0_3454 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>_12 = discriminant(_8)<br/></td></tr><tr><td align="left">switchInt(move _12)</td></tr></table>>];
    bb3__0_3454 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_16)<br/>_16 = ((_8 as Continue).0: u128)<br/>_7 = _16<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">_6 = &lt;u128 as Cast&gt;::cast::&lt;i128&gt;(move _7)</td></tr></table>>];
    bb4__0_3454 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_3454 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = ((_8 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_15)<br/>_15 = _13<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _15)</td></tr></table>>];
    bb6__0_3454 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_13)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_3454 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/></td></tr><tr><td align="left">_5 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _6)</td></tr></table>>];
    bb8__0_3454 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_17 = discriminant(_5)<br/></td></tr><tr><td align="left">switchInt(move _17)</td></tr></table>>];
    bb9__0_3454 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = ((_5 as Continue).0: i128)<br/>_4 = _21<br/>StorageDead(_21)<br/>_2 = Ge(move _3, move _4)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>_0 = std::result::Result::&lt;bool, error::ErrorCode&gt;::Ok(move _2)<br/>StorageDead(_2)<br/>StorageDead(_8)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_3454 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_18)<br/>_18 = ((_5 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_20)<br/>_20 = _18<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _20)</td></tr></table>>];
    bb11__0_3454 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_3454 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/>StorageDead(_8)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_3454 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_3454 -> bb1__0_3454 [label="return"];
    bb1__0_3454 -> bb2__0_3454 [label="return"];
    bb2__0_3454 -> bb3__0_3454 [label="0"];
    bb2__0_3454 -> bb5__0_3454 [label="1"];
    bb2__0_3454 -> bb4__0_3454 [label="otherwise"];
    bb3__0_3454 -> bb7__0_3454 [label="return"];
    bb5__0_3454 -> bb6__0_3454 [label="return"];
    bb6__0_3454 -> bb12__0_3454 [label=""];
    bb7__0_3454 -> bb8__0_3454 [label="return"];
    bb8__0_3454 -> bb9__0_3454 [label="0"];
    bb8__0_3454 -> bb10__0_3454 [label="1"];
    bb8__0_3454 -> bb4__0_3454 [label="otherwise"];
    bb9__0_3454 -> bb13__0_3454 [label=""];
    bb10__0_3454 -> bb11__0_3454 [label="return"];
    bb11__0_3454 -> bb12__0_3454 [label=""];
    bb12__0_3454 -> bb13__0_3454 [label=""];
}
