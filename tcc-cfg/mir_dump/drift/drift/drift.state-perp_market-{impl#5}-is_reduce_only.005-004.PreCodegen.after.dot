digraph Mir_0_3790 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn PerpMarket::is_reduce_only(_1: &amp;ReErased state::perp_market::PerpMarket) -&gt; std::result::Result&lt;bool, error::ErrorCode&gt;<br align="left"/>let mut _2: bool;<br align="left"/>let mut _3: &amp;ReErased state::perp_market::MarketStatus;<br align="left"/>let mut _4: &amp;ReErased state::perp_market::MarketStatus;<br align="left"/>let _5: state::perp_market::MarketStatus;<br align="left"/>let mut _6: &amp;ReErased state::perp_market::MarketStatus;<br align="left"/>debug self =&gt; _1;<br align="left"/>>;
    bb0__0_3790 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>_3 = &amp;((*_1).22: state::perp_market::MarketStatus)<br/>StorageLive(_4)<br/>_6 = const _<br/>_4 = &amp;(*_6)<br/></td></tr><tr><td align="left">_2 = &lt;state::perp_market::MarketStatus as PartialEq&gt;::eq(move _3, move _4)</td></tr></table>>];
    bb1__0_3790 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageDead(_3)<br/>_0 = std::result::Result::&lt;bool, error::ErrorCode&gt;::Ok(move _2)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_3790 -> bb1__0_3790 [label="return"];
}
