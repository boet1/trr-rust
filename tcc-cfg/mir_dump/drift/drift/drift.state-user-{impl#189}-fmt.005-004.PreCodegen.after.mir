// MIR for `state::user::<impl at programs/drift/src/state/user.rs:2013:34: 2013:39>::fmt` after PreCodegen

fn state::user::<impl at programs/drift/src/state/user.rs:2013:34: 2013:39>::fmt(_1: &ReferrerName, _2: &mut Formatter<'_>) -> std::result::Result<(), std::fmt::Error> {
    debug self => _1;
    debug f => _2;
    let mut _0: std::result::Result<(), std::fmt::Error>;
    let mut _3: &mut std::fmt::Formatter<'_>;
    let mut _4: &str;
    let _5: &str;
    let mut _6: &str;
    let _7: &str;
    let mut _8: &dyn std::fmt::Debug;
    let mut _9: &anchor_lang::prelude::Pubkey;
    let _10: &anchor_lang::prelude::Pubkey;
    let mut _11: &str;
    let _12: &str;
    let mut _13: &dyn std::fmt::Debug;
    let mut _14: &anchor_lang::prelude::Pubkey;
    let _15: &anchor_lang::prelude::Pubkey;
    let mut _16: &str;
    let _17: &str;
    let mut _18: &dyn std::fmt::Debug;
    let mut _19: &anchor_lang::prelude::Pubkey;
    let _20: &anchor_lang::prelude::Pubkey;
    let mut _21: &str;
    let _22: &str;
    let mut _23: &dyn std::fmt::Debug;
    let mut _24: &&[u8; 32];
    let _25: &&[u8; 32];
    let _26: &[u8; 32];

    bb0: {
        StorageLive(_3);
        _3 = &mut (*_2);
        StorageLive(_4);
        StorageLive(_5);
        _5 = const "ReferrerName";
        _4 = &(*_5);
        StorageLive(_6);
        StorageLive(_7);
        _7 = const "authority";
        _6 = &(*_7);
        StorageLive(_8);
        StorageLive(_9);
        StorageLive(_10);
        _10 = &((*_1).0: anchor_lang::prelude::Pubkey);
        _9 = &(*_10);
        _8 = move _9 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_9);
        StorageLive(_11);
        StorageLive(_12);
        _12 = const "user";
        _11 = &(*_12);
        StorageLive(_13);
        StorageLive(_14);
        StorageLive(_15);
        _15 = &((*_1).1: anchor_lang::prelude::Pubkey);
        _14 = &(*_15);
        _13 = move _14 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_14);
        StorageLive(_16);
        StorageLive(_17);
        _17 = const "user_stats";
        _16 = &(*_17);
        StorageLive(_18);
        StorageLive(_19);
        StorageLive(_20);
        _20 = &((*_1).2: anchor_lang::prelude::Pubkey);
        _19 = &(*_20);
        _18 = move _19 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_19);
        StorageLive(_21);
        StorageLive(_22);
        _22 = const "name";
        _21 = &(*_22);
        StorageLive(_23);
        StorageLive(_24);
        StorageLive(_25);
        StorageLive(_26);
        _26 = &((*_1).3: [u8; 32]);
        _25 = &_26;
        _24 = &(*_25);
        _23 = move _24 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_24);
        _0 = Formatter::<'_>::debug_struct_field4_finish(move _3, move _4, move _6, move _8, move _11, move _13, move _16, move _18, move _21, move _23) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_23);
        StorageDead(_21);
        StorageDead(_18);
        StorageDead(_16);
        StorageDead(_13);
        StorageDead(_11);
        StorageDead(_8);
        StorageDead(_6);
        StorageDead(_4);
        StorageDead(_3);
        StorageDead(_26);
        StorageDead(_25);
        StorageDead(_22);
        StorageDead(_20);
        StorageDead(_17);
        StorageDead(_15);
        StorageDead(_12);
        StorageDead(_10);
        StorageDead(_7);
        StorageDead(_5);
        return;
    }
}
