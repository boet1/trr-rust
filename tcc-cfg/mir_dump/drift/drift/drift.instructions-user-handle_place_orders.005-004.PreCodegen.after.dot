digraph Mir_0_11742 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn instructions::user::handle_place_orders(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::user::PlaceOrder&lt;ReErased&gt;&gt;, _2: std::vec::Vec&lt;state::order_params::OrderParams, std::alloc::Global&gt;) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _5: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _6: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _7: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _8: isize;<br align="left"/>let _9: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _10: !;<br align="left"/>let mut _11: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _12: ();<br align="left"/>let _13: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let _14: anchor_lang::prelude::Clock;<br align="left"/>let mut _15: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _16: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _17: isize;<br align="left"/>let _18: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _19: !;<br align="left"/>let mut _20: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _21: anchor_lang::prelude::Clock;<br align="left"/>let _22: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _23: std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _24: std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _25: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let _26: state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _27: state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _28: state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _29: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let mut _30: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, instructions::optional_accounts::AccountMaps&lt;ReErased&gt;&gt;;<br align="left"/>let mut _31: std::result::Result&lt;instructions::optional_accounts::AccountMaps&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _32: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _33: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _34: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _35: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _36: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _37: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _38: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _39: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _40: u64;<br align="left"/>let mut _41: std::option::Option&lt;state::state::OracleGuardRails&gt;;<br align="left"/>let mut _42: state::state::OracleGuardRails;<br align="left"/>let mut _43: &amp;ReErased state::state::State;<br align="left"/>let mut _44: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _45: isize;<br align="left"/>let _46: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _47: !;<br align="left"/>let mut _48: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _49: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let _50: std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;&gt;;<br align="left"/>let mut _51: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;&gt;&gt;;<br align="left"/>let mut _52: std::result::Result&lt;std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _53: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _54: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _55: isize;<br align="left"/>let _56: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _57: !;<br align="left"/>let mut _58: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _59: std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;&gt;;<br align="left"/>let _60: ();<br align="left"/>let mut _61: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _62: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _63: bool;<br align="left"/>let mut _64: usize;<br align="left"/>let mut _65: &amp;ReErased std::vec::Vec&lt;state::order_params::OrderParams, std::alloc::Global&gt;;<br align="left"/>let mut _66: ();<br align="left"/>let _67: error::ErrorCode;<br align="left"/>let _68: ();<br align="left"/>let mut _69: &amp;ReErased str;<br align="left"/>let _70: &amp;ReErased str;<br align="left"/>let mut _71: &amp;ReErased std::string::String;<br align="left"/>let _72: &amp;ReErased std::string::String;<br align="left"/>let _73: std::string::String;<br align="left"/>let _74: std::string::String;<br align="left"/>let mut _75: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _76: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _77: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _78: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _79: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _80: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _81: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _82: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _83: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _84: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _85: &amp;ReErased error::ErrorCode;<br align="left"/>let _86: &amp;ReErased error::ErrorCode;<br align="left"/>let _87: ();<br align="left"/>let mut _88: &amp;ReErased str;<br align="left"/>let _89: &amp;ReErased str;<br align="left"/>let mut _90: error::ErrorCode;<br align="left"/>let mut _91: isize;<br align="left"/>let _92: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _93: !;<br align="left"/>let mut _94: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _95: ();<br align="left"/>let _96: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _97: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _98: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _99: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _100: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _101: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _102: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _103: Closure(DefId(0:11745 ~ drift[d311]::instructions::user::handle_place_orders::{closure#0}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _104: isize;<br align="left"/>let _105: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _106: !;<br align="left"/>let mut _107: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _108: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _109: usize;<br align="left"/>let mut _110: &amp;ReErased std::vec::Vec&lt;state::order_params::OrderParams, std::alloc::Global&gt;;<br align="left"/>let _111: ();<br align="left"/>let mut _112: std::iter::Enumerate&lt;std::slice::Iter&lt;ReErased, state::order_params::OrderParams&gt;&gt;;<br align="left"/>let mut _113: std::iter::Enumerate&lt;std::slice::Iter&lt;ReErased, state::order_params::OrderParams&gt;&gt;;<br align="left"/>let mut _114: std::slice::Iter&lt;ReErased, state::order_params::OrderParams&gt;;<br align="left"/>let mut _115: &amp;ReErased [state::order_params::OrderParams];<br align="left"/>let _116: &amp;ReErased [state::order_params::OrderParams];<br align="left"/>let mut _117: &amp;ReErased std::vec::Vec&lt;state::order_params::OrderParams, std::alloc::Global&gt;;<br align="left"/>let mut _118: std::iter::Enumerate&lt;std::slice::Iter&lt;ReErased, state::order_params::OrderParams&gt;&gt;;<br align="left"/>let mut _119: ();<br align="left"/>let _120: ();<br align="left"/>let mut _121: std::option::Option&lt;(usize, &amp;ReErased state::order_params::OrderParams)&gt;;<br align="left"/>let mut _122: &amp;ReErased mut std::iter::Enumerate&lt;std::slice::Iter&lt;ReErased, state::order_params::OrderParams&gt;&gt;;<br align="left"/>let mut _123: &amp;ReErased mut std::iter::Enumerate&lt;std::slice::Iter&lt;ReErased, state::order_params::OrderParams&gt;&gt;;<br align="left"/>let mut _124: isize;<br align="left"/>let mut _125: !;<br align="left"/>let _126: usize;<br align="left"/>let _127: &amp;ReErased state::order_params::OrderParams;<br align="left"/>let _128: ();<br align="left"/>let mut _129: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _130: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _131: bool;<br align="left"/>let mut _132: &amp;ReErased state::order_params::OrderParams;<br align="left"/>let mut _133: ();<br align="left"/>let _134: error::ErrorCode;<br align="left"/>let _135: ();<br align="left"/>let mut _136: &amp;ReErased str;<br align="left"/>let _137: &amp;ReErased str;<br align="left"/>let mut _138: &amp;ReErased std::string::String;<br align="left"/>let _139: &amp;ReErased std::string::String;<br align="left"/>let _140: std::string::String;<br align="left"/>let _141: std::string::String;<br align="left"/>let mut _142: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _143: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _144: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _145: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _146: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _147: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _148: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _149: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _150: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _151: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _152: &amp;ReErased error::ErrorCode;<br align="left"/>let _153: &amp;ReErased error::ErrorCode;<br align="left"/>let _154: ();<br align="left"/>let mut _155: &amp;ReErased str;<br align="left"/>let _156: &amp;ReErased str;<br align="left"/>let mut _157: error::ErrorCode;<br align="left"/>let mut _158: isize;<br align="left"/>let _159: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _160: !;<br align="left"/>let mut _161: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _162: ();<br align="left"/>let _163: state::order_params::PlaceOrderOptions;<br align="left"/>let mut _164: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _165: bool;<br align="left"/>let mut _166: usize;<br align="left"/>let mut _167: usize;<br align="left"/>let mut _168: usize;<br align="left"/>let mut _169: (usize, bool);<br align="left"/>let mut _170: bool;<br align="left"/>let mut _171: usize;<br align="left"/>let mut _172: state::events::OrderActionExplanation;<br align="left"/>let mut _173: std::option::Option&lt;controller::position::PositionDirection&gt;;<br align="left"/>let mut _174: bool;<br align="left"/>let mut _175: &amp;ReErased state::user::MarketType;<br align="left"/>let mut _176: &amp;ReErased state::user::MarketType;<br align="left"/>let _177: state::user::MarketType;<br align="left"/>let _178: ();<br align="left"/>let mut _179: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _180: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _181: &amp;ReErased state::state::State;<br align="left"/>let _182: &amp;ReErased state::state::State;<br align="left"/>let mut _183: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _184: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _185: &amp;ReErased mut state::user::User;<br align="left"/>let mut _186: &amp;ReErased mut state::user::User;<br align="left"/>let mut _187: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _188: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _189: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _190: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _191: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _192: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let _193: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _194: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _195: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _196: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;&gt;;<br align="left"/>let _197: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;&gt;;<br align="left"/>let mut _198: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let mut _199: state::order_params::OrderParams;<br align="left"/>let mut _200: state::order_params::PlaceOrderOptions;<br align="left"/>let mut _201: isize;<br align="left"/>let _202: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _203: !;<br align="left"/>let mut _204: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _205: ();<br align="left"/>let _206: ();<br align="left"/>let mut _207: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _208: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _209: &amp;ReErased state::state::State;<br align="left"/>let _210: &amp;ReErased state::state::State;<br align="left"/>let mut _211: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _212: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _213: &amp;ReErased mut state::user::User;<br align="left"/>let mut _214: &amp;ReErased mut state::user::User;<br align="left"/>let mut _215: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _216: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _217: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _218: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _219: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _220: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let _221: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _222: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _223: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _224: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let mut _225: state::order_params::OrderParams;<br align="left"/>let mut _226: state::order_params::PlaceOrderOptions;<br align="left"/>let mut _227: isize;<br align="left"/>let _228: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _229: !;<br align="left"/>let mut _230: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _231: ();<br align="left"/>let mut _232: ();<br align="left"/>let mut _233: &amp;ReErased state::user::MarketType;<br align="left"/>let mut _234: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _235: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _236: &amp;ReErased mut instructions::user::PlaceOrder&lt;ReErased&gt;;<br align="left"/>let mut _237: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _238: &amp;ReErased mut instructions::user::PlaceOrder&lt;ReErased&gt;;<br align="left"/>let mut _239: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _240: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _241: &amp;ReErased mut instructions::user::PlaceOrder&lt;ReErased&gt;;<br align="left"/>let mut _242: &amp;ReErased mut instructions::user::PlaceOrder&lt;ReErased&gt;;<br align="left"/>let mut _243: &amp;ReErased mut instructions::user::PlaceOrder&lt;ReErased&gt;;<br align="left"/>let mut _244: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _245: &amp;ReErased mut instructions::user::PlaceOrder&lt;ReErased&gt;;<br align="left"/>let mut _246: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _247: isize;<br align="left"/>let mut _248: isize;<br align="left"/>let mut _249: isize;<br align="left"/>let mut _250: isize;<br align="left"/>let mut _251: isize;<br align="left"/>let mut _252: isize;<br align="left"/>let mut _253: isize;<br align="left"/>let mut _254: isize;<br align="left"/>let mut _255: isize;<br align="left"/>let mut _256: isize;<br align="left"/>let mut _257: isize;<br align="left"/>let mut _258: isize;<br align="left"/>let mut _259: isize;<br align="left"/>let mut _260: isize;<br align="left"/>let mut _261: isize;<br align="left"/>let mut _262: isize;<br align="left"/>let mut _263: isize;<br align="left"/>let mut _264: isize;<br align="left"/>let mut _265: isize;<br align="left"/>let mut _266: isize;<br align="left"/>let mut _267: isize;<br align="left"/>let mut _268: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _269: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _270: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _271: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug params =&gt; _2;<br align="left"/>debug residual =&gt; _9;<br align="left"/>debug val =&gt; _12;<br align="left"/>debug clock =&gt; _13;<br align="left"/>debug residual =&gt; _18;<br align="left"/>debug val =&gt; _21;<br align="left"/>debug state =&gt; _22;<br align="left"/>debug remaining_accounts =&gt; _23;<br align="left"/>debug perp_market_map =&gt; _26;<br align="left"/>debug spot_market_map =&gt; _27;<br align="left"/>debug oracle_map =&gt; _28;<br align="left"/>debug residual =&gt; _46;<br align="left"/>debug val =&gt; _49;<br align="left"/>debug high_leverage_mode_config =&gt; _50;<br align="left"/>debug residual =&gt; _56;<br align="left"/>debug val =&gt; _59;<br align="left"/>debug error_code =&gt; _67;<br align="left"/>debug res =&gt; _74;<br align="left"/>debug residual =&gt; _92;<br align="left"/>debug val =&gt; _95;<br align="left"/>debug user_key =&gt; _96;<br align="left"/>debug user =&gt; _98;<br align="left"/>debug residual =&gt; _105;<br align="left"/>debug val =&gt; _108;<br align="left"/>debug num_orders =&gt; _109;<br align="left"/>debug iter =&gt; _118;<br align="left"/>debug i =&gt; _126;<br align="left"/>debug params =&gt; _127;<br align="left"/>debug error_code =&gt; _134;<br align="left"/>debug res =&gt; _141;<br align="left"/>debug residual =&gt; _159;<br align="left"/>debug val =&gt; _162;<br align="left"/>debug options =&gt; _163;<br align="left"/>debug residual =&gt; _202;<br align="left"/>debug val =&gt; _205;<br align="left"/>debug residual =&gt; _228;<br align="left"/>debug val =&gt; _231;<br align="left"/>>;
    bb0__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_236 = deref_copy (_1.1: &amp;mut instructions::user::PlaceOrder&lt;'_&gt;)<br/>_7 = &amp;((*_236).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_237 = deref_copy (*_7)<br/>_268 = (((_237.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_6 = &amp;(*_268)<br/></td></tr><tr><td align="left">_5 = constraints::exchange_not_paused(move _6)</td></tr></table>>];
    bb1__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb2__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_8 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb3__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_4 as Continue).0: ())<br/>_3 = _12<br/>StorageDead(_12)<br/>_247 = discriminant(_4)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/></td></tr><tr><td align="left">_16 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb4__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>_9 = move ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_11)<br/>_11 = move _9<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _11)</td></tr></table>>];
    bb6__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_9)<br/>_261 = discriminant(_4)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">_15 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _16)</td></tr></table>>];
    bb8__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>_17 = discriminant(_15)<br/></td></tr><tr><td align="left">switchInt(move _17)</td></tr></table>>];
    bb9__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = move ((_15 as Continue).0: anchor_lang::prelude::Clock)<br/>_14 = move _21<br/>StorageDead(_21)<br/>_13 = &amp;_14<br/>_249 = discriminant(_15)<br/>StorageDead(_15)<br/>StorageLive(_22)<br/>_238 = deref_copy (_1.1: &amp;mut instructions::user::PlaceOrder&lt;'_&gt;)<br/>_22 = &amp;((*_238).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>_239 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_25 = &amp;(*_239)<br/></td></tr><tr><td align="left">_24 = core::slice::&lt;impl [anchor_lang::prelude::AccountInfo&lt;'_&gt;]&gt;::iter(move _25)</td></tr></table>>];
    bb10__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_18)<br/>_18 = move ((_15 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_20)<br/>_20 = move _18<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _20)</td></tr></table>>];
    bb11__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_18)<br/>_259 = discriminant(_15)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/></td></tr><tr><td align="left">_23 = &lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as Iterator&gt;::peekable(move _24)</td></tr></table>>];
    bb13__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>_33 = &amp;mut _23<br/>_32 = &amp;mut (*_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/></td></tr><tr><td align="left">_36 = BTreeSet::&lt;u16&gt;::new()</td></tr></table>>];
    bb14__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">_35 = &amp;_36<br/>_34 = &amp;(*_35)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/></td></tr><tr><td align="left">_39 = BTreeSet::&lt;u16&gt;::new()</td></tr></table>>];
    bb15__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">_38 = &amp;_39<br/>_37 = &amp;(*_38)<br/>StorageLive(_40)<br/>_40 = ((*_13).0: u64)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>_240 = deref_copy (*_22)<br/>_269 = (((_240.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_44 = &amp;(*_269)<br/></td></tr><tr><td align="left">_43 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _44)</td></tr></table>>];
    bb16__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>_42 = ((*_43).7: state::state::OracleGuardRails)<br/>_41 = Option::&lt;state::state::OracleGuardRails&gt;::Some(move _42)<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">_31 = load_maps(move _32, move _34, move _37, move _40, move _41)</td></tr></table>>];
    bb17__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_40)<br/>StorageDead(_37)<br/>StorageDead(_34)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">_30 = &lt;std::result::Result&lt;AccountMaps&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _31)</td></tr></table>>];
    bb18__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>_45 = discriminant(_30)<br/></td></tr><tr><td align="left">switchInt(move _45)</td></tr></table>>];
    bb19__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_49)<br/>_49 = move ((_30 as Continue).0: instructions::optional_accounts::AccountMaps&lt;'_&gt;)<br/>_29 = move _49<br/>StorageDead(_49)<br/>StorageLive(_26)<br/>_26 = move (_29.0: state::perp_market_map::PerpMarketMap&lt;'_&gt;)<br/>StorageLive(_27)<br/>_27 = move (_29.1: state::spot_market_map::SpotMarketMap&lt;'_&gt;)<br/>StorageLive(_28)<br/>_28 = move (_29.2: state::oracle_map::OracleMap&lt;'_&gt;)<br/>_253 = discriminant(_30)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">drop(_39)</td></tr></table>>];
    bb20__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_46)<br/>_46 = ((_30 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_48)<br/>_48 = _46<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _48)</td></tr></table>>];
    bb21__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageDead(_46)<br/>_251 = discriminant(_30)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">drop(_39)</td></tr></table>>];
    bb22__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">drop(_36)</td></tr></table>>];
    bb23__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_35)<br/>StorageDead(_33)<br/>StorageDead(_30)<br/>StorageDead(_29)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>_54 = &amp;mut _23<br/>_53 = &amp;mut (*_54)<br/></td></tr><tr><td align="left">_52 = get_high_leverage_mode_config(move _53)</td></tr></table>>];
    bb24__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/></td></tr><tr><td align="left">_51 = &lt;std::result::Result&lt;Option&lt;anchor_lang::prelude::AccountLoader&lt;'_, HighLeverageModeConfig&gt;&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _52)</td></tr></table>>];
    bb25__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>_55 = discriminant(_51)<br/></td></tr><tr><td align="left">switchInt(move _55)</td></tr></table>>];
    bb26__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_59)<br/>_59 = move ((_51 as Continue).0: std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;'_, state::high_leverage_mode_config::HighLeverageModeConfig&gt;&gt;)<br/>_50 = move _59<br/>StorageDead(_59)<br/>StorageDead(_54)<br/>StorageDead(_51)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>_65 = &amp;_2<br/></td></tr><tr><td align="left">_64 = Vec::&lt;order_params::OrderParams&gt;::len(move _65)</td></tr></table>>];
    bb27__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_56)<br/>_56 = ((_51 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_58)<br/>_58 = _56<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _58)</td></tr></table>>];
    bb28__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageDead(_56)<br/>StorageDead(_54)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>_63 = Le(move _64, const 32_usize)<br/></td></tr><tr><td align="left">switchInt(move _63)</td></tr></table>>];
    bb30__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageLive(_66)<br/>_66 = ()<br/>_62 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _66)<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageLive(_67)<br/>_67 = error::ErrorCode::DefaultError<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>_235 = const _<br/>_78 = &amp;(*_235)<br/>_77 = &amp;(*_78)<br/>_76 = move _77 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_77)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>_86 = &amp;_67<br/>_85 = &amp;(*_86)<br/></td></tr><tr><td align="left">_84 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _85)</td></tr></table>>];
    bb32__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>_83 = [move _84]<br/>StorageDead(_84)<br/>_82 = &amp;_83<br/>_81 = &amp;(*_82)<br/>_80 = move _81 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_81)<br/></td></tr><tr><td align="left">_75 = Arguments::&lt;'_&gt;::new_v1(move _76, move _80)</td></tr></table>>];
    bb33__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>StorageDead(_76)<br/></td></tr><tr><td align="left">_74 = format(move _75)</td></tr></table>>];
    bb34__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_86)<br/>StorageDead(_83)<br/>StorageDead(_82)<br/>StorageDead(_78)<br/>_73 = move _74<br/>StorageDead(_74)<br/>_72 = &amp;_73<br/>_71 = &amp;(*_72)<br/></td></tr><tr><td align="left">_70 = &lt;String as Deref&gt;::deref(move _71)</td></tr></table>>];
    bb35__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">_69 = &amp;(*_70)<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">_68 = solana_program::log::sol_log(move _69)</td></tr></table>>];
    bb36__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/></td></tr><tr><td align="left">drop(_73)</td></tr></table>>];
    bb37__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>StorageDead(_72)<br/>StorageDead(_70)<br/>StorageDead(_68)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>_89 = const &quot;max 32 order params&quot;<br/>_88 = &amp;(*_89)<br/></td></tr><tr><td align="left">_87 = solana_program::log::sol_log(move _88)</td></tr></table>>];
    bb38__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>StorageDead(_89)<br/>StorageDead(_87)<br/>StorageLive(_90)<br/>_90 = _67<br/>_62 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _90)<br/>StorageDead(_90)<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/></td></tr><tr><td align="left">_61 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _62)</td></tr></table>>];
    bb40__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>_91 = discriminant(_61)<br/></td></tr><tr><td align="left">switchInt(move _91)</td></tr></table>>];
    bb41__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageLive(_95)<br/>_95 = ((_61 as Continue).0: ())<br/>_60 = _95<br/>StorageDead(_95)<br/>StorageDead(_61)<br/>StorageDead(_60)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>_241 = deref_copy (_1.1: &amp;mut instructions::user::PlaceOrder&lt;'_&gt;)<br/>_97 = &amp;((*_241).1: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_96 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt; as anchor_lang::Key&gt;::key(move _97)</td></tr></table>>];
    bb42__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageLive(_92)<br/>_92 = ((_61 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_94)<br/>_94 = _92<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _94)</td></tr></table>>];
    bb43__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/>StorageDead(_92)<br/>StorageDead(_61)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>_242 = deref_copy (_1.1: &amp;mut instructions::user::PlaceOrder&lt;'_&gt;)<br/>_102 = &amp;((*_242).1: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_101 = anchor_lang::prelude::AccountLoader::&lt;'_, User&gt;::load_mut(move _102)</td></tr></table>>];
    bb45__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>StorageLive(_103)<br/>_103 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_100 = std::result::Result::&lt;RefMut&lt;'_, User&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _101, move _103)</td></tr></table>>];
    bb46__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>StorageDead(_101)<br/></td></tr><tr><td align="left">_99 = &lt;std::result::Result&lt;RefMut&lt;'_, User&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _100)</td></tr></table>>];
    bb47__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>_104 = discriminant(_99)<br/></td></tr><tr><td align="left">switchInt(move _104)</td></tr></table>>];
    bb48__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageLive(_108)<br/>_108 = move ((_99 as Continue).0: std::cell::RefMut&lt;'_, state::user::User&gt;)<br/>_98 = move _108<br/>StorageDead(_108)<br/>_257 = discriminant(_99)<br/>StorageDead(_99)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>_110 = &amp;_2<br/></td></tr><tr><td align="left">_109 = Vec::&lt;order_params::OrderParams&gt;::len(move _110)</td></tr></table>>];
    bb49__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageLive(_105)<br/>_105 = ((_99 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_107)<br/>_107 = _105<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _107)</td></tr></table>>];
    bb50__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>StorageDead(_105)<br/>_255 = discriminant(_99)<br/>StorageDead(_99)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb51__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>_117 = &amp;_2<br/></td></tr><tr><td align="left">_116 = &lt;Vec&lt;order_params::OrderParams&gt; as Deref&gt;::deref(move _117)</td></tr></table>>];
    bb52__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">_115 = &amp;(*_116)<br/>StorageDead(_117)<br/></td></tr><tr><td align="left">_114 = core::slice::&lt;impl [order_params::OrderParams]&gt;::iter(move _115)</td></tr></table>>];
    bb53__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_115)<br/></td></tr><tr><td align="left">_113 = &lt;std::slice::Iter&lt;'_, order_params::OrderParams&gt; as Iterator&gt;::enumerate(move _114)</td></tr></table>>];
    bb54__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/></td></tr><tr><td align="left">_112 = &lt;Enumerate&lt;std::slice::Iter&lt;'_, order_params::OrderParams&gt;&gt; as IntoIterator&gt;::into_iter(move _113)</td></tr></table>>];
    bb55__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_113)<br/>StorageLive(_118)<br/>_118 = move _112<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb56__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>_123 = &amp;mut _118<br/>_122 = &amp;mut (*_123)<br/></td></tr><tr><td align="left">_121 = &lt;Enumerate&lt;std::slice::Iter&lt;'_, order_params::OrderParams&gt;&gt; as Iterator&gt;::next(move _122)</td></tr></table>>];
    bb57__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/>_124 = discriminant(_121)<br/></td></tr><tr><td align="left">switchInt(move _124)</td></tr></table>>];
    bb58__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageLive(_126)<br/>_126 = (((_121 as Some).0: (usize, &amp;state::order_params::OrderParams)).0: usize)<br/>StorageLive(_127)<br/>_127 = (((_121 as Some).0: (usize, &amp;state::order_params::OrderParams)).1: &amp;state::order_params::OrderParams)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>_132 = &amp;(*_127)<br/></td></tr><tr><td align="left">_131 = order_params::OrderParams::is_immediate_or_cancel(move _132)</td></tr></table>>];
    bb59__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">_111 = const ()<br/>StorageDead(_123)<br/>StorageDead(_121)<br/>StorageDead(_120)<br/>StorageDead(_118)<br/>StorageDead(_116)<br/>StorageDead(_112)<br/>StorageDead(_111)<br/>StorageLive(_232)<br/>_232 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _232)<br/>StorageDead(_232)<br/>StorageDead(_109)<br/></td></tr><tr><td align="left">drop(_98)</td></tr></table>>];
    bb60__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left">switchInt(move _131)</td></tr></table>>];
    bb61__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_132)<br/>StorageLive(_134)<br/>_134 = error::ErrorCode::InvalidOrderIOC<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>_234 = const _<br/>_145 = &amp;(*_234)<br/>_144 = &amp;(*_145)<br/>_143 = move _144 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_144)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>StorageLive(_152)<br/>StorageLive(_153)<br/>_153 = &amp;_134<br/>_152 = &amp;(*_153)<br/></td></tr><tr><td align="left">_151 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _152)</td></tr></table>>];
    bb62__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_132)<br/>StorageLive(_133)<br/>_133 = ()<br/>_130 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _133)<br/>StorageDead(_133)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb63__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_152)<br/>_150 = [move _151]<br/>StorageDead(_151)<br/>_149 = &amp;_150<br/>_148 = &amp;(*_149)<br/>_147 = move _148 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_148)<br/></td></tr><tr><td align="left">_142 = Arguments::&lt;'_&gt;::new_v1(move _143, move _147)</td></tr></table>>];
    bb64__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_147)<br/>StorageDead(_143)<br/></td></tr><tr><td align="left">_141 = format(move _142)</td></tr></table>>];
    bb65__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_142)<br/>StorageDead(_153)<br/>StorageDead(_150)<br/>StorageDead(_149)<br/>StorageDead(_145)<br/>_140 = move _141<br/>StorageDead(_141)<br/>_139 = &amp;_140<br/>_138 = &amp;(*_139)<br/></td></tr><tr><td align="left">_137 = &lt;String as Deref&gt;::deref(move _138)</td></tr></table>>];
    bb66__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">_136 = &amp;(*_137)<br/>StorageDead(_138)<br/></td></tr><tr><td align="left">_135 = solana_program::log::sol_log(move _136)</td></tr></table>>];
    bb67__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_136)<br/></td></tr><tr><td align="left">drop(_140)</td></tr></table>>];
    bb68__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_140)<br/>StorageDead(_139)<br/>StorageDead(_137)<br/>StorageDead(_135)<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>_156 = const &quot;immediate_or_cancel order must be in place_and_make or place_and_take&quot;<br/>_155 = &amp;(*_156)<br/></td></tr><tr><td align="left">_154 = solana_program::log::sol_log(move _155)</td></tr></table>>];
    bb69__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_155)<br/>StorageDead(_156)<br/>StorageDead(_154)<br/>StorageLive(_157)<br/>_157 = _134<br/>_130 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _157)<br/>StorageDead(_157)<br/>StorageDead(_134)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb70__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_131)<br/></td></tr><tr><td align="left">_129 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _130)</td></tr></table>>];
    bb71__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_130)<br/>_158 = discriminant(_129)<br/></td></tr><tr><td align="left">switchInt(move _158)</td></tr></table>>];
    bb72__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageLive(_162)<br/>_162 = ((_129 as Continue).0: ())<br/>_128 = _162<br/>StorageDead(_162)<br/>StorageDead(_129)<br/>StorageDead(_128)<br/>StorageLive(_163)<br/>StorageLive(_164)<br/>_164 = Option::&lt;u64&gt;::None<br/>StorageLive(_165)<br/>StorageLive(_166)<br/>_166 = _126<br/>StorageLive(_167)<br/>StorageLive(_168)<br/>_168 = _109<br/>_169 = CheckedSub(_168, const 1_usize)<br/></td></tr><tr><td align="left">assert(!move (_169.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, move _168, const 1_usize)</td></tr></table>>];
    bb73__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageLive(_159)<br/>_159 = ((_129 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_161)<br/>_161 = _159<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _161)</td></tr></table>>];
    bb74__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_161)<br/>StorageDead(_159)<br/>StorageDead(_129)<br/>StorageDead(_128)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb75__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">_167 = move (_169.0: usize)<br/>StorageDead(_168)<br/>_165 = Eq(move _166, move _167)<br/>StorageDead(_167)<br/>StorageDead(_166)<br/>StorageLive(_170)<br/>StorageLive(_171)<br/>_171 = _126<br/>_170 = Eq(move _171, const 0_usize)<br/>StorageDead(_171)<br/>StorageLive(_172)<br/>_172 = OrderActionExplanation::None<br/>StorageLive(_173)<br/>_173 = Option::&lt;controller::position::PositionDirection&gt;::None<br/>_163 = PlaceOrderOptions { signed_msg_taker_order_slot: move _164, try_expire_orders: move _170, enforce_margin_check: move _165, risk_increasing: const false, explanation: move _172, existing_position_direction_override: move _173 }<br/>StorageDead(_173)<br/>StorageDead(_172)<br/>StorageDead(_170)<br/>StorageDead(_165)<br/>StorageDead(_164)<br/>StorageLive(_174)<br/>StorageLive(_175)<br/>_175 = &amp;((*_127).1: state::user::MarketType)<br/>StorageLive(_176)<br/>_233 = const _<br/>_176 = &amp;(*_233)<br/></td></tr><tr><td align="left">_174 = &lt;state::user::MarketType as PartialEq&gt;::eq(move _175, move _176)</td></tr></table>>];
    bb76__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left">switchInt(move _174)</td></tr></table>>];
    bb77__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_176)<br/>StorageDead(_175)<br/>StorageLive(_178)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>StorageLive(_181)<br/>StorageLive(_182)<br/>StorageLive(_183)<br/>StorageLive(_184)<br/>_243 = deref_copy (_1.1: &amp;mut instructions::user::PlaceOrder&lt;'_&gt;)<br/>_184 = &amp;((*_243).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_244 = deref_copy (*_184)<br/>_270 = (((_244.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_183 = &amp;(*_270)<br/></td></tr><tr><td align="left">_182 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _183)</td></tr></table>>];
    bb78__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">_181 = &amp;(*_182)<br/>StorageDead(_183)<br/>StorageLive(_185)<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>_188 = &amp;mut _98<br/>_187 = &amp;mut (*_188)<br/></td></tr><tr><td align="left">_186 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _187)</td></tr></table>>];
    bb79__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">_185 = &amp;mut (*_186)<br/>StorageDead(_187)<br/>StorageLive(_189)<br/>_189 = _96<br/>StorageLive(_190)<br/>StorageLive(_191)<br/>_191 = &amp;_26<br/>_190 = &amp;(*_191)<br/>StorageLive(_192)<br/>StorageLive(_193)<br/>_193 = &amp;_27<br/>_192 = &amp;(*_193)<br/>StorageLive(_194)<br/>StorageLive(_195)<br/>_195 = &amp;mut _28<br/>_194 = &amp;mut (*_195)<br/>StorageLive(_196)<br/>StorageLive(_197)<br/>_197 = &amp;_50<br/>_196 = &amp;(*_197)<br/>StorageLive(_198)<br/>_198 = &amp;(*_13)<br/>StorageLive(_199)<br/>_199 = (*_127)<br/>StorageLive(_200)<br/>_200 = move _163<br/></td></tr><tr><td align="left">_180 = controller::orders::place_perp_order(move _181, move _185, move _189, move _190, move _192, move _194, move _196, move _198, move _199, move _200)</td></tr></table>>];
    bb80__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_200)<br/>StorageDead(_199)<br/>StorageDead(_198)<br/>StorageDead(_196)<br/>StorageDead(_194)<br/>StorageDead(_192)<br/>StorageDead(_190)<br/>StorageDead(_189)<br/>StorageDead(_185)<br/>StorageDead(_181)<br/></td></tr><tr><td align="left">_179 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _180)</td></tr></table>>];
    bb81__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_180)<br/>_201 = discriminant(_179)<br/></td></tr><tr><td align="left">switchInt(move _201)</td></tr></table>>];
    bb82__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageLive(_205)<br/>_205 = ((_179 as Continue).0: ())<br/>_178 = _205<br/>StorageDead(_205)<br/>StorageDead(_197)<br/>StorageDead(_195)<br/>StorageDead(_193)<br/>StorageDead(_191)<br/>StorageDead(_188)<br/>StorageDead(_186)<br/>StorageDead(_184)<br/>StorageDead(_182)<br/>StorageDead(_179)<br/>StorageDead(_178)<br/>_120 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb83__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageLive(_202)<br/>_202 = ((_179 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_204)<br/>_204 = _202<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _204)</td></tr></table>>];
    bb84__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_204)<br/>StorageDead(_202)<br/>StorageDead(_197)<br/>StorageDead(_195)<br/>StorageDead(_193)<br/>StorageDead(_191)<br/>StorageDead(_188)<br/>StorageDead(_186)<br/>StorageDead(_184)<br/>StorageDead(_182)<br/>StorageDead(_179)<br/>StorageDead(_178)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb85__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_176)<br/>StorageDead(_175)<br/>StorageLive(_206)<br/>StorageLive(_207)<br/>StorageLive(_208)<br/>StorageLive(_209)<br/>StorageLive(_210)<br/>StorageLive(_211)<br/>StorageLive(_212)<br/>_245 = deref_copy (_1.1: &amp;mut instructions::user::PlaceOrder&lt;'_&gt;)<br/>_212 = &amp;((*_245).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_246 = deref_copy (*_212)<br/>_271 = (((_246.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_211 = &amp;(*_271)<br/></td></tr><tr><td align="left">_210 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _211)</td></tr></table>>];
    bb86__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">_209 = &amp;(*_210)<br/>StorageDead(_211)<br/>StorageLive(_213)<br/>StorageLive(_214)<br/>StorageLive(_215)<br/>StorageLive(_216)<br/>_216 = &amp;mut _98<br/>_215 = &amp;mut (*_216)<br/></td></tr><tr><td align="left">_214 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _215)</td></tr></table>>];
    bb87__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">_213 = &amp;mut (*_214)<br/>StorageDead(_215)<br/>StorageLive(_217)<br/>_217 = _96<br/>StorageLive(_218)<br/>StorageLive(_219)<br/>_219 = &amp;_26<br/>_218 = &amp;(*_219)<br/>StorageLive(_220)<br/>StorageLive(_221)<br/>_221 = &amp;_27<br/>_220 = &amp;(*_221)<br/>StorageLive(_222)<br/>StorageLive(_223)<br/>_223 = &amp;mut _28<br/>_222 = &amp;mut (*_223)<br/>StorageLive(_224)<br/>_224 = &amp;(*_13)<br/>StorageLive(_225)<br/>_225 = (*_127)<br/>StorageLive(_226)<br/>_226 = move _163<br/></td></tr><tr><td align="left">_208 = controller::orders::place_spot_order(move _209, move _213, move _217, move _218, move _220, move _222, move _224, move _225, move _226)</td></tr></table>>];
    bb88__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_226)<br/>StorageDead(_225)<br/>StorageDead(_224)<br/>StorageDead(_222)<br/>StorageDead(_220)<br/>StorageDead(_218)<br/>StorageDead(_217)<br/>StorageDead(_213)<br/>StorageDead(_209)<br/></td></tr><tr><td align="left">_207 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _208)</td></tr></table>>];
    bb89__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_208)<br/>_227 = discriminant(_207)<br/></td></tr><tr><td align="left">switchInt(move _227)</td></tr></table>>];
    bb90__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageLive(_231)<br/>_231 = ((_207 as Continue).0: ())<br/>_206 = _231<br/>StorageDead(_231)<br/>StorageDead(_223)<br/>StorageDead(_221)<br/>StorageDead(_219)<br/>StorageDead(_216)<br/>StorageDead(_214)<br/>StorageDead(_212)<br/>StorageDead(_210)<br/>StorageDead(_207)<br/>StorageDead(_206)<br/>_120 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb91__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageLive(_228)<br/>_228 = ((_207 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_230)<br/>_230 = _228<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _230)</td></tr></table>>];
    bb92__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_230)<br/>StorageDead(_228)<br/>StorageDead(_223)<br/>StorageDead(_221)<br/>StorageDead(_219)<br/>StorageDead(_216)<br/>StorageDead(_214)<br/>StorageDead(_212)<br/>StorageDead(_210)<br/>StorageDead(_207)<br/>StorageDead(_206)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb93__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_174)<br/>StorageDead(_163)<br/>StorageDead(_127)<br/>StorageDead(_126)<br/>StorageDead(_123)<br/>StorageDead(_121)<br/>StorageDead(_120)<br/>_119 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb94__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>StorageDead(_96)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">drop(_28)</td></tr></table>>];
    bb95__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/></td></tr><tr><td align="left">drop(_27)</td></tr></table>>];
    bb96__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/></td></tr><tr><td align="left">drop(_26)</td></tr></table>>];
    bb97__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">drop(_2)</td></tr></table>>];
    bb98__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_174)<br/>StorageDead(_163)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb99__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/>StorageDead(_126)<br/>StorageDead(_123)<br/>StorageDead(_121)<br/>StorageDead(_120)<br/>StorageDead(_118)<br/>StorageDead(_116)<br/>StorageDead(_112)<br/>StorageDead(_111)<br/>StorageDead(_109)<br/></td></tr><tr><td align="left">drop(_98)</td></tr></table>>];
    bb100__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>StorageDead(_96)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb101__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/></td></tr><tr><td align="left">drop(_28)</td></tr></table>>];
    bb102__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/></td></tr><tr><td align="left">drop(_27)</td></tr></table>>];
    bb103__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/></td></tr><tr><td align="left">drop(_26)</td></tr></table>>];
    bb104__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb105__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">drop(_36)</td></tr></table>>];
    bb106__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_35)<br/>StorageDead(_33)<br/>StorageDead(_30)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb107__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb108__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb109__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left">drop(_2)</td></tr></table>>];
    bb110__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left">return</td></tr></table>>];
    bb111__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">111 (cleanup)</td></tr><tr><td align="left">drop(_140)</td></tr></table>>];
    bb112__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">112 (cleanup)</td></tr><tr><td align="left">drop(_98)</td></tr></table>>];
    bb113__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">113 (cleanup)</td></tr><tr><td align="left">drop(_73)</td></tr></table>>];
    bb114__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">114 (cleanup)</td></tr><tr><td align="left">drop(_36)</td></tr></table>>];
    bb115__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">115 (cleanup)</td></tr><tr><td align="left">drop(_28)</td></tr></table>>];
    bb116__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">116 (cleanup)</td></tr><tr><td align="left">drop(_27)</td></tr></table>>];
    bb117__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">117 (cleanup)</td></tr><tr><td align="left">drop(_26)</td></tr></table>>];
    bb118__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">118 (cleanup)</td></tr><tr><td align="left">drop(_39)</td></tr></table>>];
    bb119__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">119 (cleanup)</td></tr><tr><td align="left">drop(_36)</td></tr></table>>];
    bb120__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">120 (cleanup)</td></tr><tr><td align="left">drop(_2)</td></tr></table>>];
    bb121__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">121 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb122__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">122 (cleanup)</td></tr><tr><td align="left" balign="left">_263 = discriminant(_99)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb123__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">123 (cleanup)</td></tr><tr><td align="left" balign="left">_265 = discriminant(_30)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb124__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">124 (cleanup)</td></tr><tr><td align="left" balign="left">_266 = discriminant(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb125__0_11742 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">125 (cleanup)</td></tr><tr><td align="left" balign="left">_267 = discriminant(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_11742 -> bb1__0_11742 [label="return"];
    bb0__0_11742 -> bb120__0_11742 [label="unwind"];
    bb1__0_11742 -> bb2__0_11742 [label="return"];
    bb1__0_11742 -> bb120__0_11742 [label="unwind"];
    bb2__0_11742 -> bb3__0_11742 [label="0"];
    bb2__0_11742 -> bb5__0_11742 [label="1"];
    bb2__0_11742 -> bb4__0_11742 [label="otherwise"];
    bb3__0_11742 -> bb7__0_11742 [label="return"];
    bb3__0_11742 -> bb120__0_11742 [label="unwind"];
    bb5__0_11742 -> bb6__0_11742 [label="return"];
    bb5__0_11742 -> bb125__0_11742 [label="unwind"];
    bb6__0_11742 -> bb109__0_11742 [label=""];
    bb7__0_11742 -> bb8__0_11742 [label="return"];
    bb7__0_11742 -> bb120__0_11742 [label="unwind"];
    bb8__0_11742 -> bb9__0_11742 [label="0"];
    bb8__0_11742 -> bb10__0_11742 [label="1"];
    bb8__0_11742 -> bb4__0_11742 [label="otherwise"];
    bb9__0_11742 -> bb12__0_11742 [label="return"];
    bb9__0_11742 -> bb120__0_11742 [label="unwind"];
    bb10__0_11742 -> bb11__0_11742 [label="return"];
    bb10__0_11742 -> bb124__0_11742 [label="unwind"];
    bb11__0_11742 -> bb108__0_11742 [label=""];
    bb12__0_11742 -> bb13__0_11742 [label="return"];
    bb12__0_11742 -> bb120__0_11742 [label="unwind"];
    bb13__0_11742 -> bb14__0_11742 [label="return"];
    bb13__0_11742 -> bb120__0_11742 [label="unwind"];
    bb14__0_11742 -> bb15__0_11742 [label="return"];
    bb14__0_11742 -> bb119__0_11742 [label="unwind"];
    bb15__0_11742 -> bb16__0_11742 [label="return"];
    bb15__0_11742 -> bb118__0_11742 [label="unwind"];
    bb16__0_11742 -> bb17__0_11742 [label="return"];
    bb16__0_11742 -> bb118__0_11742 [label="unwind"];
    bb17__0_11742 -> bb18__0_11742 [label="return"];
    bb17__0_11742 -> bb118__0_11742 [label="unwind"];
    bb18__0_11742 -> bb19__0_11742 [label="0"];
    bb18__0_11742 -> bb20__0_11742 [label="1"];
    bb18__0_11742 -> bb4__0_11742 [label="otherwise"];
    bb19__0_11742 -> bb22__0_11742 [label="return"];
    bb19__0_11742 -> bb114__0_11742 [label="unwind"];
    bb20__0_11742 -> bb21__0_11742 [label="return"];
    bb20__0_11742 -> bb123__0_11742 [label="unwind"];
    bb21__0_11742 -> bb105__0_11742 [label="return"];
    bb21__0_11742 -> bb119__0_11742 [label="unwind"];
    bb22__0_11742 -> bb23__0_11742 [label="return"];
    bb22__0_11742 -> bb115__0_11742 [label="unwind"];
    bb23__0_11742 -> bb24__0_11742 [label="return"];
    bb23__0_11742 -> bb115__0_11742 [label="unwind"];
    bb24__0_11742 -> bb25__0_11742 [label="return"];
    bb24__0_11742 -> bb115__0_11742 [label="unwind"];
    bb25__0_11742 -> bb26__0_11742 [label="0"];
    bb25__0_11742 -> bb27__0_11742 [label="1"];
    bb25__0_11742 -> bb4__0_11742 [label="otherwise"];
    bb26__0_11742 -> bb29__0_11742 [label="return"];
    bb26__0_11742 -> bb115__0_11742 [label="unwind"];
    bb27__0_11742 -> bb28__0_11742 [label="return"];
    bb27__0_11742 -> bb115__0_11742 [label="unwind"];
    bb28__0_11742 -> bb101__0_11742 [label=""];
    bb29__0_11742 -> bb31__0_11742 [label="0"];
    bb29__0_11742 -> bb30__0_11742 [label="otherwise"];
    bb30__0_11742 -> bb39__0_11742 [label=""];
    bb31__0_11742 -> bb32__0_11742 [label="return"];
    bb31__0_11742 -> bb115__0_11742 [label="unwind"];
    bb32__0_11742 -> bb33__0_11742 [label="return"];
    bb32__0_11742 -> bb115__0_11742 [label="unwind"];
    bb33__0_11742 -> bb34__0_11742 [label="return"];
    bb33__0_11742 -> bb115__0_11742 [label="unwind"];
    bb34__0_11742 -> bb35__0_11742 [label="return"];
    bb34__0_11742 -> bb113__0_11742 [label="unwind"];
    bb35__0_11742 -> bb36__0_11742 [label="return"];
    bb35__0_11742 -> bb113__0_11742 [label="unwind"];
    bb36__0_11742 -> bb37__0_11742 [label="return"];
    bb36__0_11742 -> bb115__0_11742 [label="unwind"];
    bb37__0_11742 -> bb38__0_11742 [label="return"];
    bb37__0_11742 -> bb115__0_11742 [label="unwind"];
    bb38__0_11742 -> bb39__0_11742 [label=""];
    bb39__0_11742 -> bb40__0_11742 [label="return"];
    bb39__0_11742 -> bb115__0_11742 [label="unwind"];
    bb40__0_11742 -> bb41__0_11742 [label="0"];
    bb40__0_11742 -> bb42__0_11742 [label="1"];
    bb40__0_11742 -> bb4__0_11742 [label="otherwise"];
    bb41__0_11742 -> bb44__0_11742 [label="return"];
    bb41__0_11742 -> bb115__0_11742 [label="unwind"];
    bb42__0_11742 -> bb43__0_11742 [label="return"];
    bb42__0_11742 -> bb115__0_11742 [label="unwind"];
    bb43__0_11742 -> bb101__0_11742 [label=""];
    bb44__0_11742 -> bb45__0_11742 [label="return"];
    bb44__0_11742 -> bb115__0_11742 [label="unwind"];
    bb45__0_11742 -> bb46__0_11742 [label="return"];
    bb45__0_11742 -> bb115__0_11742 [label="unwind"];
    bb46__0_11742 -> bb47__0_11742 [label="return"];
    bb46__0_11742 -> bb115__0_11742 [label="unwind"];
    bb47__0_11742 -> bb48__0_11742 [label="0"];
    bb47__0_11742 -> bb49__0_11742 [label="1"];
    bb47__0_11742 -> bb4__0_11742 [label="otherwise"];
    bb48__0_11742 -> bb51__0_11742 [label="return"];
    bb48__0_11742 -> bb112__0_11742 [label="unwind"];
    bb49__0_11742 -> bb50__0_11742 [label="return"];
    bb49__0_11742 -> bb122__0_11742 [label="unwind"];
    bb50__0_11742 -> bb100__0_11742 [label=""];
    bb51__0_11742 -> bb52__0_11742 [label="return"];
    bb51__0_11742 -> bb112__0_11742 [label="unwind"];
    bb52__0_11742 -> bb53__0_11742 [label="return"];
    bb52__0_11742 -> bb112__0_11742 [label="unwind"];
    bb53__0_11742 -> bb54__0_11742 [label="return"];
    bb53__0_11742 -> bb112__0_11742 [label="unwind"];
    bb54__0_11742 -> bb55__0_11742 [label="return"];
    bb54__0_11742 -> bb112__0_11742 [label="unwind"];
    bb55__0_11742 -> bb56__0_11742 [label=""];
    bb56__0_11742 -> bb57__0_11742 [label="return"];
    bb56__0_11742 -> bb112__0_11742 [label="unwind"];
    bb57__0_11742 -> bb59__0_11742 [label="0"];
    bb57__0_11742 -> bb58__0_11742 [label="1"];
    bb57__0_11742 -> bb4__0_11742 [label="otherwise"];
    bb58__0_11742 -> bb60__0_11742 [label="return"];
    bb58__0_11742 -> bb112__0_11742 [label="unwind"];
    bb59__0_11742 -> bb94__0_11742 [label="return"];
    bb59__0_11742 -> bb115__0_11742 [label="unwind"];
    bb60__0_11742 -> bb62__0_11742 [label="0"];
    bb60__0_11742 -> bb61__0_11742 [label="otherwise"];
    bb61__0_11742 -> bb63__0_11742 [label="return"];
    bb61__0_11742 -> bb112__0_11742 [label="unwind"];
    bb62__0_11742 -> bb70__0_11742 [label=""];
    bb63__0_11742 -> bb64__0_11742 [label="return"];
    bb63__0_11742 -> bb112__0_11742 [label="unwind"];
    bb64__0_11742 -> bb65__0_11742 [label="return"];
    bb64__0_11742 -> bb112__0_11742 [label="unwind"];
    bb65__0_11742 -> bb66__0_11742 [label="return"];
    bb65__0_11742 -> bb111__0_11742 [label="unwind"];
    bb66__0_11742 -> bb67__0_11742 [label="return"];
    bb66__0_11742 -> bb111__0_11742 [label="unwind"];
    bb67__0_11742 -> bb68__0_11742 [label="return"];
    bb67__0_11742 -> bb112__0_11742 [label="unwind"];
    bb68__0_11742 -> bb69__0_11742 [label="return"];
    bb68__0_11742 -> bb112__0_11742 [label="unwind"];
    bb69__0_11742 -> bb70__0_11742 [label=""];
    bb70__0_11742 -> bb71__0_11742 [label="return"];
    bb70__0_11742 -> bb112__0_11742 [label="unwind"];
    bb71__0_11742 -> bb72__0_11742 [label="0"];
    bb71__0_11742 -> bb73__0_11742 [label="1"];
    bb71__0_11742 -> bb4__0_11742 [label="otherwise"];
    bb72__0_11742 -> bb75__0_11742 [label="success"];
    bb72__0_11742 -> bb112__0_11742 [label="unwind"];
    bb73__0_11742 -> bb74__0_11742 [label="return"];
    bb73__0_11742 -> bb112__0_11742 [label="unwind"];
    bb74__0_11742 -> bb99__0_11742 [label=""];
    bb75__0_11742 -> bb76__0_11742 [label="return"];
    bb75__0_11742 -> bb112__0_11742 [label="unwind"];
    bb76__0_11742 -> bb85__0_11742 [label="0"];
    bb76__0_11742 -> bb77__0_11742 [label="otherwise"];
    bb77__0_11742 -> bb78__0_11742 [label="return"];
    bb77__0_11742 -> bb112__0_11742 [label="unwind"];
    bb78__0_11742 -> bb79__0_11742 [label="return"];
    bb78__0_11742 -> bb112__0_11742 [label="unwind"];
    bb79__0_11742 -> bb80__0_11742 [label="return"];
    bb79__0_11742 -> bb112__0_11742 [label="unwind"];
    bb80__0_11742 -> bb81__0_11742 [label="return"];
    bb80__0_11742 -> bb112__0_11742 [label="unwind"];
    bb81__0_11742 -> bb82__0_11742 [label="0"];
    bb81__0_11742 -> bb83__0_11742 [label="1"];
    bb81__0_11742 -> bb4__0_11742 [label="otherwise"];
    bb82__0_11742 -> bb93__0_11742 [label=""];
    bb83__0_11742 -> bb84__0_11742 [label="return"];
    bb83__0_11742 -> bb112__0_11742 [label="unwind"];
    bb84__0_11742 -> bb98__0_11742 [label=""];
    bb85__0_11742 -> bb86__0_11742 [label="return"];
    bb85__0_11742 -> bb112__0_11742 [label="unwind"];
    bb86__0_11742 -> bb87__0_11742 [label="return"];
    bb86__0_11742 -> bb112__0_11742 [label="unwind"];
    bb87__0_11742 -> bb88__0_11742 [label="return"];
    bb87__0_11742 -> bb112__0_11742 [label="unwind"];
    bb88__0_11742 -> bb89__0_11742 [label="return"];
    bb88__0_11742 -> bb112__0_11742 [label="unwind"];
    bb89__0_11742 -> bb90__0_11742 [label="0"];
    bb89__0_11742 -> bb91__0_11742 [label="1"];
    bb89__0_11742 -> bb4__0_11742 [label="otherwise"];
    bb90__0_11742 -> bb93__0_11742 [label=""];
    bb91__0_11742 -> bb92__0_11742 [label="return"];
    bb91__0_11742 -> bb112__0_11742 [label="unwind"];
    bb92__0_11742 -> bb98__0_11742 [label=""];
    bb93__0_11742 -> bb56__0_11742 [label=""];
    bb94__0_11742 -> bb95__0_11742 [label="return"];
    bb94__0_11742 -> bb116__0_11742 [label="unwind"];
    bb95__0_11742 -> bb96__0_11742 [label="return"];
    bb95__0_11742 -> bb117__0_11742 [label="unwind"];
    bb96__0_11742 -> bb97__0_11742 [label="return"];
    bb96__0_11742 -> bb120__0_11742 [label="unwind"];
    bb97__0_11742 -> bb110__0_11742 [label="return"];
    bb97__0_11742 -> bb121__0_11742 [label="unwind"];
    bb98__0_11742 -> bb99__0_11742 [label=""];
    bb99__0_11742 -> bb100__0_11742 [label="return"];
    bb99__0_11742 -> bb115__0_11742 [label="unwind"];
    bb100__0_11742 -> bb101__0_11742 [label=""];
    bb101__0_11742 -> bb102__0_11742 [label="return"];
    bb101__0_11742 -> bb116__0_11742 [label="unwind"];
    bb102__0_11742 -> bb103__0_11742 [label="return"];
    bb102__0_11742 -> bb117__0_11742 [label="unwind"];
    bb103__0_11742 -> bb104__0_11742 [label="return"];
    bb103__0_11742 -> bb120__0_11742 [label="unwind"];
    bb104__0_11742 -> bb107__0_11742 [label=""];
    bb105__0_11742 -> bb106__0_11742 [label="return"];
    bb105__0_11742 -> bb120__0_11742 [label="unwind"];
    bb106__0_11742 -> bb107__0_11742 [label=""];
    bb107__0_11742 -> bb108__0_11742 [label=""];
    bb108__0_11742 -> bb109__0_11742 [label=""];
    bb109__0_11742 -> bb110__0_11742 [label="return"];
    bb109__0_11742 -> bb121__0_11742 [label="unwind"];
    bb111__0_11742 -> bb112__0_11742 [label="return"];
    bb112__0_11742 -> bb115__0_11742 [label="return"];
    bb113__0_11742 -> bb115__0_11742 [label="return"];
    bb114__0_11742 -> bb115__0_11742 [label="return"];
    bb115__0_11742 -> bb116__0_11742 [label="return"];
    bb116__0_11742 -> bb117__0_11742 [label="return"];
    bb117__0_11742 -> bb120__0_11742 [label="return"];
    bb118__0_11742 -> bb119__0_11742 [label="return"];
    bb119__0_11742 -> bb120__0_11742 [label="return"];
    bb120__0_11742 -> bb121__0_11742 [label="return"];
    bb122__0_11742 -> bb115__0_11742 [label=""];
    bb123__0_11742 -> bb118__0_11742 [label=""];
    bb124__0_11742 -> bb120__0_11742 [label=""];
    bb125__0_11742 -> bb120__0_11742 [label=""];
}
