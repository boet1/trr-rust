digraph Mir_0_2384 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_liability_transfer_implied_by_asset_amount(_1: u128, _2: u32, _3: u32, _4: i64, _5: u32, _6: u32, _7: i64) -&gt; std::result::Result&lt;u128, error::ErrorCode&gt;<br align="left"/>let _8: u128;<br align="left"/>let _9: u128;<br align="left"/>let mut _10: (u128, u128);<br align="left"/>let mut _11: bool;<br align="left"/>let mut _12: u32;<br align="left"/>let mut _13: u32;<br align="left"/>let mut _14: u128;<br align="left"/>let mut _15: u32;<br align="left"/>let mut _16: u32;<br align="left"/>let mut _17: u32;<br align="left"/>let mut _18: (u32, bool);<br align="left"/>let mut _19: u128;<br align="left"/>let mut _20: u32;<br align="left"/>let mut _21: u32;<br align="left"/>let mut _22: u32;<br align="left"/>let mut _23: (u32, bool);<br align="left"/>let mut _24: u128;<br align="left"/>let mut _25: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _26: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _27: u128;<br align="left"/>let mut _28: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _29: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _30: u128;<br align="left"/>let mut _31: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _32: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _33: u128;<br align="left"/>let mut _34: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _35: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _36: u128;<br align="left"/>let mut _37: u128;<br align="left"/>let mut _38: isize;<br align="left"/>let _39: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _40: !;<br align="left"/>let mut _41: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _42: u128;<br align="left"/>let mut _43: u128;<br align="left"/>let mut _44: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _45: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _46: i64;<br align="left"/>let mut _47: isize;<br align="left"/>let _48: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _49: !;<br align="left"/>let mut _50: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _51: u128;<br align="left"/>let mut _52: isize;<br align="left"/>let _53: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _54: !;<br align="left"/>let mut _55: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _56: u128;<br align="left"/>let mut _57: u128;<br align="left"/>let mut _58: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _59: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _60: u32;<br align="left"/>let mut _61: isize;<br align="left"/>let _62: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _63: !;<br align="left"/>let mut _64: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _65: u128;<br align="left"/>let mut _66: isize;<br align="left"/>let _67: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _68: !;<br align="left"/>let mut _69: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _70: u128;<br align="left"/>let mut _71: u128;<br align="left"/>let mut _72: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _73: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _74: u128;<br align="left"/>let mut _75: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _76: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _77: i64;<br align="left"/>let mut _78: isize;<br align="left"/>let _79: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _80: !;<br align="left"/>let mut _81: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _82: u128;<br align="left"/>let mut _83: u128;<br align="left"/>let mut _84: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _85: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _86: u32;<br align="left"/>let mut _87: isize;<br align="left"/>let _88: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _89: !;<br align="left"/>let mut _90: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _91: u128;<br align="left"/>let mut _92: isize;<br align="left"/>let _93: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _94: !;<br align="left"/>let mut _95: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _96: u128;<br align="left"/>let mut _97: isize;<br align="left"/>let _98: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _99: !;<br align="left"/>let mut _100: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _101: u128;<br align="left"/>let mut _102: u128;<br align="left"/>debug asset_amount =&gt; _1;<br align="left"/>debug asset_liquidation_multiplier =&gt; _2;<br align="left"/>debug asset_decimals =&gt; _3;<br align="left"/>debug asset_price =&gt; _4;<br align="left"/>debug liability_liquidation_multiplier =&gt; _5;<br align="left"/>debug liability_decimals =&gt; _6;<br align="left"/>debug liability_price =&gt; _7;<br align="left"/>debug numerator_scale =&gt; _8;<br align="left"/>debug denominator_scale =&gt; _9;<br align="left"/>debug residual =&gt; _39;<br align="left"/>debug val =&gt; _42;<br align="left"/>debug residual =&gt; _48;<br align="left"/>debug val =&gt; _51;<br align="left"/>debug residual =&gt; _53;<br align="left"/>debug val =&gt; _56;<br align="left"/>debug residual =&gt; _62;<br align="left"/>debug val =&gt; _65;<br align="left"/>debug residual =&gt; _67;<br align="left"/>debug val =&gt; _70;<br align="left"/>debug residual =&gt; _79;<br align="left"/>debug val =&gt; _82;<br align="left"/>debug residual =&gt; _88;<br align="left"/>debug val =&gt; _91;<br align="left"/>debug residual =&gt; _93;<br align="left"/>debug val =&gt; _96;<br align="left"/>debug residual =&gt; _98;<br align="left"/>debug val =&gt; _101;<br align="left"/>>;
    bb0__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = _6<br/>StorageLive(_13)<br/>_13 = _3<br/>_11 = Gt(move _12, move _13)<br/></td></tr><tr><td align="left">switchInt(move _11)</td></tr></table>>];
    bb1__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_12)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_16 = _6<br/>StorageLive(_17)<br/>_17 = _3<br/>_18 = CheckedSub(_16, _17)<br/></td></tr><tr><td align="left">assert(!move (_18.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, move _16, move _17)</td></tr></table>>];
    bb2__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">_15 = move (_18.0: u32)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">_14 = core::num::&lt;impl u128&gt;::pow(const 10_u128, move _15)</td></tr></table>>];
    bb3__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>_10 = (move _14, const 1_u128)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb4__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_12)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_21 = _3<br/>StorageLive(_22)<br/>_22 = _6<br/>_23 = CheckedSub(_21, _22)<br/></td></tr><tr><td align="left">assert(!move (_23.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, move _21, move _22)</td></tr></table>>];
    bb5__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">_20 = move (_23.0: u32)<br/>StorageDead(_22)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">_19 = core::num::&lt;impl u128&gt;::pow(const 10_u128, move _20)</td></tr></table>>];
    bb6__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>_10 = (const 1_u128, move _19)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageLive(_8)<br/>_8 = (_10.0: u128)<br/>StorageLive(_9)<br/>_9 = (_10.1: u128)<br/>StorageDead(_10)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>_36 = _1<br/>StorageLive(_37)<br/>_37 = _8<br/></td></tr><tr><td align="left">_35 = &lt;u128 as SafeMath&gt;::safe_mul(move _36, move _37)</td></tr></table>>];
    bb8__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">_34 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _35)</td></tr></table>>];
    bb9__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>_38 = discriminant(_34)<br/></td></tr><tr><td align="left">switchInt(move _38)</td></tr></table>>];
    bb10__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_42)<br/>_42 = ((_34 as Continue).0: u128)<br/>_33 = _42<br/>StorageDead(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>_46 = _4<br/></td></tr><tr><td align="left">_45 = &lt;i64 as Cast&gt;::cast::&lt;u128&gt;(move _46)</td></tr></table>>];
    bb11__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb12__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_39)<br/>_39 = ((_34 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_41)<br/>_41 = _39<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _41)</td></tr></table>>];
    bb13__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_39)<br/>StorageDead(_33)<br/>StorageDead(_32)<br/>StorageDead(_30)<br/>StorageDead(_29)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>StorageDead(_24)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/></td></tr><tr><td align="left">_44 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _45)</td></tr></table>>];
    bb15__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>_47 = discriminant(_44)<br/></td></tr><tr><td align="left">switchInt(move _47)</td></tr></table>>];
    bb16__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_51)<br/>_51 = ((_44 as Continue).0: u128)<br/>_43 = _51<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">_32 = &lt;u128 as SafeMath&gt;::safe_mul(move _33, move _43)</td></tr></table>>];
    bb17__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_48)<br/>_48 = ((_44 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_50)<br/>_50 = _48<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _50)</td></tr></table>>];
    bb18__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageDead(_48)<br/>StorageDead(_43)<br/>StorageDead(_33)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">_31 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _32)</td></tr></table>>];
    bb20__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>_52 = discriminant(_31)<br/></td></tr><tr><td align="left">switchInt(move _52)</td></tr></table>>];
    bb21__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_56)<br/>_56 = ((_31 as Continue).0: u128)<br/>_30 = _56<br/>StorageDead(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>_60 = _5<br/></td></tr><tr><td align="left">_59 = &lt;u32 as Cast&gt;::cast::&lt;u128&gt;(move _60)</td></tr></table>>];
    bb22__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_53)<br/>_53 = ((_31 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_55)<br/>_55 = _53<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _55)</td></tr></table>>];
    bb23__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/></td></tr><tr><td align="left">_58 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _59)</td></tr></table>>];
    bb25__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>_61 = discriminant(_58)<br/></td></tr><tr><td align="left">switchInt(move _61)</td></tr></table>>];
    bb26__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_65)<br/>_65 = ((_58 as Continue).0: u128)<br/>_57 = _65<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">_29 = &lt;u128 as SafeMath&gt;::safe_mul(move _30, move _57)</td></tr></table>>];
    bb27__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_62)<br/>_62 = ((_58 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_64)<br/>_64 = _62<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _64)</td></tr></table>>];
    bb28__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageDead(_62)<br/>StorageDead(_57)<br/>StorageDead(_30)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">_28 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _29)</td></tr></table>>];
    bb30__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>_66 = discriminant(_28)<br/></td></tr><tr><td align="left">switchInt(move _66)</td></tr></table>>];
    bb31__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_70)<br/>_70 = ((_28 as Continue).0: u128)<br/>_27 = _70<br/>StorageDead(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>_77 = _7<br/></td></tr><tr><td align="left">_76 = &lt;i64 as Cast&gt;::cast::&lt;u128&gt;(move _77)</td></tr></table>>];
    bb32__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_67)<br/>_67 = ((_28 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_69)<br/>_69 = _67<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _69)</td></tr></table>>];
    bb33__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/></td></tr><tr><td align="left">_75 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _76)</td></tr></table>>];
    bb35__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>_78 = discriminant(_75)<br/></td></tr><tr><td align="left">switchInt(move _78)</td></tr></table>>];
    bb36__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageLive(_82)<br/>_82 = ((_75 as Continue).0: u128)<br/>_74 = _82<br/>StorageDead(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>_86 = _2<br/></td></tr><tr><td align="left">_85 = &lt;u32 as Cast&gt;::cast::&lt;u128&gt;(move _86)</td></tr></table>>];
    bb37__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_79)<br/>_79 = ((_75 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_81)<br/>_81 = _79<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _81)</td></tr></table>>];
    bb38__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>StorageDead(_79)<br/>StorageDead(_74)<br/>StorageDead(_73)<br/>StorageDead(_71)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>StorageDead(_24)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/></td></tr><tr><td align="left">_84 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _85)</td></tr></table>>];
    bb40__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>_87 = discriminant(_84)<br/></td></tr><tr><td align="left">switchInt(move _87)</td></tr></table>>];
    bb41__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageLive(_91)<br/>_91 = ((_84 as Continue).0: u128)<br/>_83 = _91<br/>StorageDead(_91)<br/></td></tr><tr><td align="left">_73 = &lt;u128 as SafeMath&gt;::safe_mul(move _74, move _83)</td></tr></table>>];
    bb42__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageLive(_88)<br/>_88 = ((_84 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_90)<br/>_90 = _88<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _90)</td></tr></table>>];
    bb43__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>StorageDead(_88)<br/>StorageDead(_83)<br/>StorageDead(_74)<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>StorageDead(_74)<br/></td></tr><tr><td align="left">_72 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _73)</td></tr></table>>];
    bb45__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>_92 = discriminant(_72)<br/></td></tr><tr><td align="left">switchInt(move _92)</td></tr></table>>];
    bb46__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageLive(_96)<br/>_96 = ((_72 as Continue).0: u128)<br/>_71 = _96<br/>StorageDead(_96)<br/></td></tr><tr><td align="left">_26 = &lt;u128 as SafeMath&gt;::safe_div_ceil(move _27, move _71)</td></tr></table>>];
    bb47__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageLive(_93)<br/>_93 = ((_72 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_95)<br/>_95 = _93<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _95)</td></tr></table>>];
    bb48__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/>StorageDead(_93)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">_25 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _26)</td></tr></table>>];
    bb50__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>_97 = discriminant(_25)<br/></td></tr><tr><td align="left">switchInt(move _97)</td></tr></table>>];
    bb51__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageLive(_101)<br/>_101 = ((_25 as Continue).0: u128)<br/>_24 = _101<br/>StorageDead(_101)<br/>StorageLive(_102)<br/>_102 = _9<br/></td></tr><tr><td align="left">_0 = &lt;u128 as SafeMath&gt;::safe_div_ceil(move _24, move _102)</td></tr></table>>];
    bb52__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageLive(_98)<br/>_98 = ((_25 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_100)<br/>_100 = _98<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _100)</td></tr></table>>];
    bb53__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>StorageDead(_98)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>StorageDead(_24)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/>StorageDead(_84)<br/>StorageDead(_75)<br/>StorageDead(_72)<br/>StorageDead(_58)<br/>StorageDead(_44)<br/>StorageDead(_34)<br/>StorageDead(_31)<br/>StorageDead(_28)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb55__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb56__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/>StorageDead(_84)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb57__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_72)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb58__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_26)<br/>StorageDead(_24)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb60__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_29)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>StorageDead(_24)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb61__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_31)<br/>StorageDead(_28)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb63__0_2384 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2384 -> bb4__0_2384 [label="0"];
    bb0__0_2384 -> bb1__0_2384 [label="otherwise"];
    bb1__0_2384 -> bb2__0_2384 [label="success"];
    bb2__0_2384 -> bb3__0_2384 [label="return"];
    bb3__0_2384 -> bb7__0_2384 [label=""];
    bb4__0_2384 -> bb5__0_2384 [label="success"];
    bb5__0_2384 -> bb6__0_2384 [label="return"];
    bb6__0_2384 -> bb7__0_2384 [label=""];
    bb7__0_2384 -> bb8__0_2384 [label="return"];
    bb8__0_2384 -> bb9__0_2384 [label="return"];
    bb9__0_2384 -> bb10__0_2384 [label="0"];
    bb9__0_2384 -> bb12__0_2384 [label="1"];
    bb9__0_2384 -> bb11__0_2384 [label="otherwise"];
    bb10__0_2384 -> bb14__0_2384 [label="return"];
    bb12__0_2384 -> bb13__0_2384 [label="return"];
    bb13__0_2384 -> bb62__0_2384 [label=""];
    bb14__0_2384 -> bb15__0_2384 [label="return"];
    bb15__0_2384 -> bb16__0_2384 [label="0"];
    bb15__0_2384 -> bb17__0_2384 [label="1"];
    bb15__0_2384 -> bb11__0_2384 [label="otherwise"];
    bb16__0_2384 -> bb19__0_2384 [label="return"];
    bb17__0_2384 -> bb18__0_2384 [label="return"];
    bb18__0_2384 -> bb60__0_2384 [label=""];
    bb19__0_2384 -> bb20__0_2384 [label="return"];
    bb20__0_2384 -> bb21__0_2384 [label="0"];
    bb20__0_2384 -> bb22__0_2384 [label="1"];
    bb20__0_2384 -> bb11__0_2384 [label="otherwise"];
    bb21__0_2384 -> bb24__0_2384 [label="return"];
    bb22__0_2384 -> bb23__0_2384 [label="return"];
    bb23__0_2384 -> bb60__0_2384 [label=""];
    bb24__0_2384 -> bb25__0_2384 [label="return"];
    bb25__0_2384 -> bb26__0_2384 [label="0"];
    bb25__0_2384 -> bb27__0_2384 [label="1"];
    bb25__0_2384 -> bb11__0_2384 [label="otherwise"];
    bb26__0_2384 -> bb29__0_2384 [label="return"];
    bb27__0_2384 -> bb28__0_2384 [label="return"];
    bb28__0_2384 -> bb58__0_2384 [label=""];
    bb29__0_2384 -> bb30__0_2384 [label="return"];
    bb30__0_2384 -> bb31__0_2384 [label="0"];
    bb30__0_2384 -> bb32__0_2384 [label="1"];
    bb30__0_2384 -> bb11__0_2384 [label="otherwise"];
    bb31__0_2384 -> bb34__0_2384 [label="return"];
    bb32__0_2384 -> bb33__0_2384 [label="return"];
    bb33__0_2384 -> bb58__0_2384 [label=""];
    bb34__0_2384 -> bb35__0_2384 [label="return"];
    bb35__0_2384 -> bb36__0_2384 [label="0"];
    bb35__0_2384 -> bb37__0_2384 [label="1"];
    bb35__0_2384 -> bb11__0_2384 [label="otherwise"];
    bb36__0_2384 -> bb39__0_2384 [label="return"];
    bb37__0_2384 -> bb38__0_2384 [label="return"];
    bb38__0_2384 -> bb57__0_2384 [label=""];
    bb39__0_2384 -> bb40__0_2384 [label="return"];
    bb40__0_2384 -> bb41__0_2384 [label="0"];
    bb40__0_2384 -> bb42__0_2384 [label="1"];
    bb40__0_2384 -> bb11__0_2384 [label="otherwise"];
    bb41__0_2384 -> bb44__0_2384 [label="return"];
    bb42__0_2384 -> bb43__0_2384 [label="return"];
    bb43__0_2384 -> bb55__0_2384 [label=""];
    bb44__0_2384 -> bb45__0_2384 [label="return"];
    bb45__0_2384 -> bb46__0_2384 [label="0"];
    bb45__0_2384 -> bb47__0_2384 [label="1"];
    bb45__0_2384 -> bb11__0_2384 [label="otherwise"];
    bb46__0_2384 -> bb49__0_2384 [label="return"];
    bb47__0_2384 -> bb48__0_2384 [label="return"];
    bb48__0_2384 -> bb55__0_2384 [label=""];
    bb49__0_2384 -> bb50__0_2384 [label="return"];
    bb50__0_2384 -> bb51__0_2384 [label="0"];
    bb50__0_2384 -> bb52__0_2384 [label="1"];
    bb50__0_2384 -> bb11__0_2384 [label="otherwise"];
    bb51__0_2384 -> bb54__0_2384 [label="return"];
    bb52__0_2384 -> bb53__0_2384 [label="return"];
    bb53__0_2384 -> bb56__0_2384 [label=""];
    bb54__0_2384 -> bb63__0_2384 [label=""];
    bb55__0_2384 -> bb56__0_2384 [label=""];
    bb56__0_2384 -> bb57__0_2384 [label=""];
    bb57__0_2384 -> bb59__0_2384 [label=""];
    bb58__0_2384 -> bb59__0_2384 [label=""];
    bb59__0_2384 -> bb61__0_2384 [label=""];
    bb60__0_2384 -> bb61__0_2384 [label=""];
    bb61__0_2384 -> bb62__0_2384 [label=""];
    bb62__0_2384 -> bb63__0_2384 [label=""];
}
