digraph Mir_0_1728 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn instructions::user::handle_delete_user(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::user::DeleteUser&lt;ReErased&gt;&gt;) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _2: &amp;ReErased std::cell::Ref&lt;ReErased, state::user::User&gt;;<br align="left"/>let _3: std::cell::Ref&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _5: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _6: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::user::User&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _7: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _8: Closure(DefId(0:11799 ~ drift[d311]::instructions::user::handle_delete_user::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _9: isize;<br align="left"/>let _10: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _11: !;<br align="left"/>let mut _12: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _13: std::cell::Ref&lt;ReErased, state::user::User&gt;;<br align="left"/>let _14: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _15: std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _16: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;;<br align="left"/>let mut _17: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _18: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _19: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _20: Closure(DefId(0:11800 ~ drift[d311]::instructions::user::handle_delete_user::{closure#1}), [i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _21: isize;<br align="left"/>let _22: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _23: !;<br align="left"/>let mut _24: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _25: std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let _26: ();<br align="left"/>let mut _27: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _28: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _29: &amp;ReErased state::user::User;<br align="left"/>let _30: &amp;ReErased state::user::User;<br align="left"/>let mut _31: &amp;ReErased std::cell::Ref&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _32: &amp;ReErased state::user::UserStats;<br align="left"/>let _33: &amp;ReErased state::user::UserStats;<br align="left"/>let mut _34: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _35: &amp;ReErased state::state::State;<br align="left"/>let _36: &amp;ReErased state::state::State;<br align="left"/>let mut _37: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _38: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _39: i64;<br align="left"/>let mut _40: anchor_lang::prelude::Clock;<br align="left"/>let mut _41: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _42: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _43: isize;<br align="left"/>let _44: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _45: !;<br align="left"/>let mut _46: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _47: anchor_lang::prelude::Clock;<br align="left"/>let mut _48: isize;<br align="left"/>let _49: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _50: !;<br align="left"/>let mut _51: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _52: ();<br align="left"/>let _53: ();<br align="left"/>let mut _54: u16;<br align="left"/>let mut _55: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u16&gt;;<br align="left"/>let mut _56: std::result::Result&lt;u16, error::ErrorCode&gt;;<br align="left"/>let mut _57: std::option::Option&lt;u16&gt;;<br align="left"/>let mut _58: u16;<br align="left"/>let mut _59: &amp;ReErased state::user::UserStats;<br align="left"/>let mut _60: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _61: Closure(DefId(0:11801 ~ drift[d311]::instructions::user::handle_delete_user::{closure#2}), [i32, Binder(extern &quot;RustCall&quot; fn(()) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _62: isize;<br align="left"/>let _63: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _64: !;<br align="left"/>let mut _65: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _66: u16;<br align="left"/>let mut _67: &amp;ReErased mut state::user::UserStats;<br align="left"/>let mut _68: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let _69: &amp;ReErased mut std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let _70: ();<br align="left"/>let mut _71: u64;<br align="left"/>let mut _72: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _73: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _74: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _75: u64;<br align="left"/>let mut _76: &amp;ReErased state::state::State;<br align="left"/>let mut _77: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _78: Closure(DefId(0:11802 ~ drift[d311]::instructions::user::handle_delete_user::{closure#3}), [i32, Binder(extern &quot;RustCall&quot; fn(()) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _79: isize;<br align="left"/>let _80: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _81: !;<br align="left"/>let mut _82: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _83: u64;<br align="left"/>let mut _84: &amp;ReErased mut state::state::State;<br align="left"/>let mut _85: &amp;ReErased mut anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _86: ();<br align="left"/>let mut _87: &amp;ReErased mut instructions::user::DeleteUser&lt;ReErased&gt;;<br align="left"/>let mut _88: &amp;ReErased mut instructions::user::DeleteUser&lt;ReErased&gt;;<br align="left"/>let mut _89: &amp;ReErased mut instructions::user::DeleteUser&lt;ReErased&gt;;<br align="left"/>let mut _90: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _91: &amp;ReErased mut instructions::user::DeleteUser&lt;ReErased&gt;;<br align="left"/>let mut _92: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _93: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _94: bool;<br align="left"/>let mut _95: bool;<br align="left"/>let mut _96: isize;<br align="left"/>let mut _97: isize;<br align="left"/>let mut _98: isize;<br align="left"/>let mut _99: isize;<br align="left"/>let mut _100: isize;<br align="left"/>let mut _101: isize;<br align="left"/>let mut _102: isize;<br align="left"/>let mut _103: isize;<br align="left"/>let mut _104: isize;<br align="left"/>let mut _105: isize;<br align="left"/>let mut _106: isize;<br align="left"/>let mut _107: isize;<br align="left"/>let mut _108: isize;<br align="left"/>let mut _109: isize;<br align="left"/>let mut _110: isize;<br align="left"/>let mut _111: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _112: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _113: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug user =&gt; _2;<br align="left"/>debug residual =&gt; _10;<br align="left"/>debug val =&gt; _13;<br align="left"/>debug user_stats =&gt; _14;<br align="left"/>debug residual =&gt; _22;<br align="left"/>debug val =&gt; _25;<br align="left"/>debug residual =&gt; _44;<br align="left"/>debug val =&gt; _47;<br align="left"/>debug residual =&gt; _49;<br align="left"/>debug val =&gt; _52;<br align="left"/>debug residual =&gt; _63;<br align="left"/>debug val =&gt; _66;<br align="left"/>debug state =&gt; _69;<br align="left"/>debug residual =&gt; _80;<br align="left"/>debug val =&gt; _83;<br align="left"/>>;
    bb0__0_1728 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_95 = const false<br/>_94 = const false<br/>StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_87 = deref_copy (_1.1: &amp;mut instructions::user::DeleteUser&lt;'_&gt;)<br/>_7 = &amp;((*_87).0: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_6 = anchor_lang::prelude::AccountLoader::&lt;'_, User&gt;::load(move _7)</td></tr></table>>];
    bb1__0_1728 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageLive(_8)<br/>_8 = {closure@programs/drift/src/macros.rs:70:40: 70:43}<br/></td></tr><tr><td align="left">_5 = std::result::Result::&lt;Ref&lt;'_, User&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:70:40: 70:43}&gt;(move _6, move _8)</td></tr></table>>];
    bb2__0_1728 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;Ref&lt;'_, User&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb3__0_1728 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_9 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _9)</td></tr></table>>];
    bb4__0_1728 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = move ((_4 as Continue).0: std::cell::Ref&lt;'_, state::user::User&gt;)<br/>_3 = move _13<br/>StorageDead(_13)<br/>_2 = &amp;_3<br/>_98 = discriminant(_4)<br/>StorageDead(_4)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_88 = deref_copy (_1.1: &amp;mut instructions::user::DeleteUser&lt;'_&gt;)<br/>_19 = &amp;((*_88).1: anchor_lang::prelude::AccountLoader&lt;'_, state::user::UserStats&gt;)<br/></td></tr><tr><td align="left">_18 = anchor_lang::prelude::AccountLoader::&lt;'_, UserStats&gt;::load_mut(move _19)</td></tr></table>>];
    bb5__0_1728 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_1728 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>_10 = ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_12)<br/>_12 = _10<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _12)</td></tr></table>>];
    bb7__0_1728 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_10)<br/>_96 = discriminant(_4)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_1728 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageLive(_20)<br/>_20 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_17 = std::result::Result::&lt;RefMut&lt;'_, UserStats&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _18, move _20)</td></tr></table>>];
    bb9__0_1728 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">_16 = &lt;std::result::Result&lt;RefMut&lt;'_, UserStats&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _17)</td></tr></table>>];
    bb10__0_1728 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>_21 = discriminant(_16)<br/></td></tr><tr><td align="left">switchInt(move _21)</td></tr></table>>];
    bb11__0_1728 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_25)<br/>_25 = move ((_16 as Continue).0: std::cell::RefMut&lt;'_, state::user::UserStats&gt;)<br/>_15 = move _25<br/>StorageDead(_25)<br/>_14 = &amp;mut _15<br/>_102 = discriminant(_16)<br/>StorageDead(_16)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>_31 = &amp;(*_2)<br/></td></tr><tr><td align="left">_30 = &lt;Ref&lt;'_, User&gt; as Deref&gt;::deref(move _31)</td></tr></table>>];
    bb12__0_1728 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_22)<br/>_22 = ((_16 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_24)<br/>_24 = _22<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _24)</td></tr></table>>];
    bb13__0_1728 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_22)<br/>_100 = discriminant(_16)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_1728 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">_29 = &amp;(*_30)<br/>StorageDead(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>_34 = &amp;(*_14)<br/></td></tr><tr><td align="left">_33 = &lt;RefMut&lt;'_, UserStats&gt; as Deref&gt;::deref(move _34)</td></tr></table>>];
    bb15__0_1728 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">_32 = &amp;(*_33)<br/>StorageDead(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>_89 = deref_copy (_1.1: &amp;mut instructions::user::DeleteUser&lt;'_&gt;)<br/>_38 = &amp;((*_89).2: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_90 = deref_copy (*_38)<br/>_111 = (((_90.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_37 = &amp;(*_111)<br/></td></tr><tr><td align="left">_36 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _37)</td></tr></table>>];
    bb16__0_1728 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">_35 = &amp;(*_36)<br/>StorageDead(_37)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/></td></tr><tr><td align="left">_42 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb17__0_1728 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left">_41 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _42)</td></tr></table>>];
    bb18__0_1728 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">_94 = const true<br/>_95 = const true<br/>StorageDead(_42)<br/>_43 = discriminant(_41)<br/></td></tr><tr><td align="left">switchInt(move _43)</td></tr></table>>];
    bb19__0_1728 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>_47 = move ((_41 as Continue).0: anchor_lang::prelude::Clock)<br/>_40 = move _47<br/>StorageDead(_47)<br/>_39 = (_40.4: i64)<br/></td></tr><tr><td align="left">_28 = validate_user_deletion(move _29, move _32, move _35, move _39)</td></tr></table>>];
    bb20__0_1728 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_44)<br/>_44 = move ((_41 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_46)<br/>_46 = move _44<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _46)</td></tr></table>>];
    bb21__0_1728 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_44)<br/>StorageDead(_39)<br/>StorageDead(_35)<br/>StorageDead(_32)<br/>StorageDead(_29)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_1728 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_35)<br/>StorageDead(_32)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">_27 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _28)</td></tr></table>>];
    bb23__0_1728 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>_48 = discriminant(_27)<br/></td></tr><tr><td align="left">switchInt(move _48)</td></tr></table>>];
    bb24__0_1728 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_52)<br/>_52 = ((_27 as Continue).0: ())<br/>_26 = _52<br/>StorageDead(_52)<br/>_104 = discriminant(_41)<br/>_94 = const false<br/>_95 = const false<br/>StorageDead(_41)<br/>StorageDead(_40)<br/>StorageDead(_38)<br/>StorageDead(_36)<br/>StorageDead(_33)<br/>StorageDead(_30)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>_60 = &amp;(*_14)<br/></td></tr><tr><td align="left">_59 = &lt;RefMut&lt;'_, UserStats&gt; as Deref&gt;::deref(move _60)</td></tr></table>>];
    bb25__0_1728 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_49)<br/>_49 = ((_27 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_51)<br/>_51 = _49<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _51)</td></tr></table>>];
    bb26__0_1728 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_1728 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>_58 = ((*_59).11: u16)<br/></td></tr><tr><td align="left">_57 = core::num::&lt;impl u16&gt;::checked_sub(move _58, const 1_u16)</td></tr></table>>];
    bb28__0_1728 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageLive(_61)<br/>_61 = {closure@programs/drift/src/error.rs:658:9: 658:11}<br/></td></tr><tr><td align="left">_56 = Option::&lt;u16&gt;::ok_or_else::&lt;error::ErrorCode, {closure@programs/drift/src/error.rs:658:9: 658:11}&gt;(move _57, move _61)</td></tr></table>>];
    bb29__0_1728 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">_55 = &lt;std::result::Result&lt;u16, error::ErrorCode&gt; as Try&gt;::branch(move _56)</td></tr></table>>];
    bb30__0_1728 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>_62 = discriminant(_55)<br/></td></tr><tr><td align="left">switchInt(move _62)</td></tr></table>>];
    bb31__0_1728 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_66)<br/>_66 = ((_55 as Continue).0: u16)<br/>_54 = _66<br/>StorageDead(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>_68 = &amp;mut (*_14)<br/></td></tr><tr><td align="left">_67 = &lt;RefMut&lt;'_, UserStats&gt; as DerefMut&gt;::deref_mut(move _68)</td></tr></table>>];
    bb32__0_1728 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_63)<br/>_63 = ((_55 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_65)<br/>_65 = _63<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _65)</td></tr></table>>];
    bb33__0_1728 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageDead(_63)<br/>StorageDead(_54)<br/>StorageDead(_59)<br/>StorageDead(_55)<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_1728 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>((*_67).11: u16) = move _54<br/>_53 = const ()<br/>StorageDead(_54)<br/>StorageDead(_67)<br/>StorageDead(_59)<br/>StorageDead(_55)<br/>StorageDead(_53)<br/>StorageLive(_69)<br/>_91 = deref_copy (_1.1: &amp;mut instructions::user::DeleteUser&lt;'_&gt;)<br/>_69 = &amp;mut ((*_91).2: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>_92 = deref_copy (*_69)<br/>_112 = (((_92.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_77 = &amp;(*_112)<br/></td></tr><tr><td align="left">_76 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _77)</td></tr></table>>];
    bb35__0_1728 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>_75 = ((*_76).9: u64)<br/></td></tr><tr><td align="left">_74 = core::num::&lt;impl u64&gt;::checked_sub(move _75, const 1_u64)</td></tr></table>>];
    bb36__0_1728 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageLive(_78)<br/>_78 = {closure@programs/drift/src/error.rs:658:9: 658:11}<br/></td></tr><tr><td align="left">_73 = Option::&lt;u64&gt;::ok_or_else::&lt;error::ErrorCode, {closure@programs/drift/src/error.rs:658:9: 658:11}&gt;(move _74, move _78)</td></tr></table>>];
    bb37__0_1728 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>StorageDead(_74)<br/></td></tr><tr><td align="left">_72 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _73)</td></tr></table>>];
    bb38__0_1728 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>_79 = discriminant(_72)<br/></td></tr><tr><td align="left">switchInt(move _79)</td></tr></table>>];
    bb39__0_1728 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_83)<br/>_83 = ((_72 as Continue).0: u64)<br/>_71 = _83<br/>StorageDead(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>_93 = deref_copy (*_69)<br/>_113 = (((_93.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_85 = &amp;mut (*_113)<br/></td></tr><tr><td align="left">_84 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as DerefMut&gt;::deref_mut(move _85)</td></tr></table>>];
    bb40__0_1728 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageLive(_80)<br/>_80 = ((_72 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_82)<br/>_82 = _80<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _82)</td></tr></table>>];
    bb41__0_1728 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>StorageDead(_80)<br/>StorageDead(_71)<br/>StorageDead(_76)<br/>StorageDead(_72)<br/>StorageDead(_70)<br/>StorageDead(_69)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_1728 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>((*_84).9: u64) = move _71<br/>_70 = const ()<br/>StorageDead(_71)<br/>StorageDead(_84)<br/>StorageDead(_76)<br/>StorageDead(_72)<br/>StorageDead(_70)<br/>StorageLive(_86)<br/>_86 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _86)<br/>StorageDead(_86)<br/>StorageDead(_69)<br/></td></tr><tr><td align="left">drop(_15)</td></tr></table>>];
    bb43__0_1728 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb44__0_1728 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_1728 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left">drop(_15)</td></tr></table>>];
    bb46__0_1728 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb47__0_1728 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_1728 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left">return</td></tr></table>>];
    bb49__0_1728 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">49 (cleanup)</td></tr><tr><td align="left">drop(_15)</td></tr></table>>];
    bb50__0_1728 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">50 (cleanup)</td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb51__0_1728 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">51 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb52__0_1728 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">_106 = discriminant(_41)<br/>_94 = const false<br/>_95 = const false<br/>StorageDead(_41)<br/>StorageDead(_40)<br/>StorageDead(_38)<br/>StorageDead(_36)<br/>StorageDead(_33)<br/>StorageDead(_30)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_1728 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">53 (cleanup)</td></tr><tr><td align="left" balign="left">_108 = discriminant(_41)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_1728 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">54 (cleanup)</td></tr><tr><td align="left" balign="left">_109 = discriminant(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb55__0_1728 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">55 (cleanup)</td></tr><tr><td align="left" balign="left">_110 = discriminant(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_1728 -> bb1__0_1728 [label="return"];
    bb1__0_1728 -> bb2__0_1728 [label="return"];
    bb1__0_1728 -> bb51__0_1728 [label="unwind"];
    bb2__0_1728 -> bb3__0_1728 [label="return"];
    bb2__0_1728 -> bb51__0_1728 [label="unwind"];
    bb3__0_1728 -> bb4__0_1728 [label="0"];
    bb3__0_1728 -> bb6__0_1728 [label="1"];
    bb3__0_1728 -> bb5__0_1728 [label="otherwise"];
    bb4__0_1728 -> bb8__0_1728 [label="return"];
    bb4__0_1728 -> bb50__0_1728 [label="unwind"];
    bb6__0_1728 -> bb7__0_1728 [label="return"];
    bb6__0_1728 -> bb55__0_1728 [label="unwind"];
    bb7__0_1728 -> bb47__0_1728 [label=""];
    bb8__0_1728 -> bb9__0_1728 [label="return"];
    bb8__0_1728 -> bb50__0_1728 [label="unwind"];
    bb9__0_1728 -> bb10__0_1728 [label="return"];
    bb9__0_1728 -> bb50__0_1728 [label="unwind"];
    bb10__0_1728 -> bb11__0_1728 [label="0"];
    bb10__0_1728 -> bb12__0_1728 [label="1"];
    bb10__0_1728 -> bb5__0_1728 [label="otherwise"];
    bb11__0_1728 -> bb14__0_1728 [label="return"];
    bb11__0_1728 -> bb49__0_1728 [label="unwind"];
    bb12__0_1728 -> bb13__0_1728 [label="return"];
    bb12__0_1728 -> bb54__0_1728 [label="unwind"];
    bb13__0_1728 -> bb46__0_1728 [label=""];
    bb14__0_1728 -> bb15__0_1728 [label="return"];
    bb14__0_1728 -> bb49__0_1728 [label="unwind"];
    bb15__0_1728 -> bb16__0_1728 [label="return"];
    bb15__0_1728 -> bb49__0_1728 [label="unwind"];
    bb16__0_1728 -> bb17__0_1728 [label="return"];
    bb16__0_1728 -> bb49__0_1728 [label="unwind"];
    bb17__0_1728 -> bb18__0_1728 [label="return"];
    bb17__0_1728 -> bb49__0_1728 [label="unwind"];
    bb18__0_1728 -> bb19__0_1728 [label="0"];
    bb18__0_1728 -> bb20__0_1728 [label="1"];
    bb18__0_1728 -> bb5__0_1728 [label="otherwise"];
    bb19__0_1728 -> bb22__0_1728 [label="return"];
    bb19__0_1728 -> bb53__0_1728 [label="unwind"];
    bb20__0_1728 -> bb21__0_1728 [label="return"];
    bb20__0_1728 -> bb53__0_1728 [label="unwind"];
    bb21__0_1728 -> bb52__0_1728 [label=""];
    bb22__0_1728 -> bb23__0_1728 [label="return"];
    bb22__0_1728 -> bb53__0_1728 [label="unwind"];
    bb23__0_1728 -> bb24__0_1728 [label="0"];
    bb23__0_1728 -> bb25__0_1728 [label="1"];
    bb23__0_1728 -> bb5__0_1728 [label="otherwise"];
    bb24__0_1728 -> bb27__0_1728 [label="return"];
    bb24__0_1728 -> bb49__0_1728 [label="unwind"];
    bb25__0_1728 -> bb26__0_1728 [label="return"];
    bb25__0_1728 -> bb53__0_1728 [label="unwind"];
    bb26__0_1728 -> bb52__0_1728 [label=""];
    bb27__0_1728 -> bb28__0_1728 [label="return"];
    bb27__0_1728 -> bb49__0_1728 [label="unwind"];
    bb28__0_1728 -> bb29__0_1728 [label="return"];
    bb28__0_1728 -> bb49__0_1728 [label="unwind"];
    bb29__0_1728 -> bb30__0_1728 [label="return"];
    bb29__0_1728 -> bb49__0_1728 [label="unwind"];
    bb30__0_1728 -> bb31__0_1728 [label="0"];
    bb30__0_1728 -> bb32__0_1728 [label="1"];
    bb30__0_1728 -> bb5__0_1728 [label="otherwise"];
    bb31__0_1728 -> bb34__0_1728 [label="return"];
    bb31__0_1728 -> bb49__0_1728 [label="unwind"];
    bb32__0_1728 -> bb33__0_1728 [label="return"];
    bb32__0_1728 -> bb49__0_1728 [label="unwind"];
    bb33__0_1728 -> bb45__0_1728 [label=""];
    bb34__0_1728 -> bb35__0_1728 [label="return"];
    bb34__0_1728 -> bb49__0_1728 [label="unwind"];
    bb35__0_1728 -> bb36__0_1728 [label="return"];
    bb35__0_1728 -> bb49__0_1728 [label="unwind"];
    bb36__0_1728 -> bb37__0_1728 [label="return"];
    bb36__0_1728 -> bb49__0_1728 [label="unwind"];
    bb37__0_1728 -> bb38__0_1728 [label="return"];
    bb37__0_1728 -> bb49__0_1728 [label="unwind"];
    bb38__0_1728 -> bb39__0_1728 [label="0"];
    bb38__0_1728 -> bb40__0_1728 [label="1"];
    bb38__0_1728 -> bb5__0_1728 [label="otherwise"];
    bb39__0_1728 -> bb42__0_1728 [label="return"];
    bb39__0_1728 -> bb49__0_1728 [label="unwind"];
    bb40__0_1728 -> bb41__0_1728 [label="return"];
    bb40__0_1728 -> bb49__0_1728 [label="unwind"];
    bb41__0_1728 -> bb45__0_1728 [label=""];
    bb42__0_1728 -> bb43__0_1728 [label="return"];
    bb42__0_1728 -> bb50__0_1728 [label="unwind"];
    bb43__0_1728 -> bb44__0_1728 [label="return"];
    bb43__0_1728 -> bb51__0_1728 [label="unwind"];
    bb44__0_1728 -> bb48__0_1728 [label=""];
    bb45__0_1728 -> bb46__0_1728 [label="return"];
    bb45__0_1728 -> bb50__0_1728 [label="unwind"];
    bb46__0_1728 -> bb47__0_1728 [label="return"];
    bb46__0_1728 -> bb51__0_1728 [label="unwind"];
    bb47__0_1728 -> bb48__0_1728 [label=""];
    bb49__0_1728 -> bb50__0_1728 [label="return"];
    bb50__0_1728 -> bb51__0_1728 [label="return"];
    bb52__0_1728 -> bb45__0_1728 [label=""];
    bb53__0_1728 -> bb49__0_1728 [label=""];
    bb54__0_1728 -> bb50__0_1728 [label=""];
    bb55__0_1728 -> bb51__0_1728 [label=""];
}
