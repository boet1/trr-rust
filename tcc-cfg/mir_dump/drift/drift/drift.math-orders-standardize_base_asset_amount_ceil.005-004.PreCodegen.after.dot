digraph Mir_0_2592 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn standardize_base_asset_amount_ceil(_1: u64, _2: u64) -&gt; std::result::Result&lt;u64, error::ErrorCode&gt;<br align="left"/>let _3: u64;<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _5: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _6: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _7: u64;<br align="left"/>let mut _8: u64;<br align="left"/>let mut _9: Closure(DefId(0:15125 ~ drift[d311]::math::orders::standardize_base_asset_amount_ceil::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn(()) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _10: isize;<br align="left"/>let _11: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _12: !;<br align="left"/>let mut _13: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _14: u64;<br align="left"/>let mut _15: bool;<br align="left"/>let mut _16: u64;<br align="left"/>let mut _17: u64;<br align="left"/>let mut _18: u64;<br align="left"/>let mut _19: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _20: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _21: u64;<br align="left"/>let mut _22: u64;<br align="left"/>let mut _23: isize;<br align="left"/>let _24: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _25: !;<br align="left"/>let mut _26: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _27: u64;<br align="left"/>let mut _28: u64;<br align="left"/>debug base_asset_amount =&gt; _1;<br align="left"/>debug step_size =&gt; _2;<br align="left"/>debug remainder =&gt; _3;<br align="left"/>debug residual =&gt; _11;<br align="left"/>debug val =&gt; _14;<br align="left"/>debug residual =&gt; _24;<br align="left"/>debug val =&gt; _27;<br align="left"/>>;
    bb0__0_2592 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = _1<br/>StorageLive(_8)<br/>_8 = _2<br/></td></tr><tr><td align="left">_6 = core::num::&lt;impl u64&gt;::checked_rem_euclid(move _7, move _8)</td></tr></table>>];
    bb1__0_2592 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_7)<br/>StorageLive(_9)<br/>_9 = {closure@programs/drift/src/error.rs:658:9: 658:11}<br/></td></tr><tr><td align="left">_5 = Option::&lt;u64&gt;::ok_or_else::&lt;error::ErrorCode, {closure@programs/drift/src/error.rs:658:9: 658:11}&gt;(move _6, move _9)</td></tr></table>>];
    bb2__0_2592 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb3__0_2592 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_10 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _10)</td></tr></table>>];
    bb4__0_2592 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = ((_4 as Continue).0: u64)<br/>_3 = _14<br/>StorageDead(_14)<br/>StorageDead(_4)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_16 = _3<br/>_15 = Eq(move _16, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _15)</td></tr></table>>];
    bb5__0_2592 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_2592 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_13)<br/>_13 = _11<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _13)</td></tr></table>>];
    bb7__0_2592 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_11)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_2592 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageLive(_17)<br/>_17 = _1<br/>_0 = std::result::Result::&lt;u64, error::ErrorCode&gt;::Ok(move _17)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_2592 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_21 = _1<br/>StorageLive(_22)<br/>_22 = _2<br/></td></tr><tr><td align="left">_20 = &lt;u64 as SafeMath&gt;::safe_add(move _21, move _22)</td></tr></table>>];
    bb10__0_2592 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">_19 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _20)</td></tr></table>>];
    bb11__0_2592 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>_23 = discriminant(_19)<br/></td></tr><tr><td align="left">switchInt(move _23)</td></tr></table>>];
    bb12__0_2592 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_27)<br/>_27 = ((_19 as Continue).0: u64)<br/>_18 = _27<br/>StorageDead(_27)<br/>StorageLive(_28)<br/>_28 = _3<br/></td></tr><tr><td align="left">_0 = &lt;u64 as SafeMath&gt;::safe_sub(move _18, move _28)</td></tr></table>>];
    bb13__0_2592 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_24)<br/>_24 = ((_19 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_26)<br/>_26 = _24<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _26)</td></tr></table>>];
    bb14__0_2592 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_24)<br/>StorageDead(_18)<br/>StorageDead(_19)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_2592 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_18)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_2592 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_2592 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_2592 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2592 -> bb1__0_2592 [label="return"];
    bb1__0_2592 -> bb2__0_2592 [label="return"];
    bb2__0_2592 -> bb3__0_2592 [label="return"];
    bb3__0_2592 -> bb4__0_2592 [label="0"];
    bb3__0_2592 -> bb6__0_2592 [label="1"];
    bb3__0_2592 -> bb5__0_2592 [label="otherwise"];
    bb4__0_2592 -> bb9__0_2592 [label="0"];
    bb4__0_2592 -> bb8__0_2592 [label="otherwise"];
    bb6__0_2592 -> bb7__0_2592 [label="return"];
    bb7__0_2592 -> bb17__0_2592 [label=""];
    bb8__0_2592 -> bb16__0_2592 [label=""];
    bb9__0_2592 -> bb10__0_2592 [label="return"];
    bb10__0_2592 -> bb11__0_2592 [label="return"];
    bb11__0_2592 -> bb12__0_2592 [label="0"];
    bb11__0_2592 -> bb13__0_2592 [label="1"];
    bb11__0_2592 -> bb5__0_2592 [label="otherwise"];
    bb12__0_2592 -> bb15__0_2592 [label="return"];
    bb13__0_2592 -> bb14__0_2592 [label="return"];
    bb14__0_2592 -> bb17__0_2592 [label=""];
    bb15__0_2592 -> bb16__0_2592 [label=""];
    bb16__0_2592 -> bb18__0_2592 [label=""];
    bb17__0_2592 -> bb18__0_2592 [label=""];
}
