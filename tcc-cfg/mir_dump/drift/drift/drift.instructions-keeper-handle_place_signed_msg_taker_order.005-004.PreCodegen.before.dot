digraph Mir_0_1365 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn keeper::handle_place_signed_msg_taker_order(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::keeper::PlaceSignedMsgTakerOrder&lt;ReErased&gt;&gt;, _2: std::vec::Vec&lt;u8, std::alloc::Global&gt;, _3: bool) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _4: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _5: std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _6: std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _7: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let _8: state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _9: state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _10: state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _11: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let mut _12: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, instructions::optional_accounts::AccountMaps&lt;ReErased&gt;&gt;;<br align="left"/>let mut _13: std::result::Result&lt;instructions::optional_accounts::AccountMaps&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _14: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _15: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _16: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _17: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _18: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _19: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _20: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _21: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _22: u64;<br align="left"/>let mut _23: anchor_lang::prelude::Clock;<br align="left"/>let mut _24: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _25: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _26: isize;<br align="left"/>let _27: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _28: !;<br align="left"/>let mut _29: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _30: anchor_lang::prelude::Clock;<br align="left"/>let mut _31: std::option::Option&lt;state::state::OracleGuardRails&gt;;<br align="left"/>let mut _32: state::state::OracleGuardRails;<br align="left"/>let mut _33: &amp;ReErased state::state::State;<br align="left"/>let mut _34: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _35: isize;<br align="left"/>let _36: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _37: !;<br align="left"/>let mut _38: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _39: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let _40: std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;&gt;;<br align="left"/>let mut _41: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;&gt;&gt;;<br align="left"/>let mut _42: std::result::Result&lt;std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _43: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _44: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _45: isize;<br align="left"/>let _46: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _47: !;<br align="left"/>let mut _48: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _49: std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;&gt;;<br align="left"/>let _50: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _51: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _52: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _53: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _54: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _55: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _56: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _57: Closure(DefId(0:9231 ~ drift[d311]::instructions::keeper::handle_place_signed_msg_taker_order::{closure#0}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _58: isize;<br align="left"/>let _59: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _60: !;<br align="left"/>let mut _61: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _62: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _63: state::signed_msg_user::SignedMsgUserOrdersZeroCopyMut&lt;ReErased&gt;;<br align="left"/>let mut _64: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::signed_msg_user::SignedMsgUserOrdersZeroCopyMut&lt;ReErased&gt;&gt;;<br align="left"/>let mut _65: std::result::Result&lt;state::signed_msg_user::SignedMsgUserOrdersZeroCopyMut&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _66: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _67: isize;<br align="left"/>let _68: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _69: !;<br align="left"/>let mut _70: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _71: state::signed_msg_user::SignedMsgUserOrdersZeroCopyMut&lt;ReErased&gt;;<br align="left"/>let _72: ();<br align="left"/>let mut _73: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _74: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _75: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _76: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _77: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _78: &amp;ReErased mut state::signed_msg_user::SignedMsgUserOrdersZeroCopyMut&lt;ReErased&gt;;<br align="left"/>let mut _79: &amp;ReErased mut state::signed_msg_user::SignedMsgUserOrdersZeroCopyMut&lt;ReErased&gt;;<br align="left"/>let mut _80: std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _81: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _82: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _83: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _84: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _85: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _86: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _87: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let _88: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _89: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _90: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _91: std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;&gt;;<br align="left"/>let mut _92: &amp;ReErased state::state::State;<br align="left"/>let _93: &amp;ReErased state::state::State;<br align="left"/>let mut _94: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _95: bool;<br align="left"/>let mut _96: isize;<br align="left"/>let _97: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _98: !;<br align="left"/>let mut _99: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _100: ();<br align="left"/>let mut _101: ();<br align="left"/>let mut _102: &amp;ReErased mut instructions::keeper::PlaceSignedMsgTakerOrder&lt;ReErased&gt;;<br align="left"/>let mut _103: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _104: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _105: &amp;ReErased mut instructions::keeper::PlaceSignedMsgTakerOrder&lt;ReErased&gt;;<br align="left"/>let mut _106: &amp;ReErased mut instructions::keeper::PlaceSignedMsgTakerOrder&lt;ReErased&gt;;<br align="left"/>let mut _107: &amp;ReErased mut instructions::keeper::PlaceSignedMsgTakerOrder&lt;ReErased&gt;;<br align="left"/>let mut _108: &amp;ReErased mut instructions::keeper::PlaceSignedMsgTakerOrder&lt;ReErased&gt;;<br align="left"/>let mut _109: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _110: bool;<br align="left"/>let mut _111: bool;<br align="left"/>let mut _112: bool;<br align="left"/>let mut _113: bool;<br align="left"/>let mut _114: isize;<br align="left"/>let mut _115: isize;<br align="left"/>let mut _116: isize;<br align="left"/>let mut _117: isize;<br align="left"/>let mut _118: isize;<br align="left"/>let mut _119: isize;<br align="left"/>let mut _120: isize;<br align="left"/>let mut _121: isize;<br align="left"/>let mut _122: isize;<br align="left"/>let mut _123: isize;<br align="left"/>let mut _124: isize;<br align="left"/>let mut _125: isize;<br align="left"/>let mut _126: isize;<br align="left"/>let mut _127: isize;<br align="left"/>let mut _128: isize;<br align="left"/>let mut _129: isize;<br align="left"/>let mut _130: isize;<br align="left"/>let mut _131: isize;<br align="left"/>let mut _132: isize;<br align="left"/>let mut _133: isize;<br align="left"/>let mut _134: isize;<br align="left"/>let mut _135: isize;<br align="left"/>let mut _136: isize;<br align="left"/>let mut _137: isize;<br align="left"/>let mut _138: isize;<br align="left"/>let mut _139: isize;<br align="left"/>let mut _140: isize;<br align="left"/>let mut _141: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _142: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug signed_msg_order_params_message_bytes =&gt; _2;<br align="left"/>debug is_delegate_signer =&gt; _3;<br align="left"/>debug state =&gt; _4;<br align="left"/>debug remaining_accounts =&gt; _5;<br align="left"/>debug perp_market_map =&gt; _8;<br align="left"/>debug spot_market_map =&gt; _9;<br align="left"/>debug oracle_map =&gt; _10;<br align="left"/>debug residual =&gt; _27;<br align="left"/>debug val =&gt; _30;<br align="left"/>debug residual =&gt; _36;<br align="left"/>debug val =&gt; _39;<br align="left"/>debug high_leverage_mode_config =&gt; _40;<br align="left"/>debug residual =&gt; _46;<br align="left"/>debug val =&gt; _49;<br align="left"/>debug taker_key =&gt; _50;<br align="left"/>debug taker =&gt; _52;<br align="left"/>debug residual =&gt; _59;<br align="left"/>debug val =&gt; _62;<br align="left"/>debug signed_msg_taker =&gt; _63;<br align="left"/>debug residual =&gt; _68;<br align="left"/>debug val =&gt; _71;<br align="left"/>debug residual =&gt; _97;<br align="left"/>debug val =&gt; _100;<br align="left"/>>;
    bb0__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_112 = const false<br/>_113 = const false<br/>_111 = const false<br/>_110 = const false<br/>_112 = const true<br/>StorageLive(_4)<br/>_102 = deref_copy (_1.1: &amp;mut instructions::keeper::PlaceSignedMsgTakerOrder&lt;'_&gt;)<br/>_4 = &amp;((*_102).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_103 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_7 = &amp;(*_103)<br/></td></tr><tr><td align="left">_6 = core::slice::&lt;impl [anchor_lang::prelude::AccountInfo&lt;'_&gt;]&gt;::iter(move _7)</td></tr></table>>];
    bb1__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/></td></tr><tr><td align="left">_5 = &lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as Iterator&gt;::peekable(move _6)</td></tr></table>>];
    bb2__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = &amp;mut _5<br/>_14 = &amp;mut (*_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/></td></tr><tr><td align="left">_18 = BTreeSet::&lt;u16&gt;::new()</td></tr></table>>];
    bb3__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">_17 = &amp;_18<br/>_16 = &amp;(*_17)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/></td></tr><tr><td align="left">_21 = BTreeSet::&lt;u16&gt;::new()</td></tr></table>>];
    bb4__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">_20 = &amp;_21<br/>_19 = &amp;(*_20)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/></td></tr><tr><td align="left">_25 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb5__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">_24 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _25)</td></tr></table>>];
    bb6__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">_110 = const true<br/>_111 = const true<br/>StorageDead(_25)<br/>_26 = discriminant(_24)<br/></td></tr><tr><td align="left">switchInt(move _26)</td></tr></table>>];
    bb7__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_30)<br/>_30 = move ((_24 as Continue).0: anchor_lang::prelude::Clock)<br/>_23 = move _30<br/>StorageDead(_30)<br/>_22 = (_23.0: u64)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>_104 = deref_copy (*_4)<br/>_141 = (((_104.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_34 = &amp;(*_141)<br/></td></tr><tr><td align="left">_33 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _34)</td></tr></table>>];
    bb8__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb9__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_27)<br/>_27 = move ((_24 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_29)<br/>_29 = move _27<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _29)</td></tr></table>>];
    bb10__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_27)<br/>StorageDead(_22)<br/>StorageDead(_19)<br/>StorageDead(_16)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb11__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>_32 = ((*_33).7: state::state::OracleGuardRails)<br/>_31 = Option::&lt;state::state::OracleGuardRails&gt;::Some(move _32)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">_13 = load_maps(move _14, move _16, move _19, move _22, move _31)</td></tr></table>>];
    bb12__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_22)<br/>StorageDead(_19)<br/>StorageDead(_16)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">_12 = &lt;std::result::Result&lt;AccountMaps&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _13)</td></tr></table>>];
    bb13__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>_35 = discriminant(_12)<br/></td></tr><tr><td align="left">switchInt(move _35)</td></tr></table>>];
    bb14__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_39)<br/>_39 = move ((_12 as Continue).0: instructions::optional_accounts::AccountMaps&lt;'_&gt;)<br/>_11 = move _39<br/>StorageDead(_39)<br/>StorageLive(_8)<br/>_8 = move (_11.0: state::perp_market_map::PerpMarketMap&lt;'_&gt;)<br/>StorageLive(_9)<br/>_9 = move (_11.1: state::spot_market_map::SpotMarketMap&lt;'_&gt;)<br/>StorageLive(_10)<br/>_10 = move (_11.2: state::oracle_map::OracleMap&lt;'_&gt;)<br/>_116 = discriminant(_12)<br/>StorageDead(_33)<br/>_118 = discriminant(_24)<br/>_110 = const false<br/>_111 = const false<br/>StorageDead(_24)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">drop(_21)</td></tr></table>>];
    bb15__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_36)<br/>_36 = ((_12 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_38)<br/>_38 = _36<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _38)</td></tr></table>>];
    bb16__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_36)<br/>_114 = discriminant(_12)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">drop(_18)</td></tr></table>>];
    bb18__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_17)<br/>StorageDead(_15)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>_44 = &amp;mut _5<br/>_43 = &amp;mut (*_44)<br/></td></tr><tr><td align="left">_42 = get_high_leverage_mode_config(move _43)</td></tr></table>>];
    bb19__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/></td></tr><tr><td align="left">_41 = &lt;std::result::Result&lt;Option&lt;anchor_lang::prelude::AccountLoader&lt;'_, HighLeverageModeConfig&gt;&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _42)</td></tr></table>>];
    bb20__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>_45 = discriminant(_41)<br/></td></tr><tr><td align="left">switchInt(move _45)</td></tr></table>>];
    bb21__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_49)<br/>_49 = move ((_41 as Continue).0: std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;'_, state::high_leverage_mode_config::HighLeverageModeConfig&gt;&gt;)<br/>_40 = move _49<br/>StorageDead(_49)<br/>StorageDead(_44)<br/>StorageDead(_41)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>_105 = deref_copy (_1.1: &amp;mut instructions::keeper::PlaceSignedMsgTakerOrder&lt;'_&gt;)<br/>_51 = &amp;((*_105).1: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_50 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt; as anchor_lang::Key&gt;::key(move _51)</td></tr></table>>];
    bb22__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_46)<br/>_46 = ((_41 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_48)<br/>_48 = _46<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _48)</td></tr></table>>];
    bb23__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageDead(_46)<br/>StorageDead(_44)<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>_106 = deref_copy (_1.1: &amp;mut instructions::keeper::PlaceSignedMsgTakerOrder&lt;'_&gt;)<br/>_56 = &amp;((*_106).1: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_55 = anchor_lang::prelude::AccountLoader::&lt;'_, User&gt;::load_mut(move _56)</td></tr></table>>];
    bb25__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageLive(_57)<br/>_57 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_54 = std::result::Result::&lt;RefMut&lt;'_, User&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _55, move _57)</td></tr></table>>];
    bb26__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">_53 = &lt;std::result::Result&lt;RefMut&lt;'_, User&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _54)</td></tr></table>>];
    bb27__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>_58 = discriminant(_53)<br/></td></tr><tr><td align="left">switchInt(move _58)</td></tr></table>>];
    bb28__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_62)<br/>_62 = move ((_53 as Continue).0: std::cell::RefMut&lt;'_, state::user::User&gt;)<br/>_52 = move _62<br/>StorageDead(_62)<br/>_122 = discriminant(_53)<br/>StorageDead(_53)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>_107 = deref_copy (_1.1: &amp;mut instructions::keeper::PlaceSignedMsgTakerOrder&lt;'_&gt;)<br/>_66 = &amp;((*_107).3: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/></td></tr><tr><td align="left">_65 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as SignedMsgUserOrdersLoader&lt;'_&gt;&gt;::load_mut(move _66)</td></tr></table>>];
    bb29__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_59)<br/>_59 = ((_53 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_61)<br/>_61 = _59<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _61)</td></tr></table>>];
    bb30__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_59)<br/>_120 = discriminant(_53)<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/></td></tr><tr><td align="left">_64 = &lt;std::result::Result&lt;SignedMsgUserOrdersZeroCopyMut&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _65)</td></tr></table>>];
    bb32__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>_67 = discriminant(_64)<br/></td></tr><tr><td align="left">switchInt(move _67)</td></tr></table>>];
    bb33__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageLive(_71)<br/>_71 = move ((_64 as Continue).0: state::signed_msg_user::SignedMsgUserOrdersZeroCopyMut&lt;'_&gt;)<br/>_63 = move _71<br/>StorageDead(_71)<br/>_126 = discriminant(_64)<br/>StorageDead(_64)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>_75 = _50<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>_77 = &amp;mut _52<br/>_76 = &amp;mut (*_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>_79 = &amp;mut _63<br/>_78 = &amp;mut (*_79)<br/>StorageLive(_80)<br/>_112 = const false<br/>_113 = const true<br/>_80 = move _2<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>_108 = deref_copy (_1.1: &amp;mut instructions::keeper::PlaceSignedMsgTakerOrder&lt;'_&gt;)<br/>_84 = &amp;((*_108).5: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/></td></tr><tr><td align="left">_83 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::ToAccountInfo&lt;'_&gt;&gt;::to_account_info(move _84)</td></tr></table>>];
    bb34__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_68)<br/>_68 = ((_64 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_70)<br/>_70 = _68<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _70)</td></tr></table>>];
    bb35__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_68)<br/>_124 = discriminant(_64)<br/>StorageDead(_64)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>_82 = &amp;_83<br/>_81 = &amp;(*_82)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>_86 = &amp;_8<br/>_85 = &amp;(*_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>_88 = &amp;_9<br/>_87 = &amp;(*_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>_90 = &amp;mut _10<br/>_89 = &amp;mut (*_90)<br/>StorageLive(_91)<br/>_91 = move _40<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>_109 = deref_copy (*_4)<br/>_142 = (((_109.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_94 = &amp;(*_142)<br/></td></tr><tr><td align="left">_93 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _94)</td></tr></table>>];
    bb37__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">_92 = &amp;(*_93)<br/>StorageDead(_94)<br/>StorageLive(_95)<br/>_95 = _3<br/>_113 = const false<br/></td></tr><tr><td align="left">_74 = keeper::place_signed_msg_taker_order::&lt;'_, '_&gt;(move _75, move _76, move _78, move _80, move _81, move _85, move _87, move _89, move _91, move _92, move _95)</td></tr></table>>];
    bb38__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/>StorageDead(_92)<br/>StorageDead(_91)<br/>StorageDead(_89)<br/>StorageDead(_87)<br/>StorageDead(_85)<br/>StorageDead(_81)<br/>_113 = const false<br/>StorageDead(_80)<br/>StorageDead(_78)<br/>StorageDead(_76)<br/>StorageDead(_75)<br/></td></tr><tr><td align="left">_73 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _74)</td></tr></table>>];
    bb39__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>_96 = discriminant(_73)<br/></td></tr><tr><td align="left">switchInt(move _96)</td></tr></table>>];
    bb40__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageLive(_100)<br/>_100 = ((_73 as Continue).0: ())<br/>_72 = _100<br/>StorageDead(_100)<br/>_128 = discriminant(_73)<br/>StorageDead(_93)<br/>StorageDead(_90)<br/>StorageDead(_88)<br/>StorageDead(_86)<br/></td></tr><tr><td align="left">drop(_83)</td></tr></table>>];
    bb41__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageLive(_97)<br/>_97 = move ((_73 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_99)<br/>_99 = move _97<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _99)</td></tr></table>>];
    bb42__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/>StorageDead(_97)<br/>_130 = discriminant(_73)<br/>StorageDead(_93)<br/>StorageDead(_90)<br/>StorageDead(_88)<br/>StorageDead(_86)<br/></td></tr><tr><td align="left">drop(_83)</td></tr></table>>];
    bb43__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>StorageDead(_82)<br/>StorageDead(_79)<br/>StorageDead(_77)<br/>StorageDead(_73)<br/>StorageDead(_72)<br/>StorageLive(_101)<br/>_101 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _101)<br/>StorageDead(_101)<br/></td></tr><tr><td align="left">drop(_63)</td></tr></table>>];
    bb44__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/></td></tr><tr><td align="left">drop(_52)</td></tr></table>>];
    bb45__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_50)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">drop(_10)</td></tr></table>>];
    bb46__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/></td></tr><tr><td align="left">drop(_9)</td></tr></table>>];
    bb47__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/></td></tr><tr><td align="left">drop(_8)</td></tr></table>>];
    bb48__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>StorageDead(_82)<br/>StorageDead(_79)<br/>StorageDead(_77)<br/>StorageDead(_73)<br/>StorageDead(_72)<br/></td></tr><tr><td align="left">drop(_63)</td></tr></table>>];
    bb50__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/></td></tr><tr><td align="left">drop(_52)</td></tr></table>>];
    bb51__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb52__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/></td></tr><tr><td align="left">drop(_10)</td></tr></table>>];
    bb53__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/></td></tr><tr><td align="left">drop(_9)</td></tr></table>>];
    bb54__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/></td></tr><tr><td align="left">drop(_8)</td></tr></table>>];
    bb55__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb56__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">drop(_18)</td></tr></table>>];
    bb57__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_17)<br/>StorageDead(_15)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb58__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">switchInt(_112)</td></tr></table>>];
    bb59__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left">return</td></tr></table>>];
    bb60__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">60 (cleanup)</td></tr><tr><td align="left">drop(_83)</td></tr></table>>];
    bb61__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">61 (cleanup)</td></tr><tr><td align="left">drop(_80)</td></tr></table>>];
    bb62__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">62 (cleanup)</td></tr><tr><td align="left">drop(_63)</td></tr></table>>];
    bb63__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">63 (cleanup)</td></tr><tr><td align="left">drop(_52)</td></tr></table>>];
    bb64__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">64 (cleanup)</td></tr><tr><td align="left">drop(_18)</td></tr></table>>];
    bb65__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">65 (cleanup)</td></tr><tr><td align="left">drop(_10)</td></tr></table>>];
    bb66__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">66 (cleanup)</td></tr><tr><td align="left">drop(_9)</td></tr></table>>];
    bb67__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">67 (cleanup)</td></tr><tr><td align="left">drop(_8)</td></tr></table>>];
    bb68__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">68 (cleanup)</td></tr><tr><td align="left">drop(_21)</td></tr></table>>];
    bb69__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">69 (cleanup)</td></tr><tr><td align="left">drop(_18)</td></tr></table>>];
    bb70__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">70 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb71__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">_132 = discriminant(_24)<br/>_110 = const false<br/>_111 = const false<br/>StorageDead(_24)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">drop(_21)</td></tr></table>>];
    bb72__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left">drop(_2)</td></tr></table>>];
    bb73__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">73 (cleanup)</td></tr><tr><td align="left" balign="left">_134 = discriminant(_73)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb74__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">74 (cleanup)</td></tr><tr><td align="left">drop(_80)</td></tr></table>>];
    bb75__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">75 (cleanup)</td></tr><tr><td align="left">switchInt(_113)</td></tr></table>>];
    bb76__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">76 (cleanup)</td></tr><tr><td align="left" balign="left">_135 = discriminant(_64)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb77__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">77 (cleanup)</td></tr><tr><td align="left" balign="left">_136 = discriminant(_53)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb78__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">78 (cleanup)</td></tr><tr><td align="left" balign="left">_139 = discriminant(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb79__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">79 (cleanup)</td></tr><tr><td align="left" balign="left">_140 = discriminant(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb80__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">80 (cleanup)</td></tr><tr><td align="left">drop(_2)</td></tr></table>>];
    bb81__0_1365 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">81 (cleanup)</td></tr><tr><td align="left">switchInt(_112)</td></tr></table>>];
    bb0__0_1365 -> bb1__0_1365 [label="return"];
    bb0__0_1365 -> bb81__0_1365 [label="unwind"];
    bb1__0_1365 -> bb2__0_1365 [label="return"];
    bb1__0_1365 -> bb81__0_1365 [label="unwind"];
    bb2__0_1365 -> bb3__0_1365 [label="return"];
    bb2__0_1365 -> bb81__0_1365 [label="unwind"];
    bb3__0_1365 -> bb4__0_1365 [label="return"];
    bb3__0_1365 -> bb69__0_1365 [label="unwind"];
    bb4__0_1365 -> bb5__0_1365 [label="return"];
    bb4__0_1365 -> bb68__0_1365 [label="unwind"];
    bb5__0_1365 -> bb6__0_1365 [label="return"];
    bb5__0_1365 -> bb68__0_1365 [label="unwind"];
    bb6__0_1365 -> bb7__0_1365 [label="0"];
    bb6__0_1365 -> bb9__0_1365 [label="1"];
    bb6__0_1365 -> bb8__0_1365 [label="otherwise"];
    bb7__0_1365 -> bb11__0_1365 [label="return"];
    bb7__0_1365 -> bb79__0_1365 [label="unwind"];
    bb9__0_1365 -> bb10__0_1365 [label="return"];
    bb9__0_1365 -> bb79__0_1365 [label="unwind"];
    bb10__0_1365 -> bb71__0_1365 [label=""];
    bb11__0_1365 -> bb12__0_1365 [label="return"];
    bb11__0_1365 -> bb79__0_1365 [label="unwind"];
    bb12__0_1365 -> bb13__0_1365 [label="return"];
    bb12__0_1365 -> bb79__0_1365 [label="unwind"];
    bb13__0_1365 -> bb14__0_1365 [label="0"];
    bb13__0_1365 -> bb15__0_1365 [label="1"];
    bb13__0_1365 -> bb8__0_1365 [label="otherwise"];
    bb14__0_1365 -> bb17__0_1365 [label="return"];
    bb14__0_1365 -> bb64__0_1365 [label="unwind"];
    bb15__0_1365 -> bb16__0_1365 [label="return"];
    bb15__0_1365 -> bb78__0_1365 [label="unwind"];
    bb16__0_1365 -> bb71__0_1365 [label=""];
    bb17__0_1365 -> bb18__0_1365 [label="return"];
    bb17__0_1365 -> bb65__0_1365 [label="unwind"];
    bb18__0_1365 -> bb19__0_1365 [label="return"];
    bb18__0_1365 -> bb65__0_1365 [label="unwind"];
    bb19__0_1365 -> bb20__0_1365 [label="return"];
    bb19__0_1365 -> bb65__0_1365 [label="unwind"];
    bb20__0_1365 -> bb21__0_1365 [label="0"];
    bb20__0_1365 -> bb22__0_1365 [label="1"];
    bb20__0_1365 -> bb8__0_1365 [label="otherwise"];
    bb21__0_1365 -> bb24__0_1365 [label="return"];
    bb21__0_1365 -> bb65__0_1365 [label="unwind"];
    bb22__0_1365 -> bb23__0_1365 [label="return"];
    bb22__0_1365 -> bb65__0_1365 [label="unwind"];
    bb23__0_1365 -> bb52__0_1365 [label=""];
    bb24__0_1365 -> bb25__0_1365 [label="return"];
    bb24__0_1365 -> bb65__0_1365 [label="unwind"];
    bb25__0_1365 -> bb26__0_1365 [label="return"];
    bb25__0_1365 -> bb65__0_1365 [label="unwind"];
    bb26__0_1365 -> bb27__0_1365 [label="return"];
    bb26__0_1365 -> bb65__0_1365 [label="unwind"];
    bb27__0_1365 -> bb28__0_1365 [label="0"];
    bb27__0_1365 -> bb29__0_1365 [label="1"];
    bb27__0_1365 -> bb8__0_1365 [label="otherwise"];
    bb28__0_1365 -> bb31__0_1365 [label="return"];
    bb28__0_1365 -> bb63__0_1365 [label="unwind"];
    bb29__0_1365 -> bb30__0_1365 [label="return"];
    bb29__0_1365 -> bb77__0_1365 [label="unwind"];
    bb30__0_1365 -> bb51__0_1365 [label=""];
    bb31__0_1365 -> bb32__0_1365 [label="return"];
    bb31__0_1365 -> bb63__0_1365 [label="unwind"];
    bb32__0_1365 -> bb33__0_1365 [label="0"];
    bb32__0_1365 -> bb34__0_1365 [label="1"];
    bb32__0_1365 -> bb8__0_1365 [label="otherwise"];
    bb33__0_1365 -> bb36__0_1365 [label="return"];
    bb33__0_1365 -> bb61__0_1365 [label="unwind"];
    bb34__0_1365 -> bb35__0_1365 [label="return"];
    bb34__0_1365 -> bb76__0_1365 [label="unwind"];
    bb35__0_1365 -> bb50__0_1365 [label=""];
    bb36__0_1365 -> bb37__0_1365 [label="return"];
    bb36__0_1365 -> bb75__0_1365 [label="unwind"];
    bb37__0_1365 -> bb38__0_1365 [label="return"];
    bb37__0_1365 -> bb75__0_1365 [label="unwind"];
    bb38__0_1365 -> bb39__0_1365 [label="return"];
    bb38__0_1365 -> bb60__0_1365 [label="unwind"];
    bb39__0_1365 -> bb40__0_1365 [label="0"];
    bb39__0_1365 -> bb41__0_1365 [label="1"];
    bb39__0_1365 -> bb8__0_1365 [label="otherwise"];
    bb40__0_1365 -> bb43__0_1365 [label="return"];
    bb40__0_1365 -> bb62__0_1365 [label="unwind"];
    bb41__0_1365 -> bb42__0_1365 [label="return"];
    bb41__0_1365 -> bb73__0_1365 [label="unwind"];
    bb42__0_1365 -> bb49__0_1365 [label="return"];
    bb42__0_1365 -> bb62__0_1365 [label="unwind"];
    bb43__0_1365 -> bb44__0_1365 [label="return"];
    bb43__0_1365 -> bb63__0_1365 [label="unwind"];
    bb44__0_1365 -> bb45__0_1365 [label="return"];
    bb44__0_1365 -> bb65__0_1365 [label="unwind"];
    bb45__0_1365 -> bb46__0_1365 [label="return"];
    bb45__0_1365 -> bb66__0_1365 [label="unwind"];
    bb46__0_1365 -> bb47__0_1365 [label="return"];
    bb46__0_1365 -> bb67__0_1365 [label="unwind"];
    bb47__0_1365 -> bb48__0_1365 [label="return"];
    bb47__0_1365 -> bb81__0_1365 [label="unwind"];
    bb48__0_1365 -> bb59__0_1365 [label=""];
    bb49__0_1365 -> bb50__0_1365 [label="return"];
    bb49__0_1365 -> bb63__0_1365 [label="unwind"];
    bb50__0_1365 -> bb51__0_1365 [label="return"];
    bb50__0_1365 -> bb65__0_1365 [label="unwind"];
    bb51__0_1365 -> bb52__0_1365 [label=""];
    bb52__0_1365 -> bb53__0_1365 [label="return"];
    bb52__0_1365 -> bb66__0_1365 [label="unwind"];
    bb53__0_1365 -> bb54__0_1365 [label="return"];
    bb53__0_1365 -> bb67__0_1365 [label="unwind"];
    bb54__0_1365 -> bb55__0_1365 [label="return"];
    bb54__0_1365 -> bb81__0_1365 [label="unwind"];
    bb55__0_1365 -> bb58__0_1365 [label=""];
    bb56__0_1365 -> bb57__0_1365 [label="return"];
    bb56__0_1365 -> bb81__0_1365 [label="unwind"];
    bb57__0_1365 -> bb58__0_1365 [label=""];
    bb58__0_1365 -> bb59__0_1365 [label="0"];
    bb58__0_1365 -> bb72__0_1365 [label="otherwise"];
    bb60__0_1365 -> bb62__0_1365 [label="return"];
    bb61__0_1365 -> bb62__0_1365 [label="return"];
    bb62__0_1365 -> bb63__0_1365 [label="return"];
    bb63__0_1365 -> bb65__0_1365 [label="return"];
    bb64__0_1365 -> bb65__0_1365 [label="return"];
    bb65__0_1365 -> bb66__0_1365 [label="return"];
    bb66__0_1365 -> bb67__0_1365 [label="return"];
    bb67__0_1365 -> bb81__0_1365 [label="return"];
    bb68__0_1365 -> bb69__0_1365 [label="return"];
    bb69__0_1365 -> bb81__0_1365 [label="return"];
    bb71__0_1365 -> bb56__0_1365 [label="return"];
    bb71__0_1365 -> bb69__0_1365 [label="unwind"];
    bb72__0_1365 -> bb59__0_1365 [label="return"];
    bb72__0_1365 -> bb70__0_1365 [label="unwind"];
    bb73__0_1365 -> bb60__0_1365 [label=""];
    bb74__0_1365 -> bb60__0_1365 [label="return"];
    bb75__0_1365 -> bb60__0_1365 [label="0"];
    bb75__0_1365 -> bb74__0_1365 [label="otherwise"];
    bb76__0_1365 -> bb63__0_1365 [label=""];
    bb77__0_1365 -> bb65__0_1365 [label=""];
    bb78__0_1365 -> bb79__0_1365 [label=""];
    bb79__0_1365 -> bb68__0_1365 [label=""];
    bb80__0_1365 -> bb70__0_1365 [label="return"];
    bb81__0_1365 -> bb70__0_1365 [label="0"];
    bb81__0_1365 -> bb80__0_1365 [label="otherwise"];
}
