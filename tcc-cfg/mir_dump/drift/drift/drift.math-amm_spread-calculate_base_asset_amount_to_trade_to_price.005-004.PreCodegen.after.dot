digraph Mir_0_1865 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_base_asset_amount_to_trade_to_price(_1: &amp;ReErased state::perp_market::AMM, _2: u64, _3: controller::position::PositionDirection) -&gt; std::result::Result&lt;(u64, controller::position::PositionDirection), error::ErrorCode&gt;<br align="left"/>let _4: math::bn::U192;<br align="left"/>let mut _5: u128;<br align="left"/>let _6: math::bn::U192;<br align="left"/>let mut _7: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, math::bn::U192&gt;;<br align="left"/>let mut _8: std::result::Result&lt;math::bn::U192, error::ErrorCode&gt;;<br align="left"/>let mut _9: math::bn::U192;<br align="left"/>let mut _10: math::bn::U192;<br align="left"/>let mut _11: isize;<br align="left"/>let _12: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _13: !;<br align="left"/>let mut _14: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _15: math::bn::U192;<br align="left"/>let _16: ();<br align="left"/>let mut _17: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _18: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _19: bool;<br align="left"/>let mut _20: u64;<br align="left"/>let mut _21: ();<br align="left"/>let _22: error::ErrorCode;<br align="left"/>let _23: ();<br align="left"/>let mut _24: &amp;ReErased str;<br align="left"/>let _25: &amp;ReErased str;<br align="left"/>let mut _26: &amp;ReErased std::string::String;<br align="left"/>let _27: &amp;ReErased std::string::String;<br align="left"/>let _28: std::string::String;<br align="left"/>let _29: std::string::String;<br align="left"/>let mut _30: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _31: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _32: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _33: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _34: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _35: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _36: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _37: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _38: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _39: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _40: &amp;ReErased error::ErrorCode;<br align="left"/>let _41: &amp;ReErased error::ErrorCode;<br align="left"/>let _42: ();<br align="left"/>let mut _43: &amp;ReErased str;<br align="left"/>let _44: &amp;ReErased str;<br align="left"/>let mut _45: error::ErrorCode;<br align="left"/>let mut _46: isize;<br align="left"/>let _47: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _48: !;<br align="left"/>let mut _49: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _50: ();<br align="left"/>let _51: math::bn::U192;<br align="left"/>let mut _52: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, math::bn::U192&gt;;<br align="left"/>let mut _53: std::result::Result&lt;math::bn::U192, error::ErrorCode&gt;;<br align="left"/>let mut _54: math::bn::U192;<br align="left"/>let mut _55: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, math::bn::U192&gt;;<br align="left"/>let mut _56: std::result::Result&lt;math::bn::U192, error::ErrorCode&gt;;<br align="left"/>let mut _57: math::bn::U192;<br align="left"/>let mut _58: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, math::bn::U192&gt;;<br align="left"/>let mut _59: std::result::Result&lt;math::bn::U192, error::ErrorCode&gt;;<br align="left"/>let mut _60: math::bn::U192;<br align="left"/>let mut _61: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, math::bn::U192&gt;;<br align="left"/>let mut _62: std::result::Result&lt;math::bn::U192, error::ErrorCode&gt;;<br align="left"/>let mut _63: math::bn::U192;<br align="left"/>let mut _64: math::bn::U192;<br align="left"/>let mut _65: isize;<br align="left"/>let _66: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _67: !;<br align="left"/>let mut _68: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _69: math::bn::U192;<br align="left"/>let mut _70: math::bn::U192;<br align="left"/>let mut _71: u64;<br align="left"/>let mut _72: isize;<br align="left"/>let _73: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _74: !;<br align="left"/>let mut _75: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _76: math::bn::U192;<br align="left"/>let mut _77: math::bn::U192;<br align="left"/>let mut _78: u128;<br align="left"/>let mut _79: isize;<br align="left"/>let _80: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _81: !;<br align="left"/>let mut _82: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _83: math::bn::U192;<br align="left"/>let mut _84: math::bn::U192;<br align="left"/>let mut _85: isize;<br align="left"/>let _86: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _87: !;<br align="left"/>let mut _88: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _89: math::bn::U192;<br align="left"/>let _90: u128;<br align="left"/>let mut _91: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _92: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _93: math::bn::U192;<br align="left"/>let mut _94: &amp;ReErased math::bn::U192;<br align="left"/>let mut _95: isize;<br align="left"/>let _96: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _97: !;<br align="left"/>let mut _98: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _99: u128;<br align="left"/>let _100: u128;<br align="left"/>let mut _101: bool;<br align="left"/>let mut _102: u32;<br align="left"/>let _103: u128;<br align="left"/>let mut _104: (u128, u128);<br align="left"/>let mut _105: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (u128, u128)&gt;;<br align="left"/>let mut _106: std::result::Result&lt;(u128, u128), error::ErrorCode&gt;;<br align="left"/>let mut _107: &amp;ReErased state::perp_market::AMM;<br align="left"/>let mut _108: controller::position::PositionDirection;<br align="left"/>let mut _109: isize;<br align="left"/>let _110: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _111: !;<br align="left"/>let mut _112: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _113: (u128, u128);<br align="left"/>let mut _114: bool;<br align="left"/>let mut _115: u128;<br align="left"/>let mut _116: u128;<br align="left"/>let _117: u64;<br align="left"/>let mut _118: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _119: u128;<br align="left"/>let mut _120: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _121: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _122: u128;<br align="left"/>let mut _123: u128;<br align="left"/>let mut _124: isize;<br align="left"/>let _125: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _126: !;<br align="left"/>let mut _127: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _128: u128;<br align="left"/>let mut _129: (u64, controller::position::PositionDirection);<br align="left"/>let mut _130: u64;<br align="left"/>let mut _131: controller::position::PositionDirection;<br align="left"/>let _132: u64;<br align="left"/>let mut _133: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _134: u128;<br align="left"/>let mut _135: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _136: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _137: u128;<br align="left"/>let mut _138: u128;<br align="left"/>let mut _139: isize;<br align="left"/>let _140: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _141: !;<br align="left"/>let mut _142: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _143: u128;<br align="left"/>let mut _144: (u64, controller::position::PositionDirection);<br align="left"/>let mut _145: u64;<br align="left"/>let mut _146: controller::position::PositionDirection;<br align="left"/>let mut _147: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>debug amm =&gt; _1;<br align="left"/>debug limit_price =&gt; _2;<br align="left"/>debug direction =&gt; _3;<br align="left"/>debug invariant_sqrt_u192 =&gt; _4;<br align="left"/>debug invariant =&gt; _6;<br align="left"/>debug residual =&gt; _12;<br align="left"/>debug val =&gt; _15;<br align="left"/>debug error_code =&gt; _22;<br align="left"/>debug res =&gt; _29;<br align="left"/>debug residual =&gt; _47;<br align="left"/>debug val =&gt; _50;<br align="left"/>debug new_base_asset_reserve_squared =&gt; _51;<br align="left"/>debug residual =&gt; _66;<br align="left"/>debug val =&gt; _69;<br align="left"/>debug residual =&gt; _73;<br align="left"/>debug val =&gt; _76;<br align="left"/>debug residual =&gt; _80;<br align="left"/>debug val =&gt; _83;<br align="left"/>debug residual =&gt; _86;<br align="left"/>debug val =&gt; _89;<br align="left"/>debug new_base_asset_reserve =&gt; _90;<br align="left"/>debug residual =&gt; _96;<br align="left"/>debug val =&gt; _99;<br align="left"/>debug base_asset_reserve_before =&gt; _100;<br align="left"/>debug spread_base_asset_reserve =&gt; _103;<br align="left"/>debug residual =&gt; _110;<br align="left"/>debug val =&gt; _113;<br align="left"/>debug max_trade_amount =&gt; _117;<br align="left"/>debug residual =&gt; _125;<br align="left"/>debug val =&gt; _128;<br align="left"/>debug max_trade_amount =&gt; _132;<br align="left"/>debug residual =&gt; _140;<br align="left"/>debug val =&gt; _143;<br align="left"/>>;
    bb0__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = ((*_1).10: u128)<br/></td></tr><tr><td align="left">_4 = &lt;U192 as From&lt;u128&gt;&gt;::from(move _5)</td></tr></table>>];
    bb1__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = _4<br/>StorageLive(_10)<br/>_10 = _4<br/></td></tr><tr><td align="left">_8 = &lt;U192 as SafeMath&gt;::safe_mul(move _9, move _10)</td></tr></table>>];
    bb2__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = &lt;std::result::Result&lt;U192, error::ErrorCode&gt; as Try&gt;::branch(move _8)</td></tr></table>>];
    bb3__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_11 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _11)</td></tr></table>>];
    bb4__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_15)<br/>_15 = ((_7 as Continue).0: math::bn::U192)<br/>_6 = _15<br/>StorageDead(_15)<br/>StorageDead(_7)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_20 = _2<br/>_19 = Gt(move _20, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _19)</td></tr></table>>];
    bb5__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_7 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_14)<br/>_14 = _12<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, controller::position::PositionDirection), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _14)</td></tr></table>>];
    bb7__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_12)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageLive(_21)<br/>_21 = ()<br/>_18 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _21)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageLive(_22)<br/>_22 = error::ErrorCode::InvalidOrderLimitPrice<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>_147 = const _<br/>_33 = &amp;(*_147)<br/>_32 = &amp;(*_33)<br/>_31 = move _32 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_32)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>_41 = &amp;_22<br/>_40 = &amp;(*_41)<br/></td></tr><tr><td align="left">_39 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _40)</td></tr></table>>];
    bb10__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>_38 = [move _39]<br/>StorageDead(_39)<br/>_37 = &amp;_38<br/>_36 = &amp;(*_37)<br/>_35 = move _36 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">_30 = Arguments::&lt;'_&gt;::new_v1(move _31, move _35)</td></tr></table>>];
    bb11__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">_29 = format(move _30)</td></tr></table>>];
    bb12__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_41)<br/>StorageDead(_38)<br/>StorageDead(_37)<br/>StorageDead(_33)<br/>_28 = move _29<br/>StorageDead(_29)<br/>_27 = &amp;_28<br/>_26 = &amp;(*_27)<br/></td></tr><tr><td align="left">_25 = &lt;String as Deref&gt;::deref(move _26)</td></tr></table>>];
    bb13__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">_24 = &amp;(*_25)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">_23 = solana_program::log::sol_log(move _24)</td></tr></table>>];
    bb14__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/></td></tr><tr><td align="left">drop(_28)</td></tr></table>>];
    bb15__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_27)<br/>StorageDead(_25)<br/>StorageDead(_23)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>_44 = const &quot;limit_price &lt;= 0&quot;<br/>_43 = &amp;(*_44)<br/></td></tr><tr><td align="left">_42 = solana_program::log::sol_log(move _43)</td></tr></table>>];
    bb16__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_44)<br/>StorageDead(_42)<br/>StorageLive(_45)<br/>_45 = _22<br/>_18 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _45)<br/>StorageDead(_45)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/></td></tr><tr><td align="left">_17 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _18)</td></tr></table>>];
    bb18__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>_46 = discriminant(_17)<br/></td></tr><tr><td align="left">switchInt(move _46)</td></tr></table>>];
    bb19__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_50)<br/>_50 = ((_17 as Continue).0: ())<br/>_16 = _50<br/>StorageDead(_50)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>_63 = _6<br/>StorageLive(_64)<br/></td></tr><tr><td align="left">_64 = &lt;U192 as From&lt;u128&gt;&gt;::from(const _)</td></tr></table>>];
    bb20__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>_47 = ((_17 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_49)<br/>_49 = _47<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, controller::position::PositionDirection), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _49)</td></tr></table>>];
    bb21__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_47)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left">_62 = &lt;U192 as SafeMath&gt;::safe_mul(move _63, move _64)</td></tr></table>>];
    bb23__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageDead(_63)<br/></td></tr><tr><td align="left">_61 = &lt;std::result::Result&lt;U192, error::ErrorCode&gt; as Try&gt;::branch(move _62)</td></tr></table>>];
    bb24__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>_65 = discriminant(_61)<br/></td></tr><tr><td align="left">switchInt(move _65)</td></tr></table>>];
    bb25__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_69)<br/>_69 = ((_61 as Continue).0: math::bn::U192)<br/>_60 = _69<br/>StorageDead(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>_71 = _2<br/></td></tr><tr><td align="left">_70 = &lt;U192 as From&lt;u64&gt;&gt;::from(move _71)</td></tr></table>>];
    bb26__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_66)<br/>_66 = ((_61 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_68)<br/>_68 = _66<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, controller::position::PositionDirection), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _68)</td></tr></table>>];
    bb27__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>StorageDead(_66)<br/>StorageDead(_60)<br/>StorageDead(_59)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/></td></tr><tr><td align="left">_59 = &lt;U192 as SafeMath&gt;::safe_div(move _60, move _70)</td></tr></table>>];
    bb29__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">_58 = &lt;std::result::Result&lt;U192, error::ErrorCode&gt; as Try&gt;::branch(move _59)</td></tr></table>>];
    bb30__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>_72 = discriminant(_58)<br/></td></tr><tr><td align="left">switchInt(move _72)</td></tr></table>>];
    bb31__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_76)<br/>_76 = ((_58 as Continue).0: math::bn::U192)<br/>_57 = _76<br/>StorageDead(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>_78 = ((*_1).11: u128)<br/></td></tr><tr><td align="left">_77 = &lt;U192 as From&lt;u128&gt;&gt;::from(move _78)</td></tr></table>>];
    bb32__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_73)<br/>_73 = ((_58 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_75)<br/>_75 = _73<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, controller::position::PositionDirection), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _75)</td></tr></table>>];
    bb33__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/></td></tr><tr><td align="left">_56 = &lt;U192 as SafeMath&gt;::safe_mul(move _57, move _77)</td></tr></table>>];
    bb35__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">_55 = &lt;std::result::Result&lt;U192, error::ErrorCode&gt; as Try&gt;::branch(move _56)</td></tr></table>>];
    bb36__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>_79 = discriminant(_55)<br/></td></tr><tr><td align="left">switchInt(move _79)</td></tr></table>>];
    bb37__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_83)<br/>_83 = ((_55 as Continue).0: math::bn::U192)<br/>_54 = _83<br/>StorageDead(_83)<br/>StorageLive(_84)<br/></td></tr><tr><td align="left">_84 = &lt;U192 as From&lt;u128&gt;&gt;::from(const _)</td></tr></table>>];
    bb38__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_80)<br/>_80 = ((_55 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_82)<br/>_82 = _80<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, controller::position::PositionDirection), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _82)</td></tr></table>>];
    bb39__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>StorageDead(_80)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left">_53 = &lt;U192 as SafeMath&gt;::safe_div(move _54, move _84)</td></tr></table>>];
    bb41__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">_52 = &lt;std::result::Result&lt;U192, error::ErrorCode&gt; as Try&gt;::branch(move _53)</td></tr></table>>];
    bb42__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>_85 = discriminant(_52)<br/></td></tr><tr><td align="left">switchInt(move _85)</td></tr></table>>];
    bb43__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageLive(_89)<br/>_89 = ((_52 as Continue).0: math::bn::U192)<br/>_51 = _89<br/>StorageDead(_89)<br/>StorageDead(_61)<br/>StorageDead(_58)<br/>StorageDead(_55)<br/>StorageDead(_52)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>_94 = &amp;_51<br/></td></tr><tr><td align="left">_93 = U192::integer_sqrt(move _94)</td></tr></table>>];
    bb44__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_86)<br/>_86 = ((_52 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_88)<br/>_88 = _86<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, controller::position::PositionDirection), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _88)</td></tr></table>>];
    bb45__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>StorageDead(_86)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/></td></tr><tr><td align="left">_92 = U192::try_to_u128(move _93)</td></tr></table>>];
    bb47__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/></td></tr><tr><td align="left">_91 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _92)</td></tr></table>>];
    bb48__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>_95 = discriminant(_91)<br/></td></tr><tr><td align="left">switchInt(move _95)</td></tr></table>>];
    bb49__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageLive(_99)<br/>_99 = ((_91 as Continue).0: u128)<br/>_90 = _99<br/>StorageDead(_99)<br/>StorageDead(_91)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>_102 = ((*_1).63: u32)<br/>_101 = Gt(move _102, const 0_u32)<br/></td></tr><tr><td align="left">switchInt(move _101)</td></tr></table>>];
    bb50__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageLive(_96)<br/>_96 = ((_91 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_98)<br/>_98 = _96<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, controller::position::PositionDirection), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _98)</td></tr></table>>];
    bb51__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>StorageDead(_96)<br/>StorageDead(_91)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb52__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>_107 = &amp;(*_1)<br/>StorageLive(_108)<br/>_108 = _3<br/></td></tr><tr><td align="left">_106 = get_spread_reserves(move _107, move _108)</td></tr></table>>];
    bb53__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>_100 = ((*_1).5: u128)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/>StorageDead(_107)<br/></td></tr><tr><td align="left">_105 = &lt;std::result::Result&lt;(u128, u128), error::ErrorCode&gt; as Try&gt;::branch(move _106)</td></tr></table>>];
    bb55__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/>_109 = discriminant(_105)<br/></td></tr><tr><td align="left">switchInt(move _109)</td></tr></table>>];
    bb56__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageLive(_113)<br/>_113 = ((_105 as Continue).0: (u128, u128))<br/>_104 = _113<br/>StorageDead(_113)<br/>StorageLive(_103)<br/>_103 = (_104.0: u128)<br/>StorageDead(_105)<br/>StorageDead(_104)<br/>_100 = _103<br/>StorageDead(_103)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb57__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageLive(_110)<br/>_110 = ((_105 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_112)<br/>_112 = _110<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, controller::position::PositionDirection), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _112)</td></tr></table>>];
    bb58__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>StorageDead(_110)<br/>StorageDead(_105)<br/>StorageDead(_104)<br/>StorageDead(_101)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>_115 = _90<br/>StorageLive(_116)<br/>_116 = _100<br/>_114 = Gt(move _115, move _116)<br/></td></tr><tr><td align="left">switchInt(move _114)</td></tr></table>>];
    bb60__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_116)<br/>StorageDead(_115)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>_122 = _90<br/>StorageLive(_123)<br/>_123 = _100<br/></td></tr><tr><td align="left">_121 = &lt;u128 as SafeMath&gt;::safe_sub(move _122, move _123)</td></tr></table>>];
    bb61__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/>StorageDead(_122)<br/></td></tr><tr><td align="left">_120 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _121)</td></tr></table>>];
    bb62__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_121)<br/>_124 = discriminant(_120)<br/></td></tr><tr><td align="left">switchInt(move _124)</td></tr></table>>];
    bb63__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageLive(_128)<br/>_128 = ((_120 as Continue).0: u128)<br/>_119 = _128<br/>StorageDead(_128)<br/></td></tr><tr><td align="left">_118 = &lt;u128 as Cast&gt;::cast::&lt;u64&gt;(move _119)</td></tr></table>>];
    bb64__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageLive(_125)<br/>_125 = ((_120 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_127)<br/>_127 = _125<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, controller::position::PositionDirection), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _127)</td></tr></table>>];
    bb65__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/>StorageDead(_125)<br/>StorageDead(_119)<br/>StorageDead(_118)<br/>StorageDead(_120)<br/>StorageDead(_117)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb66__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/></td></tr><tr><td align="left">_117 = std::result::Result::&lt;u64, error::ErrorCode&gt;::unwrap_or(move _118, const _)</td></tr></table>>];
    bb67__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>StorageDead(_120)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>_130 = _117<br/>StorageLive(_131)<br/>_131 = controller::position::PositionDirection::Short<br/>_129 = (move _130, move _131)<br/>StorageDead(_131)<br/>StorageDead(_130)<br/>_0 = std::result::Result::&lt;(u64, controller::position::PositionDirection), error::ErrorCode&gt;::Ok(move _129)<br/>StorageDead(_129)<br/>StorageDead(_117)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_116)<br/>StorageDead(_115)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>_137 = _100<br/>StorageLive(_138)<br/>_138 = _90<br/></td></tr><tr><td align="left">_136 = &lt;u128 as SafeMath&gt;::safe_sub(move _137, move _138)</td></tr></table>>];
    bb69__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/>StorageDead(_137)<br/></td></tr><tr><td align="left">_135 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _136)</td></tr></table>>];
    bb70__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_136)<br/>_139 = discriminant(_135)<br/></td></tr><tr><td align="left">switchInt(move _139)</td></tr></table>>];
    bb71__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageLive(_143)<br/>_143 = ((_135 as Continue).0: u128)<br/>_134 = _143<br/>StorageDead(_143)<br/></td></tr><tr><td align="left">_133 = &lt;u128 as Cast&gt;::cast::&lt;u64&gt;(move _134)</td></tr></table>>];
    bb72__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageLive(_140)<br/>_140 = ((_135 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_142)<br/>_142 = _140<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, controller::position::PositionDirection), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _142)</td></tr></table>>];
    bb73__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_142)<br/>StorageDead(_140)<br/>StorageDead(_134)<br/>StorageDead(_133)<br/>StorageDead(_135)<br/>StorageDead(_132)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb74__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_134)<br/></td></tr><tr><td align="left">_132 = std::result::Result::&lt;u64, error::ErrorCode&gt;::unwrap_or(move _133, const _)</td></tr></table>>];
    bb75__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/>StorageDead(_135)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>_145 = _132<br/>StorageLive(_146)<br/>_146 = controller::position::PositionDirection::Long<br/>_144 = (move _145, move _146)<br/>StorageDead(_146)<br/>StorageDead(_145)<br/>_0 = std::result::Result::&lt;(u64, controller::position::PositionDirection), error::ErrorCode&gt;::Ok(move _144)<br/>StorageDead(_144)<br/>StorageDead(_132)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb76__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/>StorageDead(_100)<br/>StorageDead(_90)<br/>StorageDead(_51)<br/>StorageDead(_6)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb77__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb78__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb79__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb80__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_56)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb81__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb82__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_58)<br/>StorageDead(_55)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb83__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb84__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb85__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left">return</td></tr></table>>];
    bb86__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">86 (cleanup)</td></tr><tr><td align="left">drop(_28)</td></tr></table>>];
    bb87__0_1865 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">87 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_1865 -> bb1__0_1865 [label="return"];
    bb1__0_1865 -> bb2__0_1865 [label="return"];
    bb2__0_1865 -> bb3__0_1865 [label="return"];
    bb3__0_1865 -> bb4__0_1865 [label="0"];
    bb3__0_1865 -> bb6__0_1865 [label="1"];
    bb3__0_1865 -> bb5__0_1865 [label="otherwise"];
    bb4__0_1865 -> bb9__0_1865 [label="0"];
    bb4__0_1865 -> bb8__0_1865 [label="otherwise"];
    bb6__0_1865 -> bb7__0_1865 [label="return"];
    bb7__0_1865 -> bb84__0_1865 [label=""];
    bb8__0_1865 -> bb17__0_1865 [label=""];
    bb9__0_1865 -> bb10__0_1865 [label="return"];
    bb10__0_1865 -> bb11__0_1865 [label="return"];
    bb11__0_1865 -> bb12__0_1865 [label="return"];
    bb12__0_1865 -> bb13__0_1865 [label="return"];
    bb12__0_1865 -> bb86__0_1865 [label="unwind"];
    bb13__0_1865 -> bb14__0_1865 [label="return"];
    bb13__0_1865 -> bb86__0_1865 [label="unwind"];
    bb14__0_1865 -> bb15__0_1865 [label="return"];
    bb14__0_1865 -> bb87__0_1865 [label="unwind"];
    bb15__0_1865 -> bb16__0_1865 [label="return"];
    bb16__0_1865 -> bb17__0_1865 [label=""];
    bb17__0_1865 -> bb18__0_1865 [label="return"];
    bb18__0_1865 -> bb19__0_1865 [label="0"];
    bb18__0_1865 -> bb20__0_1865 [label="1"];
    bb18__0_1865 -> bb5__0_1865 [label="otherwise"];
    bb19__0_1865 -> bb22__0_1865 [label="return"];
    bb20__0_1865 -> bb21__0_1865 [label="return"];
    bb21__0_1865 -> bb84__0_1865 [label=""];
    bb22__0_1865 -> bb23__0_1865 [label="return"];
    bb23__0_1865 -> bb24__0_1865 [label="return"];
    bb24__0_1865 -> bb25__0_1865 [label="0"];
    bb24__0_1865 -> bb26__0_1865 [label="1"];
    bb24__0_1865 -> bb5__0_1865 [label="otherwise"];
    bb25__0_1865 -> bb28__0_1865 [label="return"];
    bb26__0_1865 -> bb27__0_1865 [label="return"];
    bb27__0_1865 -> bb80__0_1865 [label=""];
    bb28__0_1865 -> bb29__0_1865 [label="return"];
    bb29__0_1865 -> bb30__0_1865 [label="return"];
    bb30__0_1865 -> bb31__0_1865 [label="0"];
    bb30__0_1865 -> bb32__0_1865 [label="1"];
    bb30__0_1865 -> bb5__0_1865 [label="otherwise"];
    bb31__0_1865 -> bb34__0_1865 [label="return"];
    bb32__0_1865 -> bb33__0_1865 [label="return"];
    bb33__0_1865 -> bb80__0_1865 [label=""];
    bb34__0_1865 -> bb35__0_1865 [label="return"];
    bb35__0_1865 -> bb36__0_1865 [label="return"];
    bb36__0_1865 -> bb37__0_1865 [label="0"];
    bb36__0_1865 -> bb38__0_1865 [label="1"];
    bb36__0_1865 -> bb5__0_1865 [label="otherwise"];
    bb37__0_1865 -> bb40__0_1865 [label="return"];
    bb38__0_1865 -> bb39__0_1865 [label="return"];
    bb39__0_1865 -> bb81__0_1865 [label=""];
    bb40__0_1865 -> bb41__0_1865 [label="return"];
    bb41__0_1865 -> bb42__0_1865 [label="return"];
    bb42__0_1865 -> bb43__0_1865 [label="0"];
    bb42__0_1865 -> bb44__0_1865 [label="1"];
    bb42__0_1865 -> bb5__0_1865 [label="otherwise"];
    bb43__0_1865 -> bb46__0_1865 [label="return"];
    bb44__0_1865 -> bb45__0_1865 [label="return"];
    bb45__0_1865 -> bb82__0_1865 [label=""];
    bb46__0_1865 -> bb47__0_1865 [label="return"];
    bb47__0_1865 -> bb48__0_1865 [label="return"];
    bb48__0_1865 -> bb49__0_1865 [label="0"];
    bb48__0_1865 -> bb50__0_1865 [label="1"];
    bb48__0_1865 -> bb5__0_1865 [label="otherwise"];
    bb49__0_1865 -> bb53__0_1865 [label="0"];
    bb49__0_1865 -> bb52__0_1865 [label="otherwise"];
    bb50__0_1865 -> bb51__0_1865 [label="return"];
    bb51__0_1865 -> bb79__0_1865 [label=""];
    bb52__0_1865 -> bb54__0_1865 [label="return"];
    bb53__0_1865 -> bb59__0_1865 [label=""];
    bb54__0_1865 -> bb55__0_1865 [label="return"];
    bb55__0_1865 -> bb56__0_1865 [label="0"];
    bb55__0_1865 -> bb57__0_1865 [label="1"];
    bb55__0_1865 -> bb5__0_1865 [label="otherwise"];
    bb56__0_1865 -> bb59__0_1865 [label=""];
    bb57__0_1865 -> bb58__0_1865 [label="return"];
    bb58__0_1865 -> bb78__0_1865 [label=""];
    bb59__0_1865 -> bb68__0_1865 [label="0"];
    bb59__0_1865 -> bb60__0_1865 [label="otherwise"];
    bb60__0_1865 -> bb61__0_1865 [label="return"];
    bb61__0_1865 -> bb62__0_1865 [label="return"];
    bb62__0_1865 -> bb63__0_1865 [label="0"];
    bb62__0_1865 -> bb64__0_1865 [label="1"];
    bb62__0_1865 -> bb5__0_1865 [label="otherwise"];
    bb63__0_1865 -> bb66__0_1865 [label="return"];
    bb64__0_1865 -> bb65__0_1865 [label="return"];
    bb65__0_1865 -> bb77__0_1865 [label=""];
    bb66__0_1865 -> bb67__0_1865 [label="return"];
    bb67__0_1865 -> bb76__0_1865 [label=""];
    bb68__0_1865 -> bb69__0_1865 [label="return"];
    bb69__0_1865 -> bb70__0_1865 [label="return"];
    bb70__0_1865 -> bb71__0_1865 [label="0"];
    bb70__0_1865 -> bb72__0_1865 [label="1"];
    bb70__0_1865 -> bb5__0_1865 [label="otherwise"];
    bb71__0_1865 -> bb74__0_1865 [label="return"];
    bb72__0_1865 -> bb73__0_1865 [label="return"];
    bb73__0_1865 -> bb77__0_1865 [label=""];
    bb74__0_1865 -> bb75__0_1865 [label="return"];
    bb75__0_1865 -> bb76__0_1865 [label=""];
    bb76__0_1865 -> bb85__0_1865 [label=""];
    bb77__0_1865 -> bb78__0_1865 [label=""];
    bb78__0_1865 -> bb79__0_1865 [label=""];
    bb79__0_1865 -> bb83__0_1865 [label=""];
    bb80__0_1865 -> bb81__0_1865 [label=""];
    bb81__0_1865 -> bb82__0_1865 [label=""];
    bb82__0_1865 -> bb83__0_1865 [label=""];
    bb83__0_1865 -> bb84__0_1865 [label=""];
    bb84__0_1865 -> bb85__0_1865 [label=""];
    bb86__0_1865 -> bb87__0_1865 [label="return"];
}
