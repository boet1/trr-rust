// MIR for `verify_and_decode_ed25519_msg::{closure#0}` after PreCodegen

fn verify_and_decode_ed25519_msg::{closure#0}(_1: {closure@programs/drift/src/validation/sig_verification.rs:102:86: 102:89}, _2: bytemuck::PodCastError) -> error::ErrorCode {
    let mut _0: error::ErrorCode;
    let _3: ();
    let mut _4: &str;
    let _5: &str;

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        StorageLive(_5);
        _5 = const "Invalid Ix: failed to cast slice";
        _4 = &(*_5);
        _3 = solana_program::log::sol_log(move _4) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_4);
        StorageDead(_5);
        StorageDead(_3);
        _0 = error::ErrorCode::SigVerificationFailed;
        return;
    }
}
