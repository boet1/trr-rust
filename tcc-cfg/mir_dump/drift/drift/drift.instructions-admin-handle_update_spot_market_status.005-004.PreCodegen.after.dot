digraph Mir_0_5583 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn admin::handle_update_spot_market_status(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::admin::AdminUpdateSpotMarket&lt;ReErased&gt;&gt;, _2: state::perp_market::MarketStatus) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _5: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _6: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _7: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _8: isize;<br align="left"/>let _9: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _10: !;<br align="left"/>let mut _11: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _12: ();<br align="left"/>let _13: ();<br align="left"/>let mut _14: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _15: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _16: &amp;ReErased state::perp_market::MarketStatus;<br align="left"/>let mut _17: isize;<br align="left"/>let _18: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _19: !;<br align="left"/>let mut _20: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _21: ();<br align="left"/>let _22: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _23: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _24: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _25: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _26: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _27: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _28: Closure(DefId(0:5584 ~ drift[d311]::instructions::admin::handle_update_spot_market_status::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _29: isize;<br align="left"/>let _30: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _31: !;<br align="left"/>let mut _32: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _33: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _34: ();<br align="left"/>let mut _35: &amp;ReErased str;<br align="left"/>let _36: &amp;ReErased str;<br align="left"/>let mut _37: &amp;ReErased std::string::String;<br align="left"/>let _38: &amp;ReErased std::string::String;<br align="left"/>let _39: std::string::String;<br align="left"/>let _40: std::string::String;<br align="left"/>let mut _41: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _42: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _43: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _44: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _45: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _46: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _47: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _48: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _49: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _50: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _51: &amp;ReErased u16;<br align="left"/>let _52: &amp;ReErased u16;<br align="left"/>let _53: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _54: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _55: ();<br align="left"/>let mut _56: &amp;ReErased str;<br align="left"/>let _57: &amp;ReErased str;<br align="left"/>let mut _58: &amp;ReErased std::string::String;<br align="left"/>let _59: &amp;ReErased std::string::String;<br align="left"/>let _60: std::string::String;<br align="left"/>let _61: std::string::String;<br align="left"/>let mut _62: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _63: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _64: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _65: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _66: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _67: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _68: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _69: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _70: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _71: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _72: &amp;ReErased state::perp_market::MarketStatus;<br align="left"/>let _73: &amp;ReErased state::perp_market::MarketStatus;<br align="left"/>let _74: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _75: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _76: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _77: &amp;ReErased state::perp_market::MarketStatus;<br align="left"/>let _78: &amp;ReErased state::perp_market::MarketStatus;<br align="left"/>let mut _79: state::perp_market::MarketStatus;<br align="left"/>let mut _80: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _81: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _82: ();<br align="left"/>let mut _83: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _84: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _85: &amp;ReErased mut instructions::admin::AdminUpdateSpotMarket&lt;ReErased&gt;;<br align="left"/>let mut _86: &amp;ReErased mut instructions::admin::AdminUpdateSpotMarket&lt;ReErased&gt;;<br align="left"/>let mut _87: isize;<br align="left"/>let mut _88: isize;<br align="left"/>let mut _89: isize;<br align="left"/>let mut _90: isize;<br align="left"/>let mut _91: isize;<br align="left"/>let mut _92: isize;<br align="left"/>let mut _93: isize;<br align="left"/>let mut _94: isize;<br align="left"/>let mut _95: isize;<br align="left"/>let mut _96: isize;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug status =&gt; _2;<br align="left"/>debug residual =&gt; _9;<br align="left"/>debug val =&gt; _12;<br align="left"/>debug residual =&gt; _18;<br align="left"/>debug val =&gt; _21;<br align="left"/>debug spot_market =&gt; _22;<br align="left"/>debug residual =&gt; _30;<br align="left"/>debug val =&gt; _33;<br align="left"/>debug res =&gt; _40;<br align="left"/>debug res =&gt; _61;<br align="left"/>>;
    bb0__0_5583 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_85 = deref_copy (_1.1: &amp;mut instructions::admin::AdminUpdateSpotMarket&lt;'_&gt;)<br/>_7 = &amp;((*_85).2: anchor_lang::prelude::AccountLoader&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_6 = &amp;(*_7)<br/></td></tr><tr><td align="left">_5 = constraints::spot_market_valid(move _6)</td></tr></table>>];
    bb1__0_5583 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb2__0_5583 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_8 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb3__0_5583 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_4 as Continue).0: ())<br/>_3 = _12<br/>StorageDead(_12)<br/>_87 = discriminant(_4)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_16 = &amp;_2<br/></td></tr><tr><td align="left">_15 = state::perp_market::MarketStatus::validate_not_deprecated(move _16)</td></tr></table>>];
    bb4__0_5583 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_5583 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>_9 = move ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_11)<br/>_11 = move _9<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _11)</td></tr></table>>];
    bb6__0_5583 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_9)<br/>_93 = discriminant(_4)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_5583 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/></td></tr><tr><td align="left">_14 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _15)</td></tr></table>>];
    bb8__0_5583 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>_17 = discriminant(_14)<br/></td></tr><tr><td align="left">switchInt(move _17)</td></tr></table>>];
    bb9__0_5583 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = ((_14 as Continue).0: ())<br/>_13 = _21<br/>StorageDead(_21)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_86 = deref_copy (_1.1: &amp;mut instructions::admin::AdminUpdateSpotMarket&lt;'_&gt;)<br/>_27 = &amp;((*_86).2: anchor_lang::prelude::AccountLoader&lt;'_, state::spot_market::SpotMarket&gt;)<br/></td></tr><tr><td align="left">_26 = anchor_lang::prelude::AccountLoader::&lt;'_, SpotMarket&gt;::load_mut(move _27)</td></tr></table>>];
    bb10__0_5583 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_18)<br/>_18 = ((_14 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_20)<br/>_20 = _18<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _20)</td></tr></table>>];
    bb11__0_5583 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_18)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_5583 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageLive(_28)<br/>_28 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_25 = std::result::Result::&lt;RefMut&lt;'_, SpotMarket&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _26, move _28)</td></tr></table>>];
    bb13__0_5583 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">_24 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _25)</td></tr></table>>];
    bb14__0_5583 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>_29 = discriminant(_24)<br/></td></tr><tr><td align="left">switchInt(move _29)</td></tr></table>>];
    bb15__0_5583 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_33)<br/>_33 = move ((_24 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_23 = move _33<br/>StorageDead(_33)<br/>_22 = &amp;mut _23<br/>_91 = discriminant(_24)<br/>StorageDead(_24)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>_84 = const _<br/>_44 = &amp;(*_84)<br/>_43 = &amp;(*_44)<br/>_42 = move _43 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_43)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>_54 = &amp;(*_22)<br/></td></tr><tr><td align="left">_53 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _54)</td></tr></table>>];
    bb16__0_5583 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_30)<br/>_30 = ((_24 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_32)<br/>_32 = _30<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _32)</td></tr></table>>];
    bb17__0_5583 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_30)<br/>_89 = discriminant(_24)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_5583 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>_52 = &amp;((*_53).42: u16)<br/>_51 = &amp;(*_52)<br/></td></tr><tr><td align="left">_50 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _51)</td></tr></table>>];
    bb19__0_5583 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>_49 = [move _50]<br/>StorageDead(_50)<br/>_48 = &amp;_49<br/>_47 = &amp;(*_48)<br/>_46 = move _47 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">_41 = Arguments::&lt;'_&gt;::new_v1(move _42, move _46)</td></tr></table>>];
    bb20__0_5583 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">_40 = format(move _41)</td></tr></table>>];
    bb21__0_5583 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_53)<br/>StorageDead(_52)<br/>StorageDead(_49)<br/>StorageDead(_48)<br/>StorageDead(_44)<br/>_39 = move _40<br/>StorageDead(_40)<br/>_38 = &amp;_39<br/>_37 = &amp;(*_38)<br/></td></tr><tr><td align="left">_36 = &lt;String as Deref&gt;::deref(move _37)</td></tr></table>>];
    bb22__0_5583 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">_35 = &amp;(*_36)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">_34 = solana_program::log::sol_log(move _35)</td></tr></table>>];
    bb23__0_5583 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/></td></tr><tr><td align="left">drop(_39)</td></tr></table>>];
    bb24__0_5583 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_38)<br/>StorageDead(_36)<br/>StorageDead(_34)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>_83 = const _<br/>_65 = &amp;(*_83)<br/>_64 = &amp;(*_65)<br/>_63 = move _64 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_64)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>_75 = &amp;(*_22)<br/></td></tr><tr><td align="left">_74 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _75)</td></tr></table>>];
    bb25__0_5583 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>_73 = &amp;((*_74).45: state::perp_market::MarketStatus)<br/>_72 = &amp;(*_73)<br/></td></tr><tr><td align="left">_71 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;state::perp_market::MarketStatus&gt;(move _72)</td></tr></table>>];
    bb26__0_5583 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>_78 = &amp;_2<br/>_77 = &amp;(*_78)<br/></td></tr><tr><td align="left">_76 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;state::perp_market::MarketStatus&gt;(move _77)</td></tr></table>>];
    bb27__0_5583 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>_70 = [move _71, move _76]<br/>StorageDead(_76)<br/>StorageDead(_71)<br/>_69 = &amp;_70<br/>_68 = &amp;(*_69)<br/>_67 = move _68 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_68)<br/></td></tr><tr><td align="left">_62 = Arguments::&lt;'_&gt;::new_v1(move _63, move _67)</td></tr></table>>];
    bb28__0_5583 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>StorageDead(_63)<br/></td></tr><tr><td align="left">_61 = format(move _62)</td></tr></table>>];
    bb29__0_5583 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageDead(_78)<br/>StorageDead(_74)<br/>StorageDead(_73)<br/>StorageDead(_70)<br/>StorageDead(_69)<br/>StorageDead(_65)<br/>_60 = move _61<br/>StorageDead(_61)<br/>_59 = &amp;_60<br/>_58 = &amp;(*_59)<br/></td></tr><tr><td align="left">_57 = &lt;String as Deref&gt;::deref(move _58)</td></tr></table>>];
    bb30__0_5583 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">_56 = &amp;(*_57)<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">_55 = solana_program::log::sol_log(move _56)</td></tr></table>>];
    bb31__0_5583 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/></td></tr><tr><td align="left">drop(_60)</td></tr></table>>];
    bb32__0_5583 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageDead(_59)<br/>StorageDead(_57)<br/>StorageDead(_55)<br/>StorageLive(_79)<br/>_79 = _2<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>_81 = &amp;mut (*_22)<br/></td></tr><tr><td align="left">_80 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _81)</td></tr></table>>];
    bb33__0_5583 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>((*_80).45: state::perp_market::MarketStatus) = move _79<br/>StorageDead(_79)<br/>StorageDead(_80)<br/>StorageLive(_82)<br/>_82 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _82)<br/>StorageDead(_82)<br/></td></tr><tr><td align="left">drop(_23)</td></tr></table>>];
    bb34__0_5583 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_5583 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left">return</td></tr></table>>];
    bb36__0_5583 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">36 (cleanup)</td></tr><tr><td align="left">drop(_60)</td></tr></table>>];
    bb37__0_5583 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">37 (cleanup)</td></tr><tr><td align="left">drop(_39)</td></tr></table>>];
    bb38__0_5583 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">38 (cleanup)</td></tr><tr><td align="left">drop(_23)</td></tr></table>>];
    bb39__0_5583 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">39 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb40__0_5583 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">40 (cleanup)</td></tr><tr><td align="left" balign="left">_95 = discriminant(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_5583 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">41 (cleanup)</td></tr><tr><td align="left" balign="left">_96 = discriminant(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_5583 -> bb1__0_5583 [label="return"];
    bb1__0_5583 -> bb2__0_5583 [label="return"];
    bb1__0_5583 -> bb39__0_5583 [label="unwind"];
    bb2__0_5583 -> bb3__0_5583 [label="0"];
    bb2__0_5583 -> bb5__0_5583 [label="1"];
    bb2__0_5583 -> bb4__0_5583 [label="otherwise"];
    bb3__0_5583 -> bb7__0_5583 [label="return"];
    bb5__0_5583 -> bb6__0_5583 [label="return"];
    bb5__0_5583 -> bb41__0_5583 [label="unwind"];
    bb6__0_5583 -> bb35__0_5583 [label=""];
    bb7__0_5583 -> bb8__0_5583 [label="return"];
    bb8__0_5583 -> bb9__0_5583 [label="0"];
    bb8__0_5583 -> bb10__0_5583 [label="1"];
    bb8__0_5583 -> bb4__0_5583 [label="otherwise"];
    bb9__0_5583 -> bb12__0_5583 [label="return"];
    bb10__0_5583 -> bb11__0_5583 [label="return"];
    bb11__0_5583 -> bb35__0_5583 [label=""];
    bb12__0_5583 -> bb13__0_5583 [label="return"];
    bb12__0_5583 -> bb39__0_5583 [label="unwind"];
    bb13__0_5583 -> bb14__0_5583 [label="return"];
    bb13__0_5583 -> bb39__0_5583 [label="unwind"];
    bb14__0_5583 -> bb15__0_5583 [label="0"];
    bb14__0_5583 -> bb16__0_5583 [label="1"];
    bb14__0_5583 -> bb4__0_5583 [label="otherwise"];
    bb15__0_5583 -> bb18__0_5583 [label="return"];
    bb15__0_5583 -> bb38__0_5583 [label="unwind"];
    bb16__0_5583 -> bb17__0_5583 [label="return"];
    bb16__0_5583 -> bb40__0_5583 [label="unwind"];
    bb17__0_5583 -> bb35__0_5583 [label=""];
    bb18__0_5583 -> bb19__0_5583 [label="return"];
    bb18__0_5583 -> bb38__0_5583 [label="unwind"];
    bb19__0_5583 -> bb20__0_5583 [label="return"];
    bb19__0_5583 -> bb38__0_5583 [label="unwind"];
    bb20__0_5583 -> bb21__0_5583 [label="return"];
    bb20__0_5583 -> bb38__0_5583 [label="unwind"];
    bb21__0_5583 -> bb22__0_5583 [label="return"];
    bb21__0_5583 -> bb37__0_5583 [label="unwind"];
    bb22__0_5583 -> bb23__0_5583 [label="return"];
    bb22__0_5583 -> bb37__0_5583 [label="unwind"];
    bb23__0_5583 -> bb24__0_5583 [label="return"];
    bb23__0_5583 -> bb38__0_5583 [label="unwind"];
    bb24__0_5583 -> bb25__0_5583 [label="return"];
    bb24__0_5583 -> bb38__0_5583 [label="unwind"];
    bb25__0_5583 -> bb26__0_5583 [label="return"];
    bb25__0_5583 -> bb38__0_5583 [label="unwind"];
    bb26__0_5583 -> bb27__0_5583 [label="return"];
    bb26__0_5583 -> bb38__0_5583 [label="unwind"];
    bb27__0_5583 -> bb28__0_5583 [label="return"];
    bb27__0_5583 -> bb38__0_5583 [label="unwind"];
    bb28__0_5583 -> bb29__0_5583 [label="return"];
    bb28__0_5583 -> bb38__0_5583 [label="unwind"];
    bb29__0_5583 -> bb30__0_5583 [label="return"];
    bb29__0_5583 -> bb36__0_5583 [label="unwind"];
    bb30__0_5583 -> bb31__0_5583 [label="return"];
    bb30__0_5583 -> bb36__0_5583 [label="unwind"];
    bb31__0_5583 -> bb32__0_5583 [label="return"];
    bb31__0_5583 -> bb38__0_5583 [label="unwind"];
    bb32__0_5583 -> bb33__0_5583 [label="return"];
    bb32__0_5583 -> bb38__0_5583 [label="unwind"];
    bb33__0_5583 -> bb34__0_5583 [label="return"];
    bb33__0_5583 -> bb39__0_5583 [label="unwind"];
    bb34__0_5583 -> bb35__0_5583 [label=""];
    bb36__0_5583 -> bb38__0_5583 [label="return"];
    bb37__0_5583 -> bb38__0_5583 [label="return"];
    bb38__0_5583 -> bb39__0_5583 [label="return"];
    bb40__0_5583 -> bb39__0_5583 [label=""];
    bb41__0_5583 -> bb39__0_5583 [label=""];
}
