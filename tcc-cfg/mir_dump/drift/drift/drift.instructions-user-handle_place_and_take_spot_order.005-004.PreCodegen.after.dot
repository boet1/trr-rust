digraph Mir_0_11772 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn instructions::user::handle_place_and_take_spot_order(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::user::PlaceAndTake&lt;ReErased&gt;&gt;, _2: state::order_params::OrderParams, _3: instructions::keeper::SpotFulfillmentType, _4: std::option::Option&lt;u32&gt;) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _5: ();<br align="left"/>let mut _6: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _7: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _8: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _9: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _10: isize;<br align="left"/>let _11: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _12: !;<br align="left"/>let mut _13: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _14: ();<br align="left"/>let _15: anchor_lang::prelude::Clock;<br align="left"/>let mut _16: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _17: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _18: isize;<br align="left"/>let _19: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _20: !;<br align="left"/>let mut _21: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _22: anchor_lang::prelude::Clock;<br align="left"/>let _23: u16;<br align="left"/>let _24: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _25: std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _26: std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _27: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let _28: state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _29: state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _30: state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _31: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let mut _32: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, instructions::optional_accounts::AccountMaps&lt;ReErased&gt;&gt;;<br align="left"/>let mut _33: std::result::Result&lt;instructions::optional_accounts::AccountMaps&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _34: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _35: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _36: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _37: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _38: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _39: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _40: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _41: std::vec::Vec&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _42: std::boxed::Box&lt;[u16], std::alloc::Global&gt;;<br align="left"/>let mut _43: std::boxed::Box&lt;[u16; 2_usize], std::alloc::Global&gt;;<br align="left"/>let mut _44: usize;<br align="left"/>let mut _45: usize;<br align="left"/>let mut _46: *mut u8;<br align="left"/>let mut _47: std::boxed::Box&lt;[u16; 2_usize], std::alloc::Global&gt;;<br align="left"/>let mut _48: u16;<br align="left"/>let mut _49: u64;<br align="left"/>let mut _50: std::option::Option&lt;state::state::OracleGuardRails&gt;;<br align="left"/>let mut _51: isize;<br align="left"/>let _52: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _53: !;<br align="left"/>let mut _54: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _55: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let _56: ();<br align="left"/>let mut _57: bool;<br align="left"/>let mut _58: &amp;ReErased state::order_params::PostOnlyParam;<br align="left"/>let mut _59: &amp;ReErased state::order_params::PostOnlyParam;<br align="left"/>let _60: state::order_params::PostOnlyParam;<br align="left"/>let mut _61: !;<br align="left"/>let _62: ();<br align="left"/>let mut _63: &amp;ReErased str;<br align="left"/>let _64: &amp;ReErased str;<br align="left"/>let mut _65: anchor_lang::error::Error;<br align="left"/>let mut _66: error::ErrorCode;<br align="left"/>let mut _67: &amp;ReErased Closure(DefId(0:11776 ~ drift[d311]::instructions::user::handle_place_and_take_spot_order::{closure#1}), [ReErased, ReErased, i8, Binder(extern &quot;RustCall&quot; fn(()) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let _68: Closure(DefId(0:11776 ~ drift[d311]::instructions::user::handle_place_and_take_spot_order::{closure#1}), [ReErased, ReErased, i8, Binder(extern &quot;RustCall&quot; fn(()) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _69: ();<br align="left"/>let _70: state::user_map::UserMap&lt;ReErased&gt;;<br align="left"/>let _71: state::user_map::UserStatsMap&lt;ReErased&gt;;<br align="left"/>let mut _72: (state::user_map::UserMap&lt;ReErased&gt;, state::user_map::UserStatsMap&lt;ReErased&gt;);<br align="left"/>let mut _73: isize;<br align="left"/>let mut _74: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (state::user_map::UserMap&lt;ReErased&gt;, state::user_map::UserStatsMap&lt;ReErased&gt;)&gt;;<br align="left"/>let mut _75: std::result::Result&lt;(state::user_map::UserMap&lt;ReErased&gt;, state::user_map::UserStatsMap&lt;ReErased&gt;), error::ErrorCode&gt;;<br align="left"/>let mut _76: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _77: isize;<br align="left"/>let _78: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _79: !;<br align="left"/>let mut _80: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _81: (state::user_map::UserMap&lt;ReErased&gt;, state::user_map::UserStatsMap&lt;ReErased&gt;);<br align="left"/>let mut _82: state::user_map::UserMap&lt;ReErased&gt;;<br align="left"/>let mut _83: state::user_map::UserStatsMap&lt;ReErased&gt;;<br align="left"/>let _84: bool;<br align="left"/>let mut _85: &amp;ReErased state::order_params::OrderParams;<br align="left"/>let mut _86: std::boxed::Box&lt;dyn [Binder(Trait(state::spot_fulfillment_params::SpotFulfillmentParams), [])] + ReErased, std::alloc::Global&gt;;<br align="left"/>let mut _87: std::boxed::Box&lt;dyn [Binder(Trait(state::spot_fulfillment_params::SpotFulfillmentParams), [])] + ReErased, std::alloc::Global&gt;;<br align="left"/>let mut _88: isize;<br align="left"/>let mut _89: std::boxed::Box&lt;dyn [Binder(Trait(state::spot_fulfillment_params::SpotFulfillmentParams), [])] + ReErased, std::alloc::Global&gt;;<br align="left"/>let _90: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _91: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _92: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _93: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _94: &amp;ReErased u16;<br align="left"/>let _95: &amp;ReErased u16;<br align="left"/>let mut _96: isize;<br align="left"/>let _97: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _98: !;<br align="left"/>let mut _99: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _100: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _101: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _102: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _103: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _104: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _105: isize;<br align="left"/>let _106: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _107: !;<br align="left"/>let mut _108: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _109: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _110: std::boxed::Box&lt;state::fulfillment_params::serum::SerumFulfillmentParams&lt;ReErased, ReErased&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _111: state::fulfillment_params::serum::SerumFulfillmentParams&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _112: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::fulfillment_params::serum::SerumFulfillmentParams&lt;ReErased, ReErased&gt;&gt;;<br align="left"/>let mut _113: std::result::Result&lt;state::fulfillment_params::serum::SerumFulfillmentParams&lt;ReErased, ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _114: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _115: &amp;ReErased state::state::State;<br align="left"/>let _116: &amp;ReErased state::state::State;<br align="left"/>let mut _117: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _118: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _119: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _120: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _121: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _122: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _123: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _124: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _125: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _126: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _127: i64;<br align="left"/>let mut _128: isize;<br align="left"/>let _129: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _130: !;<br align="left"/>let mut _131: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _132: state::fulfillment_params::serum::SerumFulfillmentParams&lt;ReErased, ReErased&gt;;<br align="left"/>let _133: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _134: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _135: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _136: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _137: &amp;ReErased u16;<br align="left"/>let _138: &amp;ReErased u16;<br align="left"/>let mut _139: isize;<br align="left"/>let _140: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _141: !;<br align="left"/>let mut _142: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _143: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _144: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _145: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _146: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _147: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _148: isize;<br align="left"/>let _149: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _150: !;<br align="left"/>let mut _151: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _152: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _153: std::boxed::Box&lt;state::fulfillment_params::phoenix::PhoenixFulfillmentParams&lt;ReErased, ReErased&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _154: state::fulfillment_params::phoenix::PhoenixFulfillmentParams&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _155: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::fulfillment_params::phoenix::PhoenixFulfillmentParams&lt;ReErased, ReErased&gt;&gt;;<br align="left"/>let mut _156: std::result::Result&lt;state::fulfillment_params::phoenix::PhoenixFulfillmentParams&lt;ReErased, ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _157: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _158: &amp;ReErased state::state::State;<br align="left"/>let _159: &amp;ReErased state::state::State;<br align="left"/>let mut _160: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _161: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _162: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _163: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _164: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _165: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _166: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _167: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _168: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _169: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _170: isize;<br align="left"/>let _171: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _172: !;<br align="left"/>let mut _173: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _174: state::fulfillment_params::phoenix::PhoenixFulfillmentParams&lt;ReErased, ReErased&gt;;<br align="left"/>let _175: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _176: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _177: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _178: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _179: &amp;ReErased u16;<br align="left"/>let _180: &amp;ReErased u16;<br align="left"/>let mut _181: isize;<br align="left"/>let _182: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _183: !;<br align="left"/>let mut _184: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _185: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _186: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _187: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _188: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _189: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _190: isize;<br align="left"/>let _191: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _192: !;<br align="left"/>let mut _193: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _194: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _195: std::boxed::Box&lt;state::fulfillment_params::openbook_v2::OpenbookV2FulfillmentParams&lt;ReErased, ReErased&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _196: state::fulfillment_params::openbook_v2::OpenbookV2FulfillmentParams&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _197: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::fulfillment_params::openbook_v2::OpenbookV2FulfillmentParams&lt;ReErased, ReErased&gt;&gt;;<br align="left"/>let mut _198: std::result::Result&lt;state::fulfillment_params::openbook_v2::OpenbookV2FulfillmentParams&lt;ReErased, ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _199: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _200: &amp;ReErased state::state::State;<br align="left"/>let _201: &amp;ReErased state::state::State;<br align="left"/>let mut _202: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _203: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _204: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _205: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _206: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _207: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _208: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _209: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _210: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _211: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _212: i64;<br align="left"/>let mut _213: isize;<br align="left"/>let _214: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _215: !;<br align="left"/>let mut _216: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _217: state::fulfillment_params::openbook_v2::OpenbookV2FulfillmentParams&lt;ReErased, ReErased&gt;;<br align="left"/>let _218: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _219: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _220: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _221: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _222: &amp;ReErased u16;<br align="left"/>let _223: &amp;ReErased u16;<br align="left"/>let mut _224: isize;<br align="left"/>let _225: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _226: !;<br align="left"/>let mut _227: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _228: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _229: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _230: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _231: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _232: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _233: isize;<br align="left"/>let _234: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _235: !;<br align="left"/>let mut _236: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _237: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _238: std::boxed::Box&lt;state::fulfillment_params::drift::MatchFulfillmentParams&lt;ReErased&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _239: state::fulfillment_params::drift::MatchFulfillmentParams&lt;ReErased&gt;;<br align="left"/>let mut _240: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::fulfillment_params::drift::MatchFulfillmentParams&lt;ReErased&gt;&gt;;<br align="left"/>let mut _241: std::result::Result&lt;state::fulfillment_params::drift::MatchFulfillmentParams&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _242: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _243: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _244: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _245: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _246: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _247: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _248: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _249: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _250: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _251: isize;<br align="left"/>let _252: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _253: !;<br align="left"/>let mut _254: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _255: state::fulfillment_params::drift::MatchFulfillmentParams&lt;ReErased&gt;;<br align="left"/>let _256: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _257: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _258: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _259: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _260: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _261: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _262: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _263: Closure(DefId(0:11777 ~ drift[d311]::instructions::user::handle_place_and_take_spot_order::{closure#2}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _264: isize;<br align="left"/>let _265: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _266: !;<br align="left"/>let mut _267: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _268: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _269: u32;<br align="left"/>let mut _270: &amp;ReErased state::user::User;<br align="left"/>let _271: &amp;ReErased state::user::User;<br align="left"/>let mut _272: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _273: ();<br align="left"/>let mut _274: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _275: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _276: &amp;ReErased state::state::State;<br align="left"/>let _277: &amp;ReErased state::state::State;<br align="left"/>let mut _278: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _279: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _280: &amp;ReErased mut state::user::User;<br align="left"/>let mut _281: &amp;ReErased mut state::user::User;<br align="left"/>let mut _282: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _283: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _284: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _285: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _286: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _287: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let _288: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _289: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _290: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _291: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let _292: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let mut _293: state::order_params::OrderParams;<br align="left"/>let mut _294: state::order_params::PlaceOrderOptions;<br align="left"/>let mut _295: isize;<br align="left"/>let _296: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _297: !;<br align="left"/>let mut _298: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _299: ();<br align="left"/>let _300: ();<br align="left"/>let mut _301: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _302: &amp;ReErased mut anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _303: u32;<br align="left"/>let mut _304: &amp;ReErased state::user::User;<br align="left"/>let _305: &amp;ReErased state::user::User;<br align="left"/>let mut _306: &amp;ReErased std::cell::Ref&lt;ReErased, state::user::User&gt;;<br align="left"/>let _307: std::cell::Ref&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _308: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _309: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _310: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::user::User&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _311: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _312: Closure(DefId(0:11778 ~ drift[d311]::instructions::user::handle_place_and_take_spot_order::{closure#3}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _313: isize;<br align="left"/>let _314: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _315: !;<br align="left"/>let mut _316: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _317: std::cell::Ref&lt;ReErased, state::user::User&gt;;<br align="left"/>let _318: ();<br align="left"/>let mut _319: bool;<br align="left"/>let mut _320: u32;<br align="left"/>let mut _321: u32;<br align="left"/>let mut _322: !;<br align="left"/>let _323: ();<br align="left"/>let mut _324: &amp;ReErased str;<br align="left"/>let _325: &amp;ReErased str;<br align="left"/>let mut _326: anchor_lang::error::Error;<br align="left"/>let mut _327: error::ErrorCode;<br align="left"/>let mut _328: &amp;ReErased Closure(DefId(0:11779 ~ drift[d311]::instructions::user::handle_place_and_take_spot_order::{closure#4}), [ReErased, ReErased, i8, Binder(extern &quot;RustCall&quot; fn(()) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let _329: Closure(DefId(0:11779 ~ drift[d311]::instructions::user::handle_place_and_take_spot_order::{closure#4}), [ReErased, ReErased, i8, Binder(extern &quot;RustCall&quot; fn(()) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _330: ();<br align="left"/>let _331: u64;<br align="left"/>let mut _332: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _333: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _334: u32;<br align="left"/>let mut _335: &amp;ReErased state::state::State;<br align="left"/>let _336: &amp;ReErased state::state::State;<br align="left"/>let mut _337: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _338: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _339: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _340: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let _341: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _342: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let _343: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _344: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _345: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _346: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _347: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _348: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _349: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _350: anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _351: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _352: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let _353: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let _354: anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _355: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _356: &amp;ReErased state::user_map::UserMap&lt;ReErased&gt;;<br align="left"/>let _357: &amp;ReErased state::user_map::UserMap&lt;ReErased&gt;;<br align="left"/>let mut _358: &amp;ReErased state::user_map::UserStatsMap&lt;ReErased&gt;;<br align="left"/>let _359: &amp;ReErased state::user_map::UserStatsMap&lt;ReErased&gt;;<br align="left"/>let mut _360: std::option::Option&lt;u32&gt;;<br align="left"/>let mut _361: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let _362: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let mut _363: &amp;ReErased mut dyn [Binder(Trait(state::spot_fulfillment_params::SpotFulfillmentParams), [])] + ReErased;<br align="left"/>let mut _364: &amp;ReErased mut dyn [Binder(Trait(state::spot_fulfillment_params::SpotFulfillmentParams), [])] + ReErased;<br align="left"/>let mut _365: &amp;ReErased mut dyn [Binder(Trait(state::spot_fulfillment_params::SpotFulfillmentParams), [])] + ReErased;<br align="left"/>let mut _366: &amp;ReErased mut std::boxed::Box&lt;dyn [Binder(Trait(state::spot_fulfillment_params::SpotFulfillmentParams), [])] + ReErased, std::alloc::Global&gt;;<br align="left"/>let mut _367: isize;<br align="left"/>let _368: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _369: !;<br align="left"/>let mut _370: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _371: u64;<br align="left"/>let _372: bool;<br align="left"/>let mut _373: &amp;ReErased mut std::slice::Iter&lt;ReErased, state::user::Order&gt;;<br align="left"/>let mut _374: std::slice::Iter&lt;ReErased, state::user::Order&gt;;<br align="left"/>let mut _375: &amp;ReErased [state::user::Order];<br align="left"/>let mut _376: &amp;ReErased [state::user::Order; 32_usize];<br align="left"/>let _377: &amp;ReErased state::user::User;<br align="left"/>let mut _378: &amp;ReErased std::cell::Ref&lt;ReErased, state::user::User&gt;;<br align="left"/>let _379: std::cell::Ref&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _380: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _381: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _382: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::user::User&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _383: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _384: Closure(DefId(0:11780 ~ drift[d311]::instructions::user::handle_place_and_take_spot_order::{closure#5}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _385: isize;<br align="left"/>let _386: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _387: !;<br align="left"/>let mut _388: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _389: std::cell::Ref&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _390: Closure(DefId(0:11775 ~ drift[d311]::instructions::user::handle_place_and_take_spot_order::{closure#0}), [ReErased, ReErased, i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReErased state::user::Order,)) -&gt; bool, []), (&amp;ReErased u32,)]);<br align="left"/>let mut _391: &amp;ReErased u32;<br align="left"/>let _392: ();<br align="left"/>let mut _393: bool;<br align="left"/>let mut _394: bool;<br align="left"/>let _395: ();<br align="left"/>let mut _396: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _397: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _398: u32;<br align="left"/>let mut _399: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _400: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _401: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _402: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _403: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let _404: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _405: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _406: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _407: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let _408: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let mut _409: isize;<br align="left"/>let _410: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _411: !;<br align="left"/>let mut _412: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _413: ();<br align="left"/>let _414: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _415: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _416: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _417: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _418: &amp;ReErased u16;<br align="left"/>let _419: &amp;ReErased u16;<br align="left"/>let mut _420: isize;<br align="left"/>let _421: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _422: !;<br align="left"/>let mut _423: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _424: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _425: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _426: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _427: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _428: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _429: isize;<br align="left"/>let _430: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _431: !;<br align="left"/>let mut _432: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _433: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _434: ();<br align="left"/>let mut _435: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _436: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _437: &amp;ReErased dyn [Binder(Trait(state::spot_fulfillment_params::SpotFulfillmentParams), [])] + ReErased;<br align="left"/>let mut _438: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _439: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _440: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _441: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _442: isize;<br align="left"/>let _443: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _444: !;<br align="left"/>let mut _445: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _446: ();<br align="left"/>let mut _447: ();<br align="left"/>let mut _448: &amp;ReErased Closure(DefId(0:11776 ~ drift[d311]::instructions::user::handle_place_and_take_spot_order::{closure#1}), [ReErased, ReErased, i8, Binder(extern &quot;RustCall&quot; fn(()) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _449: &amp;ReErased Closure(DefId(0:11779 ~ drift[d311]::instructions::user::handle_place_and_take_spot_order::{closure#4}), [ReErased, ReErased, i8, Binder(extern &quot;RustCall&quot; fn(()) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _450: &amp;ReErased state::order_params::PostOnlyParam;<br align="left"/>let mut _451: &amp;ReErased mut instructions::user::PlaceAndTake&lt;ReErased&gt;;<br align="left"/>let mut _452: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _453: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _454: &amp;ReErased mut instructions::user::PlaceAndTake&lt;ReErased&gt;;<br align="left"/>let mut _455: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _456: &amp;ReErased mut instructions::user::PlaceAndTake&lt;ReErased&gt;;<br align="left"/>let mut _457: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _458: &amp;ReErased mut instructions::user::PlaceAndTake&lt;ReErased&gt;;<br align="left"/>let mut _459: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _460: &amp;ReErased mut instructions::user::PlaceAndTake&lt;ReErased&gt;;<br align="left"/>let mut _461: &amp;ReErased mut instructions::user::PlaceAndTake&lt;ReErased&gt;;<br align="left"/>let mut _462: &amp;ReErased mut instructions::user::PlaceAndTake&lt;ReErased&gt;;<br align="left"/>let mut _463: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _464: &amp;ReErased mut instructions::user::PlaceAndTake&lt;ReErased&gt;;<br align="left"/>let mut _465: &amp;ReErased mut instructions::user::PlaceAndTake&lt;ReErased&gt;;<br align="left"/>let mut _466: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _467: &amp;ReErased mut instructions::user::PlaceAndTake&lt;ReErased&gt;;<br align="left"/>let mut _468: &amp;ReErased mut instructions::user::PlaceAndTake&lt;ReErased&gt;;<br align="left"/>let mut _469: &amp;ReErased mut instructions::user::PlaceAndTake&lt;ReErased&gt;;<br align="left"/>let mut _470: &amp;ReErased mut instructions::user::PlaceAndTake&lt;ReErased&gt;;<br align="left"/>let mut _471: bool;<br align="left"/>let mut _472: bool;<br align="left"/>let mut _473: bool;<br align="left"/>let mut _474: bool;<br align="left"/>let mut _475: bool;<br align="left"/>let mut _476: bool;<br align="left"/>let mut _477: bool;<br align="left"/>let mut _478: isize;<br align="left"/>let mut _479: isize;<br align="left"/>let mut _480: isize;<br align="left"/>let mut _481: isize;<br align="left"/>let mut _482: isize;<br align="left"/>let mut _483: isize;<br align="left"/>let mut _484: isize;<br align="left"/>let mut _485: isize;<br align="left"/>let mut _486: isize;<br align="left"/>let mut _487: isize;<br align="left"/>let mut _488: isize;<br align="left"/>let mut _489: isize;<br align="left"/>let mut _490: isize;<br align="left"/>let mut _491: isize;<br align="left"/>let mut _492: isize;<br align="left"/>let mut _493: isize;<br align="left"/>let mut _494: isize;<br align="left"/>let mut _495: isize;<br align="left"/>let mut _496: isize;<br align="left"/>let mut _497: isize;<br align="left"/>let mut _498: isize;<br align="left"/>let mut _499: isize;<br align="left"/>let mut _500: isize;<br align="left"/>let mut _501: isize;<br align="left"/>let mut _502: isize;<br align="left"/>let mut _503: isize;<br align="left"/>let mut _504: isize;<br align="left"/>let mut _505: isize;<br align="left"/>let mut _506: isize;<br align="left"/>let mut _507: isize;<br align="left"/>let mut _508: isize;<br align="left"/>let mut _509: isize;<br align="left"/>let mut _510: isize;<br align="left"/>let mut _511: isize;<br align="left"/>let mut _512: isize;<br align="left"/>let mut _513: isize;<br align="left"/>let mut _514: isize;<br align="left"/>let mut _515: isize;<br align="left"/>let mut _516: isize;<br align="left"/>let mut _517: isize;<br align="left"/>let mut _518: isize;<br align="left"/>let mut _519: isize;<br align="left"/>let mut _520: isize;<br align="left"/>let mut _521: isize;<br align="left"/>let mut _522: isize;<br align="left"/>let mut _523: isize;<br align="left"/>let mut _524: isize;<br align="left"/>let mut _525: isize;<br align="left"/>let mut _526: isize;<br align="left"/>let mut _527: isize;<br align="left"/>let mut _528: isize;<br align="left"/>let mut _529: isize;<br align="left"/>let mut _530: isize;<br align="left"/>let mut _531: isize;<br align="left"/>let mut _532: isize;<br align="left"/>let mut _533: isize;<br align="left"/>let mut _534: isize;<br align="left"/>let mut _535: isize;<br align="left"/>let mut _536: isize;<br align="left"/>let mut _537: isize;<br align="left"/>let mut _538: isize;<br align="left"/>let mut _539: isize;<br align="left"/>let mut _540: isize;<br align="left"/>let mut _541: isize;<br align="left"/>let mut _542: isize;<br align="left"/>let mut _543: isize;<br align="left"/>let mut _544: isize;<br align="left"/>let mut _545: isize;<br align="left"/>let mut _546: isize;<br align="left"/>let mut _547: isize;<br align="left"/>let mut _548: isize;<br align="left"/>let mut _549: isize;<br align="left"/>let mut _550: isize;<br align="left"/>let mut _551: isize;<br align="left"/>let mut _552: isize;<br align="left"/>let mut _553: isize;<br align="left"/>let mut _554: isize;<br align="left"/>let mut _555: isize;<br align="left"/>let mut _556: isize;<br align="left"/>let mut _557: isize;<br align="left"/>let mut _558: isize;<br align="left"/>let mut _559: isize;<br align="left"/>let mut _560: isize;<br align="left"/>let mut _561: isize;<br align="left"/>let mut _562: isize;<br align="left"/>let mut _563: isize;<br align="left"/>let mut _564: isize;<br align="left"/>let mut _565: isize;<br align="left"/>let mut _566: isize;<br align="left"/>let mut _567: isize;<br align="left"/>let mut _568: isize;<br align="left"/>let mut _569: isize;<br align="left"/>let mut _570: isize;<br align="left"/>let mut _571: isize;<br align="left"/>let mut _572: isize;<br align="left"/>let mut _573: isize;<br align="left"/>let mut _574: isize;<br align="left"/>let mut _575: isize;<br align="left"/>let mut _576: isize;<br align="left"/>let mut _577: isize;<br align="left"/>let mut _578: isize;<br align="left"/>let mut _579: isize;<br align="left"/>let mut _580: isize;<br align="left"/>let mut _581: isize;<br align="left"/>let mut _582: isize;<br align="left"/>let mut _583: isize;<br align="left"/>let mut _584: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _585: *const [u16; 2_usize];<br align="left"/>let mut _586: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _587: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _588: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _589: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _590: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _591: *const dyn [Binder(Trait(state::spot_fulfillment_params::SpotFulfillmentParams), [])] + ReErased;<br align="left"/>let mut _592: *const ();<br align="left"/>let mut _593: usize;<br align="left"/>let mut _594: usize;<br align="left"/>let mut _595: usize;<br align="left"/>let mut _596: usize;<br align="left"/>let mut _597: bool;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug params =&gt; _2;<br align="left"/>debug fulfillment_type =&gt; _3;<br align="left"/>debug _maker_order_id =&gt; _4;<br align="left"/>debug residual =&gt; _11;<br align="left"/>debug val =&gt; _14;<br align="left"/>debug clock =&gt; _15;<br align="left"/>debug residual =&gt; _19;<br align="left"/>debug val =&gt; _22;<br align="left"/>debug market_index =&gt; _23;<br align="left"/>debug remaining_accounts_iter =&gt; _24;<br align="left"/>debug perp_market_map =&gt; _28;<br align="left"/>debug spot_market_map =&gt; _29;<br align="left"/>debug oracle_map =&gt; _30;<br align="left"/>debug residual =&gt; _52;<br align="left"/>debug val =&gt; _55;<br align="left"/>debug makers_and_referrer =&gt; _70;<br align="left"/>debug makers_and_referrer_stats =&gt; _71;<br align="left"/>debug residual =&gt; _78;<br align="left"/>debug val =&gt; _81;<br align="left"/>debug is_immediate_or_cancel =&gt; _84;<br align="left"/>debug fulfillment_params =&gt; _86;<br align="left"/>debug base_market =&gt; _90;<br align="left"/>debug residual =&gt; _97;<br align="left"/>debug val =&gt; _100;<br align="left"/>debug quote_market =&gt; _101;<br align="left"/>debug residual =&gt; _106;<br align="left"/>debug val =&gt; _109;<br align="left"/>debug residual =&gt; _129;<br align="left"/>debug val =&gt; _132;<br align="left"/>debug base_market =&gt; _133;<br align="left"/>debug residual =&gt; _140;<br align="left"/>debug val =&gt; _143;<br align="left"/>debug quote_market =&gt; _144;<br align="left"/>debug residual =&gt; _149;<br align="left"/>debug val =&gt; _152;<br align="left"/>debug residual =&gt; _171;<br align="left"/>debug val =&gt; _174;<br align="left"/>debug base_market =&gt; _175;<br align="left"/>debug residual =&gt; _182;<br align="left"/>debug val =&gt; _185;<br align="left"/>debug quote_market =&gt; _186;<br align="left"/>debug residual =&gt; _191;<br align="left"/>debug val =&gt; _194;<br align="left"/>debug residual =&gt; _214;<br align="left"/>debug val =&gt; _217;<br align="left"/>debug base_market =&gt; _218;<br align="left"/>debug residual =&gt; _225;<br align="left"/>debug val =&gt; _228;<br align="left"/>debug quote_market =&gt; _229;<br align="left"/>debug residual =&gt; _234;<br align="left"/>debug val =&gt; _237;<br align="left"/>debug residual =&gt; _252;<br align="left"/>debug val =&gt; _255;<br align="left"/>debug user_key =&gt; _256;<br align="left"/>debug user =&gt; _258;<br align="left"/>debug residual =&gt; _265;<br align="left"/>debug val =&gt; _268;<br align="left"/>debug order_id_before =&gt; _269;<br align="left"/>debug residual =&gt; _296;<br align="left"/>debug val =&gt; _299;<br align="left"/>debug user =&gt; _302;<br align="left"/>debug order_id =&gt; _303;<br align="left"/>debug residual =&gt; _314;<br align="left"/>debug val =&gt; _317;<br align="left"/>debug residual =&gt; _368;<br align="left"/>debug val =&gt; _371;<br align="left"/>debug order_unfilled =&gt; _372;<br align="left"/>debug residual =&gt; _386;<br align="left"/>debug val =&gt; _389;<br align="left"/>debug residual =&gt; _410;<br align="left"/>debug val =&gt; _413;<br align="left"/>debug base_market =&gt; _414;<br align="left"/>debug residual =&gt; _421;<br align="left"/>debug val =&gt; _424;<br align="left"/>debug quote_market =&gt; _425;<br align="left"/>debug residual =&gt; _430;<br align="left"/>debug val =&gt; _433;<br align="left"/>debug residual =&gt; _443;<br align="left"/>debug val =&gt; _446;<br align="left"/>>;
    bb0__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_471 = const false<br/>_477 = const false<br/>_476 = const false<br/>_475 = const false<br/>_474 = const false<br/>_473 = const false<br/>_472 = const false<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_451 = deref_copy (_1.1: &amp;mut instructions::user::PlaceAndTake&lt;'_&gt;)<br/>_9 = &amp;((*_451).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_452 = deref_copy (*_9)<br/>_584 = (((_452.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_8 = &amp;(*_584)<br/></td></tr><tr><td align="left">_7 = constraints::fill_not_paused(move _8)</td></tr></table>>];
    bb1__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/></td></tr><tr><td align="left">_6 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _7)</td></tr></table>>];
    bb2__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>_10 = discriminant(_6)<br/></td></tr><tr><td align="left">switchInt(move _10)</td></tr></table>>];
    bb3__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = ((_6 as Continue).0: ())<br/>_5 = _14<br/>StorageDead(_14)<br/>_478 = discriminant(_6)<br/>StorageDead(_9)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/></td></tr><tr><td align="left">_17 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb4__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = move ((_6 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_13)<br/>_13 = move _11<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _13)</td></tr></table>>];
    bb6__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_11)<br/>_560 = discriminant(_6)<br/>StorageDead(_9)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">_16 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _17)</td></tr></table>>];
    bb8__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>_18 = discriminant(_16)<br/></td></tr><tr><td align="left">switchInt(move _18)</td></tr></table>>];
    bb9__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_22)<br/>_22 = move ((_16 as Continue).0: anchor_lang::prelude::Clock)<br/>_15 = move _22<br/>StorageDead(_22)<br/>_480 = discriminant(_16)<br/>StorageDead(_16)<br/>StorageLive(_23)<br/>_23 = (_2.6: u16)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_453 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_27 = &amp;(*_453)<br/></td></tr><tr><td align="left">_26 = core::slice::&lt;impl [anchor_lang::prelude::AccountInfo&lt;'_&gt;]&gt;::iter(move _27)</td></tr></table>>];
    bb10__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_19)<br/>_19 = move ((_16 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_21)<br/>_21 = move _19<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _21)</td></tr></table>>];
    bb11__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_19)<br/>_558 = discriminant(_16)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/></td></tr><tr><td align="left">_25 = &lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as Iterator&gt;::peekable(move _26)</td></tr></table>>];
    bb13__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>_24 = &amp;mut _25<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>_34 = &amp;mut (*_24)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/></td></tr><tr><td align="left">_37 = BTreeSet::&lt;u16&gt;::new()</td></tr></table>>];
    bb14__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">_36 = &amp;_37<br/>_35 = &amp;(*_36)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>_44 = SizeOf([u16; 2])<br/>_45 = AlignOf([u16; 2])<br/></td></tr><tr><td align="left">_46 = alloc::alloc::exchange_malloc(move _44, move _45)</td></tr></table>>];
    bb15__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>_47 = ShallowInitBox(move _46, [u16; 2])<br/>StorageLive(_48)<br/>_48 = _23<br/>_585 = (((_47.0: std::ptr::Unique&lt;[u16; 2]&gt;).0: std::ptr::NonNull&lt;[u16; 2]&gt;).0: *const [u16; 2])<br/>_592 = _585 as *const () (PtrToPtr)<br/>_593 = _592 as usize (Transmute)<br/>_594 = AlignOf([u16; 2])<br/>_595 = Sub(_594, const 1_usize)<br/>_596 = BitAnd(_593, _595)<br/>_597 = Eq(_596, const 0_usize)<br/></td></tr><tr><td align="left">assert(_597, &quot;misaligned pointer dereference: address must be a multiple of {} but is {}&quot;, _594, _593)</td></tr></table>>];
    bb16__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/></td></tr><tr><td align="left">_40 = get_writable_spot_market_set_from_many(move _41)</td></tr></table>>];
    bb17__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>_39 = &amp;_40<br/>_38 = &amp;(*_39)<br/>StorageLive(_49)<br/>_49 = (_15.0: u64)<br/>StorageLive(_50)<br/>_50 = Option::&lt;state::state::OracleGuardRails&gt;::None<br/></td></tr><tr><td align="left">_33 = load_maps(move _34, move _35, move _38, move _49, move _50)</td></tr></table>>];
    bb18__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageDead(_49)<br/>StorageDead(_38)<br/>StorageDead(_35)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">_32 = &lt;std::result::Result&lt;AccountMaps&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _33)</td></tr></table>>];
    bb19__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>_51 = discriminant(_32)<br/></td></tr><tr><td align="left">switchInt(move _51)</td></tr></table>>];
    bb20__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_55)<br/>_55 = move ((_32 as Continue).0: instructions::optional_accounts::AccountMaps&lt;'_&gt;)<br/>_31 = move _55<br/>StorageDead(_55)<br/>StorageLive(_28)<br/>_28 = move (_31.0: state::perp_market_map::PerpMarketMap&lt;'_&gt;)<br/>StorageLive(_29)<br/>_29 = move (_31.1: state::spot_market_map::SpotMarketMap&lt;'_&gt;)<br/>StorageLive(_30)<br/>_30 = move (_31.2: state::oracle_map::OracleMap&lt;'_&gt;)<br/>_484 = discriminant(_32)<br/></td></tr><tr><td align="left">drop(_40)</td></tr></table>>];
    bb21__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_52)<br/>_52 = ((_32 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_54)<br/>_54 = _52<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _54)</td></tr></table>>];
    bb22__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_52)<br/>_482 = discriminant(_32)<br/></td></tr><tr><td align="left">drop(_40)</td></tr></table>>];
    bb23__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">drop(_37)</td></tr></table>>];
    bb24__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_36)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>_58 = &amp;(_2.8: state::order_params::PostOnlyParam)<br/>StorageLive(_59)<br/>_450 = const _<br/>_59 = &amp;(*_450)<br/></td></tr><tr><td align="left">_57 = &lt;PostOnlyParam as PartialEq&gt;::ne(move _58, move _59)</td></tr></table>>];
    bb25__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left">switchInt(move _57)</td></tr></table>>];
    bb26__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_58)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>_64 = const &quot;post_only cant be used in place_and_take&quot;<br/>_63 = &amp;(*_64)<br/></td></tr><tr><td align="left">_62 = solana_program::log::sol_log(move _63)</td></tr></table>>];
    bb27__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_64)<br/>StorageDead(_62)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>_448 = const _<br/>_67 = &amp;(*_448)<br/>StorageLive(_69)<br/>_69 = ()<br/></td></tr><tr><td align="left">_66 = &lt;{closure@programs/drift/src/error.rs:647:9: 647:11} as Fn&lt;()&gt;&gt;::call(move _67, move _69)</td></tr></table>>];
    bb28__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">_65 = &lt;error::ErrorCode as Into&lt;anchor_lang::error::Error&gt;&gt;::into(move _66)</td></tr></table>>];
    bb29__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _65)<br/>StorageDead(_65)<br/>StorageDead(_57)<br/>StorageDead(_56)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_58)<br/>_56 = const ()<br/>StorageDead(_57)<br/>StorageDead(_56)<br/>StorageLive(_72)<br/>_73 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _73)</td></tr></table>>];
    bb31__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_82)<br/></td></tr><tr><td align="left">_82 = UserMap::&lt;'_&gt;::empty()</td></tr></table>>];
    bb32__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>_76 = &amp;mut (*_24)<br/></td></tr><tr><td align="left">_75 = load_user_maps::&lt;'_, '_&gt;(move _76, const true)</td></tr></table>>];
    bb33__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/></td></tr><tr><td align="left">_74 = &lt;std::result::Result&lt;(UserMap&lt;'_&gt;, UserStatsMap&lt;'_&gt;), error::ErrorCode&gt; as Try&gt;::branch(move _75)</td></tr></table>>];
    bb34__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>_77 = discriminant(_74)<br/></td></tr><tr><td align="left">switchInt(move _77)</td></tr></table>>];
    bb35__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_81)<br/>_81 = move ((_74 as Continue).0: (state::user_map::UserMap&lt;'_&gt;, state::user_map::UserStatsMap&lt;'_&gt;))<br/>_72 = move _81<br/>StorageDead(_81)<br/>_488 = discriminant(_74)<br/>StorageDead(_74)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageLive(_78)<br/>_78 = ((_74 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_80)<br/>_80 = _78<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _80)</td></tr></table>>];
    bb37__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>StorageDead(_78)<br/>_486 = discriminant(_74)<br/>StorageDead(_74)<br/>StorageDead(_72)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_83)<br/></td></tr><tr><td align="left">_83 = UserStatsMap::&lt;'_&gt;::empty()</td></tr></table>>];
    bb39__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">_72 = (move _82, move _83)<br/>StorageDead(_83)<br/>StorageDead(_82)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageLive(_70)<br/>_70 = move (_72.0: state::user_map::UserMap&lt;'_&gt;)<br/>StorageLive(_71)<br/>_71 = move (_72.1: state::user_map::UserStatsMap&lt;'_&gt;)<br/>StorageDead(_72)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>_85 = &amp;_2<br/></td></tr><tr><td align="left">_84 = order_params::OrderParams::is_immediate_or_cancel(move _85)</td></tr></table>>];
    bb41__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>_88 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _88)</td></tr></table>>];
    bb42__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageLive(_218)<br/>StorageLive(_219)<br/>StorageLive(_220)<br/>StorageLive(_221)<br/>_221 = &amp;_29<br/>StorageLive(_222)<br/>StorageLive(_223)<br/>_223 = &amp;_23<br/>_222 = &amp;(*_223)<br/></td></tr><tr><td align="left">_220 = SpotMarketMap::&lt;'_&gt;::get_ref(move _221, move _222)</td></tr></table>>];
    bb43__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>_93 = &amp;_29<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>_95 = &amp;_23<br/>_94 = &amp;(*_95)<br/></td></tr><tr><td align="left">_92 = SpotMarketMap::&lt;'_&gt;::get_ref(move _93, move _94)</td></tr></table>>];
    bb44__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/>StorageDead(_93)<br/></td></tr><tr><td align="left">_91 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _92)</td></tr></table>>];
    bb45__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>_96 = discriminant(_91)<br/></td></tr><tr><td align="left">switchInt(move _96)</td></tr></table>>];
    bb46__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageLive(_100)<br/>_100 = move ((_91 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_90 = move _100<br/>StorageDead(_100)<br/>_492 = discriminant(_91)<br/>StorageDead(_95)<br/>StorageDead(_91)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>_104 = &amp;_29<br/></td></tr><tr><td align="left">_103 = SpotMarketMap::&lt;'_&gt;::get_quote_spot_market(move _104)</td></tr></table>>];
    bb47__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageLive(_97)<br/>_97 = ((_91 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_99)<br/>_99 = _97<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _99)</td></tr></table>>];
    bb48__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/>StorageDead(_97)<br/>_490 = discriminant(_91)<br/>StorageDead(_95)<br/>StorageDead(_91)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/></td></tr><tr><td align="left">_102 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _103)</td></tr></table>>];
    bb50__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>_105 = discriminant(_102)<br/></td></tr><tr><td align="left">switchInt(move _105)</td></tr></table>>];
    bb51__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageLive(_109)<br/>_109 = move ((_102 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_101 = move _109<br/>StorageDead(_109)<br/>_496 = discriminant(_102)<br/>StorageDead(_102)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>_114 = &amp;mut (*_24)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>_454 = deref_copy (_1.1: &amp;mut instructions::user::PlaceAndTake&lt;'_&gt;)<br/>_118 = &amp;((*_454).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_455 = deref_copy (*_118)<br/>_586 = (((_455.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_117 = &amp;(*_586)<br/></td></tr><tr><td align="left">_116 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _117)</td></tr></table>>];
    bb52__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageLive(_106)<br/>_106 = ((_102 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_108)<br/>_108 = _106<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _108)</td></tr></table>>];
    bb53__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/>StorageDead(_106)<br/>_494 = discriminant(_102)<br/>StorageDead(_102)<br/>StorageDead(_101)<br/></td></tr><tr><td align="left">drop(_90)</td></tr></table>>];
    bb54__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">_115 = &amp;(*_116)<br/>StorageDead(_117)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>_122 = &amp;_90<br/>_121 = &amp;(*_122)<br/></td></tr><tr><td align="left">_120 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _121)</td></tr></table>>];
    bb55__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">_119 = &amp;(*_120)<br/>StorageDead(_121)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>_126 = &amp;_101<br/>_125 = &amp;(*_126)<br/></td></tr><tr><td align="left">_124 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _125)</td></tr></table>>];
    bb56__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">_123 = &amp;(*_124)<br/>StorageDead(_125)<br/>StorageLive(_127)<br/>_127 = (_15.4: i64)<br/></td></tr><tr><td align="left">_113 = SerumFulfillmentParams::&lt;'_, '_&gt;::new::&lt;'_&gt;(move _114, move _115, move _119, move _123, move _127)</td></tr></table>>];
    bb57__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/>StorageDead(_123)<br/>StorageDead(_119)<br/>StorageDead(_115)<br/>StorageDead(_114)<br/></td></tr><tr><td align="left">_112 = &lt;std::result::Result&lt;SerumFulfillmentParams&lt;'_, '_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _113)</td></tr></table>>];
    bb58__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">_477 = const true<br/>StorageDead(_113)<br/>_128 = discriminant(_112)<br/></td></tr><tr><td align="left">switchInt(move _128)</td></tr></table>>];
    bb59__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageLive(_132)<br/>_132 = move ((_112 as Continue).0: state::fulfillment_params::serum::SerumFulfillmentParams&lt;'_, '_&gt;)<br/>_111 = move _132<br/>StorageDead(_132)<br/></td></tr><tr><td align="left">_110 = Box::&lt;SerumFulfillmentParams&lt;'_, '_&gt;&gt;::new(move _111)</td></tr></table>>];
    bb60__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageLive(_129)<br/>_129 = ((_112 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_131)<br/>_131 = _129<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _131)</td></tr></table>>];
    bb61__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_131)<br/>StorageDead(_129)<br/>StorageDead(_111)<br/>StorageDead(_110)<br/></td></tr><tr><td align="left">drop(_101)</td></tr></table>>];
    bb62__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">_89 = move _110 as std::boxed::Box&lt;dyn state::spot_fulfillment_params::SpotFulfillmentParams&gt; (PointerCoercion(Unsize))<br/>StorageDead(_111)<br/>StorageDead(_110)<br/></td></tr><tr><td align="left">drop(_101)</td></tr></table>>];
    bb63__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/></td></tr><tr><td align="left">drop(_90)</td></tr></table>>];
    bb64__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>_87 = move _89 as std::boxed::Box&lt;dyn state::spot_fulfillment_params::SpotFulfillmentParams&gt; (PointerCoercion(Unsize))<br/>_498 = discriminant(_112)<br/>StorageDead(_126)<br/>StorageDead(_124)<br/>StorageDead(_122)<br/>StorageDead(_120)<br/>StorageDead(_118)<br/>StorageDead(_116)<br/>_477 = const false<br/>StorageDead(_112)<br/>StorageDead(_89)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb65__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageLive(_133)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>_136 = &amp;_29<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>_138 = &amp;_23<br/>_137 = &amp;(*_138)<br/></td></tr><tr><td align="left">_135 = SpotMarketMap::&lt;'_&gt;::get_ref(move _136, move _137)</td></tr></table>>];
    bb66__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_137)<br/>StorageDead(_136)<br/></td></tr><tr><td align="left">_134 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _135)</td></tr></table>>];
    bb67__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_135)<br/>_139 = discriminant(_134)<br/></td></tr><tr><td align="left">switchInt(move _139)</td></tr></table>>];
    bb68__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageLive(_143)<br/>_143 = move ((_134 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_133 = move _143<br/>StorageDead(_143)<br/>_502 = discriminant(_134)<br/>StorageDead(_138)<br/>StorageDead(_134)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>_147 = &amp;_29<br/></td></tr><tr><td align="left">_146 = SpotMarketMap::&lt;'_&gt;::get_quote_spot_market(move _147)</td></tr></table>>];
    bb69__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageLive(_140)<br/>_140 = ((_134 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_142)<br/>_142 = _140<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _142)</td></tr></table>>];
    bb70__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_142)<br/>StorageDead(_140)<br/>_500 = discriminant(_134)<br/>StorageDead(_138)<br/>StorageDead(_134)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb71__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_147)<br/></td></tr><tr><td align="left">_145 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _146)</td></tr></table>>];
    bb72__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_146)<br/>_148 = discriminant(_145)<br/></td></tr><tr><td align="left">switchInt(move _148)</td></tr></table>>];
    bb73__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageLive(_152)<br/>_152 = move ((_145 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_144 = move _152<br/>StorageDead(_152)<br/>_506 = discriminant(_145)<br/>StorageDead(_145)<br/>StorageLive(_153)<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>_157 = &amp;mut (*_24)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>StorageLive(_161)<br/>_456 = deref_copy (_1.1: &amp;mut instructions::user::PlaceAndTake&lt;'_&gt;)<br/>_161 = &amp;((*_456).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_457 = deref_copy (*_161)<br/>_587 = (((_457.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_160 = &amp;(*_587)<br/></td></tr><tr><td align="left">_159 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _160)</td></tr></table>>];
    bb74__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageLive(_149)<br/>_149 = ((_145 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_151)<br/>_151 = _149<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _151)</td></tr></table>>];
    bb75__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_151)<br/>StorageDead(_149)<br/>_504 = discriminant(_145)<br/>StorageDead(_145)<br/>StorageDead(_144)<br/></td></tr><tr><td align="left">drop(_133)</td></tr></table>>];
    bb76__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">_158 = &amp;(*_159)<br/>StorageDead(_160)<br/>StorageLive(_162)<br/>StorageLive(_163)<br/>StorageLive(_164)<br/>StorageLive(_165)<br/>_165 = &amp;_133<br/>_164 = &amp;(*_165)<br/></td></tr><tr><td align="left">_163 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _164)</td></tr></table>>];
    bb77__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">_162 = &amp;(*_163)<br/>StorageDead(_164)<br/>StorageLive(_166)<br/>StorageLive(_167)<br/>StorageLive(_168)<br/>StorageLive(_169)<br/>_169 = &amp;_144<br/>_168 = &amp;(*_169)<br/></td></tr><tr><td align="left">_167 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _168)</td></tr></table>>];
    bb78__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">_166 = &amp;(*_167)<br/>StorageDead(_168)<br/></td></tr><tr><td align="left">_156 = PhoenixFulfillmentParams::&lt;'_, '_&gt;::new::&lt;'_&gt;(move _157, move _158, move _162, move _166)</td></tr></table>>];
    bb79__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_166)<br/>StorageDead(_162)<br/>StorageDead(_158)<br/>StorageDead(_157)<br/></td></tr><tr><td align="left">_155 = &lt;std::result::Result&lt;PhoenixFulfillmentParams&lt;'_, '_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _156)</td></tr></table>>];
    bb80__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">_476 = const true<br/>StorageDead(_156)<br/>_170 = discriminant(_155)<br/></td></tr><tr><td align="left">switchInt(move _170)</td></tr></table>>];
    bb81__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageLive(_174)<br/>_174 = move ((_155 as Continue).0: state::fulfillment_params::phoenix::PhoenixFulfillmentParams&lt;'_, '_&gt;)<br/>_154 = move _174<br/>StorageDead(_174)<br/></td></tr><tr><td align="left">_153 = Box::&lt;PhoenixFulfillmentParams&lt;'_, '_&gt;&gt;::new(move _154)</td></tr></table>>];
    bb82__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageLive(_171)<br/>_171 = ((_155 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_173)<br/>_173 = _171<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _173)</td></tr></table>>];
    bb83__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_173)<br/>StorageDead(_171)<br/>StorageDead(_154)<br/>StorageDead(_153)<br/></td></tr><tr><td align="left">drop(_144)</td></tr></table>>];
    bb84__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">_87 = move _153 as std::boxed::Box&lt;dyn state::spot_fulfillment_params::SpotFulfillmentParams&gt; (PointerCoercion(Unsize))<br/>StorageDead(_154)<br/>StorageDead(_153)<br/></td></tr><tr><td align="left">drop(_144)</td></tr></table>>];
    bb85__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_144)<br/></td></tr><tr><td align="left">drop(_133)</td></tr></table>>];
    bb86__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/>_508 = discriminant(_155)<br/>StorageDead(_169)<br/>StorageDead(_167)<br/>StorageDead(_165)<br/>StorageDead(_163)<br/>StorageDead(_161)<br/>StorageDead(_159)<br/>_476 = const false<br/>StorageDead(_155)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb87__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageLive(_175)<br/>StorageLive(_176)<br/>StorageLive(_177)<br/>StorageLive(_178)<br/>_178 = &amp;_29<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>_180 = &amp;_23<br/>_179 = &amp;(*_180)<br/></td></tr><tr><td align="left">_177 = SpotMarketMap::&lt;'_&gt;::get_ref(move _178, move _179)</td></tr></table>>];
    bb88__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_179)<br/>StorageDead(_178)<br/></td></tr><tr><td align="left">_176 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _177)</td></tr></table>>];
    bb89__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_177)<br/>_181 = discriminant(_176)<br/></td></tr><tr><td align="left">switchInt(move _181)</td></tr></table>>];
    bb90__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageLive(_185)<br/>_185 = move ((_176 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_175 = move _185<br/>StorageDead(_185)<br/>_512 = discriminant(_176)<br/>StorageDead(_180)<br/>StorageDead(_176)<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>StorageLive(_189)<br/>_189 = &amp;_29<br/></td></tr><tr><td align="left">_188 = SpotMarketMap::&lt;'_&gt;::get_quote_spot_market(move _189)</td></tr></table>>];
    bb91__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageLive(_182)<br/>_182 = ((_176 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_184)<br/>_184 = _182<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _184)</td></tr></table>>];
    bb92__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_184)<br/>StorageDead(_182)<br/>_510 = discriminant(_176)<br/>StorageDead(_180)<br/>StorageDead(_176)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb93__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_189)<br/></td></tr><tr><td align="left">_187 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _188)</td></tr></table>>];
    bb94__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_188)<br/>_190 = discriminant(_187)<br/></td></tr><tr><td align="left">switchInt(move _190)</td></tr></table>>];
    bb95__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageLive(_194)<br/>_194 = move ((_187 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_186 = move _194<br/>StorageDead(_194)<br/>_516 = discriminant(_187)<br/>StorageDead(_187)<br/>StorageLive(_195)<br/>StorageLive(_196)<br/>StorageLive(_197)<br/>StorageLive(_198)<br/>StorageLive(_199)<br/>_199 = &amp;mut (*_24)<br/>StorageLive(_200)<br/>StorageLive(_201)<br/>StorageLive(_202)<br/>StorageLive(_203)<br/>_458 = deref_copy (_1.1: &amp;mut instructions::user::PlaceAndTake&lt;'_&gt;)<br/>_203 = &amp;((*_458).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_459 = deref_copy (*_203)<br/>_588 = (((_459.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_202 = &amp;(*_588)<br/></td></tr><tr><td align="left">_201 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _202)</td></tr></table>>];
    bb96__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageLive(_191)<br/>_191 = ((_187 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_193)<br/>_193 = _191<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _193)</td></tr></table>>];
    bb97__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_193)<br/>StorageDead(_191)<br/>_514 = discriminant(_187)<br/>StorageDead(_187)<br/>StorageDead(_186)<br/></td></tr><tr><td align="left">drop(_175)</td></tr></table>>];
    bb98__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">_200 = &amp;(*_201)<br/>StorageDead(_202)<br/>StorageLive(_204)<br/>StorageLive(_205)<br/>StorageLive(_206)<br/>StorageLive(_207)<br/>_207 = &amp;_175<br/>_206 = &amp;(*_207)<br/></td></tr><tr><td align="left">_205 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _206)</td></tr></table>>];
    bb99__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">_204 = &amp;(*_205)<br/>StorageDead(_206)<br/>StorageLive(_208)<br/>StorageLive(_209)<br/>StorageLive(_210)<br/>StorageLive(_211)<br/>_211 = &amp;_186<br/>_210 = &amp;(*_211)<br/></td></tr><tr><td align="left">_209 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _210)</td></tr></table>>];
    bb100__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">_208 = &amp;(*_209)<br/>StorageDead(_210)<br/>StorageLive(_212)<br/>_212 = (_15.4: i64)<br/></td></tr><tr><td align="left">_198 = OpenbookV2FulfillmentParams::&lt;'_, '_&gt;::new::&lt;'_&gt;(move _199, move _200, move _204, move _208, move _212)</td></tr></table>>];
    bb101__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_212)<br/>StorageDead(_208)<br/>StorageDead(_204)<br/>StorageDead(_200)<br/>StorageDead(_199)<br/></td></tr><tr><td align="left">_197 = &lt;std::result::Result&lt;OpenbookV2FulfillmentParams&lt;'_, '_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _198)</td></tr></table>>];
    bb102__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">_475 = const true<br/>StorageDead(_198)<br/>_213 = discriminant(_197)<br/></td></tr><tr><td align="left">switchInt(move _213)</td></tr></table>>];
    bb103__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageLive(_217)<br/>_217 = move ((_197 as Continue).0: state::fulfillment_params::openbook_v2::OpenbookV2FulfillmentParams&lt;'_, '_&gt;)<br/>_196 = move _217<br/>StorageDead(_217)<br/></td></tr><tr><td align="left">_195 = Box::&lt;OpenbookV2FulfillmentParams&lt;'_, '_&gt;&gt;::new(move _196)</td></tr></table>>];
    bb104__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageLive(_214)<br/>_214 = ((_197 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_216)<br/>_216 = _214<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _216)</td></tr></table>>];
    bb105__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_216)<br/>StorageDead(_214)<br/>StorageDead(_196)<br/>StorageDead(_195)<br/></td></tr><tr><td align="left">drop(_186)</td></tr></table>>];
    bb106__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">_87 = move _195 as std::boxed::Box&lt;dyn state::spot_fulfillment_params::SpotFulfillmentParams&gt; (PointerCoercion(Unsize))<br/>StorageDead(_196)<br/>StorageDead(_195)<br/></td></tr><tr><td align="left">drop(_186)</td></tr></table>>];
    bb107__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_186)<br/></td></tr><tr><td align="left">drop(_175)</td></tr></table>>];
    bb108__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageDead(_175)<br/>_518 = discriminant(_197)<br/>StorageDead(_211)<br/>StorageDead(_209)<br/>StorageDead(_207)<br/>StorageDead(_205)<br/>StorageDead(_203)<br/>StorageDead(_201)<br/>_475 = const false<br/>StorageDead(_197)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb109__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageDead(_222)<br/>StorageDead(_221)<br/></td></tr><tr><td align="left">_219 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _220)</td></tr></table>>];
    bb110__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_220)<br/>_224 = discriminant(_219)<br/></td></tr><tr><td align="left">switchInt(move _224)</td></tr></table>>];
    bb111__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageLive(_228)<br/>_228 = move ((_219 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_218 = move _228<br/>StorageDead(_228)<br/>_522 = discriminant(_219)<br/>StorageDead(_223)<br/>StorageDead(_219)<br/>StorageLive(_229)<br/>StorageLive(_230)<br/>StorageLive(_231)<br/>StorageLive(_232)<br/>_232 = &amp;_29<br/></td></tr><tr><td align="left">_231 = SpotMarketMap::&lt;'_&gt;::get_quote_spot_market(move _232)</td></tr></table>>];
    bb112__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageLive(_225)<br/>_225 = ((_219 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_227)<br/>_227 = _225<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _227)</td></tr></table>>];
    bb113__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageDead(_227)<br/>StorageDead(_225)<br/>_520 = discriminant(_219)<br/>StorageDead(_223)<br/>StorageDead(_219)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb114__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageDead(_232)<br/></td></tr><tr><td align="left">_230 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _231)</td></tr></table>>];
    bb115__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageDead(_231)<br/>_233 = discriminant(_230)<br/></td></tr><tr><td align="left">switchInt(move _233)</td></tr></table>>];
    bb116__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageLive(_237)<br/>_237 = move ((_230 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_229 = move _237<br/>StorageDead(_237)<br/>_526 = discriminant(_230)<br/>StorageDead(_230)<br/>StorageLive(_238)<br/>StorageLive(_239)<br/>StorageLive(_240)<br/>StorageLive(_241)<br/>StorageLive(_242)<br/>_242 = &amp;mut (*_24)<br/>StorageLive(_243)<br/>StorageLive(_244)<br/>StorageLive(_245)<br/>StorageLive(_246)<br/>_246 = &amp;_218<br/>_245 = &amp;(*_246)<br/></td></tr><tr><td align="left">_244 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _245)</td></tr></table>>];
    bb117__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageLive(_234)<br/>_234 = ((_230 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_236)<br/>_236 = _234<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _236)</td></tr></table>>];
    bb118__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageDead(_236)<br/>StorageDead(_234)<br/>_524 = discriminant(_230)<br/>StorageDead(_230)<br/>StorageDead(_229)<br/></td></tr><tr><td align="left">drop(_218)</td></tr></table>>];
    bb119__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">_243 = &amp;(*_244)<br/>StorageDead(_245)<br/>StorageLive(_247)<br/>StorageLive(_248)<br/>StorageLive(_249)<br/>StorageLive(_250)<br/>_250 = &amp;_229<br/>_249 = &amp;(*_250)<br/></td></tr><tr><td align="left">_248 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _249)</td></tr></table>>];
    bb120__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">_247 = &amp;(*_248)<br/>StorageDead(_249)<br/></td></tr><tr><td align="left">_241 = MatchFulfillmentParams::&lt;'_&gt;::new::&lt;'_&gt;(move _242, move _243, move _247)</td></tr></table>>];
    bb121__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageDead(_247)<br/>StorageDead(_243)<br/>StorageDead(_242)<br/></td></tr><tr><td align="left">_240 = &lt;std::result::Result&lt;MatchFulfillmentParams&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _241)</td></tr></table>>];
    bb122__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">_474 = const true<br/>StorageDead(_241)<br/>_251 = discriminant(_240)<br/></td></tr><tr><td align="left">switchInt(move _251)</td></tr></table>>];
    bb123__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageLive(_255)<br/>_255 = move ((_240 as Continue).0: state::fulfillment_params::drift::MatchFulfillmentParams&lt;'_&gt;)<br/>_239 = move _255<br/>StorageDead(_255)<br/></td></tr><tr><td align="left">_238 = Box::&lt;MatchFulfillmentParams&lt;'_&gt;&gt;::new(move _239)</td></tr></table>>];
    bb124__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageLive(_252)<br/>_252 = ((_240 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_254)<br/>_254 = _252<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _254)</td></tr></table>>];
    bb125__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageDead(_254)<br/>StorageDead(_252)<br/>StorageDead(_239)<br/>StorageDead(_238)<br/></td></tr><tr><td align="left">drop(_229)</td></tr></table>>];
    bb126__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">_87 = move _238 as std::boxed::Box&lt;dyn state::spot_fulfillment_params::SpotFulfillmentParams&gt; (PointerCoercion(Unsize))<br/>StorageDead(_239)<br/>StorageDead(_238)<br/></td></tr><tr><td align="left">drop(_229)</td></tr></table>>];
    bb127__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageDead(_229)<br/></td></tr><tr><td align="left">drop(_218)</td></tr></table>>];
    bb128__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageDead(_218)<br/>_528 = discriminant(_240)<br/>StorageDead(_250)<br/>StorageDead(_248)<br/>StorageDead(_246)<br/>StorageDead(_244)<br/>_474 = const false<br/>StorageDead(_240)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb129__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">_86 = move _87 as std::boxed::Box&lt;dyn state::spot_fulfillment_params::SpotFulfillmentParams&gt; (PointerCoercion(Unsize))<br/>StorageDead(_87)<br/>StorageLive(_256)<br/>StorageLive(_257)<br/>_460 = deref_copy (_1.1: &amp;mut instructions::user::PlaceAndTake&lt;'_&gt;)<br/>_257 = &amp;((*_460).1: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_256 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt; as anchor_lang::Key&gt;::key(move _257)</td></tr></table>>];
    bb130__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageDead(_257)<br/>StorageLive(_258)<br/>StorageLive(_259)<br/>StorageLive(_260)<br/>StorageLive(_261)<br/>StorageLive(_262)<br/>_461 = deref_copy (_1.1: &amp;mut instructions::user::PlaceAndTake&lt;'_&gt;)<br/>_262 = &amp;((*_461).1: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_261 = anchor_lang::prelude::AccountLoader::&lt;'_, User&gt;::load_mut(move _262)</td></tr></table>>];
    bb131__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageDead(_262)<br/>StorageLive(_263)<br/>_263 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_260 = std::result::Result::&lt;RefMut&lt;'_, User&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _261, move _263)</td></tr></table>>];
    bb132__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageDead(_263)<br/>StorageDead(_261)<br/></td></tr><tr><td align="left">_259 = &lt;std::result::Result&lt;RefMut&lt;'_, User&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _260)</td></tr></table>>];
    bb133__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageDead(_260)<br/>_264 = discriminant(_259)<br/></td></tr><tr><td align="left">switchInt(move _264)</td></tr></table>>];
    bb134__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageLive(_268)<br/>_268 = move ((_259 as Continue).0: std::cell::RefMut&lt;'_, state::user::User&gt;)<br/>_471 = const true<br/>_258 = move _268<br/>StorageDead(_268)<br/>_532 = discriminant(_259)<br/>StorageDead(_259)<br/>StorageLive(_269)<br/>StorageLive(_270)<br/>StorageLive(_271)<br/>StorageLive(_272)<br/>_272 = &amp;_258<br/></td></tr><tr><td align="left">_271 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _272)</td></tr></table>>];
    bb135__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageLive(_265)<br/>_265 = ((_259 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_267)<br/>_267 = _265<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _267)</td></tr></table>>];
    bb136__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageDead(_267)<br/>StorageDead(_265)<br/>_530 = discriminant(_259)<br/>StorageDead(_259)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb137__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">_270 = &amp;(*_271)<br/>StorageDead(_272)<br/></td></tr><tr><td align="left">_269 = User::get_last_order_id(move _270)</td></tr></table>>];
    bb138__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">StorageDead(_270)<br/>StorageDead(_271)<br/>StorageLive(_273)<br/>StorageLive(_274)<br/>StorageLive(_275)<br/>StorageLive(_276)<br/>StorageLive(_277)<br/>StorageLive(_278)<br/>StorageLive(_279)<br/>_462 = deref_copy (_1.1: &amp;mut instructions::user::PlaceAndTake&lt;'_&gt;)<br/>_279 = &amp;((*_462).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_463 = deref_copy (*_279)<br/>_589 = (((_463.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_278 = &amp;(*_589)<br/></td></tr><tr><td align="left">_277 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _278)</td></tr></table>>];
    bb139__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">_276 = &amp;(*_277)<br/>StorageDead(_278)<br/>StorageLive(_280)<br/>StorageLive(_281)<br/>StorageLive(_282)<br/>StorageLive(_283)<br/>_283 = &amp;mut _258<br/>_282 = &amp;mut (*_283)<br/></td></tr><tr><td align="left">_281 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _282)</td></tr></table>>];
    bb140__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">_280 = &amp;mut (*_281)<br/>StorageDead(_282)<br/>StorageLive(_284)<br/>_284 = _256<br/>StorageLive(_285)<br/>StorageLive(_286)<br/>_286 = &amp;_28<br/>_285 = &amp;(*_286)<br/>StorageLive(_287)<br/>StorageLive(_288)<br/>_288 = &amp;_29<br/>_287 = &amp;(*_288)<br/>StorageLive(_289)<br/>StorageLive(_290)<br/>_290 = &amp;mut _30<br/>_289 = &amp;mut (*_290)<br/>StorageLive(_291)<br/>StorageLive(_292)<br/>_292 = &amp;_15<br/>_291 = &amp;(*_292)<br/>StorageLive(_293)<br/>_293 = _2<br/>StorageLive(_294)<br/></td></tr><tr><td align="left">_294 = &lt;PlaceOrderOptions as Default&gt;::default()</td></tr></table>>];
    bb141__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left">_275 = controller::orders::place_spot_order(move _276, move _280, move _284, move _285, move _287, move _289, move _291, move _293, move _294)</td></tr></table>>];
    bb142__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageDead(_294)<br/>StorageDead(_293)<br/>StorageDead(_291)<br/>StorageDead(_289)<br/>StorageDead(_287)<br/>StorageDead(_285)<br/>StorageDead(_284)<br/>StorageDead(_280)<br/>StorageDead(_276)<br/></td></tr><tr><td align="left">_274 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _275)</td></tr></table>>];
    bb143__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageDead(_275)<br/>_295 = discriminant(_274)<br/></td></tr><tr><td align="left">switchInt(move _295)</td></tr></table>>];
    bb144__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">StorageLive(_299)<br/>_299 = ((_274 as Continue).0: ())<br/>_273 = _299<br/>StorageDead(_299)<br/>StorageDead(_292)<br/>StorageDead(_290)<br/>StorageDead(_288)<br/>StorageDead(_286)<br/>StorageDead(_283)<br/>StorageDead(_281)<br/>StorageDead(_279)<br/>StorageDead(_277)<br/>StorageDead(_274)<br/>StorageDead(_273)<br/>StorageLive(_300)<br/>StorageLive(_301)<br/>_471 = const false<br/>_301 = move _258<br/></td></tr><tr><td align="left">_300 = std::mem::drop::&lt;RefMut&lt;'_, User&gt;&gt;(move _301)</td></tr></table>>];
    bb145__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageLive(_296)<br/>_296 = ((_274 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_298)<br/>_298 = _296<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _298)</td></tr></table>>];
    bb146__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">StorageDead(_298)<br/>StorageDead(_296)<br/>StorageDead(_292)<br/>StorageDead(_290)<br/>StorageDead(_288)<br/>StorageDead(_286)<br/>StorageDead(_283)<br/>StorageDead(_281)<br/>StorageDead(_279)<br/>StorageDead(_277)<br/>StorageDead(_274)<br/>StorageDead(_273)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb147__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left" balign="left">StorageDead(_301)<br/>StorageDead(_300)<br/>StorageLive(_302)<br/>_464 = deref_copy (_1.1: &amp;mut instructions::user::PlaceAndTake&lt;'_&gt;)<br/>_302 = &amp;mut ((*_464).1: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/>StorageLive(_303)<br/>StorageLive(_304)<br/>StorageLive(_305)<br/>StorageLive(_306)<br/>StorageLive(_307)<br/>StorageLive(_308)<br/>StorageLive(_309)<br/>StorageLive(_310)<br/>StorageLive(_311)<br/>_311 = &amp;(*_302)<br/></td></tr><tr><td align="left">_310 = anchor_lang::prelude::AccountLoader::&lt;'_, User&gt;::load(move _311)</td></tr></table>>];
    bb148__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left" balign="left">StorageDead(_311)<br/>StorageLive(_312)<br/>_312 = {closure@programs/drift/src/macros.rs:70:40: 70:43}<br/></td></tr><tr><td align="left">_309 = std::result::Result::&lt;Ref&lt;'_, User&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:70:40: 70:43}&gt;(move _310, move _312)</td></tr></table>>];
    bb149__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">149</td></tr><tr><td align="left" balign="left">StorageDead(_312)<br/>StorageDead(_310)<br/></td></tr><tr><td align="left">_308 = &lt;std::result::Result&lt;Ref&lt;'_, User&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _309)</td></tr></table>>];
    bb150__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">150</td></tr><tr><td align="left" balign="left">_473 = const true<br/>StorageDead(_309)<br/>_313 = discriminant(_308)<br/></td></tr><tr><td align="left">switchInt(move _313)</td></tr></table>>];
    bb151__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">151</td></tr><tr><td align="left" balign="left">StorageLive(_317)<br/>_317 = move ((_308 as Continue).0: std::cell::Ref&lt;'_, state::user::User&gt;)<br/>_307 = move _317<br/>StorageDead(_317)<br/>_306 = &amp;_307<br/></td></tr><tr><td align="left">_305 = &lt;Ref&lt;'_, User&gt; as Deref&gt;::deref(move _306)</td></tr></table>>];
    bb152__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">152</td></tr><tr><td align="left" balign="left">StorageLive(_314)<br/>_314 = ((_308 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_316)<br/>_316 = _314<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _316)</td></tr></table>>];
    bb153__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">153</td></tr><tr><td align="left" balign="left">StorageDead(_316)<br/>StorageDead(_314)<br/>StorageDead(_306)<br/>StorageDead(_304)<br/>_534 = discriminant(_308)<br/>_473 = const false<br/>StorageDead(_308)<br/>StorageDead(_307)<br/>StorageDead(_305)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb154__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">154</td></tr><tr><td align="left" balign="left">_304 = &amp;(*_305)<br/>StorageDead(_306)<br/></td></tr><tr><td align="left">_303 = User::get_last_order_id(move _304)</td></tr></table>>];
    bb155__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">155</td></tr><tr><td align="left" balign="left">StorageDead(_304)<br/></td></tr><tr><td align="left">drop(_307)</td></tr></table>>];
    bb156__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">156</td></tr><tr><td align="left" balign="left">StorageDead(_321)<br/>StorageDead(_320)<br/>StorageLive(_323)<br/>StorageLive(_324)<br/>StorageLive(_325)<br/>_325 = const &quot;new order failed to be placed&quot;<br/>_324 = &amp;(*_325)<br/></td></tr><tr><td align="left">_323 = solana_program::log::sol_log(move _324)</td></tr></table>>];
    bb157__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">157</td></tr><tr><td align="left" balign="left">StorageDead(_324)<br/>StorageDead(_325)<br/>StorageDead(_323)<br/>StorageLive(_326)<br/>StorageLive(_327)<br/>StorageLive(_328)<br/>_449 = const _<br/>_328 = &amp;(*_449)<br/>StorageLive(_330)<br/>_330 = ()<br/></td></tr><tr><td align="left">_327 = &lt;{closure@programs/drift/src/error.rs:647:9: 647:11} as Fn&lt;()&gt;&gt;::call(move _328, move _330)</td></tr></table>>];
    bb158__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">158</td></tr><tr><td align="left" balign="left">StorageDead(_330)<br/>StorageDead(_328)<br/></td></tr><tr><td align="left">_326 = &lt;error::ErrorCode as Into&lt;anchor_lang::error::Error&gt;&gt;::into(move _327)</td></tr></table>>];
    bb159__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">159</td></tr><tr><td align="left" balign="left">StorageDead(_327)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _326)<br/>StorageDead(_326)<br/>StorageDead(_319)<br/>StorageDead(_318)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb160__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">160</td></tr><tr><td align="left" balign="left">StorageDead(_321)<br/>StorageDead(_320)<br/>_318 = const ()<br/>StorageDead(_319)<br/>StorageDead(_318)<br/>StorageLive(_331)<br/>StorageLive(_332)<br/>StorageLive(_333)<br/>StorageLive(_334)<br/>_334 = _303<br/>StorageLive(_335)<br/>StorageLive(_336)<br/>StorageLive(_337)<br/>StorageLive(_338)<br/>_465 = deref_copy (_1.1: &amp;mut instructions::user::PlaceAndTake&lt;'_&gt;)<br/>_338 = &amp;((*_465).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_466 = deref_copy (*_338)<br/>_590 = (((_466.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_337 = &amp;(*_590)<br/></td></tr><tr><td align="left">_336 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _337)</td></tr></table>>];
    bb161__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">161</td></tr><tr><td align="left" balign="left">_335 = &amp;(*_336)<br/>StorageDead(_337)<br/>StorageLive(_339)<br/>_339 = &amp;(*_302)<br/>StorageLive(_340)<br/>StorageLive(_341)<br/>_467 = deref_copy (_1.1: &amp;mut instructions::user::PlaceAndTake&lt;'_&gt;)<br/>_341 = &amp;((*_467).2: anchor_lang::prelude::AccountLoader&lt;'_, state::user::UserStats&gt;)<br/>_340 = &amp;(*_341)<br/>StorageLive(_342)<br/>StorageLive(_343)<br/>_343 = &amp;_29<br/>_342 = &amp;(*_343)<br/>StorageLive(_344)<br/>StorageLive(_345)<br/>_345 = &amp;_28<br/>_344 = &amp;(*_345)<br/>StorageLive(_346)<br/>StorageLive(_347)<br/>_347 = &amp;mut _30<br/>_346 = &amp;mut (*_347)<br/>StorageLive(_348)<br/>StorageLive(_349)<br/>StorageLive(_350)<br/>StorageLive(_351)<br/>_351 = &amp;(*_302)<br/></td></tr><tr><td align="left">_350 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt; as Clone&gt;::clone(move _351)</td></tr></table>>];
    bb162__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">162</td></tr><tr><td align="left" balign="left">StorageDead(_351)<br/>_349 = &amp;_350<br/>_348 = &amp;(*_349)<br/>StorageLive(_352)<br/>StorageLive(_353)<br/>StorageLive(_354)<br/>StorageLive(_355)<br/>_468 = deref_copy (_1.1: &amp;mut instructions::user::PlaceAndTake&lt;'_&gt;)<br/>_355 = &amp;((*_468).2: anchor_lang::prelude::AccountLoader&lt;'_, state::user::UserStats&gt;)<br/></td></tr><tr><td align="left">_354 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, UserStats&gt; as Clone&gt;::clone(move _355)</td></tr></table>>];
    bb163__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">163</td></tr><tr><td align="left" balign="left">StorageDead(_355)<br/>_353 = &amp;_354<br/>_352 = &amp;(*_353)<br/>StorageLive(_356)<br/>StorageLive(_357)<br/>_357 = &amp;_70<br/>_356 = &amp;(*_357)<br/>StorageLive(_358)<br/>StorageLive(_359)<br/>_359 = &amp;_71<br/>_358 = &amp;(*_359)<br/>StorageLive(_360)<br/>_360 = Option::&lt;u32&gt;::None<br/>StorageLive(_361)<br/>StorageLive(_362)<br/>_362 = &amp;_15<br/>_361 = &amp;(*_362)<br/>StorageLive(_363)<br/>StorageLive(_364)<br/>StorageLive(_365)<br/>StorageLive(_366)<br/>_366 = &amp;mut _86<br/></td></tr><tr><td align="left">_365 = &lt;Box&lt;dyn SpotFulfillmentParams&gt; as AsMut&lt;dyn SpotFulfillmentParams&gt;&gt;::as_mut(move _366)</td></tr></table>>];
    bb164__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">164</td></tr><tr><td align="left" balign="left">_364 = &amp;mut (*_365)<br/>_363 = move _364 as &amp;mut dyn state::spot_fulfillment_params::SpotFulfillmentParams (PointerCoercion(Unsize))<br/>StorageDead(_366)<br/>StorageDead(_364)<br/></td></tr><tr><td align="left">_333 = controller::orders::fill_spot_order(move _334, move _335, move _339, move _340, move _342, move _344, move _346, move _348, move _352, move _356, move _358, move _360, move _361, move _363)</td></tr></table>>];
    bb165__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">165</td></tr><tr><td align="left" balign="left">StorageDead(_363)<br/>StorageDead(_361)<br/>StorageDead(_360)<br/>StorageDead(_358)<br/>StorageDead(_356)<br/>StorageDead(_352)<br/>StorageDead(_348)<br/>StorageDead(_346)<br/>StorageDead(_344)<br/>StorageDead(_342)<br/>StorageDead(_340)<br/>StorageDead(_339)<br/>StorageDead(_335)<br/>StorageDead(_334)<br/></td></tr><tr><td align="left">_332 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _333)</td></tr></table>>];
    bb166__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">166</td></tr><tr><td align="left" balign="left">StorageDead(_333)<br/>_367 = discriminant(_332)<br/></td></tr><tr><td align="left">switchInt(move _367)</td></tr></table>>];
    bb167__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">167</td></tr><tr><td align="left" balign="left">StorageLive(_371)<br/>_371 = ((_332 as Continue).0: u64)<br/>_331 = _371<br/>StorageDead(_371)<br/>StorageDead(_365)<br/>StorageDead(_362)<br/>StorageDead(_359)<br/>StorageDead(_357)<br/>StorageDead(_354)<br/>StorageDead(_353)<br/>StorageDead(_350)<br/>StorageDead(_349)<br/>StorageDead(_347)<br/>StorageDead(_345)<br/>StorageDead(_343)<br/>StorageDead(_341)<br/>StorageDead(_338)<br/>StorageDead(_336)<br/>StorageDead(_332)<br/>StorageDead(_331)<br/>StorageLive(_372)<br/>StorageLive(_373)<br/>StorageLive(_374)<br/>StorageLive(_375)<br/>StorageLive(_376)<br/>StorageLive(_377)<br/>StorageLive(_378)<br/>StorageLive(_379)<br/>StorageLive(_380)<br/>StorageLive(_381)<br/>StorageLive(_382)<br/>StorageLive(_383)<br/>_469 = deref_copy (_1.1: &amp;mut instructions::user::PlaceAndTake&lt;'_&gt;)<br/>_383 = &amp;((*_469).1: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_382 = anchor_lang::prelude::AccountLoader::&lt;'_, User&gt;::load(move _383)</td></tr></table>>];
    bb168__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">168</td></tr><tr><td align="left" balign="left">StorageLive(_368)<br/>_368 = ((_332 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_370)<br/>_370 = _368<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _370)</td></tr></table>>];
    bb169__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">169</td></tr><tr><td align="left" balign="left">StorageDead(_370)<br/>StorageDead(_368)<br/>StorageDead(_365)<br/>StorageDead(_362)<br/>StorageDead(_359)<br/>StorageDead(_357)<br/>StorageDead(_354)<br/>StorageDead(_353)<br/>StorageDead(_350)<br/>StorageDead(_349)<br/>StorageDead(_347)<br/>StorageDead(_345)<br/>StorageDead(_343)<br/>StorageDead(_341)<br/>StorageDead(_338)<br/>StorageDead(_336)<br/>StorageDead(_332)<br/>StorageDead(_331)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb170__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">170</td></tr><tr><td align="left" balign="left">StorageDead(_383)<br/>StorageLive(_384)<br/>_384 = {closure@programs/drift/src/macros.rs:70:40: 70:43}<br/></td></tr><tr><td align="left">_381 = std::result::Result::&lt;Ref&lt;'_, User&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:70:40: 70:43}&gt;(move _382, move _384)</td></tr></table>>];
    bb171__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">171</td></tr><tr><td align="left" balign="left">StorageDead(_384)<br/>StorageDead(_382)<br/></td></tr><tr><td align="left">_380 = &lt;std::result::Result&lt;Ref&lt;'_, User&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _381)</td></tr></table>>];
    bb172__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">172</td></tr><tr><td align="left" balign="left">_472 = const true<br/>StorageDead(_381)<br/>_385 = discriminant(_380)<br/></td></tr><tr><td align="left">switchInt(move _385)</td></tr></table>>];
    bb173__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">173</td></tr><tr><td align="left" balign="left">StorageLive(_389)<br/>_389 = move ((_380 as Continue).0: std::cell::Ref&lt;'_, state::user::User&gt;)<br/>_379 = move _389<br/>StorageDead(_389)<br/>_378 = &amp;_379<br/></td></tr><tr><td align="left">_377 = &lt;Ref&lt;'_, User&gt; as Deref&gt;::deref(move _378)</td></tr></table>>];
    bb174__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">174</td></tr><tr><td align="left" balign="left">StorageLive(_386)<br/>_386 = ((_380 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_388)<br/>_388 = _386<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _388)</td></tr></table>>];
    bb175__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">175</td></tr><tr><td align="left" balign="left">StorageDead(_388)<br/>StorageDead(_386)<br/>StorageDead(_378)<br/>StorageDead(_376)<br/>StorageDead(_375)<br/>StorageDead(_373)<br/>_538 = discriminant(_380)<br/>_472 = const false<br/>StorageDead(_380)<br/>StorageDead(_379)<br/>StorageDead(_377)<br/>StorageDead(_374)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb176__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">176</td></tr><tr><td align="left" balign="left">StorageDead(_378)<br/>_376 = &amp;((*_377).5: [state::user::Order; 32])<br/>_375 = move _376 as &amp;[state::user::Order] (PointerCoercion(Unsize))<br/>StorageDead(_376)<br/></td></tr><tr><td align="left">_374 = core::slice::&lt;impl [Order]&gt;::iter(move _375)</td></tr></table>>];
    bb177__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">177</td></tr><tr><td align="left" balign="left">_373 = &amp;mut _374<br/>StorageDead(_375)<br/>StorageLive(_390)<br/>StorageLive(_391)<br/>_391 = &amp;_303<br/>_390 = {closure@programs/drift/src/instructions/user.rs:2762:14: 2762:21} { order_id: move _391 }<br/>StorageDead(_391)<br/></td></tr><tr><td align="left">_372 = &lt;std::slice::Iter&lt;'_, Order&gt; as Iterator&gt;::any::&lt;{closure@programs/drift/src/instructions/user.rs:2762:14: 2762:21}&gt;(move _373, move _390)</td></tr></table>>];
    bb178__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">178</td></tr><tr><td align="left" balign="left">StorageDead(_390)<br/>StorageDead(_373)<br/></td></tr><tr><td align="left">drop(_379)</td></tr></table>>];
    bb179__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">179</td></tr><tr><td align="left" balign="left">StorageLive(_394)<br/>_394 = _372<br/></td></tr><tr><td align="left">switchInt(move _394)</td></tr></table>>];
    bb180__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">180</td></tr><tr><td align="left" balign="left">StorageLive(_395)<br/>StorageLive(_396)<br/>StorageLive(_397)<br/>StorageLive(_398)<br/>_398 = _303<br/>StorageLive(_399)<br/>StorageLive(_400)<br/>_470 = deref_copy (_1.1: &amp;mut instructions::user::PlaceAndTake&lt;'_&gt;)<br/>_400 = &amp;((*_470).1: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/>_399 = &amp;(*_400)<br/>StorageLive(_401)<br/>StorageLive(_402)<br/>_402 = &amp;_28<br/>_401 = &amp;(*_402)<br/>StorageLive(_403)<br/>StorageLive(_404)<br/>_404 = &amp;_29<br/>_403 = &amp;(*_404)<br/>StorageLive(_405)<br/>StorageLive(_406)<br/>_406 = &amp;mut _30<br/>_405 = &amp;mut (*_406)<br/>StorageLive(_407)<br/>StorageLive(_408)<br/>_408 = &amp;_15<br/>_407 = &amp;(*_408)<br/></td></tr><tr><td align="left">_397 = cancel_order_by_order_id(move _398, move _399, move _401, move _403, move _405, move _407)</td></tr></table>>];
    bb181__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">181</td></tr><tr><td align="left" balign="left">StorageDead(_407)<br/>StorageDead(_405)<br/>StorageDead(_403)<br/>StorageDead(_401)<br/>StorageDead(_399)<br/>StorageDead(_398)<br/></td></tr><tr><td align="left">_396 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _397)</td></tr></table>>];
    bb182__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">182</td></tr><tr><td align="left" balign="left">StorageDead(_397)<br/>_409 = discriminant(_396)<br/></td></tr><tr><td align="left">switchInt(move _409)</td></tr></table>>];
    bb183__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">183</td></tr><tr><td align="left" balign="left">StorageLive(_413)<br/>_413 = ((_396 as Continue).0: ())<br/>_395 = _413<br/>StorageDead(_413)<br/>StorageDead(_408)<br/>StorageDead(_406)<br/>StorageDead(_404)<br/>StorageDead(_402)<br/>StorageDead(_400)<br/>StorageDead(_396)<br/>StorageDead(_395)<br/>_392 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb184__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">184</td></tr><tr><td align="left" balign="left">StorageLive(_410)<br/>_410 = ((_396 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_412)<br/>_412 = _410<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _412)</td></tr></table>>];
    bb185__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">185</td></tr><tr><td align="left" balign="left">StorageDead(_412)<br/>StorageDead(_410)<br/>StorageDead(_408)<br/>StorageDead(_406)<br/>StorageDead(_404)<br/>StorageDead(_402)<br/>StorageDead(_400)<br/>StorageDead(_396)<br/>StorageDead(_395)<br/>StorageDead(_394)<br/>StorageDead(_393)<br/>StorageDead(_392)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb186__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">186</td></tr><tr><td align="left" balign="left">_392 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb187__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">187</td></tr><tr><td align="left" balign="left">StorageDead(_394)<br/>StorageDead(_393)<br/>StorageDead(_392)<br/>StorageLive(_414)<br/>StorageLive(_415)<br/>StorageLive(_416)<br/>StorageLive(_417)<br/>_417 = &amp;_29<br/>StorageLive(_418)<br/>StorageLive(_419)<br/>_419 = &amp;_23<br/>_418 = &amp;(*_419)<br/></td></tr><tr><td align="left">_416 = SpotMarketMap::&lt;'_&gt;::get_ref(move _417, move _418)</td></tr></table>>];
    bb188__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">188</td></tr><tr><td align="left" balign="left">StorageDead(_418)<br/>StorageDead(_417)<br/></td></tr><tr><td align="left">_415 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _416)</td></tr></table>>];
    bb189__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">189</td></tr><tr><td align="left" balign="left">StorageDead(_416)<br/>_420 = discriminant(_415)<br/></td></tr><tr><td align="left">switchInt(move _420)</td></tr></table>>];
    bb190__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">190</td></tr><tr><td align="left" balign="left">StorageLive(_424)<br/>_424 = move ((_415 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_414 = move _424<br/>StorageDead(_424)<br/>_544 = discriminant(_415)<br/>StorageDead(_419)<br/>StorageDead(_415)<br/>StorageLive(_425)<br/>StorageLive(_426)<br/>StorageLive(_427)<br/>StorageLive(_428)<br/>_428 = &amp;_29<br/></td></tr><tr><td align="left">_427 = SpotMarketMap::&lt;'_&gt;::get_quote_spot_market(move _428)</td></tr></table>>];
    bb191__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">191</td></tr><tr><td align="left" balign="left">StorageLive(_421)<br/>_421 = ((_415 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_423)<br/>_423 = _421<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _423)</td></tr></table>>];
    bb192__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">192</td></tr><tr><td align="left" balign="left">StorageDead(_423)<br/>StorageDead(_421)<br/>_542 = discriminant(_415)<br/>StorageDead(_419)<br/>StorageDead(_415)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb193__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">193</td></tr><tr><td align="left" balign="left">StorageDead(_428)<br/></td></tr><tr><td align="left">_426 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _427)</td></tr></table>>];
    bb194__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">194</td></tr><tr><td align="left" balign="left">StorageDead(_427)<br/>_429 = discriminant(_426)<br/></td></tr><tr><td align="left">switchInt(move _429)</td></tr></table>>];
    bb195__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">195</td></tr><tr><td align="left" balign="left">StorageLive(_433)<br/>_433 = move ((_426 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_425 = move _433<br/>StorageDead(_433)<br/>_548 = discriminant(_426)<br/>StorageDead(_426)<br/>StorageLive(_434)<br/>StorageLive(_435)<br/>StorageLive(_436)<br/>StorageLive(_437)<br/>_591 = (((_86.0: std::ptr::Unique&lt;dyn state::spot_fulfillment_params::SpotFulfillmentParams&gt;).0: std::ptr::NonNull&lt;dyn state::spot_fulfillment_params::SpotFulfillmentParams&gt;).0: *const dyn state::spot_fulfillment_params::SpotFulfillmentParams)<br/>_437 = &amp;(*_591)<br/>StorageLive(_438)<br/>StorageLive(_439)<br/>_439 = &amp;_414<br/>_438 = &amp;(*_439)<br/>StorageLive(_440)<br/>StorageLive(_441)<br/>_441 = &amp;_425<br/>_440 = &amp;(*_441)<br/></td></tr><tr><td align="left">_436 = &lt;dyn SpotFulfillmentParams as SpotFulfillmentParams&gt;::validate_vault_amounts(move _437, move _438, move _440)</td></tr></table>>];
    bb196__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">196</td></tr><tr><td align="left" balign="left">StorageLive(_430)<br/>_430 = ((_426 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_432)<br/>_432 = _430<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _432)</td></tr></table>>];
    bb197__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">197</td></tr><tr><td align="left" balign="left">StorageDead(_432)<br/>StorageDead(_430)<br/>_546 = discriminant(_426)<br/>StorageDead(_426)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb198__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">198</td></tr><tr><td align="left" balign="left">StorageDead(_440)<br/>StorageDead(_438)<br/>StorageDead(_437)<br/></td></tr><tr><td align="left">_435 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _436)</td></tr></table>>];
    bb199__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">199</td></tr><tr><td align="left" balign="left">StorageDead(_436)<br/>_442 = discriminant(_435)<br/></td></tr><tr><td align="left">switchInt(move _442)</td></tr></table>>];
    bb200__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">200</td></tr><tr><td align="left" balign="left">StorageLive(_446)<br/>_446 = ((_435 as Continue).0: ())<br/>_434 = _446<br/>StorageDead(_446)<br/>StorageDead(_441)<br/>StorageDead(_439)<br/>StorageDead(_435)<br/>StorageDead(_434)<br/>StorageLive(_447)<br/>_447 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _447)<br/>StorageDead(_447)<br/></td></tr><tr><td align="left">drop(_425)</td></tr></table>>];
    bb201__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">201</td></tr><tr><td align="left" balign="left">StorageLive(_443)<br/>_443 = ((_435 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_445)<br/>_445 = _443<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _445)</td></tr></table>>];
    bb202__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">202</td></tr><tr><td align="left" balign="left">StorageDead(_445)<br/>StorageDead(_443)<br/>StorageDead(_441)<br/>StorageDead(_439)<br/>StorageDead(_435)<br/>StorageDead(_434)<br/></td></tr><tr><td align="left">drop(_425)</td></tr></table>>];
    bb203__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">203</td></tr><tr><td align="left" balign="left">StorageDead(_425)<br/></td></tr><tr><td align="left">drop(_414)</td></tr></table>>];
    bb204__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">204</td></tr><tr><td align="left" balign="left">StorageDead(_414)<br/>StorageDead(_372)<br/>StorageDead(_303)<br/>StorageDead(_302)<br/>StorageDead(_269)<br/>_471 = const false<br/>StorageDead(_258)<br/>StorageDead(_256)<br/></td></tr><tr><td align="left">drop(_86)</td></tr></table>>];
    bb205__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">205</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>StorageDead(_84)<br/></td></tr><tr><td align="left">drop(_71)</td></tr></table>>];
    bb206__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">206</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/></td></tr><tr><td align="left">drop(_70)</td></tr></table>>];
    bb207__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">207</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/></td></tr><tr><td align="left">drop(_30)</td></tr></table>>];
    bb208__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">208</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/></td></tr><tr><td align="left">drop(_29)</td></tr></table>>];
    bb209__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">209</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/></td></tr><tr><td align="left">drop(_28)</td></tr></table>>];
    bb210__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">210</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb211__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">211</td></tr><tr><td align="left" balign="left">StorageDead(_425)<br/></td></tr><tr><td align="left">drop(_414)</td></tr></table>>];
    bb212__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">212</td></tr><tr><td align="left" balign="left">StorageDead(_414)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb213__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">213</td></tr><tr><td align="left" balign="left">StorageDead(_372)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb214__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">214</td></tr><tr><td align="left" balign="left">StorageDead(_303)<br/>StorageDead(_302)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb215__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">215</td></tr><tr><td align="left" balign="left">StorageDead(_269)<br/></td></tr><tr><td align="left">switchInt(_471)</td></tr></table>>];
    bb216__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">216</td></tr><tr><td align="left" balign="left">_471 = const false<br/>StorageDead(_258)<br/>StorageDead(_256)<br/></td></tr><tr><td align="left">drop(_86)</td></tr></table>>];
    bb217__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">217</td></tr><tr><td align="left" balign="left">StorageDead(_229)<br/></td></tr><tr><td align="left">drop(_218)</td></tr></table>>];
    bb218__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">218</td></tr><tr><td align="left" balign="left">StorageDead(_218)<br/>_550 = discriminant(_240)<br/>StorageDead(_250)<br/>StorageDead(_248)<br/>StorageDead(_246)<br/>StorageDead(_244)<br/>_474 = const false<br/>StorageDead(_240)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb219__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">219</td></tr><tr><td align="left" balign="left">StorageDead(_218)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb220__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">220</td></tr><tr><td align="left" balign="left">StorageDead(_186)<br/></td></tr><tr><td align="left">drop(_175)</td></tr></table>>];
    bb221__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">221</td></tr><tr><td align="left" balign="left">StorageDead(_175)<br/>_552 = discriminant(_197)<br/>StorageDead(_211)<br/>StorageDead(_209)<br/>StorageDead(_207)<br/>StorageDead(_205)<br/>StorageDead(_203)<br/>StorageDead(_201)<br/>_475 = const false<br/>StorageDead(_197)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb222__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">222</td></tr><tr><td align="left" balign="left">StorageDead(_175)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb223__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">223</td></tr><tr><td align="left" balign="left">StorageDead(_144)<br/></td></tr><tr><td align="left">drop(_133)</td></tr></table>>];
    bb224__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">224</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/>_554 = discriminant(_155)<br/>StorageDead(_169)<br/>StorageDead(_167)<br/>StorageDead(_165)<br/>StorageDead(_163)<br/>StorageDead(_161)<br/>StorageDead(_159)<br/>_476 = const false<br/>StorageDead(_155)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb225__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">225</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb226__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">226</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/></td></tr><tr><td align="left">drop(_90)</td></tr></table>>];
    bb227__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">227</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>_556 = discriminant(_112)<br/>StorageDead(_126)<br/>StorageDead(_124)<br/>StorageDead(_122)<br/>StorageDead(_120)<br/>StorageDead(_118)<br/>StorageDead(_116)<br/>_477 = const false<br/>StorageDead(_112)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb228__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">228</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb229__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">229</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb230__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">230</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb231__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">231</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>StorageDead(_84)<br/></td></tr><tr><td align="left">drop(_71)</td></tr></table>>];
    bb232__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">232</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/></td></tr><tr><td align="left">drop(_70)</td></tr></table>>];
    bb233__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">233</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb234__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">234</td></tr><tr><td align="left">drop(_30)</td></tr></table>>];
    bb235__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">235</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/></td></tr><tr><td align="left">drop(_29)</td></tr></table>>];
    bb236__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">236</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/></td></tr><tr><td align="left">drop(_28)</td></tr></table>>];
    bb237__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">237</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb238__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">238</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">drop(_37)</td></tr></table>>];
    bb239__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">239</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_36)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb240__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">240</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb241__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">241</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb242__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">242</td></tr><tr><td align="left">return</td></tr></table>>];
    bb243__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">243 (cleanup)</td></tr><tr><td align="left">drop(_425)</td></tr></table>>];
    bb244__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">244 (cleanup)</td></tr><tr><td align="left">drop(_414)</td></tr></table>>];
    bb245__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">245 (cleanup)</td></tr><tr><td align="left">drop(_379)</td></tr></table>>];
    bb246__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">246 (cleanup)</td></tr><tr><td align="left">drop(_307)</td></tr></table>>];
    bb247__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">247 (cleanup)</td></tr><tr><td align="left">drop(_86)</td></tr></table>>];
    bb248__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">248 (cleanup)</td></tr><tr><td align="left">drop(_229)</td></tr></table>>];
    bb249__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">249 (cleanup)</td></tr><tr><td align="left">drop(_218)</td></tr></table>>];
    bb250__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">250 (cleanup)</td></tr><tr><td align="left">drop(_229)</td></tr></table>>];
    bb251__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">251 (cleanup)</td></tr><tr><td align="left">drop(_218)</td></tr></table>>];
    bb252__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">252 (cleanup)</td></tr><tr><td align="left">drop(_186)</td></tr></table>>];
    bb253__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">253 (cleanup)</td></tr><tr><td align="left">drop(_175)</td></tr></table>>];
    bb254__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">254 (cleanup)</td></tr><tr><td align="left">drop(_186)</td></tr></table>>];
    bb255__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">255 (cleanup)</td></tr><tr><td align="left">drop(_175)</td></tr></table>>];
    bb256__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">256 (cleanup)</td></tr><tr><td align="left">drop(_144)</td></tr></table>>];
    bb257__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">257 (cleanup)</td></tr><tr><td align="left">drop(_133)</td></tr></table>>];
    bb258__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">258 (cleanup)</td></tr><tr><td align="left">drop(_144)</td></tr></table>>];
    bb259__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">259 (cleanup)</td></tr><tr><td align="left">drop(_133)</td></tr></table>>];
    bb260__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">260 (cleanup)</td></tr><tr><td align="left">drop(_101)</td></tr></table>>];
    bb261__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">261 (cleanup)</td></tr><tr><td align="left">drop(_90)</td></tr></table>>];
    bb262__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">262 (cleanup)</td></tr><tr><td align="left">drop(_101)</td></tr></table>>];
    bb263__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">263 (cleanup)</td></tr><tr><td align="left">drop(_90)</td></tr></table>>];
    bb264__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">264 (cleanup)</td></tr><tr><td align="left">drop(_71)</td></tr></table>>];
    bb265__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">265 (cleanup)</td></tr><tr><td align="left">drop(_70)</td></tr></table>>];
    bb266__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">266 (cleanup)</td></tr><tr><td align="left">drop(_82)</td></tr></table>>];
    bb267__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">267 (cleanup)</td></tr><tr><td align="left">drop(_37)</td></tr></table>>];
    bb268__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">268 (cleanup)</td></tr><tr><td align="left">drop(_30)</td></tr></table>>];
    bb269__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">269 (cleanup)</td></tr><tr><td align="left">drop(_29)</td></tr></table>>];
    bb270__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">270 (cleanup)</td></tr><tr><td align="left">drop(_28)</td></tr></table>>];
    bb271__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">271 (cleanup)</td></tr><tr><td align="left">drop(_40)</td></tr></table>>];
    bb272__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">272 (cleanup)</td></tr><tr><td align="left">drop(_37)</td></tr></table>>];
    bb273__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">273 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb274__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">274</td></tr><tr><td align="left" balign="left">_536 = discriminant(_308)<br/>_473 = const false<br/>StorageDead(_308)<br/>StorageDead(_307)<br/>StorageDead(_305)<br/>StorageLive(_318)<br/>StorageLive(_319)<br/>StorageLive(_320)<br/>_320 = _303<br/>StorageLive(_321)<br/>_321 = _269<br/>_319 = Eq(move _320, move _321)<br/></td></tr><tr><td align="left">switchInt(move _319)</td></tr></table>>];
    bb275__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">275</td></tr><tr><td align="left" balign="left">_540 = discriminant(_380)<br/>_472 = const false<br/>StorageDead(_380)<br/>StorageDead(_379)<br/>StorageDead(_377)<br/>StorageDead(_374)<br/>StorageLive(_392)<br/>StorageLive(_393)<br/>_393 = _84<br/></td></tr><tr><td align="left">switchInt(move _393)</td></tr></table>>];
    bb276__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">276</td></tr><tr><td align="left">drop(_258)</td></tr></table>>];
    bb277__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">277 (cleanup)</td></tr><tr><td align="left" balign="left">_562 = discriminant(_426)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb278__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">278 (cleanup)</td></tr><tr><td align="left" balign="left">_563 = discriminant(_415)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb279__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">279 (cleanup)</td></tr><tr><td align="left" balign="left">_564 = discriminant(_380)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb280__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">280 (cleanup)</td></tr><tr><td align="left" balign="left">_565 = discriminant(_308)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb281__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">281 (cleanup)</td></tr><tr><td align="left">drop(_258)</td></tr></table>>];
    bb282__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">282 (cleanup)</td></tr><tr><td align="left">switchInt(_471)</td></tr></table>>];
    bb283__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">283 (cleanup)</td></tr><tr><td align="left" balign="left">_566 = discriminant(_259)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb284__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">284 (cleanup)</td></tr><tr><td align="left" balign="left">_567 = discriminant(_240)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb285__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">285 (cleanup)</td></tr><tr><td align="left" balign="left">_568 = discriminant(_230)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb286__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">286 (cleanup)</td></tr><tr><td align="left" balign="left">_569 = discriminant(_219)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb287__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">287 (cleanup)</td></tr><tr><td align="left" balign="left">_570 = discriminant(_197)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb288__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">288 (cleanup)</td></tr><tr><td align="left" balign="left">_571 = discriminant(_187)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb289__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">289 (cleanup)</td></tr><tr><td align="left" balign="left">_572 = discriminant(_176)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb290__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">290 (cleanup)</td></tr><tr><td align="left" balign="left">_573 = discriminant(_155)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb291__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">291 (cleanup)</td></tr><tr><td align="left" balign="left">_574 = discriminant(_145)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb292__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">292 (cleanup)</td></tr><tr><td align="left" balign="left">_575 = discriminant(_134)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb293__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">293 (cleanup)</td></tr><tr><td align="left" balign="left">_576 = discriminant(_112)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb294__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">294 (cleanup)</td></tr><tr><td align="left" balign="left">_577 = discriminant(_102)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb295__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">295 (cleanup)</td></tr><tr><td align="left" balign="left">_578 = discriminant(_91)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb296__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">296 (cleanup)</td></tr><tr><td align="left" balign="left">_579 = discriminant(_74)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb297__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">297 (cleanup)</td></tr><tr><td align="left" balign="left">_581 = discriminant(_32)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb298__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">298 (cleanup)</td></tr><tr><td align="left" balign="left">_582 = discriminant(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb299__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">299 (cleanup)</td></tr><tr><td align="left" balign="left">_583 = discriminant(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb300__0_11772 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">300</td></tr><tr><td align="left" balign="left">(*_585) = [const _, move _48]<br/>StorageDead(_48)<br/>_43 = move _47<br/>_42 = move _43 as std::boxed::Box&lt;[u16]&gt; (PointerCoercion(Unsize))<br/>StorageDead(_47)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">_41 = std::slice::&lt;impl [u16]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _42)</td></tr></table>>];
    bb0__0_11772 -> bb1__0_11772 [label="return"];
    bb1__0_11772 -> bb2__0_11772 [label="return"];
    bb1__0_11772 -> bb273__0_11772 [label="unwind"];
    bb2__0_11772 -> bb3__0_11772 [label="0"];
    bb2__0_11772 -> bb5__0_11772 [label="1"];
    bb2__0_11772 -> bb4__0_11772 [label="otherwise"];
    bb3__0_11772 -> bb7__0_11772 [label="return"];
    bb5__0_11772 -> bb6__0_11772 [label="return"];
    bb5__0_11772 -> bb299__0_11772 [label="unwind"];
    bb6__0_11772 -> bb242__0_11772 [label=""];
    bb7__0_11772 -> bb8__0_11772 [label="return"];
    bb7__0_11772 -> bb273__0_11772 [label="unwind"];
    bb8__0_11772 -> bb9__0_11772 [label="0"];
    bb8__0_11772 -> bb10__0_11772 [label="1"];
    bb8__0_11772 -> bb4__0_11772 [label="otherwise"];
    bb9__0_11772 -> bb12__0_11772 [label="return"];
    bb10__0_11772 -> bb11__0_11772 [label="return"];
    bb10__0_11772 -> bb298__0_11772 [label="unwind"];
    bb11__0_11772 -> bb241__0_11772 [label=""];
    bb12__0_11772 -> bb13__0_11772 [label="return"];
    bb13__0_11772 -> bb14__0_11772 [label="return"];
    bb14__0_11772 -> bb15__0_11772 [label="return"];
    bb14__0_11772 -> bb272__0_11772 [label="unwind"];
    bb15__0_11772 -> bb300__0_11772 [label="success"];
    bb16__0_11772 -> bb17__0_11772 [label="return"];
    bb16__0_11772 -> bb272__0_11772 [label="unwind"];
    bb17__0_11772 -> bb18__0_11772 [label="return"];
    bb17__0_11772 -> bb271__0_11772 [label="unwind"];
    bb18__0_11772 -> bb19__0_11772 [label="return"];
    bb18__0_11772 -> bb271__0_11772 [label="unwind"];
    bb19__0_11772 -> bb20__0_11772 [label="0"];
    bb19__0_11772 -> bb21__0_11772 [label="1"];
    bb19__0_11772 -> bb4__0_11772 [label="otherwise"];
    bb20__0_11772 -> bb23__0_11772 [label="return"];
    bb20__0_11772 -> bb267__0_11772 [label="unwind"];
    bb21__0_11772 -> bb22__0_11772 [label="return"];
    bb21__0_11772 -> bb297__0_11772 [label="unwind"];
    bb22__0_11772 -> bb238__0_11772 [label="return"];
    bb22__0_11772 -> bb272__0_11772 [label="unwind"];
    bb23__0_11772 -> bb24__0_11772 [label="return"];
    bb23__0_11772 -> bb268__0_11772 [label="unwind"];
    bb24__0_11772 -> bb25__0_11772 [label="return"];
    bb24__0_11772 -> bb268__0_11772 [label="unwind"];
    bb25__0_11772 -> bb30__0_11772 [label="0"];
    bb25__0_11772 -> bb26__0_11772 [label="otherwise"];
    bb26__0_11772 -> bb27__0_11772 [label="return"];
    bb26__0_11772 -> bb268__0_11772 [label="unwind"];
    bb27__0_11772 -> bb28__0_11772 [label="return"];
    bb27__0_11772 -> bb268__0_11772 [label="unwind"];
    bb28__0_11772 -> bb29__0_11772 [label="return"];
    bb28__0_11772 -> bb268__0_11772 [label="unwind"];
    bb29__0_11772 -> bb234__0_11772 [label=""];
    bb30__0_11772 -> bb32__0_11772 [label="1"];
    bb30__0_11772 -> bb31__0_11772 [label="otherwise"];
    bb31__0_11772 -> bb38__0_11772 [label="return"];
    bb31__0_11772 -> bb268__0_11772 [label="unwind"];
    bb32__0_11772 -> bb33__0_11772 [label="return"];
    bb32__0_11772 -> bb268__0_11772 [label="unwind"];
    bb33__0_11772 -> bb34__0_11772 [label="return"];
    bb33__0_11772 -> bb268__0_11772 [label="unwind"];
    bb34__0_11772 -> bb35__0_11772 [label="0"];
    bb34__0_11772 -> bb36__0_11772 [label="1"];
    bb34__0_11772 -> bb4__0_11772 [label="otherwise"];
    bb35__0_11772 -> bb40__0_11772 [label=""];
    bb36__0_11772 -> bb37__0_11772 [label="return"];
    bb36__0_11772 -> bb296__0_11772 [label="unwind"];
    bb37__0_11772 -> bb234__0_11772 [label=""];
    bb38__0_11772 -> bb39__0_11772 [label="return"];
    bb38__0_11772 -> bb266__0_11772 [label="unwind"];
    bb39__0_11772 -> bb40__0_11772 [label=""];
    bb40__0_11772 -> bb41__0_11772 [label="return"];
    bb40__0_11772 -> bb264__0_11772 [label="unwind"];
    bb41__0_11772 -> bb43__0_11772 [label="0"];
    bb41__0_11772 -> bb42__0_11772 [label="1"];
    bb41__0_11772 -> bb65__0_11772 [label="2"];
    bb41__0_11772 -> bb87__0_11772 [label="3"];
    bb41__0_11772 -> bb4__0_11772 [label="otherwise"];
    bb42__0_11772 -> bb109__0_11772 [label="return"];
    bb42__0_11772 -> bb264__0_11772 [label="unwind"];
    bb43__0_11772 -> bb44__0_11772 [label="return"];
    bb43__0_11772 -> bb264__0_11772 [label="unwind"];
    bb44__0_11772 -> bb45__0_11772 [label="return"];
    bb44__0_11772 -> bb264__0_11772 [label="unwind"];
    bb45__0_11772 -> bb46__0_11772 [label="0"];
    bb45__0_11772 -> bb47__0_11772 [label="1"];
    bb45__0_11772 -> bb4__0_11772 [label="otherwise"];
    bb46__0_11772 -> bb49__0_11772 [label="return"];
    bb46__0_11772 -> bb263__0_11772 [label="unwind"];
    bb47__0_11772 -> bb48__0_11772 [label="return"];
    bb47__0_11772 -> bb295__0_11772 [label="unwind"];
    bb48__0_11772 -> bb228__0_11772 [label=""];
    bb49__0_11772 -> bb50__0_11772 [label="return"];
    bb49__0_11772 -> bb263__0_11772 [label="unwind"];
    bb50__0_11772 -> bb51__0_11772 [label="0"];
    bb50__0_11772 -> bb52__0_11772 [label="1"];
    bb50__0_11772 -> bb4__0_11772 [label="otherwise"];
    bb51__0_11772 -> bb54__0_11772 [label="return"];
    bb51__0_11772 -> bb262__0_11772 [label="unwind"];
    bb52__0_11772 -> bb53__0_11772 [label="return"];
    bb52__0_11772 -> bb294__0_11772 [label="unwind"];
    bb53__0_11772 -> bb228__0_11772 [label="return"];
    bb53__0_11772 -> bb264__0_11772 [label="unwind"];
    bb54__0_11772 -> bb55__0_11772 [label="return"];
    bb54__0_11772 -> bb262__0_11772 [label="unwind"];
    bb55__0_11772 -> bb56__0_11772 [label="return"];
    bb55__0_11772 -> bb262__0_11772 [label="unwind"];
    bb56__0_11772 -> bb57__0_11772 [label="return"];
    bb56__0_11772 -> bb262__0_11772 [label="unwind"];
    bb57__0_11772 -> bb58__0_11772 [label="return"];
    bb57__0_11772 -> bb262__0_11772 [label="unwind"];
    bb58__0_11772 -> bb59__0_11772 [label="0"];
    bb58__0_11772 -> bb60__0_11772 [label="1"];
    bb58__0_11772 -> bb4__0_11772 [label="otherwise"];
    bb59__0_11772 -> bb62__0_11772 [label="return"];
    bb59__0_11772 -> bb260__0_11772 [label="unwind"];
    bb60__0_11772 -> bb61__0_11772 [label="return"];
    bb60__0_11772 -> bb260__0_11772 [label="unwind"];
    bb61__0_11772 -> bb226__0_11772 [label="return"];
    bb61__0_11772 -> bb261__0_11772 [label="unwind"];
    bb62__0_11772 -> bb63__0_11772 [label="return"];
    bb62__0_11772 -> bb261__0_11772 [label="unwind"];
    bb63__0_11772 -> bb64__0_11772 [label="return"];
    bb63__0_11772 -> bb293__0_11772 [label="unwind"];
    bb64__0_11772 -> bb129__0_11772 [label=""];
    bb65__0_11772 -> bb66__0_11772 [label="return"];
    bb65__0_11772 -> bb264__0_11772 [label="unwind"];
    bb66__0_11772 -> bb67__0_11772 [label="return"];
    bb66__0_11772 -> bb264__0_11772 [label="unwind"];
    bb67__0_11772 -> bb68__0_11772 [label="0"];
    bb67__0_11772 -> bb69__0_11772 [label="1"];
    bb67__0_11772 -> bb4__0_11772 [label="otherwise"];
    bb68__0_11772 -> bb71__0_11772 [label="return"];
    bb68__0_11772 -> bb259__0_11772 [label="unwind"];
    bb69__0_11772 -> bb70__0_11772 [label="return"];
    bb69__0_11772 -> bb292__0_11772 [label="unwind"];
    bb70__0_11772 -> bb225__0_11772 [label=""];
    bb71__0_11772 -> bb72__0_11772 [label="return"];
    bb71__0_11772 -> bb259__0_11772 [label="unwind"];
    bb72__0_11772 -> bb73__0_11772 [label="0"];
    bb72__0_11772 -> bb74__0_11772 [label="1"];
    bb72__0_11772 -> bb4__0_11772 [label="otherwise"];
    bb73__0_11772 -> bb76__0_11772 [label="return"];
    bb73__0_11772 -> bb258__0_11772 [label="unwind"];
    bb74__0_11772 -> bb75__0_11772 [label="return"];
    bb74__0_11772 -> bb291__0_11772 [label="unwind"];
    bb75__0_11772 -> bb225__0_11772 [label="return"];
    bb75__0_11772 -> bb264__0_11772 [label="unwind"];
    bb76__0_11772 -> bb77__0_11772 [label="return"];
    bb76__0_11772 -> bb258__0_11772 [label="unwind"];
    bb77__0_11772 -> bb78__0_11772 [label="return"];
    bb77__0_11772 -> bb258__0_11772 [label="unwind"];
    bb78__0_11772 -> bb79__0_11772 [label="return"];
    bb78__0_11772 -> bb258__0_11772 [label="unwind"];
    bb79__0_11772 -> bb80__0_11772 [label="return"];
    bb79__0_11772 -> bb258__0_11772 [label="unwind"];
    bb80__0_11772 -> bb81__0_11772 [label="0"];
    bb80__0_11772 -> bb82__0_11772 [label="1"];
    bb80__0_11772 -> bb4__0_11772 [label="otherwise"];
    bb81__0_11772 -> bb84__0_11772 [label="return"];
    bb81__0_11772 -> bb256__0_11772 [label="unwind"];
    bb82__0_11772 -> bb83__0_11772 [label="return"];
    bb82__0_11772 -> bb256__0_11772 [label="unwind"];
    bb83__0_11772 -> bb223__0_11772 [label="return"];
    bb83__0_11772 -> bb257__0_11772 [label="unwind"];
    bb84__0_11772 -> bb85__0_11772 [label="return"];
    bb84__0_11772 -> bb257__0_11772 [label="unwind"];
    bb85__0_11772 -> bb86__0_11772 [label="return"];
    bb85__0_11772 -> bb290__0_11772 [label="unwind"];
    bb86__0_11772 -> bb129__0_11772 [label=""];
    bb87__0_11772 -> bb88__0_11772 [label="return"];
    bb87__0_11772 -> bb264__0_11772 [label="unwind"];
    bb88__0_11772 -> bb89__0_11772 [label="return"];
    bb88__0_11772 -> bb264__0_11772 [label="unwind"];
    bb89__0_11772 -> bb90__0_11772 [label="0"];
    bb89__0_11772 -> bb91__0_11772 [label="1"];
    bb89__0_11772 -> bb4__0_11772 [label="otherwise"];
    bb90__0_11772 -> bb93__0_11772 [label="return"];
    bb90__0_11772 -> bb255__0_11772 [label="unwind"];
    bb91__0_11772 -> bb92__0_11772 [label="return"];
    bb91__0_11772 -> bb289__0_11772 [label="unwind"];
    bb92__0_11772 -> bb222__0_11772 [label=""];
    bb93__0_11772 -> bb94__0_11772 [label="return"];
    bb93__0_11772 -> bb255__0_11772 [label="unwind"];
    bb94__0_11772 -> bb95__0_11772 [label="0"];
    bb94__0_11772 -> bb96__0_11772 [label="1"];
    bb94__0_11772 -> bb4__0_11772 [label="otherwise"];
    bb95__0_11772 -> bb98__0_11772 [label="return"];
    bb95__0_11772 -> bb254__0_11772 [label="unwind"];
    bb96__0_11772 -> bb97__0_11772 [label="return"];
    bb96__0_11772 -> bb288__0_11772 [label="unwind"];
    bb97__0_11772 -> bb222__0_11772 [label="return"];
    bb97__0_11772 -> bb264__0_11772 [label="unwind"];
    bb98__0_11772 -> bb99__0_11772 [label="return"];
    bb98__0_11772 -> bb254__0_11772 [label="unwind"];
    bb99__0_11772 -> bb100__0_11772 [label="return"];
    bb99__0_11772 -> bb254__0_11772 [label="unwind"];
    bb100__0_11772 -> bb101__0_11772 [label="return"];
    bb100__0_11772 -> bb254__0_11772 [label="unwind"];
    bb101__0_11772 -> bb102__0_11772 [label="return"];
    bb101__0_11772 -> bb254__0_11772 [label="unwind"];
    bb102__0_11772 -> bb103__0_11772 [label="0"];
    bb102__0_11772 -> bb104__0_11772 [label="1"];
    bb102__0_11772 -> bb4__0_11772 [label="otherwise"];
    bb103__0_11772 -> bb106__0_11772 [label="return"];
    bb103__0_11772 -> bb252__0_11772 [label="unwind"];
    bb104__0_11772 -> bb105__0_11772 [label="return"];
    bb104__0_11772 -> bb252__0_11772 [label="unwind"];
    bb105__0_11772 -> bb220__0_11772 [label="return"];
    bb105__0_11772 -> bb253__0_11772 [label="unwind"];
    bb106__0_11772 -> bb107__0_11772 [label="return"];
    bb106__0_11772 -> bb253__0_11772 [label="unwind"];
    bb107__0_11772 -> bb108__0_11772 [label="return"];
    bb107__0_11772 -> bb287__0_11772 [label="unwind"];
    bb108__0_11772 -> bb129__0_11772 [label=""];
    bb109__0_11772 -> bb110__0_11772 [label="return"];
    bb109__0_11772 -> bb264__0_11772 [label="unwind"];
    bb110__0_11772 -> bb111__0_11772 [label="0"];
    bb110__0_11772 -> bb112__0_11772 [label="1"];
    bb110__0_11772 -> bb4__0_11772 [label="otherwise"];
    bb111__0_11772 -> bb114__0_11772 [label="return"];
    bb111__0_11772 -> bb251__0_11772 [label="unwind"];
    bb112__0_11772 -> bb113__0_11772 [label="return"];
    bb112__0_11772 -> bb286__0_11772 [label="unwind"];
    bb113__0_11772 -> bb219__0_11772 [label=""];
    bb114__0_11772 -> bb115__0_11772 [label="return"];
    bb114__0_11772 -> bb251__0_11772 [label="unwind"];
    bb115__0_11772 -> bb116__0_11772 [label="0"];
    bb115__0_11772 -> bb117__0_11772 [label="1"];
    bb115__0_11772 -> bb4__0_11772 [label="otherwise"];
    bb116__0_11772 -> bb119__0_11772 [label="return"];
    bb116__0_11772 -> bb250__0_11772 [label="unwind"];
    bb117__0_11772 -> bb118__0_11772 [label="return"];
    bb117__0_11772 -> bb285__0_11772 [label="unwind"];
    bb118__0_11772 -> bb219__0_11772 [label="return"];
    bb118__0_11772 -> bb264__0_11772 [label="unwind"];
    bb119__0_11772 -> bb120__0_11772 [label="return"];
    bb119__0_11772 -> bb250__0_11772 [label="unwind"];
    bb120__0_11772 -> bb121__0_11772 [label="return"];
    bb120__0_11772 -> bb250__0_11772 [label="unwind"];
    bb121__0_11772 -> bb122__0_11772 [label="return"];
    bb121__0_11772 -> bb250__0_11772 [label="unwind"];
    bb122__0_11772 -> bb123__0_11772 [label="0"];
    bb122__0_11772 -> bb124__0_11772 [label="1"];
    bb122__0_11772 -> bb4__0_11772 [label="otherwise"];
    bb123__0_11772 -> bb126__0_11772 [label="return"];
    bb123__0_11772 -> bb248__0_11772 [label="unwind"];
    bb124__0_11772 -> bb125__0_11772 [label="return"];
    bb124__0_11772 -> bb248__0_11772 [label="unwind"];
    bb125__0_11772 -> bb217__0_11772 [label="return"];
    bb125__0_11772 -> bb249__0_11772 [label="unwind"];
    bb126__0_11772 -> bb127__0_11772 [label="return"];
    bb126__0_11772 -> bb249__0_11772 [label="unwind"];
    bb127__0_11772 -> bb128__0_11772 [label="return"];
    bb127__0_11772 -> bb284__0_11772 [label="unwind"];
    bb128__0_11772 -> bb129__0_11772 [label=""];
    bb129__0_11772 -> bb130__0_11772 [label="return"];
    bb129__0_11772 -> bb247__0_11772 [label="unwind"];
    bb130__0_11772 -> bb131__0_11772 [label="return"];
    bb130__0_11772 -> bb247__0_11772 [label="unwind"];
    bb131__0_11772 -> bb132__0_11772 [label="return"];
    bb131__0_11772 -> bb247__0_11772 [label="unwind"];
    bb132__0_11772 -> bb133__0_11772 [label="return"];
    bb132__0_11772 -> bb247__0_11772 [label="unwind"];
    bb133__0_11772 -> bb134__0_11772 [label="0"];
    bb133__0_11772 -> bb135__0_11772 [label="1"];
    bb133__0_11772 -> bb4__0_11772 [label="otherwise"];
    bb134__0_11772 -> bb137__0_11772 [label="return"];
    bb134__0_11772 -> bb282__0_11772 [label="unwind"];
    bb135__0_11772 -> bb136__0_11772 [label="return"];
    bb135__0_11772 -> bb283__0_11772 [label="unwind"];
    bb136__0_11772 -> bb216__0_11772 [label=""];
    bb137__0_11772 -> bb138__0_11772 [label="return"];
    bb137__0_11772 -> bb282__0_11772 [label="unwind"];
    bb138__0_11772 -> bb139__0_11772 [label="return"];
    bb138__0_11772 -> bb282__0_11772 [label="unwind"];
    bb139__0_11772 -> bb140__0_11772 [label="return"];
    bb139__0_11772 -> bb282__0_11772 [label="unwind"];
    bb140__0_11772 -> bb141__0_11772 [label="return"];
    bb140__0_11772 -> bb282__0_11772 [label="unwind"];
    bb141__0_11772 -> bb142__0_11772 [label="return"];
    bb141__0_11772 -> bb282__0_11772 [label="unwind"];
    bb142__0_11772 -> bb143__0_11772 [label="return"];
    bb142__0_11772 -> bb282__0_11772 [label="unwind"];
    bb143__0_11772 -> bb144__0_11772 [label="0"];
    bb143__0_11772 -> bb145__0_11772 [label="1"];
    bb143__0_11772 -> bb4__0_11772 [label="otherwise"];
    bb144__0_11772 -> bb147__0_11772 [label="return"];
    bb144__0_11772 -> bb282__0_11772 [label="unwind"];
    bb145__0_11772 -> bb146__0_11772 [label="return"];
    bb145__0_11772 -> bb282__0_11772 [label="unwind"];
    bb146__0_11772 -> bb215__0_11772 [label=""];
    bb147__0_11772 -> bb148__0_11772 [label="return"];
    bb147__0_11772 -> bb282__0_11772 [label="unwind"];
    bb148__0_11772 -> bb149__0_11772 [label="return"];
    bb148__0_11772 -> bb282__0_11772 [label="unwind"];
    bb149__0_11772 -> bb150__0_11772 [label="return"];
    bb149__0_11772 -> bb282__0_11772 [label="unwind"];
    bb150__0_11772 -> bb151__0_11772 [label="0"];
    bb150__0_11772 -> bb152__0_11772 [label="1"];
    bb150__0_11772 -> bb4__0_11772 [label="otherwise"];
    bb151__0_11772 -> bb154__0_11772 [label="return"];
    bb151__0_11772 -> bb246__0_11772 [label="unwind"];
    bb152__0_11772 -> bb153__0_11772 [label="return"];
    bb152__0_11772 -> bb280__0_11772 [label="unwind"];
    bb153__0_11772 -> bb214__0_11772 [label=""];
    bb154__0_11772 -> bb155__0_11772 [label="return"];
    bb154__0_11772 -> bb246__0_11772 [label="unwind"];
    bb155__0_11772 -> bb274__0_11772 [label="return"];
    bb155__0_11772 -> bb280__0_11772 [label="unwind"];
    bb156__0_11772 -> bb157__0_11772 [label="return"];
    bb156__0_11772 -> bb282__0_11772 [label="unwind"];
    bb157__0_11772 -> bb158__0_11772 [label="return"];
    bb157__0_11772 -> bb282__0_11772 [label="unwind"];
    bb158__0_11772 -> bb159__0_11772 [label="return"];
    bb158__0_11772 -> bb282__0_11772 [label="unwind"];
    bb159__0_11772 -> bb214__0_11772 [label=""];
    bb160__0_11772 -> bb161__0_11772 [label="return"];
    bb160__0_11772 -> bb282__0_11772 [label="unwind"];
    bb161__0_11772 -> bb162__0_11772 [label="return"];
    bb161__0_11772 -> bb282__0_11772 [label="unwind"];
    bb162__0_11772 -> bb163__0_11772 [label="return"];
    bb162__0_11772 -> bb282__0_11772 [label="unwind"];
    bb163__0_11772 -> bb164__0_11772 [label="return"];
    bb163__0_11772 -> bb282__0_11772 [label="unwind"];
    bb164__0_11772 -> bb165__0_11772 [label="return"];
    bb164__0_11772 -> bb282__0_11772 [label="unwind"];
    bb165__0_11772 -> bb166__0_11772 [label="return"];
    bb165__0_11772 -> bb282__0_11772 [label="unwind"];
    bb166__0_11772 -> bb167__0_11772 [label="0"];
    bb166__0_11772 -> bb168__0_11772 [label="1"];
    bb166__0_11772 -> bb4__0_11772 [label="otherwise"];
    bb167__0_11772 -> bb170__0_11772 [label="return"];
    bb167__0_11772 -> bb282__0_11772 [label="unwind"];
    bb168__0_11772 -> bb169__0_11772 [label="return"];
    bb168__0_11772 -> bb282__0_11772 [label="unwind"];
    bb169__0_11772 -> bb214__0_11772 [label=""];
    bb170__0_11772 -> bb171__0_11772 [label="return"];
    bb170__0_11772 -> bb282__0_11772 [label="unwind"];
    bb171__0_11772 -> bb172__0_11772 [label="return"];
    bb171__0_11772 -> bb282__0_11772 [label="unwind"];
    bb172__0_11772 -> bb173__0_11772 [label="0"];
    bb172__0_11772 -> bb174__0_11772 [label="1"];
    bb172__0_11772 -> bb4__0_11772 [label="otherwise"];
    bb173__0_11772 -> bb176__0_11772 [label="return"];
    bb173__0_11772 -> bb245__0_11772 [label="unwind"];
    bb174__0_11772 -> bb175__0_11772 [label="return"];
    bb174__0_11772 -> bb279__0_11772 [label="unwind"];
    bb175__0_11772 -> bb213__0_11772 [label=""];
    bb176__0_11772 -> bb177__0_11772 [label="return"];
    bb176__0_11772 -> bb245__0_11772 [label="unwind"];
    bb177__0_11772 -> bb178__0_11772 [label="return"];
    bb177__0_11772 -> bb245__0_11772 [label="unwind"];
    bb178__0_11772 -> bb275__0_11772 [label="return"];
    bb178__0_11772 -> bb279__0_11772 [label="unwind"];
    bb179__0_11772 -> bb186__0_11772 [label="0"];
    bb179__0_11772 -> bb180__0_11772 [label="otherwise"];
    bb180__0_11772 -> bb181__0_11772 [label="return"];
    bb180__0_11772 -> bb282__0_11772 [label="unwind"];
    bb181__0_11772 -> bb182__0_11772 [label="return"];
    bb181__0_11772 -> bb282__0_11772 [label="unwind"];
    bb182__0_11772 -> bb183__0_11772 [label="0"];
    bb182__0_11772 -> bb184__0_11772 [label="1"];
    bb182__0_11772 -> bb4__0_11772 [label="otherwise"];
    bb183__0_11772 -> bb187__0_11772 [label=""];
    bb184__0_11772 -> bb185__0_11772 [label="return"];
    bb184__0_11772 -> bb282__0_11772 [label="unwind"];
    bb185__0_11772 -> bb213__0_11772 [label=""];
    bb186__0_11772 -> bb187__0_11772 [label=""];
    bb187__0_11772 -> bb188__0_11772 [label="return"];
    bb187__0_11772 -> bb282__0_11772 [label="unwind"];
    bb188__0_11772 -> bb189__0_11772 [label="return"];
    bb188__0_11772 -> bb282__0_11772 [label="unwind"];
    bb189__0_11772 -> bb190__0_11772 [label="0"];
    bb189__0_11772 -> bb191__0_11772 [label="1"];
    bb189__0_11772 -> bb4__0_11772 [label="otherwise"];
    bb190__0_11772 -> bb193__0_11772 [label="return"];
    bb190__0_11772 -> bb244__0_11772 [label="unwind"];
    bb191__0_11772 -> bb192__0_11772 [label="return"];
    bb191__0_11772 -> bb278__0_11772 [label="unwind"];
    bb192__0_11772 -> bb212__0_11772 [label=""];
    bb193__0_11772 -> bb194__0_11772 [label="return"];
    bb193__0_11772 -> bb244__0_11772 [label="unwind"];
    bb194__0_11772 -> bb195__0_11772 [label="0"];
    bb194__0_11772 -> bb196__0_11772 [label="1"];
    bb194__0_11772 -> bb4__0_11772 [label="otherwise"];
    bb195__0_11772 -> bb198__0_11772 [label="return"];
    bb195__0_11772 -> bb243__0_11772 [label="unwind"];
    bb196__0_11772 -> bb197__0_11772 [label="return"];
    bb196__0_11772 -> bb277__0_11772 [label="unwind"];
    bb197__0_11772 -> bb211__0_11772 [label=""];
    bb198__0_11772 -> bb199__0_11772 [label="return"];
    bb198__0_11772 -> bb243__0_11772 [label="unwind"];
    bb199__0_11772 -> bb200__0_11772 [label="0"];
    bb199__0_11772 -> bb201__0_11772 [label="1"];
    bb199__0_11772 -> bb4__0_11772 [label="otherwise"];
    bb200__0_11772 -> bb203__0_11772 [label="return"];
    bb200__0_11772 -> bb244__0_11772 [label="unwind"];
    bb201__0_11772 -> bb202__0_11772 [label="return"];
    bb201__0_11772 -> bb243__0_11772 [label="unwind"];
    bb202__0_11772 -> bb211__0_11772 [label="return"];
    bb202__0_11772 -> bb244__0_11772 [label="unwind"];
    bb203__0_11772 -> bb204__0_11772 [label="return"];
    bb203__0_11772 -> bb282__0_11772 [label="unwind"];
    bb204__0_11772 -> bb205__0_11772 [label="return"];
    bb204__0_11772 -> bb264__0_11772 [label="unwind"];
    bb205__0_11772 -> bb206__0_11772 [label="return"];
    bb205__0_11772 -> bb265__0_11772 [label="unwind"];
    bb206__0_11772 -> bb207__0_11772 [label="return"];
    bb206__0_11772 -> bb268__0_11772 [label="unwind"];
    bb207__0_11772 -> bb208__0_11772 [label="return"];
    bb207__0_11772 -> bb269__0_11772 [label="unwind"];
    bb208__0_11772 -> bb209__0_11772 [label="return"];
    bb208__0_11772 -> bb270__0_11772 [label="unwind"];
    bb209__0_11772 -> bb210__0_11772 [label="return"];
    bb209__0_11772 -> bb273__0_11772 [label="unwind"];
    bb210__0_11772 -> bb242__0_11772 [label=""];
    bb211__0_11772 -> bb212__0_11772 [label="return"];
    bb211__0_11772 -> bb282__0_11772 [label="unwind"];
    bb212__0_11772 -> bb213__0_11772 [label=""];
    bb213__0_11772 -> bb214__0_11772 [label=""];
    bb214__0_11772 -> bb215__0_11772 [label=""];
    bb215__0_11772 -> bb216__0_11772 [label="0"];
    bb215__0_11772 -> bb276__0_11772 [label="otherwise"];
    bb216__0_11772 -> bb231__0_11772 [label="return"];
    bb216__0_11772 -> bb264__0_11772 [label="unwind"];
    bb217__0_11772 -> bb218__0_11772 [label="return"];
    bb217__0_11772 -> bb284__0_11772 [label="unwind"];
    bb218__0_11772 -> bb230__0_11772 [label=""];
    bb219__0_11772 -> bb230__0_11772 [label=""];
    bb220__0_11772 -> bb221__0_11772 [label="return"];
    bb220__0_11772 -> bb287__0_11772 [label="unwind"];
    bb221__0_11772 -> bb230__0_11772 [label=""];
    bb222__0_11772 -> bb230__0_11772 [label=""];
    bb223__0_11772 -> bb224__0_11772 [label="return"];
    bb223__0_11772 -> bb290__0_11772 [label="unwind"];
    bb224__0_11772 -> bb230__0_11772 [label=""];
    bb225__0_11772 -> bb230__0_11772 [label=""];
    bb226__0_11772 -> bb227__0_11772 [label="return"];
    bb226__0_11772 -> bb293__0_11772 [label="unwind"];
    bb227__0_11772 -> bb229__0_11772 [label=""];
    bb228__0_11772 -> bb229__0_11772 [label=""];
    bb229__0_11772 -> bb230__0_11772 [label=""];
    bb230__0_11772 -> bb231__0_11772 [label=""];
    bb231__0_11772 -> bb232__0_11772 [label="return"];
    bb231__0_11772 -> bb265__0_11772 [label="unwind"];
    bb232__0_11772 -> bb233__0_11772 [label="return"];
    bb232__0_11772 -> bb268__0_11772 [label="unwind"];
    bb233__0_11772 -> bb234__0_11772 [label=""];
    bb234__0_11772 -> bb235__0_11772 [label="return"];
    bb234__0_11772 -> bb269__0_11772 [label="unwind"];
    bb235__0_11772 -> bb236__0_11772 [label="return"];
    bb235__0_11772 -> bb270__0_11772 [label="unwind"];
    bb236__0_11772 -> bb237__0_11772 [label="return"];
    bb236__0_11772 -> bb273__0_11772 [label="unwind"];
    bb237__0_11772 -> bb240__0_11772 [label=""];
    bb238__0_11772 -> bb239__0_11772 [label="return"];
    bb238__0_11772 -> bb273__0_11772 [label="unwind"];
    bb239__0_11772 -> bb240__0_11772 [label=""];
    bb240__0_11772 -> bb241__0_11772 [label=""];
    bb241__0_11772 -> bb242__0_11772 [label=""];
    bb243__0_11772 -> bb244__0_11772 [label="return"];
    bb244__0_11772 -> bb282__0_11772 [label="return"];
    bb245__0_11772 -> bb279__0_11772 [label="return"];
    bb246__0_11772 -> bb280__0_11772 [label="return"];
    bb247__0_11772 -> bb264__0_11772 [label="return"];
    bb248__0_11772 -> bb249__0_11772 [label="return"];
    bb249__0_11772 -> bb284__0_11772 [label="return"];
    bb250__0_11772 -> bb251__0_11772 [label="return"];
    bb251__0_11772 -> bb264__0_11772 [label="return"];
    bb252__0_11772 -> bb253__0_11772 [label="return"];
    bb253__0_11772 -> bb287__0_11772 [label="return"];
    bb254__0_11772 -> bb255__0_11772 [label="return"];
    bb255__0_11772 -> bb264__0_11772 [label="return"];
    bb256__0_11772 -> bb257__0_11772 [label="return"];
    bb257__0_11772 -> bb290__0_11772 [label="return"];
    bb258__0_11772 -> bb259__0_11772 [label="return"];
    bb259__0_11772 -> bb264__0_11772 [label="return"];
    bb260__0_11772 -> bb261__0_11772 [label="return"];
    bb261__0_11772 -> bb293__0_11772 [label="return"];
    bb262__0_11772 -> bb263__0_11772 [label="return"];
    bb263__0_11772 -> bb264__0_11772 [label="return"];
    bb264__0_11772 -> bb265__0_11772 [label="return"];
    bb265__0_11772 -> bb268__0_11772 [label="return"];
    bb266__0_11772 -> bb268__0_11772 [label="return"];
    bb267__0_11772 -> bb268__0_11772 [label="return"];
    bb268__0_11772 -> bb269__0_11772 [label="return"];
    bb269__0_11772 -> bb270__0_11772 [label="return"];
    bb270__0_11772 -> bb273__0_11772 [label="return"];
    bb271__0_11772 -> bb272__0_11772 [label="return"];
    bb272__0_11772 -> bb273__0_11772 [label="return"];
    bb274__0_11772 -> bb160__0_11772 [label="0"];
    bb274__0_11772 -> bb156__0_11772 [label="otherwise"];
    bb275__0_11772 -> bb186__0_11772 [label="0"];
    bb275__0_11772 -> bb179__0_11772 [label="otherwise"];
    bb276__0_11772 -> bb216__0_11772 [label="return"];
    bb276__0_11772 -> bb247__0_11772 [label="unwind"];
    bb277__0_11772 -> bb244__0_11772 [label=""];
    bb278__0_11772 -> bb282__0_11772 [label=""];
    bb279__0_11772 -> bb282__0_11772 [label=""];
    bb280__0_11772 -> bb282__0_11772 [label=""];
    bb281__0_11772 -> bb247__0_11772 [label="return"];
    bb282__0_11772 -> bb247__0_11772 [label="0"];
    bb282__0_11772 -> bb281__0_11772 [label="otherwise"];
    bb283__0_11772 -> bb247__0_11772 [label=""];
    bb284__0_11772 -> bb264__0_11772 [label=""];
    bb285__0_11772 -> bb251__0_11772 [label=""];
    bb286__0_11772 -> bb264__0_11772 [label=""];
    bb287__0_11772 -> bb264__0_11772 [label=""];
    bb288__0_11772 -> bb255__0_11772 [label=""];
    bb289__0_11772 -> bb264__0_11772 [label=""];
    bb290__0_11772 -> bb264__0_11772 [label=""];
    bb291__0_11772 -> bb259__0_11772 [label=""];
    bb292__0_11772 -> bb264__0_11772 [label=""];
    bb293__0_11772 -> bb264__0_11772 [label=""];
    bb294__0_11772 -> bb263__0_11772 [label=""];
    bb295__0_11772 -> bb264__0_11772 [label=""];
    bb296__0_11772 -> bb268__0_11772 [label=""];
    bb297__0_11772 -> bb271__0_11772 [label=""];
    bb298__0_11772 -> bb273__0_11772 [label=""];
    bb299__0_11772 -> bb273__0_11772 [label=""];
    bb300__0_11772 -> bb16__0_11772 [label="return"];
    bb300__0_11772 -> bb272__0_11772 [label="unwind"];
}
