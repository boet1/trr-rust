digraph Mir_0_2664 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_perp_liability_value(_1: i128, _2: i64, _3: state::perp_market::ContractType) -&gt; std::result::Result&lt;u128, error::ErrorCode&gt;<br align="left"/>let _4: ();<br align="left"/>let mut _5: bool;<br align="left"/>let mut _6: &amp;ReErased state::perp_market::ContractType;<br align="left"/>let mut _7: &amp;ReErased state::perp_market::ContractType;<br align="left"/>let _8: state::perp_market::ContractType;<br align="left"/>let mut _9: !;<br align="left"/>let mut _10: i128;<br align="left"/>let mut _11: i64;<br align="left"/>let _12: u128;<br align="left"/>let mut _13: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _14: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _15: i64;<br align="left"/>let mut _16: i64;<br align="left"/>let mut _17: isize;<br align="left"/>let _18: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _19: !;<br align="left"/>let mut _20: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _21: u128;<br align="left"/>let _22: u128;<br align="left"/>let mut _23: bool;<br align="left"/>let mut _24: i128;<br align="left"/>let mut _25: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _26: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _27: u128;<br align="left"/>let mut _28: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _29: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _30: u128;<br align="left"/>let mut _31: i128;<br align="left"/>let mut _32: u128;<br align="left"/>let mut _33: u128;<br align="left"/>let mut _34: isize;<br align="left"/>let _35: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _36: !;<br align="left"/>let mut _37: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _38: u128;<br align="left"/>let mut _39: isize;<br align="left"/>let _40: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _41: !;<br align="left"/>let mut _42: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _43: u128;<br align="left"/>let mut _44: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _45: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _46: u128;<br align="left"/>let mut _47: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _48: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _49: u128;<br align="left"/>let mut _50: i128;<br align="left"/>let mut _51: u128;<br align="left"/>let mut _52: isize;<br align="left"/>let _53: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _54: !;<br align="left"/>let mut _55: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _56: u128;<br align="left"/>let mut _57: isize;<br align="left"/>let _58: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _59: !;<br align="left"/>let mut _60: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _61: u128;<br align="left"/>let mut _62: u128;<br align="left"/>let mut _63: &amp;ReErased state::perp_market::ContractType;<br align="left"/>debug base_asset_amount =&gt; _1;<br align="left"/>debug oracle_price =&gt; _2;<br align="left"/>debug contract_type =&gt; _3;<br align="left"/>debug price_u128 =&gt; _12;<br align="left"/>debug residual =&gt; _18;<br align="left"/>debug val =&gt; _21;<br align="left"/>debug liability_value =&gt; _22;<br align="left"/>debug residual =&gt; _35;<br align="left"/>debug val =&gt; _38;<br align="left"/>debug residual =&gt; _40;<br align="left"/>debug val =&gt; _43;<br align="left"/>debug residual =&gt; _53;<br align="left"/>debug val =&gt; _56;<br align="left"/>debug residual =&gt; _58;<br align="left"/>debug val =&gt; _61;<br align="left"/>>;
    bb0__0_2664 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = &amp;_3<br/>StorageLive(_7)<br/>_63 = const _<br/>_7 = &amp;(*_63)<br/></td></tr><tr><td align="left">_5 = &lt;ContractType as PartialEq&gt;::ne(move _6, move _7)</td></tr></table>>];
    bb1__0_2664 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">switchInt(move _5)</td></tr></table>>];
    bb2__0_2664 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_6)<br/>StorageLive(_10)<br/>_10 = _1<br/>StorageLive(_11)<br/>_11 = _2<br/></td></tr><tr><td align="left">_0 = calculate_base_asset_value_with_oracle_price(move _10, move _11)</td></tr></table>>];
    bb3__0_2664 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_10)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb4__0_2664 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_6)<br/>_4 = const ()<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_16 = _2<br/></td></tr><tr><td align="left">_15 = core::num::&lt;impl i64&gt;::abs(move _16)</td></tr></table>>];
    bb5__0_2664 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/></td></tr><tr><td align="left">_14 = &lt;i64 as Cast&gt;::cast::&lt;u128&gt;(move _15)</td></tr></table>>];
    bb6__0_2664 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/></td></tr><tr><td align="left">_13 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _14)</td></tr></table>>];
    bb7__0_2664 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>_17 = discriminant(_13)<br/></td></tr><tr><td align="left">switchInt(move _17)</td></tr></table>>];
    bb8__0_2664 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = ((_13 as Continue).0: u128)<br/>_12 = _21<br/>StorageDead(_21)<br/>StorageDead(_13)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_24 = _1<br/>_23 = Lt(move _24, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _23)</td></tr></table>>];
    bb9__0_2664 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb10__0_2664 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_18)<br/>_18 = ((_13 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_20)<br/>_20 = _18<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _20)</td></tr></table>>];
    bb11__0_2664 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_18)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_2664 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>_31 = _1<br/></td></tr><tr><td align="left">_30 = core::num::&lt;impl i128&gt;::unsigned_abs(move _31)</td></tr></table>>];
    bb13__0_2664 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>_50 = _1<br/></td></tr><tr><td align="left">_49 = core::num::&lt;impl i128&gt;::unsigned_abs(move _50)</td></tr></table>>];
    bb14__0_2664 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>_33 = _12<br/></td></tr><tr><td align="left">_32 = core::num::&lt;impl u128&gt;::saturating_sub(const _, move _33)</td></tr></table>>];
    bb15__0_2664 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/></td></tr><tr><td align="left">_29 = &lt;u128 as SafeMath&gt;::safe_mul(move _30, move _32)</td></tr></table>>];
    bb16__0_2664 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">_28 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _29)</td></tr></table>>];
    bb17__0_2664 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>_34 = discriminant(_28)<br/></td></tr><tr><td align="left">switchInt(move _34)</td></tr></table>>];
    bb18__0_2664 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_38)<br/>_38 = ((_28 as Continue).0: u128)<br/>_27 = _38<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">_26 = &lt;u128 as SafeMath&gt;::safe_div(move _27, const _)</td></tr></table>>];
    bb19__0_2664 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = ((_28 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_37)<br/>_37 = _35<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _37)</td></tr></table>>];
    bb20__0_2664 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_35)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_2664 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/></td></tr><tr><td align="left">_25 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _26)</td></tr></table>>];
    bb22__0_2664 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>_39 = discriminant(_25)<br/></td></tr><tr><td align="left">switchInt(move _39)</td></tr></table>>];
    bb23__0_2664 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_43)<br/>_43 = ((_25 as Continue).0: u128)<br/>_22 = _43<br/>StorageDead(_43)<br/>StorageDead(_28)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_2664 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_40)<br/>_40 = ((_25 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_42)<br/>_42 = _40<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _42)</td></tr></table>>];
    bb25__0_2664 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_2664 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageLive(_51)<br/>_51 = _12<br/></td></tr><tr><td align="left">_48 = &lt;u128 as SafeMath&gt;::safe_mul(move _49, move _51)</td></tr></table>>];
    bb27__0_2664 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">_47 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _48)</td></tr></table>>];
    bb28__0_2664 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>_52 = discriminant(_47)<br/></td></tr><tr><td align="left">switchInt(move _52)</td></tr></table>>];
    bb29__0_2664 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_56)<br/>_56 = ((_47 as Continue).0: u128)<br/>_46 = _56<br/>StorageDead(_56)<br/></td></tr><tr><td align="left">_45 = &lt;u128 as SafeMath&gt;::safe_div(move _46, const _)</td></tr></table>>];
    bb30__0_2664 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_53)<br/>_53 = ((_47 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_55)<br/>_55 = _53<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _55)</td></tr></table>>];
    bb31__0_2664 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_53)<br/>StorageDead(_46)<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_2664 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/></td></tr><tr><td align="left">_44 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _45)</td></tr></table>>];
    bb33__0_2664 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>_57 = discriminant(_44)<br/></td></tr><tr><td align="left">switchInt(move _57)</td></tr></table>>];
    bb34__0_2664 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_61)<br/>_61 = ((_44 as Continue).0: u128)<br/>_22 = _61<br/>StorageDead(_61)<br/>StorageDead(_47)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_2664 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_58)<br/>_58 = ((_44 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_60)<br/>_60 = _58<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _60)</td></tr></table>>];
    bb36__0_2664 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_2664 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageLive(_62)<br/>_62 = _22<br/>_0 = std::result::Result::&lt;u128, error::ErrorCode&gt;::Ok(move _62)<br/>StorageDead(_62)<br/>StorageDead(_22)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_2664 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_2664 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_2664 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_2664 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_2664 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2664 -> bb1__0_2664 [label="return"];
    bb1__0_2664 -> bb4__0_2664 [label="0"];
    bb1__0_2664 -> bb2__0_2664 [label="otherwise"];
    bb2__0_2664 -> bb3__0_2664 [label="return"];
    bb3__0_2664 -> bb42__0_2664 [label=""];
    bb4__0_2664 -> bb5__0_2664 [label="return"];
    bb5__0_2664 -> bb6__0_2664 [label="return"];
    bb6__0_2664 -> bb7__0_2664 [label="return"];
    bb7__0_2664 -> bb8__0_2664 [label="0"];
    bb7__0_2664 -> bb10__0_2664 [label="1"];
    bb7__0_2664 -> bb9__0_2664 [label="otherwise"];
    bb8__0_2664 -> bb13__0_2664 [label="0"];
    bb8__0_2664 -> bb12__0_2664 [label="otherwise"];
    bb10__0_2664 -> bb11__0_2664 [label="return"];
    bb11__0_2664 -> bb41__0_2664 [label=""];
    bb12__0_2664 -> bb14__0_2664 [label="return"];
    bb13__0_2664 -> bb26__0_2664 [label="return"];
    bb14__0_2664 -> bb15__0_2664 [label="return"];
    bb15__0_2664 -> bb16__0_2664 [label="return"];
    bb16__0_2664 -> bb17__0_2664 [label="return"];
    bb17__0_2664 -> bb18__0_2664 [label="0"];
    bb17__0_2664 -> bb19__0_2664 [label="1"];
    bb17__0_2664 -> bb9__0_2664 [label="otherwise"];
    bb18__0_2664 -> bb21__0_2664 [label="return"];
    bb19__0_2664 -> bb20__0_2664 [label="return"];
    bb20__0_2664 -> bb39__0_2664 [label=""];
    bb21__0_2664 -> bb22__0_2664 [label="return"];
    bb22__0_2664 -> bb23__0_2664 [label="0"];
    bb22__0_2664 -> bb24__0_2664 [label="1"];
    bb22__0_2664 -> bb9__0_2664 [label="otherwise"];
    bb23__0_2664 -> bb37__0_2664 [label=""];
    bb24__0_2664 -> bb25__0_2664 [label="return"];
    bb25__0_2664 -> bb39__0_2664 [label=""];
    bb26__0_2664 -> bb27__0_2664 [label="return"];
    bb27__0_2664 -> bb28__0_2664 [label="return"];
    bb28__0_2664 -> bb29__0_2664 [label="0"];
    bb28__0_2664 -> bb30__0_2664 [label="1"];
    bb28__0_2664 -> bb9__0_2664 [label="otherwise"];
    bb29__0_2664 -> bb32__0_2664 [label="return"];
    bb30__0_2664 -> bb31__0_2664 [label="return"];
    bb31__0_2664 -> bb38__0_2664 [label=""];
    bb32__0_2664 -> bb33__0_2664 [label="return"];
    bb33__0_2664 -> bb34__0_2664 [label="0"];
    bb33__0_2664 -> bb35__0_2664 [label="1"];
    bb33__0_2664 -> bb9__0_2664 [label="otherwise"];
    bb34__0_2664 -> bb37__0_2664 [label=""];
    bb35__0_2664 -> bb36__0_2664 [label="return"];
    bb36__0_2664 -> bb38__0_2664 [label=""];
    bb37__0_2664 -> bb42__0_2664 [label=""];
    bb38__0_2664 -> bb40__0_2664 [label=""];
    bb39__0_2664 -> bb40__0_2664 [label=""];
    bb40__0_2664 -> bb41__0_2664 [label=""];
    bb41__0_2664 -> bb42__0_2664 [label=""];
}
