digraph Mir_0_2302 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_funding_rate_long_short(_1: &amp;ReErased mut state::perp_market::PerpMarket, _2: i128) -&gt; std::result::Result&lt;(i128, i128, i128), error::ErrorCode&gt;<br align="left"/>let _3: i128;<br align="left"/>let _4: i128;<br align="left"/>let mut _5: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _6: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _7: i128;<br align="left"/>let mut _8: i128;<br align="left"/>let mut _9: isize;<br align="left"/>let _10: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _11: !;<br align="left"/>let mut _12: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _13: i128;<br align="left"/>let _14: i128;<br align="left"/>let mut _15: i128;<br align="left"/>let mut _16: bool;<br align="left"/>let _17: ();<br align="left"/>let mut _18: bool;<br align="left"/>let mut _19: i128;<br align="left"/>let mut _20: !;<br align="left"/>let mut _21: i128;<br align="left"/>let mut _22: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _23: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _24: i128;<br align="left"/>let mut _25: i128;<br align="left"/>let mut _26: isize;<br align="left"/>let _27: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _28: !;<br align="left"/>let mut _29: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _30: i128;<br align="left"/>let mut _31: i64;<br align="left"/>let mut _32: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _33: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _34: i64;<br align="left"/>let mut _35: i64;<br align="left"/>let mut _36: i128;<br align="left"/>let mut _37: isize;<br align="left"/>let _38: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _39: !;<br align="left"/>let mut _40: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _41: i64;<br align="left"/>let mut _42: (i128, i128, i128);<br align="left"/>let mut _43: i128;<br align="left"/>let mut _44: i128;<br align="left"/>let mut _45: i128;<br align="left"/>let _46: i128;<br align="left"/>let _47: i128;<br align="left"/>let mut _48: (i128, i128);<br align="left"/>let mut _49: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (i128, i128)&gt;;<br align="left"/>let mut _50: std::result::Result&lt;(i128, i128), error::ErrorCode&gt;;<br align="left"/>let mut _51: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _52: i128;<br align="left"/>let mut _53: i128;<br align="left"/>let mut _54: isize;<br align="left"/>let _55: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _56: !;<br align="left"/>let mut _57: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _58: (i128, i128);<br align="left"/>let _59: i128;<br align="left"/>let mut _60: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _61: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _62: i128;<br align="left"/>let mut _63: i128;<br align="left"/>let mut _64: isize;<br align="left"/>let _65: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _66: !;<br align="left"/>let mut _67: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _68: i128;<br align="left"/>let _69: ();<br align="left"/>let mut _70: bool;<br align="left"/>let mut _71: i128;<br align="left"/>let _72: i128;<br align="left"/>let mut _73: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _74: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _75: u128;<br align="left"/>let mut _76: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _77: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _78: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _79: isize;<br align="left"/>let _80: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _81: !;<br align="left"/>let mut _82: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _83: u128;<br align="left"/>let mut _84: isize;<br align="left"/>let _85: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _86: !;<br align="left"/>let mut _87: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _88: i128;<br align="left"/>let mut _89: bool;<br align="left"/>let mut _90: i128;<br align="left"/>let mut _91: i128;<br align="left"/>let mut _92: !;<br align="left"/>let _93: ();<br align="left"/>let mut _94: &amp;ReErased str;<br align="left"/>let _95: &amp;ReErased str;<br align="left"/>let mut _96: &amp;ReErased std::string::String;<br align="left"/>let _97: &amp;ReErased std::string::String;<br align="left"/>let _98: std::string::String;<br align="left"/>let _99: std::string::String;<br align="left"/>let mut _100: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _101: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _102: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _103: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _104: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _105: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _106: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _107: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _108: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _109: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _110: &amp;ReErased i128;<br align="left"/>let _111: &amp;ReErased i128;<br align="left"/>let mut _112: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _113: &amp;ReErased i128;<br align="left"/>let _114: &amp;ReErased i128;<br align="left"/>let mut _115: error::ErrorCode;<br align="left"/>let mut _116: i128;<br align="left"/>let mut _117: i64;<br align="left"/>let mut _118: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _119: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _120: i64;<br align="left"/>let mut _121: i64;<br align="left"/>let mut _122: u128;<br align="left"/>let mut _123: i128;<br align="left"/>let mut _124: isize;<br align="left"/>let _125: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _126: !;<br align="left"/>let mut _127: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _128: i64;<br align="left"/>let _129: i128;<br align="left"/>let mut _130: bool;<br align="left"/>let mut _131: i128;<br align="left"/>let _132: i128;<br align="left"/>let mut _133: bool;<br align="left"/>let mut _134: i128;<br align="left"/>let mut _135: (i128, i128, i128);<br align="left"/>let mut _136: i128;<br align="left"/>let mut _137: i128;<br align="left"/>let mut _138: i128;<br align="left"/>let mut _139: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>debug market =&gt; _1;<br align="left"/>debug funding_rate =&gt; _2;<br align="left"/>debug settled_net_market_position =&gt; _3;<br align="left"/>debug net_market_position_funding_payment =&gt; _4;<br align="left"/>debug residual =&gt; _10;<br align="left"/>debug val =&gt; _13;<br align="left"/>debug uncapped_funding_pnl =&gt; _14;<br align="left"/>debug residual =&gt; _27;<br align="left"/>debug val =&gt; _30;<br align="left"/>debug residual =&gt; _38;<br align="left"/>debug val =&gt; _41;<br align="left"/>debug capped_funding_rate =&gt; _46;<br align="left"/>debug capped_funding_pnl =&gt; _47;<br align="left"/>debug residual =&gt; _55;<br align="left"/>debug val =&gt; _58;<br align="left"/>debug new_total_fee_minus_distributions =&gt; _59;<br align="left"/>debug residual =&gt; _65;<br align="left"/>debug val =&gt; _68;<br align="left"/>debug total_fee_minus_distributions_lower_bound =&gt; _72;<br align="left"/>debug residual =&gt; _80;<br align="left"/>debug val =&gt; _83;<br align="left"/>debug residual =&gt; _85;<br align="left"/>debug val =&gt; _88;<br align="left"/>debug res =&gt; _99;<br align="left"/>debug residual =&gt; _125;<br align="left"/>debug val =&gt; _128;<br align="left"/>debug funding_rate_long =&gt; _129;<br align="left"/>debug funding_rate_short =&gt; _132;<br align="left"/>>;
    bb0__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>_3 = (((*_1).1: state::perp_market::AMM).15: i128)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = _2<br/>StorageLive(_8)<br/>_8 = _3<br/></td></tr><tr><td align="left">_6 = calculate_funding_payment_in_quote_precision(move _7, move _8)</td></tr></table>>];
    bb1__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">_5 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _6)</td></tr></table>>];
    bb2__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_9 = discriminant(_5)<br/></td></tr><tr><td align="left">switchInt(move _9)</td></tr></table>>];
    bb3__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = ((_5 as Continue).0: i128)<br/>_4 = _13<br/>StorageDead(_13)<br/>StorageDead(_5)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = _4<br/>_16 = Eq(_15, const i128::MIN)<br/></td></tr><tr><td align="left">assert(!move _16, &quot;attempt to negate `{}`, which would overflow&quot;, _15)</td></tr></table>>];
    bb4__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>_10 = ((_5 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_12)<br/>_12 = _10<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i128, i128, i128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _12)</td></tr></table>>];
    bb6__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_10)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">_14 = Neg(move _15)<br/>StorageDead(_15)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_19 = _14<br/>_18 = Ge(move _19, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _18)</td></tr></table>>];
    bb8__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_24 = (((*_1).1: state::perp_market::AMM).31: i128)<br/>StorageLive(_25)<br/>_25 = _14<br/></td></tr><tr><td align="left">_23 = &lt;i128 as SafeMath&gt;::safe_add(move _24, move _25)</td></tr></table>>];
    bb9__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">_22 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _23)</td></tr></table>>];
    bb10__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>_26 = discriminant(_22)<br/></td></tr><tr><td align="left">switchInt(move _26)</td></tr></table>>];
    bb11__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_30)<br/>_30 = ((_22 as Continue).0: i128)<br/>_21 = _30<br/>StorageDead(_30)<br/>(((*_1).1: state::perp_market::AMM).31: i128) = move _21<br/>StorageDead(_21)<br/>StorageDead(_22)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>_34 = (((*_1).1: state::perp_market::AMM).49: i64)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>_36 = _14<br/>_35 = move _36 as i64 (IntToInt)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">_33 = &lt;i64 as SafeMath&gt;::safe_add(move _34, move _35)</td></tr></table>>];
    bb12__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_27)<br/>_27 = ((_22 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_29)<br/>_29 = _27<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i128, i128, i128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _29)</td></tr></table>>];
    bb13__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_27)<br/>StorageDead(_21)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">_32 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _33)</td></tr></table>>];
    bb15__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>_37 = discriminant(_32)<br/></td></tr><tr><td align="left">switchInt(move _37)</td></tr></table>>];
    bb16__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_41)<br/>_41 = ((_32 as Continue).0: i64)<br/>_31 = _41<br/>StorageDead(_41)<br/>(((*_1).1: state::perp_market::AMM).49: i64) = move _31<br/>StorageDead(_31)<br/>StorageDead(_32)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>_43 = _2<br/>StorageLive(_44)<br/>_44 = _2<br/>StorageLive(_45)<br/>_45 = _14<br/>_42 = (move _43, move _44, move _45)<br/>StorageDead(_45)<br/>StorageDead(_44)<br/>StorageDead(_43)<br/>_0 = std::result::Result::&lt;(i128, i128, i128), error::ErrorCode&gt;::Ok(move _42)<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_38)<br/>_38 = ((_32 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_40)<br/>_40 = _38<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i128, i128, i128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _40)</td></tr></table>>];
    bb18__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageDead(_38)<br/>StorageDead(_31)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>_17 = const ()<br/>StorageDead(_18)<br/>StorageDead(_17)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>_51 = &amp;(*_1)<br/>StorageLive(_52)<br/>_52 = _14<br/>StorageLive(_53)<br/>_53 = _2<br/></td></tr><tr><td align="left">_50 = calculate_capped_funding_rate(move _51, move _52, move _53)</td></tr></table>>];
    bb20__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_52)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">_49 = &lt;std::result::Result&lt;(i128, i128), error::ErrorCode&gt; as Try&gt;::branch(move _50)</td></tr></table>>];
    bb21__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>_54 = discriminant(_49)<br/></td></tr><tr><td align="left">switchInt(move _54)</td></tr></table>>];
    bb22__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_58)<br/>_58 = ((_49 as Continue).0: (i128, i128))<br/>_48 = _58<br/>StorageDead(_58)<br/>StorageLive(_46)<br/>_46 = (_48.0: i128)<br/>StorageLive(_47)<br/>_47 = (_48.1: i128)<br/>StorageDead(_49)<br/>StorageDead(_48)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>_62 = (((*_1).1: state::perp_market::AMM).31: i128)<br/>StorageLive(_63)<br/>_63 = _47<br/></td></tr><tr><td align="left">_61 = &lt;i128 as SafeMath&gt;::safe_add(move _62, move _63)</td></tr></table>>];
    bb23__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_55)<br/>_55 = ((_49 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_57)<br/>_57 = _55<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i128, i128, i128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _57)</td></tr></table>>];
    bb24__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_55)<br/>StorageDead(_49)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">_60 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _61)</td></tr></table>>];
    bb26__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>_64 = discriminant(_60)<br/></td></tr><tr><td align="left">switchInt(move _64)</td></tr></table>>];
    bb27__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_68)<br/>_68 = ((_60 as Continue).0: i128)<br/>_59 = _68<br/>StorageDead(_68)<br/>StorageDead(_60)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>_71 = _47<br/>_70 = Ne(move _71, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _70)</td></tr></table>>];
    bb28__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_65)<br/>_65 = ((_60 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_67)<br/>_67 = _65<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i128, i128, i128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _67)</td></tr></table>>];
    bb29__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>StorageDead(_65)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>_78 = &amp;(*_1)<br/></td></tr><tr><td align="left">_77 = get_total_fee_lower_bound(move _78)</td></tr></table>>];
    bb31__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>_69 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/></td></tr><tr><td align="left">_76 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _77)</td></tr></table>>];
    bb33__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>_79 = discriminant(_76)<br/></td></tr><tr><td align="left">switchInt(move _79)</td></tr></table>>];
    bb34__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_83)<br/>_83 = ((_76 as Continue).0: u128)<br/>_75 = _83<br/>StorageDead(_83)<br/></td></tr><tr><td align="left">_74 = &lt;u128 as Cast&gt;::cast::&lt;i128&gt;(move _75)</td></tr></table>>];
    bb35__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_80)<br/>_80 = ((_76 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_82)<br/>_82 = _80<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i128, i128, i128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _82)</td></tr></table>>];
    bb36__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>StorageDead(_80)<br/>StorageDead(_75)<br/>StorageDead(_74)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/></td></tr><tr><td align="left">_73 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _74)</td></tr></table>>];
    bb38__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>_84 = discriminant(_73)<br/></td></tr><tr><td align="left">switchInt(move _84)</td></tr></table>>];
    bb39__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_88)<br/>_88 = ((_73 as Continue).0: i128)<br/>_72 = _88<br/>StorageDead(_88)<br/>StorageDead(_76)<br/>StorageDead(_73)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>_90 = _59<br/>StorageLive(_91)<br/>_91 = _72<br/>_89 = Lt(move _90, move _91)<br/></td></tr><tr><td align="left">switchInt(move _89)</td></tr></table>>];
    bb40__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageLive(_85)<br/>_85 = ((_73 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_87)<br/>_87 = _85<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i128, i128, i128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _87)</td></tr></table>>];
    bb41__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>StorageDead(_85)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/>StorageDead(_90)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>_139 = const _<br/>_103 = &amp;(*_139)<br/>_102 = &amp;(*_103)<br/>_101 = move _102 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_102)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>_111 = &amp;_59<br/>_110 = &amp;(*_111)<br/></td></tr><tr><td align="left">_109 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i128&gt;(move _110)</td></tr></table>>];
    bb43__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/>StorageDead(_90)<br/>_69 = const ()<br/>StorageDead(_89)<br/>StorageDead(_72)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>_114 = &amp;_72<br/>_113 = &amp;(*_114)<br/></td></tr><tr><td align="left">_112 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i128&gt;(move _113)</td></tr></table>>];
    bb45__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_113)<br/>_108 = [move _109, move _112]<br/>StorageDead(_112)<br/>StorageDead(_109)<br/>_107 = &amp;_108<br/>_106 = &amp;(*_107)<br/>_105 = move _106 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_106)<br/></td></tr><tr><td align="left">_100 = Arguments::&lt;'_&gt;::new_v1(move _101, move _105)</td></tr></table>>];
    bb46__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/>StorageDead(_101)<br/></td></tr><tr><td align="left">_99 = format(move _100)</td></tr></table>>];
    bb47__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>StorageDead(_114)<br/>StorageDead(_111)<br/>StorageDead(_108)<br/>StorageDead(_107)<br/>StorageDead(_103)<br/>_98 = move _99<br/>StorageDead(_99)<br/>_97 = &amp;_98<br/>_96 = &amp;(*_97)<br/></td></tr><tr><td align="left">_95 = &lt;String as Deref&gt;::deref(move _96)</td></tr></table>>];
    bb48__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">_94 = &amp;(*_95)<br/>StorageDead(_96)<br/></td></tr><tr><td align="left">_93 = solana_program::log::sol_log(move _94)</td></tr></table>>];
    bb49__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/></td></tr><tr><td align="left">drop(_98)</td></tr></table>>];
    bb50__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>StorageDead(_97)<br/>StorageDead(_95)<br/>StorageDead(_93)<br/>StorageLive(_115)<br/>_115 = error::ErrorCode::InvalidFundingProfitability<br/>_0 = std::result::Result::&lt;(i128, i128, i128), error::ErrorCode&gt;::Err(move _115)<br/>StorageDead(_115)<br/>StorageDead(_89)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb51__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_69)<br/>StorageLive(_116)<br/>_116 = _59<br/>(((*_1).1: state::perp_market::AMM).31: i128) = move _116<br/>StorageDead(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>_120 = (((*_1).1: state::perp_market::AMM).49: i64)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>_123 = _47<br/></td></tr><tr><td align="left">_122 = core::num::&lt;impl i128&gt;::unsigned_abs(move _123)</td></tr></table>>];
    bb52__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/>_121 = move _122 as i64 (IntToInt)<br/>StorageDead(_122)<br/></td></tr><tr><td align="left">_119 = &lt;i64 as SafeMath&gt;::safe_sub(move _120, move _121)</td></tr></table>>];
    bb53__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_121)<br/>StorageDead(_120)<br/></td></tr><tr><td align="left">_118 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _119)</td></tr></table>>];
    bb54__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/>_124 = discriminant(_118)<br/></td></tr><tr><td align="left">switchInt(move _124)</td></tr></table>>];
    bb55__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageLive(_128)<br/>_128 = ((_118 as Continue).0: i64)<br/>_117 = _128<br/>StorageDead(_128)<br/>(((*_1).1: state::perp_market::AMM).49: i64) = move _117<br/>StorageDead(_117)<br/>StorageDead(_118)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>_131 = _2<br/>_130 = Lt(move _131, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _130)</td></tr></table>>];
    bb56__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageLive(_125)<br/>_125 = ((_118 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_127)<br/>_127 = _125<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i128, i128, i128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _127)</td></tr></table>>];
    bb57__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/>StorageDead(_125)<br/>StorageDead(_117)<br/>StorageDead(_118)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb58__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_131)<br/>_129 = _46<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_131)<br/>_129 = _2<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb60__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_130)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>_134 = _2<br/>_133 = Gt(move _134, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _133)</td></tr></table>>];
    bb61__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_134)<br/>_132 = _46<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_134)<br/>_132 = _2<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb63__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>_136 = _129<br/>StorageLive(_137)<br/>_137 = _132<br/>StorageLive(_138)<br/>_138 = _14<br/>_135 = (move _136, move _137, move _138)<br/>StorageDead(_138)<br/>StorageDead(_137)<br/>StorageDead(_136)<br/>_0 = std::result::Result::&lt;(i128, i128, i128), error::ErrorCode&gt;::Ok(move _135)<br/>StorageDead(_135)<br/>StorageDead(_132)<br/>StorageDead(_129)<br/>StorageDead(_59)<br/>StorageDead(_47)<br/>StorageDead(_46)<br/>StorageDead(_14)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb64__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb65__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_70)<br/>StorageDead(_69)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb66__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_47)<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb67__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb69__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb70__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left">return</td></tr></table>>];
    bb71__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">71 (cleanup)</td></tr><tr><td align="left">drop(_98)</td></tr></table>>];
    bb72__0_2302 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">72 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_2302 -> bb1__0_2302 [label="return"];
    bb1__0_2302 -> bb2__0_2302 [label="return"];
    bb2__0_2302 -> bb3__0_2302 [label="0"];
    bb2__0_2302 -> bb5__0_2302 [label="1"];
    bb2__0_2302 -> bb4__0_2302 [label="otherwise"];
    bb3__0_2302 -> bb7__0_2302 [label="success"];
    bb5__0_2302 -> bb6__0_2302 [label="return"];
    bb6__0_2302 -> bb69__0_2302 [label=""];
    bb7__0_2302 -> bb19__0_2302 [label="0"];
    bb7__0_2302 -> bb8__0_2302 [label="otherwise"];
    bb8__0_2302 -> bb9__0_2302 [label="return"];
    bb9__0_2302 -> bb10__0_2302 [label="return"];
    bb10__0_2302 -> bb11__0_2302 [label="0"];
    bb10__0_2302 -> bb12__0_2302 [label="1"];
    bb10__0_2302 -> bb4__0_2302 [label="otherwise"];
    bb11__0_2302 -> bb14__0_2302 [label="return"];
    bb12__0_2302 -> bb13__0_2302 [label="return"];
    bb13__0_2302 -> bb67__0_2302 [label=""];
    bb14__0_2302 -> bb15__0_2302 [label="return"];
    bb15__0_2302 -> bb16__0_2302 [label="0"];
    bb15__0_2302 -> bb17__0_2302 [label="1"];
    bb15__0_2302 -> bb4__0_2302 [label="otherwise"];
    bb16__0_2302 -> bb67__0_2302 [label=""];
    bb17__0_2302 -> bb18__0_2302 [label="return"];
    bb18__0_2302 -> bb67__0_2302 [label=""];
    bb19__0_2302 -> bb20__0_2302 [label="return"];
    bb20__0_2302 -> bb21__0_2302 [label="return"];
    bb21__0_2302 -> bb22__0_2302 [label="0"];
    bb21__0_2302 -> bb23__0_2302 [label="1"];
    bb21__0_2302 -> bb4__0_2302 [label="otherwise"];
    bb22__0_2302 -> bb25__0_2302 [label="return"];
    bb23__0_2302 -> bb24__0_2302 [label="return"];
    bb24__0_2302 -> bb68__0_2302 [label=""];
    bb25__0_2302 -> bb26__0_2302 [label="return"];
    bb26__0_2302 -> bb27__0_2302 [label="0"];
    bb26__0_2302 -> bb28__0_2302 [label="1"];
    bb26__0_2302 -> bb4__0_2302 [label="otherwise"];
    bb27__0_2302 -> bb31__0_2302 [label="0"];
    bb27__0_2302 -> bb30__0_2302 [label="otherwise"];
    bb28__0_2302 -> bb29__0_2302 [label="return"];
    bb29__0_2302 -> bb66__0_2302 [label=""];
    bb30__0_2302 -> bb32__0_2302 [label="return"];
    bb31__0_2302 -> bb51__0_2302 [label=""];
    bb32__0_2302 -> bb33__0_2302 [label="return"];
    bb33__0_2302 -> bb34__0_2302 [label="0"];
    bb33__0_2302 -> bb35__0_2302 [label="1"];
    bb33__0_2302 -> bb4__0_2302 [label="otherwise"];
    bb34__0_2302 -> bb37__0_2302 [label="return"];
    bb35__0_2302 -> bb36__0_2302 [label="return"];
    bb36__0_2302 -> bb64__0_2302 [label=""];
    bb37__0_2302 -> bb38__0_2302 [label="return"];
    bb38__0_2302 -> bb39__0_2302 [label="0"];
    bb38__0_2302 -> bb40__0_2302 [label="1"];
    bb38__0_2302 -> bb4__0_2302 [label="otherwise"];
    bb39__0_2302 -> bb43__0_2302 [label="0"];
    bb39__0_2302 -> bb42__0_2302 [label="otherwise"];
    bb40__0_2302 -> bb41__0_2302 [label="return"];
    bb41__0_2302 -> bb64__0_2302 [label=""];
    bb42__0_2302 -> bb44__0_2302 [label="return"];
    bb43__0_2302 -> bb51__0_2302 [label=""];
    bb44__0_2302 -> bb45__0_2302 [label="return"];
    bb45__0_2302 -> bb46__0_2302 [label="return"];
    bb46__0_2302 -> bb47__0_2302 [label="return"];
    bb47__0_2302 -> bb48__0_2302 [label="return"];
    bb47__0_2302 -> bb71__0_2302 [label="unwind"];
    bb48__0_2302 -> bb49__0_2302 [label="return"];
    bb48__0_2302 -> bb71__0_2302 [label="unwind"];
    bb49__0_2302 -> bb50__0_2302 [label="return"];
    bb49__0_2302 -> bb72__0_2302 [label="unwind"];
    bb50__0_2302 -> bb65__0_2302 [label=""];
    bb51__0_2302 -> bb52__0_2302 [label="return"];
    bb52__0_2302 -> bb53__0_2302 [label="return"];
    bb53__0_2302 -> bb54__0_2302 [label="return"];
    bb54__0_2302 -> bb55__0_2302 [label="0"];
    bb54__0_2302 -> bb56__0_2302 [label="1"];
    bb54__0_2302 -> bb4__0_2302 [label="otherwise"];
    bb55__0_2302 -> bb59__0_2302 [label="0"];
    bb55__0_2302 -> bb58__0_2302 [label="otherwise"];
    bb56__0_2302 -> bb57__0_2302 [label="return"];
    bb57__0_2302 -> bb66__0_2302 [label=""];
    bb58__0_2302 -> bb60__0_2302 [label=""];
    bb59__0_2302 -> bb60__0_2302 [label=""];
    bb60__0_2302 -> bb62__0_2302 [label="0"];
    bb60__0_2302 -> bb61__0_2302 [label="otherwise"];
    bb61__0_2302 -> bb63__0_2302 [label=""];
    bb62__0_2302 -> bb63__0_2302 [label=""];
    bb63__0_2302 -> bb70__0_2302 [label=""];
    bb64__0_2302 -> bb65__0_2302 [label=""];
    bb65__0_2302 -> bb66__0_2302 [label=""];
    bb66__0_2302 -> bb68__0_2302 [label=""];
    bb67__0_2302 -> bb68__0_2302 [label=""];
    bb68__0_2302 -> bb69__0_2302 [label=""];
    bb69__0_2302 -> bb70__0_2302 [label=""];
    bb71__0_2302 -> bb72__0_2302 [label="return"];
}
