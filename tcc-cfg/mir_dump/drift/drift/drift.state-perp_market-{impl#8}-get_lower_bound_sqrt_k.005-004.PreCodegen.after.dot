digraph Mir_0_3827 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn AMM::get_lower_bound_sqrt_k(_1: state::perp_market::AMM) -&gt; std::result::Result&lt;u128, error::ErrorCode&gt;<br align="left"/>let mut _2: u128;<br align="left"/>let mut _3: u128;<br align="left"/>let mut _4: u128;<br align="left"/>let mut _5: u128;<br align="left"/>let mut _6: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _7: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _8: u64;<br align="left"/>let mut _9: isize;<br align="left"/>let _10: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _11: !;<br align="left"/>let mut _12: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _13: u128;<br align="left"/>let mut _14: u128;<br align="left"/>let mut _15: i128;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug residual =&gt; _10;<br align="left"/>debug val =&gt; _13;<br align="left"/>>;
    bb0__0_3827 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>_3 = (_1.10: u128)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = (_1.54: u64)<br/></td></tr><tr><td align="left">_7 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _8)</td></tr></table>>];
    bb1__0_3827 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/></td></tr><tr><td align="left">_6 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _7)</td></tr></table>>];
    bb2__0_3827 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>_9 = discriminant(_6)<br/></td></tr><tr><td align="left">switchInt(move _9)</td></tr></table>>];
    bb3__0_3827 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = ((_6 as Continue).0: u128)<br/>_5 = _13<br/>StorageDead(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = (_1.15: i128)<br/></td></tr><tr><td align="left">_14 = core::num::&lt;impl i128&gt;::unsigned_abs(move _15)</td></tr></table>>];
    bb4__0_3827 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_3827 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>_10 = ((_6 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_12)<br/>_12 = _10<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _12)</td></tr></table>>];
    bb6__0_3827 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_10)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_3827 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/></td></tr><tr><td align="left">_4 = &lt;u128 as Ord&gt;::max(move _5, move _14)</td></tr></table>>];
    bb8__0_3827 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">_2 = &lt;u128 as Ord&gt;::min(move _3, move _4)</td></tr></table>>];
    bb9__0_3827 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageDead(_3)<br/>_0 = std::result::Result::&lt;u128, error::ErrorCode&gt;::Ok(move _2)<br/>StorageDead(_2)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_3827 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_3827 -> bb1__0_3827 [label="return"];
    bb1__0_3827 -> bb2__0_3827 [label="return"];
    bb2__0_3827 -> bb3__0_3827 [label="0"];
    bb2__0_3827 -> bb5__0_3827 [label="1"];
    bb2__0_3827 -> bb4__0_3827 [label="otherwise"];
    bb3__0_3827 -> bb7__0_3827 [label="return"];
    bb5__0_3827 -> bb6__0_3827 [label="return"];
    bb6__0_3827 -> bb10__0_3827 [label=""];
    bb7__0_3827 -> bb8__0_3827 [label="return"];
    bb8__0_3827 -> bb9__0_3827 [label="return"];
    bb9__0_3827 -> bb10__0_3827 [label=""];
}
