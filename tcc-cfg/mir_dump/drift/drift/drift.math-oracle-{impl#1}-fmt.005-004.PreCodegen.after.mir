// MIR for `math::oracle::<impl at programs/drift/src/math/oracle.rs:46:1: 46:37>::fmt` after PreCodegen

fn math::oracle::<impl at programs/drift/src/math/oracle.rs:46:1: 46:37>::fmt(_1: &OracleValidity, _2: &mut Formatter<'_>) -> std::result::Result<(), std::fmt::Error> {
    debug self => _1;
    debug f => _2;
    let mut _0: std::result::Result<(), std::fmt::Error>;
    let mut _3: isize;
    let mut _4: &mut std::fmt::Formatter<'_>;
    let mut _5: std::fmt::Arguments<'_>;
    let mut _6: &[&str];
    let mut _7: &[&str; 1];
    let _8: &[&str; 1];
    let _9: [&str; 1];
    let mut _10: &mut std::fmt::Formatter<'_>;
    let mut _11: std::fmt::Arguments<'_>;
    let mut _12: &[&str];
    let mut _13: &[&str; 1];
    let _14: &[&str; 1];
    let _15: [&str; 1];
    let mut _16: &mut std::fmt::Formatter<'_>;
    let mut _17: std::fmt::Arguments<'_>;
    let mut _18: &[&str];
    let mut _19: &[&str; 1];
    let _20: &[&str; 1];
    let _21: [&str; 1];
    let mut _22: &mut std::fmt::Formatter<'_>;
    let mut _23: std::fmt::Arguments<'_>;
    let mut _24: &[&str];
    let mut _25: &[&str; 1];
    let _26: &[&str; 1];
    let _27: [&str; 1];
    let mut _28: &mut std::fmt::Formatter<'_>;
    let mut _29: std::fmt::Arguments<'_>;
    let mut _30: &[&str];
    let mut _31: &[&str; 1];
    let _32: &[&str; 1];
    let _33: [&str; 1];
    let mut _34: &mut std::fmt::Formatter<'_>;
    let mut _35: std::fmt::Arguments<'_>;
    let mut _36: &[&str];
    let mut _37: &[&str; 1];
    let _38: &[&str; 1];
    let _39: [&str; 1];
    let mut _40: &mut std::fmt::Formatter<'_>;
    let mut _41: std::fmt::Arguments<'_>;
    let mut _42: &[&str];
    let mut _43: &[&str; 1];
    let _44: &[&str; 1];
    let _45: [&str; 1];
    let mut _46: &[&str; 1];
    let mut _47: &[&str; 1];
    let mut _48: &[&str; 1];
    let mut _49: &[&str; 1];
    let mut _50: &[&str; 1];
    let mut _51: &[&str; 1];
    let mut _52: &[&str; 1];

    bb0: {
        _3 = discriminant((*_1));
        switchInt(move _3) -> [0: bb3, 1: bb6, 2: bb9, 3: bb12, 4: bb15, 5: bb18, 6: bb1, otherwise: bb2];
    }

    bb1: {
        StorageLive(_40);
        _40 = &mut (*_2);
        StorageLive(_41);
        StorageLive(_42);
        StorageLive(_43);
        StorageLive(_44);
        _46 = const _;
        _44 = &(*_46);
        _43 = &(*_44);
        _42 = move _43 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_43);
        _41 = Arguments::<'_>::new_const(move _42) -> [return: bb21, unwind continue];
    }

    bb2: {
        unreachable;
    }

    bb3: {
        StorageLive(_4);
        _4 = &mut (*_2);
        StorageLive(_5);
        StorageLive(_6);
        StorageLive(_7);
        StorageLive(_8);
        _52 = const _;
        _8 = &(*_52);
        _7 = &(*_8);
        _6 = move _7 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_7);
        _5 = Arguments::<'_>::new_const(move _6) -> [return: bb4, unwind continue];
    }

    bb4: {
        StorageDead(_6);
        _0 = Formatter::<'_>::write_fmt(move _4, move _5) -> [return: bb5, unwind continue];
    }

    bb5: {
        StorageDead(_8);
        StorageDead(_5);
        StorageDead(_4);
        goto -> bb23;
    }

    bb6: {
        StorageLive(_10);
        _10 = &mut (*_2);
        StorageLive(_11);
        StorageLive(_12);
        StorageLive(_13);
        StorageLive(_14);
        _51 = const _;
        _14 = &(*_51);
        _13 = &(*_14);
        _12 = move _13 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_13);
        _11 = Arguments::<'_>::new_const(move _12) -> [return: bb7, unwind continue];
    }

    bb7: {
        StorageDead(_12);
        _0 = Formatter::<'_>::write_fmt(move _10, move _11) -> [return: bb8, unwind continue];
    }

    bb8: {
        StorageDead(_14);
        StorageDead(_11);
        StorageDead(_10);
        goto -> bb23;
    }

    bb9: {
        StorageLive(_16);
        _16 = &mut (*_2);
        StorageLive(_17);
        StorageLive(_18);
        StorageLive(_19);
        StorageLive(_20);
        _50 = const _;
        _20 = &(*_50);
        _19 = &(*_20);
        _18 = move _19 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_19);
        _17 = Arguments::<'_>::new_const(move _18) -> [return: bb10, unwind continue];
    }

    bb10: {
        StorageDead(_18);
        _0 = Formatter::<'_>::write_fmt(move _16, move _17) -> [return: bb11, unwind continue];
    }

    bb11: {
        StorageDead(_20);
        StorageDead(_17);
        StorageDead(_16);
        goto -> bb23;
    }

    bb12: {
        StorageLive(_22);
        _22 = &mut (*_2);
        StorageLive(_23);
        StorageLive(_24);
        StorageLive(_25);
        StorageLive(_26);
        _49 = const _;
        _26 = &(*_49);
        _25 = &(*_26);
        _24 = move _25 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_25);
        _23 = Arguments::<'_>::new_const(move _24) -> [return: bb13, unwind continue];
    }

    bb13: {
        StorageDead(_24);
        _0 = Formatter::<'_>::write_fmt(move _22, move _23) -> [return: bb14, unwind continue];
    }

    bb14: {
        StorageDead(_26);
        StorageDead(_23);
        StorageDead(_22);
        goto -> bb23;
    }

    bb15: {
        StorageLive(_28);
        _28 = &mut (*_2);
        StorageLive(_29);
        StorageLive(_30);
        StorageLive(_31);
        StorageLive(_32);
        _48 = const _;
        _32 = &(*_48);
        _31 = &(*_32);
        _30 = move _31 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_31);
        _29 = Arguments::<'_>::new_const(move _30) -> [return: bb16, unwind continue];
    }

    bb16: {
        StorageDead(_30);
        _0 = Formatter::<'_>::write_fmt(move _28, move _29) -> [return: bb17, unwind continue];
    }

    bb17: {
        StorageDead(_32);
        StorageDead(_29);
        StorageDead(_28);
        goto -> bb23;
    }

    bb18: {
        StorageLive(_34);
        _34 = &mut (*_2);
        StorageLive(_35);
        StorageLive(_36);
        StorageLive(_37);
        StorageLive(_38);
        _47 = const _;
        _38 = &(*_47);
        _37 = &(*_38);
        _36 = move _37 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_37);
        _35 = Arguments::<'_>::new_const(move _36) -> [return: bb19, unwind continue];
    }

    bb19: {
        StorageDead(_36);
        _0 = Formatter::<'_>::write_fmt(move _34, move _35) -> [return: bb20, unwind continue];
    }

    bb20: {
        StorageDead(_38);
        StorageDead(_35);
        StorageDead(_34);
        goto -> bb23;
    }

    bb21: {
        StorageDead(_42);
        _0 = Formatter::<'_>::write_fmt(move _40, move _41) -> [return: bb22, unwind continue];
    }

    bb22: {
        StorageDead(_44);
        StorageDead(_41);
        StorageDead(_40);
        goto -> bb23;
    }

    bb23: {
        return;
    }
}
