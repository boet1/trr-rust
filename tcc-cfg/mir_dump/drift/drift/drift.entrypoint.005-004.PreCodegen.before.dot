digraph Mir_0_19079 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn entrypoint(_1: *mut u8) -&gt; u64<br align="left"/>let _2: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _3: std::vec::Vec&lt;anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, std::alloc::Global&gt;;<br align="left"/>let _4: &amp;ReErased [u8];<br align="left"/>let mut _5: (&amp;ReErased anchor_lang::prelude::Pubkey, std::vec::Vec&lt;anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, std::alloc::Global&gt;, &amp;ReErased [u8]);<br align="left"/>let mut _6: *mut u8;<br align="left"/>let mut _7: std::result::Result&lt;(), anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _8: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _9: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _10: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let _11: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _12: &amp;ReErased std::vec::Vec&lt;anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, std::alloc::Global&gt;;<br align="left"/>let _13: &amp;ReErased std::vec::Vec&lt;anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _14: &amp;ReErased [u8];<br align="left"/>let _15: &amp;ReErased &amp;ReErased [u8];<br align="left"/>let mut _16: isize;<br align="left"/>let _17: anchor_lang::prelude::ProgramError;<br align="left"/>let mut _18: anchor_lang::prelude::ProgramError;<br align="left"/>let mut _19: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _20: &amp;ReErased [u8];<br align="left"/>let mut _21: bool;<br align="left"/>let mut _22: isize;<br align="left"/>let mut _23: isize;<br align="left"/>let mut _24: isize;<br align="left"/>debug input =&gt; _1;<br align="left"/>debug program_id =&gt; _2;<br align="left"/>debug accounts =&gt; _3;<br align="left"/>debug instruction_data =&gt; _4;<br align="left"/>debug error =&gt; _17;<br align="left"/>>;
    bb0__0_19079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_21 = const false<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = _1<br/></td></tr><tr><td align="left">_5 = solana_program::entrypoint::deserialize::&lt;'_&gt;(move _6)</td></tr></table>>];
    bb1__0_19079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageLive(_2)<br/>_2 = (_5.0: &amp;anchor_lang::prelude::Pubkey)<br/>StorageLive(_3)<br/>_3 = move (_5.1: std::vec::Vec&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;)<br/>StorageLive(_4)<br/>_4 = (_5.2: &amp;[u8])<br/>StorageDead(_5)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = &amp;_2<br/>_19 = deref_copy (*_9)<br/>_8 = &amp;(*_19)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>_13 = &amp;_3<br/>_12 = &amp;(*_13)<br/></td></tr><tr><td align="left">_11 = &lt;Vec&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as Deref&gt;::deref(move _12)</td></tr></table>>];
    bb2__0_19079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">_10 = &amp;(*_11)<br/>StorageDead(_12)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = &amp;_4<br/>_20 = deref_copy (*_15)<br/>_14 = &amp;(*_20)<br/></td></tr><tr><td align="left">_7 = program_entry(move _8, move _10, move _14)</td></tr></table>>];
    bb3__0_19079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">_21 = const true<br/>StorageDead(_14)<br/>StorageDead(_10)<br/>StorageDead(_8)<br/>_16 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _16)</td></tr></table>>];
    bb4__0_19079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>_17 = move ((_7 as Err).0: anchor_lang::prelude::ProgramError)<br/>StorageLive(_18)<br/>_18 = move _17<br/></td></tr><tr><td align="left">_0 = &lt;anchor_lang::prelude::ProgramError as Into&lt;u64&gt;&gt;::into(move _18)</td></tr></table>>];
    bb5__0_19079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_19079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">_0 = const _<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_19079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_19079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/></td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb9__0_19079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/>StorageDead(_2)<br/>_22 = discriminant(_7)<br/>StorageDead(_15)<br/>StorageDead(_13)<br/>StorageDead(_11)<br/>StorageDead(_9)<br/>_21 = const false<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb10__0_19079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">10 (cleanup)</td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb11__0_19079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">11 (cleanup)</td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb12__0_19079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">12 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb13__0_19079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">13 (cleanup)</td></tr><tr><td align="left" balign="left">_24 = discriminant(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_19079 -> bb1__0_19079 [label="return"];
    bb1__0_19079 -> bb2__0_19079 [label="return"];
    bb1__0_19079 -> bb11__0_19079 [label="unwind"];
    bb2__0_19079 -> bb3__0_19079 [label="return"];
    bb2__0_19079 -> bb11__0_19079 [label="unwind"];
    bb3__0_19079 -> bb6__0_19079 [label="0"];
    bb3__0_19079 -> bb4__0_19079 [label="1"];
    bb3__0_19079 -> bb5__0_19079 [label="otherwise"];
    bb4__0_19079 -> bb7__0_19079 [label="return"];
    bb4__0_19079 -> bb10__0_19079 [label="unwind"];
    bb6__0_19079 -> bb8__0_19079 [label=""];
    bb7__0_19079 -> bb8__0_19079 [label=""];
    bb8__0_19079 -> bb9__0_19079 [label="return"];
    bb8__0_19079 -> bb13__0_19079 [label="unwind"];
    bb10__0_19079 -> bb13__0_19079 [label="return"];
    bb11__0_19079 -> bb12__0_19079 [label="return"];
    bb13__0_19079 -> bb12__0_19079 [label=""];
}
