// MIR for `drift::initialize_spot_market` before PreCodegen

fn drift::initialize_spot_market(_1: anchor_lang::context::Context<'_, '_, '_, '_, admin::InitializeSpotMarket<'_>>, _2: u32, _3: u32, _4: u32, _5: state::oracle::OracleSource, _6: u32, _7: u32, _8: u32, _9: u32, _10: u32, _11: u32, _12: u32, _13: bool, _14: state::spot_market::AssetTier, _15: u64, _16: u64, _17: u64, _18: u64, _19: u32, _20: [u8; 32]) -> std::result::Result<(), anchor_lang::error::Error> {
    debug ctx => _1;
    debug optimal_utilization => _2;
    debug optimal_borrow_rate => _3;
    debug max_borrow_rate => _4;
    debug oracle_source => _5;
    debug initial_asset_weight => _6;
    debug maintenance_asset_weight => _7;
    debug initial_liability_weight => _8;
    debug maintenance_liability_weight => _9;
    debug imf_factor => _10;
    debug liquidator_fee => _11;
    debug if_liquidation_fee => _12;
    debug active_status => _13;
    debug asset_tier => _14;
    debug scale_initial_asset_weight_start => _15;
    debug withdraw_guard_threshold => _16;
    debug order_tick_size => _17;
    debug order_step_size => _18;
    debug if_total_factor => _19;
    debug name => _20;
    let mut _0: std::result::Result<(), anchor_lang::error::Error>;
    let mut _21: anchor_lang::context::Context<'_, '_, '_, '_, instructions::admin::InitializeSpotMarket<'_>>;
    let mut _22: u32;
    let mut _23: u32;
    let mut _24: u32;
    let mut _25: state::oracle::OracleSource;
    let mut _26: u32;
    let mut _27: u32;
    let mut _28: u32;
    let mut _29: u32;
    let mut _30: u32;
    let mut _31: u32;
    let mut _32: u32;
    let mut _33: bool;
    let mut _34: state::spot_market::AssetTier;
    let mut _35: u64;
    let mut _36: u64;
    let mut _37: u64;
    let mut _38: u64;
    let mut _39: u32;
    let mut _40: [u8; 32];

    bb0: {
        StorageLive(_21);
        _21 = move _1;
        StorageLive(_22);
        _22 = _2;
        StorageLive(_23);
        _23 = _3;
        StorageLive(_24);
        _24 = _4;
        StorageLive(_25);
        _25 = _5;
        StorageLive(_26);
        _26 = _6;
        StorageLive(_27);
        _27 = _7;
        StorageLive(_28);
        _28 = _8;
        StorageLive(_29);
        _29 = _9;
        StorageLive(_30);
        _30 = _10;
        StorageLive(_31);
        _31 = _11;
        StorageLive(_32);
        _32 = _12;
        StorageLive(_33);
        _33 = _13;
        StorageLive(_34);
        _34 = _14;
        StorageLive(_35);
        _35 = _15;
        StorageLive(_36);
        _36 = _16;
        StorageLive(_37);
        _37 = _17;
        StorageLive(_38);
        _38 = _18;
        StorageLive(_39);
        _39 = _19;
        StorageLive(_40);
        _40 = _20;
        _0 = admin::handle_initialize_spot_market(move _21, move _22, move _23, move _24, move _25, move _26, move _27, move _28, move _29, move _30, move _31, move _32, move _33, move _34, move _35, move _36, move _37, move _38, move _39, move _40) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_40);
        StorageDead(_39);
        StorageDead(_38);
        StorageDead(_37);
        StorageDead(_36);
        StorageDead(_35);
        StorageDead(_34);
        StorageDead(_33);
        StorageDead(_32);
        StorageDead(_31);
        StorageDead(_30);
        StorageDead(_29);
        StorageDead(_28);
        StorageDead(_27);
        StorageDead(_26);
        StorageDead(_25);
        StorageDead(_24);
        StorageDead(_23);
        StorageDead(_22);
        StorageDead(_21);
        return;
    }
}
