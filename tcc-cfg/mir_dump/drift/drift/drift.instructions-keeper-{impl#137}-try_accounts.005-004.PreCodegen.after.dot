digraph Mir_0_10489 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;keeper::ResolveBankruptcy&lt;'info&gt; as anchor_lang::Accounts&lt;'info, ResolveBankruptcyBumps&gt;&gt;::try_accounts(_1: &amp;ReErased anchor_lang::prelude::Pubkey, _2: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;], _3: &amp;ReErased [u8], _4: &amp;ReErased mut instructions::keeper::ResolveBankruptcyBumps, _5: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;) -&gt; std::result::Result&lt;instructions::keeper::ResolveBankruptcy&lt;ReErased&gt;, anchor_lang::error::Error&gt;<br align="left"/>let mut _6: &amp;ReErased [u8];<br align="left"/>let _7: u16;<br align="left"/>let mut _8: &lt;instructions::keeper::ResolveBankruptcy&lt;'info&gt; as anchor_lang::Accounts&lt;'info, instructions::keeper::ResolveBankruptcyBumps&gt;&gt;::try_accounts::__Args;<br align="left"/>let mut _9: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::ErrorCode&gt;, &lt;instructions::keeper::ResolveBankruptcy&lt;'info&gt; as anchor_lang::Accounts&lt;'info, instructions::keeper::ResolveBankruptcyBumps&gt;&gt;::try_accounts::__Args&gt;;<br align="left"/>let mut _10: std::result::Result&lt;&lt;instructions::keeper::ResolveBankruptcy&lt;'info&gt; as anchor_lang::Accounts&lt;'info, instructions::keeper::ResolveBankruptcyBumps&gt;&gt;::try_accounts::__Args, anchor_lang::error::ErrorCode&gt;;<br align="left"/>let mut _11: std::result::Result&lt;&lt;instructions::keeper::ResolveBankruptcy&lt;'info&gt; as anchor_lang::Accounts&lt;'info, instructions::keeper::ResolveBankruptcyBumps&gt;&gt;::try_accounts::__Args, std::io::Error&gt;;<br align="left"/>let mut _12: &amp;ReErased mut &amp;ReErased [u8];<br align="left"/>let mut _13: &amp;ReErased mut &amp;ReErased [u8];<br align="left"/>let mut _14: Closure(DefId(0:10490 ~ drift[d311]::instructions::keeper::{impl#137}::try_accounts::{closure#0}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((std::io::Error,)) -&gt; anchor_lang::error::ErrorCode, []), ()]);<br align="left"/>let mut _15: isize;<br align="left"/>let _16: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::ErrorCode&gt;;<br align="left"/>let mut _17: !;<br align="left"/>let mut _18: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::ErrorCode&gt;;<br align="left"/>let _19: &lt;instructions::keeper::ResolveBankruptcy&lt;'info&gt; as anchor_lang::Accounts&lt;'info, instructions::keeper::ResolveBankruptcyBumps&gt;&gt;::try_accounts::__Args;<br align="left"/>let _20: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _21: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;&gt;;<br align="left"/>let mut _22: std::result::Result&lt;std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _23: std::result::Result&lt;std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _24: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _25: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _26: &amp;ReErased [u8];<br align="left"/>let mut _27: &amp;ReErased mut instructions::keeper::ResolveBankruptcyBumps;<br align="left"/>let mut _28: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _29: Closure(DefId(0:10491 ~ drift[d311]::instructions::keeper::{impl#137}::try_accounts::{closure#1}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _30: isize;<br align="left"/>let _31: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _32: !;<br align="left"/>let mut _33: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _34: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let _35: anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _36: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, anchor_lang::prelude::Signer&lt;ReErased&gt;&gt;;<br align="left"/>let mut _37: std::result::Result&lt;anchor_lang::prelude::Signer&lt;ReErased&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _38: std::result::Result&lt;anchor_lang::prelude::Signer&lt;ReErased&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _39: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _40: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _41: &amp;ReErased [u8];<br align="left"/>let mut _42: &amp;ReErased mut instructions::keeper::ResolveBankruptcyBumps;<br align="left"/>let mut _43: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _44: Closure(DefId(0:10492 ~ drift[d311]::instructions::keeper::{impl#137}::try_accounts::{closure#2}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _45: isize;<br align="left"/>let _46: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _47: !;<br align="left"/>let mut _48: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _49: anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let _50: anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _51: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _52: std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _53: std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _54: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _55: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _56: &amp;ReErased [u8];<br align="left"/>let mut _57: &amp;ReErased mut instructions::keeper::ResolveBankruptcyBumps;<br align="left"/>let mut _58: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _59: Closure(DefId(0:10493 ~ drift[d311]::instructions::keeper::{impl#137}::try_accounts::{closure#3}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _60: isize;<br align="left"/>let _61: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _62: !;<br align="left"/>let mut _63: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _64: anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _65: anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _66: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;&gt;;<br align="left"/>let mut _67: std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _68: std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _69: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _70: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _71: &amp;ReErased [u8];<br align="left"/>let mut _72: &amp;ReErased mut instructions::keeper::ResolveBankruptcyBumps;<br align="left"/>let mut _73: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _74: Closure(DefId(0:10494 ~ drift[d311]::instructions::keeper::{impl#137}::try_accounts::{closure#4}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _75: isize;<br align="left"/>let _76: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _77: !;<br align="left"/>let mut _78: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _79: anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let _80: anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _81: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _82: std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _83: std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _84: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _85: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _86: &amp;ReErased [u8];<br align="left"/>let mut _87: &amp;ReErased mut instructions::keeper::ResolveBankruptcyBumps;<br align="left"/>let mut _88: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _89: Closure(DefId(0:10495 ~ drift[d311]::instructions::keeper::{impl#137}::try_accounts::{closure#5}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _90: isize;<br align="left"/>let _91: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _92: !;<br align="left"/>let mut _93: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _94: anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _95: anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _96: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;&gt;;<br align="left"/>let mut _97: std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _98: std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _99: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _100: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _101: &amp;ReErased [u8];<br align="left"/>let mut _102: &amp;ReErased mut instructions::keeper::ResolveBankruptcyBumps;<br align="left"/>let mut _103: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _104: Closure(DefId(0:10496 ~ drift[d311]::instructions::keeper::{impl#137}::try_accounts::{closure#6}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _105: isize;<br align="left"/>let _106: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _107: !;<br align="left"/>let mut _108: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _109: anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let _110: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _111: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;&gt;;<br align="left"/>let mut _112: std::result::Result&lt;std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _113: std::result::Result&lt;std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _114: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _115: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _116: &amp;ReErased [u8];<br align="left"/>let mut _117: &amp;ReErased mut instructions::keeper::ResolveBankruptcyBumps;<br align="left"/>let mut _118: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _119: Closure(DefId(0:10497 ~ drift[d311]::instructions::keeper::{impl#137}::try_accounts::{closure#7}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _120: isize;<br align="left"/>let _121: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _122: !;<br align="left"/>let mut _123: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _124: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let _125: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _126: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;&gt;;<br align="left"/>let mut _127: std::result::Result&lt;std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _128: std::result::Result&lt;std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _129: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _130: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _131: &amp;ReErased [u8];<br align="left"/>let mut _132: &amp;ReErased mut instructions::keeper::ResolveBankruptcyBumps;<br align="left"/>let mut _133: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _134: Closure(DefId(0:10498 ~ drift[d311]::instructions::keeper::{impl#137}::try_accounts::{closure#8}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _135: isize;<br align="left"/>let _136: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _137: !;<br align="left"/>let mut _138: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _139: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let _140: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _141: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _142: std::result::Result&lt;anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _143: std::result::Result&lt;anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _144: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _145: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _146: &amp;ReErased [u8];<br align="left"/>let mut _147: &amp;ReErased mut instructions::keeper::ResolveBankruptcyBumps;<br align="left"/>let mut _148: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _149: Closure(DefId(0:10499 ~ drift[d311]::instructions::keeper::{impl#137}::try_accounts::{closure#9}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _150: isize;<br align="left"/>let _151: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _152: !;<br align="left"/>let mut _153: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _154: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _155: anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let mut _156: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;&gt;;<br align="left"/>let mut _157: std::result::Result&lt;anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _158: std::result::Result&lt;anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _159: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _160: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _161: &amp;ReErased [u8];<br align="left"/>let mut _162: &amp;ReErased mut instructions::keeper::ResolveBankruptcyBumps;<br align="left"/>let mut _163: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _164: Closure(DefId(0:10500 ~ drift[d311]::instructions::keeper::{impl#137}::try_accounts::{closure#10}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _165: isize;<br align="left"/>let _166: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _167: !;<br align="left"/>let mut _168: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _169: anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let _170: ();<br align="left"/>let mut _171: bool;<br align="left"/>let mut _172: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _173: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _174: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _175: !;<br align="left"/>let mut _176: anchor_lang::error::Error;<br align="left"/>let mut _177: anchor_lang::error::Error;<br align="left"/>let mut _178: anchor_lang::error::ErrorCode;<br align="left"/>let _179: ();<br align="left"/>let mut _180: bool;<br align="left"/>let mut _181: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, bool&gt;;<br align="left"/>let mut _182: std::result::Result&lt;bool, anchor_lang::error::Error&gt;;<br align="left"/>let mut _183: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _184: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _185: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let _186: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _187: isize;<br align="left"/>let _188: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _189: !;<br align="left"/>let mut _190: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _191: bool;<br align="left"/>let mut _192: !;<br align="left"/>let mut _193: anchor_lang::error::Error;<br align="left"/>let mut _194: anchor_lang::error::Error;<br align="left"/>let mut _195: anchor_lang::error::ErrorCode;<br align="left"/>let _196: ();<br align="left"/>let mut _197: bool;<br align="left"/>let mut _198: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _199: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let _200: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _201: !;<br align="left"/>let mut _202: anchor_lang::error::Error;<br align="left"/>let mut _203: anchor_lang::error::Error;<br align="left"/>let mut _204: anchor_lang::error::ErrorCode;<br align="left"/>let _205: ();<br align="left"/>let mut _206: bool;<br align="left"/>let mut _207: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, bool&gt;;<br align="left"/>let mut _208: std::result::Result&lt;bool, anchor_lang::error::Error&gt;;<br align="left"/>let mut _209: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _210: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _211: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let _212: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _213: isize;<br align="left"/>let _214: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _215: !;<br align="left"/>let mut _216: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _217: bool;<br align="left"/>let mut _218: !;<br align="left"/>let mut _219: anchor_lang::error::Error;<br align="left"/>let mut _220: anchor_lang::error::Error;<br align="left"/>let mut _221: anchor_lang::error::ErrorCode;<br align="left"/>let _222: ();<br align="left"/>let mut _223: bool;<br align="left"/>let mut _224: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _225: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _226: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _227: !;<br align="left"/>let mut _228: anchor_lang::error::Error;<br align="left"/>let mut _229: anchor_lang::error::Error;<br align="left"/>let mut _230: anchor_lang::error::ErrorCode;<br align="left"/>let _231: ();<br align="left"/>let mut _232: bool;<br align="left"/>let mut _233: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _234: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let _235: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _236: !;<br align="left"/>let mut _237: anchor_lang::error::Error;<br align="left"/>let mut _238: anchor_lang::error::Error;<br align="left"/>let mut _239: anchor_lang::error::ErrorCode;<br align="left"/>let _240: ();<br align="left"/>let mut _241: bool;<br align="left"/>let mut _242: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, bool&gt;;<br align="left"/>let mut _243: std::result::Result&lt;bool, anchor_lang::error::Error&gt;;<br align="left"/>let mut _244: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _245: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _246: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let _247: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _248: isize;<br align="left"/>let _249: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _250: !;<br align="left"/>let mut _251: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _252: bool;<br align="left"/>let mut _253: !;<br align="left"/>let mut _254: anchor_lang::error::Error;<br align="left"/>let mut _255: anchor_lang::error::Error;<br align="left"/>let mut _256: anchor_lang::error::ErrorCode;<br align="left"/>let _257: anchor_lang::prelude::Pubkey;<br align="left"/>let _258: u8;<br align="left"/>let mut _259: (anchor_lang::prelude::Pubkey, u8);<br align="left"/>let mut _260: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let mut _261: &amp;ReErased [&amp;ReErased [u8]; 2_usize];<br align="left"/>let _262: &amp;ReErased [&amp;ReErased [u8]; 2_usize];<br align="left"/>let _263: [&amp;ReErased [u8]; 2_usize];<br align="left"/>let mut _264: &amp;ReErased [u8];<br align="left"/>let _265: &amp;ReErased [u8];<br align="left"/>let mut _266: &amp;ReErased [u8; 17_usize];<br align="left"/>let _267: &amp;ReErased [u8; 17_usize];<br align="left"/>let mut _268: &amp;ReErased [u8];<br align="left"/>let _269: &amp;ReErased [u8];<br align="left"/>let mut _270: &amp;ReErased [u8; 2_usize];<br align="left"/>let _271: [u8; 2_usize];<br align="left"/>let mut _272: u16;<br align="left"/>let mut _273: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _274: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _275: u8;<br align="left"/>let _276: ();<br align="left"/>let mut _277: bool;<br align="left"/>let mut _278: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _279: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _280: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _281: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _282: !;<br align="left"/>let mut _283: anchor_lang::error::Error;<br align="left"/>let mut _284: anchor_lang::error::Error;<br align="left"/>let mut _285: anchor_lang::error::Error;<br align="left"/>let mut _286: anchor_lang::error::ErrorCode;<br align="left"/>let mut _287: (anchor_lang::prelude::Pubkey, anchor_lang::prelude::Pubkey);<br align="left"/>let mut _288: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _289: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _290: anchor_lang::prelude::Pubkey;<br align="left"/>let _291: ();<br align="left"/>let mut _292: bool;<br align="left"/>let mut _293: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _294: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let _295: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _296: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _297: !;<br align="left"/>let mut _298: anchor_lang::error::Error;<br align="left"/>let mut _299: anchor_lang::error::Error;<br align="left"/>let mut _300: anchor_lang::error::ErrorCode;<br align="left"/>let _301: anchor_lang::prelude::Pubkey;<br align="left"/>let _302: u8;<br align="left"/>let mut _303: (anchor_lang::prelude::Pubkey, u8);<br align="left"/>let mut _304: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let mut _305: &amp;ReErased [&amp;ReErased [u8]; 2_usize];<br align="left"/>let _306: &amp;ReErased [&amp;ReErased [u8]; 2_usize];<br align="left"/>let _307: [&amp;ReErased [u8]; 2_usize];<br align="left"/>let mut _308: &amp;ReErased [u8];<br align="left"/>let _309: &amp;ReErased [u8];<br align="left"/>let mut _310: &amp;ReErased [u8; 20_usize];<br align="left"/>let _311: &amp;ReErased [u8; 20_usize];<br align="left"/>let mut _312: &amp;ReErased [u8];<br align="left"/>let _313: &amp;ReErased [u8];<br align="left"/>let mut _314: &amp;ReErased [u8; 2_usize];<br align="left"/>let _315: [u8; 2_usize];<br align="left"/>let mut _316: u16;<br align="left"/>let mut _317: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _318: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _319: u8;<br align="left"/>let _320: ();<br align="left"/>let mut _321: bool;<br align="left"/>let mut _322: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _323: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _324: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _325: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _326: !;<br align="left"/>let mut _327: anchor_lang::error::Error;<br align="left"/>let mut _328: anchor_lang::error::Error;<br align="left"/>let mut _329: anchor_lang::error::Error;<br align="left"/>let mut _330: anchor_lang::error::ErrorCode;<br align="left"/>let mut _331: (anchor_lang::prelude::Pubkey, anchor_lang::prelude::Pubkey);<br align="left"/>let mut _332: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _333: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _334: anchor_lang::prelude::Pubkey;<br align="left"/>let _335: ();<br align="left"/>let mut _336: bool;<br align="left"/>let mut _337: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _338: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let _339: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _340: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _341: !;<br align="left"/>let mut _342: anchor_lang::error::Error;<br align="left"/>let mut _343: anchor_lang::error::Error;<br align="left"/>let mut _344: anchor_lang::error::ErrorCode;<br align="left"/>let _345: ();<br align="left"/>let mut _346: bool;<br align="left"/>let mut _347: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _348: &amp;ReErased state::state::State;<br align="left"/>let mut _349: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _350: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _351: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _352: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _353: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _354: !;<br align="left"/>let mut _355: anchor_lang::error::Error;<br align="left"/>let mut _356: anchor_lang::error::Error;<br align="left"/>let mut _357: anchor_lang::error::ErrorCode;<br align="left"/>let mut _358: instructions::keeper::ResolveBankruptcy&lt;ReErased&gt;;<br align="left"/>let mut _359: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _360: anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _361: anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _362: anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _363: anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _364: anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _365: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _366: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _367: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _368: anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let mut _369: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _370: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _371: bool;<br align="left"/>let mut _372: bool;<br align="left"/>let mut _373: isize;<br align="left"/>let mut _374: isize;<br align="left"/>let mut _375: isize;<br align="left"/>let mut _376: isize;<br align="left"/>let mut _377: isize;<br align="left"/>let mut _378: isize;<br align="left"/>let mut _379: isize;<br align="left"/>let mut _380: isize;<br align="left"/>let mut _381: isize;<br align="left"/>let mut _382: isize;<br align="left"/>let mut _383: isize;<br align="left"/>let mut _384: isize;<br align="left"/>let mut _385: isize;<br align="left"/>let mut _386: isize;<br align="left"/>let mut _387: isize;<br align="left"/>let mut _388: isize;<br align="left"/>let mut _389: isize;<br align="left"/>let mut _390: isize;<br align="left"/>let mut _391: isize;<br align="left"/>let mut _392: isize;<br align="left"/>let mut _393: isize;<br align="left"/>let mut _394: isize;<br align="left"/>let mut _395: isize;<br align="left"/>let mut _396: isize;<br align="left"/>let mut _397: isize;<br align="left"/>let mut _398: isize;<br align="left"/>let mut _399: isize;<br align="left"/>let mut _400: isize;<br align="left"/>let mut _401: isize;<br align="left"/>let mut _402: isize;<br align="left"/>let mut _403: isize;<br align="left"/>let mut _404: isize;<br align="left"/>let mut _405: isize;<br align="left"/>let mut _406: isize;<br align="left"/>let mut _407: isize;<br align="left"/>let mut _408: isize;<br align="left"/>let mut _409: isize;<br align="left"/>let mut _410: isize;<br align="left"/>let mut _411: isize;<br align="left"/>let mut _412: isize;<br align="left"/>let mut _413: isize;<br align="left"/>let mut _414: isize;<br align="left"/>let mut _415: isize;<br align="left"/>let mut _416: isize;<br align="left"/>let mut _417: isize;<br align="left"/>let mut _418: isize;<br align="left"/>let mut _419: isize;<br align="left"/>let mut _420: isize;<br align="left"/>let mut _421: isize;<br align="left"/>let mut _422: isize;<br align="left"/>let mut _423: isize;<br align="left"/>let mut _424: isize;<br align="left"/>let mut _425: isize;<br align="left"/>let mut _426: isize;<br align="left"/>let mut _427: isize;<br align="left"/>let mut _428: isize;<br align="left"/>let mut _429: isize;<br align="left"/>let mut _430: isize;<br align="left"/>let mut _431: isize;<br align="left"/>let mut _432: isize;<br align="left"/>let mut _433: isize;<br align="left"/>let mut _434: isize;<br align="left"/>let mut _435: isize;<br align="left"/>let mut _436: isize;<br align="left"/>let mut _437: isize;<br align="left"/>let mut _438: isize;<br align="left"/>let mut _439: isize;<br align="left"/>let mut _440: isize;<br align="left"/>let mut _441: isize;<br align="left"/>let mut _442: isize;<br align="left"/>let mut _443: isize;<br align="left"/>let mut _444: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _445: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _446: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _447: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _448: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>debug __program_id =&gt; _1;<br align="left"/>debug __accounts =&gt; _2;<br align="left"/>debug __ix_data =&gt; _3;<br align="left"/>debug __bumps =&gt; _4;<br align="left"/>debug __reallocs =&gt; _5;<br align="left"/>debug __ix_data =&gt; _6;<br align="left"/>debug spot_market_index =&gt; _7;<br align="left"/>debug residual =&gt; _16;<br align="left"/>debug val =&gt; _19;<br align="left"/>debug state =&gt; _20;<br align="left"/>debug residual =&gt; _31;<br align="left"/>debug val =&gt; _34;<br align="left"/>debug authority =&gt; _35;<br align="left"/>debug residual =&gt; _46;<br align="left"/>debug val =&gt; _49;<br align="left"/>debug liquidator =&gt; _50;<br align="left"/>debug residual =&gt; _61;<br align="left"/>debug val =&gt; _64;<br align="left"/>debug liquidator_stats =&gt; _65;<br align="left"/>debug residual =&gt; _76;<br align="left"/>debug val =&gt; _79;<br align="left"/>debug user =&gt; _80;<br align="left"/>debug residual =&gt; _91;<br align="left"/>debug val =&gt; _94;<br align="left"/>debug user_stats =&gt; _95;<br align="left"/>debug residual =&gt; _106;<br align="left"/>debug val =&gt; _109;<br align="left"/>debug spot_market_vault =&gt; _110;<br align="left"/>debug residual =&gt; _121;<br align="left"/>debug val =&gt; _124;<br align="left"/>debug insurance_fund_vault =&gt; _125;<br align="left"/>debug residual =&gt; _136;<br align="left"/>debug val =&gt; _139;<br align="left"/>debug drift_signer =&gt; _140;<br align="left"/>debug residual =&gt; _151;<br align="left"/>debug val =&gt; _154;<br align="left"/>debug token_program =&gt; _155;<br align="left"/>debug residual =&gt; _166;<br align="left"/>debug val =&gt; _169;<br align="left"/>debug residual =&gt; _188;<br align="left"/>debug val =&gt; _191;<br align="left"/>debug residual =&gt; _214;<br align="left"/>debug val =&gt; _217;<br align="left"/>debug residual =&gt; _249;<br align="left"/>debug val =&gt; _252;<br align="left"/>debug __pda_address =&gt; _257;<br align="left"/>debug __bump =&gt; _258;<br align="left"/>debug __pda_address =&gt; _301;<br align="left"/>debug __bump =&gt; _302;<br align="left"/>>;
    bb0__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_372 = const false<br/>_371 = const false<br/>StorageLive(_6)<br/>_6 = _3<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>_13 = &amp;mut _6<br/>_12 = &amp;mut (*_13)<br/></td></tr><tr><td align="left">_11 = &lt;&lt;keeper::ResolveBankruptcy&lt;'info&gt; as anchor_lang::Accounts&lt;'info, ResolveBankruptcyBumps&gt;&gt;::try_accounts::__Args as BorshDeserialize&gt;::deserialize(move _12)</td></tr></table>>];
    bb1__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageLive(_14)<br/>_14 = {closure@programs/drift/src/instructions/keeper.rs:3416:10: 3416:18}<br/></td></tr><tr><td align="left">_10 = std::result::Result::&lt;&lt;keeper::ResolveBankruptcy&lt;'info&gt; as anchor_lang::Accounts&lt;'info, ResolveBankruptcyBumps&gt;&gt;::try_accounts::__Args, std::io::Error&gt;::map_err::&lt;anchor_lang::error::ErrorCode, {closure@programs/drift/src/instructions/keeper.rs:3416:10: 3416:18}&gt;(move _11, move _14)</td></tr></table>>];
    bb2__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">_9 = &lt;std::result::Result&lt;&lt;keeper::ResolveBankruptcy&lt;'info&gt; as anchor_lang::Accounts&lt;'info, ResolveBankruptcyBumps&gt;&gt;::try_accounts::__Args, anchor_lang::error::ErrorCode&gt; as Try&gt;::branch(move _10)</td></tr></table>>];
    bb3__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>_15 = discriminant(_9)<br/></td></tr><tr><td align="left">switchInt(move _15)</td></tr></table>>];
    bb4__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_19)<br/>_19 = move ((_9 as Continue).0: &lt;instructions::keeper::ResolveBankruptcy&lt;'info&gt; as anchor_lang::Accounts&lt;'info, instructions::keeper::ResolveBankruptcyBumps&gt;&gt;::try_accounts::__Args)<br/>_8 = move _19<br/>StorageDead(_19)<br/>StorageLive(_7)<br/>_7 = (_8.0: u16)<br/>StorageDead(_13)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_24 = &amp;(*_1)<br/>StorageLive(_25)<br/>_25 = &amp;mut (*_2)<br/>StorageLive(_26)<br/>_26 = &amp;(*_6)<br/>StorageLive(_27)<br/>_27 = &amp;mut (*_4)<br/>StorageLive(_28)<br/>_28 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_23 = &lt;Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt; as anchor_lang::Accounts&lt;'_, ResolveBankruptcyBumps&gt;&gt;::try_accounts(move _24, move _25, move _26, move _27, move _28)</td></tr></table>>];
    bb5__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_16)<br/>_16 = ((_9 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::ErrorCode&gt;)<br/>StorageLive(_18)<br/>_18 = _16<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;keeper::ResolveBankruptcy&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::ErrorCode&gt;&gt;&gt;::from_residual(move _18)</td></tr></table>>];
    bb7__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_16)<br/>StorageDead(_13)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/>StorageLive(_29)<br/>_29 = {closure@programs/drift/src/instructions/keeper.rs:3416:10: 3416:18}<br/></td></tr><tr><td align="left">_22 = std::result::Result::&lt;Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/keeper.rs:3416:10: 3416:18}&gt;(move _23, move _29)</td></tr></table>>];
    bb9__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">_21 = &lt;std::result::Result&lt;Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _22)</td></tr></table>>];
    bb10__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>_30 = discriminant(_21)<br/></td></tr><tr><td align="left">switchInt(move _30)</td></tr></table>>];
    bb11__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_34)<br/>_34 = move ((_21 as Continue).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_20 = move _34<br/>StorageDead(_34)<br/>_373 = discriminant(_21)<br/>StorageDead(_21)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>_39 = &amp;(*_1)<br/>StorageLive(_40)<br/>_40 = &amp;mut (*_2)<br/>StorageLive(_41)<br/>_41 = &amp;(*_6)<br/>StorageLive(_42)<br/>_42 = &amp;mut (*_4)<br/>StorageLive(_43)<br/>_43 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_38 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::Accounts&lt;'_, ResolveBankruptcyBumps&gt;&gt;::try_accounts(move _39, move _40, move _41, move _42, move _43)</td></tr></table>>];
    bb12__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_31)<br/>_31 = move ((_21 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_33)<br/>_33 = move _31<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;keeper::ResolveBankruptcy&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _33)</td></tr></table>>];
    bb13__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_31)<br/>_429 = discriminant(_21)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_42)<br/>StorageDead(_41)<br/>StorageDead(_40)<br/>StorageDead(_39)<br/>StorageLive(_44)<br/>_44 = {closure@programs/drift/src/instructions/keeper.rs:3416:10: 3416:18}<br/></td></tr><tr><td align="left">_37 = std::result::Result::&lt;anchor_lang::prelude::Signer&lt;'_&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/keeper.rs:3416:10: 3416:18}&gt;(move _38, move _44)</td></tr></table>>];
    bb15__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">_36 = &lt;std::result::Result&lt;anchor_lang::prelude::Signer&lt;'_&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _37)</td></tr></table>>];
    bb16__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>_45 = discriminant(_36)<br/></td></tr><tr><td align="left">switchInt(move _45)</td></tr></table>>];
    bb17__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_49)<br/>_49 = move ((_36 as Continue).0: anchor_lang::prelude::Signer&lt;'_&gt;)<br/>_35 = move _49<br/>StorageDead(_49)<br/>_375 = discriminant(_36)<br/>StorageDead(_36)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>_54 = &amp;(*_1)<br/>StorageLive(_55)<br/>_55 = &amp;mut (*_2)<br/>StorageLive(_56)<br/>_56 = &amp;(*_6)<br/>StorageLive(_57)<br/>_57 = &amp;mut (*_4)<br/>StorageLive(_58)<br/>_58 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_53 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt; as anchor_lang::Accounts&lt;'_, ResolveBankruptcyBumps&gt;&gt;::try_accounts(move _54, move _55, move _56, move _57, move _58)</td></tr></table>>];
    bb18__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_46)<br/>_46 = move ((_36 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_48)<br/>_48 = move _46<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;keeper::ResolveBankruptcy&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _48)</td></tr></table>>];
    bb19__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageDead(_46)<br/>_427 = discriminant(_36)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageDead(_57)<br/>StorageDead(_56)<br/>StorageDead(_55)<br/>StorageDead(_54)<br/>StorageLive(_59)<br/>_59 = {closure@programs/drift/src/instructions/keeper.rs:3416:10: 3416:18}<br/></td></tr><tr><td align="left">_52 = std::result::Result::&lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/keeper.rs:3416:10: 3416:18}&gt;(move _53, move _59)</td></tr></table>>];
    bb21__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">_51 = &lt;std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _52)</td></tr></table>>];
    bb22__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>_60 = discriminant(_51)<br/></td></tr><tr><td align="left">switchInt(move _60)</td></tr></table>>];
    bb23__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_64)<br/>_64 = move ((_51 as Continue).0: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/>_50 = move _64<br/>StorageDead(_64)<br/>_377 = discriminant(_51)<br/>StorageDead(_51)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>_69 = &amp;(*_1)<br/>StorageLive(_70)<br/>_70 = &amp;mut (*_2)<br/>StorageLive(_71)<br/>_71 = &amp;(*_6)<br/>StorageLive(_72)<br/>_72 = &amp;mut (*_4)<br/>StorageLive(_73)<br/>_73 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_68 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, UserStats&gt; as anchor_lang::Accounts&lt;'_, ResolveBankruptcyBumps&gt;&gt;::try_accounts(move _69, move _70, move _71, move _72, move _73)</td></tr></table>>];
    bb24__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_61)<br/>_61 = move ((_51 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_63)<br/>_63 = move _61<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;keeper::ResolveBankruptcy&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _63)</td></tr></table>>];
    bb25__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_61)<br/>_425 = discriminant(_51)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>StorageDead(_72)<br/>StorageDead(_71)<br/>StorageDead(_70)<br/>StorageDead(_69)<br/>StorageLive(_74)<br/>_74 = {closure@programs/drift/src/instructions/keeper.rs:3416:10: 3416:18}<br/></td></tr><tr><td align="left">_67 = std::result::Result::&lt;anchor_lang::prelude::AccountLoader&lt;'_, UserStats&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/keeper.rs:3416:10: 3416:18}&gt;(move _68, move _74)</td></tr></table>>];
    bb27__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageDead(_68)<br/></td></tr><tr><td align="left">_66 = &lt;std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;'_, UserStats&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _67)</td></tr></table>>];
    bb28__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>_75 = discriminant(_66)<br/></td></tr><tr><td align="left">switchInt(move _75)</td></tr></table>>];
    bb29__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_79)<br/>_79 = move ((_66 as Continue).0: anchor_lang::prelude::AccountLoader&lt;'_, state::user::UserStats&gt;)<br/>_65 = move _79<br/>StorageDead(_79)<br/>_379 = discriminant(_66)<br/>StorageDead(_66)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>_84 = &amp;(*_1)<br/>StorageLive(_85)<br/>_85 = &amp;mut (*_2)<br/>StorageLive(_86)<br/>_86 = &amp;(*_6)<br/>StorageLive(_87)<br/>_87 = &amp;mut (*_4)<br/>StorageLive(_88)<br/>_88 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_83 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt; as anchor_lang::Accounts&lt;'_, ResolveBankruptcyBumps&gt;&gt;::try_accounts(move _84, move _85, move _86, move _87, move _88)</td></tr></table>>];
    bb30__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_76)<br/>_76 = move ((_66 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_78)<br/>_78 = move _76<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;keeper::ResolveBankruptcy&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _78)</td></tr></table>>];
    bb31__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>StorageDead(_76)<br/>_423 = discriminant(_66)<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>StorageDead(_87)<br/>StorageDead(_86)<br/>StorageDead(_85)<br/>StorageDead(_84)<br/>StorageLive(_89)<br/>_89 = {closure@programs/drift/src/instructions/keeper.rs:3416:10: 3416:18}<br/></td></tr><tr><td align="left">_82 = std::result::Result::&lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/keeper.rs:3416:10: 3416:18}&gt;(move _83, move _89)</td></tr></table>>];
    bb33__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>StorageDead(_83)<br/></td></tr><tr><td align="left">_81 = &lt;std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _82)</td></tr></table>>];
    bb34__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>_90 = discriminant(_81)<br/></td></tr><tr><td align="left">switchInt(move _90)</td></tr></table>>];
    bb35__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_94)<br/>_94 = move ((_81 as Continue).0: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/>_80 = move _94<br/>StorageDead(_94)<br/>_381 = discriminant(_81)<br/>StorageDead(_81)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>_99 = &amp;(*_1)<br/>StorageLive(_100)<br/>_100 = &amp;mut (*_2)<br/>StorageLive(_101)<br/>_101 = &amp;(*_6)<br/>StorageLive(_102)<br/>_102 = &amp;mut (*_4)<br/>StorageLive(_103)<br/>_103 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_98 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, UserStats&gt; as anchor_lang::Accounts&lt;'_, ResolveBankruptcyBumps&gt;&gt;::try_accounts(move _99, move _100, move _101, move _102, move _103)</td></tr></table>>];
    bb36__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageLive(_91)<br/>_91 = move ((_81 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_93)<br/>_93 = move _91<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;keeper::ResolveBankruptcy&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _93)</td></tr></table>>];
    bb37__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageDead(_91)<br/>_421 = discriminant(_81)<br/>StorageDead(_81)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>StorageDead(_102)<br/>StorageDead(_101)<br/>StorageDead(_100)<br/>StorageDead(_99)<br/>StorageLive(_104)<br/>_104 = {closure@programs/drift/src/instructions/keeper.rs:3416:10: 3416:18}<br/></td></tr><tr><td align="left">_97 = std::result::Result::&lt;anchor_lang::prelude::AccountLoader&lt;'_, UserStats&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/keeper.rs:3416:10: 3416:18}&gt;(move _98, move _104)</td></tr></table>>];
    bb39__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/>StorageDead(_98)<br/></td></tr><tr><td align="left">_96 = &lt;std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;'_, UserStats&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _97)</td></tr></table>>];
    bb40__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>_105 = discriminant(_96)<br/></td></tr><tr><td align="left">switchInt(move _105)</td></tr></table>>];
    bb41__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageLive(_109)<br/>_109 = move ((_96 as Continue).0: anchor_lang::prelude::AccountLoader&lt;'_, state::user::UserStats&gt;)<br/>_95 = move _109<br/>StorageDead(_109)<br/>_383 = discriminant(_96)<br/>StorageDead(_96)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>_114 = &amp;(*_1)<br/>StorageLive(_115)<br/>_115 = &amp;mut (*_2)<br/>StorageLive(_116)<br/>_116 = &amp;(*_6)<br/>StorageLive(_117)<br/>_117 = &amp;mut (*_4)<br/>StorageLive(_118)<br/>_118 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_113 = &lt;Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt; as anchor_lang::Accounts&lt;'_, ResolveBankruptcyBumps&gt;&gt;::try_accounts(move _114, move _115, move _116, move _117, move _118)</td></tr></table>>];
    bb42__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageLive(_106)<br/>_106 = move ((_96 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_108)<br/>_108 = move _106<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;keeper::ResolveBankruptcy&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _108)</td></tr></table>>];
    bb43__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/>StorageDead(_106)<br/>_419 = discriminant(_96)<br/>StorageDead(_96)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>StorageDead(_117)<br/>StorageDead(_116)<br/>StorageDead(_115)<br/>StorageDead(_114)<br/>StorageLive(_119)<br/>_119 = {closure@programs/drift/src/instructions/keeper.rs:3416:10: 3416:18}<br/></td></tr><tr><td align="left">_112 = std::result::Result::&lt;Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/keeper.rs:3416:10: 3416:18}&gt;(move _113, move _119)</td></tr></table>>];
    bb45__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/>StorageDead(_113)<br/></td></tr><tr><td align="left">_111 = &lt;std::result::Result&lt;Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _112)</td></tr></table>>];
    bb46__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>_120 = discriminant(_111)<br/></td></tr><tr><td align="left">switchInt(move _120)</td></tr></table>>];
    bb47__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageLive(_124)<br/>_124 = move ((_111 as Continue).0: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_110 = move _124<br/>StorageDead(_124)<br/>_385 = discriminant(_111)<br/>StorageDead(_111)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>_129 = &amp;(*_1)<br/>StorageLive(_130)<br/>_130 = &amp;mut (*_2)<br/>StorageLive(_131)<br/>_131 = &amp;(*_6)<br/>StorageLive(_132)<br/>_132 = &amp;mut (*_4)<br/>StorageLive(_133)<br/>_133 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_128 = &lt;Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt; as anchor_lang::Accounts&lt;'_, ResolveBankruptcyBumps&gt;&gt;::try_accounts(move _129, move _130, move _131, move _132, move _133)</td></tr></table>>];
    bb48__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageLive(_121)<br/>_121 = move ((_111 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_123)<br/>_123 = move _121<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;keeper::ResolveBankruptcy&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _123)</td></tr></table>>];
    bb49__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/>StorageDead(_121)<br/>_417 = discriminant(_111)<br/>StorageDead(_111)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/>StorageDead(_132)<br/>StorageDead(_131)<br/>StorageDead(_130)<br/>StorageDead(_129)<br/>StorageLive(_134)<br/>_134 = {closure@programs/drift/src/instructions/keeper.rs:3416:10: 3416:18}<br/></td></tr><tr><td align="left">_127 = std::result::Result::&lt;Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/keeper.rs:3416:10: 3416:18}&gt;(move _128, move _134)</td></tr></table>>];
    bb51__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_134)<br/>StorageDead(_128)<br/></td></tr><tr><td align="left">_126 = &lt;std::result::Result&lt;Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _127)</td></tr></table>>];
    bb52__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/>_135 = discriminant(_126)<br/></td></tr><tr><td align="left">switchInt(move _135)</td></tr></table>>];
    bb53__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageLive(_139)<br/>_139 = move ((_126 as Continue).0: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_125 = move _139<br/>StorageDead(_139)<br/>_387 = discriminant(_126)<br/>StorageDead(_126)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>_144 = &amp;(*_1)<br/>StorageLive(_145)<br/>_145 = &amp;mut (*_2)<br/>StorageLive(_146)<br/>_146 = &amp;(*_6)<br/>StorageLive(_147)<br/>_147 = &amp;mut (*_4)<br/>StorageLive(_148)<br/>_148 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_143 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::Accounts&lt;'_, ResolveBankruptcyBumps&gt;&gt;::try_accounts(move _144, move _145, move _146, move _147, move _148)</td></tr></table>>];
    bb54__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageLive(_136)<br/>_136 = move ((_126 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_138)<br/>_138 = move _136<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;keeper::ResolveBankruptcy&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _138)</td></tr></table>>];
    bb55__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/>StorageDead(_136)<br/>_415 = discriminant(_126)<br/>StorageDead(_126)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb56__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_148)<br/>StorageDead(_147)<br/>StorageDead(_146)<br/>StorageDead(_145)<br/>StorageDead(_144)<br/>StorageLive(_149)<br/>_149 = {closure@programs/drift/src/instructions/keeper.rs:3416:10: 3416:18}<br/></td></tr><tr><td align="left">_142 = std::result::Result::&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/keeper.rs:3416:10: 3416:18}&gt;(move _143, move _149)</td></tr></table>>];
    bb57__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_149)<br/>StorageDead(_143)<br/></td></tr><tr><td align="left">_141 = &lt;std::result::Result&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _142)</td></tr></table>>];
    bb58__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_142)<br/>_150 = discriminant(_141)<br/></td></tr><tr><td align="left">switchInt(move _150)</td></tr></table>>];
    bb59__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageLive(_154)<br/>_154 = move ((_141 as Continue).0: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_140 = move _154<br/>StorageDead(_154)<br/>_389 = discriminant(_141)<br/>StorageDead(_141)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>_159 = &amp;(*_1)<br/>StorageLive(_160)<br/>_160 = &amp;mut (*_2)<br/>StorageLive(_161)<br/>_161 = &amp;(*_6)<br/>StorageLive(_162)<br/>_162 = &amp;mut (*_4)<br/>StorageLive(_163)<br/>_163 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_158 = &lt;anchor_lang::prelude::Interface&lt;'_, TokenInterface&gt; as anchor_lang::Accounts&lt;'_, ResolveBankruptcyBumps&gt;&gt;::try_accounts(move _159, move _160, move _161, move _162, move _163)</td></tr></table>>];
    bb60__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageLive(_151)<br/>_151 = move ((_141 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_153)<br/>_153 = move _151<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;keeper::ResolveBankruptcy&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _153)</td></tr></table>>];
    bb61__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_153)<br/>StorageDead(_151)<br/>_413 = discriminant(_141)<br/>StorageDead(_141)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_163)<br/>StorageDead(_162)<br/>StorageDead(_161)<br/>StorageDead(_160)<br/>StorageDead(_159)<br/>StorageLive(_164)<br/>_164 = {closure@programs/drift/src/instructions/keeper.rs:3416:10: 3416:18}<br/></td></tr><tr><td align="left">_157 = std::result::Result::&lt;anchor_lang::prelude::Interface&lt;'_, TokenInterface&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/keeper.rs:3416:10: 3416:18}&gt;(move _158, move _164)</td></tr></table>>];
    bb63__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_164)<br/>StorageDead(_158)<br/></td></tr><tr><td align="left">_156 = &lt;std::result::Result&lt;anchor_lang::prelude::Interface&lt;'_, TokenInterface&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _157)</td></tr></table>>];
    bb64__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_157)<br/>_165 = discriminant(_156)<br/></td></tr><tr><td align="left">switchInt(move _165)</td></tr></table>>];
    bb65__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageLive(_169)<br/>_169 = move ((_156 as Continue).0: anchor_lang::prelude::Interface&lt;'_, anchor_spl::token_interface::TokenInterface&gt;)<br/>_155 = move _169<br/>StorageDead(_169)<br/>_391 = discriminant(_156)<br/>StorageDead(_156)<br/>StorageLive(_170)<br/>StorageLive(_171)<br/>StorageLive(_172)<br/>StorageLive(_173)<br/>StorageLive(_174)<br/>_174 = &amp;_50<br/>_173 = &amp;(*_174)<br/></td></tr><tr><td align="left">_172 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt; as AsRef&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;::as_ref(move _173)</td></tr></table>>];
    bb66__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageLive(_166)<br/>_166 = move ((_156 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_168)<br/>_168 = move _166<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;keeper::ResolveBankruptcy&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _168)</td></tr></table>>];
    bb67__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_168)<br/>StorageDead(_166)<br/>_411 = discriminant(_156)<br/>StorageDead(_156)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_173)<br/>_171 = ((*_172).6: bool)<br/></td></tr><tr><td align="left">switchInt(move _171)</td></tr></table>>];
    bb69__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_174)<br/>StorageDead(_172)<br/>StorageLive(_176)<br/>StorageLive(_177)<br/>StorageLive(_178)<br/>_178 = ConstraintMut<br/></td></tr><tr><td align="left">_177 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _178)</td></tr></table>>];
    bb70__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_178)<br/></td></tr><tr><td align="left">_176 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _177, const &quot;liquidator&quot;)</td></tr></table>>];
    bb71__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_177)<br/>_0 = std::result::Result::&lt;keeper::ResolveBankruptcy&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _176)<br/>StorageDead(_176)<br/>StorageDead(_171)<br/>StorageDead(_170)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb72__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_174)<br/>StorageDead(_172)<br/>_170 = const ()<br/>StorageDead(_171)<br/>StorageDead(_170)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>StorageLive(_181)<br/>StorageLive(_182)<br/>StorageLive(_183)<br/>StorageLive(_184)<br/>_184 = &amp;_50<br/>_183 = &amp;(*_184)<br/>StorageLive(_185)<br/>StorageLive(_186)<br/>_186 = &amp;_35<br/>_185 = &amp;(*_186)<br/></td></tr><tr><td align="left">_182 = constraints::can_sign_for_user(move _183, move _185)</td></tr></table>>];
    bb73__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_185)<br/>StorageDead(_183)<br/></td></tr><tr><td align="left">_181 = &lt;std::result::Result&lt;bool, anchor_lang::error::Error&gt; as Try&gt;::branch(move _182)</td></tr></table>>];
    bb74__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_182)<br/>_187 = discriminant(_181)<br/></td></tr><tr><td align="left">switchInt(move _187)</td></tr></table>>];
    bb75__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageLive(_191)<br/>_191 = ((_181 as Continue).0: bool)<br/>_180 = _191<br/>StorageDead(_191)<br/></td></tr><tr><td align="left">switchInt(move _180)</td></tr></table>>];
    bb76__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageLive(_188)<br/>_188 = move ((_181 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_190)<br/>_190 = move _188<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;keeper::ResolveBankruptcy&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _190)</td></tr></table>>];
    bb77__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_190)<br/>StorageDead(_188)<br/>_409 = discriminant(_181)<br/>StorageDead(_186)<br/>StorageDead(_184)<br/>StorageDead(_181)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb78__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_195)<br/></td></tr><tr><td align="left">_193 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _194, const &quot;liquidator&quot;)</td></tr></table>>];
    bb79__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_194)<br/>_0 = std::result::Result::&lt;keeper::ResolveBankruptcy&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _193)<br/>StorageDead(_193)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb80__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_199)<br/>_197 = ((*_198).6: bool)<br/></td></tr><tr><td align="left">switchInt(move _197)</td></tr></table>>];
    bb81__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_200)<br/>StorageDead(_198)<br/>StorageLive(_202)<br/>StorageLive(_203)<br/>StorageLive(_204)<br/>_204 = ConstraintMut<br/></td></tr><tr><td align="left">_203 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _204)</td></tr></table>>];
    bb82__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_204)<br/></td></tr><tr><td align="left">_202 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _203, const &quot;liquidator_stats&quot;)</td></tr></table>>];
    bb83__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_203)<br/>_0 = std::result::Result::&lt;keeper::ResolveBankruptcy&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _202)<br/>StorageDead(_202)<br/>StorageDead(_197)<br/>StorageDead(_196)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb84__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_200)<br/>StorageDead(_198)<br/>_196 = const ()<br/>StorageDead(_197)<br/>StorageDead(_196)<br/>StorageLive(_205)<br/>StorageLive(_206)<br/>StorageLive(_207)<br/>StorageLive(_208)<br/>StorageLive(_209)<br/>StorageLive(_210)<br/>_210 = &amp;_50<br/>_209 = &amp;(*_210)<br/>StorageLive(_211)<br/>StorageLive(_212)<br/>_212 = &amp;_65<br/>_211 = &amp;(*_212)<br/></td></tr><tr><td align="left">_208 = constraints::is_stats_for_user(move _209, move _211)</td></tr></table>>];
    bb85__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_211)<br/>StorageDead(_209)<br/></td></tr><tr><td align="left">_207 = &lt;std::result::Result&lt;bool, anchor_lang::error::Error&gt; as Try&gt;::branch(move _208)</td></tr></table>>];
    bb86__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_208)<br/>_213 = discriminant(_207)<br/></td></tr><tr><td align="left">switchInt(move _213)</td></tr></table>>];
    bb87__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageLive(_217)<br/>_217 = ((_207 as Continue).0: bool)<br/>_206 = _217<br/>StorageDead(_217)<br/></td></tr><tr><td align="left">switchInt(move _206)</td></tr></table>>];
    bb88__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageLive(_214)<br/>_214 = move ((_207 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_216)<br/>_216 = move _214<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;keeper::ResolveBankruptcy&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _216)</td></tr></table>>];
    bb89__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_216)<br/>StorageDead(_214)<br/>_407 = discriminant(_207)<br/>StorageDead(_212)<br/>StorageDead(_210)<br/>StorageDead(_207)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb90__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_221)<br/></td></tr><tr><td align="left">_219 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _220, const &quot;liquidator_stats&quot;)</td></tr></table>>];
    bb91__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_220)<br/>_0 = std::result::Result::&lt;keeper::ResolveBankruptcy&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _219)<br/>StorageDead(_219)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb92__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_225)<br/>_223 = ((*_224).6: bool)<br/></td></tr><tr><td align="left">switchInt(move _223)</td></tr></table>>];
    bb93__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_226)<br/>StorageDead(_224)<br/>StorageLive(_228)<br/>StorageLive(_229)<br/>StorageLive(_230)<br/>_230 = ConstraintMut<br/></td></tr><tr><td align="left">_229 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _230)</td></tr></table>>];
    bb94__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_230)<br/></td></tr><tr><td align="left">_228 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _229, const &quot;user&quot;)</td></tr></table>>];
    bb95__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_229)<br/>_0 = std::result::Result::&lt;keeper::ResolveBankruptcy&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _228)<br/>StorageDead(_228)<br/>StorageDead(_223)<br/>StorageDead(_222)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb96__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_226)<br/>StorageDead(_224)<br/>_222 = const ()<br/>StorageDead(_223)<br/>StorageDead(_222)<br/>StorageLive(_231)<br/>StorageLive(_232)<br/>StorageLive(_233)<br/>StorageLive(_234)<br/>StorageLive(_235)<br/>_235 = &amp;_95<br/>_234 = &amp;(*_235)<br/></td></tr><tr><td align="left">_233 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, UserStats&gt; as AsRef&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;::as_ref(move _234)</td></tr></table>>];
    bb97__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_234)<br/>_232 = ((*_233).6: bool)<br/></td></tr><tr><td align="left">switchInt(move _232)</td></tr></table>>];
    bb98__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_235)<br/>StorageDead(_233)<br/>StorageLive(_237)<br/>StorageLive(_238)<br/>StorageLive(_239)<br/>_239 = ConstraintMut<br/></td></tr><tr><td align="left">_238 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _239)</td></tr></table>>];
    bb99__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageDead(_239)<br/></td></tr><tr><td align="left">_237 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _238, const &quot;user_stats&quot;)</td></tr></table>>];
    bb100__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_238)<br/>_0 = std::result::Result::&lt;keeper::ResolveBankruptcy&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _237)<br/>StorageDead(_237)<br/>StorageDead(_232)<br/>StorageDead(_231)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb101__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_235)<br/>StorageDead(_233)<br/>_231 = const ()<br/>StorageDead(_232)<br/>StorageDead(_231)<br/>StorageLive(_240)<br/>StorageLive(_241)<br/>StorageLive(_242)<br/>StorageLive(_243)<br/>StorageLive(_244)<br/>StorageLive(_245)<br/>_245 = &amp;_80<br/>_244 = &amp;(*_245)<br/>StorageLive(_246)<br/>StorageLive(_247)<br/>_247 = &amp;_95<br/>_246 = &amp;(*_247)<br/></td></tr><tr><td align="left">_243 = constraints::is_stats_for_user(move _244, move _246)</td></tr></table>>];
    bb102__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_246)<br/>StorageDead(_244)<br/></td></tr><tr><td align="left">_242 = &lt;std::result::Result&lt;bool, anchor_lang::error::Error&gt; as Try&gt;::branch(move _243)</td></tr></table>>];
    bb103__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_243)<br/>_248 = discriminant(_242)<br/></td></tr><tr><td align="left">switchInt(move _248)</td></tr></table>>];
    bb104__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageLive(_252)<br/>_252 = ((_242 as Continue).0: bool)<br/>_241 = _252<br/>StorageDead(_252)<br/></td></tr><tr><td align="left">switchInt(move _241)</td></tr></table>>];
    bb105__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageLive(_249)<br/>_249 = move ((_242 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_251)<br/>_251 = move _249<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;keeper::ResolveBankruptcy&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _251)</td></tr></table>>];
    bb106__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_251)<br/>StorageDead(_249)<br/>_405 = discriminant(_242)<br/>StorageDead(_247)<br/>StorageDead(_245)<br/>StorageDead(_242)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb107__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_256)<br/></td></tr><tr><td align="left">_254 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _255, const &quot;user_stats&quot;)</td></tr></table>>];
    bb108__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageDead(_255)<br/>_0 = std::result::Result::&lt;keeper::ResolveBankruptcy&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _254)<br/>StorageDead(_254)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb109__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">_264 = &amp;(*_265)<br/>StorageDead(_266)<br/>StorageLive(_268)<br/>StorageLive(_269)<br/>StorageLive(_270)<br/>StorageLive(_271)<br/>StorageLive(_272)<br/>_272 = _7<br/></td></tr><tr><td align="left">_271 = core::num::&lt;impl u16&gt;::to_le_bytes(move _272)</td></tr></table>>];
    bb110__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">_270 = &amp;_271<br/>StorageDead(_272)<br/></td></tr><tr><td align="left">_269 = &lt;[u8; 2] as AsRef&lt;[u8]&gt;&gt;::as_ref(move _270)</td></tr></table>>];
    bb111__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">_268 = &amp;(*_269)<br/>StorageDead(_270)<br/>_263 = [move _264, move _268]<br/>StorageDead(_268)<br/>StorageDead(_264)<br/>_262 = &amp;_263<br/>_261 = &amp;(*_262)<br/>_260 = move _261 as &amp;[&amp;[u8]] (PointerCoercion(Unsize))<br/>StorageDead(_261)<br/>StorageLive(_273)<br/>StorageLive(_274)<br/>_274 = &amp;_1<br/>_369 = deref_copy (*_274)<br/>_273 = &amp;(*_369)<br/></td></tr><tr><td align="left">_259 = anchor_lang::prelude::Pubkey::find_program_address(move _260, move _273)</td></tr></table>>];
    bb112__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageDead(_273)<br/>StorageDead(_260)<br/>StorageLive(_257)<br/>_257 = (_259.0: anchor_lang::prelude::Pubkey)<br/>StorageLive(_258)<br/>_258 = (_259.1: u8)<br/>StorageDead(_274)<br/>StorageDead(_271)<br/>StorageDead(_269)<br/>StorageDead(_267)<br/>StorageDead(_265)<br/>StorageDead(_263)<br/>StorageDead(_262)<br/>StorageDead(_259)<br/>StorageLive(_275)<br/>_275 = _258<br/>((*_4).0: u8) = move _275<br/>StorageDead(_275)<br/>StorageLive(_276)<br/>StorageLive(_277)<br/>StorageLive(_278)<br/>StorageLive(_279)<br/>StorageLive(_280)<br/>_444 = (((_110.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_280 = &amp;(*_444)<br/></td></tr><tr><td align="left">_279 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as anchor_lang::Key&gt;::key(move _280)</td></tr></table>>];
    bb113__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">_278 = &amp;_279<br/>StorageDead(_280)<br/>StorageLive(_281)<br/>_281 = &amp;_257<br/></td></tr><tr><td align="left">_277 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _278, move _281)</td></tr></table>>];
    bb114__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left">switchInt(move _277)</td></tr></table>>];
    bb115__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageDead(_281)<br/>StorageDead(_279)<br/>StorageDead(_278)<br/>StorageLive(_283)<br/>StorageLive(_284)<br/>StorageLive(_285)<br/>StorageLive(_286)<br/>_286 = ConstraintSeeds<br/></td></tr><tr><td align="left">_285 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _286)</td></tr></table>>];
    bb116__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_286)<br/></td></tr><tr><td align="left">_284 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _285, const &quot;spot_market_vault&quot;)</td></tr></table>>];
    bb117__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">_372 = const true<br/>StorageDead(_285)<br/>StorageLive(_287)<br/>StorageLive(_288)<br/>StorageLive(_289)<br/>_445 = (((_110.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_289 = &amp;(*_445)<br/></td></tr><tr><td align="left">_288 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as anchor_lang::Key&gt;::key(move _289)</td></tr></table>>];
    bb118__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageDead(_289)<br/>StorageLive(_290)<br/>_290 = _257<br/>_287 = (move _288, move _290)<br/>StorageDead(_290)<br/>StorageDead(_288)<br/>_372 = const false<br/></td></tr><tr><td align="left">_283 = anchor_lang::error::Error::with_pubkeys(move _284, move _287)</td></tr></table>>];
    bb119__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageDead(_287)<br/>_372 = const false<br/>StorageDead(_284)<br/>_0 = std::result::Result::&lt;keeper::ResolveBankruptcy&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _283)<br/>StorageDead(_283)<br/>StorageDead(_277)<br/>StorageDead(_276)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb120__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageDead(_281)<br/>StorageDead(_279)<br/>StorageDead(_278)<br/>_276 = const ()<br/>StorageDead(_277)<br/>StorageDead(_276)<br/>StorageLive(_291)<br/>StorageLive(_292)<br/>StorageLive(_293)<br/>StorageLive(_294)<br/>StorageLive(_295)<br/>StorageLive(_296)<br/>_296 = &amp;_110<br/></td></tr><tr><td align="left">_295 = &lt;Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt; as AsRef&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;&gt;::as_ref(move _296)</td></tr></table>>];
    bb121__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">_294 = &amp;(*_295)<br/>StorageDead(_296)<br/></td></tr><tr><td align="left">_293 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as AsRef&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;::as_ref(move _294)</td></tr></table>>];
    bb122__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageDead(_294)<br/>_292 = ((*_293).6: bool)<br/></td></tr><tr><td align="left">switchInt(move _292)</td></tr></table>>];
    bb123__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageDead(_295)<br/>StorageDead(_293)<br/>StorageLive(_298)<br/>StorageLive(_299)<br/>StorageLive(_300)<br/>_300 = ConstraintMut<br/></td></tr><tr><td align="left">_299 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _300)</td></tr></table>>];
    bb124__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageDead(_300)<br/></td></tr><tr><td align="left">_298 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _299, const &quot;spot_market_vault&quot;)</td></tr></table>>];
    bb125__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageDead(_299)<br/>_0 = std::result::Result::&lt;keeper::ResolveBankruptcy&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _298)<br/>StorageDead(_298)<br/>StorageDead(_292)<br/>StorageDead(_291)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb126__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageDead(_295)<br/>StorageDead(_293)<br/>_291 = const ()<br/>StorageDead(_292)<br/>StorageDead(_291)<br/>StorageLive(_303)<br/>StorageLive(_304)<br/>StorageLive(_305)<br/>StorageLive(_306)<br/>StorageLive(_307)<br/>StorageLive(_308)<br/>StorageLive(_309)<br/>StorageLive(_310)<br/>StorageLive(_311)<br/>_311 = const b&quot;insurance_fund_vault&quot;<br/>_310 = &amp;(*_311)<br/></td></tr><tr><td align="left">_309 = &lt;[u8; 20] as AsRef&lt;[u8]&gt;&gt;::as_ref(move _310)</td></tr></table>>];
    bb127__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">_308 = &amp;(*_309)<br/>StorageDead(_310)<br/>StorageLive(_312)<br/>StorageLive(_313)<br/>StorageLive(_314)<br/>StorageLive(_315)<br/>StorageLive(_316)<br/>_316 = _7<br/></td></tr><tr><td align="left">_315 = core::num::&lt;impl u16&gt;::to_le_bytes(move _316)</td></tr></table>>];
    bb128__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">_314 = &amp;_315<br/>StorageDead(_316)<br/></td></tr><tr><td align="left">_313 = &lt;[u8; 2] as AsRef&lt;[u8]&gt;&gt;::as_ref(move _314)</td></tr></table>>];
    bb129__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">_312 = &amp;(*_313)<br/>StorageDead(_314)<br/>_307 = [move _308, move _312]<br/>StorageDead(_312)<br/>StorageDead(_308)<br/>_306 = &amp;_307<br/>_305 = &amp;(*_306)<br/>_304 = move _305 as &amp;[&amp;[u8]] (PointerCoercion(Unsize))<br/>StorageDead(_305)<br/>StorageLive(_317)<br/>StorageLive(_318)<br/>_318 = &amp;_1<br/>_370 = deref_copy (*_318)<br/>_317 = &amp;(*_370)<br/></td></tr><tr><td align="left">_303 = anchor_lang::prelude::Pubkey::find_program_address(move _304, move _317)</td></tr></table>>];
    bb130__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageDead(_317)<br/>StorageDead(_304)<br/>StorageLive(_301)<br/>_301 = (_303.0: anchor_lang::prelude::Pubkey)<br/>StorageLive(_302)<br/>_302 = (_303.1: u8)<br/>StorageDead(_318)<br/>StorageDead(_315)<br/>StorageDead(_313)<br/>StorageDead(_311)<br/>StorageDead(_309)<br/>StorageDead(_307)<br/>StorageDead(_306)<br/>StorageDead(_303)<br/>StorageLive(_319)<br/>_319 = _302<br/>((*_4).1: u8) = move _319<br/>StorageDead(_319)<br/>StorageLive(_320)<br/>StorageLive(_321)<br/>StorageLive(_322)<br/>StorageLive(_323)<br/>StorageLive(_324)<br/>_446 = (((_125.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_324 = &amp;(*_446)<br/></td></tr><tr><td align="left">_323 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as anchor_lang::Key&gt;::key(move _324)</td></tr></table>>];
    bb131__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">_322 = &amp;_323<br/>StorageDead(_324)<br/>StorageLive(_325)<br/>_325 = &amp;_301<br/></td></tr><tr><td align="left">_321 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _322, move _325)</td></tr></table>>];
    bb132__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left">switchInt(move _321)</td></tr></table>>];
    bb133__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageDead(_325)<br/>StorageDead(_323)<br/>StorageDead(_322)<br/>StorageLive(_327)<br/>StorageLive(_328)<br/>StorageLive(_329)<br/>StorageLive(_330)<br/>_330 = ConstraintSeeds<br/></td></tr><tr><td align="left">_329 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _330)</td></tr></table>>];
    bb134__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageDead(_330)<br/></td></tr><tr><td align="left">_328 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _329, const &quot;insurance_fund_vault&quot;)</td></tr></table>>];
    bb135__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">_371 = const true<br/>StorageDead(_329)<br/>StorageLive(_331)<br/>StorageLive(_332)<br/>StorageLive(_333)<br/>_447 = (((_125.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_333 = &amp;(*_447)<br/></td></tr><tr><td align="left">_332 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as anchor_lang::Key&gt;::key(move _333)</td></tr></table>>];
    bb136__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageDead(_333)<br/>StorageLive(_334)<br/>_334 = _301<br/>_331 = (move _332, move _334)<br/>StorageDead(_334)<br/>StorageDead(_332)<br/>_371 = const false<br/></td></tr><tr><td align="left">_327 = anchor_lang::error::Error::with_pubkeys(move _328, move _331)</td></tr></table>>];
    bb137__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">StorageDead(_331)<br/>_371 = const false<br/>StorageDead(_328)<br/>_0 = std::result::Result::&lt;keeper::ResolveBankruptcy&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _327)<br/>StorageDead(_327)<br/>StorageDead(_321)<br/>StorageDead(_320)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb138__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">StorageDead(_325)<br/>StorageDead(_323)<br/>StorageDead(_322)<br/>_320 = const ()<br/>StorageDead(_321)<br/>StorageDead(_320)<br/>StorageLive(_335)<br/>StorageLive(_336)<br/>StorageLive(_337)<br/>StorageLive(_338)<br/>StorageLive(_339)<br/>StorageLive(_340)<br/>_340 = &amp;_125<br/></td></tr><tr><td align="left">_339 = &lt;Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt; as AsRef&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;&gt;::as_ref(move _340)</td></tr></table>>];
    bb139__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">_338 = &amp;(*_339)<br/>StorageDead(_340)<br/></td></tr><tr><td align="left">_337 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as AsRef&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;::as_ref(move _338)</td></tr></table>>];
    bb140__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">StorageDead(_338)<br/>_336 = ((*_337).6: bool)<br/></td></tr><tr><td align="left">switchInt(move _336)</td></tr></table>>];
    bb141__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">StorageDead(_339)<br/>StorageDead(_337)<br/>StorageLive(_342)<br/>StorageLive(_343)<br/>StorageLive(_344)<br/>_344 = ConstraintMut<br/></td></tr><tr><td align="left">_343 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _344)</td></tr></table>>];
    bb142__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageDead(_344)<br/></td></tr><tr><td align="left">_342 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _343, const &quot;insurance_fund_vault&quot;)</td></tr></table>>];
    bb143__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageDead(_343)<br/>_0 = std::result::Result::&lt;keeper::ResolveBankruptcy&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _342)<br/>StorageDead(_342)<br/>StorageDead(_336)<br/>StorageDead(_335)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb144__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">StorageDead(_339)<br/>StorageDead(_337)<br/>_335 = const ()<br/>StorageDead(_336)<br/>StorageDead(_335)<br/>StorageLive(_345)<br/>StorageLive(_346)<br/>StorageLive(_347)<br/>StorageLive(_348)<br/>StorageLive(_349)<br/>_448 = (((_20.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_349 = &amp;(*_448)<br/></td></tr><tr><td align="left">_348 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _349)</td></tr></table>>];
    bb145__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageDead(_349)<br/>_347 = &amp;((*_348).3: anchor_lang::prelude::Pubkey)<br/>StorageLive(_350)<br/>StorageLive(_351)<br/>StorageLive(_352)<br/>StorageLive(_353)<br/>_353 = &amp;_140<br/></td></tr><tr><td align="left">_352 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::Key&gt;::key(move _353)</td></tr></table>>];
    bb146__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">StorageDead(_353)<br/>_351 = &amp;_352<br/>_350 = &amp;(*_351)<br/></td></tr><tr><td align="left">_346 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _347, move _350)</td></tr></table>>];
    bb147__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left">switchInt(move _346)</td></tr></table>>];
    bb148__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left" balign="left">StorageDead(_350)<br/>StorageDead(_347)<br/>StorageDead(_352)<br/>StorageDead(_351)<br/>StorageDead(_348)<br/>_345 = const ()<br/>StorageDead(_346)<br/>StorageDead(_345)<br/>StorageLive(_358)<br/>StorageLive(_359)<br/>_359 = move _20<br/>StorageLive(_360)<br/>_360 = move _35<br/>StorageLive(_361)<br/>_361 = move _50<br/>StorageLive(_362)<br/>_362 = move _65<br/>StorageLive(_363)<br/>_363 = move _80<br/>StorageLive(_364)<br/>_364 = move _95<br/>StorageLive(_365)<br/>_365 = move _110<br/>StorageLive(_366)<br/>_366 = move _125<br/>StorageLive(_367)<br/>_367 = move _140<br/>StorageLive(_368)<br/>_368 = move _155<br/>_358 = keeper::ResolveBankruptcy::&lt;'_&gt; { state: move _359, authority: move _360, liquidator: move _361, liquidator_stats: move _362, user: move _363, user_stats: move _364, spot_market_vault: move _365, insurance_fund_vault: move _366, drift_signer: move _367, token_program: move _368 }<br/>StorageDead(_368)<br/>StorageDead(_367)<br/>StorageDead(_366)<br/>StorageDead(_365)<br/>StorageDead(_364)<br/>StorageDead(_363)<br/>StorageDead(_362)<br/>StorageDead(_361)<br/>StorageDead(_360)<br/>StorageDead(_359)<br/>_0 = std::result::Result::&lt;keeper::ResolveBankruptcy&lt;'_&gt;, anchor_lang::error::Error&gt;::Ok(move _358)<br/>StorageDead(_358)<br/>StorageDead(_302)<br/>StorageDead(_301)<br/>StorageDead(_258)<br/>StorageDead(_257)<br/>StorageDead(_155)<br/>StorageDead(_140)<br/>StorageDead(_125)<br/>StorageDead(_110)<br/>StorageDead(_95)<br/>StorageDead(_80)<br/>StorageDead(_65)<br/>StorageDead(_50)<br/>StorageDead(_35)<br/>StorageDead(_20)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb149__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">149</td></tr><tr><td align="left" balign="left">StorageDead(_350)<br/>StorageDead(_347)<br/>StorageDead(_352)<br/>StorageDead(_351)<br/>StorageDead(_348)<br/>StorageLive(_355)<br/>StorageLive(_356)<br/>StorageLive(_357)<br/>_357 = ConstraintRaw<br/></td></tr><tr><td align="left">_356 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _357)</td></tr></table>>];
    bb150__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">150</td></tr><tr><td align="left" balign="left">StorageDead(_357)<br/></td></tr><tr><td align="left">_355 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _356, const &quot;drift_signer&quot;)</td></tr></table>>];
    bb151__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">151</td></tr><tr><td align="left" balign="left">StorageDead(_356)<br/>_0 = std::result::Result::&lt;keeper::ResolveBankruptcy&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _355)<br/>StorageDead(_355)<br/>StorageDead(_346)<br/>StorageDead(_345)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb152__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">152</td></tr><tr><td align="left" balign="left">StorageDead(_302)<br/>StorageDead(_301)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb153__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">153</td></tr><tr><td align="left" balign="left">StorageDead(_258)<br/>StorageDead(_257)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb154__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">154</td></tr><tr><td align="left" balign="left">StorageDead(_241)<br/>StorageDead(_240)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb155__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">155</td></tr><tr><td align="left" balign="left">StorageDead(_206)<br/>StorageDead(_205)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb156__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">156</td></tr><tr><td align="left" balign="left">StorageDead(_180)<br/>StorageDead(_179)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb157__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">157</td></tr><tr><td align="left" balign="left">StorageDead(_155)<br/></td></tr><tr><td align="left">drop(_140)</td></tr></table>>];
    bb158__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">158</td></tr><tr><td align="left" balign="left">StorageDead(_140)<br/></td></tr><tr><td align="left">drop(_125)</td></tr></table>>];
    bb159__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">159</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/></td></tr><tr><td align="left">drop(_110)</td></tr></table>>];
    bb160__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">160</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb161__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">161</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb162__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">162</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb163__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">163</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb164__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">164</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb165__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">165</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/></td></tr><tr><td align="left">drop(_20)</td></tr></table>>];
    bb166__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">166</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb167__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">167</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb168__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">168</td></tr><tr><td align="left">return</td></tr></table>>];
    bb169__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">169 (cleanup)</td></tr><tr><td align="left">drop(_140)</td></tr></table>>];
    bb170__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">170 (cleanup)</td></tr><tr><td align="left">drop(_125)</td></tr></table>>];
    bb171__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">171 (cleanup)</td></tr><tr><td align="left">drop(_110)</td></tr></table>>];
    bb172__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">172 (cleanup)</td></tr><tr><td align="left">drop(_20)</td></tr></table>>];
    bb173__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">173 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb174__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">174</td></tr><tr><td align="left" balign="left">_393 = discriminant(_181)<br/>StorageDead(_186)<br/>StorageDead(_184)<br/>StorageDead(_181)<br/>_179 = const ()<br/>StorageDead(_180)<br/>StorageDead(_179)<br/>StorageLive(_196)<br/>StorageLive(_197)<br/>StorageLive(_198)<br/>StorageLive(_199)<br/>StorageLive(_200)<br/>_200 = &amp;_65<br/>_199 = &amp;(*_200)<br/></td></tr><tr><td align="left">_198 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, UserStats&gt; as AsRef&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;::as_ref(move _199)</td></tr></table>>];
    bb175__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">175</td></tr><tr><td align="left" balign="left">_395 = discriminant(_181)<br/>StorageDead(_186)<br/>StorageDead(_184)<br/>StorageDead(_181)<br/>StorageLive(_193)<br/>StorageLive(_194)<br/>StorageLive(_195)<br/>_195 = ConstraintRaw<br/></td></tr><tr><td align="left">_194 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _195)</td></tr></table>>];
    bb176__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">176</td></tr><tr><td align="left" balign="left">_397 = discriminant(_207)<br/>StorageDead(_212)<br/>StorageDead(_210)<br/>StorageDead(_207)<br/>_205 = const ()<br/>StorageDead(_206)<br/>StorageDead(_205)<br/>StorageLive(_222)<br/>StorageLive(_223)<br/>StorageLive(_224)<br/>StorageLive(_225)<br/>StorageLive(_226)<br/>_226 = &amp;_80<br/>_225 = &amp;(*_226)<br/></td></tr><tr><td align="left">_224 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt; as AsRef&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;::as_ref(move _225)</td></tr></table>>];
    bb177__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">177</td></tr><tr><td align="left" balign="left">_399 = discriminant(_207)<br/>StorageDead(_212)<br/>StorageDead(_210)<br/>StorageDead(_207)<br/>StorageLive(_219)<br/>StorageLive(_220)<br/>StorageLive(_221)<br/>_221 = ConstraintRaw<br/></td></tr><tr><td align="left">_220 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _221)</td></tr></table>>];
    bb178__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">178</td></tr><tr><td align="left" balign="left">_401 = discriminant(_242)<br/>StorageDead(_247)<br/>StorageDead(_245)<br/>StorageDead(_242)<br/>_240 = const ()<br/>StorageDead(_241)<br/>StorageDead(_240)<br/>StorageLive(_259)<br/>StorageLive(_260)<br/>StorageLive(_261)<br/>StorageLive(_262)<br/>StorageLive(_263)<br/>StorageLive(_264)<br/>StorageLive(_265)<br/>StorageLive(_266)<br/>StorageLive(_267)<br/>_267 = const b&quot;spot_market_vault&quot;<br/>_266 = &amp;(*_267)<br/></td></tr><tr><td align="left">_265 = &lt;[u8; 17] as AsRef&lt;[u8]&gt;&gt;::as_ref(move _266)</td></tr></table>>];
    bb179__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">179</td></tr><tr><td align="left" balign="left">_403 = discriminant(_242)<br/>StorageDead(_247)<br/>StorageDead(_245)<br/>StorageDead(_242)<br/>StorageLive(_254)<br/>StorageLive(_255)<br/>StorageLive(_256)<br/>_256 = ConstraintRaw<br/></td></tr><tr><td align="left">_255 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _256)</td></tr></table>>];
    bb180__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">180 (cleanup)</td></tr><tr><td align="left">drop(_328)</td></tr></table>>];
    bb181__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">181 (cleanup)</td></tr><tr><td align="left">switchInt(_371)</td></tr></table>>];
    bb182__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">182 (cleanup)</td></tr><tr><td align="left">drop(_284)</td></tr></table>>];
    bb183__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">183 (cleanup)</td></tr><tr><td align="left">switchInt(_372)</td></tr></table>>];
    bb184__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">184 (cleanup)</td></tr><tr><td align="left" balign="left">_431 = discriminant(_242)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb185__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">185 (cleanup)</td></tr><tr><td align="left" balign="left">_432 = discriminant(_207)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb186__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">186 (cleanup)</td></tr><tr><td align="left" balign="left">_433 = discriminant(_181)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb187__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">187 (cleanup)</td></tr><tr><td align="left" balign="left">_434 = discriminant(_156)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb188__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">188 (cleanup)</td></tr><tr><td align="left" balign="left">_435 = discriminant(_141)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb189__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">189 (cleanup)</td></tr><tr><td align="left" balign="left">_436 = discriminant(_126)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb190__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">190 (cleanup)</td></tr><tr><td align="left" balign="left">_437 = discriminant(_111)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb191__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">191 (cleanup)</td></tr><tr><td align="left" balign="left">_438 = discriminant(_96)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb192__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">192 (cleanup)</td></tr><tr><td align="left" balign="left">_439 = discriminant(_81)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb193__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">193 (cleanup)</td></tr><tr><td align="left" balign="left">_440 = discriminant(_66)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb194__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">194 (cleanup)</td></tr><tr><td align="left" balign="left">_441 = discriminant(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb195__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">195 (cleanup)</td></tr><tr><td align="left" balign="left">_442 = discriminant(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb196__0_10489 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">196 (cleanup)</td></tr><tr><td align="left" balign="left">_443 = discriminant(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_10489 -> bb1__0_10489 [label="return"];
    bb1__0_10489 -> bb2__0_10489 [label="return"];
    bb1__0_10489 -> bb173__0_10489 [label="unwind"];
    bb2__0_10489 -> bb3__0_10489 [label="return"];
    bb3__0_10489 -> bb4__0_10489 [label="0"];
    bb3__0_10489 -> bb6__0_10489 [label="1"];
    bb3__0_10489 -> bb5__0_10489 [label="otherwise"];
    bb4__0_10489 -> bb8__0_10489 [label="return"];
    bb6__0_10489 -> bb7__0_10489 [label="return"];
    bb7__0_10489 -> bb167__0_10489 [label=""];
    bb8__0_10489 -> bb9__0_10489 [label="return"];
    bb8__0_10489 -> bb173__0_10489 [label="unwind"];
    bb9__0_10489 -> bb10__0_10489 [label="return"];
    bb9__0_10489 -> bb173__0_10489 [label="unwind"];
    bb10__0_10489 -> bb11__0_10489 [label="0"];
    bb10__0_10489 -> bb12__0_10489 [label="1"];
    bb10__0_10489 -> bb5__0_10489 [label="otherwise"];
    bb11__0_10489 -> bb14__0_10489 [label="return"];
    bb11__0_10489 -> bb172__0_10489 [label="unwind"];
    bb12__0_10489 -> bb13__0_10489 [label="return"];
    bb12__0_10489 -> bb196__0_10489 [label="unwind"];
    bb13__0_10489 -> bb166__0_10489 [label=""];
    bb14__0_10489 -> bb15__0_10489 [label="return"];
    bb14__0_10489 -> bb172__0_10489 [label="unwind"];
    bb15__0_10489 -> bb16__0_10489 [label="return"];
    bb15__0_10489 -> bb172__0_10489 [label="unwind"];
    bb16__0_10489 -> bb17__0_10489 [label="0"];
    bb16__0_10489 -> bb18__0_10489 [label="1"];
    bb16__0_10489 -> bb5__0_10489 [label="otherwise"];
    bb17__0_10489 -> bb20__0_10489 [label="return"];
    bb17__0_10489 -> bb172__0_10489 [label="unwind"];
    bb18__0_10489 -> bb19__0_10489 [label="return"];
    bb18__0_10489 -> bb195__0_10489 [label="unwind"];
    bb19__0_10489 -> bb165__0_10489 [label=""];
    bb20__0_10489 -> bb21__0_10489 [label="return"];
    bb20__0_10489 -> bb172__0_10489 [label="unwind"];
    bb21__0_10489 -> bb22__0_10489 [label="return"];
    bb21__0_10489 -> bb172__0_10489 [label="unwind"];
    bb22__0_10489 -> bb23__0_10489 [label="0"];
    bb22__0_10489 -> bb24__0_10489 [label="1"];
    bb22__0_10489 -> bb5__0_10489 [label="otherwise"];
    bb23__0_10489 -> bb26__0_10489 [label="return"];
    bb23__0_10489 -> bb172__0_10489 [label="unwind"];
    bb24__0_10489 -> bb25__0_10489 [label="return"];
    bb24__0_10489 -> bb194__0_10489 [label="unwind"];
    bb25__0_10489 -> bb164__0_10489 [label=""];
    bb26__0_10489 -> bb27__0_10489 [label="return"];
    bb26__0_10489 -> bb172__0_10489 [label="unwind"];
    bb27__0_10489 -> bb28__0_10489 [label="return"];
    bb27__0_10489 -> bb172__0_10489 [label="unwind"];
    bb28__0_10489 -> bb29__0_10489 [label="0"];
    bb28__0_10489 -> bb30__0_10489 [label="1"];
    bb28__0_10489 -> bb5__0_10489 [label="otherwise"];
    bb29__0_10489 -> bb32__0_10489 [label="return"];
    bb29__0_10489 -> bb172__0_10489 [label="unwind"];
    bb30__0_10489 -> bb31__0_10489 [label="return"];
    bb30__0_10489 -> bb193__0_10489 [label="unwind"];
    bb31__0_10489 -> bb163__0_10489 [label=""];
    bb32__0_10489 -> bb33__0_10489 [label="return"];
    bb32__0_10489 -> bb172__0_10489 [label="unwind"];
    bb33__0_10489 -> bb34__0_10489 [label="return"];
    bb33__0_10489 -> bb172__0_10489 [label="unwind"];
    bb34__0_10489 -> bb35__0_10489 [label="0"];
    bb34__0_10489 -> bb36__0_10489 [label="1"];
    bb34__0_10489 -> bb5__0_10489 [label="otherwise"];
    bb35__0_10489 -> bb38__0_10489 [label="return"];
    bb35__0_10489 -> bb172__0_10489 [label="unwind"];
    bb36__0_10489 -> bb37__0_10489 [label="return"];
    bb36__0_10489 -> bb192__0_10489 [label="unwind"];
    bb37__0_10489 -> bb162__0_10489 [label=""];
    bb38__0_10489 -> bb39__0_10489 [label="return"];
    bb38__0_10489 -> bb172__0_10489 [label="unwind"];
    bb39__0_10489 -> bb40__0_10489 [label="return"];
    bb39__0_10489 -> bb172__0_10489 [label="unwind"];
    bb40__0_10489 -> bb41__0_10489 [label="0"];
    bb40__0_10489 -> bb42__0_10489 [label="1"];
    bb40__0_10489 -> bb5__0_10489 [label="otherwise"];
    bb41__0_10489 -> bb44__0_10489 [label="return"];
    bb41__0_10489 -> bb172__0_10489 [label="unwind"];
    bb42__0_10489 -> bb43__0_10489 [label="return"];
    bb42__0_10489 -> bb191__0_10489 [label="unwind"];
    bb43__0_10489 -> bb161__0_10489 [label=""];
    bb44__0_10489 -> bb45__0_10489 [label="return"];
    bb44__0_10489 -> bb172__0_10489 [label="unwind"];
    bb45__0_10489 -> bb46__0_10489 [label="return"];
    bb45__0_10489 -> bb172__0_10489 [label="unwind"];
    bb46__0_10489 -> bb47__0_10489 [label="0"];
    bb46__0_10489 -> bb48__0_10489 [label="1"];
    bb46__0_10489 -> bb5__0_10489 [label="otherwise"];
    bb47__0_10489 -> bb50__0_10489 [label="return"];
    bb47__0_10489 -> bb171__0_10489 [label="unwind"];
    bb48__0_10489 -> bb49__0_10489 [label="return"];
    bb48__0_10489 -> bb190__0_10489 [label="unwind"];
    bb49__0_10489 -> bb160__0_10489 [label=""];
    bb50__0_10489 -> bb51__0_10489 [label="return"];
    bb50__0_10489 -> bb171__0_10489 [label="unwind"];
    bb51__0_10489 -> bb52__0_10489 [label="return"];
    bb51__0_10489 -> bb171__0_10489 [label="unwind"];
    bb52__0_10489 -> bb53__0_10489 [label="0"];
    bb52__0_10489 -> bb54__0_10489 [label="1"];
    bb52__0_10489 -> bb5__0_10489 [label="otherwise"];
    bb53__0_10489 -> bb56__0_10489 [label="return"];
    bb53__0_10489 -> bb170__0_10489 [label="unwind"];
    bb54__0_10489 -> bb55__0_10489 [label="return"];
    bb54__0_10489 -> bb189__0_10489 [label="unwind"];
    bb55__0_10489 -> bb159__0_10489 [label=""];
    bb56__0_10489 -> bb57__0_10489 [label="return"];
    bb56__0_10489 -> bb170__0_10489 [label="unwind"];
    bb57__0_10489 -> bb58__0_10489 [label="return"];
    bb57__0_10489 -> bb170__0_10489 [label="unwind"];
    bb58__0_10489 -> bb59__0_10489 [label="0"];
    bb58__0_10489 -> bb60__0_10489 [label="1"];
    bb58__0_10489 -> bb5__0_10489 [label="otherwise"];
    bb59__0_10489 -> bb62__0_10489 [label="return"];
    bb59__0_10489 -> bb169__0_10489 [label="unwind"];
    bb60__0_10489 -> bb61__0_10489 [label="return"];
    bb60__0_10489 -> bb188__0_10489 [label="unwind"];
    bb61__0_10489 -> bb158__0_10489 [label=""];
    bb62__0_10489 -> bb63__0_10489 [label="return"];
    bb62__0_10489 -> bb169__0_10489 [label="unwind"];
    bb63__0_10489 -> bb64__0_10489 [label="return"];
    bb63__0_10489 -> bb169__0_10489 [label="unwind"];
    bb64__0_10489 -> bb65__0_10489 [label="0"];
    bb64__0_10489 -> bb66__0_10489 [label="1"];
    bb64__0_10489 -> bb5__0_10489 [label="otherwise"];
    bb65__0_10489 -> bb68__0_10489 [label="return"];
    bb65__0_10489 -> bb169__0_10489 [label="unwind"];
    bb66__0_10489 -> bb67__0_10489 [label="return"];
    bb66__0_10489 -> bb187__0_10489 [label="unwind"];
    bb67__0_10489 -> bb157__0_10489 [label=""];
    bb68__0_10489 -> bb69__0_10489 [label="0"];
    bb68__0_10489 -> bb72__0_10489 [label="otherwise"];
    bb69__0_10489 -> bb70__0_10489 [label="return"];
    bb69__0_10489 -> bb169__0_10489 [label="unwind"];
    bb70__0_10489 -> bb71__0_10489 [label="return"];
    bb70__0_10489 -> bb169__0_10489 [label="unwind"];
    bb71__0_10489 -> bb157__0_10489 [label=""];
    bb72__0_10489 -> bb73__0_10489 [label="return"];
    bb72__0_10489 -> bb169__0_10489 [label="unwind"];
    bb73__0_10489 -> bb74__0_10489 [label="return"];
    bb73__0_10489 -> bb169__0_10489 [label="unwind"];
    bb74__0_10489 -> bb75__0_10489 [label="0"];
    bb74__0_10489 -> bb76__0_10489 [label="1"];
    bb74__0_10489 -> bb5__0_10489 [label="otherwise"];
    bb75__0_10489 -> bb175__0_10489 [label="0"];
    bb75__0_10489 -> bb174__0_10489 [label="otherwise"];
    bb76__0_10489 -> bb77__0_10489 [label="return"];
    bb76__0_10489 -> bb186__0_10489 [label="unwind"];
    bb77__0_10489 -> bb156__0_10489 [label=""];
    bb78__0_10489 -> bb79__0_10489 [label="return"];
    bb78__0_10489 -> bb169__0_10489 [label="unwind"];
    bb79__0_10489 -> bb156__0_10489 [label=""];
    bb80__0_10489 -> bb81__0_10489 [label="0"];
    bb80__0_10489 -> bb84__0_10489 [label="otherwise"];
    bb81__0_10489 -> bb82__0_10489 [label="return"];
    bb81__0_10489 -> bb169__0_10489 [label="unwind"];
    bb82__0_10489 -> bb83__0_10489 [label="return"];
    bb82__0_10489 -> bb169__0_10489 [label="unwind"];
    bb83__0_10489 -> bb157__0_10489 [label=""];
    bb84__0_10489 -> bb85__0_10489 [label="return"];
    bb84__0_10489 -> bb169__0_10489 [label="unwind"];
    bb85__0_10489 -> bb86__0_10489 [label="return"];
    bb85__0_10489 -> bb169__0_10489 [label="unwind"];
    bb86__0_10489 -> bb87__0_10489 [label="0"];
    bb86__0_10489 -> bb88__0_10489 [label="1"];
    bb86__0_10489 -> bb5__0_10489 [label="otherwise"];
    bb87__0_10489 -> bb177__0_10489 [label="0"];
    bb87__0_10489 -> bb176__0_10489 [label="otherwise"];
    bb88__0_10489 -> bb89__0_10489 [label="return"];
    bb88__0_10489 -> bb185__0_10489 [label="unwind"];
    bb89__0_10489 -> bb155__0_10489 [label=""];
    bb90__0_10489 -> bb91__0_10489 [label="return"];
    bb90__0_10489 -> bb169__0_10489 [label="unwind"];
    bb91__0_10489 -> bb155__0_10489 [label=""];
    bb92__0_10489 -> bb93__0_10489 [label="0"];
    bb92__0_10489 -> bb96__0_10489 [label="otherwise"];
    bb93__0_10489 -> bb94__0_10489 [label="return"];
    bb93__0_10489 -> bb169__0_10489 [label="unwind"];
    bb94__0_10489 -> bb95__0_10489 [label="return"];
    bb94__0_10489 -> bb169__0_10489 [label="unwind"];
    bb95__0_10489 -> bb157__0_10489 [label=""];
    bb96__0_10489 -> bb97__0_10489 [label="return"];
    bb96__0_10489 -> bb169__0_10489 [label="unwind"];
    bb97__0_10489 -> bb98__0_10489 [label="0"];
    bb97__0_10489 -> bb101__0_10489 [label="otherwise"];
    bb98__0_10489 -> bb99__0_10489 [label="return"];
    bb98__0_10489 -> bb169__0_10489 [label="unwind"];
    bb99__0_10489 -> bb100__0_10489 [label="return"];
    bb99__0_10489 -> bb169__0_10489 [label="unwind"];
    bb100__0_10489 -> bb157__0_10489 [label=""];
    bb101__0_10489 -> bb102__0_10489 [label="return"];
    bb101__0_10489 -> bb169__0_10489 [label="unwind"];
    bb102__0_10489 -> bb103__0_10489 [label="return"];
    bb102__0_10489 -> bb169__0_10489 [label="unwind"];
    bb103__0_10489 -> bb104__0_10489 [label="0"];
    bb103__0_10489 -> bb105__0_10489 [label="1"];
    bb103__0_10489 -> bb5__0_10489 [label="otherwise"];
    bb104__0_10489 -> bb179__0_10489 [label="0"];
    bb104__0_10489 -> bb178__0_10489 [label="otherwise"];
    bb105__0_10489 -> bb106__0_10489 [label="return"];
    bb105__0_10489 -> bb184__0_10489 [label="unwind"];
    bb106__0_10489 -> bb154__0_10489 [label=""];
    bb107__0_10489 -> bb108__0_10489 [label="return"];
    bb107__0_10489 -> bb169__0_10489 [label="unwind"];
    bb108__0_10489 -> bb154__0_10489 [label=""];
    bb109__0_10489 -> bb110__0_10489 [label="return"];
    bb109__0_10489 -> bb169__0_10489 [label="unwind"];
    bb110__0_10489 -> bb111__0_10489 [label="return"];
    bb110__0_10489 -> bb169__0_10489 [label="unwind"];
    bb111__0_10489 -> bb112__0_10489 [label="return"];
    bb111__0_10489 -> bb169__0_10489 [label="unwind"];
    bb112__0_10489 -> bb113__0_10489 [label="return"];
    bb112__0_10489 -> bb169__0_10489 [label="unwind"];
    bb113__0_10489 -> bb114__0_10489 [label="return"];
    bb113__0_10489 -> bb169__0_10489 [label="unwind"];
    bb114__0_10489 -> bb120__0_10489 [label="0"];
    bb114__0_10489 -> bb115__0_10489 [label="otherwise"];
    bb115__0_10489 -> bb116__0_10489 [label="return"];
    bb115__0_10489 -> bb169__0_10489 [label="unwind"];
    bb116__0_10489 -> bb117__0_10489 [label="return"];
    bb116__0_10489 -> bb169__0_10489 [label="unwind"];
    bb117__0_10489 -> bb118__0_10489 [label="return"];
    bb117__0_10489 -> bb183__0_10489 [label="unwind"];
    bb118__0_10489 -> bb119__0_10489 [label="return"];
    bb118__0_10489 -> bb183__0_10489 [label="unwind"];
    bb119__0_10489 -> bb153__0_10489 [label=""];
    bb120__0_10489 -> bb121__0_10489 [label="return"];
    bb120__0_10489 -> bb169__0_10489 [label="unwind"];
    bb121__0_10489 -> bb122__0_10489 [label="return"];
    bb121__0_10489 -> bb169__0_10489 [label="unwind"];
    bb122__0_10489 -> bb123__0_10489 [label="0"];
    bb122__0_10489 -> bb126__0_10489 [label="otherwise"];
    bb123__0_10489 -> bb124__0_10489 [label="return"];
    bb123__0_10489 -> bb169__0_10489 [label="unwind"];
    bb124__0_10489 -> bb125__0_10489 [label="return"];
    bb124__0_10489 -> bb169__0_10489 [label="unwind"];
    bb125__0_10489 -> bb153__0_10489 [label=""];
    bb126__0_10489 -> bb127__0_10489 [label="return"];
    bb126__0_10489 -> bb169__0_10489 [label="unwind"];
    bb127__0_10489 -> bb128__0_10489 [label="return"];
    bb127__0_10489 -> bb169__0_10489 [label="unwind"];
    bb128__0_10489 -> bb129__0_10489 [label="return"];
    bb128__0_10489 -> bb169__0_10489 [label="unwind"];
    bb129__0_10489 -> bb130__0_10489 [label="return"];
    bb129__0_10489 -> bb169__0_10489 [label="unwind"];
    bb130__0_10489 -> bb131__0_10489 [label="return"];
    bb130__0_10489 -> bb169__0_10489 [label="unwind"];
    bb131__0_10489 -> bb132__0_10489 [label="return"];
    bb131__0_10489 -> bb169__0_10489 [label="unwind"];
    bb132__0_10489 -> bb138__0_10489 [label="0"];
    bb132__0_10489 -> bb133__0_10489 [label="otherwise"];
    bb133__0_10489 -> bb134__0_10489 [label="return"];
    bb133__0_10489 -> bb169__0_10489 [label="unwind"];
    bb134__0_10489 -> bb135__0_10489 [label="return"];
    bb134__0_10489 -> bb169__0_10489 [label="unwind"];
    bb135__0_10489 -> bb136__0_10489 [label="return"];
    bb135__0_10489 -> bb181__0_10489 [label="unwind"];
    bb136__0_10489 -> bb137__0_10489 [label="return"];
    bb136__0_10489 -> bb181__0_10489 [label="unwind"];
    bb137__0_10489 -> bb152__0_10489 [label=""];
    bb138__0_10489 -> bb139__0_10489 [label="return"];
    bb138__0_10489 -> bb169__0_10489 [label="unwind"];
    bb139__0_10489 -> bb140__0_10489 [label="return"];
    bb139__0_10489 -> bb169__0_10489 [label="unwind"];
    bb140__0_10489 -> bb141__0_10489 [label="0"];
    bb140__0_10489 -> bb144__0_10489 [label="otherwise"];
    bb141__0_10489 -> bb142__0_10489 [label="return"];
    bb141__0_10489 -> bb169__0_10489 [label="unwind"];
    bb142__0_10489 -> bb143__0_10489 [label="return"];
    bb142__0_10489 -> bb169__0_10489 [label="unwind"];
    bb143__0_10489 -> bb152__0_10489 [label=""];
    bb144__0_10489 -> bb145__0_10489 [label="return"];
    bb144__0_10489 -> bb169__0_10489 [label="unwind"];
    bb145__0_10489 -> bb146__0_10489 [label="return"];
    bb145__0_10489 -> bb169__0_10489 [label="unwind"];
    bb146__0_10489 -> bb147__0_10489 [label="return"];
    bb146__0_10489 -> bb169__0_10489 [label="unwind"];
    bb147__0_10489 -> bb149__0_10489 [label="0"];
    bb147__0_10489 -> bb148__0_10489 [label="otherwise"];
    bb148__0_10489 -> bb168__0_10489 [label=""];
    bb149__0_10489 -> bb150__0_10489 [label="return"];
    bb149__0_10489 -> bb169__0_10489 [label="unwind"];
    bb150__0_10489 -> bb151__0_10489 [label="return"];
    bb150__0_10489 -> bb169__0_10489 [label="unwind"];
    bb151__0_10489 -> bb152__0_10489 [label=""];
    bb152__0_10489 -> bb153__0_10489 [label=""];
    bb153__0_10489 -> bb157__0_10489 [label=""];
    bb154__0_10489 -> bb157__0_10489 [label=""];
    bb155__0_10489 -> bb157__0_10489 [label=""];
    bb156__0_10489 -> bb157__0_10489 [label=""];
    bb157__0_10489 -> bb158__0_10489 [label="return"];
    bb157__0_10489 -> bb170__0_10489 [label="unwind"];
    bb158__0_10489 -> bb159__0_10489 [label="return"];
    bb158__0_10489 -> bb171__0_10489 [label="unwind"];
    bb159__0_10489 -> bb160__0_10489 [label="return"];
    bb159__0_10489 -> bb172__0_10489 [label="unwind"];
    bb160__0_10489 -> bb161__0_10489 [label=""];
    bb161__0_10489 -> bb162__0_10489 [label=""];
    bb162__0_10489 -> bb163__0_10489 [label=""];
    bb163__0_10489 -> bb164__0_10489 [label=""];
    bb164__0_10489 -> bb165__0_10489 [label=""];
    bb165__0_10489 -> bb166__0_10489 [label="return"];
    bb165__0_10489 -> bb173__0_10489 [label="unwind"];
    bb166__0_10489 -> bb167__0_10489 [label=""];
    bb167__0_10489 -> bb168__0_10489 [label=""];
    bb169__0_10489 -> bb170__0_10489 [label="return"];
    bb170__0_10489 -> bb171__0_10489 [label="return"];
    bb171__0_10489 -> bb172__0_10489 [label="return"];
    bb172__0_10489 -> bb173__0_10489 [label="return"];
    bb174__0_10489 -> bb80__0_10489 [label="return"];
    bb174__0_10489 -> bb169__0_10489 [label="unwind"];
    bb175__0_10489 -> bb78__0_10489 [label="return"];
    bb175__0_10489 -> bb169__0_10489 [label="unwind"];
    bb176__0_10489 -> bb92__0_10489 [label="return"];
    bb176__0_10489 -> bb169__0_10489 [label="unwind"];
    bb177__0_10489 -> bb90__0_10489 [label="return"];
    bb177__0_10489 -> bb169__0_10489 [label="unwind"];
    bb178__0_10489 -> bb109__0_10489 [label="return"];
    bb178__0_10489 -> bb169__0_10489 [label="unwind"];
    bb179__0_10489 -> bb107__0_10489 [label="return"];
    bb179__0_10489 -> bb169__0_10489 [label="unwind"];
    bb180__0_10489 -> bb169__0_10489 [label="return"];
    bb181__0_10489 -> bb169__0_10489 [label="0"];
    bb181__0_10489 -> bb180__0_10489 [label="otherwise"];
    bb182__0_10489 -> bb169__0_10489 [label="return"];
    bb183__0_10489 -> bb169__0_10489 [label="0"];
    bb183__0_10489 -> bb182__0_10489 [label="otherwise"];
    bb184__0_10489 -> bb169__0_10489 [label=""];
    bb185__0_10489 -> bb169__0_10489 [label=""];
    bb186__0_10489 -> bb169__0_10489 [label=""];
    bb187__0_10489 -> bb169__0_10489 [label=""];
    bb188__0_10489 -> bb170__0_10489 [label=""];
    bb189__0_10489 -> bb171__0_10489 [label=""];
    bb190__0_10489 -> bb172__0_10489 [label=""];
    bb191__0_10489 -> bb172__0_10489 [label=""];
    bb192__0_10489 -> bb172__0_10489 [label=""];
    bb193__0_10489 -> bb172__0_10489 [label=""];
    bb194__0_10489 -> bb172__0_10489 [label=""];
    bb195__0_10489 -> bb172__0_10489 [label=""];
    bb196__0_10489 -> bb173__0_10489 [label=""];
}
