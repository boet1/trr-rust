digraph Mir_0_1933 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn U256::to_le_bytes(_1: math::bn::U256) -&gt; [u8; 32_usize]<br align="left"/>let mut _2: std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _3: usize;<br align="left"/>let _4: ();<br align="left"/>let mut _5: &amp;ReErased math::bn::U256;<br align="left"/>let mut _6: &amp;ReErased mut [u8];<br align="left"/>let mut _7: &amp;ReErased mut [u8];<br align="left"/>let mut _8: &amp;ReErased mut std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _9: [u8; 32_usize];<br align="left"/>let _10: ();<br align="left"/>let mut _11: &amp;ReErased mut [u8];<br align="left"/>let mut _12: &amp;ReErased mut [u8; 32_usize];<br align="left"/>let mut _13: &amp;ReErased [u8];<br align="left"/>let _14: &amp;ReErased [u8];<br align="left"/>let mut _15: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug buf =&gt; _2;<br align="left"/>debug bytes =&gt; _9;<br align="left"/>>;
    bb0__0_1933 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/></td></tr><tr><td align="left">_3 = std::mem::size_of::&lt;U256&gt;()</td></tr></table>>];
    bb1__0_1933 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">_2 = Vec::&lt;u8&gt;::with_capacity(move _3)</td></tr></table>>];
    bb2__0_1933 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = &amp;_1<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = &amp;mut _2<br/></td></tr><tr><td align="left">_7 = &lt;Vec&lt;u8&gt; as BorrowMut&lt;[u8]&gt;&gt;::borrow_mut(move _8)</td></tr></table>>];
    bb3__0_1933 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">_6 = &amp;mut (*_7)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">_4 = U256::to_little_endian(move _5, move _6)</td></tr></table>>];
    bb4__0_1933 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_5)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageLive(_9)<br/>_9 = [const 0_u8; 32]<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = &amp;mut _9<br/>_11 = move _12 as &amp;mut [u8] (PointerCoercion(Unsize))<br/>StorageDead(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = &amp;_2<br/></td></tr><tr><td align="left">_14 = Vec::&lt;u8&gt;::as_slice(move _15)</td></tr></table>>];
    bb5__0_1933 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">_13 = &amp;(*_14)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">_10 = core::slice::&lt;impl [u8]&gt;::copy_from_slice(move _11, move _13)</td></tr></table>>];
    bb6__0_1933 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_11)<br/>StorageDead(_14)<br/>StorageDead(_10)<br/>_0 = _9<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">drop(_2)</td></tr></table>>];
    bb7__0_1933 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_2)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb8__0_1933 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">8 (cleanup)</td></tr><tr><td align="left">drop(_2)</td></tr></table>>];
    bb9__0_1933 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">9 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_1933 -> bb1__0_1933 [label="return"];
    bb1__0_1933 -> bb2__0_1933 [label="return"];
    bb2__0_1933 -> bb3__0_1933 [label="return"];
    bb2__0_1933 -> bb8__0_1933 [label="unwind"];
    bb3__0_1933 -> bb4__0_1933 [label="return"];
    bb3__0_1933 -> bb8__0_1933 [label="unwind"];
    bb4__0_1933 -> bb5__0_1933 [label="return"];
    bb4__0_1933 -> bb8__0_1933 [label="unwind"];
    bb5__0_1933 -> bb6__0_1933 [label="return"];
    bb5__0_1933 -> bb8__0_1933 [label="unwind"];
    bb6__0_1933 -> bb7__0_1933 [label="return"];
    bb6__0_1933 -> bb9__0_1933 [label="unwind"];
    bb8__0_1933 -> bb9__0_1933 [label="return"];
}
