// MIR for `signed_msg_user::<impl at programs/drift/src/state/signed_msg_user.rs:91:1: 91:41>::iter` before PreCodegen

fn signed_msg_user::<impl at programs/drift/src/state/signed_msg_user.rs:91:1: 91:41>::iter(_1: &SignedMsgUserOrdersZeroCopy<'_>) -> Map<std::ops::Range<u32>, {closure@programs/drift/src/state/signed_msg_user.rs:103:29: 103:37}> {
    debug self => _1;
    let mut _0: std::iter::Map<std::ops::Range<u32>, {closure@programs/drift/src/state/signed_msg_user.rs:103:29: 103:37}>;
    let mut _2: std::ops::Range<u32>;
    let mut _3: u32;
    let mut _4: &state::signed_msg_user::SignedMsgUserOrdersZeroCopy<'_>;
    let mut _5: {closure@programs/drift/src/state/signed_msg_user.rs:103:29: 103:37};

    bb0: {
        StorageLive(_2);
        StorageLive(_3);
        StorageLive(_4);
        _4 = &(*_1);
        _3 = SignedMsgUserOrdersZeroCopy::<'_>::len(move _4) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_4);
        _2 = std::ops::Range::<u32> { start: const 0_u32, end: move _3 };
        StorageDead(_3);
        StorageLive(_5);
        _5 = {closure@programs/drift/src/state/signed_msg_user.rs:103:29: 103:37} { self: _1 };
        _0 = <std::ops::Range<u32> as Iterator>::map::<&SignedMsgOrderId, {closure@programs/drift/src/state/signed_msg_user.rs:103:29: 103:37}>(move _2, move _5) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_5);
        StorageDead(_2);
        return;
    }
}
