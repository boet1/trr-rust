digraph Mir_0_1817 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_expiry_price(_1: &amp;ReErased state::perp_market::AMM, _2: i64, _3: i128) -&gt; std::result::Result&lt;i64, error::ErrorCode&gt;<br align="left"/>let _4: ();<br align="left"/>let mut _5: bool;<br align="left"/>let mut _6: i128;<br align="left"/>let mut _7: i128;<br align="left"/>let mut _8: i128;<br align="left"/>let mut _9: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _10: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _11: u64;<br align="left"/>let mut _12: isize;<br align="left"/>let _13: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _14: !;<br align="left"/>let mut _15: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _16: i128;<br align="left"/>let mut _17: !;<br align="left"/>let mut _18: i64;<br align="left"/>let _19: i64;<br align="left"/>let mut _20: i64;<br align="left"/>let mut _21: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _22: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _23: i128;<br align="left"/>let mut _24: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _25: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _26: i128;<br align="left"/>let mut _27: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _28: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _29: i128;<br align="left"/>let mut _30: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _31: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _32: i128;<br align="left"/>let mut _33: i128;<br align="left"/>let mut _34: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _35: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _36: i128;<br align="left"/>let mut _37: isize;<br align="left"/>let _38: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _39: !;<br align="left"/>let mut _40: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _41: i128;<br align="left"/>let mut _42: isize;<br align="left"/>let _43: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _44: !;<br align="left"/>let mut _45: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _46: i128;<br align="left"/>let mut _47: isize;<br align="left"/>let _48: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _49: !;<br align="left"/>let mut _50: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _51: i128;<br align="left"/>let mut _52: i128;<br align="left"/>let mut _53: isize;<br align="left"/>let _54: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _55: !;<br align="left"/>let mut _56: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _57: i128;<br align="left"/>let mut _58: isize;<br align="left"/>let _59: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _60: !;<br align="left"/>let mut _61: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _62: i64;<br align="left"/>let mut _63: bool;<br align="left"/>let _64: i64;<br align="left"/>let mut _65: bool;<br align="left"/>let mut _66: i128;<br align="left"/>let mut _67: i64;<br align="left"/>let mut _68: i64;<br align="left"/>let mut _69: i64;<br align="left"/>let mut _70: i64;<br align="left"/>let mut _71: i64;<br align="left"/>let mut _72: i64;<br align="left"/>let mut _73: i64;<br align="left"/>debug amm =&gt; _1;<br align="left"/>debug target_price =&gt; _2;<br align="left"/>debug total_excess_balance =&gt; _3;<br align="left"/>debug residual =&gt; _13;<br align="left"/>debug val =&gt; _16;<br align="left"/>debug best_expiry_price =&gt; _19;<br align="left"/>debug residual =&gt; _38;<br align="left"/>debug val =&gt; _41;<br align="left"/>debug residual =&gt; _43;<br align="left"/>debug val =&gt; _46;<br align="left"/>debug residual =&gt; _48;<br align="left"/>debug val =&gt; _51;<br align="left"/>debug residual =&gt; _54;<br align="left"/>debug val =&gt; _57;<br align="left"/>debug residual =&gt; _59;<br align="left"/>debug val =&gt; _62;<br align="left"/>debug expiry_price =&gt; _64;<br align="left"/>>;
    bb0__0_1817 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = ((*_1).15: i128)<br/></td></tr><tr><td align="left">_6 = core::num::&lt;impl i128&gt;::abs(move _7)</td></tr></table>>];
    bb1__0_1817 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = ((*_1).52: u64)<br/></td></tr><tr><td align="left">_10 = &lt;u64 as Cast&gt;::cast::&lt;i128&gt;(move _11)</td></tr></table>>];
    bb2__0_1817 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/></td></tr><tr><td align="left">_9 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _10)</td></tr></table>>];
    bb3__0_1817 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>_12 = discriminant(_9)<br/></td></tr><tr><td align="left">switchInt(move _12)</td></tr></table>>];
    bb4__0_1817 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_16)<br/>_16 = ((_9 as Continue).0: i128)<br/>_8 = _16<br/>StorageDead(_16)<br/>_5 = Lt(move _6, move _8)<br/></td></tr><tr><td align="left">switchInt(move _5)</td></tr></table>>];
    bb5__0_1817 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_1817 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = ((_9 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_15)<br/>_15 = _13<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _15)</td></tr></table>>];
    bb7__0_1817 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_13)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_1817 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_8)<br/>StorageDead(_6)<br/>StorageLive(_18)<br/>_18 = _2<br/>_0 = std::result::Result::&lt;i64, error::ErrorCode&gt;::Ok(move _18)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_1817 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_8)<br/>StorageDead(_6)<br/>_4 = const ()<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>_32 = ((*_1).18: i128)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>_36 = _3<br/></td></tr><tr><td align="left">_35 = &lt;i128 as Cast&gt;::cast::&lt;i128&gt;(move _36)</td></tr></table>>];
    bb10__0_1817 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/></td></tr><tr><td align="left">_34 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _35)</td></tr></table>>];
    bb11__0_1817 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>_37 = discriminant(_34)<br/></td></tr><tr><td align="left">switchInt(move _37)</td></tr></table>>];
    bb12__0_1817 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_41)<br/>_41 = ((_34 as Continue).0: i128)<br/>_33 = _41<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">_31 = &lt;i128 as SafeMath&gt;::safe_sub(move _32, move _33)</td></tr></table>>];
    bb13__0_1817 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_38)<br/>_38 = ((_34 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_40)<br/>_40 = _38<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _40)</td></tr></table>>];
    bb14__0_1817 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageDead(_38)<br/>StorageDead(_33)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_1817 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">_30 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _31)</td></tr></table>>];
    bb16__0_1817 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>_42 = discriminant(_30)<br/></td></tr><tr><td align="left">switchInt(move _42)</td></tr></table>>];
    bb17__0_1817 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_46)<br/>_46 = ((_30 as Continue).0: i128)<br/>_29 = _46<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">_28 = &lt;i128 as SafeMath&gt;::safe_mul(move _29, const _)</td></tr></table>>];
    bb18__0_1817 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_43)<br/>_43 = ((_30 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_45)<br/>_45 = _43<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _45)</td></tr></table>>];
    bb19__0_1817 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_1817 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/></td></tr><tr><td align="left">_27 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _28)</td></tr></table>>];
    bb21__0_1817 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>_47 = discriminant(_27)<br/></td></tr><tr><td align="left">switchInt(move _47)</td></tr></table>>];
    bb22__0_1817 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_51)<br/>_51 = ((_27 as Continue).0: i128)<br/>_26 = _51<br/>StorageDead(_51)<br/>StorageLive(_52)<br/>_52 = ((*_1).15: i128)<br/></td></tr><tr><td align="left">_25 = &lt;i128 as SafeMath&gt;::safe_div(move _26, move _52)</td></tr></table>>];
    bb23__0_1817 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_48)<br/>_48 = ((_27 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_50)<br/>_50 = _48<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _50)</td></tr></table>>];
    bb24__0_1817 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_1817 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">_24 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _25)</td></tr></table>>];
    bb26__0_1817 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>_53 = discriminant(_24)<br/></td></tr><tr><td align="left">switchInt(move _53)</td></tr></table>>];
    bb27__0_1817 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_57)<br/>_57 = ((_24 as Continue).0: i128)<br/>_23 = _57<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">_22 = &lt;i128 as Cast&gt;::cast::&lt;i64&gt;(move _23)</td></tr></table>>];
    bb28__0_1817 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_54)<br/>_54 = ((_24 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_56)<br/>_56 = _54<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _56)</td></tr></table>>];
    bb29__0_1817 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_1817 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/></td></tr><tr><td align="left">_21 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _22)</td></tr></table>>];
    bb31__0_1817 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>_58 = discriminant(_21)<br/></td></tr><tr><td align="left">switchInt(move _58)</td></tr></table>>];
    bb32__0_1817 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_62)<br/>_62 = ((_21 as Continue).0: i64)<br/>_20 = _62<br/>StorageDead(_62)<br/>_63 = Eq(_20, const i64::MIN)<br/></td></tr><tr><td align="left">assert(!move _63, &quot;attempt to negate `{}`, which would overflow&quot;, _20)</td></tr></table>>];
    bb33__0_1817 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageLive(_59)<br/>_59 = ((_21 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_61)<br/>_61 = _59<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _61)</td></tr></table>>];
    bb34__0_1817 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_59)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_1817 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">_19 = Neg(move _20)<br/>StorageDead(_20)<br/>StorageDead(_34)<br/>StorageDead(_30)<br/>StorageDead(_27)<br/>StorageDead(_24)<br/>StorageDead(_21)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>_66 = ((*_1).15: i128)<br/>_65 = Ge(move _66, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _65)</td></tr></table>>];
    bb36__0_1817 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>_68 = _19<br/>StorageLive(_69)<br/>_69 = _2<br/></td></tr><tr><td align="left">_67 = &lt;i64 as Ord&gt;::min(move _68, move _69)</td></tr></table>>];
    bb37__0_1817 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageDead(_68)<br/></td></tr><tr><td align="left">_64 = core::num::&lt;impl i64&gt;::saturating_sub(move _67, const 1_i64)</td></tr></table>>];
    bb38__0_1817 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_1817 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>_71 = _19<br/>StorageLive(_72)<br/>_72 = _2<br/></td></tr><tr><td align="left">_70 = &lt;i64 as Ord&gt;::max(move _71, move _72)</td></tr></table>>];
    bb40__0_1817 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">_64 = core::num::&lt;impl i64&gt;::saturating_add(move _70, const 1_i64)</td></tr></table>>];
    bb41__0_1817 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_1817 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageLive(_73)<br/>_73 = _64<br/>_0 = std::result::Result::&lt;i64, error::ErrorCode&gt;::Ok(move _73)<br/>StorageDead(_73)<br/>StorageDead(_64)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_1817 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_1817 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_1817 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_1817 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_34)<br/>StorageDead(_30)<br/>StorageDead(_27)<br/>StorageDead(_24)<br/>StorageDead(_21)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_1817 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_1817 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_1817 -> bb1__0_1817 [label="return"];
    bb1__0_1817 -> bb2__0_1817 [label="return"];
    bb2__0_1817 -> bb3__0_1817 [label="return"];
    bb3__0_1817 -> bb4__0_1817 [label="0"];
    bb3__0_1817 -> bb6__0_1817 [label="1"];
    bb3__0_1817 -> bb5__0_1817 [label="otherwise"];
    bb4__0_1817 -> bb9__0_1817 [label="0"];
    bb4__0_1817 -> bb8__0_1817 [label="otherwise"];
    bb6__0_1817 -> bb7__0_1817 [label="return"];
    bb7__0_1817 -> bb47__0_1817 [label=""];
    bb8__0_1817 -> bb47__0_1817 [label=""];
    bb9__0_1817 -> bb10__0_1817 [label="return"];
    bb10__0_1817 -> bb11__0_1817 [label="return"];
    bb11__0_1817 -> bb12__0_1817 [label="0"];
    bb11__0_1817 -> bb13__0_1817 [label="1"];
    bb11__0_1817 -> bb5__0_1817 [label="otherwise"];
    bb12__0_1817 -> bb15__0_1817 [label="return"];
    bb13__0_1817 -> bb14__0_1817 [label="return"];
    bb14__0_1817 -> bb43__0_1817 [label=""];
    bb15__0_1817 -> bb16__0_1817 [label="return"];
    bb16__0_1817 -> bb17__0_1817 [label="0"];
    bb16__0_1817 -> bb18__0_1817 [label="1"];
    bb16__0_1817 -> bb5__0_1817 [label="otherwise"];
    bb17__0_1817 -> bb20__0_1817 [label="return"];
    bb18__0_1817 -> bb19__0_1817 [label="return"];
    bb19__0_1817 -> bb43__0_1817 [label=""];
    bb20__0_1817 -> bb21__0_1817 [label="return"];
    bb21__0_1817 -> bb22__0_1817 [label="0"];
    bb21__0_1817 -> bb23__0_1817 [label="1"];
    bb21__0_1817 -> bb5__0_1817 [label="otherwise"];
    bb22__0_1817 -> bb25__0_1817 [label="return"];
    bb23__0_1817 -> bb24__0_1817 [label="return"];
    bb24__0_1817 -> bb44__0_1817 [label=""];
    bb25__0_1817 -> bb26__0_1817 [label="return"];
    bb26__0_1817 -> bb27__0_1817 [label="0"];
    bb26__0_1817 -> bb28__0_1817 [label="1"];
    bb26__0_1817 -> bb5__0_1817 [label="otherwise"];
    bb27__0_1817 -> bb30__0_1817 [label="return"];
    bb28__0_1817 -> bb29__0_1817 [label="return"];
    bb29__0_1817 -> bb45__0_1817 [label=""];
    bb30__0_1817 -> bb31__0_1817 [label="return"];
    bb31__0_1817 -> bb32__0_1817 [label="0"];
    bb31__0_1817 -> bb33__0_1817 [label="1"];
    bb31__0_1817 -> bb5__0_1817 [label="otherwise"];
    bb32__0_1817 -> bb35__0_1817 [label="success"];
    bb33__0_1817 -> bb34__0_1817 [label="return"];
    bb34__0_1817 -> bb46__0_1817 [label=""];
    bb35__0_1817 -> bb39__0_1817 [label="0"];
    bb35__0_1817 -> bb36__0_1817 [label="otherwise"];
    bb36__0_1817 -> bb37__0_1817 [label="return"];
    bb37__0_1817 -> bb38__0_1817 [label="return"];
    bb38__0_1817 -> bb42__0_1817 [label=""];
    bb39__0_1817 -> bb40__0_1817 [label="return"];
    bb40__0_1817 -> bb41__0_1817 [label="return"];
    bb41__0_1817 -> bb42__0_1817 [label=""];
    bb42__0_1817 -> bb48__0_1817 [label=""];
    bb43__0_1817 -> bb44__0_1817 [label=""];
    bb44__0_1817 -> bb45__0_1817 [label=""];
    bb45__0_1817 -> bb46__0_1817 [label=""];
    bb46__0_1817 -> bb48__0_1817 [label=""];
    bb47__0_1817 -> bb48__0_1817 [label=""];
}
