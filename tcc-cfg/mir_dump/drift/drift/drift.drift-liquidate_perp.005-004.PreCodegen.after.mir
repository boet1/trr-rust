// MIR for `drift::liquidate_perp` after PreCodegen

fn drift::liquidate_perp(_1: anchor_lang::context::Context<'_, '_, '_, '_, keeper::LiquidatePerp<'_>>, _2: u16, _3: u64, _4: Option<u64>) -> std::result::Result<(), anchor_lang::error::Error> {
    debug ctx => _1;
    debug market_index => _2;
    debug liquidator_max_base_asset_amount => _3;
    debug limit_price => _4;
    let mut _0: std::result::Result<(), anchor_lang::error::Error>;
    let mut _5: anchor_lang::context::Context<'_, '_, '_, '_, instructions::keeper::LiquidatePerp<'_>>;
    let mut _6: u16;
    let mut _7: u64;
    let mut _8: std::option::Option<u64>;

    bb0: {
        StorageLive(_5);
        _5 = move _1;
        StorageLive(_6);
        _6 = _2;
        StorageLive(_7);
        _7 = _3;
        StorageLive(_8);
        _8 = _4;
        _0 = keeper::handle_liquidate_perp::<'_, '_>(move _5, move _6, move _7, move _8) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_8);
        StorageDead(_7);
        StorageDead(_6);
        StorageDead(_5);
        return;
    }
}
