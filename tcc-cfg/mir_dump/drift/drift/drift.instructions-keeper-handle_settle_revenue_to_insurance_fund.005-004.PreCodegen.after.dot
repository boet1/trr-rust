digraph Mir_0_9317 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn keeper::handle_settle_revenue_to_insurance_fund(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::keeper::SettleRevenueToInsuranceFund&lt;ReErased&gt;&gt;, _2: u16) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _5: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _6: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _7: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _8: isize;<br align="left"/>let _9: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _10: !;<br align="left"/>let mut _11: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _12: ();<br align="left"/>let _13: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let _14: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _15: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _16: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _17: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _18: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _19: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _20: Closure(DefId(0:9320 ~ drift[d311]::instructions::keeper::handle_settle_revenue_to_insurance_fund::{closure#0}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _21: isize;<br align="left"/>let _22: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _23: !;<br align="left"/>let mut _24: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _25: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _26: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _27: std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _28: std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _29: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let _30: std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let mut _31: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;&gt;;<br align="left"/>let mut _32: std::result::Result&lt;std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _33: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _34: isize;<br align="left"/>let _35: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _36: !;<br align="left"/>let mut _37: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _38: std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let _39: ();<br align="left"/>let mut _40: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _41: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _42: bool;<br align="left"/>let mut _43: u16;<br align="left"/>let mut _44: u16;<br align="left"/>let mut _45: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _46: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _47: ();<br align="left"/>let _48: error::ErrorCode;<br align="left"/>let _49: ();<br align="left"/>let mut _50: &amp;ReErased str;<br align="left"/>let _51: &amp;ReErased str;<br align="left"/>let mut _52: &amp;ReErased std::string::String;<br align="left"/>let _53: &amp;ReErased std::string::String;<br align="left"/>let _54: std::string::String;<br align="left"/>let _55: std::string::String;<br align="left"/>let mut _56: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _57: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _58: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _59: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _60: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _61: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _62: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _63: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _64: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _65: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _66: &amp;ReErased error::ErrorCode;<br align="left"/>let _67: &amp;ReErased error::ErrorCode;<br align="left"/>let _68: ();<br align="left"/>let mut _69: &amp;ReErased str;<br align="left"/>let _70: &amp;ReErased str;<br align="left"/>let mut _71: error::ErrorCode;<br align="left"/>let mut _72: isize;<br align="left"/>let _73: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _74: !;<br align="left"/>let mut _75: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _76: ();<br align="left"/>let _77: ();<br align="left"/>let mut _78: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _79: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _80: bool;<br align="left"/>let mut _81: i64;<br align="left"/>let mut _82: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _83: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _84: ();<br align="left"/>let _85: error::ErrorCode;<br align="left"/>let _86: ();<br align="left"/>let mut _87: &amp;ReErased str;<br align="left"/>let _88: &amp;ReErased str;<br align="left"/>let mut _89: &amp;ReErased std::string::String;<br align="left"/>let _90: &amp;ReErased std::string::String;<br align="left"/>let _91: std::string::String;<br align="left"/>let _92: std::string::String;<br align="left"/>let mut _93: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _94: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _95: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _96: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _97: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _98: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _99: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _100: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _101: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _102: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _103: &amp;ReErased error::ErrorCode;<br align="left"/>let _104: &amp;ReErased error::ErrorCode;<br align="left"/>let _105: ();<br align="left"/>let mut _106: &amp;ReErased str;<br align="left"/>let _107: &amp;ReErased str;<br align="left"/>let mut _108: error::ErrorCode;<br align="left"/>let mut _109: isize;<br align="left"/>let _110: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _111: !;<br align="left"/>let mut _112: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _113: ();<br align="left"/>let _114: u64;<br align="left"/>let mut _115: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _116: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _117: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _118: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let _119: u64;<br align="left"/>let mut _120: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _121: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _122: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _123: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let _124: anchor_lang::prelude::Clock;<br align="left"/>let mut _125: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _126: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _127: isize;<br align="left"/>let _128: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _129: !;<br align="left"/>let mut _130: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _131: anchor_lang::prelude::Clock;<br align="left"/>let _132: i64;<br align="left"/>let _133: i64;<br align="left"/>let mut _134: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _135: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _136: i64;<br align="left"/>let mut _137: i64;<br align="left"/>let mut _138: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _139: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _140: i64;<br align="left"/>let mut _141: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _142: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _143: isize;<br align="left"/>let _144: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _145: !;<br align="left"/>let mut _146: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _147: i64;<br align="left"/>let _148: ();<br align="left"/>let mut _149: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _150: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _151: bool;<br align="left"/>let mut _152: i64;<br align="left"/>let mut _153: ();<br align="left"/>let _154: error::ErrorCode;<br align="left"/>let _155: ();<br align="left"/>let mut _156: &amp;ReErased str;<br align="left"/>let _157: &amp;ReErased str;<br align="left"/>let mut _158: &amp;ReErased std::string::String;<br align="left"/>let _159: &amp;ReErased std::string::String;<br align="left"/>let _160: std::string::String;<br align="left"/>let _161: std::string::String;<br align="left"/>let mut _162: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _163: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _164: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _165: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _166: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _167: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _168: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _169: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _170: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _171: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _172: &amp;ReErased error::ErrorCode;<br align="left"/>let _173: &amp;ReErased error::ErrorCode;<br align="left"/>let _174: ();<br align="left"/>let mut _175: &amp;ReErased str;<br align="left"/>let _176: &amp;ReErased str;<br align="left"/>let mut _177: &amp;ReErased std::string::String;<br align="left"/>let _178: &amp;ReErased std::string::String;<br align="left"/>let _179: std::string::String;<br align="left"/>let _180: std::string::String;<br align="left"/>let mut _181: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _182: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _183: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _184: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _185: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _186: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _187: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _188: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _189: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _190: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _191: &amp;ReErased i64;<br align="left"/>let _192: &amp;ReErased i64;<br align="left"/>let mut _193: error::ErrorCode;<br align="left"/>let mut _194: isize;<br align="left"/>let _195: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _196: !;<br align="left"/>let mut _197: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _198: ();<br align="left"/>let _199: u64;<br align="left"/>let mut _200: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _201: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _202: u64;<br align="left"/>let mut _203: u64;<br align="left"/>let mut _204: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _205: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _206: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _207: i64;<br align="left"/>let mut _208: isize;<br align="left"/>let _209: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _210: !;<br align="left"/>let mut _211: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _212: u64;<br align="left"/>let mut _213: i64;<br align="left"/>let mut _214: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _215: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _216: ();<br align="left"/>let mut _217: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _218: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _219: &amp;ReErased anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let _220: &amp;ReErased anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let mut _221: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let _222: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _223: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let _224: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _225: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _226: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _227: u8;<br align="left"/>let mut _228: &amp;ReErased state::state::State;<br align="left"/>let mut _229: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _230: u64;<br align="left"/>let mut _231: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let _232: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let mut _233: std::option::Option&lt;&amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;&gt;;<br align="left"/>let mut _234: bool;<br align="left"/>let mut _235: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _236: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _237: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _238: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _239: isize;<br align="left"/>let _240: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _241: !;<br align="left"/>let mut _242: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _243: ();<br align="left"/>let _244: ();<br align="left"/>let mut _245: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _246: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _247: &amp;ReErased mut anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _248: isize;<br align="left"/>let _249: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _250: !;<br align="left"/>let mut _251: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _252: ();<br align="left"/>let _253: i64;<br align="left"/>let mut _254: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _255: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _256: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _257: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _258: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _259: u64;<br align="left"/>let mut _260: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _261: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _262: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _263: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _264: isize;<br align="left"/>let _265: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _266: !;<br align="left"/>let mut _267: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _268: i64;<br align="left"/>let mut _269: ();<br align="left"/>let mut _270: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _271: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _272: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _273: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _274: &amp;ReErased mut instructions::keeper::SettleRevenueToInsuranceFund&lt;ReErased&gt;;<br align="left"/>let mut _275: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _276: &amp;ReErased mut instructions::keeper::SettleRevenueToInsuranceFund&lt;ReErased&gt;;<br align="left"/>let mut _277: &amp;ReErased mut instructions::keeper::SettleRevenueToInsuranceFund&lt;ReErased&gt;;<br align="left"/>let mut _278: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _279: &amp;ReErased mut instructions::keeper::SettleRevenueToInsuranceFund&lt;ReErased&gt;;<br align="left"/>let mut _280: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _281: &amp;ReErased mut instructions::keeper::SettleRevenueToInsuranceFund&lt;ReErased&gt;;<br align="left"/>let mut _282: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _283: &amp;ReErased mut instructions::keeper::SettleRevenueToInsuranceFund&lt;ReErased&gt;;<br align="left"/>let mut _284: &amp;ReErased mut instructions::keeper::SettleRevenueToInsuranceFund&lt;ReErased&gt;;<br align="left"/>let mut _285: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _286: &amp;ReErased mut instructions::keeper::SettleRevenueToInsuranceFund&lt;ReErased&gt;;<br align="left"/>let mut _287: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _288: &amp;ReErased mut instructions::keeper::SettleRevenueToInsuranceFund&lt;ReErased&gt;;<br align="left"/>let mut _289: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _290: &amp;ReErased mut instructions::keeper::SettleRevenueToInsuranceFund&lt;ReErased&gt;;<br align="left"/>let mut _291: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _292: &amp;ReErased mut instructions::keeper::SettleRevenueToInsuranceFund&lt;ReErased&gt;;<br align="left"/>let mut _293: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _294: isize;<br align="left"/>let mut _295: isize;<br align="left"/>let mut _296: isize;<br align="left"/>let mut _297: isize;<br align="left"/>let mut _298: isize;<br align="left"/>let mut _299: isize;<br align="left"/>let mut _300: isize;<br align="left"/>let mut _301: isize;<br align="left"/>let mut _302: isize;<br align="left"/>let mut _303: isize;<br align="left"/>let mut _304: isize;<br align="left"/>let mut _305: isize;<br align="left"/>let mut _306: isize;<br align="left"/>let mut _307: isize;<br align="left"/>let mut _308: isize;<br align="left"/>let mut _309: isize;<br align="left"/>let mut _310: isize;<br align="left"/>let mut _311: isize;<br align="left"/>let mut _312: isize;<br align="left"/>let mut _313: isize;<br align="left"/>let mut _314: isize;<br align="left"/>let mut _315: isize;<br align="left"/>let mut _316: isize;<br align="left"/>let mut _317: isize;<br align="left"/>let mut _318: isize;<br align="left"/>let mut _319: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _320: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _321: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _322: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _323: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _324: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _325: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _326: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug spot_market_index =&gt; _2;<br align="left"/>debug residual =&gt; _9;<br align="left"/>debug val =&gt; _12;<br align="left"/>debug state =&gt; _13;<br align="left"/>debug spot_market =&gt; _14;<br align="left"/>debug residual =&gt; _22;<br align="left"/>debug val =&gt; _25;<br align="left"/>debug remaining_accounts_iter =&gt; _26;<br align="left"/>debug mint =&gt; _30;<br align="left"/>debug residual =&gt; _35;<br align="left"/>debug val =&gt; _38;<br align="left"/>debug error_code =&gt; _48;<br align="left"/>debug res =&gt; _55;<br align="left"/>debug residual =&gt; _73;<br align="left"/>debug val =&gt; _76;<br align="left"/>debug error_code =&gt; _85;<br align="left"/>debug res =&gt; _92;<br align="left"/>debug residual =&gt; _110;<br align="left"/>debug val =&gt; _113;<br align="left"/>debug spot_vault_amount =&gt; _114;<br align="left"/>debug insurance_vault_amount =&gt; _119;<br align="left"/>debug clock =&gt; _124;<br align="left"/>debug residual =&gt; _128;<br align="left"/>debug val =&gt; _131;<br align="left"/>debug now =&gt; _132;<br align="left"/>debug time_until_next_update =&gt; _133;<br align="left"/>debug residual =&gt; _144;<br align="left"/>debug val =&gt; _147;<br align="left"/>debug error_code =&gt; _154;<br align="left"/>debug res =&gt; _161;<br align="left"/>debug res =&gt; _180;<br align="left"/>debug residual =&gt; _195;<br align="left"/>debug val =&gt; _198;<br align="left"/>debug token_amount =&gt; _199;<br align="left"/>debug residual =&gt; _209;<br align="left"/>debug val =&gt; _212;<br align="left"/>debug residual =&gt; _240;<br align="left"/>debug val =&gt; _243;<br align="left"/>debug residual =&gt; _249;<br align="left"/>debug val =&gt; _252;<br align="left"/>debug residual =&gt; _265;<br align="left"/>debug val =&gt; _268;<br align="left"/>>;
    bb0__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_274 = deref_copy (_1.1: &amp;mut instructions::keeper::SettleRevenueToInsuranceFund&lt;'_&gt;)<br/>_7 = &amp;((*_274).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_275 = deref_copy (*_7)<br/>_319 = (((_275.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_6 = &amp;(*_319)<br/></td></tr><tr><td align="left">_5 = constraints::withdraw_not_paused(move _6)</td></tr></table>>];
    bb1__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb2__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_8 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb3__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_4 as Continue).0: ())<br/>_3 = _12<br/>StorageDead(_12)<br/>_294 = discriminant(_4)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_13)<br/>_276 = deref_copy (_1.1: &amp;mut instructions::keeper::SettleRevenueToInsuranceFund&lt;'_&gt;)<br/>_13 = &amp;((*_276).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_277 = deref_copy (_1.1: &amp;mut instructions::keeper::SettleRevenueToInsuranceFund&lt;'_&gt;)<br/>_19 = &amp;((*_277).1: anchor_lang::prelude::AccountLoader&lt;'_, state::spot_market::SpotMarket&gt;)<br/></td></tr><tr><td align="left">_18 = anchor_lang::prelude::AccountLoader::&lt;'_, SpotMarket&gt;::load_mut(move _19)</td></tr></table>>];
    bb4__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>_9 = move ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_11)<br/>_11 = move _9<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _11)</td></tr></table>>];
    bb6__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_9)<br/>_312 = discriminant(_4)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageLive(_20)<br/>_20 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_17 = std::result::Result::&lt;RefMut&lt;'_, SpotMarket&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _18, move _20)</td></tr></table>>];
    bb8__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">_16 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _17)</td></tr></table>>];
    bb9__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>_21 = discriminant(_16)<br/></td></tr><tr><td align="left">switchInt(move _21)</td></tr></table>>];
    bb10__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_25)<br/>_25 = move ((_16 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_15 = move _25<br/>StorageDead(_25)<br/>_14 = &amp;mut _15<br/>_298 = discriminant(_16)<br/>StorageDead(_16)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_278 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_29 = &amp;(*_278)<br/></td></tr><tr><td align="left">_28 = core::slice::&lt;impl [anchor_lang::prelude::AccountInfo&lt;'_&gt;]&gt;::iter(move _29)</td></tr></table>>];
    bb11__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_22)<br/>_22 = ((_16 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_24)<br/>_24 = _22<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _24)</td></tr></table>>];
    bb12__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_22)<br/>_296 = discriminant(_16)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/></td></tr><tr><td align="left">_27 = &lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as Iterator&gt;::peekable(move _28)</td></tr></table>>];
    bb14__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>_26 = &amp;mut _27<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>_33 = &amp;mut (*_26)<br/></td></tr><tr><td align="left">_32 = get_token_mint(move _33)</td></tr></table>>];
    bb15__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/></td></tr><tr><td align="left">_31 = &lt;std::result::Result&lt;Option&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt;&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _32)</td></tr></table>>];
    bb16__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>_34 = discriminant(_31)<br/></td></tr><tr><td align="left">switchInt(move _34)</td></tr></table>>];
    bb17__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_38)<br/>_38 = move ((_31 as Continue).0: std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt;&gt;)<br/>_30 = move _38<br/>StorageDead(_38)<br/>StorageDead(_31)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>_43 = _2<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>_46 = &amp;(*_14)<br/></td></tr><tr><td align="left">_45 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _46)</td></tr></table>>];
    bb18__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = ((_31 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_37)<br/>_37 = _35<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _37)</td></tr></table>>];
    bb19__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_35)<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>_44 = ((*_45).42: u16)<br/>_42 = Eq(move _43, move _44)<br/></td></tr><tr><td align="left">switchInt(move _42)</td></tr></table>>];
    bb21__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_44)<br/>StorageDead(_43)<br/>StorageLive(_47)<br/>_47 = ()<br/>_41 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _47)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_44)<br/>StorageDead(_43)<br/>StorageLive(_48)<br/>_48 = error::ErrorCode::InvalidSpotMarketAccount<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>_273 = const _<br/>_59 = &amp;(*_273)<br/>_58 = &amp;(*_59)<br/>_57 = move _58 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_58)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>_67 = &amp;_48<br/>_66 = &amp;(*_67)<br/></td></tr><tr><td align="left">_65 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _66)</td></tr></table>>];
    bb23__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>_64 = [move _65]<br/>StorageDead(_65)<br/>_63 = &amp;_64<br/>_62 = &amp;(*_63)<br/>_61 = move _62 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">_56 = Arguments::&lt;'_&gt;::new_v1(move _57, move _61)</td></tr></table>>];
    bb24__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">_55 = format(move _56)</td></tr></table>>];
    bb25__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_67)<br/>StorageDead(_64)<br/>StorageDead(_63)<br/>StorageDead(_59)<br/>_54 = move _55<br/>StorageDead(_55)<br/>_53 = &amp;_54<br/>_52 = &amp;(*_53)<br/></td></tr><tr><td align="left">_51 = &lt;String as Deref&gt;::deref(move _52)</td></tr></table>>];
    bb26__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">_50 = &amp;(*_51)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">_49 = solana_program::log::sol_log(move _50)</td></tr></table>>];
    bb27__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/></td></tr><tr><td align="left">drop(_54)</td></tr></table>>];
    bb28__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_53)<br/>StorageDead(_51)<br/>StorageDead(_49)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>_70 = const &quot;invalid spot_market passed&quot;<br/>_69 = &amp;(*_70)<br/></td></tr><tr><td align="left">_68 = solana_program::log::sol_log(move _69)</td></tr></table>>];
    bb29__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageDead(_70)<br/>StorageDead(_68)<br/>StorageLive(_71)<br/>_71 = _48<br/>_41 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _71)<br/>StorageDead(_71)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/></td></tr><tr><td align="left">_40 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _41)</td></tr></table>>];
    bb31__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>_72 = discriminant(_40)<br/></td></tr><tr><td align="left">switchInt(move _72)</td></tr></table>>];
    bb32__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_76)<br/>_76 = ((_40 as Continue).0: ())<br/>_39 = _76<br/>StorageDead(_76)<br/>StorageDead(_40)<br/>StorageDead(_39)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>_83 = &amp;(*_14)<br/></td></tr><tr><td align="left">_82 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _83)</td></tr></table>>];
    bb33__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageLive(_73)<br/>_73 = ((_40 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_75)<br/>_75 = _73<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _75)</td></tr></table>>];
    bb34__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_73)<br/>StorageDead(_40)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>_81 = (((*_82).9: state::spot_market::InsuranceFund).6: i64)<br/>_80 = Gt(move _81, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _80)</td></tr></table>>];
    bb36__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>StorageDead(_81)<br/>StorageLive(_84)<br/>_84 = ()<br/>_79 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _84)<br/>StorageDead(_84)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>StorageDead(_81)<br/>StorageLive(_85)<br/>_85 = error::ErrorCode::RevenueSettingsCannotSettleToIF<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>_272 = const _<br/>_96 = &amp;(*_272)<br/>_95 = &amp;(*_96)<br/>_94 = move _95 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_95)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>_104 = &amp;_85<br/>_103 = &amp;(*_104)<br/></td></tr><tr><td align="left">_102 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _103)</td></tr></table>>];
    bb38__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>_101 = [move _102]<br/>StorageDead(_102)<br/>_100 = &amp;_101<br/>_99 = &amp;(*_100)<br/>_98 = move _99 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_99)<br/></td></tr><tr><td align="left">_93 = Arguments::&lt;'_&gt;::new_v1(move _94, move _98)</td></tr></table>>];
    bb39__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>StorageDead(_94)<br/></td></tr><tr><td align="left">_92 = format(move _93)</td></tr></table>>];
    bb40__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageDead(_104)<br/>StorageDead(_101)<br/>StorageDead(_100)<br/>StorageDead(_96)<br/>_91 = move _92<br/>StorageDead(_92)<br/>_90 = &amp;_91<br/>_89 = &amp;(*_90)<br/></td></tr><tr><td align="left">_88 = &lt;String as Deref&gt;::deref(move _89)</td></tr></table>>];
    bb41__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">_87 = &amp;(*_88)<br/>StorageDead(_89)<br/></td></tr><tr><td align="left">_86 = solana_program::log::sol_log(move _87)</td></tr></table>>];
    bb42__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/></td></tr><tr><td align="left">drop(_91)</td></tr></table>>];
    bb43__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/>StorageDead(_90)<br/>StorageDead(_88)<br/>StorageDead(_86)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>_107 = const &quot;invalid revenue_settle_period settings on spot market&quot;<br/>_106 = &amp;(*_107)<br/></td></tr><tr><td align="left">_105 = solana_program::log::sol_log(move _106)</td></tr></table>>];
    bb44__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/>StorageDead(_107)<br/>StorageDead(_105)<br/>StorageLive(_108)<br/>_108 = _85<br/>_79 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _108)<br/>StorageDead(_108)<br/>StorageDead(_85)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/></td></tr><tr><td align="left">_78 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _79)</td></tr></table>>];
    bb46__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>_109 = discriminant(_78)<br/></td></tr><tr><td align="left">switchInt(move _109)</td></tr></table>>];
    bb47__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageLive(_113)<br/>_113 = ((_78 as Continue).0: ())<br/>_77 = _113<br/>StorageDead(_113)<br/>StorageDead(_78)<br/>StorageDead(_77)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>_279 = deref_copy (_1.1: &amp;mut instructions::keeper::SettleRevenueToInsuranceFund&lt;'_&gt;)<br/>_280 = deref_copy ((*_279).2: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_320 = (((_280.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_118 = &amp;(*_320)<br/></td></tr><tr><td align="left">_117 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _118)</td></tr></table>>];
    bb48__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageLive(_110)<br/>_110 = ((_78 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_112)<br/>_112 = _110<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _112)</td></tr></table>>];
    bb49__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>StorageDead(_110)<br/>StorageDead(_78)<br/>StorageDead(_77)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">_116 = &amp;(*_117)<br/></td></tr><tr><td align="left">_115 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _116)</td></tr></table>>];
    bb51__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>StorageDead(_116)<br/>_114 = ((*_115).2: u64)<br/>StorageDead(_117)<br/>StorageDead(_115)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>_281 = deref_copy (_1.1: &amp;mut instructions::keeper::SettleRevenueToInsuranceFund&lt;'_&gt;)<br/>_282 = deref_copy ((*_281).4: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_321 = (((_282.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_123 = &amp;(*_321)<br/></td></tr><tr><td align="left">_122 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _123)</td></tr></table>>];
    bb52__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">_121 = &amp;(*_122)<br/></td></tr><tr><td align="left">_120 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _121)</td></tr></table>>];
    bb53__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/>StorageDead(_121)<br/>_119 = ((*_120).2: u64)<br/>StorageDead(_122)<br/>StorageDead(_120)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/></td></tr><tr><td align="left">_126 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb54__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left">_125 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _126)</td></tr></table>>];
    bb55__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/>_127 = discriminant(_125)<br/></td></tr><tr><td align="left">switchInt(move _127)</td></tr></table>>];
    bb56__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageLive(_131)<br/>_131 = move ((_125 as Continue).0: anchor_lang::prelude::Clock)<br/>_124 = move _131<br/>StorageDead(_131)<br/>_300 = discriminant(_125)<br/>StorageDead(_125)<br/>StorageLive(_132)<br/>_132 = (_124.4: i64)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>_136 = _132<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>_139 = &amp;(*_14)<br/></td></tr><tr><td align="left">_138 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _139)</td></tr></table>>];
    bb57__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageLive(_128)<br/>_128 = move ((_125 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_130)<br/>_130 = move _128<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _130)</td></tr></table>>];
    bb58__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_130)<br/>StorageDead(_128)<br/>_310 = discriminant(_125)<br/>StorageDead(_125)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_139)<br/>_137 = (((*_138).9: state::spot_market::InsuranceFund).5: i64)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>_142 = &amp;(*_14)<br/></td></tr><tr><td align="left">_141 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _142)</td></tr></table>>];
    bb60__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_142)<br/>_140 = (((*_141).9: state::spot_market::InsuranceFund).6: i64)<br/></td></tr><tr><td align="left">_135 = on_the_hour_update(move _136, move _137, move _140)</td></tr></table>>];
    bb61__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_140)<br/>StorageDead(_137)<br/>StorageDead(_136)<br/></td></tr><tr><td align="left">_134 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _135)</td></tr></table>>];
    bb62__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_135)<br/>_143 = discriminant(_134)<br/></td></tr><tr><td align="left">switchInt(move _143)</td></tr></table>>];
    bb63__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageLive(_147)<br/>_147 = ((_134 as Continue).0: i64)<br/>_133 = _147<br/>StorageDead(_147)<br/>StorageDead(_141)<br/>StorageDead(_138)<br/>StorageDead(_134)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>StorageLive(_152)<br/>_152 = _133<br/>_151 = Eq(move _152, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _151)</td></tr></table>>];
    bb64__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageLive(_144)<br/>_144 = ((_134 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_146)<br/>_146 = _144<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _146)</td></tr></table>>];
    bb65__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_146)<br/>StorageDead(_144)<br/>StorageDead(_141)<br/>StorageDead(_138)<br/>StorageDead(_134)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb66__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_152)<br/>StorageLive(_153)<br/>_153 = ()<br/>_150 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _153)<br/>StorageDead(_153)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb67__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_152)<br/>StorageLive(_154)<br/>_154 = error::ErrorCode::RevenueSettingsCannotSettleToIF<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>StorageLive(_161)<br/>StorageLive(_162)<br/>StorageLive(_163)<br/>StorageLive(_164)<br/>StorageLive(_165)<br/>_271 = const _<br/>_165 = &amp;(*_271)<br/>_164 = &amp;(*_165)<br/>_163 = move _164 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_164)<br/>StorageLive(_167)<br/>StorageLive(_168)<br/>StorageLive(_169)<br/>StorageLive(_170)<br/>StorageLive(_171)<br/>StorageLive(_172)<br/>StorageLive(_173)<br/>_173 = &amp;_154<br/>_172 = &amp;(*_173)<br/></td></tr><tr><td align="left">_171 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _172)</td></tr></table>>];
    bb68__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_172)<br/>_170 = [move _171]<br/>StorageDead(_171)<br/>_169 = &amp;_170<br/>_168 = &amp;(*_169)<br/>_167 = move _168 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_168)<br/></td></tr><tr><td align="left">_162 = Arguments::&lt;'_&gt;::new_v1(move _163, move _167)</td></tr></table>>];
    bb69__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_167)<br/>StorageDead(_163)<br/></td></tr><tr><td align="left">_161 = format(move _162)</td></tr></table>>];
    bb70__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_162)<br/>StorageDead(_173)<br/>StorageDead(_170)<br/>StorageDead(_169)<br/>StorageDead(_165)<br/>_160 = move _161<br/>StorageDead(_161)<br/>_159 = &amp;_160<br/>_158 = &amp;(*_159)<br/></td></tr><tr><td align="left">_157 = &lt;String as Deref&gt;::deref(move _158)</td></tr></table>>];
    bb71__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">_156 = &amp;(*_157)<br/>StorageDead(_158)<br/></td></tr><tr><td align="left">_155 = solana_program::log::sol_log(move _156)</td></tr></table>>];
    bb72__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_156)<br/></td></tr><tr><td align="left">drop(_160)</td></tr></table>>];
    bb73__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_160)<br/>StorageDead(_159)<br/>StorageDead(_157)<br/>StorageDead(_155)<br/>StorageLive(_174)<br/>StorageLive(_175)<br/>StorageLive(_176)<br/>StorageLive(_177)<br/>StorageLive(_178)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>StorageLive(_181)<br/>StorageLive(_182)<br/>StorageLive(_183)<br/>StorageLive(_184)<br/>_270 = const _<br/>_184 = &amp;(*_270)<br/>_183 = &amp;(*_184)<br/>_182 = move _183 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_183)<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>StorageLive(_189)<br/>StorageLive(_190)<br/>StorageLive(_191)<br/>StorageLive(_192)<br/>_192 = &amp;_133<br/>_191 = &amp;(*_192)<br/></td></tr><tr><td align="left">_190 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i64&gt;(move _191)</td></tr></table>>];
    bb74__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_191)<br/>_189 = [move _190]<br/>StorageDead(_190)<br/>_188 = &amp;_189<br/>_187 = &amp;(*_188)<br/>_186 = move _187 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_187)<br/></td></tr><tr><td align="left">_181 = Arguments::&lt;'_&gt;::new_v1(move _182, move _186)</td></tr></table>>];
    bb75__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_186)<br/>StorageDead(_182)<br/></td></tr><tr><td align="left">_180 = format(move _181)</td></tr></table>>];
    bb76__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_181)<br/>StorageDead(_192)<br/>StorageDead(_189)<br/>StorageDead(_188)<br/>StorageDead(_184)<br/>_179 = move _180<br/>StorageDead(_180)<br/>_178 = &amp;_179<br/>_177 = &amp;(*_178)<br/></td></tr><tr><td align="left">_176 = &lt;String as Deref&gt;::deref(move _177)</td></tr></table>>];
    bb77__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">_175 = &amp;(*_176)<br/>StorageDead(_177)<br/></td></tr><tr><td align="left">_174 = solana_program::log::sol_log(move _175)</td></tr></table>>];
    bb78__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_175)<br/></td></tr><tr><td align="left">drop(_179)</td></tr></table>>];
    bb79__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_179)<br/>StorageDead(_178)<br/>StorageDead(_176)<br/>StorageDead(_174)<br/>StorageLive(_193)<br/>_193 = _154<br/>_150 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _193)<br/>StorageDead(_193)<br/>StorageDead(_154)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb80__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_151)<br/></td></tr><tr><td align="left">_149 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _150)</td></tr></table>>];
    bb81__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_150)<br/>_194 = discriminant(_149)<br/></td></tr><tr><td align="left">switchInt(move _194)</td></tr></table>>];
    bb82__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageLive(_198)<br/>_198 = ((_149 as Continue).0: ())<br/>_148 = _198<br/>StorageDead(_198)<br/>StorageDead(_149)<br/>StorageDead(_148)<br/>StorageLive(_199)<br/>StorageLive(_200)<br/>StorageLive(_201)<br/>StorageLive(_202)<br/>_202 = _114<br/>StorageLive(_203)<br/>_203 = _119<br/>StorageLive(_204)<br/>StorageLive(_205)<br/>StorageLive(_206)<br/>_206 = &amp;mut (*_14)<br/></td></tr><tr><td align="left">_205 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _206)</td></tr></table>>];
    bb83__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageLive(_195)<br/>_195 = ((_149 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_197)<br/>_197 = _195<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _197)</td></tr></table>>];
    bb84__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_197)<br/>StorageDead(_195)<br/>StorageDead(_149)<br/>StorageDead(_148)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb85__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">_204 = &amp;mut (*_205)<br/>StorageDead(_206)<br/>StorageLive(_207)<br/>_207 = _132<br/></td></tr><tr><td align="left">_201 = controller::insurance::settle_revenue_to_insurance_fund(move _202, move _203, move _204, move _207, const true)</td></tr></table>>];
    bb86__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_207)<br/>StorageDead(_204)<br/>StorageDead(_203)<br/>StorageDead(_202)<br/></td></tr><tr><td align="left">_200 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _201)</td></tr></table>>];
    bb87__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_201)<br/>_208 = discriminant(_200)<br/></td></tr><tr><td align="left">switchInt(move _208)</td></tr></table>>];
    bb88__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageLive(_212)<br/>_212 = ((_200 as Continue).0: u64)<br/>_199 = _212<br/>StorageDead(_212)<br/>StorageDead(_205)<br/>StorageDead(_200)<br/>StorageLive(_213)<br/>_213 = _132<br/>StorageLive(_214)<br/>StorageLive(_215)<br/>_215 = &amp;mut (*_14)<br/></td></tr><tr><td align="left">_214 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _215)</td></tr></table>>];
    bb89__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageLive(_209)<br/>_209 = ((_200 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_211)<br/>_211 = _209<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _211)</td></tr></table>>];
    bb90__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_211)<br/>StorageDead(_209)<br/>StorageDead(_205)<br/>StorageDead(_200)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb91__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_215)<br/>(((*_214).9: state::spot_market::InsuranceFund).5: i64) = move _213<br/>StorageDead(_213)<br/>StorageDead(_214)<br/>StorageLive(_216)<br/>StorageLive(_217)<br/>StorageLive(_218)<br/>StorageLive(_219)<br/>StorageLive(_220)<br/>_283 = deref_copy (_1.1: &amp;mut instructions::keeper::SettleRevenueToInsuranceFund&lt;'_&gt;)<br/>_220 = &amp;((*_283).5: anchor_lang::prelude::Interface&lt;'_, anchor_spl::token_interface::TokenInterface&gt;)<br/>_219 = &amp;(*_220)<br/>StorageLive(_221)<br/>StorageLive(_222)<br/>_284 = deref_copy (_1.1: &amp;mut instructions::keeper::SettleRevenueToInsuranceFund&lt;'_&gt;)<br/>_222 = &amp;((*_284).2: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_285 = deref_copy (*_222)<br/>_322 = (((_285.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_221 = &amp;(*_322)<br/>StorageLive(_223)<br/>StorageLive(_224)<br/>_286 = deref_copy (_1.1: &amp;mut instructions::keeper::SettleRevenueToInsuranceFund&lt;'_&gt;)<br/>_224 = &amp;((*_286).4: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_287 = deref_copy (*_224)<br/>_323 = (((_287.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_223 = &amp;(*_323)<br/>StorageLive(_225)<br/>StorageLive(_226)<br/>_288 = deref_copy (_1.1: &amp;mut instructions::keeper::SettleRevenueToInsuranceFund&lt;'_&gt;)<br/>_226 = &amp;((*_288).3: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_225 = &amp;(*_226)<br/>StorageLive(_227)<br/>StorageLive(_228)<br/>StorageLive(_229)<br/>_289 = deref_copy (*_13)<br/>_324 = (((_289.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_229 = &amp;(*_324)<br/></td></tr><tr><td align="left">_228 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _229)</td></tr></table>>];
    bb92__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_229)<br/>_227 = ((*_228).15: u8)<br/>StorageLive(_230)<br/>_230 = _199<br/>StorageLive(_231)<br/>StorageLive(_232)<br/>_232 = &amp;_30<br/>_231 = &amp;(*_232)<br/>StorageLive(_233)<br/>StorageLive(_234)<br/>StorageLive(_235)<br/>StorageLive(_236)<br/>StorageLive(_237)<br/>_237 = &amp;(*_14)<br/></td></tr><tr><td align="left">_236 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _237)</td></tr></table>>];
    bb93__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">_235 = &amp;(*_236)<br/>StorageDead(_237)<br/></td></tr><tr><td align="left">_234 = SpotMarket::has_transfer_hook(move _235)</td></tr></table>>];
    bb94__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left">switchInt(move _234)</td></tr></table>>];
    bb95__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_236)<br/>StorageDead(_235)<br/>StorageLive(_238)<br/>_238 = &amp;mut (*_26)<br/>_233 = Option::&lt;&amp;mut Peekable&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;&gt;::Some(move _238)<br/>StorageDead(_238)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb96__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_236)<br/>StorageDead(_235)<br/>_233 = Option::&lt;&amp;mut Peekable&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;&gt;::None<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb97__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_234)<br/></td></tr><tr><td align="left">_218 = send_from_program_vault(move _219, move _221, move _223, move _225, move _227, move _230, move _231, move _233)</td></tr></table>>];
    bb98__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_233)<br/>StorageDead(_231)<br/>StorageDead(_230)<br/>StorageDead(_227)<br/>StorageDead(_225)<br/>StorageDead(_223)<br/>StorageDead(_221)<br/>StorageDead(_219)<br/></td></tr><tr><td align="left">_217 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _218)</td></tr></table>>];
    bb99__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageDead(_218)<br/>_239 = discriminant(_217)<br/></td></tr><tr><td align="left">switchInt(move _239)</td></tr></table>>];
    bb100__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageLive(_243)<br/>_243 = ((_217 as Continue).0: ())<br/>_216 = _243<br/>StorageDead(_243)<br/>_302 = discriminant(_217)<br/>StorageDead(_232)<br/>StorageDead(_228)<br/>StorageDead(_226)<br/>StorageDead(_224)<br/>StorageDead(_222)<br/>StorageDead(_220)<br/>StorageDead(_217)<br/>StorageDead(_216)<br/>StorageLive(_244)<br/>StorageLive(_245)<br/>StorageLive(_246)<br/>StorageLive(_247)<br/>_290 = deref_copy (_1.1: &amp;mut instructions::keeper::SettleRevenueToInsuranceFund&lt;'_&gt;)<br/>_291 = deref_copy ((*_290).2: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_325 = (((_291.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_247 = &amp;mut (*_325)<br/></td></tr><tr><td align="left">_246 = anchor_lang::prelude::InterfaceAccount::&lt;'_, anchor_spl::token_interface::TokenAccount&gt;::reload(move _247)</td></tr></table>>];
    bb101__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageLive(_240)<br/>_240 = move ((_217 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_242)<br/>_242 = move _240<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _242)</td></tr></table>>];
    bb102__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_242)<br/>StorageDead(_240)<br/>_308 = discriminant(_217)<br/>StorageDead(_232)<br/>StorageDead(_228)<br/>StorageDead(_226)<br/>StorageDead(_224)<br/>StorageDead(_222)<br/>StorageDead(_220)<br/>StorageDead(_217)<br/>StorageDead(_216)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb103__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_247)<br/></td></tr><tr><td align="left">_245 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _246)</td></tr></table>>];
    bb104__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_246)<br/>_248 = discriminant(_245)<br/></td></tr><tr><td align="left">switchInt(move _248)</td></tr></table>>];
    bb105__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageLive(_252)<br/>_252 = ((_245 as Continue).0: ())<br/>_244 = _252<br/>StorageDead(_252)<br/>_304 = discriminant(_245)<br/>StorageDead(_245)<br/>StorageDead(_244)<br/>StorageLive(_253)<br/>StorageLive(_254)<br/>StorageLive(_255)<br/>StorageLive(_256)<br/>StorageLive(_257)<br/>StorageLive(_258)<br/>_258 = &amp;(*_14)<br/></td></tr><tr><td align="left">_257 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _258)</td></tr></table>>];
    bb106__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageLive(_249)<br/>_249 = move ((_245 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_251)<br/>_251 = move _249<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _251)</td></tr></table>>];
    bb107__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_251)<br/>StorageDead(_249)<br/>_306 = discriminant(_245)<br/>StorageDead(_245)<br/>StorageDead(_244)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb108__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">_256 = &amp;(*_257)<br/>StorageDead(_258)<br/>StorageLive(_259)<br/>StorageLive(_260)<br/>StorageLive(_261)<br/>StorageLive(_262)<br/>StorageLive(_263)<br/>_292 = deref_copy (_1.1: &amp;mut instructions::keeper::SettleRevenueToInsuranceFund&lt;'_&gt;)<br/>_293 = deref_copy ((*_292).2: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_326 = (((_293.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_263 = &amp;(*_326)<br/></td></tr><tr><td align="left">_262 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _263)</td></tr></table>>];
    bb109__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">_261 = &amp;(*_262)<br/></td></tr><tr><td align="left">_260 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _261)</td></tr></table>>];
    bb110__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_263)<br/>StorageDead(_261)<br/>_259 = ((*_260).2: u64)<br/></td></tr><tr><td align="left">_255 = validate_spot_market_vault_amount(move _256, move _259)</td></tr></table>>];
    bb111__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_259)<br/>StorageDead(_256)<br/></td></tr><tr><td align="left">_254 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _255)</td></tr></table>>];
    bb112__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageDead(_255)<br/>_264 = discriminant(_254)<br/></td></tr><tr><td align="left">switchInt(move _264)</td></tr></table>>];
    bb113__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageLive(_268)<br/>_268 = ((_254 as Continue).0: i64)<br/>_253 = _268<br/>StorageDead(_268)<br/>StorageDead(_262)<br/>StorageDead(_260)<br/>StorageDead(_257)<br/>StorageDead(_254)<br/>StorageDead(_253)<br/>StorageLive(_269)<br/>_269 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _269)<br/>StorageDead(_269)<br/>StorageDead(_199)<br/>StorageDead(_133)<br/>StorageDead(_132)<br/>StorageDead(_124)<br/>StorageDead(_119)<br/>StorageDead(_114)<br/>StorageDead(_30)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">drop(_15)</td></tr></table>>];
    bb114__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageLive(_265)<br/>_265 = ((_254 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_267)<br/>_267 = _265<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _267)</td></tr></table>>];
    bb115__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageDead(_267)<br/>StorageDead(_265)<br/>StorageDead(_262)<br/>StorageDead(_260)<br/>StorageDead(_257)<br/>StorageDead(_254)<br/>StorageDead(_253)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb116__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb117__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageDead(_199)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb118__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/>StorageDead(_132)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb119__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageDead(_124)<br/>StorageDead(_119)<br/>StorageDead(_114)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb120__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">drop(_15)</td></tr></table>>];
    bb121__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb122__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left">return</td></tr></table>>];
    bb123__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">123 (cleanup)</td></tr><tr><td align="left">drop(_179)</td></tr></table>>];
    bb124__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">124 (cleanup)</td></tr><tr><td align="left">drop(_160)</td></tr></table>>];
    bb125__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">125 (cleanup)</td></tr><tr><td align="left">drop(_91)</td></tr></table>>];
    bb126__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">126 (cleanup)</td></tr><tr><td align="left">drop(_54)</td></tr></table>>];
    bb127__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">127 (cleanup)</td></tr><tr><td align="left">drop(_15)</td></tr></table>>];
    bb128__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">128 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb129__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">129 (cleanup)</td></tr><tr><td align="left" balign="left">_314 = discriminant(_245)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb130__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">130 (cleanup)</td></tr><tr><td align="left" balign="left">_315 = discriminant(_217)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb131__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">131 (cleanup)</td></tr><tr><td align="left" balign="left">_316 = discriminant(_125)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb132__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">132 (cleanup)</td></tr><tr><td align="left" balign="left">_317 = discriminant(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb133__0_9317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">133 (cleanup)</td></tr><tr><td align="left" balign="left">_318 = discriminant(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_9317 -> bb1__0_9317 [label="return"];
    bb1__0_9317 -> bb2__0_9317 [label="return"];
    bb1__0_9317 -> bb128__0_9317 [label="unwind"];
    bb2__0_9317 -> bb3__0_9317 [label="0"];
    bb2__0_9317 -> bb5__0_9317 [label="1"];
    bb2__0_9317 -> bb4__0_9317 [label="otherwise"];
    bb3__0_9317 -> bb7__0_9317 [label="return"];
    bb5__0_9317 -> bb6__0_9317 [label="return"];
    bb5__0_9317 -> bb133__0_9317 [label="unwind"];
    bb6__0_9317 -> bb122__0_9317 [label=""];
    bb7__0_9317 -> bb8__0_9317 [label="return"];
    bb7__0_9317 -> bb128__0_9317 [label="unwind"];
    bb8__0_9317 -> bb9__0_9317 [label="return"];
    bb8__0_9317 -> bb128__0_9317 [label="unwind"];
    bb9__0_9317 -> bb10__0_9317 [label="0"];
    bb9__0_9317 -> bb11__0_9317 [label="1"];
    bb9__0_9317 -> bb4__0_9317 [label="otherwise"];
    bb10__0_9317 -> bb13__0_9317 [label="return"];
    bb10__0_9317 -> bb127__0_9317 [label="unwind"];
    bb11__0_9317 -> bb12__0_9317 [label="return"];
    bb11__0_9317 -> bb132__0_9317 [label="unwind"];
    bb12__0_9317 -> bb121__0_9317 [label=""];
    bb13__0_9317 -> bb14__0_9317 [label="return"];
    bb13__0_9317 -> bb127__0_9317 [label="unwind"];
    bb14__0_9317 -> bb15__0_9317 [label="return"];
    bb14__0_9317 -> bb127__0_9317 [label="unwind"];
    bb15__0_9317 -> bb16__0_9317 [label="return"];
    bb15__0_9317 -> bb127__0_9317 [label="unwind"];
    bb16__0_9317 -> bb17__0_9317 [label="0"];
    bb16__0_9317 -> bb18__0_9317 [label="1"];
    bb16__0_9317 -> bb4__0_9317 [label="otherwise"];
    bb17__0_9317 -> bb20__0_9317 [label="return"];
    bb17__0_9317 -> bb127__0_9317 [label="unwind"];
    bb18__0_9317 -> bb19__0_9317 [label="return"];
    bb18__0_9317 -> bb127__0_9317 [label="unwind"];
    bb19__0_9317 -> bb120__0_9317 [label=""];
    bb20__0_9317 -> bb22__0_9317 [label="0"];
    bb20__0_9317 -> bb21__0_9317 [label="otherwise"];
    bb21__0_9317 -> bb30__0_9317 [label=""];
    bb22__0_9317 -> bb23__0_9317 [label="return"];
    bb22__0_9317 -> bb127__0_9317 [label="unwind"];
    bb23__0_9317 -> bb24__0_9317 [label="return"];
    bb23__0_9317 -> bb127__0_9317 [label="unwind"];
    bb24__0_9317 -> bb25__0_9317 [label="return"];
    bb24__0_9317 -> bb127__0_9317 [label="unwind"];
    bb25__0_9317 -> bb26__0_9317 [label="return"];
    bb25__0_9317 -> bb126__0_9317 [label="unwind"];
    bb26__0_9317 -> bb27__0_9317 [label="return"];
    bb26__0_9317 -> bb126__0_9317 [label="unwind"];
    bb27__0_9317 -> bb28__0_9317 [label="return"];
    bb27__0_9317 -> bb127__0_9317 [label="unwind"];
    bb28__0_9317 -> bb29__0_9317 [label="return"];
    bb28__0_9317 -> bb127__0_9317 [label="unwind"];
    bb29__0_9317 -> bb30__0_9317 [label=""];
    bb30__0_9317 -> bb31__0_9317 [label="return"];
    bb30__0_9317 -> bb127__0_9317 [label="unwind"];
    bb31__0_9317 -> bb32__0_9317 [label="0"];
    bb31__0_9317 -> bb33__0_9317 [label="1"];
    bb31__0_9317 -> bb4__0_9317 [label="otherwise"];
    bb32__0_9317 -> bb35__0_9317 [label="return"];
    bb32__0_9317 -> bb127__0_9317 [label="unwind"];
    bb33__0_9317 -> bb34__0_9317 [label="return"];
    bb33__0_9317 -> bb127__0_9317 [label="unwind"];
    bb34__0_9317 -> bb120__0_9317 [label=""];
    bb35__0_9317 -> bb37__0_9317 [label="0"];
    bb35__0_9317 -> bb36__0_9317 [label="otherwise"];
    bb36__0_9317 -> bb45__0_9317 [label=""];
    bb37__0_9317 -> bb38__0_9317 [label="return"];
    bb37__0_9317 -> bb127__0_9317 [label="unwind"];
    bb38__0_9317 -> bb39__0_9317 [label="return"];
    bb38__0_9317 -> bb127__0_9317 [label="unwind"];
    bb39__0_9317 -> bb40__0_9317 [label="return"];
    bb39__0_9317 -> bb127__0_9317 [label="unwind"];
    bb40__0_9317 -> bb41__0_9317 [label="return"];
    bb40__0_9317 -> bb125__0_9317 [label="unwind"];
    bb41__0_9317 -> bb42__0_9317 [label="return"];
    bb41__0_9317 -> bb125__0_9317 [label="unwind"];
    bb42__0_9317 -> bb43__0_9317 [label="return"];
    bb42__0_9317 -> bb127__0_9317 [label="unwind"];
    bb43__0_9317 -> bb44__0_9317 [label="return"];
    bb43__0_9317 -> bb127__0_9317 [label="unwind"];
    bb44__0_9317 -> bb45__0_9317 [label=""];
    bb45__0_9317 -> bb46__0_9317 [label="return"];
    bb45__0_9317 -> bb127__0_9317 [label="unwind"];
    bb46__0_9317 -> bb47__0_9317 [label="0"];
    bb46__0_9317 -> bb48__0_9317 [label="1"];
    bb46__0_9317 -> bb4__0_9317 [label="otherwise"];
    bb47__0_9317 -> bb50__0_9317 [label="return"];
    bb47__0_9317 -> bb127__0_9317 [label="unwind"];
    bb48__0_9317 -> bb49__0_9317 [label="return"];
    bb48__0_9317 -> bb127__0_9317 [label="unwind"];
    bb49__0_9317 -> bb120__0_9317 [label=""];
    bb50__0_9317 -> bb51__0_9317 [label="return"];
    bb50__0_9317 -> bb127__0_9317 [label="unwind"];
    bb51__0_9317 -> bb52__0_9317 [label="return"];
    bb51__0_9317 -> bb127__0_9317 [label="unwind"];
    bb52__0_9317 -> bb53__0_9317 [label="return"];
    bb52__0_9317 -> bb127__0_9317 [label="unwind"];
    bb53__0_9317 -> bb54__0_9317 [label="return"];
    bb53__0_9317 -> bb127__0_9317 [label="unwind"];
    bb54__0_9317 -> bb55__0_9317 [label="return"];
    bb54__0_9317 -> bb127__0_9317 [label="unwind"];
    bb55__0_9317 -> bb56__0_9317 [label="0"];
    bb55__0_9317 -> bb57__0_9317 [label="1"];
    bb55__0_9317 -> bb4__0_9317 [label="otherwise"];
    bb56__0_9317 -> bb59__0_9317 [label="return"];
    bb56__0_9317 -> bb127__0_9317 [label="unwind"];
    bb57__0_9317 -> bb58__0_9317 [label="return"];
    bb57__0_9317 -> bb131__0_9317 [label="unwind"];
    bb58__0_9317 -> bb119__0_9317 [label=""];
    bb59__0_9317 -> bb60__0_9317 [label="return"];
    bb59__0_9317 -> bb127__0_9317 [label="unwind"];
    bb60__0_9317 -> bb61__0_9317 [label="return"];
    bb60__0_9317 -> bb127__0_9317 [label="unwind"];
    bb61__0_9317 -> bb62__0_9317 [label="return"];
    bb61__0_9317 -> bb127__0_9317 [label="unwind"];
    bb62__0_9317 -> bb63__0_9317 [label="0"];
    bb62__0_9317 -> bb64__0_9317 [label="1"];
    bb62__0_9317 -> bb4__0_9317 [label="otherwise"];
    bb63__0_9317 -> bb67__0_9317 [label="0"];
    bb63__0_9317 -> bb66__0_9317 [label="otherwise"];
    bb64__0_9317 -> bb65__0_9317 [label="return"];
    bb64__0_9317 -> bb127__0_9317 [label="unwind"];
    bb65__0_9317 -> bb118__0_9317 [label=""];
    bb66__0_9317 -> bb80__0_9317 [label=""];
    bb67__0_9317 -> bb68__0_9317 [label="return"];
    bb67__0_9317 -> bb127__0_9317 [label="unwind"];
    bb68__0_9317 -> bb69__0_9317 [label="return"];
    bb68__0_9317 -> bb127__0_9317 [label="unwind"];
    bb69__0_9317 -> bb70__0_9317 [label="return"];
    bb69__0_9317 -> bb127__0_9317 [label="unwind"];
    bb70__0_9317 -> bb71__0_9317 [label="return"];
    bb70__0_9317 -> bb124__0_9317 [label="unwind"];
    bb71__0_9317 -> bb72__0_9317 [label="return"];
    bb71__0_9317 -> bb124__0_9317 [label="unwind"];
    bb72__0_9317 -> bb73__0_9317 [label="return"];
    bb72__0_9317 -> bb127__0_9317 [label="unwind"];
    bb73__0_9317 -> bb74__0_9317 [label="return"];
    bb73__0_9317 -> bb127__0_9317 [label="unwind"];
    bb74__0_9317 -> bb75__0_9317 [label="return"];
    bb74__0_9317 -> bb127__0_9317 [label="unwind"];
    bb75__0_9317 -> bb76__0_9317 [label="return"];
    bb75__0_9317 -> bb127__0_9317 [label="unwind"];
    bb76__0_9317 -> bb77__0_9317 [label="return"];
    bb76__0_9317 -> bb123__0_9317 [label="unwind"];
    bb77__0_9317 -> bb78__0_9317 [label="return"];
    bb77__0_9317 -> bb123__0_9317 [label="unwind"];
    bb78__0_9317 -> bb79__0_9317 [label="return"];
    bb78__0_9317 -> bb127__0_9317 [label="unwind"];
    bb79__0_9317 -> bb80__0_9317 [label=""];
    bb80__0_9317 -> bb81__0_9317 [label="return"];
    bb80__0_9317 -> bb127__0_9317 [label="unwind"];
    bb81__0_9317 -> bb82__0_9317 [label="0"];
    bb81__0_9317 -> bb83__0_9317 [label="1"];
    bb81__0_9317 -> bb4__0_9317 [label="otherwise"];
    bb82__0_9317 -> bb85__0_9317 [label="return"];
    bb82__0_9317 -> bb127__0_9317 [label="unwind"];
    bb83__0_9317 -> bb84__0_9317 [label="return"];
    bb83__0_9317 -> bb127__0_9317 [label="unwind"];
    bb84__0_9317 -> bb118__0_9317 [label=""];
    bb85__0_9317 -> bb86__0_9317 [label="return"];
    bb85__0_9317 -> bb127__0_9317 [label="unwind"];
    bb86__0_9317 -> bb87__0_9317 [label="return"];
    bb86__0_9317 -> bb127__0_9317 [label="unwind"];
    bb87__0_9317 -> bb88__0_9317 [label="0"];
    bb87__0_9317 -> bb89__0_9317 [label="1"];
    bb87__0_9317 -> bb4__0_9317 [label="otherwise"];
    bb88__0_9317 -> bb91__0_9317 [label="return"];
    bb88__0_9317 -> bb127__0_9317 [label="unwind"];
    bb89__0_9317 -> bb90__0_9317 [label="return"];
    bb89__0_9317 -> bb127__0_9317 [label="unwind"];
    bb90__0_9317 -> bb117__0_9317 [label=""];
    bb91__0_9317 -> bb92__0_9317 [label="return"];
    bb91__0_9317 -> bb127__0_9317 [label="unwind"];
    bb92__0_9317 -> bb93__0_9317 [label="return"];
    bb92__0_9317 -> bb127__0_9317 [label="unwind"];
    bb93__0_9317 -> bb94__0_9317 [label="return"];
    bb93__0_9317 -> bb127__0_9317 [label="unwind"];
    bb94__0_9317 -> bb96__0_9317 [label="0"];
    bb94__0_9317 -> bb95__0_9317 [label="otherwise"];
    bb95__0_9317 -> bb97__0_9317 [label=""];
    bb96__0_9317 -> bb97__0_9317 [label=""];
    bb97__0_9317 -> bb98__0_9317 [label="return"];
    bb97__0_9317 -> bb127__0_9317 [label="unwind"];
    bb98__0_9317 -> bb99__0_9317 [label="return"];
    bb98__0_9317 -> bb127__0_9317 [label="unwind"];
    bb99__0_9317 -> bb100__0_9317 [label="0"];
    bb99__0_9317 -> bb101__0_9317 [label="1"];
    bb99__0_9317 -> bb4__0_9317 [label="otherwise"];
    bb100__0_9317 -> bb103__0_9317 [label="return"];
    bb100__0_9317 -> bb127__0_9317 [label="unwind"];
    bb101__0_9317 -> bb102__0_9317 [label="return"];
    bb101__0_9317 -> bb130__0_9317 [label="unwind"];
    bb102__0_9317 -> bb117__0_9317 [label=""];
    bb103__0_9317 -> bb104__0_9317 [label="return"];
    bb103__0_9317 -> bb127__0_9317 [label="unwind"];
    bb104__0_9317 -> bb105__0_9317 [label="0"];
    bb104__0_9317 -> bb106__0_9317 [label="1"];
    bb104__0_9317 -> bb4__0_9317 [label="otherwise"];
    bb105__0_9317 -> bb108__0_9317 [label="return"];
    bb105__0_9317 -> bb127__0_9317 [label="unwind"];
    bb106__0_9317 -> bb107__0_9317 [label="return"];
    bb106__0_9317 -> bb129__0_9317 [label="unwind"];
    bb107__0_9317 -> bb117__0_9317 [label=""];
    bb108__0_9317 -> bb109__0_9317 [label="return"];
    bb108__0_9317 -> bb127__0_9317 [label="unwind"];
    bb109__0_9317 -> bb110__0_9317 [label="return"];
    bb109__0_9317 -> bb127__0_9317 [label="unwind"];
    bb110__0_9317 -> bb111__0_9317 [label="return"];
    bb110__0_9317 -> bb127__0_9317 [label="unwind"];
    bb111__0_9317 -> bb112__0_9317 [label="return"];
    bb111__0_9317 -> bb127__0_9317 [label="unwind"];
    bb112__0_9317 -> bb113__0_9317 [label="0"];
    bb112__0_9317 -> bb114__0_9317 [label="1"];
    bb112__0_9317 -> bb4__0_9317 [label="otherwise"];
    bb113__0_9317 -> bb116__0_9317 [label="return"];
    bb113__0_9317 -> bb128__0_9317 [label="unwind"];
    bb114__0_9317 -> bb115__0_9317 [label="return"];
    bb114__0_9317 -> bb127__0_9317 [label="unwind"];
    bb115__0_9317 -> bb117__0_9317 [label=""];
    bb116__0_9317 -> bb122__0_9317 [label=""];
    bb117__0_9317 -> bb118__0_9317 [label=""];
    bb118__0_9317 -> bb119__0_9317 [label=""];
    bb119__0_9317 -> bb120__0_9317 [label=""];
    bb120__0_9317 -> bb121__0_9317 [label="return"];
    bb120__0_9317 -> bb128__0_9317 [label="unwind"];
    bb121__0_9317 -> bb122__0_9317 [label=""];
    bb123__0_9317 -> bb127__0_9317 [label="return"];
    bb124__0_9317 -> bb127__0_9317 [label="return"];
    bb125__0_9317 -> bb127__0_9317 [label="return"];
    bb126__0_9317 -> bb127__0_9317 [label="return"];
    bb127__0_9317 -> bb128__0_9317 [label="return"];
    bb129__0_9317 -> bb127__0_9317 [label=""];
    bb130__0_9317 -> bb127__0_9317 [label=""];
    bb131__0_9317 -> bb127__0_9317 [label=""];
    bb132__0_9317 -> bb128__0_9317 [label=""];
    bb133__0_9317 -> bb128__0_9317 [label=""];
}
