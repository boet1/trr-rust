digraph Mir_0_82 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn controller::amm::calculate_quote_asset_amount_surplus(_1: u128, _2: u128, _3: controller::amm::SwapDirection, _4: u128, _5: u128, _6: bool) -&gt; std::result::Result&lt;u128, error::ErrorCode&gt;<br align="left"/>let _7: u128;<br align="left"/>let mut _8: isize;<br align="left"/>let mut _9: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _10: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _11: u128;<br align="left"/>let mut _12: u128;<br align="left"/>let mut _13: isize;<br align="left"/>let _14: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _15: !;<br align="left"/>let mut _16: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _17: u128;<br align="left"/>let mut _18: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _19: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _20: u128;<br align="left"/>let mut _21: u128;<br align="left"/>let mut _22: isize;<br align="left"/>let _23: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _24: !;<br align="left"/>let mut _25: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _26: u128;<br align="left"/>let mut _27: u128;<br align="left"/>let mut _28: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _29: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _30: u128;<br align="left"/>let mut _31: u128;<br align="left"/>let mut _32: isize;<br align="left"/>let _33: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _34: !;<br align="left"/>let mut _35: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _36: u128;<br align="left"/>let _37: ();<br align="left"/>let mut _38: bool;<br align="left"/>let mut _39: u128;<br align="left"/>let mut _40: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _41: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _42: u128;<br align="left"/>let mut _43: isize;<br align="left"/>let _44: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _45: !;<br align="left"/>let mut _46: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _47: u128;<br align="left"/>let _48: u128;<br align="left"/>let mut _49: bool;<br align="left"/>let mut _50: u128;<br align="left"/>let mut _51: u128;<br align="left"/>let mut _52: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _53: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _54: u128;<br align="left"/>let mut _55: u128;<br align="left"/>let mut _56: isize;<br align="left"/>let _57: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _58: !;<br align="left"/>let mut _59: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _60: u128;<br align="left"/>let mut _61: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _62: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _63: u128;<br align="left"/>let mut _64: u128;<br align="left"/>let mut _65: isize;<br align="left"/>let _66: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _67: !;<br align="left"/>let mut _68: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _69: u128;<br align="left"/>let mut _70: u128;<br align="left"/>debug quote_asset_reserve_before =&gt; _1;<br align="left"/>debug quote_asset_reserve_after =&gt; _2;<br align="left"/>debug swap_direction =&gt; _3;<br align="left"/>debug peg_multiplier =&gt; _4;<br align="left"/>debug initial_quote_asset_amount =&gt; _5;<br align="left"/>debug round_down =&gt; _6;<br align="left"/>debug quote_asset_reserve_change =&gt; _7;<br align="left"/>debug residual =&gt; _14;<br align="left"/>debug val =&gt; _17;<br align="left"/>debug residual =&gt; _23;<br align="left"/>debug val =&gt; _26;<br align="left"/>debug actual_quote_asset_amount =&gt; _27;<br align="left"/>debug residual =&gt; _33;<br align="left"/>debug val =&gt; _36;<br align="left"/>debug residual =&gt; _44;<br align="left"/>debug val =&gt; _47;<br align="left"/>debug quote_asset_amount_surplus =&gt; _48;<br align="left"/>debug residual =&gt; _57;<br align="left"/>debug val =&gt; _60;<br align="left"/>debug residual =&gt; _66;<br align="left"/>debug val =&gt; _69;<br align="left"/>>;
    bb0__0_82 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_7)<br/>_8 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb1__0_82 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_20 = _2<br/>StorageLive(_21)<br/>_21 = _1<br/></td></tr><tr><td align="left">_19 = &lt;u128 as SafeMath&gt;::safe_sub(move _20, move _21)</td></tr></table>>];
    bb2__0_82 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb3__0_82 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = _1<br/>StorageLive(_12)<br/>_12 = _2<br/></td></tr><tr><td align="left">_10 = &lt;u128 as SafeMath&gt;::safe_sub(move _11, move _12)</td></tr></table>>];
    bb4__0_82 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">_9 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _10)</td></tr></table>>];
    bb5__0_82 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>_13 = discriminant(_9)<br/></td></tr><tr><td align="left">switchInt(move _13)</td></tr></table>>];
    bb6__0_82 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>_17 = ((_9 as Continue).0: u128)<br/>_7 = _17<br/>StorageDead(_17)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_82 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = ((_9 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_16)<br/>_16 = _14<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _16)</td></tr></table>>];
    bb8__0_82 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_14)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_82 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">_18 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _19)</td></tr></table>>];
    bb10__0_82 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>_22 = discriminant(_18)<br/></td></tr><tr><td align="left">switchInt(move _22)</td></tr></table>>];
    bb11__0_82 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_26)<br/>_26 = ((_18 as Continue).0: u128)<br/>_7 = _26<br/>StorageDead(_26)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_82 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_23)<br/>_23 = ((_18 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_25)<br/>_25 = _23<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _25)</td></tr></table>>];
    bb13__0_82 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_23)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_82 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>_30 = _7<br/>StorageLive(_31)<br/>_31 = _4<br/></td></tr><tr><td align="left">_29 = quote_asset::reserve_to_asset_amount(move _30, move _31)</td></tr></table>>];
    bb15__0_82 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">_28 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _29)</td></tr></table>>];
    bb16__0_82 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>_32 = discriminant(_28)<br/></td></tr><tr><td align="left">switchInt(move _32)</td></tr></table>>];
    bb17__0_82 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_36)<br/>_36 = ((_28 as Continue).0: u128)<br/>_27 = _36<br/>StorageDead(_36)<br/>StorageDead(_28)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>_38 = _6<br/></td></tr><tr><td align="left">switchInt(move _38)</td></tr></table>>];
    bb18__0_82 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_33)<br/>_33 = ((_28 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_35)<br/>_35 = _33<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _35)</td></tr></table>>];
    bb19__0_82 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_33)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_82 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>_42 = _27<br/></td></tr><tr><td align="left">_41 = &lt;u128 as SafeMath&gt;::safe_add(move _42, const 1_u128)</td></tr></table>>];
    bb21__0_82 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">_37 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_82 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/></td></tr><tr><td align="left">_40 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _41)</td></tr></table>>];
    bb23__0_82 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>_43 = discriminant(_40)<br/></td></tr><tr><td align="left">switchInt(move _43)</td></tr></table>>];
    bb24__0_82 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>_47 = ((_40 as Continue).0: u128)<br/>_39 = _47<br/>StorageDead(_47)<br/>_27 = move _39<br/>StorageDead(_39)<br/>StorageDead(_40)<br/>_37 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_82 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_44)<br/>_44 = ((_40 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_46)<br/>_46 = _44<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _46)</td></tr></table>>];
    bb26__0_82 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_44)<br/>StorageDead(_39)<br/>StorageDead(_40)<br/>StorageDead(_38)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_82 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_37)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>_50 = _27<br/>StorageLive(_51)<br/>_51 = _5<br/>_49 = Gt(move _50, move _51)<br/></td></tr><tr><td align="left">switchInt(move _49)</td></tr></table>>];
    bb28__0_82 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageDead(_50)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>_54 = _27<br/>StorageLive(_55)<br/>_55 = _5<br/></td></tr><tr><td align="left">_53 = &lt;u128 as SafeMath&gt;::safe_sub(move _54, move _55)</td></tr></table>>];
    bb29__0_82 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">_52 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _53)</td></tr></table>>];
    bb30__0_82 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>_56 = discriminant(_52)<br/></td></tr><tr><td align="left">switchInt(move _56)</td></tr></table>>];
    bb31__0_82 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_60)<br/>_60 = ((_52 as Continue).0: u128)<br/>_48 = _60<br/>StorageDead(_60)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_82 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_57)<br/>_57 = ((_52 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_59)<br/>_59 = _57<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _59)</td></tr></table>>];
    bb33__0_82 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_57)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_82 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageDead(_50)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>_63 = _5<br/>StorageLive(_64)<br/>_64 = _27<br/></td></tr><tr><td align="left">_62 = &lt;u128 as SafeMath&gt;::safe_sub(move _63, move _64)</td></tr></table>>];
    bb35__0_82 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageDead(_63)<br/></td></tr><tr><td align="left">_61 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _62)</td></tr></table>>];
    bb36__0_82 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>_65 = discriminant(_61)<br/></td></tr><tr><td align="left">switchInt(move _65)</td></tr></table>>];
    bb37__0_82 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_69)<br/>_69 = ((_61 as Continue).0: u128)<br/>_48 = _69<br/>StorageDead(_69)<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_82 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_66)<br/>_66 = ((_61 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_68)<br/>_68 = _66<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _68)</td></tr></table>>];
    bb39__0_82 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>StorageDead(_66)<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_82 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageLive(_70)<br/>_70 = _48<br/>_0 = std::result::Result::&lt;u128, error::ErrorCode&gt;::Ok(move _70)<br/>StorageDead(_70)<br/>StorageDead(_48)<br/>StorageDead(_27)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_82 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_82 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_82 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_82 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_82 -> bb3__0_82 [label="0"];
    bb0__0_82 -> bb1__0_82 [label="1"];
    bb0__0_82 -> bb2__0_82 [label="otherwise"];
    bb1__0_82 -> bb9__0_82 [label="return"];
    bb3__0_82 -> bb4__0_82 [label="return"];
    bb4__0_82 -> bb5__0_82 [label="return"];
    bb5__0_82 -> bb6__0_82 [label="0"];
    bb5__0_82 -> bb7__0_82 [label="1"];
    bb5__0_82 -> bb2__0_82 [label="otherwise"];
    bb6__0_82 -> bb14__0_82 [label=""];
    bb7__0_82 -> bb8__0_82 [label="return"];
    bb8__0_82 -> bb43__0_82 [label=""];
    bb9__0_82 -> bb10__0_82 [label="return"];
    bb10__0_82 -> bb11__0_82 [label="0"];
    bb10__0_82 -> bb12__0_82 [label="1"];
    bb10__0_82 -> bb2__0_82 [label="otherwise"];
    bb11__0_82 -> bb14__0_82 [label=""];
    bb12__0_82 -> bb13__0_82 [label="return"];
    bb13__0_82 -> bb43__0_82 [label=""];
    bb14__0_82 -> bb15__0_82 [label="return"];
    bb15__0_82 -> bb16__0_82 [label="return"];
    bb16__0_82 -> bb17__0_82 [label="0"];
    bb16__0_82 -> bb18__0_82 [label="1"];
    bb16__0_82 -> bb2__0_82 [label="otherwise"];
    bb17__0_82 -> bb21__0_82 [label="0"];
    bb17__0_82 -> bb20__0_82 [label="otherwise"];
    bb18__0_82 -> bb19__0_82 [label="return"];
    bb19__0_82 -> bb42__0_82 [label=""];
    bb20__0_82 -> bb22__0_82 [label="return"];
    bb21__0_82 -> bb27__0_82 [label=""];
    bb22__0_82 -> bb23__0_82 [label="return"];
    bb23__0_82 -> bb24__0_82 [label="0"];
    bb23__0_82 -> bb25__0_82 [label="1"];
    bb23__0_82 -> bb2__0_82 [label="otherwise"];
    bb24__0_82 -> bb27__0_82 [label=""];
    bb25__0_82 -> bb26__0_82 [label="return"];
    bb26__0_82 -> bb42__0_82 [label=""];
    bb27__0_82 -> bb34__0_82 [label="0"];
    bb27__0_82 -> bb28__0_82 [label="otherwise"];
    bb28__0_82 -> bb29__0_82 [label="return"];
    bb29__0_82 -> bb30__0_82 [label="return"];
    bb30__0_82 -> bb31__0_82 [label="0"];
    bb30__0_82 -> bb32__0_82 [label="1"];
    bb30__0_82 -> bb2__0_82 [label="otherwise"];
    bb31__0_82 -> bb40__0_82 [label=""];
    bb32__0_82 -> bb33__0_82 [label="return"];
    bb33__0_82 -> bb41__0_82 [label=""];
    bb34__0_82 -> bb35__0_82 [label="return"];
    bb35__0_82 -> bb36__0_82 [label="return"];
    bb36__0_82 -> bb37__0_82 [label="0"];
    bb36__0_82 -> bb38__0_82 [label="1"];
    bb36__0_82 -> bb2__0_82 [label="otherwise"];
    bb37__0_82 -> bb40__0_82 [label=""];
    bb38__0_82 -> bb39__0_82 [label="return"];
    bb39__0_82 -> bb41__0_82 [label=""];
    bb40__0_82 -> bb44__0_82 [label=""];
    bb41__0_82 -> bb42__0_82 [label=""];
    bb42__0_82 -> bb43__0_82 [label=""];
    bb43__0_82 -> bb44__0_82 [label=""];
}
