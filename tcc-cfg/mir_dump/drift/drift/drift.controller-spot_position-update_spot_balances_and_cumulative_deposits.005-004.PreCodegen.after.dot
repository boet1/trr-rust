digraph Mir_0_827 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn update_spot_balances_and_cumulative_deposits(_1: u128, _2: &amp;ReErased state::spot_market::SpotBalanceType, _3: &amp;ReErased mut state::spot_market::SpotMarket, _4: &amp;ReErased mut state::user::SpotPosition, _5: bool, _6: std::option::Option&lt;u128&gt;) -&gt; std::result::Result&lt;(), error::ErrorCode&gt;<br align="left"/>let _7: ();<br align="left"/>let mut _8: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _9: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _10: u128;<br align="left"/>let mut _11: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _12: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _13: &amp;ReErased mut dyn [Binder(Trait(state::spot_market::SpotBalance), [])] + ReErased;<br align="left"/>let mut _14: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let mut _15: bool;<br align="left"/>let mut _16: isize;<br align="left"/>let _17: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _18: !;<br align="left"/>let mut _19: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _20: ();<br align="left"/>let _21: u128;<br align="left"/>let mut _22: std::option::Option&lt;u128&gt;;<br align="left"/>let mut _23: u128;<br align="left"/>let _24: ();<br align="left"/>let mut _25: isize;<br align="left"/>let mut _26: i64;<br align="left"/>let mut _27: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _28: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _29: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _30: i64;<br align="left"/>let mut _31: i64;<br align="left"/>let mut _32: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _33: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _34: u128;<br align="left"/>let mut _35: isize;<br align="left"/>let _36: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _37: !;<br align="left"/>let mut _38: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _39: i64;<br align="left"/>let mut _40: Closure(DefId(0:4766 ~ drift[d311]::controller::spot_position::update_spot_balances_and_cumulative_deposits::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn(()) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _41: isize;<br align="left"/>let _42: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _43: !;<br align="left"/>let mut _44: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _45: i64;<br align="left"/>let mut _46: i64;<br align="left"/>let mut _47: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _48: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _49: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _50: i64;<br align="left"/>let mut _51: i64;<br align="left"/>let mut _52: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _53: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _54: u128;<br align="left"/>let mut _55: isize;<br align="left"/>let _56: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _57: !;<br align="left"/>let mut _58: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _59: i64;<br align="left"/>let mut _60: Closure(DefId(0:4767 ~ drift[d311]::controller::spot_position::update_spot_balances_and_cumulative_deposits::{closure#1}), [i32, Binder(extern &quot;RustCall&quot; fn(()) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _61: isize;<br align="left"/>let _62: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _63: !;<br align="left"/>let mut _64: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _65: i64;<br align="left"/>let mut _66: ();<br align="left"/>debug token_amount =&gt; _1;<br align="left"/>debug update_direction =&gt; _2;<br align="left"/>debug spot_market =&gt; _3;<br align="left"/>debug spot_position =&gt; _4;<br align="left"/>debug is_leaving_drift =&gt; _5;<br align="left"/>debug cumulative_deposit_delta =&gt; _6;<br align="left"/>debug residual =&gt; _17;<br align="left"/>debug val =&gt; _20;<br align="left"/>debug cumulative_deposit_delta =&gt; _21;<br align="left"/>debug residual =&gt; _36;<br align="left"/>debug val =&gt; _39;<br align="left"/>debug residual =&gt; _42;<br align="left"/>debug val =&gt; _45;<br align="left"/>debug residual =&gt; _56;<br align="left"/>debug val =&gt; _59;<br align="left"/>debug residual =&gt; _62;<br align="left"/>debug val =&gt; _65;<br align="left"/>>;
    bb0__0_827 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = _1<br/>StorageLive(_11)<br/>_11 = &amp;(*_2)<br/>StorageLive(_12)<br/>_12 = &amp;mut (*_3)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_14 = &amp;mut (*_4)<br/>_13 = move _14 as &amp;mut dyn state::spot_market::SpotBalance (PointerCoercion(Unsize))<br/>StorageDead(_14)<br/>StorageLive(_15)<br/>_15 = _5<br/></td></tr><tr><td align="left">_9 = update_spot_balances(move _10, move _11, move _12, move _13, move _15)</td></tr></table>>];
    bb1__0_827 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">_8 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _9)</td></tr></table>>];
    bb2__0_827 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>_16 = discriminant(_8)<br/></td></tr><tr><td align="left">switchInt(move _16)</td></tr></table>>];
    bb3__0_827 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_20)<br/>_20 = ((_8 as Continue).0: ())<br/>_7 = _20<br/>StorageDead(_20)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_22 = _6<br/>StorageLive(_23)<br/>_23 = _1<br/></td></tr><tr><td align="left">_21 = Option::&lt;u128&gt;::unwrap_or(move _22, move _23)</td></tr></table>>];
    bb4__0_827 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_827 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>_17 = ((_8 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_19)<br/>_19 = _17<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _19)</td></tr></table>>];
    bb6__0_827 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_17)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_827 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_22)<br/>StorageLive(_24)<br/>_25 = discriminant((*_2))<br/></td></tr><tr><td align="left">switchInt(move _25)</td></tr></table>>];
    bb8__0_827 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>_50 = ((*_4).3: i64)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>_54 = _21<br/></td></tr><tr><td align="left">_53 = &lt;u128 as Cast&gt;::cast::&lt;i64&gt;(move _54)</td></tr></table>>];
    bb9__0_827 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>_30 = ((*_4).3: i64)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>_34 = _21<br/></td></tr><tr><td align="left">_33 = &lt;u128 as Cast&gt;::cast::&lt;i64&gt;(move _34)</td></tr></table>>];
    bb10__0_827 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/></td></tr><tr><td align="left">_32 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _33)</td></tr></table>>];
    bb11__0_827 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>_35 = discriminant(_32)<br/></td></tr><tr><td align="left">switchInt(move _35)</td></tr></table>>];
    bb12__0_827 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_39)<br/>_39 = ((_32 as Continue).0: i64)<br/>_31 = _39<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">_29 = core::num::&lt;impl i64&gt;::checked_add(move _30, move _31)</td></tr></table>>];
    bb13__0_827 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_36)<br/>_36 = ((_32 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_38)<br/>_38 = _36<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _38)</td></tr></table>>];
    bb14__0_827 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_36)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/>StorageDead(_29)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_827 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_30)<br/>StorageLive(_40)<br/>_40 = {closure@programs/drift/src/error.rs:658:9: 658:11}<br/></td></tr><tr><td align="left">_28 = Option::&lt;i64&gt;::ok_or_else::&lt;error::ErrorCode, {closure@programs/drift/src/error.rs:658:9: 658:11}&gt;(move _29, move _40)</td></tr></table>>];
    bb16__0_827 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">_27 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _28)</td></tr></table>>];
    bb17__0_827 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>_41 = discriminant(_27)<br/></td></tr><tr><td align="left">switchInt(move _41)</td></tr></table>>];
    bb18__0_827 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_45)<br/>_45 = ((_27 as Continue).0: i64)<br/>_26 = _45<br/>StorageDead(_45)<br/>((*_4).3: i64) = move _26<br/>_24 = const ()<br/>StorageDead(_26)<br/>StorageDead(_32)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_827 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_42)<br/>_42 = ((_27 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_44)<br/>_44 = _42<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _44)</td></tr></table>>];
    bb20__0_827 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_827 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/></td></tr><tr><td align="left">_52 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _53)</td></tr></table>>];
    bb22__0_827 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>_55 = discriminant(_52)<br/></td></tr><tr><td align="left">switchInt(move _55)</td></tr></table>>];
    bb23__0_827 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_59)<br/>_59 = ((_52 as Continue).0: i64)<br/>_51 = _59<br/>StorageDead(_59)<br/></td></tr><tr><td align="left">_49 = core::num::&lt;impl i64&gt;::checked_sub(move _50, move _51)</td></tr></table>>];
    bb24__0_827 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_56)<br/>_56 = ((_52 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_58)<br/>_58 = _56<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _58)</td></tr></table>>];
    bb25__0_827 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageDead(_56)<br/>StorageDead(_51)<br/>StorageDead(_50)<br/>StorageDead(_49)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_827 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageDead(_50)<br/>StorageLive(_60)<br/>_60 = {closure@programs/drift/src/error.rs:658:9: 658:11}<br/></td></tr><tr><td align="left">_48 = Option::&lt;i64&gt;::ok_or_else::&lt;error::ErrorCode, {closure@programs/drift/src/error.rs:658:9: 658:11}&gt;(move _49, move _60)</td></tr></table>>];
    bb27__0_827 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">_47 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _48)</td></tr></table>>];
    bb28__0_827 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>_61 = discriminant(_47)<br/></td></tr><tr><td align="left">switchInt(move _61)</td></tr></table>>];
    bb29__0_827 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_65)<br/>_65 = ((_47 as Continue).0: i64)<br/>_46 = _65<br/>StorageDead(_65)<br/>((*_4).3: i64) = move _46<br/>_24 = const ()<br/>StorageDead(_46)<br/>StorageDead(_52)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_827 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_62)<br/>_62 = ((_47 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_64)<br/>_64 = _62<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _64)</td></tr></table>>];
    bb31__0_827 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_827 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageLive(_66)<br/>_66 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _66)<br/>StorageDead(_66)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_827 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_52)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_827 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_32)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_827 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_827 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_827 -> bb1__0_827 [label="return"];
    bb1__0_827 -> bb2__0_827 [label="return"];
    bb2__0_827 -> bb3__0_827 [label="0"];
    bb2__0_827 -> bb5__0_827 [label="1"];
    bb2__0_827 -> bb4__0_827 [label="otherwise"];
    bb3__0_827 -> bb7__0_827 [label="return"];
    bb5__0_827 -> bb6__0_827 [label="return"];
    bb6__0_827 -> bb36__0_827 [label=""];
    bb7__0_827 -> bb9__0_827 [label="0"];
    bb7__0_827 -> bb8__0_827 [label="1"];
    bb7__0_827 -> bb4__0_827 [label="otherwise"];
    bb8__0_827 -> bb21__0_827 [label="return"];
    bb9__0_827 -> bb10__0_827 [label="return"];
    bb10__0_827 -> bb11__0_827 [label="return"];
    bb11__0_827 -> bb12__0_827 [label="0"];
    bb11__0_827 -> bb13__0_827 [label="1"];
    bb11__0_827 -> bb4__0_827 [label="otherwise"];
    bb12__0_827 -> bb15__0_827 [label="return"];
    bb13__0_827 -> bb14__0_827 [label="return"];
    bb14__0_827 -> bb34__0_827 [label=""];
    bb15__0_827 -> bb16__0_827 [label="return"];
    bb16__0_827 -> bb17__0_827 [label="return"];
    bb17__0_827 -> bb18__0_827 [label="0"];
    bb17__0_827 -> bb19__0_827 [label="1"];
    bb17__0_827 -> bb4__0_827 [label="otherwise"];
    bb18__0_827 -> bb32__0_827 [label=""];
    bb19__0_827 -> bb20__0_827 [label="return"];
    bb20__0_827 -> bb34__0_827 [label=""];
    bb21__0_827 -> bb22__0_827 [label="return"];
    bb22__0_827 -> bb23__0_827 [label="0"];
    bb22__0_827 -> bb24__0_827 [label="1"];
    bb22__0_827 -> bb4__0_827 [label="otherwise"];
    bb23__0_827 -> bb26__0_827 [label="return"];
    bb24__0_827 -> bb25__0_827 [label="return"];
    bb25__0_827 -> bb33__0_827 [label=""];
    bb26__0_827 -> bb27__0_827 [label="return"];
    bb27__0_827 -> bb28__0_827 [label="return"];
    bb28__0_827 -> bb29__0_827 [label="0"];
    bb28__0_827 -> bb30__0_827 [label="1"];
    bb28__0_827 -> bb4__0_827 [label="otherwise"];
    bb29__0_827 -> bb32__0_827 [label=""];
    bb30__0_827 -> bb31__0_827 [label="return"];
    bb31__0_827 -> bb33__0_827 [label=""];
    bb32__0_827 -> bb36__0_827 [label=""];
    bb33__0_827 -> bb35__0_827 [label=""];
    bb34__0_827 -> bb35__0_827 [label=""];
    bb35__0_827 -> bb36__0_827 [label=""];
}
