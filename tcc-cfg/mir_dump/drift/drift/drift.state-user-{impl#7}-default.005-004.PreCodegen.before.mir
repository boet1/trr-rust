// MIR for `state::user::<impl at programs/drift/src/state/user.rs:1524:1: 1524:23>::default` before PreCodegen

fn state::user::<impl at programs/drift/src/state/user.rs:1524:1: 1524:23>::default() -> Order {
    let mut _0: state::user::Order;
    let mut _1: state::user::OrderStatus;
    let mut _2: state::user::OrderType;
    let mut _3: state::user::MarketType;
    let mut _4: controller::position::PositionDirection;
    let mut _5: controller::position::PositionDirection;
    let mut _6: state::user::OrderTriggerCondition;
    let mut _7: [u8; 1];

    bb0: {
        StorageLive(_1);
        _1 = OrderStatus::Init;
        StorageLive(_2);
        _2 = state::user::OrderType::Limit;
        StorageLive(_3);
        _3 = state::user::MarketType::Perp;
        StorageLive(_4);
        _4 = controller::position::PositionDirection::Long;
        StorageLive(_5);
        _5 = controller::position::PositionDirection::Long;
        StorageLive(_6);
        _6 = OrderTriggerCondition::Above;
        StorageLive(_7);
        _7 = [const 0_u8; 1];
        _0 = Order { slot: const 0_u64, price: const 0_u64, base_asset_amount: const 0_u64, base_asset_amount_filled: const 0_u64, quote_asset_amount_filled: const 0_u64, trigger_price: const 0_u64, auction_start_price: const 0_i64, auction_end_price: const 0_i64, max_ts: const 0_i64, oracle_price_offset: const 0_i32, order_id: const 0_u32, market_index: const 0_u16, status: move _1, order_type: move _2, market_type: move _3, user_order_id: const 0_u8, existing_position_direction: move _4, direction: move _5, reduce_only: const false, post_only: const false, immediate_or_cancel: const false, trigger_condition: move _6, auction_duration: const 0_u8, posted_slot_tail: const 0_u8, bit_flags: const 0_u8, padding: move _7 };
        StorageDead(_7);
        StorageDead(_6);
        StorageDead(_5);
        StorageDead(_4);
        StorageDead(_3);
        StorageDead(_2);
        StorageDead(_1);
        return;
    }
}
