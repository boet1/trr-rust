digraph Mir_0_2488 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn is_maker_for_taker(_1: &amp;ReErased state::user::Order, _2: &amp;ReErased state::user::Order, _3: u64) -&gt; std::result::Result&lt;bool, error::ErrorCode&gt;<br align="left"/>let _4: ();<br align="left"/>let mut _5: bool;<br align="left"/>let mut _6: u64;<br align="left"/>let mut _7: u64;<br align="left"/>let mut _8: bool;<br align="left"/>let mut _9: u64;<br align="left"/>let mut _10: u64;<br align="left"/>let mut _11: bool;<br align="left"/>let mut _12: &amp;ReErased state::user::Order;<br align="left"/>let mut _13: !;<br align="left"/>let mut _14: bool;<br align="left"/>let mut _15: bool;<br align="left"/>let mut _16: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _17: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _18: &amp;ReErased state::user::Order;<br align="left"/>let mut _19: u64;<br align="left"/>let mut _20: isize;<br align="left"/>let _21: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _22: !;<br align="left"/>let mut _23: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _24: bool;<br align="left"/>let mut _25: bool;<br align="left"/>let mut _26: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _27: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _28: &amp;ReErased state::user::Order;<br align="left"/>let mut _29: u64;<br align="left"/>let mut _30: isize;<br align="left"/>let _31: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _32: !;<br align="left"/>let mut _33: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _34: bool;<br align="left"/>let mut _35: bool;<br align="left"/>let mut _36: bool;<br align="left"/>let mut _37: u64;<br align="left"/>let mut _38: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _39: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _40: u64;<br align="left"/>let mut _41: u64;<br align="left"/>let mut _42: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _43: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _44: u8;<br align="left"/>let mut _45: isize;<br align="left"/>let _46: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _47: !;<br align="left"/>let mut _48: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _49: u64;<br align="left"/>let mut _50: isize;<br align="left"/>let _51: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _52: !;<br align="left"/>let mut _53: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _54: u64;<br align="left"/>let mut _55: u64;<br align="left"/>let mut _56: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _57: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _58: u64;<br align="left"/>let mut _59: u64;<br align="left"/>let mut _60: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _61: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _62: u8;<br align="left"/>let mut _63: isize;<br align="left"/>let _64: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _65: !;<br align="left"/>let mut _66: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _67: u64;<br align="left"/>let mut _68: isize;<br align="left"/>let _69: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _70: !;<br align="left"/>let mut _71: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _72: u64;<br align="left"/>debug maker_order =&gt; _1;<br align="left"/>debug taker_order =&gt; _2;<br align="left"/>debug slot =&gt; _3;<br align="left"/>debug residual =&gt; _21;<br align="left"/>debug val =&gt; _24;<br align="left"/>debug residual =&gt; _31;<br align="left"/>debug val =&gt; _34;<br align="left"/>debug residual =&gt; _46;<br align="left"/>debug val =&gt; _49;<br align="left"/>debug residual =&gt; _51;<br align="left"/>debug val =&gt; _54;<br align="left"/>debug residual =&gt; _64;<br align="left"/>debug val =&gt; _67;<br align="left"/>debug residual =&gt; _69;<br align="left"/>debug val =&gt; _72;<br align="left"/>>;
    bb0__0_2488 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = _3<br/>StorageLive(_7)<br/>_7 = ((*_1).0: u64)<br/>_5 = Eq(move _6, move _7)<br/></td></tr><tr><td align="left">switchInt(move _5)</td></tr></table>>];
    bb1__0_2488 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_6)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = _3<br/>StorageLive(_10)<br/>_10 = ((*_2).0: u64)<br/>_8 = Eq(move _9, move _10)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb2__0_2488 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_9)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = &amp;(*_1)<br/></td></tr><tr><td align="left">_11 = Order::is_jit_maker(move _12)</td></tr></table>>];
    bb3__0_2488 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left">switchInt(move _11)</td></tr></table>>];
    bb4__0_2488 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb5__0_2488 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>_0 = std::result::Result::&lt;bool, error::ErrorCode&gt;::Ok(const false)<br/>StorageDead(_11)<br/>StorageDead(_8)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb6__0_2488 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_2488 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_2488 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">_4 = const ()<br/>StorageDead(_11)<br/>StorageDead(_8)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageLive(_14)<br/>_14 = ((*_2).19: bool)<br/></td></tr><tr><td align="left">switchInt(move _14)</td></tr></table>>];
    bb9__0_2488 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = &amp;(*_1)<br/>StorageLive(_19)<br/>_19 = _3<br/></td></tr><tr><td align="left">_17 = Order::is_resting_limit_order(move _18, move _19)</td></tr></table>>];
    bb10__0_2488 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">_16 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _17)</td></tr></table>>];
    bb11__0_2488 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>_20 = discriminant(_16)<br/></td></tr><tr><td align="left">switchInt(move _20)</td></tr></table>>];
    bb12__0_2488 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_24)<br/>_24 = ((_16 as Continue).0: bool)<br/>_15 = _24<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">switchInt(move _15)</td></tr></table>>];
    bb13__0_2488 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb14__0_2488 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = ((_16 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_23)<br/>_23 = _21<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _23)</td></tr></table>>];
    bb15__0_2488 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_21)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_2488 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>_28 = &amp;(*_2)<br/>StorageLive(_29)<br/>_29 = _3<br/></td></tr><tr><td align="left">_27 = Order::is_resting_limit_order(move _28, move _29)</td></tr></table>>];
    bb17__0_2488 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>_0 = std::result::Result::&lt;bool, error::ErrorCode&gt;::Ok(const false)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_2488 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">_26 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _27)</td></tr></table>>];
    bb19__0_2488 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>_30 = discriminant(_26)<br/></td></tr><tr><td align="left">switchInt(move _30)</td></tr></table>>];
    bb20__0_2488 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_34)<br/>_34 = ((_26 as Continue).0: bool)<br/>_25 = _34<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">switchInt(move _25)</td></tr></table>>];
    bb21__0_2488 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_31)<br/>_31 = ((_26 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_33)<br/>_33 = _31<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _33)</td></tr></table>>];
    bb22__0_2488 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_31)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_2488 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageLive(_35)<br/>_35 = ((*_1).19: bool)<br/></td></tr><tr><td align="left">switchInt(move _35)</td></tr></table>>];
    bb24__0_2488 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_2488 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">_0 = std::result::Result::&lt;bool, error::ErrorCode&gt;::Ok(const true)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_2488 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_40 = ((*_1).0: u64)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>_44 = ((*_1).22: u8)<br/></td></tr><tr><td align="left">_43 = &lt;u8 as Cast&gt;::cast::&lt;u64&gt;(move _44)</td></tr></table>>];
    bb27__0_2488 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/></td></tr><tr><td align="left">_42 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _43)</td></tr></table>>];
    bb28__0_2488 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>_45 = discriminant(_42)<br/></td></tr><tr><td align="left">switchInt(move _45)</td></tr></table>>];
    bb29__0_2488 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_49)<br/>_49 = ((_42 as Continue).0: u64)<br/>_41 = _49<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">_39 = &lt;u64 as SafeMath&gt;::safe_add(move _40, move _41)</td></tr></table>>];
    bb30__0_2488 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_46)<br/>_46 = ((_42 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_48)<br/>_48 = _46<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _48)</td></tr></table>>];
    bb31__0_2488 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageDead(_46)<br/>StorageDead(_41)<br/>StorageDead(_40)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_2488 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">_38 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _39)</td></tr></table>>];
    bb33__0_2488 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>_50 = discriminant(_38)<br/></td></tr><tr><td align="left">switchInt(move _50)</td></tr></table>>];
    bb34__0_2488 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_54)<br/>_54 = ((_38 as Continue).0: u64)<br/>_37 = _54<br/>StorageDead(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>_58 = ((*_2).0: u64)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>_62 = ((*_2).22: u8)<br/></td></tr><tr><td align="left">_61 = &lt;u8 as Cast&gt;::cast::&lt;u64&gt;(move _62)</td></tr></table>>];
    bb35__0_2488 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_51)<br/>_51 = ((_38 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_53)<br/>_53 = _51<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _53)</td></tr></table>>];
    bb36__0_2488 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_2488 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/></td></tr><tr><td align="left">_60 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _61)</td></tr></table>>];
    bb38__0_2488 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>_63 = discriminant(_60)<br/></td></tr><tr><td align="left">switchInt(move _63)</td></tr></table>>];
    bb39__0_2488 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_67)<br/>_67 = ((_60 as Continue).0: u64)<br/>_59 = _67<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">_57 = &lt;u64 as SafeMath&gt;::safe_add(move _58, move _59)</td></tr></table>>];
    bb40__0_2488 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageLive(_64)<br/>_64 = ((_60 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_66)<br/>_66 = _64<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _66)</td></tr></table>>];
    bb41__0_2488 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageDead(_64)<br/>StorageDead(_59)<br/>StorageDead(_58)<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_2488 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">_56 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _57)</td></tr></table>>];
    bb43__0_2488 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>_68 = discriminant(_56)<br/></td></tr><tr><td align="left">switchInt(move _68)</td></tr></table>>];
    bb44__0_2488 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_72)<br/>_72 = ((_56 as Continue).0: u64)<br/>_55 = _72<br/>StorageDead(_72)<br/>_36 = Le(move _37, move _55)<br/>StorageDead(_55)<br/>StorageDead(_37)<br/>_0 = std::result::Result::&lt;bool, error::ErrorCode&gt;::Ok(move _36)<br/>StorageDead(_36)<br/>StorageDead(_60)<br/>StorageDead(_56)<br/>StorageDead(_42)<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_2488 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageLive(_69)<br/>_69 = ((_56 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_71)<br/>_71 = _69<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _71)</td></tr></table>>];
    bb46__0_2488 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageDead(_69)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_2488 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_2488 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_2488 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_37)<br/>StorageDead(_36)<br/>StorageDead(_60)<br/>StorageDead(_56)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_2488 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb51__0_2488 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_38)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb52__0_2488 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_2488 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_2488 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2488 -> bb7__0_2488 [label="0"];
    bb0__0_2488 -> bb1__0_2488 [label="otherwise"];
    bb1__0_2488 -> bb6__0_2488 [label="0"];
    bb1__0_2488 -> bb2__0_2488 [label="otherwise"];
    bb2__0_2488 -> bb3__0_2488 [label="return"];
    bb3__0_2488 -> bb5__0_2488 [label="0"];
    bb3__0_2488 -> bb4__0_2488 [label="otherwise"];
    bb4__0_2488 -> bb8__0_2488 [label=""];
    bb5__0_2488 -> bb54__0_2488 [label=""];
    bb6__0_2488 -> bb8__0_2488 [label=""];
    bb7__0_2488 -> bb8__0_2488 [label=""];
    bb8__0_2488 -> bb9__0_2488 [label="0"];
    bb8__0_2488 -> bb17__0_2488 [label="otherwise"];
    bb9__0_2488 -> bb10__0_2488 [label="return"];
    bb10__0_2488 -> bb11__0_2488 [label="return"];
    bb11__0_2488 -> bb12__0_2488 [label="0"];
    bb11__0_2488 -> bb14__0_2488 [label="1"];
    bb11__0_2488 -> bb13__0_2488 [label="otherwise"];
    bb12__0_2488 -> bb17__0_2488 [label="0"];
    bb12__0_2488 -> bb16__0_2488 [label="otherwise"];
    bb14__0_2488 -> bb15__0_2488 [label="return"];
    bb15__0_2488 -> bb53__0_2488 [label=""];
    bb16__0_2488 -> bb18__0_2488 [label="return"];
    bb17__0_2488 -> bb48__0_2488 [label=""];
    bb18__0_2488 -> bb19__0_2488 [label="return"];
    bb19__0_2488 -> bb20__0_2488 [label="0"];
    bb19__0_2488 -> bb21__0_2488 [label="1"];
    bb19__0_2488 -> bb13__0_2488 [label="otherwise"];
    bb20__0_2488 -> bb24__0_2488 [label="0"];
    bb20__0_2488 -> bb23__0_2488 [label="otherwise"];
    bb21__0_2488 -> bb22__0_2488 [label="return"];
    bb22__0_2488 -> bb52__0_2488 [label=""];
    bb23__0_2488 -> bb26__0_2488 [label="0"];
    bb23__0_2488 -> bb25__0_2488 [label="otherwise"];
    bb24__0_2488 -> bb25__0_2488 [label=""];
    bb25__0_2488 -> bb47__0_2488 [label=""];
    bb26__0_2488 -> bb27__0_2488 [label="return"];
    bb27__0_2488 -> bb28__0_2488 [label="return"];
    bb28__0_2488 -> bb29__0_2488 [label="0"];
    bb28__0_2488 -> bb30__0_2488 [label="1"];
    bb28__0_2488 -> bb13__0_2488 [label="otherwise"];
    bb29__0_2488 -> bb32__0_2488 [label="return"];
    bb30__0_2488 -> bb31__0_2488 [label="return"];
    bb31__0_2488 -> bb50__0_2488 [label=""];
    bb32__0_2488 -> bb33__0_2488 [label="return"];
    bb33__0_2488 -> bb34__0_2488 [label="0"];
    bb33__0_2488 -> bb35__0_2488 [label="1"];
    bb33__0_2488 -> bb13__0_2488 [label="otherwise"];
    bb34__0_2488 -> bb37__0_2488 [label="return"];
    bb35__0_2488 -> bb36__0_2488 [label="return"];
    bb36__0_2488 -> bb50__0_2488 [label=""];
    bb37__0_2488 -> bb38__0_2488 [label="return"];
    bb38__0_2488 -> bb39__0_2488 [label="0"];
    bb38__0_2488 -> bb40__0_2488 [label="1"];
    bb38__0_2488 -> bb13__0_2488 [label="otherwise"];
    bb39__0_2488 -> bb42__0_2488 [label="return"];
    bb40__0_2488 -> bb41__0_2488 [label="return"];
    bb41__0_2488 -> bb49__0_2488 [label=""];
    bb42__0_2488 -> bb43__0_2488 [label="return"];
    bb43__0_2488 -> bb44__0_2488 [label="0"];
    bb43__0_2488 -> bb45__0_2488 [label="1"];
    bb43__0_2488 -> bb13__0_2488 [label="otherwise"];
    bb44__0_2488 -> bb47__0_2488 [label=""];
    bb45__0_2488 -> bb46__0_2488 [label="return"];
    bb46__0_2488 -> bb49__0_2488 [label=""];
    bb47__0_2488 -> bb48__0_2488 [label=""];
    bb48__0_2488 -> bb54__0_2488 [label=""];
    bb49__0_2488 -> bb51__0_2488 [label=""];
    bb50__0_2488 -> bb51__0_2488 [label=""];
    bb51__0_2488 -> bb52__0_2488 [label=""];
    bb52__0_2488 -> bb53__0_2488 [label=""];
    bb53__0_2488 -> bb54__0_2488 [label=""];
}
