digraph Mir_0_8522 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn if_staker::handle_remove_insurance_fund_stake(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::if_staker::RemoveInsuranceFundStake&lt;ReErased&gt;&gt;, _2: u16) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _5: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _6: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _7: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _8: isize;<br align="left"/>let _9: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _10: !;<br align="left"/>let mut _11: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _12: ();<br align="left"/>let _13: anchor_lang::prelude::Clock;<br align="left"/>let mut _14: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _15: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _16: isize;<br align="left"/>let _17: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _18: !;<br align="left"/>let mut _19: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _20: anchor_lang::prelude::Clock;<br align="left"/>let _21: i64;<br align="left"/>let _22: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let mut _23: std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let mut _24: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;&gt;;<br align="left"/>let mut _25: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _26: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _27: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let mut _28: Closure(DefId(0:8525 ~ drift[d311]::instructions::if_staker::handle_remove_insurance_fund_stake::{closure#0}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _29: isize;<br align="left"/>let _30: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _31: !;<br align="left"/>let mut _32: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _33: std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let _34: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _35: std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _36: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;;<br align="left"/>let mut _37: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _38: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _39: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _40: Closure(DefId(0:8526 ~ drift[d311]::instructions::if_staker::handle_remove_insurance_fund_stake::{closure#1}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _41: isize;<br align="left"/>let _42: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _43: !;<br align="left"/>let mut _44: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _45: std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let _46: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _47: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _48: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _49: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _50: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _51: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _52: Closure(DefId(0:8527 ~ drift[d311]::instructions::if_staker::handle_remove_insurance_fund_stake::{closure#2}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _53: isize;<br align="left"/>let _54: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _55: !;<br align="left"/>let mut _56: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _57: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _58: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let _59: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _60: std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _61: std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _62: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let _63: std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let mut _64: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;&gt;;<br align="left"/>let mut _65: std::result::Result&lt;std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _66: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _67: isize;<br align="left"/>let _68: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _69: !;<br align="left"/>let mut _70: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _71: std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let _72: ();<br align="left"/>let mut _73: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _74: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _75: bool;<br align="left"/>let mut _76: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _77: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _78: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _79: state::paused_operations::InsuranceFundOperation;<br align="left"/>let mut _80: ();<br align="left"/>let _81: error::ErrorCode;<br align="left"/>let _82: ();<br align="left"/>let mut _83: &amp;ReErased str;<br align="left"/>let _84: &amp;ReErased str;<br align="left"/>let mut _85: &amp;ReErased std::string::String;<br align="left"/>let _86: &amp;ReErased std::string::String;<br align="left"/>let _87: std::string::String;<br align="left"/>let _88: std::string::String;<br align="left"/>let mut _89: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _90: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _91: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _92: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _93: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _94: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _95: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _96: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _97: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _98: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _99: &amp;ReErased error::ErrorCode;<br align="left"/>let _100: &amp;ReErased error::ErrorCode;<br align="left"/>let _101: ();<br align="left"/>let mut _102: &amp;ReErased str;<br align="left"/>let _103: &amp;ReErased str;<br align="left"/>let mut _104: &amp;ReErased std::string::String;<br align="left"/>let _105: &amp;ReErased std::string::String;<br align="left"/>let _106: std::string::String;<br align="left"/>let _107: std::string::String;<br align="left"/>let mut _108: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _109: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _110: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _111: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _112: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _113: error::ErrorCode;<br align="left"/>let mut _114: isize;<br align="left"/>let _115: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _116: !;<br align="left"/>let mut _117: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _118: ();<br align="left"/>let _119: ();<br align="left"/>let mut _120: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _121: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _122: bool;<br align="left"/>let mut _123: u16;<br align="left"/>let mut _124: &amp;ReErased state::insurance_fund_stake::InsuranceFundStake;<br align="left"/>let mut _125: &amp;ReErased std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let mut _126: u16;<br align="left"/>let mut _127: ();<br align="left"/>let _128: error::ErrorCode;<br align="left"/>let _129: ();<br align="left"/>let mut _130: &amp;ReErased str;<br align="left"/>let _131: &amp;ReErased str;<br align="left"/>let mut _132: &amp;ReErased std::string::String;<br align="left"/>let _133: &amp;ReErased std::string::String;<br align="left"/>let _134: std::string::String;<br align="left"/>let _135: std::string::String;<br align="left"/>let mut _136: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _137: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _138: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _139: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _140: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _141: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _142: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _143: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _144: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _145: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _146: &amp;ReErased error::ErrorCode;<br align="left"/>let _147: &amp;ReErased error::ErrorCode;<br align="left"/>let _148: ();<br align="left"/>let mut _149: &amp;ReErased str;<br align="left"/>let _150: &amp;ReErased str;<br align="left"/>let mut _151: error::ErrorCode;<br align="left"/>let mut _152: isize;<br align="left"/>let _153: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _154: !;<br align="left"/>let mut _155: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _156: ();<br align="left"/>let _157: ();<br align="left"/>let mut _158: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _159: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _160: bool;<br align="left"/>let mut _161: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _162: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _163: state::spot_market::SpotMarket;<br align="left"/>let mut _164: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _165: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _166: isize;<br align="left"/>let _167: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _168: !;<br align="left"/>let mut _169: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _170: bool;<br align="left"/>let mut _171: ();<br align="left"/>let _172: error::ErrorCode;<br align="left"/>let _173: ();<br align="left"/>let mut _174: &amp;ReErased str;<br align="left"/>let _175: &amp;ReErased str;<br align="left"/>let mut _176: &amp;ReErased std::string::String;<br align="left"/>let _177: &amp;ReErased std::string::String;<br align="left"/>let _178: std::string::String;<br align="left"/>let _179: std::string::String;<br align="left"/>let mut _180: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _181: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _182: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _183: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _184: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _185: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _186: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _187: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _188: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _189: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _190: &amp;ReErased error::ErrorCode;<br align="left"/>let _191: &amp;ReErased error::ErrorCode;<br align="left"/>let _192: ();<br align="left"/>let mut _193: &amp;ReErased str;<br align="left"/>let _194: &amp;ReErased str;<br align="left"/>let mut _195: error::ErrorCode;<br align="left"/>let mut _196: isize;<br align="left"/>let _197: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _198: !;<br align="left"/>let mut _199: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _200: ();<br align="left"/>let _201: u64;<br align="left"/>let mut _202: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _203: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _204: u64;<br align="left"/>let mut _205: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _206: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _207: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _208: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _209: &amp;ReErased mut state::insurance_fund_stake::InsuranceFundStake;<br align="left"/>let mut _210: &amp;ReErased mut state::insurance_fund_stake::InsuranceFundStake;<br align="left"/>let mut _211: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let mut _212: &amp;ReErased mut state::user::UserStats;<br align="left"/>let mut _213: &amp;ReErased mut state::user::UserStats;<br align="left"/>let mut _214: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _215: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _216: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _217: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _218: i64;<br align="left"/>let mut _219: isize;<br align="left"/>let _220: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _221: !;<br align="left"/>let mut _222: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _223: u64;<br align="left"/>let _224: ();<br align="left"/>let mut _225: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _226: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _227: &amp;ReErased anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let _228: &amp;ReErased anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let mut _229: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let _230: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _231: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let _232: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _233: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _234: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _235: u8;<br align="left"/>let mut _236: &amp;ReErased state::state::State;<br align="left"/>let mut _237: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _238: u64;<br align="left"/>let mut _239: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let _240: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let mut _241: std::option::Option&lt;&amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;&gt;;<br align="left"/>let mut _242: bool;<br align="left"/>let mut _243: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _244: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _245: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _246: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _247: isize;<br align="left"/>let _248: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _249: !;<br align="left"/>let mut _250: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _251: ();<br align="left"/>let _252: ();<br align="left"/>let mut _253: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _254: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _255: &amp;ReErased mut anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _256: isize;<br align="left"/>let _257: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _258: !;<br align="left"/>let mut _259: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _260: ();<br align="left"/>let _261: ();<br align="left"/>let mut _262: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _263: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _264: bool;<br align="left"/>let mut _265: u64;<br align="left"/>let mut _266: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _267: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _268: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _269: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _270: ();<br align="left"/>let _271: error::ErrorCode;<br align="left"/>let _272: ();<br align="left"/>let mut _273: &amp;ReErased str;<br align="left"/>let _274: &amp;ReErased str;<br align="left"/>let mut _275: &amp;ReErased std::string::String;<br align="left"/>let _276: &amp;ReErased std::string::String;<br align="left"/>let _277: std::string::String;<br align="left"/>let _278: std::string::String;<br align="left"/>let mut _279: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _280: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _281: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _282: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _283: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _284: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _285: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _286: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _287: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _288: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _289: &amp;ReErased error::ErrorCode;<br align="left"/>let _290: &amp;ReErased error::ErrorCode;<br align="left"/>let _291: ();<br align="left"/>let mut _292: &amp;ReErased str;<br align="left"/>let _293: &amp;ReErased str;<br align="left"/>let mut _294: error::ErrorCode;<br align="left"/>let mut _295: isize;<br align="left"/>let _296: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _297: !;<br align="left"/>let mut _298: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _299: ();<br align="left"/>let _300: i64;<br align="left"/>let mut _301: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _302: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _303: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _304: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _305: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _306: isize;<br align="left"/>let _307: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _308: !;<br align="left"/>let mut _309: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _310: i64;<br align="left"/>let mut _311: ();<br align="left"/>let mut _312: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _313: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _314: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _315: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _316: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _317: &amp;ReErased mut instructions::if_staker::RemoveInsuranceFundStake&lt;ReErased&gt;;<br align="left"/>let mut _318: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _319: &amp;ReErased mut instructions::if_staker::RemoveInsuranceFundStake&lt;ReErased&gt;;<br align="left"/>let mut _320: &amp;ReErased mut instructions::if_staker::RemoveInsuranceFundStake&lt;ReErased&gt;;<br align="left"/>let mut _321: &amp;ReErased mut instructions::if_staker::RemoveInsuranceFundStake&lt;ReErased&gt;;<br align="left"/>let mut _322: &amp;ReErased mut instructions::if_staker::RemoveInsuranceFundStake&lt;ReErased&gt;;<br align="left"/>let mut _323: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _324: &amp;ReErased mut instructions::if_staker::RemoveInsuranceFundStake&lt;ReErased&gt;;<br align="left"/>let mut _325: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _326: &amp;ReErased mut instructions::if_staker::RemoveInsuranceFundStake&lt;ReErased&gt;;<br align="left"/>let mut _327: &amp;ReErased mut instructions::if_staker::RemoveInsuranceFundStake&lt;ReErased&gt;;<br align="left"/>let mut _328: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _329: &amp;ReErased mut instructions::if_staker::RemoveInsuranceFundStake&lt;ReErased&gt;;<br align="left"/>let mut _330: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _331: &amp;ReErased mut instructions::if_staker::RemoveInsuranceFundStake&lt;ReErased&gt;;<br align="left"/>let mut _332: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _333: &amp;ReErased mut instructions::if_staker::RemoveInsuranceFundStake&lt;ReErased&gt;;<br align="left"/>let mut _334: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _335: &amp;ReErased mut instructions::if_staker::RemoveInsuranceFundStake&lt;ReErased&gt;;<br align="left"/>let mut _336: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _337: isize;<br align="left"/>let mut _338: isize;<br align="left"/>let mut _339: isize;<br align="left"/>let mut _340: isize;<br align="left"/>let mut _341: isize;<br align="left"/>let mut _342: isize;<br align="left"/>let mut _343: isize;<br align="left"/>let mut _344: isize;<br align="left"/>let mut _345: isize;<br align="left"/>let mut _346: isize;<br align="left"/>let mut _347: isize;<br align="left"/>let mut _348: isize;<br align="left"/>let mut _349: isize;<br align="left"/>let mut _350: isize;<br align="left"/>let mut _351: isize;<br align="left"/>let mut _352: isize;<br align="left"/>let mut _353: isize;<br align="left"/>let mut _354: isize;<br align="left"/>let mut _355: isize;<br align="left"/>let mut _356: isize;<br align="left"/>let mut _357: isize;<br align="left"/>let mut _358: isize;<br align="left"/>let mut _359: isize;<br align="left"/>let mut _360: isize;<br align="left"/>let mut _361: isize;<br align="left"/>let mut _362: isize;<br align="left"/>let mut _363: isize;<br align="left"/>let mut _364: isize;<br align="left"/>let mut _365: isize;<br align="left"/>let mut _366: isize;<br align="left"/>let mut _367: isize;<br align="left"/>let mut _368: isize;<br align="left"/>let mut _369: isize;<br align="left"/>let mut _370: isize;<br align="left"/>let mut _371: isize;<br align="left"/>let mut _372: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _373: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _374: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _375: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _376: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _377: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _378: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug market_index =&gt; _2;<br align="left"/>debug residual =&gt; _9;<br align="left"/>debug val =&gt; _12;<br align="left"/>debug clock =&gt; _13;<br align="left"/>debug residual =&gt; _17;<br align="left"/>debug val =&gt; _20;<br align="left"/>debug now =&gt; _21;<br align="left"/>debug insurance_fund_stake =&gt; _22;<br align="left"/>debug residual =&gt; _30;<br align="left"/>debug val =&gt; _33;<br align="left"/>debug user_stats =&gt; _34;<br align="left"/>debug residual =&gt; _42;<br align="left"/>debug val =&gt; _45;<br align="left"/>debug spot_market =&gt; _46;<br align="left"/>debug residual =&gt; _54;<br align="left"/>debug val =&gt; _57;<br align="left"/>debug state =&gt; _58;<br align="left"/>debug remaining_accounts_iter =&gt; _59;<br align="left"/>debug mint =&gt; _63;<br align="left"/>debug residual =&gt; _68;<br align="left"/>debug val =&gt; _71;<br align="left"/>debug error_code =&gt; _81;<br align="left"/>debug res =&gt; _88;<br align="left"/>debug res =&gt; _107;<br align="left"/>debug residual =&gt; _115;<br align="left"/>debug val =&gt; _118;<br align="left"/>debug error_code =&gt; _128;<br align="left"/>debug res =&gt; _135;<br align="left"/>debug residual =&gt; _153;<br align="left"/>debug val =&gt; _156;<br align="left"/>debug residual =&gt; _167;<br align="left"/>debug val =&gt; _170;<br align="left"/>debug error_code =&gt; _172;<br align="left"/>debug res =&gt; _179;<br align="left"/>debug residual =&gt; _197;<br align="left"/>debug val =&gt; _200;<br align="left"/>debug amount =&gt; _201;<br align="left"/>debug residual =&gt; _220;<br align="left"/>debug val =&gt; _223;<br align="left"/>debug residual =&gt; _248;<br align="left"/>debug val =&gt; _251;<br align="left"/>debug residual =&gt; _257;<br align="left"/>debug val =&gt; _260;<br align="left"/>debug error_code =&gt; _271;<br align="left"/>debug res =&gt; _278;<br align="left"/>debug residual =&gt; _296;<br align="left"/>debug val =&gt; _299;<br align="left"/>debug residual =&gt; _307;<br align="left"/>debug val =&gt; _310;<br align="left"/>>;
    bb0__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_317 = deref_copy (_1.1: &amp;mut instructions::if_staker::RemoveInsuranceFundStake&lt;'_&gt;)<br/>_7 = &amp;((*_317).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_318 = deref_copy (*_7)<br/>_372 = (((_318.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_6 = &amp;(*_372)<br/></td></tr><tr><td align="left">_5 = constraints::withdraw_not_paused(move _6)</td></tr></table>>];
    bb1__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb2__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_8 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb3__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_4 as Continue).0: ())<br/>_3 = _12<br/>StorageDead(_12)<br/>_337 = discriminant(_4)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/></td></tr><tr><td align="left">_15 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb4__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>_9 = move ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_11)<br/>_11 = move _9<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _11)</td></tr></table>>];
    bb6__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_9)<br/>_363 = discriminant(_4)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">_14 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _15)</td></tr></table>>];
    bb8__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>_16 = discriminant(_14)<br/></td></tr><tr><td align="left">switchInt(move _16)</td></tr></table>>];
    bb9__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_20)<br/>_20 = move ((_14 as Continue).0: anchor_lang::prelude::Clock)<br/>_13 = move _20<br/>StorageDead(_20)<br/>_339 = discriminant(_14)<br/>StorageDead(_14)<br/>StorageLive(_21)<br/>_21 = (_13.4: i64)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_319 = deref_copy (_1.1: &amp;mut instructions::if_staker::RemoveInsuranceFundStake&lt;'_&gt;)<br/>_27 = &amp;((*_319).2: anchor_lang::prelude::AccountLoader&lt;'_, state::insurance_fund_stake::InsuranceFundStake&gt;)<br/></td></tr><tr><td align="left">_26 = anchor_lang::prelude::AccountLoader::&lt;'_, InsuranceFundStake&gt;::load_mut(move _27)</td></tr></table>>];
    bb10__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>_17 = move ((_14 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_19)<br/>_19 = move _17<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _19)</td></tr></table>>];
    bb11__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_17)<br/>_361 = discriminant(_14)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageLive(_28)<br/>_28 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_25 = std::result::Result::&lt;RefMut&lt;'_, InsuranceFundStake&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _26, move _28)</td></tr></table>>];
    bb13__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">_24 = &lt;std::result::Result&lt;RefMut&lt;'_, InsuranceFundStake&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _25)</td></tr></table>>];
    bb14__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>_29 = discriminant(_24)<br/></td></tr><tr><td align="left">switchInt(move _29)</td></tr></table>>];
    bb15__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_33)<br/>_33 = move ((_24 as Continue).0: std::cell::RefMut&lt;'_, state::insurance_fund_stake::InsuranceFundStake&gt;)<br/>_23 = move _33<br/>StorageDead(_33)<br/>_22 = &amp;mut _23<br/>_343 = discriminant(_24)<br/>StorageDead(_24)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>_320 = deref_copy (_1.1: &amp;mut instructions::if_staker::RemoveInsuranceFundStake&lt;'_&gt;)<br/>_39 = &amp;((*_320).3: anchor_lang::prelude::AccountLoader&lt;'_, state::user::UserStats&gt;)<br/></td></tr><tr><td align="left">_38 = anchor_lang::prelude::AccountLoader::&lt;'_, UserStats&gt;::load_mut(move _39)</td></tr></table>>];
    bb16__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_30)<br/>_30 = ((_24 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_32)<br/>_32 = _30<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _32)</td></tr></table>>];
    bb17__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_30)<br/>_341 = discriminant(_24)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageLive(_40)<br/>_40 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_37 = std::result::Result::&lt;RefMut&lt;'_, UserStats&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _38, move _40)</td></tr></table>>];
    bb19__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">_36 = &lt;std::result::Result&lt;RefMut&lt;'_, UserStats&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _37)</td></tr></table>>];
    bb20__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>_41 = discriminant(_36)<br/></td></tr><tr><td align="left">switchInt(move _41)</td></tr></table>>];
    bb21__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_45)<br/>_45 = move ((_36 as Continue).0: std::cell::RefMut&lt;'_, state::user::UserStats&gt;)<br/>_35 = move _45<br/>StorageDead(_45)<br/>_34 = &amp;mut _35<br/>_347 = discriminant(_36)<br/>StorageDead(_36)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>_321 = deref_copy (_1.1: &amp;mut instructions::if_staker::RemoveInsuranceFundStake&lt;'_&gt;)<br/>_51 = &amp;((*_321).1: anchor_lang::prelude::AccountLoader&lt;'_, state::spot_market::SpotMarket&gt;)<br/></td></tr><tr><td align="left">_50 = anchor_lang::prelude::AccountLoader::&lt;'_, SpotMarket&gt;::load_mut(move _51)</td></tr></table>>];
    bb22__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_42)<br/>_42 = ((_36 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_44)<br/>_44 = _42<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _44)</td></tr></table>>];
    bb23__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_42)<br/>_345 = discriminant(_36)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageLive(_52)<br/>_52 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_49 = std::result::Result::&lt;RefMut&lt;'_, SpotMarket&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _50, move _52)</td></tr></table>>];
    bb25__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">_48 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _49)</td></tr></table>>];
    bb26__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>_53 = discriminant(_48)<br/></td></tr><tr><td align="left">switchInt(move _53)</td></tr></table>>];
    bb27__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_57)<br/>_57 = move ((_48 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_47 = move _57<br/>StorageDead(_57)<br/>_46 = &amp;mut _47<br/>_351 = discriminant(_48)<br/>StorageDead(_48)<br/>StorageLive(_58)<br/>_322 = deref_copy (_1.1: &amp;mut instructions::if_staker::RemoveInsuranceFundStake&lt;'_&gt;)<br/>_58 = &amp;((*_322).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>_323 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_62 = &amp;(*_323)<br/></td></tr><tr><td align="left">_61 = core::slice::&lt;impl [anchor_lang::prelude::AccountInfo&lt;'_&gt;]&gt;::iter(move _62)</td></tr></table>>];
    bb28__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_54)<br/>_54 = ((_48 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_56)<br/>_56 = _54<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _56)</td></tr></table>>];
    bb29__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_54)<br/>_349 = discriminant(_48)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/></td></tr><tr><td align="left">_60 = &lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as Iterator&gt;::peekable(move _61)</td></tr></table>>];
    bb31__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>_59 = &amp;mut _60<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>_66 = &amp;mut (*_59)<br/></td></tr><tr><td align="left">_65 = get_token_mint(move _66)</td></tr></table>>];
    bb32__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/></td></tr><tr><td align="left">_64 = &lt;std::result::Result&lt;Option&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt;&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _65)</td></tr></table>>];
    bb33__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>_67 = discriminant(_64)<br/></td></tr><tr><td align="left">switchInt(move _67)</td></tr></table>>];
    bb34__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_71)<br/>_71 = move ((_64 as Continue).0: std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt;&gt;)<br/>_63 = move _71<br/>StorageDead(_71)<br/>StorageDead(_64)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>_78 = &amp;(*_46)<br/></td></tr><tr><td align="left">_77 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _78)</td></tr></table>>];
    bb35__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_68)<br/>_68 = ((_64 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_70)<br/>_70 = _68<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _70)</td></tr></table>>];
    bb36__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_68)<br/>StorageDead(_64)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">_76 = &amp;(*_77)<br/>StorageDead(_78)<br/>StorageLive(_79)<br/>_79 = InsuranceFundOperation::Remove<br/></td></tr><tr><td align="left">_75 = SpotMarket::is_insurance_fund_operation_paused(move _76, move _79)</td></tr></table>>];
    bb38__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left">switchInt(move _75)</td></tr></table>>];
    bb39__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageDead(_76)<br/>StorageDead(_77)<br/>StorageLive(_81)<br/>_81 = error::ErrorCode::InsuranceFundOperationPaused<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>_316 = const _<br/>_92 = &amp;(*_316)<br/>_91 = &amp;(*_92)<br/>_90 = move _91 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_91)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>_100 = &amp;_81<br/>_99 = &amp;(*_100)<br/></td></tr><tr><td align="left">_98 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _99)</td></tr></table>>];
    bb40__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageDead(_76)<br/>StorageDead(_77)<br/>StorageLive(_80)<br/>_80 = ()<br/>_74 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _80)<br/>StorageDead(_80)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/>_97 = [move _98]<br/>StorageDead(_98)<br/>_96 = &amp;_97<br/>_95 = &amp;(*_96)<br/>_94 = move _95 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_95)<br/></td></tr><tr><td align="left">_89 = Arguments::&lt;'_&gt;::new_v1(move _90, move _94)</td></tr></table>>];
    bb42__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/>StorageDead(_90)<br/></td></tr><tr><td align="left">_88 = format(move _89)</td></tr></table>>];
    bb43__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>StorageDead(_100)<br/>StorageDead(_97)<br/>StorageDead(_96)<br/>StorageDead(_92)<br/>_87 = move _88<br/>StorageDead(_88)<br/>_86 = &amp;_87<br/>_85 = &amp;(*_86)<br/></td></tr><tr><td align="left">_84 = &lt;String as Deref&gt;::deref(move _85)</td></tr></table>>];
    bb44__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">_83 = &amp;(*_84)<br/>StorageDead(_85)<br/></td></tr><tr><td align="left">_82 = solana_program::log::sol_log(move _83)</td></tr></table>>];
    bb45__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/></td></tr><tr><td align="left">drop(_87)</td></tr></table>>];
    bb46__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>StorageDead(_86)<br/>StorageDead(_84)<br/>StorageDead(_82)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>_315 = const _<br/>_111 = &amp;(*_315)<br/>_110 = &amp;(*_111)<br/>_109 = move _110 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_110)<br/></td></tr><tr><td align="left">_108 = Arguments::&lt;'_&gt;::new_const(move _109)</td></tr></table>>];
    bb47__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/></td></tr><tr><td align="left">_107 = format(move _108)</td></tr></table>>];
    bb48__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/>StorageDead(_111)<br/>_106 = move _107<br/>StorageDead(_107)<br/>_105 = &amp;_106<br/>_104 = &amp;(*_105)<br/></td></tr><tr><td align="left">_103 = &lt;String as Deref&gt;::deref(move _104)</td></tr></table>>];
    bb49__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">_102 = &amp;(*_103)<br/>StorageDead(_104)<br/></td></tr><tr><td align="left">_101 = solana_program::log::sol_log(move _102)</td></tr></table>>];
    bb50__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/></td></tr><tr><td align="left">drop(_106)</td></tr></table>>];
    bb51__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/>StorageDead(_105)<br/>StorageDead(_103)<br/>StorageDead(_101)<br/>StorageLive(_113)<br/>_113 = _81<br/>_74 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _113)<br/>StorageDead(_113)<br/>StorageDead(_81)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb52__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/></td></tr><tr><td align="left">_73 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _74)</td></tr></table>>];
    bb53__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>_114 = discriminant(_73)<br/></td></tr><tr><td align="left">switchInt(move _114)</td></tr></table>>];
    bb54__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageLive(_118)<br/>_118 = ((_73 as Continue).0: ())<br/>_72 = _118<br/>StorageDead(_118)<br/>StorageDead(_73)<br/>StorageDead(_72)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>_125 = &amp;(*_22)<br/></td></tr><tr><td align="left">_124 = &lt;RefMut&lt;'_, InsuranceFundStake&gt; as Deref&gt;::deref(move _125)</td></tr></table>>];
    bb55__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageLive(_115)<br/>_115 = ((_73 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_117)<br/>_117 = _115<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _117)</td></tr></table>>];
    bb56__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/>StorageDead(_115)<br/>StorageDead(_73)<br/>StorageDead(_72)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb57__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/>_123 = ((*_124).8: u16)<br/>StorageLive(_126)<br/>_126 = _2<br/>_122 = Eq(move _123, move _126)<br/></td></tr><tr><td align="left">switchInt(move _122)</td></tr></table>>];
    bb58__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/>StorageDead(_124)<br/>StorageDead(_123)<br/>StorageLive(_127)<br/>_127 = ()<br/>_121 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _127)<br/>StorageDead(_127)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/>StorageDead(_124)<br/>StorageDead(_123)<br/>StorageLive(_128)<br/>_128 = error::ErrorCode::IncorrectSpotMarketAccountPassed<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>_314 = const _<br/>_139 = &amp;(*_314)<br/>_138 = &amp;(*_139)<br/>_137 = move _138 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_138)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>_147 = &amp;_128<br/>_146 = &amp;(*_147)<br/></td></tr><tr><td align="left">_145 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _146)</td></tr></table>>];
    bb60__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_146)<br/>_144 = [move _145]<br/>StorageDead(_145)<br/>_143 = &amp;_144<br/>_142 = &amp;(*_143)<br/>_141 = move _142 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_142)<br/></td></tr><tr><td align="left">_136 = Arguments::&lt;'_&gt;::new_v1(move _137, move _141)</td></tr></table>>];
    bb61__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_141)<br/>StorageDead(_137)<br/></td></tr><tr><td align="left">_135 = format(move _136)</td></tr></table>>];
    bb62__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_136)<br/>StorageDead(_147)<br/>StorageDead(_144)<br/>StorageDead(_143)<br/>StorageDead(_139)<br/>_134 = move _135<br/>StorageDead(_135)<br/>_133 = &amp;_134<br/>_132 = &amp;(*_133)<br/></td></tr><tr><td align="left">_131 = &lt;String as Deref&gt;::deref(move _132)</td></tr></table>>];
    bb63__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">_130 = &amp;(*_131)<br/>StorageDead(_132)<br/></td></tr><tr><td align="left">_129 = solana_program::log::sol_log(move _130)</td></tr></table>>];
    bb64__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_130)<br/></td></tr><tr><td align="left">drop(_134)</td></tr></table>>];
    bb65__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_134)<br/>StorageDead(_133)<br/>StorageDead(_131)<br/>StorageDead(_129)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>_150 = const &quot;insurance_fund_stake does not match market_index&quot;<br/>_149 = &amp;(*_150)<br/></td></tr><tr><td align="left">_148 = solana_program::log::sol_log(move _149)</td></tr></table>>];
    bb66__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_149)<br/>StorageDead(_150)<br/>StorageDead(_148)<br/>StorageLive(_151)<br/>_151 = _128<br/>_121 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _151)<br/>StorageDead(_151)<br/>StorageDead(_128)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb67__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/></td></tr><tr><td align="left">_120 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _121)</td></tr></table>>];
    bb68__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_121)<br/>_152 = discriminant(_120)<br/></td></tr><tr><td align="left">switchInt(move _152)</td></tr></table>>];
    bb69__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageLive(_156)<br/>_156 = ((_120 as Continue).0: ())<br/>_119 = _156<br/>StorageDead(_156)<br/>StorageDead(_120)<br/>StorageDead(_119)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>StorageLive(_161)<br/>StorageLive(_162)<br/>StorageLive(_163)<br/>StorageLive(_164)<br/>StorageLive(_165)<br/>_165 = &amp;(*_46)<br/></td></tr><tr><td align="left">_164 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _165)</td></tr></table>>];
    bb70__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageLive(_153)<br/>_153 = ((_120 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_155)<br/>_155 = _153<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _155)</td></tr></table>>];
    bb71__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_155)<br/>StorageDead(_153)<br/>StorageDead(_120)<br/>StorageDead(_119)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb72__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">_163 = (*_164)<br/>StorageDead(_165)<br/></td></tr><tr><td align="left">_162 = SpotMarket::is_healthy_utilization(move _163)</td></tr></table>>];
    bb73__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_163)<br/></td></tr><tr><td align="left">_161 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _162)</td></tr></table>>];
    bb74__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_162)<br/>_166 = discriminant(_161)<br/></td></tr><tr><td align="left">switchInt(move _166)</td></tr></table>>];
    bb75__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageLive(_170)<br/>_170 = ((_161 as Continue).0: bool)<br/>_160 = _170<br/>StorageDead(_170)<br/></td></tr><tr><td align="left">switchInt(move _160)</td></tr></table>>];
    bb76__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageLive(_167)<br/>_167 = ((_161 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_169)<br/>_169 = _167<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _169)</td></tr></table>>];
    bb77__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_169)<br/>StorageDead(_167)<br/>StorageDead(_164)<br/>StorageDead(_161)<br/>StorageDead(_160)<br/>StorageDead(_159)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb78__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_164)<br/>StorageDead(_161)<br/>StorageLive(_171)<br/>_171 = ()<br/>_159 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _171)<br/>StorageDead(_171)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb79__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_164)<br/>StorageDead(_161)<br/>StorageLive(_172)<br/>_172 = error::ErrorCode::SpotMarketInsufficientDeposits<br/>StorageLive(_173)<br/>StorageLive(_174)<br/>StorageLive(_175)<br/>StorageLive(_176)<br/>StorageLive(_177)<br/>StorageLive(_178)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>StorageLive(_181)<br/>StorageLive(_182)<br/>StorageLive(_183)<br/>_313 = const _<br/>_183 = &amp;(*_313)<br/>_182 = &amp;(*_183)<br/>_181 = move _182 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_182)<br/>StorageLive(_185)<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>StorageLive(_189)<br/>StorageLive(_190)<br/>StorageLive(_191)<br/>_191 = &amp;_172<br/>_190 = &amp;(*_191)<br/></td></tr><tr><td align="left">_189 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _190)</td></tr></table>>];
    bb80__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_190)<br/>_188 = [move _189]<br/>StorageDead(_189)<br/>_187 = &amp;_188<br/>_186 = &amp;(*_187)<br/>_185 = move _186 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_186)<br/></td></tr><tr><td align="left">_180 = Arguments::&lt;'_&gt;::new_v1(move _181, move _185)</td></tr></table>>];
    bb81__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_185)<br/>StorageDead(_181)<br/></td></tr><tr><td align="left">_179 = format(move _180)</td></tr></table>>];
    bb82__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_180)<br/>StorageDead(_191)<br/>StorageDead(_188)<br/>StorageDead(_187)<br/>StorageDead(_183)<br/>_178 = move _179<br/>StorageDead(_179)<br/>_177 = &amp;_178<br/>_176 = &amp;(*_177)<br/></td></tr><tr><td align="left">_175 = &lt;String as Deref&gt;::deref(move _176)</td></tr></table>>];
    bb83__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">_174 = &amp;(*_175)<br/>StorageDead(_176)<br/></td></tr><tr><td align="left">_173 = solana_program::log::sol_log(move _174)</td></tr></table>>];
    bb84__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_174)<br/></td></tr><tr><td align="left">drop(_178)</td></tr></table>>];
    bb85__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_178)<br/>StorageDead(_177)<br/>StorageDead(_175)<br/>StorageDead(_173)<br/>StorageLive(_192)<br/>StorageLive(_193)<br/>StorageLive(_194)<br/>_194 = const &quot;spot market utilization above health threshold&quot;<br/>_193 = &amp;(*_194)<br/></td></tr><tr><td align="left">_192 = solana_program::log::sol_log(move _193)</td></tr></table>>];
    bb86__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_193)<br/>StorageDead(_194)<br/>StorageDead(_192)<br/>StorageLive(_195)<br/>_195 = _172<br/>_159 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _195)<br/>StorageDead(_195)<br/>StorageDead(_172)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb87__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_160)<br/></td></tr><tr><td align="left">_158 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _159)</td></tr></table>>];
    bb88__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_159)<br/>_196 = discriminant(_158)<br/></td></tr><tr><td align="left">switchInt(move _196)</td></tr></table>>];
    bb89__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageLive(_200)<br/>_200 = ((_158 as Continue).0: ())<br/>_157 = _200<br/>StorageDead(_200)<br/>StorageDead(_158)<br/>StorageDead(_157)<br/>StorageLive(_201)<br/>StorageLive(_202)<br/>StorageLive(_203)<br/>StorageLive(_204)<br/>StorageLive(_205)<br/>StorageLive(_206)<br/>StorageLive(_207)<br/>StorageLive(_208)<br/>_324 = deref_copy (_1.1: &amp;mut instructions::if_staker::RemoveInsuranceFundStake&lt;'_&gt;)<br/>_325 = deref_copy ((*_324).5: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_373 = (((_325.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_208 = &amp;(*_373)<br/></td></tr><tr><td align="left">_207 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _208)</td></tr></table>>];
    bb90__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageLive(_197)<br/>_197 = ((_158 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_199)<br/>_199 = _197<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _199)</td></tr></table>>];
    bb91__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_199)<br/>StorageDead(_197)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb92__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">_206 = &amp;(*_207)<br/></td></tr><tr><td align="left">_205 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _206)</td></tr></table>>];
    bb93__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_208)<br/>StorageDead(_206)<br/>_204 = ((*_205).2: u64)<br/>StorageLive(_209)<br/>StorageLive(_210)<br/>StorageLive(_211)<br/>_211 = &amp;mut (*_22)<br/></td></tr><tr><td align="left">_210 = &lt;RefMut&lt;'_, InsuranceFundStake&gt; as DerefMut&gt;::deref_mut(move _211)</td></tr></table>>];
    bb94__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">_209 = &amp;mut (*_210)<br/>StorageDead(_211)<br/>StorageLive(_212)<br/>StorageLive(_213)<br/>StorageLive(_214)<br/>_214 = &amp;mut (*_34)<br/></td></tr><tr><td align="left">_213 = &lt;RefMut&lt;'_, UserStats&gt; as DerefMut&gt;::deref_mut(move _214)</td></tr></table>>];
    bb95__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">_212 = &amp;mut (*_213)<br/>StorageDead(_214)<br/>StorageLive(_215)<br/>StorageLive(_216)<br/>StorageLive(_217)<br/>_217 = &amp;mut (*_46)<br/></td></tr><tr><td align="left">_216 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _217)</td></tr></table>>];
    bb96__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">_215 = &amp;mut (*_216)<br/>StorageDead(_217)<br/>StorageLive(_218)<br/>_218 = _21<br/></td></tr><tr><td align="left">_203 = controller::insurance::remove_insurance_fund_stake(move _204, move _209, move _212, move _215, move _218)</td></tr></table>>];
    bb97__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_218)<br/>StorageDead(_215)<br/>StorageDead(_212)<br/>StorageDead(_209)<br/>StorageDead(_204)<br/></td></tr><tr><td align="left">_202 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _203)</td></tr></table>>];
    bb98__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_203)<br/>_219 = discriminant(_202)<br/></td></tr><tr><td align="left">switchInt(move _219)</td></tr></table>>];
    bb99__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageLive(_223)<br/>_223 = ((_202 as Continue).0: u64)<br/>_201 = _223<br/>StorageDead(_223)<br/>StorageDead(_216)<br/>StorageDead(_213)<br/>StorageDead(_210)<br/>StorageDead(_207)<br/>StorageDead(_205)<br/>StorageDead(_202)<br/>StorageLive(_224)<br/>StorageLive(_225)<br/>StorageLive(_226)<br/>StorageLive(_227)<br/>StorageLive(_228)<br/>_326 = deref_copy (_1.1: &amp;mut instructions::if_staker::RemoveInsuranceFundStake&lt;'_&gt;)<br/>_228 = &amp;((*_326).8: anchor_lang::prelude::Interface&lt;'_, anchor_spl::token_interface::TokenInterface&gt;)<br/>_227 = &amp;(*_228)<br/>StorageLive(_229)<br/>StorageLive(_230)<br/>_327 = deref_copy (_1.1: &amp;mut instructions::if_staker::RemoveInsuranceFundStake&lt;'_&gt;)<br/>_230 = &amp;((*_327).5: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_328 = deref_copy (*_230)<br/>_374 = (((_328.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_229 = &amp;(*_374)<br/>StorageLive(_231)<br/>StorageLive(_232)<br/>_329 = deref_copy (_1.1: &amp;mut instructions::if_staker::RemoveInsuranceFundStake&lt;'_&gt;)<br/>_232 = &amp;((*_329).7: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_330 = deref_copy (*_232)<br/>_375 = (((_330.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_231 = &amp;(*_375)<br/>StorageLive(_233)<br/>StorageLive(_234)<br/>_331 = deref_copy (_1.1: &amp;mut instructions::if_staker::RemoveInsuranceFundStake&lt;'_&gt;)<br/>_234 = &amp;((*_331).6: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_233 = &amp;(*_234)<br/>StorageLive(_235)<br/>StorageLive(_236)<br/>StorageLive(_237)<br/>_332 = deref_copy (*_58)<br/>_376 = (((_332.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_237 = &amp;(*_376)<br/></td></tr><tr><td align="left">_236 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _237)</td></tr></table>>];
    bb100__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageLive(_220)<br/>_220 = ((_202 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_222)<br/>_222 = _220<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _222)</td></tr></table>>];
    bb101__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_222)<br/>StorageDead(_220)<br/>StorageDead(_216)<br/>StorageDead(_213)<br/>StorageDead(_210)<br/>StorageDead(_207)<br/>StorageDead(_205)<br/>StorageDead(_202)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb102__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_237)<br/>_235 = ((*_236).15: u8)<br/>StorageLive(_238)<br/>_238 = _201<br/>StorageLive(_239)<br/>StorageLive(_240)<br/>_240 = &amp;_63<br/>_239 = &amp;(*_240)<br/>StorageLive(_241)<br/>StorageLive(_242)<br/>StorageLive(_243)<br/>StorageLive(_244)<br/>StorageLive(_245)<br/>_245 = &amp;(*_46)<br/></td></tr><tr><td align="left">_244 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _245)</td></tr></table>>];
    bb103__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">_243 = &amp;(*_244)<br/>StorageDead(_245)<br/></td></tr><tr><td align="left">_242 = SpotMarket::has_transfer_hook(move _243)</td></tr></table>>];
    bb104__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left">switchInt(move _242)</td></tr></table>>];
    bb105__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_244)<br/>StorageDead(_243)<br/>StorageLive(_246)<br/>_246 = &amp;mut (*_59)<br/>_241 = Option::&lt;&amp;mut Peekable&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;&gt;::Some(move _246)<br/>StorageDead(_246)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb106__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_244)<br/>StorageDead(_243)<br/>_241 = Option::&lt;&amp;mut Peekable&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;&gt;::None<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb107__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_242)<br/></td></tr><tr><td align="left">_226 = send_from_program_vault(move _227, move _229, move _231, move _233, move _235, move _238, move _239, move _241)</td></tr></table>>];
    bb108__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageDead(_241)<br/>StorageDead(_239)<br/>StorageDead(_238)<br/>StorageDead(_235)<br/>StorageDead(_233)<br/>StorageDead(_231)<br/>StorageDead(_229)<br/>StorageDead(_227)<br/></td></tr><tr><td align="left">_225 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _226)</td></tr></table>>];
    bb109__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageDead(_226)<br/>_247 = discriminant(_225)<br/></td></tr><tr><td align="left">switchInt(move _247)</td></tr></table>>];
    bb110__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageLive(_251)<br/>_251 = ((_225 as Continue).0: ())<br/>_224 = _251<br/>StorageDead(_251)<br/>_353 = discriminant(_225)<br/>StorageDead(_240)<br/>StorageDead(_236)<br/>StorageDead(_234)<br/>StorageDead(_232)<br/>StorageDead(_230)<br/>StorageDead(_228)<br/>StorageDead(_225)<br/>StorageDead(_224)<br/>StorageLive(_252)<br/>StorageLive(_253)<br/>StorageLive(_254)<br/>StorageLive(_255)<br/>_333 = deref_copy (_1.1: &amp;mut instructions::if_staker::RemoveInsuranceFundStake&lt;'_&gt;)<br/>_334 = deref_copy ((*_333).5: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_377 = (((_334.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_255 = &amp;mut (*_377)<br/></td></tr><tr><td align="left">_254 = anchor_lang::prelude::InterfaceAccount::&lt;'_, anchor_spl::token_interface::TokenAccount&gt;::reload(move _255)</td></tr></table>>];
    bb111__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageLive(_248)<br/>_248 = move ((_225 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_250)<br/>_250 = move _248<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _250)</td></tr></table>>];
    bb112__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageDead(_250)<br/>StorageDead(_248)<br/>_359 = discriminant(_225)<br/>StorageDead(_240)<br/>StorageDead(_236)<br/>StorageDead(_234)<br/>StorageDead(_232)<br/>StorageDead(_230)<br/>StorageDead(_228)<br/>StorageDead(_225)<br/>StorageDead(_224)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb113__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageDead(_255)<br/></td></tr><tr><td align="left">_253 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _254)</td></tr></table>>];
    bb114__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageDead(_254)<br/>_256 = discriminant(_253)<br/></td></tr><tr><td align="left">switchInt(move _256)</td></tr></table>>];
    bb115__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageLive(_260)<br/>_260 = ((_253 as Continue).0: ())<br/>_252 = _260<br/>StorageDead(_260)<br/>_355 = discriminant(_253)<br/>StorageDead(_253)<br/>StorageDead(_252)<br/>StorageLive(_261)<br/>StorageLive(_262)<br/>StorageLive(_263)<br/>StorageLive(_264)<br/>StorageLive(_265)<br/>StorageLive(_266)<br/>StorageLive(_267)<br/>StorageLive(_268)<br/>StorageLive(_269)<br/>_335 = deref_copy (_1.1: &amp;mut instructions::if_staker::RemoveInsuranceFundStake&lt;'_&gt;)<br/>_336 = deref_copy ((*_335).5: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_378 = (((_336.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_269 = &amp;(*_378)<br/></td></tr><tr><td align="left">_268 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _269)</td></tr></table>>];
    bb116__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageLive(_257)<br/>_257 = move ((_253 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_259)<br/>_259 = move _257<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _259)</td></tr></table>>];
    bb117__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageDead(_259)<br/>StorageDead(_257)<br/>_357 = discriminant(_253)<br/>StorageDead(_253)<br/>StorageDead(_252)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb118__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">_267 = &amp;(*_268)<br/></td></tr><tr><td align="left">_266 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _267)</td></tr></table>>];
    bb119__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageDead(_269)<br/>StorageDead(_267)<br/>_265 = ((*_266).2: u64)<br/>_264 = Gt(move _265, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _264)</td></tr></table>>];
    bb120__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageDead(_268)<br/>StorageDead(_266)<br/>StorageDead(_265)<br/>StorageLive(_270)<br/>_270 = ()<br/>_263 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _270)<br/>StorageDead(_270)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb121__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageDead(_268)<br/>StorageDead(_266)<br/>StorageDead(_265)<br/>StorageLive(_271)<br/>_271 = error::ErrorCode::InvalidIFDetected<br/>StorageLive(_272)<br/>StorageLive(_273)<br/>StorageLive(_274)<br/>StorageLive(_275)<br/>StorageLive(_276)<br/>StorageLive(_277)<br/>StorageLive(_278)<br/>StorageLive(_279)<br/>StorageLive(_280)<br/>StorageLive(_281)<br/>StorageLive(_282)<br/>_312 = const _<br/>_282 = &amp;(*_312)<br/>_281 = &amp;(*_282)<br/>_280 = move _281 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_281)<br/>StorageLive(_284)<br/>StorageLive(_285)<br/>StorageLive(_286)<br/>StorageLive(_287)<br/>StorageLive(_288)<br/>StorageLive(_289)<br/>StorageLive(_290)<br/>_290 = &amp;_271<br/>_289 = &amp;(*_290)<br/></td></tr><tr><td align="left">_288 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _289)</td></tr></table>>];
    bb122__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageDead(_289)<br/>_287 = [move _288]<br/>StorageDead(_288)<br/>_286 = &amp;_287<br/>_285 = &amp;(*_286)<br/>_284 = move _285 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_285)<br/></td></tr><tr><td align="left">_279 = Arguments::&lt;'_&gt;::new_v1(move _280, move _284)</td></tr></table>>];
    bb123__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageDead(_284)<br/>StorageDead(_280)<br/></td></tr><tr><td align="left">_278 = format(move _279)</td></tr></table>>];
    bb124__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageDead(_279)<br/>StorageDead(_290)<br/>StorageDead(_287)<br/>StorageDead(_286)<br/>StorageDead(_282)<br/>_277 = move _278<br/>StorageDead(_278)<br/>_276 = &amp;_277<br/>_275 = &amp;(*_276)<br/></td></tr><tr><td align="left">_274 = &lt;String as Deref&gt;::deref(move _275)</td></tr></table>>];
    bb125__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">_273 = &amp;(*_274)<br/>StorageDead(_275)<br/></td></tr><tr><td align="left">_272 = solana_program::log::sol_log(move _273)</td></tr></table>>];
    bb126__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageDead(_273)<br/></td></tr><tr><td align="left">drop(_277)</td></tr></table>>];
    bb127__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageDead(_277)<br/>StorageDead(_276)<br/>StorageDead(_274)<br/>StorageDead(_272)<br/>StorageLive(_291)<br/>StorageLive(_292)<br/>StorageLive(_293)<br/>_293 = const &quot;insurance_fund_vault.amount must remain &gt; 0&quot;<br/>_292 = &amp;(*_293)<br/></td></tr><tr><td align="left">_291 = solana_program::log::sol_log(move _292)</td></tr></table>>];
    bb128__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageDead(_292)<br/>StorageDead(_293)<br/>StorageDead(_291)<br/>StorageLive(_294)<br/>_294 = _271<br/>_263 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _294)<br/>StorageDead(_294)<br/>StorageDead(_271)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb129__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">StorageDead(_264)<br/></td></tr><tr><td align="left">_262 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _263)</td></tr></table>>];
    bb130__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageDead(_263)<br/>_295 = discriminant(_262)<br/></td></tr><tr><td align="left">switchInt(move _295)</td></tr></table>>];
    bb131__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageLive(_299)<br/>_299 = ((_262 as Continue).0: ())<br/>_261 = _299<br/>StorageDead(_299)<br/>StorageDead(_262)<br/>StorageDead(_261)<br/>StorageLive(_300)<br/>StorageLive(_301)<br/>StorageLive(_302)<br/>StorageLive(_303)<br/>StorageLive(_304)<br/>StorageLive(_305)<br/>_305 = &amp;(*_46)<br/></td></tr><tr><td align="left">_304 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _305)</td></tr></table>>];
    bb132__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageLive(_296)<br/>_296 = ((_262 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_298)<br/>_298 = _296<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _298)</td></tr></table>>];
    bb133__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageDead(_298)<br/>StorageDead(_296)<br/>StorageDead(_262)<br/>StorageDead(_261)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb134__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">_303 = &amp;(*_304)<br/>StorageDead(_305)<br/></td></tr><tr><td align="left">_302 = validate_spot_balances(move _303)</td></tr></table>>];
    bb135__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageDead(_303)<br/></td></tr><tr><td align="left">_301 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _302)</td></tr></table>>];
    bb136__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageDead(_302)<br/>_306 = discriminant(_301)<br/></td></tr><tr><td align="left">switchInt(move _306)</td></tr></table>>];
    bb137__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">StorageLive(_310)<br/>_310 = ((_301 as Continue).0: i64)<br/>_300 = _310<br/>StorageDead(_310)<br/>StorageDead(_304)<br/>StorageDead(_301)<br/>StorageDead(_300)<br/>StorageLive(_311)<br/>_311 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _311)<br/>StorageDead(_311)<br/>StorageDead(_201)<br/>StorageDead(_63)<br/>StorageDead(_60)<br/>StorageDead(_59)<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">drop(_47)</td></tr></table>>];
    bb138__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">StorageLive(_307)<br/>_307 = ((_301 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_309)<br/>_309 = _307<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _309)</td></tr></table>>];
    bb139__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">StorageDead(_309)<br/>StorageDead(_307)<br/>StorageDead(_304)<br/>StorageDead(_301)<br/>StorageDead(_300)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb140__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">drop(_35)</td></tr></table>>];
    bb141__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">drop(_23)</td></tr></table>>];
    bb142__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_22)<br/>StorageDead(_21)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb143__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageDead(_201)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb144__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">StorageDead(_158)<br/>StorageDead(_157)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb145__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_60)<br/>StorageDead(_59)<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">drop(_47)</td></tr></table>>];
    bb146__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">drop(_35)</td></tr></table>>];
    bb147__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">drop(_23)</td></tr></table>>];
    bb148__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_22)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb149__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">149</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb150__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">150</td></tr><tr><td align="left">return</td></tr></table>>];
    bb151__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">151 (cleanup)</td></tr><tr><td align="left">drop(_277)</td></tr></table>>];
    bb152__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">152 (cleanup)</td></tr><tr><td align="left">drop(_178)</td></tr></table>>];
    bb153__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">153 (cleanup)</td></tr><tr><td align="left">drop(_134)</td></tr></table>>];
    bb154__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">154 (cleanup)</td></tr><tr><td align="left">drop(_106)</td></tr></table>>];
    bb155__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">155 (cleanup)</td></tr><tr><td align="left">drop(_87)</td></tr></table>>];
    bb156__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">156 (cleanup)</td></tr><tr><td align="left">drop(_47)</td></tr></table>>];
    bb157__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">157 (cleanup)</td></tr><tr><td align="left">drop(_35)</td></tr></table>>];
    bb158__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">158 (cleanup)</td></tr><tr><td align="left">drop(_23)</td></tr></table>>];
    bb159__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">159 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb160__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">160 (cleanup)</td></tr><tr><td align="left" balign="left">_365 = discriminant(_253)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb161__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">161 (cleanup)</td></tr><tr><td align="left" balign="left">_366 = discriminant(_225)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb162__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">162 (cleanup)</td></tr><tr><td align="left" balign="left">_367 = discriminant(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb163__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">163 (cleanup)</td></tr><tr><td align="left" balign="left">_368 = discriminant(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb164__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">164 (cleanup)</td></tr><tr><td align="left" balign="left">_369 = discriminant(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb165__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">165 (cleanup)</td></tr><tr><td align="left" balign="left">_370 = discriminant(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb166__0_8522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">166 (cleanup)</td></tr><tr><td align="left" balign="left">_371 = discriminant(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_8522 -> bb1__0_8522 [label="return"];
    bb1__0_8522 -> bb2__0_8522 [label="return"];
    bb1__0_8522 -> bb159__0_8522 [label="unwind"];
    bb2__0_8522 -> bb3__0_8522 [label="0"];
    bb2__0_8522 -> bb5__0_8522 [label="1"];
    bb2__0_8522 -> bb4__0_8522 [label="otherwise"];
    bb3__0_8522 -> bb7__0_8522 [label="return"];
    bb5__0_8522 -> bb6__0_8522 [label="return"];
    bb5__0_8522 -> bb166__0_8522 [label="unwind"];
    bb6__0_8522 -> bb150__0_8522 [label=""];
    bb7__0_8522 -> bb8__0_8522 [label="return"];
    bb7__0_8522 -> bb159__0_8522 [label="unwind"];
    bb8__0_8522 -> bb9__0_8522 [label="0"];
    bb8__0_8522 -> bb10__0_8522 [label="1"];
    bb8__0_8522 -> bb4__0_8522 [label="otherwise"];
    bb9__0_8522 -> bb12__0_8522 [label="return"];
    bb10__0_8522 -> bb11__0_8522 [label="return"];
    bb10__0_8522 -> bb165__0_8522 [label="unwind"];
    bb11__0_8522 -> bb149__0_8522 [label=""];
    bb12__0_8522 -> bb13__0_8522 [label="return"];
    bb12__0_8522 -> bb159__0_8522 [label="unwind"];
    bb13__0_8522 -> bb14__0_8522 [label="return"];
    bb13__0_8522 -> bb159__0_8522 [label="unwind"];
    bb14__0_8522 -> bb15__0_8522 [label="0"];
    bb14__0_8522 -> bb16__0_8522 [label="1"];
    bb14__0_8522 -> bb4__0_8522 [label="otherwise"];
    bb15__0_8522 -> bb18__0_8522 [label="return"];
    bb15__0_8522 -> bb158__0_8522 [label="unwind"];
    bb16__0_8522 -> bb17__0_8522 [label="return"];
    bb16__0_8522 -> bb164__0_8522 [label="unwind"];
    bb17__0_8522 -> bb148__0_8522 [label=""];
    bb18__0_8522 -> bb19__0_8522 [label="return"];
    bb18__0_8522 -> bb158__0_8522 [label="unwind"];
    bb19__0_8522 -> bb20__0_8522 [label="return"];
    bb19__0_8522 -> bb158__0_8522 [label="unwind"];
    bb20__0_8522 -> bb21__0_8522 [label="0"];
    bb20__0_8522 -> bb22__0_8522 [label="1"];
    bb20__0_8522 -> bb4__0_8522 [label="otherwise"];
    bb21__0_8522 -> bb24__0_8522 [label="return"];
    bb21__0_8522 -> bb157__0_8522 [label="unwind"];
    bb22__0_8522 -> bb23__0_8522 [label="return"];
    bb22__0_8522 -> bb163__0_8522 [label="unwind"];
    bb23__0_8522 -> bb147__0_8522 [label=""];
    bb24__0_8522 -> bb25__0_8522 [label="return"];
    bb24__0_8522 -> bb157__0_8522 [label="unwind"];
    bb25__0_8522 -> bb26__0_8522 [label="return"];
    bb25__0_8522 -> bb157__0_8522 [label="unwind"];
    bb26__0_8522 -> bb27__0_8522 [label="0"];
    bb26__0_8522 -> bb28__0_8522 [label="1"];
    bb26__0_8522 -> bb4__0_8522 [label="otherwise"];
    bb27__0_8522 -> bb30__0_8522 [label="return"];
    bb27__0_8522 -> bb156__0_8522 [label="unwind"];
    bb28__0_8522 -> bb29__0_8522 [label="return"];
    bb28__0_8522 -> bb162__0_8522 [label="unwind"];
    bb29__0_8522 -> bb146__0_8522 [label=""];
    bb30__0_8522 -> bb31__0_8522 [label="return"];
    bb30__0_8522 -> bb156__0_8522 [label="unwind"];
    bb31__0_8522 -> bb32__0_8522 [label="return"];
    bb31__0_8522 -> bb156__0_8522 [label="unwind"];
    bb32__0_8522 -> bb33__0_8522 [label="return"];
    bb32__0_8522 -> bb156__0_8522 [label="unwind"];
    bb33__0_8522 -> bb34__0_8522 [label="0"];
    bb33__0_8522 -> bb35__0_8522 [label="1"];
    bb33__0_8522 -> bb4__0_8522 [label="otherwise"];
    bb34__0_8522 -> bb37__0_8522 [label="return"];
    bb34__0_8522 -> bb156__0_8522 [label="unwind"];
    bb35__0_8522 -> bb36__0_8522 [label="return"];
    bb35__0_8522 -> bb156__0_8522 [label="unwind"];
    bb36__0_8522 -> bb145__0_8522 [label=""];
    bb37__0_8522 -> bb38__0_8522 [label="return"];
    bb37__0_8522 -> bb156__0_8522 [label="unwind"];
    bb38__0_8522 -> bb40__0_8522 [label="0"];
    bb38__0_8522 -> bb39__0_8522 [label="otherwise"];
    bb39__0_8522 -> bb41__0_8522 [label="return"];
    bb39__0_8522 -> bb156__0_8522 [label="unwind"];
    bb40__0_8522 -> bb52__0_8522 [label=""];
    bb41__0_8522 -> bb42__0_8522 [label="return"];
    bb41__0_8522 -> bb156__0_8522 [label="unwind"];
    bb42__0_8522 -> bb43__0_8522 [label="return"];
    bb42__0_8522 -> bb156__0_8522 [label="unwind"];
    bb43__0_8522 -> bb44__0_8522 [label="return"];
    bb43__0_8522 -> bb155__0_8522 [label="unwind"];
    bb44__0_8522 -> bb45__0_8522 [label="return"];
    bb44__0_8522 -> bb155__0_8522 [label="unwind"];
    bb45__0_8522 -> bb46__0_8522 [label="return"];
    bb45__0_8522 -> bb156__0_8522 [label="unwind"];
    bb46__0_8522 -> bb47__0_8522 [label="return"];
    bb46__0_8522 -> bb156__0_8522 [label="unwind"];
    bb47__0_8522 -> bb48__0_8522 [label="return"];
    bb47__0_8522 -> bb156__0_8522 [label="unwind"];
    bb48__0_8522 -> bb49__0_8522 [label="return"];
    bb48__0_8522 -> bb154__0_8522 [label="unwind"];
    bb49__0_8522 -> bb50__0_8522 [label="return"];
    bb49__0_8522 -> bb154__0_8522 [label="unwind"];
    bb50__0_8522 -> bb51__0_8522 [label="return"];
    bb50__0_8522 -> bb156__0_8522 [label="unwind"];
    bb51__0_8522 -> bb52__0_8522 [label=""];
    bb52__0_8522 -> bb53__0_8522 [label="return"];
    bb52__0_8522 -> bb156__0_8522 [label="unwind"];
    bb53__0_8522 -> bb54__0_8522 [label="0"];
    bb53__0_8522 -> bb55__0_8522 [label="1"];
    bb53__0_8522 -> bb4__0_8522 [label="otherwise"];
    bb54__0_8522 -> bb57__0_8522 [label="return"];
    bb54__0_8522 -> bb156__0_8522 [label="unwind"];
    bb55__0_8522 -> bb56__0_8522 [label="return"];
    bb55__0_8522 -> bb156__0_8522 [label="unwind"];
    bb56__0_8522 -> bb145__0_8522 [label=""];
    bb57__0_8522 -> bb59__0_8522 [label="0"];
    bb57__0_8522 -> bb58__0_8522 [label="otherwise"];
    bb58__0_8522 -> bb67__0_8522 [label=""];
    bb59__0_8522 -> bb60__0_8522 [label="return"];
    bb59__0_8522 -> bb156__0_8522 [label="unwind"];
    bb60__0_8522 -> bb61__0_8522 [label="return"];
    bb60__0_8522 -> bb156__0_8522 [label="unwind"];
    bb61__0_8522 -> bb62__0_8522 [label="return"];
    bb61__0_8522 -> bb156__0_8522 [label="unwind"];
    bb62__0_8522 -> bb63__0_8522 [label="return"];
    bb62__0_8522 -> bb153__0_8522 [label="unwind"];
    bb63__0_8522 -> bb64__0_8522 [label="return"];
    bb63__0_8522 -> bb153__0_8522 [label="unwind"];
    bb64__0_8522 -> bb65__0_8522 [label="return"];
    bb64__0_8522 -> bb156__0_8522 [label="unwind"];
    bb65__0_8522 -> bb66__0_8522 [label="return"];
    bb65__0_8522 -> bb156__0_8522 [label="unwind"];
    bb66__0_8522 -> bb67__0_8522 [label=""];
    bb67__0_8522 -> bb68__0_8522 [label="return"];
    bb67__0_8522 -> bb156__0_8522 [label="unwind"];
    bb68__0_8522 -> bb69__0_8522 [label="0"];
    bb68__0_8522 -> bb70__0_8522 [label="1"];
    bb68__0_8522 -> bb4__0_8522 [label="otherwise"];
    bb69__0_8522 -> bb72__0_8522 [label="return"];
    bb69__0_8522 -> bb156__0_8522 [label="unwind"];
    bb70__0_8522 -> bb71__0_8522 [label="return"];
    bb70__0_8522 -> bb156__0_8522 [label="unwind"];
    bb71__0_8522 -> bb145__0_8522 [label=""];
    bb72__0_8522 -> bb73__0_8522 [label="return"];
    bb72__0_8522 -> bb156__0_8522 [label="unwind"];
    bb73__0_8522 -> bb74__0_8522 [label="return"];
    bb73__0_8522 -> bb156__0_8522 [label="unwind"];
    bb74__0_8522 -> bb75__0_8522 [label="0"];
    bb74__0_8522 -> bb76__0_8522 [label="1"];
    bb74__0_8522 -> bb4__0_8522 [label="otherwise"];
    bb75__0_8522 -> bb79__0_8522 [label="0"];
    bb75__0_8522 -> bb78__0_8522 [label="otherwise"];
    bb76__0_8522 -> bb77__0_8522 [label="return"];
    bb76__0_8522 -> bb156__0_8522 [label="unwind"];
    bb77__0_8522 -> bb144__0_8522 [label=""];
    bb78__0_8522 -> bb87__0_8522 [label=""];
    bb79__0_8522 -> bb80__0_8522 [label="return"];
    bb79__0_8522 -> bb156__0_8522 [label="unwind"];
    bb80__0_8522 -> bb81__0_8522 [label="return"];
    bb80__0_8522 -> bb156__0_8522 [label="unwind"];
    bb81__0_8522 -> bb82__0_8522 [label="return"];
    bb81__0_8522 -> bb156__0_8522 [label="unwind"];
    bb82__0_8522 -> bb83__0_8522 [label="return"];
    bb82__0_8522 -> bb152__0_8522 [label="unwind"];
    bb83__0_8522 -> bb84__0_8522 [label="return"];
    bb83__0_8522 -> bb152__0_8522 [label="unwind"];
    bb84__0_8522 -> bb85__0_8522 [label="return"];
    bb84__0_8522 -> bb156__0_8522 [label="unwind"];
    bb85__0_8522 -> bb86__0_8522 [label="return"];
    bb85__0_8522 -> bb156__0_8522 [label="unwind"];
    bb86__0_8522 -> bb87__0_8522 [label=""];
    bb87__0_8522 -> bb88__0_8522 [label="return"];
    bb87__0_8522 -> bb156__0_8522 [label="unwind"];
    bb88__0_8522 -> bb89__0_8522 [label="0"];
    bb88__0_8522 -> bb90__0_8522 [label="1"];
    bb88__0_8522 -> bb4__0_8522 [label="otherwise"];
    bb89__0_8522 -> bb92__0_8522 [label="return"];
    bb89__0_8522 -> bb156__0_8522 [label="unwind"];
    bb90__0_8522 -> bb91__0_8522 [label="return"];
    bb90__0_8522 -> bb156__0_8522 [label="unwind"];
    bb91__0_8522 -> bb144__0_8522 [label=""];
    bb92__0_8522 -> bb93__0_8522 [label="return"];
    bb92__0_8522 -> bb156__0_8522 [label="unwind"];
    bb93__0_8522 -> bb94__0_8522 [label="return"];
    bb93__0_8522 -> bb156__0_8522 [label="unwind"];
    bb94__0_8522 -> bb95__0_8522 [label="return"];
    bb94__0_8522 -> bb156__0_8522 [label="unwind"];
    bb95__0_8522 -> bb96__0_8522 [label="return"];
    bb95__0_8522 -> bb156__0_8522 [label="unwind"];
    bb96__0_8522 -> bb97__0_8522 [label="return"];
    bb96__0_8522 -> bb156__0_8522 [label="unwind"];
    bb97__0_8522 -> bb98__0_8522 [label="return"];
    bb97__0_8522 -> bb156__0_8522 [label="unwind"];
    bb98__0_8522 -> bb99__0_8522 [label="0"];
    bb98__0_8522 -> bb100__0_8522 [label="1"];
    bb98__0_8522 -> bb4__0_8522 [label="otherwise"];
    bb99__0_8522 -> bb102__0_8522 [label="return"];
    bb99__0_8522 -> bb156__0_8522 [label="unwind"];
    bb100__0_8522 -> bb101__0_8522 [label="return"];
    bb100__0_8522 -> bb156__0_8522 [label="unwind"];
    bb101__0_8522 -> bb143__0_8522 [label=""];
    bb102__0_8522 -> bb103__0_8522 [label="return"];
    bb102__0_8522 -> bb156__0_8522 [label="unwind"];
    bb103__0_8522 -> bb104__0_8522 [label="return"];
    bb103__0_8522 -> bb156__0_8522 [label="unwind"];
    bb104__0_8522 -> bb106__0_8522 [label="0"];
    bb104__0_8522 -> bb105__0_8522 [label="otherwise"];
    bb105__0_8522 -> bb107__0_8522 [label=""];
    bb106__0_8522 -> bb107__0_8522 [label=""];
    bb107__0_8522 -> bb108__0_8522 [label="return"];
    bb107__0_8522 -> bb156__0_8522 [label="unwind"];
    bb108__0_8522 -> bb109__0_8522 [label="return"];
    bb108__0_8522 -> bb156__0_8522 [label="unwind"];
    bb109__0_8522 -> bb110__0_8522 [label="0"];
    bb109__0_8522 -> bb111__0_8522 [label="1"];
    bb109__0_8522 -> bb4__0_8522 [label="otherwise"];
    bb110__0_8522 -> bb113__0_8522 [label="return"];
    bb110__0_8522 -> bb156__0_8522 [label="unwind"];
    bb111__0_8522 -> bb112__0_8522 [label="return"];
    bb111__0_8522 -> bb161__0_8522 [label="unwind"];
    bb112__0_8522 -> bb143__0_8522 [label=""];
    bb113__0_8522 -> bb114__0_8522 [label="return"];
    bb113__0_8522 -> bb156__0_8522 [label="unwind"];
    bb114__0_8522 -> bb115__0_8522 [label="0"];
    bb114__0_8522 -> bb116__0_8522 [label="1"];
    bb114__0_8522 -> bb4__0_8522 [label="otherwise"];
    bb115__0_8522 -> bb118__0_8522 [label="return"];
    bb115__0_8522 -> bb156__0_8522 [label="unwind"];
    bb116__0_8522 -> bb117__0_8522 [label="return"];
    bb116__0_8522 -> bb160__0_8522 [label="unwind"];
    bb117__0_8522 -> bb143__0_8522 [label=""];
    bb118__0_8522 -> bb119__0_8522 [label="return"];
    bb118__0_8522 -> bb156__0_8522 [label="unwind"];
    bb119__0_8522 -> bb121__0_8522 [label="0"];
    bb119__0_8522 -> bb120__0_8522 [label="otherwise"];
    bb120__0_8522 -> bb129__0_8522 [label=""];
    bb121__0_8522 -> bb122__0_8522 [label="return"];
    bb121__0_8522 -> bb156__0_8522 [label="unwind"];
    bb122__0_8522 -> bb123__0_8522 [label="return"];
    bb122__0_8522 -> bb156__0_8522 [label="unwind"];
    bb123__0_8522 -> bb124__0_8522 [label="return"];
    bb123__0_8522 -> bb156__0_8522 [label="unwind"];
    bb124__0_8522 -> bb125__0_8522 [label="return"];
    bb124__0_8522 -> bb151__0_8522 [label="unwind"];
    bb125__0_8522 -> bb126__0_8522 [label="return"];
    bb125__0_8522 -> bb151__0_8522 [label="unwind"];
    bb126__0_8522 -> bb127__0_8522 [label="return"];
    bb126__0_8522 -> bb156__0_8522 [label="unwind"];
    bb127__0_8522 -> bb128__0_8522 [label="return"];
    bb127__0_8522 -> bb156__0_8522 [label="unwind"];
    bb128__0_8522 -> bb129__0_8522 [label=""];
    bb129__0_8522 -> bb130__0_8522 [label="return"];
    bb129__0_8522 -> bb156__0_8522 [label="unwind"];
    bb130__0_8522 -> bb131__0_8522 [label="0"];
    bb130__0_8522 -> bb132__0_8522 [label="1"];
    bb130__0_8522 -> bb4__0_8522 [label="otherwise"];
    bb131__0_8522 -> bb134__0_8522 [label="return"];
    bb131__0_8522 -> bb156__0_8522 [label="unwind"];
    bb132__0_8522 -> bb133__0_8522 [label="return"];
    bb132__0_8522 -> bb156__0_8522 [label="unwind"];
    bb133__0_8522 -> bb143__0_8522 [label=""];
    bb134__0_8522 -> bb135__0_8522 [label="return"];
    bb134__0_8522 -> bb156__0_8522 [label="unwind"];
    bb135__0_8522 -> bb136__0_8522 [label="return"];
    bb135__0_8522 -> bb156__0_8522 [label="unwind"];
    bb136__0_8522 -> bb137__0_8522 [label="0"];
    bb136__0_8522 -> bb138__0_8522 [label="1"];
    bb136__0_8522 -> bb4__0_8522 [label="otherwise"];
    bb137__0_8522 -> bb140__0_8522 [label="return"];
    bb137__0_8522 -> bb157__0_8522 [label="unwind"];
    bb138__0_8522 -> bb139__0_8522 [label="return"];
    bb138__0_8522 -> bb156__0_8522 [label="unwind"];
    bb139__0_8522 -> bb143__0_8522 [label=""];
    bb140__0_8522 -> bb141__0_8522 [label="return"];
    bb140__0_8522 -> bb158__0_8522 [label="unwind"];
    bb141__0_8522 -> bb142__0_8522 [label="return"];
    bb141__0_8522 -> bb159__0_8522 [label="unwind"];
    bb142__0_8522 -> bb150__0_8522 [label=""];
    bb143__0_8522 -> bb145__0_8522 [label=""];
    bb144__0_8522 -> bb145__0_8522 [label=""];
    bb145__0_8522 -> bb146__0_8522 [label="return"];
    bb145__0_8522 -> bb157__0_8522 [label="unwind"];
    bb146__0_8522 -> bb147__0_8522 [label="return"];
    bb146__0_8522 -> bb158__0_8522 [label="unwind"];
    bb147__0_8522 -> bb148__0_8522 [label="return"];
    bb147__0_8522 -> bb159__0_8522 [label="unwind"];
    bb148__0_8522 -> bb149__0_8522 [label=""];
    bb149__0_8522 -> bb150__0_8522 [label=""];
    bb151__0_8522 -> bb156__0_8522 [label="return"];
    bb152__0_8522 -> bb156__0_8522 [label="return"];
    bb153__0_8522 -> bb156__0_8522 [label="return"];
    bb154__0_8522 -> bb156__0_8522 [label="return"];
    bb155__0_8522 -> bb156__0_8522 [label="return"];
    bb156__0_8522 -> bb157__0_8522 [label="return"];
    bb157__0_8522 -> bb158__0_8522 [label="return"];
    bb158__0_8522 -> bb159__0_8522 [label="return"];
    bb160__0_8522 -> bb156__0_8522 [label=""];
    bb161__0_8522 -> bb156__0_8522 [label=""];
    bb162__0_8522 -> bb157__0_8522 [label=""];
    bb163__0_8522 -> bb158__0_8522 [label=""];
    bb164__0_8522 -> bb159__0_8522 [label=""];
    bb165__0_8522 -> bb159__0_8522 [label=""];
    bb166__0_8522 -> bb159__0_8522 [label=""];
}
