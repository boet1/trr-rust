digraph Mir_0_4093 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn SpotMarket::update_historical_index_price(_1: &amp;ReErased mut state::spot_market::SpotMarket, _2: std::option::Option&lt;u64&gt;, _3: std::option::Option&lt;u64&gt;, _4: i64) -&gt; std::result::Result&lt;(), error::ErrorCode&gt;<br align="left"/>let mut _5: u64;<br align="left"/>let _6: ();<br align="left"/>let mut _7: isize;<br align="left"/>let _8: u64;<br align="left"/>let mut _9: u64;<br align="left"/>let mut _10: u64;<br align="left"/>let mut _11: (u64, bool);<br align="left"/>let _12: ();<br align="left"/>let mut _13: isize;<br align="left"/>let _14: u64;<br align="left"/>let mut _15: u64;<br align="left"/>let mut _16: u64;<br align="left"/>let mut _17: bool;<br align="left"/>let mut _18: u64;<br align="left"/>let mut _19: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _20: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _21: u64;<br align="left"/>let mut _22: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _23: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _24: u64;<br align="left"/>let mut _25: u64;<br align="left"/>let mut _26: isize;<br align="left"/>let _27: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _28: !;<br align="left"/>let mut _29: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _30: u64;<br align="left"/>let mut _31: isize;<br align="left"/>let _32: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _33: !;<br align="left"/>let mut _34: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _35: u64;<br align="left"/>let mut _36: u64;<br align="left"/>let mut _37: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _38: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _39: i64;<br align="left"/>let mut _40: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _41: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _42: i64;<br align="left"/>let mut _43: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _44: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _45: u64;<br align="left"/>let mut _46: isize;<br align="left"/>let _47: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _48: !;<br align="left"/>let mut _49: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _50: i64;<br align="left"/>let mut _51: i64;<br align="left"/>let mut _52: i64;<br align="left"/>let mut _53: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _54: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _55: u64;<br align="left"/>let mut _56: isize;<br align="left"/>let _57: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _58: !;<br align="left"/>let mut _59: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _60: i64;<br align="left"/>let mut _61: i64;<br align="left"/>let mut _62: isize;<br align="left"/>let _63: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _64: !;<br align="left"/>let mut _65: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _66: i64;<br align="left"/>let mut _67: isize;<br align="left"/>let _68: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _69: !;<br align="left"/>let mut _70: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _71: u64;<br align="left"/>let mut _72: u64;<br align="left"/>let mut _73: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _74: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _75: i64;<br align="left"/>let mut _76: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _77: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _78: i64;<br align="left"/>let mut _79: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _80: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _81: u64;<br align="left"/>let mut _82: isize;<br align="left"/>let _83: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _84: !;<br align="left"/>let mut _85: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _86: i64;<br align="left"/>let mut _87: i64;<br align="left"/>let mut _88: i64;<br align="left"/>let mut _89: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _90: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _91: u64;<br align="left"/>let mut _92: isize;<br align="left"/>let _93: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _94: !;<br align="left"/>let mut _95: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _96: i64;<br align="left"/>let mut _97: i64;<br align="left"/>let mut _98: i64;<br align="left"/>let mut _99: isize;<br align="left"/>let _100: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _101: !;<br align="left"/>let mut _102: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _103: i64;<br align="left"/>let mut _104: isize;<br align="left"/>let _105: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _106: !;<br align="left"/>let mut _107: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _108: u64;<br align="left"/>let mut _109: i64;<br align="left"/>let mut _110: ();<br align="left"/>debug self =&gt; _1;<br align="left"/>debug best_bid =&gt; _2;<br align="left"/>debug best_ask =&gt; _3;<br align="left"/>debug now =&gt; _4;<br align="left"/>debug mid_price =&gt; _5;<br align="left"/>debug best_bid =&gt; _8;<br align="left"/>debug best_ask =&gt; _14;<br align="left"/>debug residual =&gt; _27;<br align="left"/>debug val =&gt; _30;<br align="left"/>debug residual =&gt; _32;<br align="left"/>debug val =&gt; _35;<br align="left"/>debug residual =&gt; _47;<br align="left"/>debug val =&gt; _50;<br align="left"/>debug residual =&gt; _57;<br align="left"/>debug val =&gt; _60;<br align="left"/>debug residual =&gt; _63;<br align="left"/>debug val =&gt; _66;<br align="left"/>debug residual =&gt; _68;<br align="left"/>debug val =&gt; _71;<br align="left"/>debug residual =&gt; _83;<br align="left"/>debug val =&gt; _86;<br align="left"/>debug residual =&gt; _93;<br align="left"/>debug val =&gt; _96;<br align="left"/>debug residual =&gt; _100;<br align="left"/>debug val =&gt; _103;<br align="left"/>debug residual =&gt; _105;<br align="left"/>debug val =&gt; _108;<br align="left"/>>;
    bb0__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>_5 = const 0_u64<br/>StorageLive(_6)<br/>_7 = discriminant(_2)<br/></td></tr><tr><td align="left">switchInt(move _7)</td></tr></table>>];
    bb1__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/>_8 = ((_2 as Some).0: u64)<br/>StorageLive(_9)<br/>_9 = _8<br/>(((*_1).6: state::oracle::HistoricalIndexData).0: u64) = move _9<br/>StorageDead(_9)<br/>StorageLive(_10)<br/>_10 = _8<br/>_11 = CheckedAdd(_5, _10)<br/></td></tr><tr><td align="left">assert(!move (_11.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, _5, move _10)</td></tr></table>>];
    bb2__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">_5 = move (_11.0: u64)<br/>StorageDead(_10)<br/>_6 = const ()<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb3__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">_6 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb4__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageLive(_12)<br/>_13 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _13)</td></tr></table>>];
    bb5__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = ((_3 as Some).0: u64)<br/>StorageLive(_15)<br/>_15 = _14<br/>(((*_1).6: state::oracle::HistoricalIndexData).1: u64) = move _15<br/>StorageDead(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = _5<br/>_17 = Eq(move _18, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _17)</td></tr></table>>];
    bb6__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>_16 = _14<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_24 = _5<br/>StorageLive(_25)<br/>_25 = _14<br/></td></tr><tr><td align="left">_23 = &lt;u64 as SafeMath&gt;::safe_add(move _24, move _25)</td></tr></table>>];
    bb8__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">_22 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _23)</td></tr></table>>];
    bb9__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>_26 = discriminant(_22)<br/></td></tr><tr><td align="left">switchInt(move _26)</td></tr></table>>];
    bb10__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_30)<br/>_30 = ((_22 as Continue).0: u64)<br/>_21 = _30<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">_20 = &lt;u64 as SafeMath&gt;::safe_div(move _21, const 2_u64)</td></tr></table>>];
    bb11__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb12__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_27)<br/>_27 = ((_22 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_29)<br/>_29 = _27<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _29)</td></tr></table>>];
    bb13__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_27)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/></td></tr><tr><td align="left">_19 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _20)</td></tr></table>>];
    bb15__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>_31 = discriminant(_19)<br/></td></tr><tr><td align="left">switchInt(move _31)</td></tr></table>>];
    bb16__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = ((_19 as Continue).0: u64)<br/>_16 = _35<br/>StorageDead(_35)<br/>StorageDead(_22)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_32)<br/>_32 = ((_19 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_34)<br/>_34 = _32<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _34)</td></tr></table>>];
    bb18__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>_5 = move _16<br/>StorageDead(_16)<br/>_12 = const ()<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">_12 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>_45 = _5<br/></td></tr><tr><td align="left">_44 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _45)</td></tr></table>>];
    bb22__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/></td></tr><tr><td align="left">_43 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _44)</td></tr></table>>];
    bb23__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>_46 = discriminant(_43)<br/></td></tr><tr><td align="left">switchInt(move _46)</td></tr></table>>];
    bb24__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_50)<br/>_50 = ((_43 as Continue).0: i64)<br/>_42 = _50<br/>StorageDead(_50)<br/>StorageLive(_51)<br/>_51 = _4<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>_55 = (((*_1).6: state::oracle::HistoricalIndexData).2: u64)<br/></td></tr><tr><td align="left">_54 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _55)</td></tr></table>>];
    bb25__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>_47 = ((_43 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_49)<br/>_49 = _47<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _49)</td></tr></table>>];
    bb26__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_47)<br/>StorageDead(_42)<br/>StorageDead(_41)<br/>StorageDead(_39)<br/>StorageDead(_38)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/></td></tr><tr><td align="left">_53 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _54)</td></tr></table>>];
    bb28__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>_56 = discriminant(_53)<br/></td></tr><tr><td align="left">switchInt(move _56)</td></tr></table>>];
    bb29__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_60)<br/>_60 = ((_53 as Continue).0: i64)<br/>_52 = _60<br/>StorageDead(_60)<br/>StorageLive(_61)<br/>_61 = (((*_1).6: state::oracle::HistoricalIndexData).4: i64)<br/></td></tr><tr><td align="left">_41 = calculate_new_twap(move _42, move _51, move _52, move _61, const _)</td></tr></table>>];
    bb30__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_57)<br/>_57 = ((_53 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_59)<br/>_59 = _57<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _59)</td></tr></table>>];
    bb31__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_57)<br/>StorageDead(_52)<br/>StorageDead(_51)<br/>StorageDead(_42)<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_52)<br/>StorageDead(_51)<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">_40 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _41)</td></tr></table>>];
    bb33__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>_62 = discriminant(_40)<br/></td></tr><tr><td align="left">switchInt(move _62)</td></tr></table>>];
    bb34__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_66)<br/>_66 = ((_40 as Continue).0: i64)<br/>_39 = _66<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">_38 = &lt;i64 as Cast&gt;::cast::&lt;u64&gt;(move _39)</td></tr></table>>];
    bb35__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_63)<br/>_63 = ((_40 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_65)<br/>_65 = _63<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _65)</td></tr></table>>];
    bb36__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageDead(_63)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/></td></tr><tr><td align="left">_37 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _38)</td></tr></table>>];
    bb38__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>_67 = discriminant(_37)<br/></td></tr><tr><td align="left">switchInt(move _67)</td></tr></table>>];
    bb39__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_71)<br/>_71 = ((_37 as Continue).0: u64)<br/>_36 = _71<br/>StorageDead(_71)<br/>(((*_1).6: state::oracle::HistoricalIndexData).2: u64) = move _36<br/>StorageDead(_36)<br/>StorageDead(_53)<br/>StorageDead(_43)<br/>StorageDead(_40)<br/>StorageDead(_37)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>_81 = _5<br/></td></tr><tr><td align="left">_80 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _81)</td></tr></table>>];
    bb40__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageLive(_68)<br/>_68 = ((_37 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_70)<br/>_70 = _68<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _70)</td></tr></table>>];
    bb41__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_68)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/></td></tr><tr><td align="left">_79 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _80)</td></tr></table>>];
    bb43__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>_82 = discriminant(_79)<br/></td></tr><tr><td align="left">switchInt(move _82)</td></tr></table>>];
    bb44__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_86)<br/>_86 = ((_79 as Continue).0: i64)<br/>_78 = _86<br/>StorageDead(_86)<br/>StorageLive(_87)<br/>_87 = _4<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>_91 = (((*_1).6: state::oracle::HistoricalIndexData).3: u64)<br/></td></tr><tr><td align="left">_90 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _91)</td></tr></table>>];
    bb45__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageLive(_83)<br/>_83 = ((_79 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_85)<br/>_85 = _83<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _85)</td></tr></table>>];
    bb46__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>StorageDead(_83)<br/>StorageDead(_78)<br/>StorageDead(_77)<br/>StorageDead(_75)<br/>StorageDead(_74)<br/>StorageDead(_72)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/></td></tr><tr><td align="left">_89 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _90)</td></tr></table>>];
    bb48__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>_92 = discriminant(_89)<br/></td></tr><tr><td align="left">switchInt(move _92)</td></tr></table>>];
    bb49__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageLive(_96)<br/>_96 = ((_89 as Continue).0: i64)<br/>_88 = _96<br/>StorageDead(_96)<br/>StorageLive(_97)<br/>_97 = (((*_1).6: state::oracle::HistoricalIndexData).4: i64)<br/>StorageLive(_98)<br/>_98 = const _ as i64 (IntToInt)<br/></td></tr><tr><td align="left">_77 = calculate_new_twap(move _78, move _87, move _88, move _97, move _98)</td></tr></table>>];
    bb50__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageLive(_93)<br/>_93 = ((_89 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_95)<br/>_95 = _93<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _95)</td></tr></table>>];
    bb51__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/>StorageDead(_93)<br/>StorageDead(_88)<br/>StorageDead(_87)<br/>StorageDead(_78)<br/>StorageDead(_77)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb52__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>StorageDead(_97)<br/>StorageDead(_88)<br/>StorageDead(_87)<br/>StorageDead(_78)<br/></td></tr><tr><td align="left">_76 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _77)</td></tr></table>>];
    bb53__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>_99 = discriminant(_76)<br/></td></tr><tr><td align="left">switchInt(move _99)</td></tr></table>>];
    bb54__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageLive(_103)<br/>_103 = ((_76 as Continue).0: i64)<br/>_75 = _103<br/>StorageDead(_103)<br/></td></tr><tr><td align="left">_74 = &lt;i64 as Cast&gt;::cast::&lt;u64&gt;(move _75)</td></tr></table>>];
    bb55__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageLive(_100)<br/>_100 = ((_76 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_102)<br/>_102 = _100<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _102)</td></tr></table>>];
    bb56__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>StorageDead(_100)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb57__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/></td></tr><tr><td align="left">_73 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _74)</td></tr></table>>];
    bb58__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>_104 = discriminant(_73)<br/></td></tr><tr><td align="left">switchInt(move _104)</td></tr></table>>];
    bb59__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageLive(_108)<br/>_108 = ((_73 as Continue).0: u64)<br/>_72 = _108<br/>StorageDead(_108)<br/>(((*_1).6: state::oracle::HistoricalIndexData).3: u64) = move _72<br/>StorageDead(_72)<br/>StorageDead(_89)<br/>StorageDead(_79)<br/>StorageDead(_76)<br/>StorageDead(_73)<br/>StorageLive(_109)<br/>_109 = _4<br/>(((*_1).6: state::oracle::HistoricalIndexData).4: i64) = move _109<br/>StorageDead(_109)<br/>StorageLive(_110)<br/>_110 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _110)<br/>StorageDead(_110)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb60__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageLive(_105)<br/>_105 = ((_73 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_107)<br/>_107 = _105<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _107)</td></tr></table>>];
    bb61__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>StorageDead(_105)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_74)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb63__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_89)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb64__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageDead(_76)<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb65__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb66__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb67__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_40)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_19)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/>StorageDead(_14)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb69__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb70__0_4093 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_4093 -> bb1__0_4093 [label="1"];
    bb0__0_4093 -> bb3__0_4093 [label="otherwise"];
    bb1__0_4093 -> bb2__0_4093 [label="success"];
    bb2__0_4093 -> bb4__0_4093 [label=""];
    bb3__0_4093 -> bb4__0_4093 [label=""];
    bb4__0_4093 -> bb5__0_4093 [label="1"];
    bb4__0_4093 -> bb20__0_4093 [label="otherwise"];
    bb5__0_4093 -> bb7__0_4093 [label="0"];
    bb5__0_4093 -> bb6__0_4093 [label="otherwise"];
    bb6__0_4093 -> bb19__0_4093 [label=""];
    bb7__0_4093 -> bb8__0_4093 [label="return"];
    bb8__0_4093 -> bb9__0_4093 [label="return"];
    bb9__0_4093 -> bb10__0_4093 [label="0"];
    bb9__0_4093 -> bb12__0_4093 [label="1"];
    bb9__0_4093 -> bb11__0_4093 [label="otherwise"];
    bb10__0_4093 -> bb14__0_4093 [label="return"];
    bb12__0_4093 -> bb13__0_4093 [label="return"];
    bb13__0_4093 -> bb68__0_4093 [label=""];
    bb14__0_4093 -> bb15__0_4093 [label="return"];
    bb15__0_4093 -> bb16__0_4093 [label="0"];
    bb15__0_4093 -> bb17__0_4093 [label="1"];
    bb15__0_4093 -> bb11__0_4093 [label="otherwise"];
    bb16__0_4093 -> bb19__0_4093 [label=""];
    bb17__0_4093 -> bb18__0_4093 [label="return"];
    bb18__0_4093 -> bb68__0_4093 [label=""];
    bb19__0_4093 -> bb21__0_4093 [label=""];
    bb20__0_4093 -> bb21__0_4093 [label=""];
    bb21__0_4093 -> bb22__0_4093 [label="return"];
    bb22__0_4093 -> bb23__0_4093 [label="return"];
    bb23__0_4093 -> bb24__0_4093 [label="0"];
    bb23__0_4093 -> bb25__0_4093 [label="1"];
    bb23__0_4093 -> bb11__0_4093 [label="otherwise"];
    bb24__0_4093 -> bb27__0_4093 [label="return"];
    bb25__0_4093 -> bb26__0_4093 [label="return"];
    bb26__0_4093 -> bb67__0_4093 [label=""];
    bb27__0_4093 -> bb28__0_4093 [label="return"];
    bb28__0_4093 -> bb29__0_4093 [label="0"];
    bb28__0_4093 -> bb30__0_4093 [label="1"];
    bb28__0_4093 -> bb11__0_4093 [label="otherwise"];
    bb29__0_4093 -> bb32__0_4093 [label="return"];
    bb30__0_4093 -> bb31__0_4093 [label="return"];
    bb31__0_4093 -> bb65__0_4093 [label=""];
    bb32__0_4093 -> bb33__0_4093 [label="return"];
    bb33__0_4093 -> bb34__0_4093 [label="0"];
    bb33__0_4093 -> bb35__0_4093 [label="1"];
    bb33__0_4093 -> bb11__0_4093 [label="otherwise"];
    bb34__0_4093 -> bb37__0_4093 [label="return"];
    bb35__0_4093 -> bb36__0_4093 [label="return"];
    bb36__0_4093 -> bb65__0_4093 [label=""];
    bb37__0_4093 -> bb38__0_4093 [label="return"];
    bb38__0_4093 -> bb39__0_4093 [label="0"];
    bb38__0_4093 -> bb40__0_4093 [label="1"];
    bb38__0_4093 -> bb11__0_4093 [label="otherwise"];
    bb39__0_4093 -> bb42__0_4093 [label="return"];
    bb40__0_4093 -> bb41__0_4093 [label="return"];
    bb41__0_4093 -> bb66__0_4093 [label=""];
    bb42__0_4093 -> bb43__0_4093 [label="return"];
    bb43__0_4093 -> bb44__0_4093 [label="0"];
    bb43__0_4093 -> bb45__0_4093 [label="1"];
    bb43__0_4093 -> bb11__0_4093 [label="otherwise"];
    bb44__0_4093 -> bb47__0_4093 [label="return"];
    bb45__0_4093 -> bb46__0_4093 [label="return"];
    bb46__0_4093 -> bb64__0_4093 [label=""];
    bb47__0_4093 -> bb48__0_4093 [label="return"];
    bb48__0_4093 -> bb49__0_4093 [label="0"];
    bb48__0_4093 -> bb50__0_4093 [label="1"];
    bb48__0_4093 -> bb11__0_4093 [label="otherwise"];
    bb49__0_4093 -> bb52__0_4093 [label="return"];
    bb50__0_4093 -> bb51__0_4093 [label="return"];
    bb51__0_4093 -> bb62__0_4093 [label=""];
    bb52__0_4093 -> bb53__0_4093 [label="return"];
    bb53__0_4093 -> bb54__0_4093 [label="0"];
    bb53__0_4093 -> bb55__0_4093 [label="1"];
    bb53__0_4093 -> bb11__0_4093 [label="otherwise"];
    bb54__0_4093 -> bb57__0_4093 [label="return"];
    bb55__0_4093 -> bb56__0_4093 [label="return"];
    bb56__0_4093 -> bb62__0_4093 [label=""];
    bb57__0_4093 -> bb58__0_4093 [label="return"];
    bb58__0_4093 -> bb59__0_4093 [label="0"];
    bb58__0_4093 -> bb60__0_4093 [label="1"];
    bb58__0_4093 -> bb11__0_4093 [label="otherwise"];
    bb59__0_4093 -> bb70__0_4093 [label=""];
    bb60__0_4093 -> bb61__0_4093 [label="return"];
    bb61__0_4093 -> bb63__0_4093 [label=""];
    bb62__0_4093 -> bb63__0_4093 [label=""];
    bb63__0_4093 -> bb64__0_4093 [label=""];
    bb64__0_4093 -> bb69__0_4093 [label=""];
    bb65__0_4093 -> bb66__0_4093 [label=""];
    bb66__0_4093 -> bb67__0_4093 [label=""];
    bb67__0_4093 -> bb69__0_4093 [label=""];
    bb68__0_4093 -> bb69__0_4093 [label=""];
    bb69__0_4093 -> bb70__0_4093 [label=""];
}
