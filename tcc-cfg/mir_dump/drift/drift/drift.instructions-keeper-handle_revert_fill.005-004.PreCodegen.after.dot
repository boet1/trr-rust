digraph Mir_0_9163 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn keeper::handle_revert_fill(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::keeper::RevertFill&lt;ReErased&gt;&gt;) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _2: ();<br align="left"/>let mut _3: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _4: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _5: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _6: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _7: isize;<br align="left"/>let _8: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _9: !;<br align="left"/>let mut _10: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _11: ();<br align="left"/>let _12: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _13: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _14: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _15: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _16: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _17: Closure(DefId(0:9165 ~ drift[d311]::instructions::keeper::handle_revert_fill::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _18: isize;<br align="left"/>let _19: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _20: !;<br align="left"/>let mut _21: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _22: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _23: anchor_lang::prelude::Clock;<br align="left"/>let mut _24: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _25: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _26: isize;<br align="left"/>let _27: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _28: !;<br align="left"/>let mut _29: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _30: anchor_lang::prelude::Clock;<br align="left"/>let _31: ();<br align="left"/>let mut _32: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _33: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _34: bool;<br align="left"/>let mut _35: u64;<br align="left"/>let mut _36: &amp;ReErased state::user::User;<br align="left"/>let mut _37: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _38: u64;<br align="left"/>let mut _39: ();<br align="left"/>let _40: error::ErrorCode;<br align="left"/>let _41: ();<br align="left"/>let mut _42: &amp;ReErased str;<br align="left"/>let _43: &amp;ReErased str;<br align="left"/>let mut _44: &amp;ReErased std::string::String;<br align="left"/>let _45: &amp;ReErased std::string::String;<br align="left"/>let _46: std::string::String;<br align="left"/>let _47: std::string::String;<br align="left"/>let mut _48: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _49: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _50: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _51: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _52: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _53: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _54: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _55: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _56: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _57: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _58: &amp;ReErased error::ErrorCode;<br align="left"/>let _59: &amp;ReErased error::ErrorCode;<br align="left"/>let _60: ();<br align="left"/>let mut _61: &amp;ReErased str;<br align="left"/>let _62: &amp;ReErased str;<br align="left"/>let mut _63: &amp;ReErased std::string::String;<br align="left"/>let _64: &amp;ReErased std::string::String;<br align="left"/>let _65: std::string::String;<br align="left"/>let _66: std::string::String;<br align="left"/>let mut _67: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _68: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _69: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _70: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _71: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _72: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _73: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _74: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _75: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _76: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _77: &amp;ReErased u64;<br align="left"/>let _78: &amp;ReErased u64;<br align="left"/>let _79: &amp;ReErased state::user::User;<br align="left"/>let mut _80: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _81: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _82: &amp;ReErased u64;<br align="left"/>let _83: &amp;ReErased u64;<br align="left"/>let mut _84: error::ErrorCode;<br align="left"/>let mut _85: isize;<br align="left"/>let _86: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _87: !;<br align="left"/>let mut _88: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _89: ();<br align="left"/>let mut _90: ();<br align="left"/>let mut _91: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _92: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _93: &amp;ReErased mut instructions::keeper::RevertFill&lt;ReErased&gt;;<br align="left"/>let mut _94: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _95: &amp;ReErased mut instructions::keeper::RevertFill&lt;ReErased&gt;;<br align="left"/>let mut _96: isize;<br align="left"/>let mut _97: isize;<br align="left"/>let mut _98: isize;<br align="left"/>let mut _99: isize;<br align="left"/>let mut _100: isize;<br align="left"/>let mut _101: isize;<br align="left"/>let mut _102: isize;<br align="left"/>let mut _103: isize;<br align="left"/>let mut _104: isize;<br align="left"/>let mut _105: isize;<br align="left"/>let mut _106: isize;<br align="left"/>let mut _107: isize;<br align="left"/>let mut _108: isize;<br align="left"/>let mut _109: isize;<br align="left"/>let mut _110: isize;<br align="left"/>let mut _111: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug residual =&gt; _8;<br align="left"/>debug val =&gt; _11;<br align="left"/>debug filler =&gt; _12;<br align="left"/>debug residual =&gt; _19;<br align="left"/>debug val =&gt; _22;<br align="left"/>debug clock =&gt; _23;<br align="left"/>debug residual =&gt; _27;<br align="left"/>debug val =&gt; _30;<br align="left"/>debug error_code =&gt; _40;<br align="left"/>debug res =&gt; _47;<br align="left"/>debug res =&gt; _66;<br align="left"/>debug residual =&gt; _86;<br align="left"/>debug val =&gt; _89;<br align="left"/>>;
    bb0__0_9163 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_93 = deref_copy (_1.1: &amp;mut instructions::keeper::RevertFill&lt;'_&gt;)<br/>_6 = &amp;((*_93).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_94 = deref_copy (*_6)<br/>_111 = (((_94.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_5 = &amp;(*_111)<br/></td></tr><tr><td align="left">_4 = constraints::fill_not_paused(move _5)</td></tr></table>>];
    bb1__0_9163 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">_3 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _4)</td></tr></table>>];
    bb2__0_9163 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>_7 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _7)</td></tr></table>>];
    bb3__0_9163 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = ((_3 as Continue).0: ())<br/>_2 = _11<br/>StorageDead(_11)<br/>_96 = discriminant(_3)<br/>StorageDead(_6)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_95 = deref_copy (_1.1: &amp;mut instructions::keeper::RevertFill&lt;'_&gt;)<br/>_16 = &amp;((*_95).2: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_15 = anchor_lang::prelude::AccountLoader::&lt;'_, User&gt;::load_mut(move _16)</td></tr></table>>];
    bb4__0_9163 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_9163 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/>_8 = move ((_3 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_10)<br/>_10 = move _8<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _10)</td></tr></table>>];
    bb6__0_9163 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_8)<br/>_106 = discriminant(_3)<br/>StorageDead(_6)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_9163 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageLive(_17)<br/>_17 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_14 = std::result::Result::&lt;RefMut&lt;'_, User&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _15, move _17)</td></tr></table>>];
    bb8__0_9163 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">_13 = &lt;std::result::Result&lt;RefMut&lt;'_, User&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _14)</td></tr></table>>];
    bb9__0_9163 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>_18 = discriminant(_13)<br/></td></tr><tr><td align="left">switchInt(move _18)</td></tr></table>>];
    bb10__0_9163 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_22)<br/>_22 = move ((_13 as Continue).0: std::cell::RefMut&lt;'_, state::user::User&gt;)<br/>_12 = move _22<br/>StorageDead(_22)<br/>_100 = discriminant(_13)<br/>StorageDead(_13)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/></td></tr><tr><td align="left">_25 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb11__0_9163 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_19)<br/>_19 = ((_13 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_21)<br/>_21 = _19<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _21)</td></tr></table>>];
    bb12__0_9163 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_19)<br/>_98 = discriminant(_13)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_9163 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left">_24 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _25)</td></tr></table>>];
    bb14__0_9163 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>_26 = discriminant(_24)<br/></td></tr><tr><td align="left">switchInt(move _26)</td></tr></table>>];
    bb15__0_9163 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_30)<br/>_30 = move ((_24 as Continue).0: anchor_lang::prelude::Clock)<br/>_23 = move _30<br/>StorageDead(_30)<br/>_102 = discriminant(_24)<br/>StorageDead(_24)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>_37 = &amp;_12<br/></td></tr><tr><td align="left">_36 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _37)</td></tr></table>>];
    bb16__0_9163 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_27)<br/>_27 = move ((_24 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_29)<br/>_29 = move _27<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _29)</td></tr></table>>];
    bb17__0_9163 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_27)<br/>_104 = discriminant(_24)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_9163 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>_35 = ((*_36).14: u64)<br/>StorageLive(_38)<br/>_38 = (_23.0: u64)<br/>_34 = Eq(move _35, move _38)<br/></td></tr><tr><td align="left">switchInt(move _34)</td></tr></table>>];
    bb19__0_9163 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_36)<br/>StorageDead(_35)<br/>StorageLive(_39)<br/>_39 = ()<br/>_33 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _39)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_9163 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_36)<br/>StorageDead(_35)<br/>StorageLive(_40)<br/>_40 = error::ErrorCode::RevertFill<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>_92 = const _<br/>_51 = &amp;(*_92)<br/>_50 = &amp;(*_51)<br/>_49 = move _50 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_50)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>_59 = &amp;_40<br/>_58 = &amp;(*_59)<br/></td></tr><tr><td align="left">_57 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _58)</td></tr></table>>];
    bb21__0_9163 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>_56 = [move _57]<br/>StorageDead(_57)<br/>_55 = &amp;_56<br/>_54 = &amp;(*_55)<br/>_53 = move _54 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">_48 = Arguments::&lt;'_&gt;::new_v1(move _49, move _53)</td></tr></table>>];
    bb22__0_9163 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">_47 = format(move _48)</td></tr></table>>];
    bb23__0_9163 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageDead(_59)<br/>StorageDead(_56)<br/>StorageDead(_55)<br/>StorageDead(_51)<br/>_46 = move _47<br/>StorageDead(_47)<br/>_45 = &amp;_46<br/>_44 = &amp;(*_45)<br/></td></tr><tr><td align="left">_43 = &lt;String as Deref&gt;::deref(move _44)</td></tr></table>>];
    bb24__0_9163 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">_42 = &amp;(*_43)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">_41 = solana_program::log::sol_log(move _42)</td></tr></table>>];
    bb25__0_9163 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/></td></tr><tr><td align="left">drop(_46)</td></tr></table>>];
    bb26__0_9163 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_45)<br/>StorageDead(_43)<br/>StorageDead(_41)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>_91 = const _<br/>_70 = &amp;(*_91)<br/>_69 = &amp;(*_70)<br/>_68 = move _69 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_69)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>_80 = &amp;_12<br/></td></tr><tr><td align="left">_79 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _80)</td></tr></table>>];
    bb27__0_9163 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>_78 = &amp;((*_79).14: u64)<br/>_77 = &amp;(*_78)<br/></td></tr><tr><td align="left">_76 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _77)</td></tr></table>>];
    bb28__0_9163 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>_83 = &amp;(_23.0: u64)<br/>_82 = &amp;(*_83)<br/></td></tr><tr><td align="left">_81 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _82)</td></tr></table>>];
    bb29__0_9163 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>_75 = [move _76, move _81]<br/>StorageDead(_81)<br/>StorageDead(_76)<br/>_74 = &amp;_75<br/>_73 = &amp;(*_74)<br/>_72 = move _73 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">_67 = Arguments::&lt;'_&gt;::new_v1(move _68, move _72)</td></tr></table>>];
    bb30__0_9163 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_68)<br/></td></tr><tr><td align="left">_66 = format(move _67)</td></tr></table>>];
    bb31__0_9163 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>StorageDead(_83)<br/>StorageDead(_79)<br/>StorageDead(_78)<br/>StorageDead(_75)<br/>StorageDead(_74)<br/>StorageDead(_70)<br/>_65 = move _66<br/>StorageDead(_66)<br/>_64 = &amp;_65<br/>_63 = &amp;(*_64)<br/></td></tr><tr><td align="left">_62 = &lt;String as Deref&gt;::deref(move _63)</td></tr></table>>];
    bb32__0_9163 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">_61 = &amp;(*_62)<br/>StorageDead(_63)<br/></td></tr><tr><td align="left">_60 = solana_program::log::sol_log(move _61)</td></tr></table>>];
    bb33__0_9163 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/></td></tr><tr><td align="left">drop(_65)</td></tr></table>>];
    bb34__0_9163 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageDead(_64)<br/>StorageDead(_62)<br/>StorageDead(_60)<br/>StorageLive(_84)<br/>_84 = _40<br/>_33 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _84)<br/>StorageDead(_84)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_9163 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/></td></tr><tr><td align="left">_32 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _33)</td></tr></table>>];
    bb36__0_9163 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>_85 = discriminant(_32)<br/></td></tr><tr><td align="left">switchInt(move _85)</td></tr></table>>];
    bb37__0_9163 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_89)<br/>_89 = ((_32 as Continue).0: ())<br/>_31 = _89<br/>StorageDead(_89)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/>StorageLive(_90)<br/>_90 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _90)<br/>StorageDead(_90)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">drop(_12)</td></tr></table>>];
    bb38__0_9163 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_86)<br/>_86 = ((_32 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_88)<br/>_88 = _86<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _88)</td></tr></table>>];
    bb39__0_9163 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>StorageDead(_86)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_9163 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_9163 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/></td></tr><tr><td align="left">drop(_12)</td></tr></table>>];
    bb42__0_9163 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_9163 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left">return</td></tr></table>>];
    bb44__0_9163 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">44 (cleanup)</td></tr><tr><td align="left">drop(_65)</td></tr></table>>];
    bb45__0_9163 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">45 (cleanup)</td></tr><tr><td align="left">drop(_46)</td></tr></table>>];
    bb46__0_9163 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">46 (cleanup)</td></tr><tr><td align="left">drop(_12)</td></tr></table>>];
    bb47__0_9163 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">47 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb48__0_9163 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">48 (cleanup)</td></tr><tr><td align="left" balign="left">_108 = discriminant(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_9163 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">49 (cleanup)</td></tr><tr><td align="left" balign="left">_109 = discriminant(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_9163 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">50 (cleanup)</td></tr><tr><td align="left" balign="left">_110 = discriminant(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_9163 -> bb1__0_9163 [label="return"];
    bb1__0_9163 -> bb2__0_9163 [label="return"];
    bb1__0_9163 -> bb47__0_9163 [label="unwind"];
    bb2__0_9163 -> bb3__0_9163 [label="0"];
    bb2__0_9163 -> bb5__0_9163 [label="1"];
    bb2__0_9163 -> bb4__0_9163 [label="otherwise"];
    bb3__0_9163 -> bb7__0_9163 [label="return"];
    bb5__0_9163 -> bb6__0_9163 [label="return"];
    bb5__0_9163 -> bb50__0_9163 [label="unwind"];
    bb6__0_9163 -> bb43__0_9163 [label=""];
    bb7__0_9163 -> bb8__0_9163 [label="return"];
    bb7__0_9163 -> bb47__0_9163 [label="unwind"];
    bb8__0_9163 -> bb9__0_9163 [label="return"];
    bb8__0_9163 -> bb47__0_9163 [label="unwind"];
    bb9__0_9163 -> bb10__0_9163 [label="0"];
    bb9__0_9163 -> bb11__0_9163 [label="1"];
    bb9__0_9163 -> bb4__0_9163 [label="otherwise"];
    bb10__0_9163 -> bb13__0_9163 [label="return"];
    bb10__0_9163 -> bb46__0_9163 [label="unwind"];
    bb11__0_9163 -> bb12__0_9163 [label="return"];
    bb11__0_9163 -> bb49__0_9163 [label="unwind"];
    bb12__0_9163 -> bb42__0_9163 [label=""];
    bb13__0_9163 -> bb14__0_9163 [label="return"];
    bb13__0_9163 -> bb46__0_9163 [label="unwind"];
    bb14__0_9163 -> bb15__0_9163 [label="0"];
    bb14__0_9163 -> bb16__0_9163 [label="1"];
    bb14__0_9163 -> bb4__0_9163 [label="otherwise"];
    bb15__0_9163 -> bb18__0_9163 [label="return"];
    bb15__0_9163 -> bb46__0_9163 [label="unwind"];
    bb16__0_9163 -> bb17__0_9163 [label="return"];
    bb16__0_9163 -> bb48__0_9163 [label="unwind"];
    bb17__0_9163 -> bb41__0_9163 [label=""];
    bb18__0_9163 -> bb20__0_9163 [label="0"];
    bb18__0_9163 -> bb19__0_9163 [label="otherwise"];
    bb19__0_9163 -> bb35__0_9163 [label=""];
    bb20__0_9163 -> bb21__0_9163 [label="return"];
    bb20__0_9163 -> bb46__0_9163 [label="unwind"];
    bb21__0_9163 -> bb22__0_9163 [label="return"];
    bb21__0_9163 -> bb46__0_9163 [label="unwind"];
    bb22__0_9163 -> bb23__0_9163 [label="return"];
    bb22__0_9163 -> bb46__0_9163 [label="unwind"];
    bb23__0_9163 -> bb24__0_9163 [label="return"];
    bb23__0_9163 -> bb45__0_9163 [label="unwind"];
    bb24__0_9163 -> bb25__0_9163 [label="return"];
    bb24__0_9163 -> bb45__0_9163 [label="unwind"];
    bb25__0_9163 -> bb26__0_9163 [label="return"];
    bb25__0_9163 -> bb46__0_9163 [label="unwind"];
    bb26__0_9163 -> bb27__0_9163 [label="return"];
    bb26__0_9163 -> bb46__0_9163 [label="unwind"];
    bb27__0_9163 -> bb28__0_9163 [label="return"];
    bb27__0_9163 -> bb46__0_9163 [label="unwind"];
    bb28__0_9163 -> bb29__0_9163 [label="return"];
    bb28__0_9163 -> bb46__0_9163 [label="unwind"];
    bb29__0_9163 -> bb30__0_9163 [label="return"];
    bb29__0_9163 -> bb46__0_9163 [label="unwind"];
    bb30__0_9163 -> bb31__0_9163 [label="return"];
    bb30__0_9163 -> bb46__0_9163 [label="unwind"];
    bb31__0_9163 -> bb32__0_9163 [label="return"];
    bb31__0_9163 -> bb44__0_9163 [label="unwind"];
    bb32__0_9163 -> bb33__0_9163 [label="return"];
    bb32__0_9163 -> bb44__0_9163 [label="unwind"];
    bb33__0_9163 -> bb34__0_9163 [label="return"];
    bb33__0_9163 -> bb46__0_9163 [label="unwind"];
    bb34__0_9163 -> bb35__0_9163 [label=""];
    bb35__0_9163 -> bb36__0_9163 [label="return"];
    bb35__0_9163 -> bb46__0_9163 [label="unwind"];
    bb36__0_9163 -> bb37__0_9163 [label="0"];
    bb36__0_9163 -> bb38__0_9163 [label="1"];
    bb36__0_9163 -> bb4__0_9163 [label="otherwise"];
    bb37__0_9163 -> bb40__0_9163 [label="return"];
    bb37__0_9163 -> bb47__0_9163 [label="unwind"];
    bb38__0_9163 -> bb39__0_9163 [label="return"];
    bb38__0_9163 -> bb46__0_9163 [label="unwind"];
    bb39__0_9163 -> bb41__0_9163 [label=""];
    bb40__0_9163 -> bb43__0_9163 [label=""];
    bb41__0_9163 -> bb42__0_9163 [label="return"];
    bb41__0_9163 -> bb47__0_9163 [label="unwind"];
    bb42__0_9163 -> bb43__0_9163 [label=""];
    bb44__0_9163 -> bb46__0_9163 [label="return"];
    bb45__0_9163 -> bb46__0_9163 [label="return"];
    bb46__0_9163 -> bb47__0_9163 [label="return"];
    bb48__0_9163 -> bb46__0_9163 [label=""];
    bb49__0_9163 -> bb47__0_9163 [label=""];
    bb50__0_9163 -> bb47__0_9163 [label=""];
}
