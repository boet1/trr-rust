digraph Mir_0_1126 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn admin::handle_update_if_rebalance_config(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::admin::UpdateIfRebalanceConfig&lt;ReErased&gt;&gt;, _2: state::if_rebalance_config::IfRebalanceConfigParams) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let mut _3: std::cell::RefMut&lt;ReErased, state::if_rebalance_config::IfRebalanceConfig&gt;;<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::if_rebalance_config::IfRebalanceConfig&gt;&gt;;<br align="left"/>let mut _5: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::if_rebalance_config::IfRebalanceConfig&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _6: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::if_rebalance_config::IfRebalanceConfig&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _7: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::if_rebalance_config::IfRebalanceConfig&gt;;<br align="left"/>let mut _8: Closure(DefId(0:5660 ~ drift[d311]::instructions::admin::handle_update_if_rebalance_config::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _9: isize;<br align="left"/>let _10: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _11: !;<br align="left"/>let mut _12: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _13: std::cell::RefMut&lt;ReErased, state::if_rebalance_config::IfRebalanceConfig&gt;;<br align="left"/>let mut _14: u64;<br align="left"/>let mut _15: &amp;ReErased mut state::if_rebalance_config::IfRebalanceConfig;<br align="left"/>let mut _16: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::if_rebalance_config::IfRebalanceConfig&gt;;<br align="left"/>let mut _17: u64;<br align="left"/>let mut _18: &amp;ReErased mut state::if_rebalance_config::IfRebalanceConfig;<br align="left"/>let mut _19: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::if_rebalance_config::IfRebalanceConfig&gt;;<br align="left"/>let mut _20: i64;<br align="left"/>let mut _21: &amp;ReErased mut state::if_rebalance_config::IfRebalanceConfig;<br align="left"/>let mut _22: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::if_rebalance_config::IfRebalanceConfig&gt;;<br align="left"/>let mut _23: u16;<br align="left"/>let mut _24: &amp;ReErased mut state::if_rebalance_config::IfRebalanceConfig;<br align="left"/>let mut _25: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::if_rebalance_config::IfRebalanceConfig&gt;;<br align="left"/>let _26: ();<br align="left"/>let mut _27: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _28: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _29: &amp;ReErased state::if_rebalance_config::IfRebalanceConfig;<br align="left"/>let _30: &amp;ReErased state::if_rebalance_config::IfRebalanceConfig;<br align="left"/>let mut _31: &amp;ReErased std::cell::RefMut&lt;ReErased, state::if_rebalance_config::IfRebalanceConfig&gt;;<br align="left"/>let mut _32: isize;<br align="left"/>let _33: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _34: !;<br align="left"/>let mut _35: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _36: ();<br align="left"/>let mut _37: ();<br align="left"/>let mut _38: &amp;ReErased mut instructions::admin::UpdateIfRebalanceConfig&lt;ReErased&gt;;<br align="left"/>let mut _39: isize;<br align="left"/>let mut _40: isize;<br align="left"/>let mut _41: isize;<br align="left"/>let mut _42: isize;<br align="left"/>let mut _43: isize;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug params =&gt; _2;<br align="left"/>debug config =&gt; _3;<br align="left"/>debug residual =&gt; _10;<br align="left"/>debug val =&gt; _13;<br align="left"/>debug residual =&gt; _33;<br align="left"/>debug val =&gt; _36;<br align="left"/>>;
    bb0__0_1126 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_38 = deref_copy (_1.1: &amp;mut instructions::admin::UpdateIfRebalanceConfig&lt;'_&gt;)<br/>_7 = &amp;((*_38).1: anchor_lang::prelude::AccountLoader&lt;'_, state::if_rebalance_config::IfRebalanceConfig&gt;)<br/></td></tr><tr><td align="left">_6 = anchor_lang::prelude::AccountLoader::&lt;'_, IfRebalanceConfig&gt;::load_mut(move _7)</td></tr></table>>];
    bb1__0_1126 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageLive(_8)<br/>_8 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_5 = std::result::Result::&lt;RefMut&lt;'_, IfRebalanceConfig&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _6, move _8)</td></tr></table>>];
    bb2__0_1126 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;RefMut&lt;'_, IfRebalanceConfig&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb3__0_1126 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_9 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _9)</td></tr></table>>];
    bb4__0_1126 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = move ((_4 as Continue).0: std::cell::RefMut&lt;'_, state::if_rebalance_config::IfRebalanceConfig&gt;)<br/>_3 = move _13<br/>StorageDead(_13)<br/>_41 = discriminant(_4)<br/>StorageDead(_4)<br/>StorageLive(_14)<br/>_14 = (_2.0: u64)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_16 = &amp;mut _3<br/></td></tr><tr><td align="left">_15 = &lt;RefMut&lt;'_, IfRebalanceConfig&gt; as DerefMut&gt;::deref_mut(move _16)</td></tr></table>>];
    bb5__0_1126 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_1126 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>_10 = ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_12)<br/>_12 = _10<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _12)</td></tr></table>>];
    bb7__0_1126 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_10)<br/>_39 = discriminant(_4)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_1126 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>((*_15).1: u64) = move _14<br/>StorageDead(_14)<br/>StorageDead(_15)<br/>StorageLive(_17)<br/>_17 = (_2.1: u64)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_19 = &amp;mut _3<br/></td></tr><tr><td align="left">_18 = &lt;RefMut&lt;'_, IfRebalanceConfig&gt; as DerefMut&gt;::deref_mut(move _19)</td></tr></table>>];
    bb9__0_1126 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>((*_18).8: u64) = move _17<br/>StorageDead(_17)<br/>StorageDead(_18)<br/>StorageLive(_20)<br/>_20 = (_2.2: i64)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_22 = &amp;mut _3<br/></td></tr><tr><td align="left">_21 = &lt;RefMut&lt;'_, IfRebalanceConfig&gt; as DerefMut&gt;::deref_mut(move _22)</td></tr></table>>];
    bb10__0_1126 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>((*_21).9: i64) = move _20<br/>StorageDead(_20)<br/>StorageDead(_21)<br/>StorageLive(_23)<br/>_23 = (_2.5: u16)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>_25 = &amp;mut _3<br/></td></tr><tr><td align="left">_24 = &lt;RefMut&lt;'_, IfRebalanceConfig&gt; as DerefMut&gt;::deref_mut(move _25)</td></tr></table>>];
    bb11__0_1126 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>((*_24).12: u16) = move _23<br/>StorageDead(_23)<br/>StorageDead(_24)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>_31 = &amp;_3<br/></td></tr><tr><td align="left">_30 = &lt;RefMut&lt;'_, IfRebalanceConfig&gt; as Deref&gt;::deref(move _31)</td></tr></table>>];
    bb12__0_1126 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">_29 = &amp;(*_30)<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">_28 = IfRebalanceConfig::validate(move _29)</td></tr></table>>];
    bb13__0_1126 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/></td></tr><tr><td align="left">_27 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _28)</td></tr></table>>];
    bb14__0_1126 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>_32 = discriminant(_27)<br/></td></tr><tr><td align="left">switchInt(move _32)</td></tr></table>>];
    bb15__0_1126 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_36)<br/>_36 = ((_27 as Continue).0: ())<br/>_26 = _36<br/>StorageDead(_36)<br/>StorageDead(_30)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>StorageLive(_37)<br/>_37 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _37)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb16__0_1126 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_33)<br/>_33 = ((_27 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_35)<br/>_35 = _33<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _35)</td></tr></table>>];
    bb17__0_1126 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_33)<br/>StorageDead(_30)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb18__0_1126 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_1126 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_1126 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left">return</td></tr></table>>];
    bb21__0_1126 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">21 (cleanup)</td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb22__0_1126 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">22 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb23__0_1126 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">23 (cleanup)</td></tr><tr><td align="left" balign="left">_43 = discriminant(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_1126 -> bb1__0_1126 [label="return"];
    bb1__0_1126 -> bb2__0_1126 [label="return"];
    bb1__0_1126 -> bb22__0_1126 [label="unwind"];
    bb2__0_1126 -> bb3__0_1126 [label="return"];
    bb2__0_1126 -> bb22__0_1126 [label="unwind"];
    bb3__0_1126 -> bb4__0_1126 [label="0"];
    bb3__0_1126 -> bb6__0_1126 [label="1"];
    bb3__0_1126 -> bb5__0_1126 [label="otherwise"];
    bb4__0_1126 -> bb8__0_1126 [label="return"];
    bb4__0_1126 -> bb21__0_1126 [label="unwind"];
    bb6__0_1126 -> bb7__0_1126 [label="return"];
    bb6__0_1126 -> bb23__0_1126 [label="unwind"];
    bb7__0_1126 -> bb19__0_1126 [label=""];
    bb8__0_1126 -> bb9__0_1126 [label="return"];
    bb8__0_1126 -> bb21__0_1126 [label="unwind"];
    bb9__0_1126 -> bb10__0_1126 [label="return"];
    bb9__0_1126 -> bb21__0_1126 [label="unwind"];
    bb10__0_1126 -> bb11__0_1126 [label="return"];
    bb10__0_1126 -> bb21__0_1126 [label="unwind"];
    bb11__0_1126 -> bb12__0_1126 [label="return"];
    bb11__0_1126 -> bb21__0_1126 [label="unwind"];
    bb12__0_1126 -> bb13__0_1126 [label="return"];
    bb12__0_1126 -> bb21__0_1126 [label="unwind"];
    bb13__0_1126 -> bb14__0_1126 [label="return"];
    bb13__0_1126 -> bb21__0_1126 [label="unwind"];
    bb14__0_1126 -> bb15__0_1126 [label="0"];
    bb14__0_1126 -> bb16__0_1126 [label="1"];
    bb14__0_1126 -> bb5__0_1126 [label="otherwise"];
    bb15__0_1126 -> bb18__0_1126 [label="return"];
    bb15__0_1126 -> bb22__0_1126 [label="unwind"];
    bb16__0_1126 -> bb17__0_1126 [label="return"];
    bb16__0_1126 -> bb21__0_1126 [label="unwind"];
    bb17__0_1126 -> bb19__0_1126 [label="return"];
    bb17__0_1126 -> bb22__0_1126 [label="unwind"];
    bb18__0_1126 -> bb20__0_1126 [label=""];
    bb19__0_1126 -> bb20__0_1126 [label=""];
    bb21__0_1126 -> bb22__0_1126 [label="return"];
    bb23__0_1126 -> bb22__0_1126 [label=""];
}
