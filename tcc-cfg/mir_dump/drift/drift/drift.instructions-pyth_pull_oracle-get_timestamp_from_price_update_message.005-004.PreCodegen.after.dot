digraph Mir_0_1515 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn get_timestamp_from_price_update_message(_1: &amp;ReErased pythnet_sdk::wire::PrefixedVec&lt;u16, u8&gt;) -&gt; std::result::Result&lt;i64, anchor_lang::error::Error&gt;<br align="left"/>let _2: pythnet_sdk::messages::Message;<br align="left"/>let mut _3: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, pythnet_sdk::messages::Message&gt;;<br align="left"/>let mut _4: std::result::Result&lt;pythnet_sdk::messages::Message, error::ErrorCode&gt;;<br align="left"/>let mut _5: std::result::Result&lt;pythnet_sdk::messages::Message, pythnet_sdk::wire::DeserializerError&gt;;<br align="left"/>let mut _6: &amp;ReErased [u8];<br align="left"/>let _7: &amp;ReErased [u8];<br align="left"/>let mut _8: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _9: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _10: &amp;ReErased pythnet_sdk::wire::PrefixedVec&lt;u16, u8&gt;;<br align="left"/>let mut _11: Closure(DefId(0:1516 ~ drift[d311]::instructions::pyth_pull_oracle::get_timestamp_from_price_update_message::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((pythnet_sdk::wire::DeserializerError,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _12: isize;<br align="left"/>let _13: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _14: !;<br align="left"/>let mut _15: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _16: pythnet_sdk::messages::Message;<br align="left"/>let _17: i64;<br align="left"/>let mut _18: isize;<br align="left"/>let _19: pyth_solana_receiver_sdk::price_update::PriceFeedMessage;<br align="left"/>let mut _20: !;<br align="left"/>let mut _21: anchor_lang::error::Error;<br align="left"/>let mut _22: error::ErrorCode;<br align="left"/>let mut _23: i64;<br align="left"/>debug update_message =&gt; _1;<br align="left"/>debug message =&gt; _2;<br align="left"/>debug residual =&gt; _13;<br align="left"/>debug val =&gt; _16;<br align="left"/>debug next_timestamp =&gt; _17;<br align="left"/>debug price_feed_message =&gt; _19;<br align="left"/>>;
    bb0__0_1515 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = &amp;(*_1)<br/></td></tr><tr><td align="left">_9 = &lt;PrefixedVec&lt;u16, u8&gt; as AsRef&lt;Vec&lt;u8&gt;&gt;&gt;::as_ref(move _10)</td></tr></table>>];
    bb1__0_1515 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_8 = &amp;(*_9)<br/></td></tr><tr><td align="left">_7 = &lt;Vec&lt;u8&gt; as Deref&gt;::deref(move _8)</td></tr></table>>];
    bb2__0_1515 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">_6 = &amp;(*_7)<br/>StorageDead(_10)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">_5 = from_slice::&lt;'_, BigEndian, pythnet_sdk::messages::Message&gt;(move _6)</td></tr></table>>];
    bb3__0_1515 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageLive(_11)<br/>_11 = {closure@programs/drift/src/instructions/pyth_pull_oracle.rs:216:18: 216:21}<br/></td></tr><tr><td align="left">_4 = std::result::Result::&lt;pythnet_sdk::messages::Message, DeserializerError&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/instructions/pyth_pull_oracle.rs:216:18: 216:21}&gt;(move _5, move _11)</td></tr></table>>];
    bb4__0_1515 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">_3 = &lt;std::result::Result&lt;pythnet_sdk::messages::Message, error::ErrorCode&gt; as Try&gt;::branch(move _4)</td></tr></table>>];
    bb5__0_1515 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>_12 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _12)</td></tr></table>>];
    bb6__0_1515 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_16)<br/>_16 = ((_3 as Continue).0: pythnet_sdk::messages::Message)<br/>_2 = _16<br/>StorageDead(_16)<br/>StorageDead(_9)<br/>StorageDead(_7)<br/>StorageDead(_3)<br/>StorageLive(_17)<br/>_18 = discriminant(_2)<br/></td></tr><tr><td align="left">switchInt(move _18)</td></tr></table>>];
    bb7__0_1515 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb8__0_1515 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = ((_3 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_15)<br/>_15 = _13<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _15)</td></tr></table>>];
    bb9__0_1515 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_13)<br/>StorageDead(_9)<br/>StorageDead(_7)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_1515 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>StorageLive(_22)<br/>_22 = error::ErrorCode::OracleUnsupportedMessageType<br/></td></tr><tr><td align="left">_21 = &lt;error::ErrorCode as Into&lt;anchor_lang::error::Error&gt;&gt;::into(move _22)</td></tr></table>>];
    bb11__0_1515 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_19)<br/>_19 = ((_2 as PriceFeedMessage).0: pyth_solana_receiver_sdk::price_update::PriceFeedMessage)<br/>_17 = (_19.4: i64)<br/>StorageDead(_19)<br/>StorageLive(_23)<br/>_23 = _17<br/>_0 = std::result::Result::&lt;i64, anchor_lang::error::Error&gt;::Ok(move _23)<br/>StorageDead(_23)<br/>StorageDead(_17)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_1515 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>_0 = std::result::Result::&lt;i64, anchor_lang::error::Error&gt;::Err(move _21)<br/>StorageDead(_21)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_1515 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_1515 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left">return</td></tr></table>>];
    bb15__0_1515 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">15 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_1515 -> bb1__0_1515 [label="return"];
    bb1__0_1515 -> bb2__0_1515 [label="return"];
    bb2__0_1515 -> bb3__0_1515 [label="return"];
    bb3__0_1515 -> bb4__0_1515 [label="return"];
    bb3__0_1515 -> bb15__0_1515 [label="unwind"];
    bb4__0_1515 -> bb5__0_1515 [label="return"];
    bb5__0_1515 -> bb6__0_1515 [label="0"];
    bb5__0_1515 -> bb8__0_1515 [label="1"];
    bb5__0_1515 -> bb7__0_1515 [label="otherwise"];
    bb6__0_1515 -> bb11__0_1515 [label="0"];
    bb6__0_1515 -> bb10__0_1515 [label="1"];
    bb6__0_1515 -> bb7__0_1515 [label="otherwise"];
    bb8__0_1515 -> bb9__0_1515 [label="return"];
    bb9__0_1515 -> bb13__0_1515 [label=""];
    bb10__0_1515 -> bb12__0_1515 [label="return"];
    bb11__0_1515 -> bb14__0_1515 [label=""];
    bb12__0_1515 -> bb13__0_1515 [label=""];
    bb13__0_1515 -> bb14__0_1515 [label=""];
}
