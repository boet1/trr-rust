digraph Mir_0_5476 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn admin::handle_update_spot_market_pool_id(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::admin::AdminUpdateSpotMarket&lt;ReErased&gt;&gt;, _2: u8) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _5: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _6: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _7: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _8: isize;<br align="left"/>let _9: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _10: !;<br align="left"/>let mut _11: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _12: ();<br align="left"/>let mut _13: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _14: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _15: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _16: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _17: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _18: Closure(DefId(0:5477 ~ drift[d311]::instructions::admin::handle_update_spot_market_pool_id::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _19: isize;<br align="left"/>let _20: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _21: !;<br align="left"/>let mut _22: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _23: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _24: ();<br align="left"/>let mut _25: &amp;ReErased str;<br align="left"/>let _26: &amp;ReErased str;<br align="left"/>let mut _27: &amp;ReErased std::string::String;<br align="left"/>let _28: &amp;ReErased std::string::String;<br align="left"/>let _29: std::string::String;<br align="left"/>let _30: std::string::String;<br align="left"/>let mut _31: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _32: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _33: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _34: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _35: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _36: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _37: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _38: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _39: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _40: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _41: &amp;ReErased u16;<br align="left"/>let _42: &amp;ReErased u16;<br align="left"/>let _43: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _44: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _45: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _46: &amp;ReErased u8;<br align="left"/>let _47: &amp;ReErased u8;<br align="left"/>let _48: ();<br align="left"/>let mut _49: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _50: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _51: bool;<br align="left"/>let mut _52: &amp;ReErased state::perp_market::MarketStatus;<br align="left"/>let _53: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _54: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _55: &amp;ReErased state::perp_market::MarketStatus;<br align="left"/>let _56: state::perp_market::MarketStatus;<br align="left"/>let mut _57: ();<br align="left"/>let _58: error::ErrorCode;<br align="left"/>let _59: ();<br align="left"/>let mut _60: &amp;ReErased str;<br align="left"/>let _61: &amp;ReErased str;<br align="left"/>let mut _62: &amp;ReErased std::string::String;<br align="left"/>let _63: &amp;ReErased std::string::String;<br align="left"/>let _64: std::string::String;<br align="left"/>let _65: std::string::String;<br align="left"/>let mut _66: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _67: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _68: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _69: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _70: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _71: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _72: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _73: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _74: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _75: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _76: &amp;ReErased error::ErrorCode;<br align="left"/>let _77: &amp;ReErased error::ErrorCode;<br align="left"/>let _78: ();<br align="left"/>let mut _79: &amp;ReErased str;<br align="left"/>let _80: &amp;ReErased str;<br align="left"/>let mut _81: error::ErrorCode;<br align="left"/>let mut _82: isize;<br align="left"/>let _83: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _84: !;<br align="left"/>let mut _85: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _86: ();<br align="left"/>let mut _87: u8;<br align="left"/>let mut _88: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _89: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _90: ();<br align="left"/>let mut _91: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _92: &amp;ReErased state::perp_market::MarketStatus;<br align="left"/>let mut _93: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _94: &amp;ReErased mut instructions::admin::AdminUpdateSpotMarket&lt;ReErased&gt;;<br align="left"/>let mut _95: &amp;ReErased mut instructions::admin::AdminUpdateSpotMarket&lt;ReErased&gt;;<br align="left"/>let mut _96: isize;<br align="left"/>let mut _97: isize;<br align="left"/>let mut _98: isize;<br align="left"/>let mut _99: isize;<br align="left"/>let mut _100: isize;<br align="left"/>let mut _101: isize;<br align="left"/>let mut _102: isize;<br align="left"/>let mut _103: isize;<br align="left"/>let mut _104: isize;<br align="left"/>let mut _105: isize;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug pool_id =&gt; _2;<br align="left"/>debug residual =&gt; _9;<br align="left"/>debug val =&gt; _12;<br align="left"/>debug spot_market =&gt; _13;<br align="left"/>debug residual =&gt; _20;<br align="left"/>debug val =&gt; _23;<br align="left"/>debug res =&gt; _30;<br align="left"/>debug error_code =&gt; _58;<br align="left"/>debug res =&gt; _65;<br align="left"/>debug residual =&gt; _83;<br align="left"/>debug val =&gt; _86;<br align="left"/>>;
    bb0__0_5476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_94 = deref_copy (_1.1: &amp;mut instructions::admin::AdminUpdateSpotMarket&lt;'_&gt;)<br/>_7 = &amp;((*_94).2: anchor_lang::prelude::AccountLoader&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_6 = &amp;(*_7)<br/></td></tr><tr><td align="left">_5 = constraints::spot_market_valid(move _6)</td></tr></table>>];
    bb1__0_5476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb2__0_5476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_8 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb3__0_5476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_4 as Continue).0: ())<br/>_3 = _12<br/>StorageDead(_12)<br/>_96 = discriminant(_4)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_95 = deref_copy (_1.1: &amp;mut instructions::admin::AdminUpdateSpotMarket&lt;'_&gt;)<br/>_17 = &amp;((*_95).2: anchor_lang::prelude::AccountLoader&lt;'_, state::spot_market::SpotMarket&gt;)<br/></td></tr><tr><td align="left">_16 = anchor_lang::prelude::AccountLoader::&lt;'_, SpotMarket&gt;::load_mut(move _17)</td></tr></table>>];
    bb4__0_5476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_5476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>_9 = move ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_11)<br/>_11 = move _9<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _11)</td></tr></table>>];
    bb6__0_5476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_9)<br/>_102 = discriminant(_4)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_5476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageLive(_18)<br/>_18 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_15 = std::result::Result::&lt;RefMut&lt;'_, SpotMarket&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _16, move _18)</td></tr></table>>];
    bb8__0_5476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">_14 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _15)</td></tr></table>>];
    bb9__0_5476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>_19 = discriminant(_14)<br/></td></tr><tr><td align="left">switchInt(move _19)</td></tr></table>>];
    bb10__0_5476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_23)<br/>_23 = move ((_14 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_13 = move _23<br/>StorageDead(_23)<br/>_100 = discriminant(_14)<br/>StorageDead(_14)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>_93 = const _<br/>_34 = &amp;(*_93)<br/>_33 = &amp;(*_34)<br/>_32 = move _33 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_33)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>_44 = &amp;_13<br/></td></tr><tr><td align="left">_43 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _44)</td></tr></table>>];
    bb11__0_5476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_20)<br/>_20 = ((_14 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_22)<br/>_22 = _20<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _22)</td></tr></table>>];
    bb12__0_5476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_20)<br/>_98 = discriminant(_14)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_5476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>_42 = &amp;((*_43).42: u16)<br/>_41 = &amp;(*_42)<br/></td></tr><tr><td align="left">_40 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _41)</td></tr></table>>];
    bb14__0_5476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>_47 = &amp;_2<br/>_46 = &amp;(*_47)<br/></td></tr><tr><td align="left">_45 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u8&gt;(move _46)</td></tr></table>>];
    bb15__0_5476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>_39 = [move _40, move _45]<br/>StorageDead(_45)<br/>StorageDead(_40)<br/>_38 = &amp;_39<br/>_37 = &amp;(*_38)<br/>_36 = move _37 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">_31 = Arguments::&lt;'_&gt;::new_v1(move _32, move _36)</td></tr></table>>];
    bb16__0_5476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">_30 = format(move _31)</td></tr></table>>];
    bb17__0_5476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_47)<br/>StorageDead(_43)<br/>StorageDead(_42)<br/>StorageDead(_39)<br/>StorageDead(_38)<br/>StorageDead(_34)<br/>_29 = move _30<br/>StorageDead(_30)<br/>_28 = &amp;_29<br/>_27 = &amp;(*_28)<br/></td></tr><tr><td align="left">_26 = &lt;String as Deref&gt;::deref(move _27)</td></tr></table>>];
    bb18__0_5476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">_25 = &amp;(*_26)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">_24 = solana_program::log::sol_log(move _25)</td></tr></table>>];
    bb19__0_5476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/></td></tr><tr><td align="left">drop(_29)</td></tr></table>>];
    bb20__0_5476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_28)<br/>StorageDead(_26)<br/>StorageDead(_24)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>_54 = &amp;_13<br/></td></tr><tr><td align="left">_53 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _54)</td></tr></table>>];
    bb21__0_5476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>_52 = &amp;((*_53).45: state::perp_market::MarketStatus)<br/>StorageLive(_55)<br/>_92 = const _<br/>_55 = &amp;(*_92)<br/></td></tr><tr><td align="left">_51 = &lt;state::perp_market::MarketStatus as PartialEq&gt;::eq(move _52, move _55)</td></tr></table>>];
    bb22__0_5476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left">switchInt(move _51)</td></tr></table>>];
    bb23__0_5476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_53)<br/>StorageDead(_52)<br/>StorageLive(_57)<br/>_57 = ()<br/>_50 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _57)<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_5476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_53)<br/>StorageDead(_52)<br/>StorageLive(_58)<br/>_58 = error::ErrorCode::DefaultError<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>_91 = const _<br/>_69 = &amp;(*_91)<br/>_68 = &amp;(*_69)<br/>_67 = move _68 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_68)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>_77 = &amp;_58<br/>_76 = &amp;(*_77)<br/></td></tr><tr><td align="left">_75 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _76)</td></tr></table>>];
    bb25__0_5476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>_74 = [move _75]<br/>StorageDead(_75)<br/>_73 = &amp;_74<br/>_72 = &amp;(*_73)<br/>_71 = move _72 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_72)<br/></td></tr><tr><td align="left">_66 = Arguments::&lt;'_&gt;::new_v1(move _67, move _71)</td></tr></table>>];
    bb26__0_5476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">_65 = format(move _66)</td></tr></table>>];
    bb27__0_5476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageDead(_77)<br/>StorageDead(_74)<br/>StorageDead(_73)<br/>StorageDead(_69)<br/>_64 = move _65<br/>StorageDead(_65)<br/>_63 = &amp;_64<br/>_62 = &amp;(*_63)<br/></td></tr><tr><td align="left">_61 = &lt;String as Deref&gt;::deref(move _62)</td></tr></table>>];
    bb28__0_5476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">_60 = &amp;(*_61)<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">_59 = solana_program::log::sol_log(move _60)</td></tr></table>>];
    bb29__0_5476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/></td></tr><tr><td align="left">drop(_64)</td></tr></table>>];
    bb30__0_5476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageDead(_63)<br/>StorageDead(_61)<br/>StorageDead(_59)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>_80 = const &quot;Market must be just initialized to update pool&quot;<br/>_79 = &amp;(*_80)<br/></td></tr><tr><td align="left">_78 = solana_program::log::sol_log(move _79)</td></tr></table>>];
    bb31__0_5476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageDead(_80)<br/>StorageDead(_78)<br/>StorageLive(_81)<br/>_81 = _58<br/>_50 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _81)<br/>StorageDead(_81)<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_5476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/></td></tr><tr><td align="left">_49 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _50)</td></tr></table>>];
    bb33__0_5476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>_82 = discriminant(_49)<br/></td></tr><tr><td align="left">switchInt(move _82)</td></tr></table>>];
    bb34__0_5476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_86)<br/>_86 = ((_49 as Continue).0: ())<br/>_48 = _86<br/>StorageDead(_86)<br/>StorageDead(_49)<br/>StorageDead(_48)<br/>StorageLive(_87)<br/>_87 = _2<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>_89 = &amp;mut _13<br/></td></tr><tr><td align="left">_88 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _89)</td></tr></table>>];
    bb35__0_5476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_83)<br/>_83 = ((_49 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_85)<br/>_85 = _83<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _85)</td></tr></table>>];
    bb36__0_5476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>StorageDead(_83)<br/>StorageDead(_49)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">drop(_13)</td></tr></table>>];
    bb37__0_5476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>((*_88).62: u8) = move _87<br/>StorageDead(_87)<br/>StorageDead(_88)<br/>StorageLive(_90)<br/>_90 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _90)<br/>StorageDead(_90)<br/></td></tr><tr><td align="left">drop(_13)</td></tr></table>>];
    bb38__0_5476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_5476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_5476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left">return</td></tr></table>>];
    bb41__0_5476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">41 (cleanup)</td></tr><tr><td align="left">drop(_64)</td></tr></table>>];
    bb42__0_5476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">42 (cleanup)</td></tr><tr><td align="left">drop(_29)</td></tr></table>>];
    bb43__0_5476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">43 (cleanup)</td></tr><tr><td align="left">drop(_13)</td></tr></table>>];
    bb44__0_5476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">44 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb45__0_5476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">45 (cleanup)</td></tr><tr><td align="left" balign="left">_104 = discriminant(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_5476 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">46 (cleanup)</td></tr><tr><td align="left" balign="left">_105 = discriminant(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_5476 -> bb1__0_5476 [label="return"];
    bb1__0_5476 -> bb2__0_5476 [label="return"];
    bb1__0_5476 -> bb44__0_5476 [label="unwind"];
    bb2__0_5476 -> bb3__0_5476 [label="0"];
    bb2__0_5476 -> bb5__0_5476 [label="1"];
    bb2__0_5476 -> bb4__0_5476 [label="otherwise"];
    bb3__0_5476 -> bb7__0_5476 [label="return"];
    bb5__0_5476 -> bb6__0_5476 [label="return"];
    bb5__0_5476 -> bb46__0_5476 [label="unwind"];
    bb6__0_5476 -> bb40__0_5476 [label=""];
    bb7__0_5476 -> bb8__0_5476 [label="return"];
    bb7__0_5476 -> bb44__0_5476 [label="unwind"];
    bb8__0_5476 -> bb9__0_5476 [label="return"];
    bb8__0_5476 -> bb44__0_5476 [label="unwind"];
    bb9__0_5476 -> bb10__0_5476 [label="0"];
    bb9__0_5476 -> bb11__0_5476 [label="1"];
    bb9__0_5476 -> bb4__0_5476 [label="otherwise"];
    bb10__0_5476 -> bb13__0_5476 [label="return"];
    bb10__0_5476 -> bb43__0_5476 [label="unwind"];
    bb11__0_5476 -> bb12__0_5476 [label="return"];
    bb11__0_5476 -> bb45__0_5476 [label="unwind"];
    bb12__0_5476 -> bb39__0_5476 [label=""];
    bb13__0_5476 -> bb14__0_5476 [label="return"];
    bb13__0_5476 -> bb43__0_5476 [label="unwind"];
    bb14__0_5476 -> bb15__0_5476 [label="return"];
    bb14__0_5476 -> bb43__0_5476 [label="unwind"];
    bb15__0_5476 -> bb16__0_5476 [label="return"];
    bb15__0_5476 -> bb43__0_5476 [label="unwind"];
    bb16__0_5476 -> bb17__0_5476 [label="return"];
    bb16__0_5476 -> bb43__0_5476 [label="unwind"];
    bb17__0_5476 -> bb18__0_5476 [label="return"];
    bb17__0_5476 -> bb42__0_5476 [label="unwind"];
    bb18__0_5476 -> bb19__0_5476 [label="return"];
    bb18__0_5476 -> bb42__0_5476 [label="unwind"];
    bb19__0_5476 -> bb20__0_5476 [label="return"];
    bb19__0_5476 -> bb43__0_5476 [label="unwind"];
    bb20__0_5476 -> bb21__0_5476 [label="return"];
    bb20__0_5476 -> bb43__0_5476 [label="unwind"];
    bb21__0_5476 -> bb22__0_5476 [label="return"];
    bb21__0_5476 -> bb43__0_5476 [label="unwind"];
    bb22__0_5476 -> bb24__0_5476 [label="0"];
    bb22__0_5476 -> bb23__0_5476 [label="otherwise"];
    bb23__0_5476 -> bb32__0_5476 [label=""];
    bb24__0_5476 -> bb25__0_5476 [label="return"];
    bb24__0_5476 -> bb43__0_5476 [label="unwind"];
    bb25__0_5476 -> bb26__0_5476 [label="return"];
    bb25__0_5476 -> bb43__0_5476 [label="unwind"];
    bb26__0_5476 -> bb27__0_5476 [label="return"];
    bb26__0_5476 -> bb43__0_5476 [label="unwind"];
    bb27__0_5476 -> bb28__0_5476 [label="return"];
    bb27__0_5476 -> bb41__0_5476 [label="unwind"];
    bb28__0_5476 -> bb29__0_5476 [label="return"];
    bb28__0_5476 -> bb41__0_5476 [label="unwind"];
    bb29__0_5476 -> bb30__0_5476 [label="return"];
    bb29__0_5476 -> bb43__0_5476 [label="unwind"];
    bb30__0_5476 -> bb31__0_5476 [label="return"];
    bb30__0_5476 -> bb43__0_5476 [label="unwind"];
    bb31__0_5476 -> bb32__0_5476 [label=""];
    bb32__0_5476 -> bb33__0_5476 [label="return"];
    bb32__0_5476 -> bb43__0_5476 [label="unwind"];
    bb33__0_5476 -> bb34__0_5476 [label="0"];
    bb33__0_5476 -> bb35__0_5476 [label="1"];
    bb33__0_5476 -> bb4__0_5476 [label="otherwise"];
    bb34__0_5476 -> bb37__0_5476 [label="return"];
    bb34__0_5476 -> bb43__0_5476 [label="unwind"];
    bb35__0_5476 -> bb36__0_5476 [label="return"];
    bb35__0_5476 -> bb43__0_5476 [label="unwind"];
    bb36__0_5476 -> bb39__0_5476 [label="return"];
    bb36__0_5476 -> bb44__0_5476 [label="unwind"];
    bb37__0_5476 -> bb38__0_5476 [label="return"];
    bb37__0_5476 -> bb44__0_5476 [label="unwind"];
    bb38__0_5476 -> bb40__0_5476 [label=""];
    bb39__0_5476 -> bb40__0_5476 [label=""];
    bb41__0_5476 -> bb43__0_5476 [label="return"];
    bb42__0_5476 -> bb43__0_5476 [label="return"];
    bb43__0_5476 -> bb44__0_5476 [label="return"];
    bb45__0_5476 -> bb44__0_5476 [label=""];
    bb46__0_5476 -> bb44__0_5476 [label=""];
}
