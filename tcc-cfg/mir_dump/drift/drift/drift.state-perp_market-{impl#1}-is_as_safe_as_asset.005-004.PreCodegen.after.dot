digraph Mir_0_3778 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn state::perp_market::ContractTier::is_as_safe_as_asset(_1: &amp;ReErased state::perp_market::ContractTier, _2: &amp;ReErased state::spot_market::AssetTier) -&gt; bool<br align="left"/>let mut _3: bool;<br align="left"/>let mut _4: &amp;ReErased &amp;ReErased state::spot_market::AssetTier;<br align="left"/>let mut _5: &amp;ReErased &amp;ReErased state::spot_market::AssetTier;<br align="left"/>let _6: &amp;ReErased state::spot_market::AssetTier;<br align="left"/>let _7: state::spot_market::AssetTier;<br align="left"/>let mut _8: bool;<br align="left"/>let mut _9: &amp;ReErased &amp;ReErased state::spot_market::AssetTier;<br align="left"/>let mut _10: &amp;ReErased &amp;ReErased state::spot_market::AssetTier;<br align="left"/>let _11: &amp;ReErased state::spot_market::AssetTier;<br align="left"/>let _12: &amp;ReErased state::spot_market::AssetTier;<br align="left"/>let _13: state::spot_market::AssetTier;<br align="left"/>let mut _14: &amp;ReErased &amp;ReErased state::perp_market::ContractTier;<br align="left"/>let mut _15: &amp;ReErased &amp;ReErased state::perp_market::ContractTier;<br align="left"/>let _16: &amp;ReErased state::perp_market::ContractTier;<br align="left"/>let _17: &amp;ReErased state::perp_market::ContractTier;<br align="left"/>let _18: state::perp_market::ContractTier;<br align="left"/>let mut _19: &amp;ReErased &amp;ReErased state::perp_market::ContractTier;<br align="left"/>let mut _20: &amp;ReErased &amp;ReErased state::spot_market::AssetTier;<br align="left"/>let mut _21: &amp;ReErased &amp;ReErased state::spot_market::AssetTier;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug other =&gt; _2;<br align="left"/>>;
    bb0__0_3778 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>_4 = &amp;_2<br/>StorageLive(_5)<br/>_21 = const _<br/>_5 = &amp;(*_21)<br/></td></tr><tr><td align="left">_3 = &lt;&amp;state::spot_market::AssetTier as PartialEq&gt;::eq(move _4, move _5)</td></tr></table>>];
    bb1__0_3778 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">switchInt(move _3)</td></tr></table>>];
    bb2__0_3778 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageDead(_4)<br/>_0 = const true<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb3__0_3778 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageDead(_4)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = &amp;_2<br/>StorageLive(_10)<br/>_20 = const _<br/>_10 = &amp;(*_20)<br/></td></tr><tr><td align="left">_8 = &lt;&amp;state::spot_market::AssetTier as PartialOrd&gt;::ge(move _9, move _10)</td></tr></table>>];
    bb4__0_3778 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb5__0_3778 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_9)<br/>StorageLive(_14)<br/>_14 = &amp;_1<br/>StorageLive(_15)<br/>_19 = const _<br/>_15 = &amp;(*_19)<br/></td></tr><tr><td align="left">_0 = &lt;&amp;state::perp_market::ContractTier as PartialOrd&gt;::le(move _14, move _15)</td></tr></table>>];
    bb6__0_3778 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_9)<br/>_0 = const false<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_3778 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_3778 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_3778 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_3778 -> bb1__0_3778 [label="return"];
    bb1__0_3778 -> bb3__0_3778 [label="0"];
    bb1__0_3778 -> bb2__0_3778 [label="otherwise"];
    bb2__0_3778 -> bb9__0_3778 [label=""];
    bb3__0_3778 -> bb4__0_3778 [label="return"];
    bb4__0_3778 -> bb6__0_3778 [label="0"];
    bb4__0_3778 -> bb5__0_3778 [label="otherwise"];
    bb5__0_3778 -> bb7__0_3778 [label="return"];
    bb6__0_3778 -> bb8__0_3778 [label=""];
    bb7__0_3778 -> bb8__0_3778 [label=""];
    bb8__0_3778 -> bb9__0_3778 [label=""];
}
