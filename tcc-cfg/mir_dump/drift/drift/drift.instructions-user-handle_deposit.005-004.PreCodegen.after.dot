digraph Mir_0_11677 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn instructions::user::handle_deposit(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::user::Deposit&lt;ReErased&gt;&gt;, _2: u16, _3: u64, _4: bool) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _5: ();<br align="left"/>let mut _6: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _7: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _8: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _9: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _10: isize;<br align="left"/>let _11: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _12: !;<br align="left"/>let mut _13: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _14: ();<br align="left"/>let _15: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _16: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _17: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _18: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _19: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _20: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _21: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _22: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _23: Closure(DefId(0:11680 ~ drift[d311]::instructions::user::handle_deposit::{closure#0}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _24: isize;<br align="left"/>let _25: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _26: !;<br align="left"/>let mut _27: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _28: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _29: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let _30: anchor_lang::prelude::Clock;<br align="left"/>let mut _31: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _32: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _33: isize;<br align="left"/>let _34: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _35: !;<br align="left"/>let mut _36: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _37: anchor_lang::prelude::Clock;<br align="left"/>let _38: i64;<br align="left"/>let _39: u64;<br align="left"/>let _40: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _41: std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _42: std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _43: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let _44: state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _45: state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _46: state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _47: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let mut _48: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, instructions::optional_accounts::AccountMaps&lt;ReErased&gt;&gt;;<br align="left"/>let mut _49: std::result::Result&lt;instructions::optional_accounts::AccountMaps&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _50: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _51: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _52: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _53: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _54: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _55: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _56: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _57: u16;<br align="left"/>let mut _58: u64;<br align="left"/>let mut _59: std::option::Option&lt;state::state::OracleGuardRails&gt;;<br align="left"/>let mut _60: state::state::OracleGuardRails;<br align="left"/>let mut _61: &amp;ReErased state::state::State;<br align="left"/>let mut _62: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _63: isize;<br align="left"/>let _64: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _65: !;<br align="left"/>let mut _66: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _67: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let _68: std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let mut _69: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;&gt;;<br align="left"/>let mut _70: std::result::Result&lt;std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _71: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _72: isize;<br align="left"/>let _73: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _74: !;<br align="left"/>let mut _75: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _76: std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let _77: ();<br align="left"/>let mut _78: bool;<br align="left"/>let mut _79: u64;<br align="left"/>let mut _80: !;<br align="left"/>let mut _81: anchor_lang::error::Error;<br align="left"/>let mut _82: error::ErrorCode;<br align="left"/>let _83: ();<br align="left"/>let mut _84: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _85: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _86: bool;<br align="left"/>let mut _87: &amp;ReErased state::user::User;<br align="left"/>let _88: &amp;ReErased state::user::User;<br align="left"/>let mut _89: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _90: ();<br align="left"/>let _91: error::ErrorCode;<br align="left"/>let _92: ();<br align="left"/>let mut _93: &amp;ReErased str;<br align="left"/>let _94: &amp;ReErased str;<br align="left"/>let mut _95: &amp;ReErased std::string::String;<br align="left"/>let _96: &amp;ReErased std::string::String;<br align="left"/>let _97: std::string::String;<br align="left"/>let _98: std::string::String;<br align="left"/>let mut _99: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _100: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _101: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _102: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _103: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _104: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _105: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _106: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _107: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _108: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _109: &amp;ReErased error::ErrorCode;<br align="left"/>let _110: &amp;ReErased error::ErrorCode;<br align="left"/>let mut _111: error::ErrorCode;<br align="left"/>let mut _112: isize;<br align="left"/>let _113: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _114: !;<br align="left"/>let mut _115: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _116: ();<br align="left"/>let mut _117: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _118: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _119: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _120: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _121: &amp;ReErased u16;<br align="left"/>let _122: &amp;ReErased u16;<br align="left"/>let mut _123: isize;<br align="left"/>let _124: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _125: !;<br align="left"/>let mut _126: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _127: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _128: state::oracle::OraclePriceData;<br align="left"/>let mut _129: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _130: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _131: std::result::Result&lt;&amp;ReErased state::oracle::OraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _132: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _133: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _134: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _135: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _136: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _137: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _138: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _139: isize;<br align="left"/>let _140: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _141: !;<br align="left"/>let mut _142: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _143: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _144: ();<br align="left"/>let mut _145: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _146: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _147: bool;<br align="left"/>let mut _148: u8;<br align="left"/>let mut _149: &amp;ReErased state::user::User;<br align="left"/>let mut _150: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _151: u8;<br align="left"/>let mut _152: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _153: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _154: ();<br align="left"/>let _155: error::ErrorCode;<br align="left"/>let _156: ();<br align="left"/>let mut _157: &amp;ReErased str;<br align="left"/>let _158: &amp;ReErased str;<br align="left"/>let mut _159: &amp;ReErased std::string::String;<br align="left"/>let _160: &amp;ReErased std::string::String;<br align="left"/>let _161: std::string::String;<br align="left"/>let _162: std::string::String;<br align="left"/>let mut _163: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _164: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _165: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _166: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _167: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _168: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _169: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _170: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _171: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _172: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _173: &amp;ReErased error::ErrorCode;<br align="left"/>let _174: &amp;ReErased error::ErrorCode;<br align="left"/>let _175: ();<br align="left"/>let mut _176: &amp;ReErased str;<br align="left"/>let _177: &amp;ReErased str;<br align="left"/>let mut _178: &amp;ReErased std::string::String;<br align="left"/>let _179: &amp;ReErased std::string::String;<br align="left"/>let _180: std::string::String;<br align="left"/>let _181: std::string::String;<br align="left"/>let mut _182: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _183: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _184: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _185: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _186: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _187: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _188: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _189: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _190: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _191: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _192: &amp;ReErased u8;<br align="left"/>let _193: &amp;ReErased u8;<br align="left"/>let _194: &amp;ReErased state::user::User;<br align="left"/>let mut _195: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _196: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _197: &amp;ReErased u8;<br align="left"/>let _198: &amp;ReErased u8;<br align="left"/>let _199: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _200: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _201: error::ErrorCode;<br align="left"/>let mut _202: isize;<br align="left"/>let _203: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _204: !;<br align="left"/>let mut _205: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _206: ();<br align="left"/>let _207: ();<br align="left"/>let mut _208: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _209: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _210: bool;<br align="left"/>let mut _211: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _212: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _213: isize;<br align="left"/>let mut _214: ();<br align="left"/>let _215: error::ErrorCode;<br align="left"/>let _216: ();<br align="left"/>let mut _217: &amp;ReErased str;<br align="left"/>let _218: &amp;ReErased str;<br align="left"/>let mut _219: &amp;ReErased std::string::String;<br align="left"/>let _220: &amp;ReErased std::string::String;<br align="left"/>let _221: std::string::String;<br align="left"/>let _222: std::string::String;<br align="left"/>let mut _223: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _224: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _225: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _226: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _227: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _228: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _229: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _230: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _231: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _232: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _233: &amp;ReErased error::ErrorCode;<br align="left"/>let _234: &amp;ReErased error::ErrorCode;<br align="left"/>let _235: ();<br align="left"/>let mut _236: &amp;ReErased str;<br align="left"/>let _237: &amp;ReErased str;<br align="left"/>let mut _238: error::ErrorCode;<br align="left"/>let mut _239: isize;<br align="left"/>let _240: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _241: !;<br align="left"/>let mut _242: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _243: ();<br align="left"/>let _244: ();<br align="left"/>let mut _245: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _246: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _247: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _248: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _249: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _250: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _251: std::option::Option&lt;&amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _252: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _253: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _254: i64;<br align="left"/>let mut _255: isize;<br align="left"/>let _256: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _257: !;<br align="left"/>let mut _258: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _259: ();<br align="left"/>let _260: usize;<br align="left"/>let mut _261: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, usize&gt;;<br align="left"/>let mut _262: std::result::Result&lt;usize, error::ErrorCode&gt;;<br align="left"/>let mut _263: &amp;ReErased mut state::user::User;<br align="left"/>let mut _264: &amp;ReErased mut state::user::User;<br align="left"/>let mut _265: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _266: u16;<br align="left"/>let mut _267: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _268: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _269: isize;<br align="left"/>let _270: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _271: !;<br align="left"/>let mut _272: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _273: usize;<br align="left"/>let _274: bool;<br align="left"/>let mut _275: &amp;ReErased state::user::SpotPosition;<br align="left"/>let _276: &amp;ReErased state::user::User;<br align="left"/>let mut _277: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _278: usize;<br align="left"/>let mut _279: usize;<br align="left"/>let mut _280: bool;<br align="left"/>let _281: bool;<br align="left"/>let mut _282: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _283: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _284: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _285: u64;<br align="left"/>let mut _286: bool;<br align="left"/>let mut _287: bool;<br align="left"/>let mut _288: bool;<br align="left"/>let mut _289: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _290: &amp;ReErased state::user::User;<br align="left"/>let mut _291: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _292: usize;<br align="left"/>let mut _293: usize;<br align="left"/>let mut _294: bool;<br align="left"/>let mut _295: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _296: state::spot_market::SpotBalanceType;<br align="left"/>let mut _297: u64;<br align="left"/>let mut _298: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _299: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _300: u128;<br align="left"/>let mut _301: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _302: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _303: &amp;ReErased state::user::SpotPosition;<br align="left"/>let _304: &amp;ReErased state::user::User;<br align="left"/>let mut _305: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _306: usize;<br align="left"/>let mut _307: usize;<br align="left"/>let mut _308: bool;<br align="left"/>let mut _309: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _310: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _311: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _312: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _313: isize;<br align="left"/>let _314: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _315: !;<br align="left"/>let mut _316: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _317: u128;<br align="left"/>let mut _318: isize;<br align="left"/>let _319: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _320: !;<br align="left"/>let mut _321: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _322: u64;<br align="left"/>let mut _323: u64;<br align="left"/>let _324: ();<br align="left"/>let mut _325: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _326: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _327: &amp;ReErased mut state::user::User;<br align="left"/>let mut _328: &amp;ReErased mut state::user::User;<br align="left"/>let mut _329: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _330: u64;<br align="left"/>let mut _331: i64;<br align="left"/>let mut _332: u128;<br align="left"/>let mut _333: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _334: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _335: u64;<br align="left"/>let mut _336: state::spot_market::SpotMarket;<br align="left"/>let mut _337: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _338: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _339: isize;<br align="left"/>let _340: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _341: !;<br align="left"/>let mut _342: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _343: u128;<br align="left"/>let mut _344: isize;<br align="left"/>let _345: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _346: !;<br align="left"/>let mut _347: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _348: ();<br align="left"/>let _349: u64;<br align="left"/>let mut _350: &amp;ReErased state::user::User;<br align="left"/>let mut _351: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _352: u64;<br align="left"/>let mut _353: &amp;ReErased state::user::User;<br align="left"/>let mut _354: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _355: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let mut _356: &amp;ReErased mut state::user::User;<br align="left"/>let mut _357: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _358: usize;<br align="left"/>let mut _359: usize;<br align="left"/>let mut _360: bool;<br align="left"/>let _361: ();<br align="left"/>let mut _362: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _363: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _364: u128;<br align="left"/>let mut _365: u64;<br align="left"/>let mut _366: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _367: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _368: state::spot_market::SpotBalanceType;<br align="left"/>let mut _369: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _370: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _371: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _372: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _373: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let mut _374: std::option::Option&lt;u128&gt;;<br align="left"/>let mut _375: isize;<br align="left"/>let _376: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _377: !;<br align="left"/>let mut _378: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _379: ();<br align="left"/>let _380: u128;<br align="left"/>let mut _381: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _382: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _383: &amp;ReErased state::user::SpotPosition;<br align="left"/>let mut _384: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _385: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _386: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _387: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _388: isize;<br align="left"/>let _389: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _390: !;<br align="left"/>let mut _391: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _392: u128;<br align="left"/>let _393: ();<br align="left"/>let mut _394: bool;<br align="left"/>let mut _395: u128;<br align="left"/>let _396: ();<br align="left"/>let mut _397: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _398: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _399: bool;<br align="left"/>let mut _400: u64;<br align="left"/>let mut _401: ();<br align="left"/>let _402: error::ErrorCode;<br align="left"/>let _403: ();<br align="left"/>let mut _404: &amp;ReErased str;<br align="left"/>let _405: &amp;ReErased str;<br align="left"/>let mut _406: &amp;ReErased std::string::String;<br align="left"/>let _407: &amp;ReErased std::string::String;<br align="left"/>let _408: std::string::String;<br align="left"/>let _409: std::string::String;<br align="left"/>let mut _410: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _411: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _412: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _413: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _414: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _415: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _416: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _417: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _418: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _419: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _420: &amp;ReErased error::ErrorCode;<br align="left"/>let _421: &amp;ReErased error::ErrorCode;<br align="left"/>let _422: ();<br align="left"/>let mut _423: &amp;ReErased str;<br align="left"/>let _424: &amp;ReErased str;<br align="left"/>let mut _425: &amp;ReErased std::string::String;<br align="left"/>let _426: &amp;ReErased std::string::String;<br align="left"/>let _427: std::string::String;<br align="left"/>let _428: std::string::String;<br align="left"/>let mut _429: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _430: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _431: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _432: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _433: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _434: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _435: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _436: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _437: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _438: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _439: &amp;ReErased u64;<br align="left"/>let _440: &amp;ReErased u64;<br align="left"/>let mut _441: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _442: &amp;ReErased u128;<br align="left"/>let _443: &amp;ReErased u128;<br align="left"/>let mut _444: error::ErrorCode;<br align="left"/>let mut _445: isize;<br align="left"/>let _446: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _447: !;<br align="left"/>let mut _448: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _449: ();<br align="left"/>let _450: ();<br align="left"/>let mut _451: bool;<br align="left"/>let mut _452: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _453: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _454: state::spot_market::SpotBalanceType;<br align="left"/>let mut _455: bool;<br align="left"/>let mut _456: u64;<br align="left"/>let _457: ();<br align="left"/>let mut _458: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _459: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _460: bool;<br align="left"/>let mut _461: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _462: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _463: isize;<br align="left"/>let mut _464: ();<br align="left"/>let _465: error::ErrorCode;<br align="left"/>let _466: ();<br align="left"/>let mut _467: &amp;ReErased str;<br align="left"/>let _468: &amp;ReErased str;<br align="left"/>let mut _469: &amp;ReErased std::string::String;<br align="left"/>let _470: &amp;ReErased std::string::String;<br align="left"/>let _471: std::string::String;<br align="left"/>let _472: std::string::String;<br align="left"/>let mut _473: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _474: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _475: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _476: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _477: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _478: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _479: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _480: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _481: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _482: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _483: &amp;ReErased error::ErrorCode;<br align="left"/>let _484: &amp;ReErased error::ErrorCode;<br align="left"/>let _485: ();<br align="left"/>let mut _486: &amp;ReErased str;<br align="left"/>let _487: &amp;ReErased str;<br align="left"/>let mut _488: &amp;ReErased std::string::String;<br align="left"/>let _489: &amp;ReErased std::string::String;<br align="left"/>let _490: std::string::String;<br align="left"/>let _491: std::string::String;<br align="left"/>let mut _492: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _493: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _494: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _495: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _496: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _497: error::ErrorCode;<br align="left"/>let mut _498: isize;<br align="left"/>let _499: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _500: !;<br align="left"/>let mut _501: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _502: ();<br align="left"/>let _503: ();<br align="left"/>let mut _504: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _505: ();<br align="left"/>let mut _506: bool;<br align="left"/>let mut _507: &amp;ReErased state::user::User;<br align="left"/>let _508: &amp;ReErased state::user::User;<br align="left"/>let mut _509: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _510: bool;<br align="left"/>let mut _511: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _512: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _513: &amp;ReErased state::user::User;<br align="left"/>let _514: &amp;ReErased state::user::User;<br align="left"/>let mut _515: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _516: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _517: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _518: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let _519: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _520: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _521: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _522: u32;<br align="left"/>let mut _523: &amp;ReErased state::state::State;<br align="left"/>let mut _524: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _525: isize;<br align="left"/>let _526: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _527: !;<br align="left"/>let mut _528: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _529: bool;<br align="left"/>let mut _530: bool;<br align="left"/>let _531: ();<br align="left"/>let mut _532: &amp;ReErased mut state::user::User;<br align="left"/>let mut _533: &amp;ReErased mut state::user::User;<br align="left"/>let mut _534: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _535: ();<br align="left"/>let mut _536: &amp;ReErased mut state::user::User;<br align="left"/>let mut _537: &amp;ReErased mut state::user::User;<br align="left"/>let mut _538: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _539: u64;<br align="left"/>let _540: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _541: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _542: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _543: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _544: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _545: &amp;ReErased u16;<br align="left"/>let _546: &amp;ReErased u16;<br align="left"/>let mut _547: isize;<br align="left"/>let _548: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _549: !;<br align="left"/>let mut _550: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _551: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _552: ();<br align="left"/>let mut _553: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _554: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _555: &amp;ReErased anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let _556: &amp;ReErased anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let mut _557: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let _558: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _559: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let _560: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _561: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _562: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _563: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let _564: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _565: u64;<br align="left"/>let mut _566: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let _567: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let mut _568: std::option::Option&lt;&amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;&gt;;<br align="left"/>let mut _569: bool;<br align="left"/>let mut _570: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _571: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _572: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _573: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _574: isize;<br align="left"/>let _575: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _576: !;<br align="left"/>let mut _577: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _578: ();<br align="left"/>let _579: ();<br align="left"/>let mut _580: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _581: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _582: &amp;ReErased mut anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _583: isize;<br align="left"/>let _584: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _585: !;<br align="left"/>let mut _586: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _587: ();<br align="left"/>let _588: u64;<br align="left"/>let _589: u64;<br align="left"/>let mut _590: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _591: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _592: u64;<br align="left"/>let mut _593: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _594: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _595: u64;<br align="left"/>let mut _596: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _597: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _598: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _599: i64;<br align="left"/>let _600: state::events::DepositExplanation;<br align="left"/>let mut _601: bool;<br align="left"/>let _602: state::events::DepositRecord;<br align="left"/>let mut _603: i64;<br align="left"/>let mut _604: u64;<br align="left"/>let mut _605: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _606: &amp;ReErased state::user::User;<br align="left"/>let mut _607: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _608: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _609: state::events::DepositDirection;<br align="left"/>let mut _610: u64;<br align="left"/>let mut _611: i64;<br align="left"/>let mut _612: u128;<br align="left"/>let mut _613: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _614: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _615: u128;<br align="left"/>let mut _616: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _617: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _618: u128;<br align="left"/>let mut _619: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _620: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _621: u128;<br align="left"/>let mut _622: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _623: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _624: u64;<br align="left"/>let mut _625: u64;<br align="left"/>let mut _626: u16;<br align="left"/>let mut _627: state::events::DepositExplanation;<br align="left"/>let mut _628: std::option::Option&lt;anchor_lang::prelude::Pubkey&gt;;<br align="left"/>let _629: ();<br align="left"/>let _630: ();<br align="left"/>let mut _631: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let mut _632: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let _633: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let _634: [&amp;ReErased [u8]; 1_usize];<br align="left"/>let mut _635: &amp;ReErased [u8];<br align="left"/>let _636: &amp;ReErased [u8];<br align="left"/>let mut _637: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _638: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _639: std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _640: &amp;ReErased state::events::DepositRecord;<br align="left"/>let _641: &amp;ReErased state::events::DepositRecord;<br align="left"/>let _642: ();<br align="left"/>let mut _643: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _644: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _645: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _646: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _647: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _648: isize;<br align="left"/>let _649: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _650: !;<br align="left"/>let mut _651: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _652: ();<br align="left"/>let mut _653: ();<br align="left"/>let mut _654: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _655: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _656: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _657: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _658: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _659: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _660: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _661: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _662: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _663: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _664: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _665: &amp;ReErased mut instructions::user::Deposit&lt;ReErased&gt;;<br align="left"/>let mut _666: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _667: &amp;ReErased mut instructions::user::Deposit&lt;ReErased&gt;;<br align="left"/>let mut _668: &amp;ReErased mut instructions::user::Deposit&lt;ReErased&gt;;<br align="left"/>let mut _669: &amp;ReErased mut instructions::user::Deposit&lt;ReErased&gt;;<br align="left"/>let mut _670: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _671: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _672: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _673: &amp;ReErased mut instructions::user::Deposit&lt;ReErased&gt;;<br align="left"/>let mut _674: &amp;ReErased mut instructions::user::Deposit&lt;ReErased&gt;;<br align="left"/>let mut _675: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _676: &amp;ReErased mut instructions::user::Deposit&lt;ReErased&gt;;<br align="left"/>let mut _677: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _678: &amp;ReErased mut instructions::user::Deposit&lt;ReErased&gt;;<br align="left"/>let mut _679: &amp;ReErased mut instructions::user::Deposit&lt;ReErased&gt;;<br align="left"/>let mut _680: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _681: bool;<br align="left"/>let mut _682: isize;<br align="left"/>let mut _683: isize;<br align="left"/>let mut _684: isize;<br align="left"/>let mut _685: isize;<br align="left"/>let mut _686: isize;<br align="left"/>let mut _687: isize;<br align="left"/>let mut _688: isize;<br align="left"/>let mut _689: isize;<br align="left"/>let mut _690: isize;<br align="left"/>let mut _691: isize;<br align="left"/>let mut _692: isize;<br align="left"/>let mut _693: isize;<br align="left"/>let mut _694: isize;<br align="left"/>let mut _695: isize;<br align="left"/>let mut _696: isize;<br align="left"/>let mut _697: isize;<br align="left"/>let mut _698: isize;<br align="left"/>let mut _699: isize;<br align="left"/>let mut _700: isize;<br align="left"/>let mut _701: isize;<br align="left"/>let mut _702: isize;<br align="left"/>let mut _703: isize;<br align="left"/>let mut _704: isize;<br align="left"/>let mut _705: isize;<br align="left"/>let mut _706: isize;<br align="left"/>let mut _707: isize;<br align="left"/>let mut _708: isize;<br align="left"/>let mut _709: isize;<br align="left"/>let mut _710: isize;<br align="left"/>let mut _711: isize;<br align="left"/>let mut _712: isize;<br align="left"/>let mut _713: isize;<br align="left"/>let mut _714: isize;<br align="left"/>let mut _715: isize;<br align="left"/>let mut _716: isize;<br align="left"/>let mut _717: isize;<br align="left"/>let mut _718: isize;<br align="left"/>let mut _719: isize;<br align="left"/>let mut _720: isize;<br align="left"/>let mut _721: isize;<br align="left"/>let mut _722: isize;<br align="left"/>let mut _723: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _724: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _725: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _726: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _727: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _728: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug market_index =&gt; _2;<br align="left"/>debug amount =&gt; _3;<br align="left"/>debug reduce_only =&gt; _4;<br align="left"/>debug residual =&gt; _11;<br align="left"/>debug val =&gt; _14;<br align="left"/>debug user_key =&gt; _15;<br align="left"/>debug user =&gt; _17;<br align="left"/>debug residual =&gt; _25;<br align="left"/>debug val =&gt; _28;<br align="left"/>debug state =&gt; _29;<br align="left"/>debug clock =&gt; _30;<br align="left"/>debug residual =&gt; _34;<br align="left"/>debug val =&gt; _37;<br align="left"/>debug now =&gt; _38;<br align="left"/>debug slot =&gt; _39;<br align="left"/>debug remaining_accounts_iter =&gt; _40;<br align="left"/>debug perp_market_map =&gt; _44;<br align="left"/>debug spot_market_map =&gt; _45;<br align="left"/>debug oracle_map =&gt; _46;<br align="left"/>debug residual =&gt; _64;<br align="left"/>debug val =&gt; _67;<br align="left"/>debug mint =&gt; _68;<br align="left"/>debug residual =&gt; _73;<br align="left"/>debug val =&gt; _76;<br align="left"/>debug error_code =&gt; _91;<br align="left"/>debug res =&gt; _98;<br align="left"/>debug residual =&gt; _113;<br align="left"/>debug val =&gt; _116;<br align="left"/>debug spot_market =&gt; _117;<br align="left"/>debug residual =&gt; _124;<br align="left"/>debug val =&gt; _127;<br align="left"/>debug oracle_price_data =&gt; _128;<br align="left"/>debug residual =&gt; _140;<br align="left"/>debug val =&gt; _143;<br align="left"/>debug error_code =&gt; _155;<br align="left"/>debug res =&gt; _162;<br align="left"/>debug res =&gt; _181;<br align="left"/>debug residual =&gt; _203;<br align="left"/>debug val =&gt; _206;<br align="left"/>debug error_code =&gt; _215;<br align="left"/>debug res =&gt; _222;<br align="left"/>debug residual =&gt; _240;<br align="left"/>debug val =&gt; _243;<br align="left"/>debug residual =&gt; _256;<br align="left"/>debug val =&gt; _259;<br align="left"/>debug position_index =&gt; _260;<br align="left"/>debug residual =&gt; _270;<br align="left"/>debug val =&gt; _273;<br align="left"/>debug is_borrow_before =&gt; _274;<br align="left"/>debug force_reduce_only =&gt; _281;<br align="left"/>debug amount =&gt; _285;<br align="left"/>debug residual =&gt; _314;<br align="left"/>debug val =&gt; _317;<br align="left"/>debug residual =&gt; _319;<br align="left"/>debug val =&gt; _322;<br align="left"/>debug residual =&gt; _340;<br align="left"/>debug val =&gt; _343;<br align="left"/>debug residual =&gt; _345;<br align="left"/>debug val =&gt; _348;<br align="left"/>debug total_deposits_after =&gt; _349;<br align="left"/>debug total_withdraws_after =&gt; _352;<br align="left"/>debug spot_position =&gt; _355;<br align="left"/>debug residual =&gt; _376;<br align="left"/>debug val =&gt; _379;<br align="left"/>debug token_amount =&gt; _380;<br align="left"/>debug residual =&gt; _389;<br align="left"/>debug val =&gt; _392;<br align="left"/>debug error_code =&gt; _402;<br align="left"/>debug res =&gt; _409;<br align="left"/>debug res =&gt; _428;<br align="left"/>debug residual =&gt; _446;<br align="left"/>debug val =&gt; _449;<br align="left"/>debug error_code =&gt; _465;<br align="left"/>debug res =&gt; _472;<br align="left"/>debug res =&gt; _491;<br align="left"/>debug residual =&gt; _499;<br align="left"/>debug val =&gt; _502;<br align="left"/>debug is_being_liquidated =&gt; _510;<br align="left"/>debug residual =&gt; _526;<br align="left"/>debug val =&gt; _529;<br align="left"/>debug spot_market =&gt; _540;<br align="left"/>debug residual =&gt; _548;<br align="left"/>debug val =&gt; _551;<br align="left"/>debug residual =&gt; _575;<br align="left"/>debug val =&gt; _578;<br align="left"/>debug residual =&gt; _584;<br align="left"/>debug val =&gt; _587;<br align="left"/>debug deposit_record_id =&gt; _588;<br align="left"/>debug current_id =&gt; _589;<br align="left"/>debug oracle_price =&gt; _599;<br align="left"/>debug explanation =&gt; _600;<br align="left"/>debug deposit_record =&gt; _602;<br align="left"/>debug residual =&gt; _649;<br align="left"/>debug val =&gt; _652;<br align="left"/>>;
    bb0__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_681 = const false<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_665 = deref_copy (_1.1: &amp;mut instructions::user::Deposit&lt;'_&gt;)<br/>_9 = &amp;((*_665).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_666 = deref_copy (*_9)<br/>_723 = (((_666.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_8 = &amp;(*_723)<br/></td></tr><tr><td align="left">_7 = constraints::deposit_not_paused(move _8)</td></tr></table>>];
    bb1__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/></td></tr><tr><td align="left">_6 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _7)</td></tr></table>>];
    bb2__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>_10 = discriminant(_6)<br/></td></tr><tr><td align="left">switchInt(move _10)</td></tr></table>>];
    bb3__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = ((_6 as Continue).0: ())<br/>_5 = _14<br/>StorageDead(_14)<br/>_682 = discriminant(_6)<br/>StorageDead(_9)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_667 = deref_copy (_1.1: &amp;mut instructions::user::Deposit&lt;'_&gt;)<br/>_16 = &amp;((*_667).1: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_15 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt; as anchor_lang::Key&gt;::key(move _16)</td></tr></table>>];
    bb4__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = move ((_6 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_13)<br/>_13 = move _11<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _13)</td></tr></table>>];
    bb6__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_11)<br/>_712 = discriminant(_6)<br/>StorageDead(_9)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_668 = deref_copy (_1.1: &amp;mut instructions::user::Deposit&lt;'_&gt;)<br/>_22 = &amp;((*_668).1: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_21 = anchor_lang::prelude::AccountLoader::&lt;'_, User&gt;::load_mut(move _22)</td></tr></table>>];
    bb8__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageLive(_23)<br/>_23 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_20 = std::result::Result::&lt;RefMut&lt;'_, User&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _21, move _23)</td></tr></table>>];
    bb9__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">_19 = &lt;std::result::Result&lt;RefMut&lt;'_, User&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _20)</td></tr></table>>];
    bb10__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>_24 = discriminant(_19)<br/></td></tr><tr><td align="left">switchInt(move _24)</td></tr></table>>];
    bb11__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_28)<br/>_28 = move ((_19 as Continue).0: std::cell::RefMut&lt;'_, state::user::User&gt;)<br/>_18 = move _28<br/>StorageDead(_28)<br/>_17 = &amp;mut _18<br/>_686 = discriminant(_19)<br/>StorageDead(_19)<br/>StorageLive(_29)<br/>_669 = deref_copy (_1.1: &amp;mut instructions::user::Deposit&lt;'_&gt;)<br/>_29 = &amp;((*_669).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/></td></tr><tr><td align="left">_32 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb12__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_25)<br/>_25 = ((_19 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_27)<br/>_27 = _25<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _27)</td></tr></table>>];
    bb13__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_25)<br/>_684 = discriminant(_19)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left">_31 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _32)</td></tr></table>>];
    bb15__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>_33 = discriminant(_31)<br/></td></tr><tr><td align="left">switchInt(move _33)</td></tr></table>>];
    bb16__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_37)<br/>_37 = move ((_31 as Continue).0: anchor_lang::prelude::Clock)<br/>_30 = move _37<br/>StorageDead(_37)<br/>_688 = discriminant(_31)<br/>StorageDead(_31)<br/>StorageLive(_38)<br/>_38 = (_30.4: i64)<br/>StorageLive(_39)<br/>_39 = (_30.0: u64)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>_670 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_43 = &amp;(*_670)<br/></td></tr><tr><td align="left">_42 = core::slice::&lt;impl [anchor_lang::prelude::AccountInfo&lt;'_&gt;]&gt;::iter(move _43)</td></tr></table>>];
    bb17__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_34)<br/>_34 = move ((_31 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_36)<br/>_36 = move _34<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _36)</td></tr></table>>];
    bb18__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_34)<br/>_710 = discriminant(_31)<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/></td></tr><tr><td align="left">_41 = &lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as Iterator&gt;::peekable(move _42)</td></tr></table>>];
    bb20__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>_40 = &amp;mut _41<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>_50 = &amp;mut (*_40)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/></td></tr><tr><td align="left">_53 = BTreeSet::&lt;u16&gt;::new()</td></tr></table>>];
    bb21__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">_52 = &amp;_53<br/>_51 = &amp;(*_52)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>_57 = _2<br/></td></tr><tr><td align="left">_56 = get_writable_spot_market_set(move _57)</td></tr></table>>];
    bb22__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>_55 = &amp;_56<br/>_54 = &amp;(*_55)<br/>StorageLive(_58)<br/>_58 = (_30.0: u64)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>_671 = deref_copy (*_29)<br/>_724 = (((_671.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_62 = &amp;(*_724)<br/></td></tr><tr><td align="left">_61 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _62)</td></tr></table>>];
    bb23__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>_60 = ((*_61).7: state::state::OracleGuardRails)<br/>_59 = Option::&lt;state::state::OracleGuardRails&gt;::Some(move _60)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">_49 = load_maps(move _50, move _51, move _54, move _58, move _59)</td></tr></table>>];
    bb24__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_58)<br/>StorageDead(_54)<br/>StorageDead(_51)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">_48 = &lt;std::result::Result&lt;AccountMaps&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _49)</td></tr></table>>];
    bb25__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>_63 = discriminant(_48)<br/></td></tr><tr><td align="left">switchInt(move _63)</td></tr></table>>];
    bb26__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_67)<br/>_67 = move ((_48 as Continue).0: instructions::optional_accounts::AccountMaps&lt;'_&gt;)<br/>_47 = move _67<br/>StorageDead(_67)<br/>StorageLive(_44)<br/>_44 = move (_47.0: state::perp_market_map::PerpMarketMap&lt;'_&gt;)<br/>StorageLive(_45)<br/>_45 = move (_47.1: state::spot_market_map::SpotMarketMap&lt;'_&gt;)<br/>StorageLive(_46)<br/>_46 = move (_47.2: state::oracle_map::OracleMap&lt;'_&gt;)<br/>_692 = discriminant(_48)<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">drop(_56)</td></tr></table>>];
    bb27__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_64)<br/>_64 = ((_48 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_66)<br/>_66 = _64<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _66)</td></tr></table>>];
    bb28__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageDead(_64)<br/>_690 = discriminant(_48)<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">drop(_56)</td></tr></table>>];
    bb29__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">drop(_53)</td></tr></table>>];
    bb30__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_52)<br/>StorageDead(_48)<br/>StorageDead(_47)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>_71 = &amp;mut (*_40)<br/></td></tr><tr><td align="left">_70 = get_token_mint(move _71)</td></tr></table>>];
    bb31__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/></td></tr><tr><td align="left">_69 = &lt;std::result::Result&lt;Option&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt;&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _70)</td></tr></table>>];
    bb32__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>_72 = discriminant(_69)<br/></td></tr><tr><td align="left">switchInt(move _72)</td></tr></table>>];
    bb33__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageLive(_76)<br/>_76 = move ((_69 as Continue).0: std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt;&gt;)<br/>_68 = move _76<br/>StorageDead(_76)<br/>StorageDead(_69)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>_79 = _3<br/>_78 = Eq(move _79, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _78)</td></tr></table>>];
    bb34__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_73)<br/>_73 = ((_69 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_75)<br/>_75 = _73<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _75)</td></tr></table>>];
    bb35__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_73)<br/>StorageDead(_69)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>_82 = error::ErrorCode::InsufficientDeposit<br/></td></tr><tr><td align="left">_81 = &lt;error::ErrorCode as Into&lt;anchor_lang::error::Error&gt;&gt;::into(move _82)</td></tr></table>>];
    bb37__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>_77 = const ()<br/>StorageDead(_78)<br/>StorageDead(_77)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>_89 = &amp;(*_17)<br/></td></tr><tr><td align="left">_88 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _89)</td></tr></table>>];
    bb38__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _81)<br/>StorageDead(_81)<br/>StorageDead(_78)<br/>StorageDead(_77)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">_87 = &amp;(*_88)<br/>StorageDead(_89)<br/></td></tr><tr><td align="left">_86 = User::is_bankrupt(move _87)</td></tr></table>>];
    bb40__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left">switchInt(move _86)</td></tr></table>>];
    bb41__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>StorageDead(_88)<br/>StorageLive(_91)<br/>_91 = error::ErrorCode::UserBankrupt<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>_664 = const _<br/>_102 = &amp;(*_664)<br/>_101 = &amp;(*_102)<br/>_100 = move _101 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_101)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>_110 = &amp;_91<br/>_109 = &amp;(*_110)<br/></td></tr><tr><td align="left">_108 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _109)</td></tr></table>>];
    bb42__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>StorageDead(_88)<br/>StorageLive(_90)<br/>_90 = ()<br/>_85 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _90)<br/>StorageDead(_90)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/>_107 = [move _108]<br/>StorageDead(_108)<br/>_106 = &amp;_107<br/>_105 = &amp;(*_106)<br/>_104 = move _105 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_105)<br/></td></tr><tr><td align="left">_99 = Arguments::&lt;'_&gt;::new_v1(move _100, move _104)</td></tr></table>>];
    bb44__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/>StorageDead(_100)<br/></td></tr><tr><td align="left">_98 = format(move _99)</td></tr></table>>];
    bb45__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/>StorageDead(_110)<br/>StorageDead(_107)<br/>StorageDead(_106)<br/>StorageDead(_102)<br/>_97 = move _98<br/>StorageDead(_98)<br/>_96 = &amp;_97<br/>_95 = &amp;(*_96)<br/></td></tr><tr><td align="left">_94 = &lt;String as Deref&gt;::deref(move _95)</td></tr></table>>];
    bb46__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">_93 = &amp;(*_94)<br/>StorageDead(_95)<br/></td></tr><tr><td align="left">_92 = solana_program::log::sol_log(move _93)</td></tr></table>>];
    bb47__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/></td></tr><tr><td align="left">drop(_97)</td></tr></table>>];
    bb48__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>StorageDead(_96)<br/>StorageDead(_94)<br/>StorageDead(_92)<br/>StorageLive(_111)<br/>_111 = _91<br/>_85 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _111)<br/>StorageDead(_111)<br/>StorageDead(_91)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/></td></tr><tr><td align="left">_84 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _85)</td></tr></table>>];
    bb50__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>_112 = discriminant(_84)<br/></td></tr><tr><td align="left">switchInt(move _112)</td></tr></table>>];
    bb51__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageLive(_116)<br/>_116 = ((_84 as Continue).0: ())<br/>_83 = _116<br/>StorageDead(_116)<br/>StorageDead(_84)<br/>StorageDead(_83)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>_120 = &amp;_45<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>_122 = &amp;_2<br/>_121 = &amp;(*_122)<br/></td></tr><tr><td align="left">_119 = SpotMarketMap::&lt;'_&gt;::get_ref_mut(move _120, move _121)</td></tr></table>>];
    bb52__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageLive(_113)<br/>_113 = ((_84 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_115)<br/>_115 = _113<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _115)</td></tr></table>>];
    bb53__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_115)<br/>StorageDead(_113)<br/>StorageDead(_84)<br/>StorageDead(_83)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_121)<br/>StorageDead(_120)<br/></td></tr><tr><td align="left">_118 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _119)</td></tr></table>>];
    bb55__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/>_123 = discriminant(_118)<br/></td></tr><tr><td align="left">switchInt(move _123)</td></tr></table>>];
    bb56__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageLive(_127)<br/>_127 = move ((_118 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_681 = const true<br/>_117 = move _127<br/>StorageDead(_127)<br/>_696 = discriminant(_118)<br/>StorageDead(_122)<br/>StorageDead(_118)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>_132 = &amp;mut _46<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>_138 = &amp;_117<br/></td></tr><tr><td align="left">_137 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _138)</td></tr></table>>];
    bb57__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageLive(_124)<br/>_124 = ((_118 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_126)<br/>_126 = _124<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _126)</td></tr></table>>];
    bb58__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/>StorageDead(_124)<br/>_694 = discriminant(_118)<br/>StorageDead(_122)<br/>StorageDead(_118)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">_136 = &amp;(*_137)<br/>StorageDead(_138)<br/></td></tr><tr><td align="left">_135 = SpotMarket::oracle_id(move _136)</td></tr></table>>];
    bb60__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_136)<br/>_134 = &amp;_135<br/>_133 = &amp;(*_134)<br/></td></tr><tr><td align="left">_131 = OracleMap::&lt;'_&gt;::get_price_data(move _132, move _133)</td></tr></table>>];
    bb61__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/>StorageDead(_132)<br/></td></tr><tr><td align="left">_130 = &lt;std::result::Result&lt;&amp;OraclePriceData, error::ErrorCode&gt; as Try&gt;::branch(move _131)</td></tr></table>>];
    bb62__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_131)<br/>_139 = discriminant(_130)<br/></td></tr><tr><td align="left">switchInt(move _139)</td></tr></table>>];
    bb63__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageLive(_143)<br/>_143 = ((_130 as Continue).0: &amp;state::oracle::OraclePriceData)<br/>_129 = _143<br/>StorageDead(_143)<br/>_128 = (*_129)<br/>StorageDead(_137)<br/>StorageDead(_135)<br/>StorageDead(_134)<br/>StorageDead(_130)<br/>StorageDead(_129)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>_150 = &amp;(*_17)<br/></td></tr><tr><td align="left">_149 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _150)</td></tr></table>>];
    bb64__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageLive(_140)<br/>_140 = ((_130 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_142)<br/>_142 = _140<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _142)</td></tr></table>>];
    bb65__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_142)<br/>StorageDead(_140)<br/>StorageDead(_137)<br/>StorageDead(_135)<br/>StorageDead(_134)<br/>StorageDead(_130)<br/>StorageDead(_129)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb66__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_150)<br/>_148 = ((*_149).27: u8)<br/>StorageLive(_151)<br/>StorageLive(_152)<br/>StorageLive(_153)<br/>_153 = &amp;_117<br/></td></tr><tr><td align="left">_152 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _153)</td></tr></table>>];
    bb67__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_153)<br/>_151 = ((*_152).62: u8)<br/>_147 = Eq(move _148, move _151)<br/></td></tr><tr><td align="left">switchInt(move _147)</td></tr></table>>];
    bb68__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_152)<br/>StorageDead(_151)<br/>StorageDead(_149)<br/>StorageDead(_148)<br/>StorageLive(_154)<br/>_154 = ()<br/>_146 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _154)<br/>StorageDead(_154)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb69__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_152)<br/>StorageDead(_151)<br/>StorageDead(_149)<br/>StorageDead(_148)<br/>StorageLive(_155)<br/>_155 = error::ErrorCode::InvalidPoolId<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>StorageLive(_161)<br/>StorageLive(_162)<br/>StorageLive(_163)<br/>StorageLive(_164)<br/>StorageLive(_165)<br/>StorageLive(_166)<br/>_663 = const _<br/>_166 = &amp;(*_663)<br/>_165 = &amp;(*_166)<br/>_164 = move _165 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_165)<br/>StorageLive(_168)<br/>StorageLive(_169)<br/>StorageLive(_170)<br/>StorageLive(_171)<br/>StorageLive(_172)<br/>StorageLive(_173)<br/>StorageLive(_174)<br/>_174 = &amp;_155<br/>_173 = &amp;(*_174)<br/></td></tr><tr><td align="left">_172 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _173)</td></tr></table>>];
    bb70__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_173)<br/>_171 = [move _172]<br/>StorageDead(_172)<br/>_170 = &amp;_171<br/>_169 = &amp;(*_170)<br/>_168 = move _169 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_169)<br/></td></tr><tr><td align="left">_163 = Arguments::&lt;'_&gt;::new_v1(move _164, move _168)</td></tr></table>>];
    bb71__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_168)<br/>StorageDead(_164)<br/></td></tr><tr><td align="left">_162 = format(move _163)</td></tr></table>>];
    bb72__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_163)<br/>StorageDead(_174)<br/>StorageDead(_171)<br/>StorageDead(_170)<br/>StorageDead(_166)<br/>_161 = move _162<br/>StorageDead(_162)<br/>_160 = &amp;_161<br/>_159 = &amp;(*_160)<br/></td></tr><tr><td align="left">_158 = &lt;String as Deref&gt;::deref(move _159)</td></tr></table>>];
    bb73__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">_157 = &amp;(*_158)<br/>StorageDead(_159)<br/></td></tr><tr><td align="left">_156 = solana_program::log::sol_log(move _157)</td></tr></table>>];
    bb74__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_157)<br/></td></tr><tr><td align="left">drop(_161)</td></tr></table>>];
    bb75__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_161)<br/>StorageDead(_160)<br/>StorageDead(_158)<br/>StorageDead(_156)<br/>StorageLive(_175)<br/>StorageLive(_176)<br/>StorageLive(_177)<br/>StorageLive(_178)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>StorageLive(_181)<br/>StorageLive(_182)<br/>StorageLive(_183)<br/>StorageLive(_184)<br/>StorageLive(_185)<br/>_662 = const _<br/>_185 = &amp;(*_662)<br/>_184 = &amp;(*_185)<br/>_183 = move _184 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_184)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>StorageLive(_189)<br/>StorageLive(_190)<br/>StorageLive(_191)<br/>StorageLive(_192)<br/>StorageLive(_193)<br/>StorageLive(_194)<br/>StorageLive(_195)<br/>_195 = &amp;(*_17)<br/></td></tr><tr><td align="left">_194 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _195)</td></tr></table>>];
    bb76__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_195)<br/>_193 = &amp;((*_194).27: u8)<br/>_192 = &amp;(*_193)<br/></td></tr><tr><td align="left">_191 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u8&gt;(move _192)</td></tr></table>>];
    bb77__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_192)<br/>StorageLive(_196)<br/>StorageLive(_197)<br/>StorageLive(_198)<br/>StorageLive(_199)<br/>StorageLive(_200)<br/>_200 = &amp;_117<br/></td></tr><tr><td align="left">_199 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _200)</td></tr></table>>];
    bb78__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_200)<br/>_198 = &amp;((*_199).62: u8)<br/>_197 = &amp;(*_198)<br/></td></tr><tr><td align="left">_196 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u8&gt;(move _197)</td></tr></table>>];
    bb79__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_197)<br/>_190 = [move _191, move _196]<br/>StorageDead(_196)<br/>StorageDead(_191)<br/>_189 = &amp;_190<br/>_188 = &amp;(*_189)<br/>_187 = move _188 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_188)<br/></td></tr><tr><td align="left">_182 = Arguments::&lt;'_&gt;::new_v1(move _183, move _187)</td></tr></table>>];
    bb80__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_187)<br/>StorageDead(_183)<br/></td></tr><tr><td align="left">_181 = format(move _182)</td></tr></table>>];
    bb81__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_182)<br/>StorageDead(_199)<br/>StorageDead(_198)<br/>StorageDead(_194)<br/>StorageDead(_193)<br/>StorageDead(_190)<br/>StorageDead(_189)<br/>StorageDead(_185)<br/>_180 = move _181<br/>StorageDead(_181)<br/>_179 = &amp;_180<br/>_178 = &amp;(*_179)<br/></td></tr><tr><td align="left">_177 = &lt;String as Deref&gt;::deref(move _178)</td></tr></table>>];
    bb82__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">_176 = &amp;(*_177)<br/>StorageDead(_178)<br/></td></tr><tr><td align="left">_175 = solana_program::log::sol_log(move _176)</td></tr></table>>];
    bb83__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_176)<br/></td></tr><tr><td align="left">drop(_180)</td></tr></table>>];
    bb84__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_180)<br/>StorageDead(_179)<br/>StorageDead(_177)<br/>StorageDead(_175)<br/>StorageLive(_201)<br/>_201 = _155<br/>_146 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _201)<br/>StorageDead(_201)<br/>StorageDead(_155)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb85__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_147)<br/></td></tr><tr><td align="left">_145 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _146)</td></tr></table>>];
    bb86__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_146)<br/>_202 = discriminant(_145)<br/></td></tr><tr><td align="left">switchInt(move _202)</td></tr></table>>];
    bb87__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageLive(_206)<br/>_206 = ((_145 as Continue).0: ())<br/>_144 = _206<br/>StorageDead(_206)<br/>StorageDead(_145)<br/>StorageDead(_144)<br/>StorageLive(_207)<br/>StorageLive(_208)<br/>StorageLive(_209)<br/>StorageLive(_210)<br/>StorageLive(_211)<br/>StorageLive(_212)<br/>_212 = &amp;_117<br/></td></tr><tr><td align="left">_211 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _212)</td></tr></table>>];
    bb88__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageLive(_203)<br/>_203 = ((_145 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_205)<br/>_205 = _203<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _205)</td></tr></table>>];
    bb89__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_205)<br/>StorageDead(_203)<br/>StorageDead(_145)<br/>StorageDead(_144)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb90__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_212)<br/>_213 = discriminant(((*_211).45: state::perp_market::MarketStatus))<br/></td></tr><tr><td align="left">switchInt(move _213)</td></tr></table>>];
    bb91__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">_210 = const false<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb92__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">_210 = const true<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb93__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left">switchInt(move _210)</td></tr></table>>];
    bb94__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_211)<br/>StorageLive(_214)<br/>_214 = ()<br/>_209 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _214)<br/>StorageDead(_214)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb95__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_211)<br/>StorageLive(_215)<br/>_215 = error::ErrorCode::MarketBeingInitialized<br/>StorageLive(_216)<br/>StorageLive(_217)<br/>StorageLive(_218)<br/>StorageLive(_219)<br/>StorageLive(_220)<br/>StorageLive(_221)<br/>StorageLive(_222)<br/>StorageLive(_223)<br/>StorageLive(_224)<br/>StorageLive(_225)<br/>StorageLive(_226)<br/>_661 = const _<br/>_226 = &amp;(*_661)<br/>_225 = &amp;(*_226)<br/>_224 = move _225 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_225)<br/>StorageLive(_228)<br/>StorageLive(_229)<br/>StorageLive(_230)<br/>StorageLive(_231)<br/>StorageLive(_232)<br/>StorageLive(_233)<br/>StorageLive(_234)<br/>_234 = &amp;_215<br/>_233 = &amp;(*_234)<br/></td></tr><tr><td align="left">_232 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _233)</td></tr></table>>];
    bb96__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_233)<br/>_231 = [move _232]<br/>StorageDead(_232)<br/>_230 = &amp;_231<br/>_229 = &amp;(*_230)<br/>_228 = move _229 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_229)<br/></td></tr><tr><td align="left">_223 = Arguments::&lt;'_&gt;::new_v1(move _224, move _228)</td></tr></table>>];
    bb97__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_228)<br/>StorageDead(_224)<br/></td></tr><tr><td align="left">_222 = format(move _223)</td></tr></table>>];
    bb98__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_223)<br/>StorageDead(_234)<br/>StorageDead(_231)<br/>StorageDead(_230)<br/>StorageDead(_226)<br/>_221 = move _222<br/>StorageDead(_222)<br/>_220 = &amp;_221<br/>_219 = &amp;(*_220)<br/></td></tr><tr><td align="left">_218 = &lt;String as Deref&gt;::deref(move _219)</td></tr></table>>];
    bb99__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">_217 = &amp;(*_218)<br/>StorageDead(_219)<br/></td></tr><tr><td align="left">_216 = solana_program::log::sol_log(move _217)</td></tr></table>>];
    bb100__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_217)<br/></td></tr><tr><td align="left">drop(_221)</td></tr></table>>];
    bb101__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_221)<br/>StorageDead(_220)<br/>StorageDead(_218)<br/>StorageDead(_216)<br/>StorageLive(_235)<br/>StorageLive(_236)<br/>StorageLive(_237)<br/>_237 = const &quot;Market is being initialized&quot;<br/>_236 = &amp;(*_237)<br/></td></tr><tr><td align="left">_235 = solana_program::log::sol_log(move _236)</td></tr></table>>];
    bb102__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_236)<br/>StorageDead(_237)<br/>StorageDead(_235)<br/>StorageLive(_238)<br/>_238 = _215<br/>_209 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _238)<br/>StorageDead(_238)<br/>StorageDead(_215)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb103__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_210)<br/></td></tr><tr><td align="left">_208 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _209)</td></tr></table>>];
    bb104__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_209)<br/>_239 = discriminant(_208)<br/></td></tr><tr><td align="left">switchInt(move _239)</td></tr></table>>];
    bb105__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageLive(_243)<br/>_243 = ((_208 as Continue).0: ())<br/>_207 = _243<br/>StorageDead(_243)<br/>StorageDead(_208)<br/>StorageDead(_207)<br/>StorageLive(_244)<br/>StorageLive(_245)<br/>StorageLive(_246)<br/>StorageLive(_247)<br/>StorageLive(_248)<br/>StorageLive(_249)<br/>StorageLive(_250)<br/>_250 = &amp;mut _117<br/>_249 = &amp;mut (*_250)<br/></td></tr><tr><td align="left">_248 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _249)</td></tr></table>>];
    bb106__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageLive(_240)<br/>_240 = ((_208 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_242)<br/>_242 = _240<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _242)</td></tr></table>>];
    bb107__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_242)<br/>StorageDead(_240)<br/>StorageDead(_208)<br/>StorageDead(_207)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb108__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">_247 = &amp;mut (*_248)<br/>StorageDead(_249)<br/>StorageLive(_251)<br/>StorageLive(_252)<br/>StorageLive(_253)<br/>_253 = &amp;_128<br/>_252 = &amp;(*_253)<br/>_251 = Option::&lt;&amp;OraclePriceData&gt;::Some(move _252)<br/>StorageDead(_252)<br/>StorageLive(_254)<br/>_254 = _38<br/></td></tr><tr><td align="left">_246 = controller::spot_balance::update_spot_market_cumulative_interest(move _247, move _251, move _254)</td></tr></table>>];
    bb109__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageDead(_254)<br/>StorageDead(_251)<br/>StorageDead(_247)<br/></td></tr><tr><td align="left">_245 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _246)</td></tr></table>>];
    bb110__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_246)<br/>_255 = discriminant(_245)<br/></td></tr><tr><td align="left">switchInt(move _255)</td></tr></table>>];
    bb111__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageLive(_259)<br/>_259 = ((_245 as Continue).0: ())<br/>_244 = _259<br/>StorageDead(_259)<br/>StorageDead(_253)<br/>StorageDead(_250)<br/>StorageDead(_248)<br/>StorageDead(_245)<br/>StorageDead(_244)<br/>StorageLive(_260)<br/>StorageLive(_261)<br/>StorageLive(_262)<br/>StorageLive(_263)<br/>StorageLive(_264)<br/>StorageLive(_265)<br/>_265 = &amp;mut (*_17)<br/></td></tr><tr><td align="left">_264 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _265)</td></tr></table>>];
    bb112__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageLive(_256)<br/>_256 = ((_245 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_258)<br/>_258 = _256<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _258)</td></tr></table>>];
    bb113__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageDead(_258)<br/>StorageDead(_256)<br/>StorageDead(_253)<br/>StorageDead(_250)<br/>StorageDead(_248)<br/>StorageDead(_245)<br/>StorageDead(_244)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb114__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">_263 = &amp;mut (*_264)<br/>StorageDead(_265)<br/>StorageLive(_266)<br/>StorageLive(_267)<br/>StorageLive(_268)<br/>_268 = &amp;_117<br/></td></tr><tr><td align="left">_267 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _268)</td></tr></table>>];
    bb115__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageDead(_268)<br/>_266 = ((*_267).42: u16)<br/></td></tr><tr><td align="left">_262 = User::force_get_spot_position_index(move _263, move _266)</td></tr></table>>];
    bb116__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_266)<br/>StorageDead(_263)<br/></td></tr><tr><td align="left">_261 = &lt;std::result::Result&lt;usize, error::ErrorCode&gt; as Try&gt;::branch(move _262)</td></tr></table>>];
    bb117__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageDead(_262)<br/>_269 = discriminant(_261)<br/></td></tr><tr><td align="left">switchInt(move _269)</td></tr></table>>];
    bb118__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageLive(_273)<br/>_273 = ((_261 as Continue).0: usize)<br/>_260 = _273<br/>StorageDead(_273)<br/>StorageDead(_267)<br/>StorageDead(_264)<br/>StorageDead(_261)<br/>StorageLive(_274)<br/>StorageLive(_275)<br/>StorageLive(_276)<br/>StorageLive(_277)<br/>_277 = &amp;(*_17)<br/></td></tr><tr><td align="left">_276 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _277)</td></tr></table>>];
    bb119__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageLive(_270)<br/>_270 = ((_261 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_272)<br/>_272 = _270<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _272)</td></tr></table>>];
    bb120__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageDead(_272)<br/>StorageDead(_270)<br/>StorageDead(_267)<br/>StorageDead(_264)<br/>StorageDead(_261)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb121__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageDead(_277)<br/>StorageLive(_278)<br/>_278 = _260<br/>_279 = Len(((*_276).3: [state::user::SpotPosition; 8]))<br/>_280 = Lt(_278, _279)<br/></td></tr><tr><td align="left">assert(move _280, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _279, _278)</td></tr></table>>];
    bb122__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">_275 = &amp;((*_276).3: [state::user::SpotPosition; 8])[_278]<br/></td></tr><tr><td align="left">_274 = SpotPosition::is_borrow(move _275)</td></tr></table>>];
    bb123__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageDead(_275)<br/>StorageDead(_278)<br/>StorageDead(_276)<br/>StorageLive(_281)<br/>StorageLive(_282)<br/>StorageLive(_283)<br/>StorageLive(_284)<br/>_284 = &amp;_117<br/></td></tr><tr><td align="left">_283 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _284)</td></tr></table>>];
    bb124__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">_282 = &amp;(*_283)<br/>StorageDead(_284)<br/></td></tr><tr><td align="left">_281 = SpotMarket::is_reduce_only(move _282)</td></tr></table>>];
    bb125__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageDead(_282)<br/>StorageDead(_283)<br/>StorageLive(_285)<br/>StorageLive(_286)<br/>_286 = _281<br/></td></tr><tr><td align="left">switchInt(move _286)</td></tr></table>>];
    bb126__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageLive(_287)<br/>_287 = _4<br/></td></tr><tr><td align="left">switchInt(move _287)</td></tr></table>>];
    bb127__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageLive(_288)<br/>StorageLive(_289)<br/>StorageLive(_290)<br/>StorageLive(_291)<br/>_291 = &amp;(*_17)<br/></td></tr><tr><td align="left">_290 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _291)</td></tr></table>>];
    bb128__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageDead(_291)<br/>StorageLive(_292)<br/>_292 = _260<br/>_293 = Len(((*_290).3: [state::user::SpotPosition; 8]))<br/>_294 = Lt(_292, _293)<br/></td></tr><tr><td align="left">assert(move _294, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _293, _292)</td></tr></table>>];
    bb129__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">_289 = &amp;(((*_290).3: [state::user::SpotPosition; 8])[_292].5: state::spot_market::SpotBalanceType)<br/>StorageLive(_295)<br/>_660 = const _<br/>_295 = &amp;(*_660)<br/></td></tr><tr><td align="left">_288 = &lt;SpotBalanceType as PartialEq&gt;::eq(move _289, move _295)</td></tr></table>>];
    bb130__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left">switchInt(move _288)</td></tr></table>>];
    bb131__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageDead(_295)<br/>StorageDead(_292)<br/>StorageDead(_290)<br/>StorageDead(_289)<br/>StorageLive(_297)<br/>StorageLive(_298)<br/>StorageLive(_299)<br/>StorageLive(_300)<br/>StorageLive(_301)<br/>StorageLive(_302)<br/>StorageLive(_303)<br/>StorageLive(_304)<br/>StorageLive(_305)<br/>_305 = &amp;(*_17)<br/></td></tr><tr><td align="left">_304 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _305)</td></tr></table>>];
    bb132__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageDead(_305)<br/>StorageLive(_306)<br/>_306 = _260<br/>_307 = Len(((*_304).3: [state::user::SpotPosition; 8]))<br/>_308 = Lt(_306, _307)<br/></td></tr><tr><td align="left">assert(move _308, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _307, _306)</td></tr></table>>];
    bb133__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">_303 = &amp;((*_304).3: [state::user::SpotPosition; 8])[_306]<br/>StorageLive(_309)<br/>StorageLive(_310)<br/>StorageLive(_311)<br/>StorageLive(_312)<br/>_312 = &amp;_117<br/>_311 = &amp;(*_312)<br/></td></tr><tr><td align="left">_310 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _311)</td></tr></table>>];
    bb134__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">_309 = &amp;(*_310)<br/>StorageDead(_311)<br/></td></tr><tr><td align="left">_302 = SpotPosition::get_token_amount(move _303, move _309)</td></tr></table>>];
    bb135__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageDead(_309)<br/>StorageDead(_303)<br/></td></tr><tr><td align="left">_301 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _302)</td></tr></table>>];
    bb136__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageDead(_302)<br/>_313 = discriminant(_301)<br/></td></tr><tr><td align="left">switchInt(move _313)</td></tr></table>>];
    bb137__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">StorageLive(_317)<br/>_317 = ((_301 as Continue).0: u128)<br/>_300 = _317<br/>StorageDead(_317)<br/></td></tr><tr><td align="left">_299 = &lt;u128 as Cast&gt;::cast::&lt;u64&gt;(move _300)</td></tr></table>>];
    bb138__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">StorageLive(_314)<br/>_314 = ((_301 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_316)<br/>_316 = _314<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _316)</td></tr></table>>];
    bb139__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">StorageDead(_316)<br/>StorageDead(_314)<br/>StorageDead(_300)<br/>StorageDead(_299)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb140__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">StorageDead(_300)<br/></td></tr><tr><td align="left">_298 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _299)</td></tr></table>>];
    bb141__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">StorageDead(_299)<br/>_318 = discriminant(_298)<br/></td></tr><tr><td align="left">switchInt(move _318)</td></tr></table>>];
    bb142__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageLive(_322)<br/>_322 = ((_298 as Continue).0: u64)<br/>_297 = _322<br/>StorageDead(_322)<br/>StorageLive(_323)<br/>_323 = _3<br/></td></tr><tr><td align="left">_285 = &lt;u64 as Ord&gt;::min(move _297, move _323)</td></tr></table>>];
    bb143__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageLive(_319)<br/>_319 = ((_298 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_321)<br/>_321 = _319<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _321)</td></tr></table>>];
    bb144__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">StorageDead(_321)<br/>StorageDead(_319)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb145__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageDead(_323)<br/>StorageDead(_297)<br/>StorageDead(_312)<br/>StorageDead(_310)<br/>StorageDead(_306)<br/>StorageDead(_304)<br/>StorageDead(_301)<br/>StorageDead(_298)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb146__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">StorageDead(_295)<br/>StorageDead(_292)<br/>StorageDead(_290)<br/>StorageDead(_289)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb147__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left" balign="left">_285 = _3<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb148__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left" balign="left">StorageDead(_288)<br/>StorageDead(_287)<br/>StorageDead(_286)<br/>StorageLive(_324)<br/>StorageLive(_325)<br/>StorageLive(_326)<br/>StorageLive(_327)<br/>StorageLive(_328)<br/>StorageLive(_329)<br/>_329 = &amp;mut (*_17)<br/></td></tr><tr><td align="left">_328 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _329)</td></tr></table>>];
    bb149__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">149</td></tr><tr><td align="left" balign="left">_327 = &amp;mut (*_328)<br/>StorageDead(_329)<br/>StorageLive(_330)<br/>_330 = _285<br/>StorageLive(_331)<br/>_331 = (_128.0: i64)<br/>StorageLive(_332)<br/>StorageLive(_333)<br/>StorageLive(_334)<br/>StorageLive(_335)<br/>StorageLive(_336)<br/>StorageLive(_337)<br/>StorageLive(_338)<br/>_338 = &amp;_117<br/></td></tr><tr><td align="left">_337 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _338)</td></tr></table>>];
    bb150__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">150</td></tr><tr><td align="left" balign="left">_336 = (*_337)<br/>StorageDead(_338)<br/></td></tr><tr><td align="left">_335 = SpotMarket::get_precision(move _336)</td></tr></table>>];
    bb151__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">151</td></tr><tr><td align="left" balign="left">StorageDead(_336)<br/></td></tr><tr><td align="left">_334 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _335)</td></tr></table>>];
    bb152__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">152</td></tr><tr><td align="left" balign="left">StorageDead(_335)<br/></td></tr><tr><td align="left">_333 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _334)</td></tr></table>>];
    bb153__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">153</td></tr><tr><td align="left" balign="left">StorageDead(_334)<br/>_339 = discriminant(_333)<br/></td></tr><tr><td align="left">switchInt(move _339)</td></tr></table>>];
    bb154__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">154</td></tr><tr><td align="left" balign="left">StorageLive(_343)<br/>_343 = ((_333 as Continue).0: u128)<br/>_332 = _343<br/>StorageDead(_343)<br/></td></tr><tr><td align="left">_326 = User::increment_total_deposits(move _327, move _330, move _331, move _332)</td></tr></table>>];
    bb155__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">155</td></tr><tr><td align="left" balign="left">StorageLive(_340)<br/>_340 = ((_333 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_342)<br/>_342 = _340<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _342)</td></tr></table>>];
    bb156__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">156</td></tr><tr><td align="left" balign="left">StorageDead(_342)<br/>StorageDead(_340)<br/>StorageDead(_332)<br/>StorageDead(_331)<br/>StorageDead(_330)<br/>StorageDead(_327)<br/>StorageDead(_326)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb157__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">157</td></tr><tr><td align="left" balign="left">StorageDead(_332)<br/>StorageDead(_331)<br/>StorageDead(_330)<br/>StorageDead(_327)<br/></td></tr><tr><td align="left">_325 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _326)</td></tr></table>>];
    bb158__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">158</td></tr><tr><td align="left" balign="left">StorageDead(_326)<br/>_344 = discriminant(_325)<br/></td></tr><tr><td align="left">switchInt(move _344)</td></tr></table>>];
    bb159__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">159</td></tr><tr><td align="left" balign="left">StorageLive(_348)<br/>_348 = ((_325 as Continue).0: ())<br/>_324 = _348<br/>StorageDead(_348)<br/>StorageDead(_337)<br/>StorageDead(_333)<br/>StorageDead(_328)<br/>StorageDead(_325)<br/>StorageDead(_324)<br/>StorageLive(_349)<br/>StorageLive(_350)<br/>StorageLive(_351)<br/>_351 = &amp;(*_17)<br/></td></tr><tr><td align="left">_350 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _351)</td></tr></table>>];
    bb160__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">160</td></tr><tr><td align="left" balign="left">StorageLive(_345)<br/>_345 = ((_325 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_347)<br/>_347 = _345<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _347)</td></tr></table>>];
    bb161__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">161</td></tr><tr><td align="left" balign="left">StorageDead(_347)<br/>StorageDead(_345)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb162__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">162</td></tr><tr><td align="left" balign="left">StorageDead(_351)<br/>_349 = ((*_350).7: u64)<br/>StorageDead(_350)<br/>StorageLive(_352)<br/>StorageLive(_353)<br/>StorageLive(_354)<br/>_354 = &amp;(*_17)<br/></td></tr><tr><td align="left">_353 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _354)</td></tr></table>>];
    bb163__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">163</td></tr><tr><td align="left" balign="left">StorageDead(_354)<br/>_352 = ((*_353).8: u64)<br/>StorageDead(_353)<br/>StorageLive(_355)<br/>StorageLive(_356)<br/>StorageLive(_357)<br/>_357 = &amp;mut (*_17)<br/></td></tr><tr><td align="left">_356 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _357)</td></tr></table>>];
    bb164__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">164</td></tr><tr><td align="left" balign="left">StorageDead(_357)<br/>StorageLive(_358)<br/>_358 = _260<br/>_359 = Len(((*_356).3: [state::user::SpotPosition; 8]))<br/>_360 = Lt(_358, _359)<br/></td></tr><tr><td align="left">assert(move _360, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _359, _358)</td></tr></table>>];
    bb165__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">165</td></tr><tr><td align="left" balign="left">_355 = &amp;mut ((*_356).3: [state::user::SpotPosition; 8])[_358]<br/>StorageLive(_361)<br/>StorageLive(_362)<br/>StorageLive(_363)<br/>StorageLive(_364)<br/>StorageLive(_365)<br/>_365 = _285<br/>_364 = move _365 as u128 (IntToInt)<br/>StorageDead(_365)<br/>StorageLive(_366)<br/>StorageLive(_367)<br/>_659 = const _<br/>_367 = &amp;(*_659)<br/>_366 = &amp;(*_367)<br/>StorageLive(_369)<br/>StorageLive(_370)<br/>StorageLive(_371)<br/>StorageLive(_372)<br/>_372 = &amp;mut _117<br/>_371 = &amp;mut (*_372)<br/></td></tr><tr><td align="left">_370 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _371)</td></tr></table>>];
    bb166__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">166</td></tr><tr><td align="left" balign="left">_369 = &amp;mut (*_370)<br/>StorageDead(_371)<br/>StorageLive(_373)<br/>_373 = &amp;mut (*_355)<br/>StorageLive(_374)<br/>_374 = Option::&lt;u128&gt;::None<br/></td></tr><tr><td align="left">_363 = update_spot_balances_and_cumulative_deposits(move _364, move _366, move _369, move _373, const false, move _374)</td></tr></table>>];
    bb167__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">167</td></tr><tr><td align="left" balign="left">StorageDead(_374)<br/>StorageDead(_373)<br/>StorageDead(_369)<br/>StorageDead(_366)<br/>StorageDead(_364)<br/></td></tr><tr><td align="left">_362 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _363)</td></tr></table>>];
    bb168__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">168</td></tr><tr><td align="left" balign="left">StorageDead(_363)<br/>_375 = discriminant(_362)<br/></td></tr><tr><td align="left">switchInt(move _375)</td></tr></table>>];
    bb169__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">169</td></tr><tr><td align="left" balign="left">StorageLive(_379)<br/>_379 = ((_362 as Continue).0: ())<br/>_361 = _379<br/>StorageDead(_379)<br/>StorageDead(_372)<br/>StorageDead(_370)<br/>StorageDead(_367)<br/>StorageDead(_362)<br/>StorageDead(_361)<br/>StorageLive(_380)<br/>StorageLive(_381)<br/>StorageLive(_382)<br/>StorageLive(_383)<br/>_383 = &amp;(*_355)<br/>StorageLive(_384)<br/>StorageLive(_385)<br/>StorageLive(_386)<br/>StorageLive(_387)<br/>_387 = &amp;_117<br/>_386 = &amp;(*_387)<br/></td></tr><tr><td align="left">_385 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _386)</td></tr></table>>];
    bb170__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">170</td></tr><tr><td align="left" balign="left">StorageLive(_376)<br/>_376 = ((_362 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_378)<br/>_378 = _376<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _378)</td></tr></table>>];
    bb171__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">171</td></tr><tr><td align="left" balign="left">StorageDead(_378)<br/>StorageDead(_376)<br/>StorageDead(_372)<br/>StorageDead(_370)<br/>StorageDead(_367)<br/>StorageDead(_362)<br/>StorageDead(_361)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb172__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">172</td></tr><tr><td align="left" balign="left">_384 = &amp;(*_385)<br/>StorageDead(_386)<br/></td></tr><tr><td align="left">_382 = SpotPosition::get_token_amount(move _383, move _384)</td></tr></table>>];
    bb173__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">173</td></tr><tr><td align="left" balign="left">StorageDead(_384)<br/>StorageDead(_383)<br/></td></tr><tr><td align="left">_381 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _382)</td></tr></table>>];
    bb174__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">174</td></tr><tr><td align="left" balign="left">StorageDead(_382)<br/>_388 = discriminant(_381)<br/></td></tr><tr><td align="left">switchInt(move _388)</td></tr></table>>];
    bb175__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">175</td></tr><tr><td align="left" balign="left">StorageLive(_392)<br/>_392 = ((_381 as Continue).0: u128)<br/>_380 = _392<br/>StorageDead(_392)<br/>StorageDead(_387)<br/>StorageDead(_385)<br/>StorageDead(_381)<br/>StorageLive(_393)<br/>StorageLive(_394)<br/>StorageLive(_395)<br/>_395 = _380<br/>_394 = Eq(move _395, const 0_u128)<br/></td></tr><tr><td align="left">switchInt(move _394)</td></tr></table>>];
    bb176__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">176</td></tr><tr><td align="left" balign="left">StorageLive(_389)<br/>_389 = ((_381 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_391)<br/>_391 = _389<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _391)</td></tr></table>>];
    bb177__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">177</td></tr><tr><td align="left" balign="left">StorageDead(_391)<br/>StorageDead(_389)<br/>StorageDead(_387)<br/>StorageDead(_385)<br/>StorageDead(_381)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb178__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">178</td></tr><tr><td align="left" balign="left">StorageDead(_395)<br/>StorageLive(_396)<br/>StorageLive(_397)<br/>StorageLive(_398)<br/>StorageLive(_399)<br/>StorageLive(_400)<br/>_400 = ((*_355).0: u64)<br/>_399 = Eq(move _400, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _399)</td></tr></table>>];
    bb179__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">179</td></tr><tr><td align="left" balign="left">StorageDead(_395)<br/>_393 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb180__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">180</td></tr><tr><td align="left" balign="left">StorageDead(_400)<br/>StorageLive(_401)<br/>_401 = ()<br/>_398 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _401)<br/>StorageDead(_401)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb181__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">181</td></tr><tr><td align="left" balign="left">StorageDead(_400)<br/>StorageLive(_402)<br/>_402 = error::ErrorCode::InvalidSpotPosition<br/>StorageLive(_403)<br/>StorageLive(_404)<br/>StorageLive(_405)<br/>StorageLive(_406)<br/>StorageLive(_407)<br/>StorageLive(_408)<br/>StorageLive(_409)<br/>StorageLive(_410)<br/>StorageLive(_411)<br/>StorageLive(_412)<br/>StorageLive(_413)<br/>_658 = const _<br/>_413 = &amp;(*_658)<br/>_412 = &amp;(*_413)<br/>_411 = move _412 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_412)<br/>StorageLive(_415)<br/>StorageLive(_416)<br/>StorageLive(_417)<br/>StorageLive(_418)<br/>StorageLive(_419)<br/>StorageLive(_420)<br/>StorageLive(_421)<br/>_421 = &amp;_402<br/>_420 = &amp;(*_421)<br/></td></tr><tr><td align="left">_419 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _420)</td></tr></table>>];
    bb182__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">182</td></tr><tr><td align="left" balign="left">StorageDead(_420)<br/>_418 = [move _419]<br/>StorageDead(_419)<br/>_417 = &amp;_418<br/>_416 = &amp;(*_417)<br/>_415 = move _416 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_416)<br/></td></tr><tr><td align="left">_410 = Arguments::&lt;'_&gt;::new_v1(move _411, move _415)</td></tr></table>>];
    bb183__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">183</td></tr><tr><td align="left" balign="left">StorageDead(_415)<br/>StorageDead(_411)<br/></td></tr><tr><td align="left">_409 = format(move _410)</td></tr></table>>];
    bb184__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">184</td></tr><tr><td align="left" balign="left">StorageDead(_410)<br/>StorageDead(_421)<br/>StorageDead(_418)<br/>StorageDead(_417)<br/>StorageDead(_413)<br/>_408 = move _409<br/>StorageDead(_409)<br/>_407 = &amp;_408<br/>_406 = &amp;(*_407)<br/></td></tr><tr><td align="left">_405 = &lt;String as Deref&gt;::deref(move _406)</td></tr></table>>];
    bb185__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">185</td></tr><tr><td align="left" balign="left">_404 = &amp;(*_405)<br/>StorageDead(_406)<br/></td></tr><tr><td align="left">_403 = solana_program::log::sol_log(move _404)</td></tr></table>>];
    bb186__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">186</td></tr><tr><td align="left" balign="left">StorageDead(_404)<br/></td></tr><tr><td align="left">drop(_408)</td></tr></table>>];
    bb187__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">187</td></tr><tr><td align="left" balign="left">StorageDead(_408)<br/>StorageDead(_407)<br/>StorageDead(_405)<br/>StorageDead(_403)<br/>StorageLive(_422)<br/>StorageLive(_423)<br/>StorageLive(_424)<br/>StorageLive(_425)<br/>StorageLive(_426)<br/>StorageLive(_427)<br/>StorageLive(_428)<br/>StorageLive(_429)<br/>StorageLive(_430)<br/>StorageLive(_431)<br/>StorageLive(_432)<br/>_657 = const _<br/>_432 = &amp;(*_657)<br/>_431 = &amp;(*_432)<br/>_430 = move _431 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_431)<br/>StorageLive(_434)<br/>StorageLive(_435)<br/>StorageLive(_436)<br/>StorageLive(_437)<br/>StorageLive(_438)<br/>StorageLive(_439)<br/>StorageLive(_440)<br/>_440 = &amp;((*_355).0: u64)<br/>_439 = &amp;(*_440)<br/></td></tr><tr><td align="left">_438 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _439)</td></tr></table>>];
    bb188__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">188</td></tr><tr><td align="left" balign="left">StorageDead(_439)<br/>StorageLive(_441)<br/>StorageLive(_442)<br/>StorageLive(_443)<br/>_443 = &amp;_380<br/>_442 = &amp;(*_443)<br/></td></tr><tr><td align="left">_441 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u128&gt;(move _442)</td></tr></table>>];
    bb189__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">189</td></tr><tr><td align="left" balign="left">StorageDead(_442)<br/>_437 = [move _438, move _441]<br/>StorageDead(_441)<br/>StorageDead(_438)<br/>_436 = &amp;_437<br/>_435 = &amp;(*_436)<br/>_434 = move _435 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_435)<br/></td></tr><tr><td align="left">_429 = Arguments::&lt;'_&gt;::new_v1(move _430, move _434)</td></tr></table>>];
    bb190__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">190</td></tr><tr><td align="left" balign="left">StorageDead(_434)<br/>StorageDead(_430)<br/></td></tr><tr><td align="left">_428 = format(move _429)</td></tr></table>>];
    bb191__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">191</td></tr><tr><td align="left" balign="left">StorageDead(_429)<br/>StorageDead(_443)<br/>StorageDead(_440)<br/>StorageDead(_437)<br/>StorageDead(_436)<br/>StorageDead(_432)<br/>_427 = move _428<br/>StorageDead(_428)<br/>_426 = &amp;_427<br/>_425 = &amp;(*_426)<br/></td></tr><tr><td align="left">_424 = &lt;String as Deref&gt;::deref(move _425)</td></tr></table>>];
    bb192__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">192</td></tr><tr><td align="left" balign="left">_423 = &amp;(*_424)<br/>StorageDead(_425)<br/></td></tr><tr><td align="left">_422 = solana_program::log::sol_log(move _423)</td></tr></table>>];
    bb193__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">193</td></tr><tr><td align="left" balign="left">StorageDead(_423)<br/></td></tr><tr><td align="left">drop(_427)</td></tr></table>>];
    bb194__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">194</td></tr><tr><td align="left" balign="left">StorageDead(_427)<br/>StorageDead(_426)<br/>StorageDead(_424)<br/>StorageDead(_422)<br/>StorageLive(_444)<br/>_444 = _402<br/>_398 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _444)<br/>StorageDead(_444)<br/>StorageDead(_402)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb195__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">195</td></tr><tr><td align="left" balign="left">StorageDead(_399)<br/></td></tr><tr><td align="left">_397 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _398)</td></tr></table>>];
    bb196__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">196</td></tr><tr><td align="left" balign="left">StorageDead(_398)<br/>_445 = discriminant(_397)<br/></td></tr><tr><td align="left">switchInt(move _445)</td></tr></table>>];
    bb197__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">197</td></tr><tr><td align="left" balign="left">StorageLive(_449)<br/>_449 = ((_397 as Continue).0: ())<br/>_396 = _449<br/>StorageDead(_449)<br/>StorageDead(_397)<br/>StorageDead(_396)<br/>_393 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb198__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">198</td></tr><tr><td align="left" balign="left">StorageLive(_446)<br/>_446 = ((_397 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_448)<br/>_448 = _446<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _448)</td></tr></table>>];
    bb199__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">199</td></tr><tr><td align="left" balign="left">StorageDead(_448)<br/>StorageDead(_446)<br/>StorageDead(_397)<br/>StorageDead(_396)<br/>StorageDead(_394)<br/>StorageDead(_393)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb200__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">200</td></tr><tr><td align="left" balign="left">StorageDead(_394)<br/>StorageDead(_393)<br/>StorageLive(_450)<br/>StorageLive(_451)<br/>StorageLive(_452)<br/>_452 = &amp;((*_355).5: state::spot_market::SpotBalanceType)<br/>StorageLive(_453)<br/>_656 = const _<br/>_453 = &amp;(*_656)<br/></td></tr><tr><td align="left">_451 = &lt;SpotBalanceType as PartialEq&gt;::eq(move _452, move _453)</td></tr></table>>];
    bb201__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">201</td></tr><tr><td align="left">switchInt(move _451)</td></tr></table>>];
    bb202__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">202</td></tr><tr><td align="left" balign="left">StorageDead(_453)<br/>StorageDead(_452)<br/>StorageLive(_455)<br/>StorageLive(_456)<br/>_456 = ((*_355).0: u64)<br/>_455 = Gt(move _456, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _455)</td></tr></table>>];
    bb203__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">203</td></tr><tr><td align="left" balign="left">StorageDead(_456)<br/>StorageLive(_457)<br/>StorageLive(_458)<br/>StorageLive(_459)<br/>StorageLive(_460)<br/>StorageLive(_461)<br/>StorageLive(_462)<br/>_462 = &amp;_117<br/></td></tr><tr><td align="left">_461 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _462)</td></tr></table>>];
    bb204__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">204</td></tr><tr><td align="left" balign="left">StorageDead(_462)<br/>_463 = discriminant(((*_461).45: state::perp_market::MarketStatus))<br/></td></tr><tr><td align="left">switchInt(move _463)</td></tr></table>>];
    bb205__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">205</td></tr><tr><td align="left" balign="left">_460 = const false<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb206__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">206</td></tr><tr><td align="left" balign="left">_460 = const true<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb207__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">207</td></tr><tr><td align="left">switchInt(move _460)</td></tr></table>>];
    bb208__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">208</td></tr><tr><td align="left" balign="left">StorageDead(_461)<br/>StorageLive(_464)<br/>_464 = ()<br/>_459 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _464)<br/>StorageDead(_464)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb209__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">209</td></tr><tr><td align="left" balign="left">StorageDead(_461)<br/>StorageLive(_465)<br/>_465 = error::ErrorCode::MarketActionPaused<br/>StorageLive(_466)<br/>StorageLive(_467)<br/>StorageLive(_468)<br/>StorageLive(_469)<br/>StorageLive(_470)<br/>StorageLive(_471)<br/>StorageLive(_472)<br/>StorageLive(_473)<br/>StorageLive(_474)<br/>StorageLive(_475)<br/>StorageLive(_476)<br/>_655 = const _<br/>_476 = &amp;(*_655)<br/>_475 = &amp;(*_476)<br/>_474 = move _475 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_475)<br/>StorageLive(_478)<br/>StorageLive(_479)<br/>StorageLive(_480)<br/>StorageLive(_481)<br/>StorageLive(_482)<br/>StorageLive(_483)<br/>StorageLive(_484)<br/>_484 = &amp;_465<br/>_483 = &amp;(*_484)<br/></td></tr><tr><td align="left">_482 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _483)</td></tr></table>>];
    bb210__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">210</td></tr><tr><td align="left" balign="left">StorageDead(_483)<br/>_481 = [move _482]<br/>StorageDead(_482)<br/>_480 = &amp;_481<br/>_479 = &amp;(*_480)<br/>_478 = move _479 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_479)<br/></td></tr><tr><td align="left">_473 = Arguments::&lt;'_&gt;::new_v1(move _474, move _478)</td></tr></table>>];
    bb211__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">211</td></tr><tr><td align="left" balign="left">StorageDead(_478)<br/>StorageDead(_474)<br/></td></tr><tr><td align="left">_472 = format(move _473)</td></tr></table>>];
    bb212__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">212</td></tr><tr><td align="left" balign="left">StorageDead(_473)<br/>StorageDead(_484)<br/>StorageDead(_481)<br/>StorageDead(_480)<br/>StorageDead(_476)<br/>_471 = move _472<br/>StorageDead(_472)<br/>_470 = &amp;_471<br/>_469 = &amp;(*_470)<br/></td></tr><tr><td align="left">_468 = &lt;String as Deref&gt;::deref(move _469)</td></tr></table>>];
    bb213__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">213</td></tr><tr><td align="left" balign="left">_467 = &amp;(*_468)<br/>StorageDead(_469)<br/></td></tr><tr><td align="left">_466 = solana_program::log::sol_log(move _467)</td></tr></table>>];
    bb214__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">214</td></tr><tr><td align="left" balign="left">StorageDead(_467)<br/></td></tr><tr><td align="left">drop(_471)</td></tr></table>>];
    bb215__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">215</td></tr><tr><td align="left" balign="left">StorageDead(_471)<br/>StorageDead(_470)<br/>StorageDead(_468)<br/>StorageDead(_466)<br/>StorageLive(_485)<br/>StorageLive(_486)<br/>StorageLive(_487)<br/>StorageLive(_488)<br/>StorageLive(_489)<br/>StorageLive(_490)<br/>StorageLive(_491)<br/>StorageLive(_492)<br/>StorageLive(_493)<br/>StorageLive(_494)<br/>StorageLive(_495)<br/>_654 = const _<br/>_495 = &amp;(*_654)<br/>_494 = &amp;(*_495)<br/>_493 = move _494 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_494)<br/></td></tr><tr><td align="left">_492 = Arguments::&lt;'_&gt;::new_const(move _493)</td></tr></table>>];
    bb216__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">216</td></tr><tr><td align="left" balign="left">StorageDead(_493)<br/></td></tr><tr><td align="left">_491 = format(move _492)</td></tr></table>>];
    bb217__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">217</td></tr><tr><td align="left" balign="left">StorageDead(_492)<br/>StorageDead(_495)<br/>_490 = move _491<br/>StorageDead(_491)<br/>_489 = &amp;_490<br/>_488 = &amp;(*_489)<br/></td></tr><tr><td align="left">_487 = &lt;String as Deref&gt;::deref(move _488)</td></tr></table>>];
    bb218__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">218</td></tr><tr><td align="left" balign="left">_486 = &amp;(*_487)<br/>StorageDead(_488)<br/></td></tr><tr><td align="left">_485 = solana_program::log::sol_log(move _486)</td></tr></table>>];
    bb219__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">219</td></tr><tr><td align="left" balign="left">StorageDead(_486)<br/></td></tr><tr><td align="left">drop(_490)</td></tr></table>>];
    bb220__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">220</td></tr><tr><td align="left" balign="left">StorageDead(_490)<br/>StorageDead(_489)<br/>StorageDead(_487)<br/>StorageDead(_485)<br/>StorageLive(_497)<br/>_497 = _465<br/>_459 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _497)<br/>StorageDead(_497)<br/>StorageDead(_465)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb221__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">221</td></tr><tr><td align="left" balign="left">StorageDead(_460)<br/></td></tr><tr><td align="left">_458 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _459)</td></tr></table>>];
    bb222__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">222</td></tr><tr><td align="left" balign="left">StorageDead(_459)<br/>_498 = discriminant(_458)<br/></td></tr><tr><td align="left">switchInt(move _498)</td></tr></table>>];
    bb223__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">223</td></tr><tr><td align="left" balign="left">StorageLive(_502)<br/>_502 = ((_458 as Continue).0: ())<br/>_457 = _502<br/>StorageDead(_502)<br/>StorageDead(_458)<br/>StorageDead(_457)<br/>_450 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb224__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">224</td></tr><tr><td align="left" balign="left">StorageLive(_499)<br/>_499 = ((_458 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_501)<br/>_501 = _499<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _501)</td></tr></table>>];
    bb225__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">225</td></tr><tr><td align="left" balign="left">StorageDead(_501)<br/>StorageDead(_499)<br/>StorageDead(_458)<br/>StorageDead(_457)<br/>StorageDead(_455)<br/>StorageDead(_451)<br/>StorageDead(_450)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb226__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">226</td></tr><tr><td align="left" balign="left">StorageDead(_456)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb227__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">227</td></tr><tr><td align="left" balign="left">StorageDead(_453)<br/>StorageDead(_452)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb228__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">228</td></tr><tr><td align="left" balign="left">_450 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb229__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">229</td></tr><tr><td align="left" balign="left">StorageDead(_455)<br/>StorageDead(_451)<br/>StorageDead(_450)<br/>StorageLive(_503)<br/>StorageLive(_504)<br/>_681 = const false<br/>_504 = move _117<br/></td></tr><tr><td align="left">_503 = std::mem::drop::&lt;RefMut&lt;'_, SpotMarket&gt;&gt;(move _504)</td></tr></table>>];
    bb230__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">230</td></tr><tr><td align="left" balign="left">StorageDead(_504)<br/>StorageDead(_503)<br/>StorageLive(_505)<br/>StorageLive(_506)<br/>StorageLive(_507)<br/>StorageLive(_508)<br/>StorageLive(_509)<br/>_509 = &amp;(*_17)<br/></td></tr><tr><td align="left">_508 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _509)</td></tr></table>>];
    bb231__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">231</td></tr><tr><td align="left" balign="left">_507 = &amp;(*_508)<br/>StorageDead(_509)<br/></td></tr><tr><td align="left">_506 = User::is_being_liquidated(move _507)</td></tr></table>>];
    bb232__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">232</td></tr><tr><td align="left">switchInt(move _506)</td></tr></table>>];
    bb233__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">233</td></tr><tr><td align="left" balign="left">StorageDead(_508)<br/>StorageDead(_507)<br/>StorageLive(_510)<br/>StorageLive(_511)<br/>StorageLive(_512)<br/>StorageLive(_513)<br/>StorageLive(_514)<br/>StorageLive(_515)<br/>_515 = &amp;(*_17)<br/></td></tr><tr><td align="left">_514 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _515)</td></tr></table>>];
    bb234__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">234</td></tr><tr><td align="left" balign="left">_513 = &amp;(*_514)<br/>StorageDead(_515)<br/>StorageLive(_516)<br/>StorageLive(_517)<br/>_517 = &amp;_44<br/>_516 = &amp;(*_517)<br/>StorageLive(_518)<br/>StorageLive(_519)<br/>_519 = &amp;_45<br/>_518 = &amp;(*_519)<br/>StorageLive(_520)<br/>StorageLive(_521)<br/>_521 = &amp;mut _46<br/>_520 = &amp;mut (*_521)<br/>StorageLive(_522)<br/>StorageLive(_523)<br/>StorageLive(_524)<br/>_672 = deref_copy (*_29)<br/>_725 = (((_672.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_524 = &amp;(*_725)<br/></td></tr><tr><td align="left">_523 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _524)</td></tr></table>>];
    bb235__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">235</td></tr><tr><td align="left" balign="left">StorageDead(_524)<br/>_522 = ((*_523).11: u32)<br/></td></tr><tr><td align="left">_512 = is_user_being_liquidated(move _513, move _516, move _518, move _520, move _522)</td></tr></table>>];
    bb236__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">236</td></tr><tr><td align="left" balign="left">StorageDead(_522)<br/>StorageDead(_520)<br/>StorageDead(_518)<br/>StorageDead(_516)<br/>StorageDead(_513)<br/></td></tr><tr><td align="left">_511 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _512)</td></tr></table>>];
    bb237__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">237</td></tr><tr><td align="left" balign="left">StorageDead(_512)<br/>_525 = discriminant(_511)<br/></td></tr><tr><td align="left">switchInt(move _525)</td></tr></table>>];
    bb238__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">238</td></tr><tr><td align="left" balign="left">StorageLive(_529)<br/>_529 = ((_511 as Continue).0: bool)<br/>_510 = _529<br/>StorageDead(_529)<br/>StorageDead(_523)<br/>StorageDead(_521)<br/>StorageDead(_519)<br/>StorageDead(_517)<br/>StorageDead(_514)<br/>StorageDead(_511)<br/>StorageLive(_530)<br/>_530 = _510<br/></td></tr><tr><td align="left">switchInt(move _530)</td></tr></table>>];
    bb239__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">239</td></tr><tr><td align="left" balign="left">StorageLive(_526)<br/>_526 = ((_511 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_528)<br/>_528 = _526<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _528)</td></tr></table>>];
    bb240__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">240</td></tr><tr><td align="left" balign="left">StorageDead(_528)<br/>StorageDead(_526)<br/>StorageDead(_523)<br/>StorageDead(_521)<br/>StorageDead(_519)<br/>StorageDead(_517)<br/>StorageDead(_514)<br/>StorageDead(_511)<br/>StorageDead(_510)<br/>StorageDead(_506)<br/>StorageDead(_505)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb241__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">241</td></tr><tr><td align="left" balign="left">_505 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb242__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">242</td></tr><tr><td align="left" balign="left">StorageLive(_531)<br/>StorageLive(_532)<br/>StorageLive(_533)<br/>StorageLive(_534)<br/>_534 = &amp;mut (*_17)<br/></td></tr><tr><td align="left">_533 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _534)</td></tr></table>>];
    bb243__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">243</td></tr><tr><td align="left" balign="left">_532 = &amp;mut (*_533)<br/>StorageDead(_534)<br/></td></tr><tr><td align="left">_531 = User::exit_liquidation(move _532)</td></tr></table>>];
    bb244__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">244</td></tr><tr><td align="left" balign="left">StorageDead(_532)<br/>StorageDead(_533)<br/>StorageDead(_531)<br/>_505 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb245__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">245</td></tr><tr><td align="left" balign="left">StorageDead(_530)<br/>StorageDead(_510)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb246__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">246</td></tr><tr><td align="left" balign="left">StorageDead(_508)<br/>StorageDead(_507)<br/>_505 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb247__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">247</td></tr><tr><td align="left" balign="left">StorageDead(_506)<br/>StorageDead(_505)<br/>StorageLive(_535)<br/>StorageLive(_536)<br/>StorageLive(_537)<br/>StorageLive(_538)<br/>_538 = &amp;mut (*_17)<br/></td></tr><tr><td align="left">_537 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _538)</td></tr></table>>];
    bb248__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">248</td></tr><tr><td align="left" balign="left">_536 = &amp;mut (*_537)<br/>StorageDead(_538)<br/>StorageLive(_539)<br/>_539 = _39<br/></td></tr><tr><td align="left">_535 = User::update_last_active_slot(move _536, move _539)</td></tr></table>>];
    bb249__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">249</td></tr><tr><td align="left" balign="left">StorageDead(_539)<br/>StorageDead(_536)<br/>StorageDead(_537)<br/>StorageDead(_535)<br/>StorageLive(_540)<br/>StorageLive(_541)<br/>StorageLive(_542)<br/>StorageLive(_543)<br/>StorageLive(_544)<br/>_544 = &amp;_45<br/>StorageLive(_545)<br/>StorageLive(_546)<br/>_546 = &amp;_2<br/>_545 = &amp;(*_546)<br/></td></tr><tr><td align="left">_543 = SpotMarketMap::&lt;'_&gt;::get_ref_mut(move _544, move _545)</td></tr></table>>];
    bb250__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">250</td></tr><tr><td align="left" balign="left">StorageDead(_545)<br/>StorageDead(_544)<br/></td></tr><tr><td align="left">_542 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _543)</td></tr></table>>];
    bb251__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">251</td></tr><tr><td align="left" balign="left">StorageDead(_543)<br/>_547 = discriminant(_542)<br/></td></tr><tr><td align="left">switchInt(move _547)</td></tr></table>>];
    bb252__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">252</td></tr><tr><td align="left" balign="left">StorageLive(_551)<br/>_551 = move ((_542 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_541 = move _551<br/>StorageDead(_551)<br/>_540 = &amp;mut _541<br/>_700 = discriminant(_542)<br/>StorageDead(_546)<br/>StorageDead(_542)<br/>StorageLive(_552)<br/>StorageLive(_553)<br/>StorageLive(_554)<br/>StorageLive(_555)<br/>StorageLive(_556)<br/>_673 = deref_copy (_1.1: &amp;mut instructions::user::Deposit&lt;'_&gt;)<br/>_556 = &amp;((*_673).6: anchor_lang::prelude::Interface&lt;'_, anchor_spl::token_interface::TokenInterface&gt;)<br/>_555 = &amp;(*_556)<br/>StorageLive(_557)<br/>StorageLive(_558)<br/>_674 = deref_copy (_1.1: &amp;mut instructions::user::Deposit&lt;'_&gt;)<br/>_558 = &amp;((*_674).5: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_675 = deref_copy (*_558)<br/>_726 = (((_675.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_557 = &amp;(*_726)<br/>StorageLive(_559)<br/>StorageLive(_560)<br/>_676 = deref_copy (_1.1: &amp;mut instructions::user::Deposit&lt;'_&gt;)<br/>_560 = &amp;((*_676).4: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_677 = deref_copy (*_560)<br/>_727 = (((_677.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_559 = &amp;(*_727)<br/>StorageLive(_561)<br/>StorageLive(_562)<br/>StorageLive(_563)<br/>StorageLive(_564)<br/>_678 = deref_copy (_1.1: &amp;mut instructions::user::Deposit&lt;'_&gt;)<br/>_564 = &amp;((*_678).3: anchor_lang::prelude::Signer&lt;'_&gt;)<br/>_563 = &amp;(*_564)<br/></td></tr><tr><td align="left">_562 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as Deref&gt;::deref(move _563)</td></tr></table>>];
    bb253__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">253</td></tr><tr><td align="left" balign="left">StorageLive(_548)<br/>_548 = ((_542 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_550)<br/>_550 = _548<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _550)</td></tr></table>>];
    bb254__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">254</td></tr><tr><td align="left" balign="left">StorageDead(_550)<br/>StorageDead(_548)<br/>_698 = discriminant(_542)<br/>StorageDead(_546)<br/>StorageDead(_542)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb255__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">255</td></tr><tr><td align="left" balign="left">_561 = &amp;(*_562)<br/>StorageDead(_563)<br/>StorageLive(_565)<br/>_565 = _285<br/>StorageLive(_566)<br/>StorageLive(_567)<br/>_567 = &amp;_68<br/>_566 = &amp;(*_567)<br/>StorageLive(_568)<br/>StorageLive(_569)<br/>StorageLive(_570)<br/>StorageLive(_571)<br/>StorageLive(_572)<br/>_572 = &amp;(*_540)<br/></td></tr><tr><td align="left">_571 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _572)</td></tr></table>>];
    bb256__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">256</td></tr><tr><td align="left" balign="left">_570 = &amp;(*_571)<br/>StorageDead(_572)<br/></td></tr><tr><td align="left">_569 = SpotMarket::has_transfer_hook(move _570)</td></tr></table>>];
    bb257__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">257</td></tr><tr><td align="left">switchInt(move _569)</td></tr></table>>];
    bb258__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">258</td></tr><tr><td align="left" balign="left">StorageDead(_571)<br/>StorageDead(_570)<br/>StorageLive(_573)<br/>_573 = &amp;mut (*_40)<br/>_568 = Option::&lt;&amp;mut Peekable&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;&gt;::Some(move _573)<br/>StorageDead(_573)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb259__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">259</td></tr><tr><td align="left" balign="left">StorageDead(_571)<br/>StorageDead(_570)<br/>_568 = Option::&lt;&amp;mut Peekable&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;&gt;::None<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb260__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">260</td></tr><tr><td align="left" balign="left">StorageDead(_569)<br/></td></tr><tr><td align="left">_554 = receive(move _555, move _557, move _559, move _561, move _565, move _566, move _568)</td></tr></table>>];
    bb261__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">261</td></tr><tr><td align="left" balign="left">StorageDead(_568)<br/>StorageDead(_566)<br/>StorageDead(_565)<br/>StorageDead(_561)<br/>StorageDead(_559)<br/>StorageDead(_557)<br/>StorageDead(_555)<br/></td></tr><tr><td align="left">_553 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _554)</td></tr></table>>];
    bb262__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">262</td></tr><tr><td align="left" balign="left">StorageDead(_554)<br/>_574 = discriminant(_553)<br/></td></tr><tr><td align="left">switchInt(move _574)</td></tr></table>>];
    bb263__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">263</td></tr><tr><td align="left" balign="left">StorageLive(_578)<br/>_578 = ((_553 as Continue).0: ())<br/>_552 = _578<br/>StorageDead(_578)<br/>_702 = discriminant(_553)<br/>StorageDead(_567)<br/>StorageDead(_564)<br/>StorageDead(_562)<br/>StorageDead(_560)<br/>StorageDead(_558)<br/>StorageDead(_556)<br/>StorageDead(_553)<br/>StorageDead(_552)<br/>StorageLive(_579)<br/>StorageLive(_580)<br/>StorageLive(_581)<br/>StorageLive(_582)<br/>_679 = deref_copy (_1.1: &amp;mut instructions::user::Deposit&lt;'_&gt;)<br/>_680 = deref_copy ((*_679).4: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_728 = (((_680.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_582 = &amp;mut (*_728)<br/></td></tr><tr><td align="left">_581 = anchor_lang::prelude::InterfaceAccount::&lt;'_, anchor_spl::token_interface::TokenAccount&gt;::reload(move _582)</td></tr></table>>];
    bb264__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">264</td></tr><tr><td align="left" balign="left">StorageLive(_575)<br/>_575 = move ((_553 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_577)<br/>_577 = move _575<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _577)</td></tr></table>>];
    bb265__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">265</td></tr><tr><td align="left" balign="left">StorageDead(_577)<br/>StorageDead(_575)<br/>_708 = discriminant(_553)<br/>StorageDead(_567)<br/>StorageDead(_564)<br/>StorageDead(_562)<br/>StorageDead(_560)<br/>StorageDead(_558)<br/>StorageDead(_556)<br/>StorageDead(_553)<br/>StorageDead(_552)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb266__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">266</td></tr><tr><td align="left" balign="left">StorageDead(_582)<br/></td></tr><tr><td align="left">_580 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _581)</td></tr></table>>];
    bb267__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">267</td></tr><tr><td align="left" balign="left">StorageDead(_581)<br/>_583 = discriminant(_580)<br/></td></tr><tr><td align="left">switchInt(move _583)</td></tr></table>>];
    bb268__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">268</td></tr><tr><td align="left" balign="left">StorageLive(_587)<br/>_587 = ((_580 as Continue).0: ())<br/>_579 = _587<br/>StorageDead(_587)<br/>_704 = discriminant(_580)<br/>StorageDead(_580)<br/>StorageDead(_579)<br/>StorageLive(_588)<br/>StorageLive(_589)<br/>StorageLive(_590)<br/>StorageLive(_591)<br/>_591 = &amp;(*_540)<br/></td></tr><tr><td align="left">_590 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _591)</td></tr></table>>];
    bb269__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">269</td></tr><tr><td align="left" balign="left">StorageLive(_584)<br/>_584 = move ((_580 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_586)<br/>_586 = move _584<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _586)</td></tr></table>>];
    bb270__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">270</td></tr><tr><td align="left" balign="left">StorageDead(_586)<br/>StorageDead(_584)<br/>_706 = discriminant(_580)<br/>StorageDead(_580)<br/>StorageDead(_579)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb271__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">271</td></tr><tr><td align="left" balign="left">StorageDead(_591)<br/>_589 = ((*_590).30: u64)<br/>StorageDead(_590)<br/>StorageLive(_592)<br/>StorageLive(_593)<br/>StorageLive(_594)<br/>StorageLive(_595)<br/>_595 = _589<br/></td></tr><tr><td align="left">_594 = core::num::&lt;impl u64&gt;::checked_add(move _595, const 1_u64)</td></tr></table>>];
    bb272__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">272</td></tr><tr><td align="left" balign="left">StorageDead(_595)<br/>StorageLive(_596)<br/>_596 = Option::&lt;u64&gt;::Some(const 1_u64)<br/></td></tr><tr><td align="left">_593 = Option::&lt;u64&gt;::or(move _594, move _596)</td></tr></table>>];
    bb273__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">273</td></tr><tr><td align="left" balign="left">StorageDead(_596)<br/>StorageDead(_594)<br/></td></tr><tr><td align="left">_592 = Option::&lt;u64&gt;::unwrap(move _593)</td></tr></table>>];
    bb274__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">274</td></tr><tr><td align="left" balign="left">StorageDead(_593)<br/>StorageLive(_597)<br/>StorageLive(_598)<br/>_598 = &amp;mut (*_540)<br/></td></tr><tr><td align="left">_597 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _598)</td></tr></table>>];
    bb275__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">275</td></tr><tr><td align="left" balign="left">StorageDead(_598)<br/>((*_597).30: u64) = move _592<br/>StorageDead(_592)<br/>StorageDead(_597)<br/>_588 = _589<br/>StorageDead(_589)<br/>StorageLive(_599)<br/>_599 = (_128.0: i64)<br/>StorageLive(_600)<br/>StorageLive(_601)<br/>_601 = _274<br/></td></tr><tr><td align="left">switchInt(move _601)</td></tr></table>>];
    bb276__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">276</td></tr><tr><td align="left" balign="left">_600 = DepositExplanation::RepayBorrow<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb277__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">277</td></tr><tr><td align="left" balign="left">_600 = DepositExplanation::None<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb278__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">278</td></tr><tr><td align="left" balign="left">StorageDead(_601)<br/>StorageLive(_602)<br/>StorageLive(_603)<br/>_603 = _38<br/>StorageLive(_604)<br/>_604 = _588<br/>StorageLive(_605)<br/>StorageLive(_606)<br/>StorageLive(_607)<br/>_607 = &amp;(*_17)<br/></td></tr><tr><td align="left">_606 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _607)</td></tr></table>>];
    bb279__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">279</td></tr><tr><td align="left" balign="left">StorageDead(_607)<br/>_605 = ((*_606).0: anchor_lang::prelude::Pubkey)<br/>StorageLive(_608)<br/>_608 = _15<br/>StorageLive(_609)<br/>_609 = DepositDirection::Deposit<br/>StorageLive(_610)<br/>_610 = _285<br/>StorageLive(_611)<br/>_611 = _599<br/>StorageLive(_612)<br/>StorageLive(_613)<br/>StorageLive(_614)<br/>_614 = &amp;(*_540)<br/></td></tr><tr><td align="left">_613 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _614)</td></tr></table>>];
    bb280__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">280</td></tr><tr><td align="left" balign="left">StorageDead(_614)<br/>_612 = ((*_613).11: u128)<br/>StorageLive(_615)<br/>StorageLive(_616)<br/>StorageLive(_617)<br/>_617 = &amp;(*_540)<br/></td></tr><tr><td align="left">_616 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _617)</td></tr></table>>];
    bb281__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">281</td></tr><tr><td align="left" balign="left">StorageDead(_617)<br/>_615 = ((*_616).12: u128)<br/>StorageLive(_618)<br/>StorageLive(_619)<br/>StorageLive(_620)<br/>_620 = &amp;(*_540)<br/></td></tr><tr><td align="left">_619 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _620)</td></tr></table>>];
    bb282__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">282</td></tr><tr><td align="left" balign="left">StorageDead(_620)<br/>_618 = ((*_619).13: u128)<br/>StorageLive(_621)<br/>StorageLive(_622)<br/>StorageLive(_623)<br/>_623 = &amp;(*_540)<br/></td></tr><tr><td align="left">_622 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _623)</td></tr></table>>];
    bb283__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">283</td></tr><tr><td align="left" balign="left">StorageDead(_623)<br/>_621 = ((*_622).14: u128)<br/>StorageLive(_624)<br/>_624 = _349<br/>StorageLive(_625)<br/>_625 = _352<br/>StorageLive(_626)<br/>_626 = _2<br/>StorageLive(_627)<br/>_627 = _600<br/>StorageLive(_628)<br/>_628 = Option::&lt;anchor_lang::prelude::Pubkey&gt;::None<br/>_602 = DepositRecord { ts: move _603, user_authority: move _605, user: move _608, direction: move _609, deposit_record_id: move _604, amount: move _610, market_index: move _626, oracle_price: move _611, market_deposit_balance: move _612, market_withdraw_balance: move _615, market_cumulative_deposit_interest: move _618, market_cumulative_borrow_interest: move _621, total_deposits_after: move _624, total_withdraws_after: move _625, explanation: move _627, transfer_user: move _628 }<br/>StorageDead(_628)<br/>StorageDead(_627)<br/>StorageDead(_626)<br/>StorageDead(_625)<br/>StorageDead(_624)<br/>StorageDead(_621)<br/>StorageDead(_618)<br/>StorageDead(_615)<br/>StorageDead(_612)<br/>StorageDead(_611)<br/>StorageDead(_610)<br/>StorageDead(_609)<br/>StorageDead(_608)<br/>StorageDead(_605)<br/>StorageDead(_604)<br/>StorageDead(_603)<br/>StorageDead(_622)<br/>StorageDead(_619)<br/>StorageDead(_616)<br/>StorageDead(_613)<br/>StorageDead(_606)<br/>StorageLive(_629)<br/>StorageLive(_630)<br/>StorageLive(_631)<br/>StorageLive(_632)<br/>StorageLive(_633)<br/>StorageLive(_634)<br/>StorageLive(_635)<br/>StorageLive(_636)<br/>StorageLive(_637)<br/>StorageLive(_638)<br/>StorageLive(_639)<br/>StorageLive(_640)<br/>StorageLive(_641)<br/>_641 = &amp;_602<br/>_640 = &amp;(*_641)<br/></td></tr><tr><td align="left">_639 = &lt;DepositRecord as anchor_lang::Event&gt;::data(move _640)</td></tr></table>>];
    bb284__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">284</td></tr><tr><td align="left" balign="left">StorageDead(_640)<br/>_638 = &amp;_639<br/>_637 = &amp;(*_638)<br/></td></tr><tr><td align="left">_636 = &lt;Vec&lt;u8&gt; as Deref&gt;::deref(move _637)</td></tr></table>>];
    bb285__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">285</td></tr><tr><td align="left" balign="left">_635 = &amp;(*_636)<br/>StorageDead(_637)<br/>_634 = [move _635]<br/>StorageDead(_635)<br/>_633 = &amp;_634<br/>_632 = &amp;(*_633)<br/>_631 = move _632 as &amp;[&amp;[u8]] (PointerCoercion(Unsize))<br/>StorageDead(_632)<br/></td></tr><tr><td align="left">_630 = solana_program::log::sol_log_data(move _631)</td></tr></table>>];
    bb286__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">286</td></tr><tr><td align="left" balign="left">StorageDead(_631)<br/></td></tr><tr><td align="left">drop(_639)</td></tr></table>>];
    bb287__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">287</td></tr><tr><td align="left" balign="left">StorageDead(_641)<br/>StorageDead(_639)<br/>StorageDead(_638)<br/>StorageDead(_636)<br/>StorageDead(_634)<br/>StorageDead(_633)<br/>StorageDead(_630)<br/>_629 = const ()<br/>StorageDead(_629)<br/>StorageLive(_642)<br/>StorageLive(_643)<br/>StorageLive(_644)<br/>StorageLive(_645)<br/>StorageLive(_646)<br/>StorageLive(_647)<br/>_647 = &amp;(*_540)<br/></td></tr><tr><td align="left">_646 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _647)</td></tr></table>>];
    bb288__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">288</td></tr><tr><td align="left" balign="left">_645 = &amp;(*_646)<br/>StorageDead(_647)<br/></td></tr><tr><td align="left">_644 = SpotMarket::validate_max_token_deposits_and_borrows(move _645, const false)</td></tr></table>>];
    bb289__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">289</td></tr><tr><td align="left" balign="left">StorageDead(_645)<br/></td></tr><tr><td align="left">_643 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _644)</td></tr></table>>];
    bb290__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">290</td></tr><tr><td align="left" balign="left">StorageDead(_644)<br/>_648 = discriminant(_643)<br/></td></tr><tr><td align="left">switchInt(move _648)</td></tr></table>>];
    bb291__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">291</td></tr><tr><td align="left" balign="left">StorageLive(_652)<br/>_652 = ((_643 as Continue).0: ())<br/>_642 = _652<br/>StorageDead(_652)<br/>StorageDead(_646)<br/>StorageDead(_643)<br/>StorageDead(_642)<br/>StorageLive(_653)<br/>_653 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _653)<br/>StorageDead(_653)<br/>StorageDead(_602)<br/>StorageDead(_600)<br/>StorageDead(_599)<br/>StorageDead(_588)<br/></td></tr><tr><td align="left">drop(_541)</td></tr></table>>];
    bb292__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">292</td></tr><tr><td align="left" balign="left">StorageLive(_649)<br/>_649 = ((_643 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_651)<br/>_651 = _649<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _651)</td></tr></table>>];
    bb293__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">293</td></tr><tr><td align="left" balign="left">StorageDead(_651)<br/>StorageDead(_649)<br/>StorageDead(_646)<br/>StorageDead(_643)<br/>StorageDead(_642)<br/>StorageDead(_602)<br/>StorageDead(_600)<br/>StorageDead(_599)<br/>StorageDead(_588)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb294__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">294</td></tr><tr><td align="left" balign="left">StorageDead(_541)<br/>StorageDead(_540)<br/>StorageDead(_380)<br/>StorageDead(_358)<br/>StorageDead(_356)<br/>StorageDead(_355)<br/>StorageDead(_352)<br/>StorageDead(_349)<br/>StorageDead(_285)<br/>StorageDead(_281)<br/>StorageDead(_274)<br/>StorageDead(_260)<br/>StorageDead(_128)<br/>_681 = const false<br/>StorageDead(_117)<br/>StorageDead(_68)<br/></td></tr><tr><td align="left">drop(_46)</td></tr></table>>];
    bb295__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">295</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/></td></tr><tr><td align="left">drop(_45)</td></tr></table>>];
    bb296__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">296</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/></td></tr><tr><td align="left">drop(_44)</td></tr></table>>];
    bb297__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">297</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_41)<br/>StorageDead(_40)<br/>StorageDead(_39)<br/>StorageDead(_38)<br/>StorageDead(_30)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">drop(_18)</td></tr></table>>];
    bb298__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">298</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_17)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb299__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">299</td></tr><tr><td align="left">drop(_541)</td></tr></table>>];
    bb300__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">300</td></tr><tr><td align="left" balign="left">StorageDead(_541)<br/>StorageDead(_540)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb301__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">301</td></tr><tr><td align="left" balign="left">StorageDead(_380)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb302__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">302</td></tr><tr><td align="left" balign="left">StorageDead(_358)<br/>StorageDead(_356)<br/>StorageDead(_355)<br/>StorageDead(_352)<br/>StorageDead(_349)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb303__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">303</td></tr><tr><td align="left" balign="left">StorageDead(_337)<br/>StorageDead(_333)<br/>StorageDead(_328)<br/>StorageDead(_325)<br/>StorageDead(_324)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb304__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">304</td></tr><tr><td align="left" balign="left">StorageDead(_297)<br/>StorageDead(_312)<br/>StorageDead(_310)<br/>StorageDead(_306)<br/>StorageDead(_304)<br/>StorageDead(_301)<br/>StorageDead(_298)<br/>StorageDead(_288)<br/>StorageDead(_287)<br/>StorageDead(_286)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb305__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">305</td></tr><tr><td align="left" balign="left">StorageDead(_285)<br/>StorageDead(_281)<br/>StorageDead(_274)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb306__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">306</td></tr><tr><td align="left" balign="left">StorageDead(_260)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb307__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">307</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/></td></tr><tr><td align="left">switchInt(_681)</td></tr></table>>];
    bb308__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">308</td></tr><tr><td align="left" balign="left">_681 = const false<br/>StorageDead(_117)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb309__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">309</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/></td></tr><tr><td align="left">drop(_46)</td></tr></table>>];
    bb310__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">310</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/></td></tr><tr><td align="left">drop(_45)</td></tr></table>>];
    bb311__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">311</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/></td></tr><tr><td align="left">drop(_44)</td></tr></table>>];
    bb312__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">312</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb313__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">313</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">drop(_53)</td></tr></table>>];
    bb314__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">314</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_52)<br/>StorageDead(_48)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb315__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">315</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_40)<br/>StorageDead(_39)<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb316__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">316</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">drop(_18)</td></tr></table>>];
    bb317__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">317</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_17)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb318__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">318</td></tr><tr><td align="left">return</td></tr></table>>];
    bb319__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">319 (cleanup)</td></tr><tr><td align="left">drop(_639)</td></tr></table>>];
    bb320__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">320 (cleanup)</td></tr><tr><td align="left">drop(_541)</td></tr></table>>];
    bb321__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">321 (cleanup)</td></tr><tr><td align="left">drop(_490)</td></tr></table>>];
    bb322__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">322 (cleanup)</td></tr><tr><td align="left">drop(_471)</td></tr></table>>];
    bb323__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">323 (cleanup)</td></tr><tr><td align="left">drop(_427)</td></tr></table>>];
    bb324__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">324 (cleanup)</td></tr><tr><td align="left">drop(_408)</td></tr></table>>];
    bb325__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">325 (cleanup)</td></tr><tr><td align="left">drop(_221)</td></tr></table>>];
    bb326__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">326 (cleanup)</td></tr><tr><td align="left">drop(_180)</td></tr></table>>];
    bb327__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">327 (cleanup)</td></tr><tr><td align="left">drop(_161)</td></tr></table>>];
    bb328__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">328 (cleanup)</td></tr><tr><td align="left">drop(_97)</td></tr></table>>];
    bb329__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">329 (cleanup)</td></tr><tr><td align="left">drop(_53)</td></tr></table>>];
    bb330__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">330 (cleanup)</td></tr><tr><td align="left">drop(_46)</td></tr></table>>];
    bb331__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">331 (cleanup)</td></tr><tr><td align="left">drop(_45)</td></tr></table>>];
    bb332__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">332 (cleanup)</td></tr><tr><td align="left">drop(_44)</td></tr></table>>];
    bb333__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">333 (cleanup)</td></tr><tr><td align="left">drop(_56)</td></tr></table>>];
    bb334__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">334 (cleanup)</td></tr><tr><td align="left">drop(_53)</td></tr></table>>];
    bb335__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">335 (cleanup)</td></tr><tr><td align="left">drop(_18)</td></tr></table>>];
    bb336__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">336 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb337__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">337</td></tr><tr><td align="left">drop(_117)</td></tr></table>>];
    bb338__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">338 (cleanup)</td></tr><tr><td align="left" balign="left">_714 = discriminant(_580)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb339__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">339 (cleanup)</td></tr><tr><td align="left" balign="left">_715 = discriminant(_553)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb340__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">340 (cleanup)</td></tr><tr><td align="left" balign="left">_716 = discriminant(_542)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb341__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">341 (cleanup)</td></tr><tr><td align="left">drop(_117)</td></tr></table>>];
    bb342__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">342 (cleanup)</td></tr><tr><td align="left">switchInt(_681)</td></tr></table>>];
    bb343__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">343 (cleanup)</td></tr><tr><td align="left" balign="left">_717 = discriminant(_118)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb344__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">344 (cleanup)</td></tr><tr><td align="left" balign="left">_719 = discriminant(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb345__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">345 (cleanup)</td></tr><tr><td align="left" balign="left">_720 = discriminant(_31)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb346__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">346 (cleanup)</td></tr><tr><td align="left" balign="left">_721 = discriminant(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb347__0_11677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">347 (cleanup)</td></tr><tr><td align="left" balign="left">_722 = discriminant(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_11677 -> bb1__0_11677 [label="return"];
    bb1__0_11677 -> bb2__0_11677 [label="return"];
    bb1__0_11677 -> bb336__0_11677 [label="unwind"];
    bb2__0_11677 -> bb3__0_11677 [label="0"];
    bb2__0_11677 -> bb5__0_11677 [label="1"];
    bb2__0_11677 -> bb4__0_11677 [label="otherwise"];
    bb3__0_11677 -> bb7__0_11677 [label="return"];
    bb5__0_11677 -> bb6__0_11677 [label="return"];
    bb5__0_11677 -> bb347__0_11677 [label="unwind"];
    bb6__0_11677 -> bb318__0_11677 [label=""];
    bb7__0_11677 -> bb8__0_11677 [label="return"];
    bb8__0_11677 -> bb9__0_11677 [label="return"];
    bb8__0_11677 -> bb336__0_11677 [label="unwind"];
    bb9__0_11677 -> bb10__0_11677 [label="return"];
    bb9__0_11677 -> bb336__0_11677 [label="unwind"];
    bb10__0_11677 -> bb11__0_11677 [label="0"];
    bb10__0_11677 -> bb12__0_11677 [label="1"];
    bb10__0_11677 -> bb4__0_11677 [label="otherwise"];
    bb11__0_11677 -> bb14__0_11677 [label="return"];
    bb11__0_11677 -> bb335__0_11677 [label="unwind"];
    bb12__0_11677 -> bb13__0_11677 [label="return"];
    bb12__0_11677 -> bb346__0_11677 [label="unwind"];
    bb13__0_11677 -> bb317__0_11677 [label=""];
    bb14__0_11677 -> bb15__0_11677 [label="return"];
    bb14__0_11677 -> bb335__0_11677 [label="unwind"];
    bb15__0_11677 -> bb16__0_11677 [label="0"];
    bb15__0_11677 -> bb17__0_11677 [label="1"];
    bb15__0_11677 -> bb4__0_11677 [label="otherwise"];
    bb16__0_11677 -> bb19__0_11677 [label="return"];
    bb16__0_11677 -> bb335__0_11677 [label="unwind"];
    bb17__0_11677 -> bb18__0_11677 [label="return"];
    bb17__0_11677 -> bb345__0_11677 [label="unwind"];
    bb18__0_11677 -> bb316__0_11677 [label=""];
    bb19__0_11677 -> bb20__0_11677 [label="return"];
    bb19__0_11677 -> bb335__0_11677 [label="unwind"];
    bb20__0_11677 -> bb21__0_11677 [label="return"];
    bb20__0_11677 -> bb335__0_11677 [label="unwind"];
    bb21__0_11677 -> bb22__0_11677 [label="return"];
    bb21__0_11677 -> bb334__0_11677 [label="unwind"];
    bb22__0_11677 -> bb23__0_11677 [label="return"];
    bb22__0_11677 -> bb333__0_11677 [label="unwind"];
    bb23__0_11677 -> bb24__0_11677 [label="return"];
    bb23__0_11677 -> bb333__0_11677 [label="unwind"];
    bb24__0_11677 -> bb25__0_11677 [label="return"];
    bb24__0_11677 -> bb333__0_11677 [label="unwind"];
    bb25__0_11677 -> bb26__0_11677 [label="0"];
    bb25__0_11677 -> bb27__0_11677 [label="1"];
    bb25__0_11677 -> bb4__0_11677 [label="otherwise"];
    bb26__0_11677 -> bb29__0_11677 [label="return"];
    bb26__0_11677 -> bb329__0_11677 [label="unwind"];
    bb27__0_11677 -> bb28__0_11677 [label="return"];
    bb27__0_11677 -> bb344__0_11677 [label="unwind"];
    bb28__0_11677 -> bb313__0_11677 [label="return"];
    bb28__0_11677 -> bb334__0_11677 [label="unwind"];
    bb29__0_11677 -> bb30__0_11677 [label="return"];
    bb29__0_11677 -> bb330__0_11677 [label="unwind"];
    bb30__0_11677 -> bb31__0_11677 [label="return"];
    bb30__0_11677 -> bb330__0_11677 [label="unwind"];
    bb31__0_11677 -> bb32__0_11677 [label="return"];
    bb31__0_11677 -> bb330__0_11677 [label="unwind"];
    bb32__0_11677 -> bb33__0_11677 [label="0"];
    bb32__0_11677 -> bb34__0_11677 [label="1"];
    bb32__0_11677 -> bb4__0_11677 [label="otherwise"];
    bb33__0_11677 -> bb37__0_11677 [label="0"];
    bb33__0_11677 -> bb36__0_11677 [label="otherwise"];
    bb34__0_11677 -> bb35__0_11677 [label="return"];
    bb34__0_11677 -> bb330__0_11677 [label="unwind"];
    bb35__0_11677 -> bb309__0_11677 [label=""];
    bb36__0_11677 -> bb38__0_11677 [label="return"];
    bb36__0_11677 -> bb330__0_11677 [label="unwind"];
    bb37__0_11677 -> bb39__0_11677 [label="return"];
    bb37__0_11677 -> bb330__0_11677 [label="unwind"];
    bb38__0_11677 -> bb309__0_11677 [label=""];
    bb39__0_11677 -> bb40__0_11677 [label="return"];
    bb39__0_11677 -> bb330__0_11677 [label="unwind"];
    bb40__0_11677 -> bb42__0_11677 [label="0"];
    bb40__0_11677 -> bb41__0_11677 [label="otherwise"];
    bb41__0_11677 -> bb43__0_11677 [label="return"];
    bb41__0_11677 -> bb330__0_11677 [label="unwind"];
    bb42__0_11677 -> bb49__0_11677 [label=""];
    bb43__0_11677 -> bb44__0_11677 [label="return"];
    bb43__0_11677 -> bb330__0_11677 [label="unwind"];
    bb44__0_11677 -> bb45__0_11677 [label="return"];
    bb44__0_11677 -> bb330__0_11677 [label="unwind"];
    bb45__0_11677 -> bb46__0_11677 [label="return"];
    bb45__0_11677 -> bb328__0_11677 [label="unwind"];
    bb46__0_11677 -> bb47__0_11677 [label="return"];
    bb46__0_11677 -> bb328__0_11677 [label="unwind"];
    bb47__0_11677 -> bb48__0_11677 [label="return"];
    bb47__0_11677 -> bb330__0_11677 [label="unwind"];
    bb48__0_11677 -> bb49__0_11677 [label=""];
    bb49__0_11677 -> bb50__0_11677 [label="return"];
    bb49__0_11677 -> bb330__0_11677 [label="unwind"];
    bb50__0_11677 -> bb51__0_11677 [label="0"];
    bb50__0_11677 -> bb52__0_11677 [label="1"];
    bb50__0_11677 -> bb4__0_11677 [label="otherwise"];
    bb51__0_11677 -> bb54__0_11677 [label="return"];
    bb51__0_11677 -> bb330__0_11677 [label="unwind"];
    bb52__0_11677 -> bb53__0_11677 [label="return"];
    bb52__0_11677 -> bb330__0_11677 [label="unwind"];
    bb53__0_11677 -> bb309__0_11677 [label=""];
    bb54__0_11677 -> bb55__0_11677 [label="return"];
    bb54__0_11677 -> bb330__0_11677 [label="unwind"];
    bb55__0_11677 -> bb56__0_11677 [label="0"];
    bb55__0_11677 -> bb57__0_11677 [label="1"];
    bb55__0_11677 -> bb4__0_11677 [label="otherwise"];
    bb56__0_11677 -> bb59__0_11677 [label="return"];
    bb56__0_11677 -> bb342__0_11677 [label="unwind"];
    bb57__0_11677 -> bb58__0_11677 [label="return"];
    bb57__0_11677 -> bb343__0_11677 [label="unwind"];
    bb58__0_11677 -> bb308__0_11677 [label=""];
    bb59__0_11677 -> bb60__0_11677 [label="return"];
    bb59__0_11677 -> bb342__0_11677 [label="unwind"];
    bb60__0_11677 -> bb61__0_11677 [label="return"];
    bb60__0_11677 -> bb342__0_11677 [label="unwind"];
    bb61__0_11677 -> bb62__0_11677 [label="return"];
    bb61__0_11677 -> bb342__0_11677 [label="unwind"];
    bb62__0_11677 -> bb63__0_11677 [label="0"];
    bb62__0_11677 -> bb64__0_11677 [label="1"];
    bb62__0_11677 -> bb4__0_11677 [label="otherwise"];
    bb63__0_11677 -> bb66__0_11677 [label="return"];
    bb63__0_11677 -> bb342__0_11677 [label="unwind"];
    bb64__0_11677 -> bb65__0_11677 [label="return"];
    bb64__0_11677 -> bb342__0_11677 [label="unwind"];
    bb65__0_11677 -> bb307__0_11677 [label=""];
    bb66__0_11677 -> bb67__0_11677 [label="return"];
    bb66__0_11677 -> bb342__0_11677 [label="unwind"];
    bb67__0_11677 -> bb69__0_11677 [label="0"];
    bb67__0_11677 -> bb68__0_11677 [label="otherwise"];
    bb68__0_11677 -> bb85__0_11677 [label=""];
    bb69__0_11677 -> bb70__0_11677 [label="return"];
    bb69__0_11677 -> bb342__0_11677 [label="unwind"];
    bb70__0_11677 -> bb71__0_11677 [label="return"];
    bb70__0_11677 -> bb342__0_11677 [label="unwind"];
    bb71__0_11677 -> bb72__0_11677 [label="return"];
    bb71__0_11677 -> bb342__0_11677 [label="unwind"];
    bb72__0_11677 -> bb73__0_11677 [label="return"];
    bb72__0_11677 -> bb327__0_11677 [label="unwind"];
    bb73__0_11677 -> bb74__0_11677 [label="return"];
    bb73__0_11677 -> bb327__0_11677 [label="unwind"];
    bb74__0_11677 -> bb75__0_11677 [label="return"];
    bb74__0_11677 -> bb342__0_11677 [label="unwind"];
    bb75__0_11677 -> bb76__0_11677 [label="return"];
    bb75__0_11677 -> bb342__0_11677 [label="unwind"];
    bb76__0_11677 -> bb77__0_11677 [label="return"];
    bb76__0_11677 -> bb342__0_11677 [label="unwind"];
    bb77__0_11677 -> bb78__0_11677 [label="return"];
    bb77__0_11677 -> bb342__0_11677 [label="unwind"];
    bb78__0_11677 -> bb79__0_11677 [label="return"];
    bb78__0_11677 -> bb342__0_11677 [label="unwind"];
    bb79__0_11677 -> bb80__0_11677 [label="return"];
    bb79__0_11677 -> bb342__0_11677 [label="unwind"];
    bb80__0_11677 -> bb81__0_11677 [label="return"];
    bb80__0_11677 -> bb342__0_11677 [label="unwind"];
    bb81__0_11677 -> bb82__0_11677 [label="return"];
    bb81__0_11677 -> bb326__0_11677 [label="unwind"];
    bb82__0_11677 -> bb83__0_11677 [label="return"];
    bb82__0_11677 -> bb326__0_11677 [label="unwind"];
    bb83__0_11677 -> bb84__0_11677 [label="return"];
    bb83__0_11677 -> bb342__0_11677 [label="unwind"];
    bb84__0_11677 -> bb85__0_11677 [label=""];
    bb85__0_11677 -> bb86__0_11677 [label="return"];
    bb85__0_11677 -> bb342__0_11677 [label="unwind"];
    bb86__0_11677 -> bb87__0_11677 [label="0"];
    bb86__0_11677 -> bb88__0_11677 [label="1"];
    bb86__0_11677 -> bb4__0_11677 [label="otherwise"];
    bb87__0_11677 -> bb90__0_11677 [label="return"];
    bb87__0_11677 -> bb342__0_11677 [label="unwind"];
    bb88__0_11677 -> bb89__0_11677 [label="return"];
    bb88__0_11677 -> bb342__0_11677 [label="unwind"];
    bb89__0_11677 -> bb307__0_11677 [label=""];
    bb90__0_11677 -> bb92__0_11677 [label="0"];
    bb90__0_11677 -> bb91__0_11677 [label="otherwise"];
    bb91__0_11677 -> bb93__0_11677 [label=""];
    bb92__0_11677 -> bb93__0_11677 [label=""];
    bb93__0_11677 -> bb94__0_11677 [label="0"];
    bb93__0_11677 -> bb95__0_11677 [label="otherwise"];
    bb94__0_11677 -> bb103__0_11677 [label=""];
    bb95__0_11677 -> bb96__0_11677 [label="return"];
    bb95__0_11677 -> bb342__0_11677 [label="unwind"];
    bb96__0_11677 -> bb97__0_11677 [label="return"];
    bb96__0_11677 -> bb342__0_11677 [label="unwind"];
    bb97__0_11677 -> bb98__0_11677 [label="return"];
    bb97__0_11677 -> bb342__0_11677 [label="unwind"];
    bb98__0_11677 -> bb99__0_11677 [label="return"];
    bb98__0_11677 -> bb325__0_11677 [label="unwind"];
    bb99__0_11677 -> bb100__0_11677 [label="return"];
    bb99__0_11677 -> bb325__0_11677 [label="unwind"];
    bb100__0_11677 -> bb101__0_11677 [label="return"];
    bb100__0_11677 -> bb342__0_11677 [label="unwind"];
    bb101__0_11677 -> bb102__0_11677 [label="return"];
    bb101__0_11677 -> bb342__0_11677 [label="unwind"];
    bb102__0_11677 -> bb103__0_11677 [label=""];
    bb103__0_11677 -> bb104__0_11677 [label="return"];
    bb103__0_11677 -> bb342__0_11677 [label="unwind"];
    bb104__0_11677 -> bb105__0_11677 [label="0"];
    bb104__0_11677 -> bb106__0_11677 [label="1"];
    bb104__0_11677 -> bb4__0_11677 [label="otherwise"];
    bb105__0_11677 -> bb108__0_11677 [label="return"];
    bb105__0_11677 -> bb342__0_11677 [label="unwind"];
    bb106__0_11677 -> bb107__0_11677 [label="return"];
    bb106__0_11677 -> bb342__0_11677 [label="unwind"];
    bb107__0_11677 -> bb307__0_11677 [label=""];
    bb108__0_11677 -> bb109__0_11677 [label="return"];
    bb108__0_11677 -> bb342__0_11677 [label="unwind"];
    bb109__0_11677 -> bb110__0_11677 [label="return"];
    bb109__0_11677 -> bb342__0_11677 [label="unwind"];
    bb110__0_11677 -> bb111__0_11677 [label="0"];
    bb110__0_11677 -> bb112__0_11677 [label="1"];
    bb110__0_11677 -> bb4__0_11677 [label="otherwise"];
    bb111__0_11677 -> bb114__0_11677 [label="return"];
    bb111__0_11677 -> bb342__0_11677 [label="unwind"];
    bb112__0_11677 -> bb113__0_11677 [label="return"];
    bb112__0_11677 -> bb342__0_11677 [label="unwind"];
    bb113__0_11677 -> bb307__0_11677 [label=""];
    bb114__0_11677 -> bb115__0_11677 [label="return"];
    bb114__0_11677 -> bb342__0_11677 [label="unwind"];
    bb115__0_11677 -> bb116__0_11677 [label="return"];
    bb115__0_11677 -> bb342__0_11677 [label="unwind"];
    bb116__0_11677 -> bb117__0_11677 [label="return"];
    bb116__0_11677 -> bb342__0_11677 [label="unwind"];
    bb117__0_11677 -> bb118__0_11677 [label="0"];
    bb117__0_11677 -> bb119__0_11677 [label="1"];
    bb117__0_11677 -> bb4__0_11677 [label="otherwise"];
    bb118__0_11677 -> bb121__0_11677 [label="return"];
    bb118__0_11677 -> bb342__0_11677 [label="unwind"];
    bb119__0_11677 -> bb120__0_11677 [label="return"];
    bb119__0_11677 -> bb342__0_11677 [label="unwind"];
    bb120__0_11677 -> bb306__0_11677 [label=""];
    bb121__0_11677 -> bb122__0_11677 [label="success"];
    bb121__0_11677 -> bb342__0_11677 [label="unwind"];
    bb122__0_11677 -> bb123__0_11677 [label="return"];
    bb122__0_11677 -> bb342__0_11677 [label="unwind"];
    bb123__0_11677 -> bb124__0_11677 [label="return"];
    bb123__0_11677 -> bb342__0_11677 [label="unwind"];
    bb124__0_11677 -> bb125__0_11677 [label="return"];
    bb124__0_11677 -> bb342__0_11677 [label="unwind"];
    bb125__0_11677 -> bb126__0_11677 [label="0"];
    bb125__0_11677 -> bb127__0_11677 [label="otherwise"];
    bb126__0_11677 -> bb147__0_11677 [label="0"];
    bb126__0_11677 -> bb127__0_11677 [label="otherwise"];
    bb127__0_11677 -> bb128__0_11677 [label="return"];
    bb127__0_11677 -> bb342__0_11677 [label="unwind"];
    bb128__0_11677 -> bb129__0_11677 [label="success"];
    bb128__0_11677 -> bb342__0_11677 [label="unwind"];
    bb129__0_11677 -> bb130__0_11677 [label="return"];
    bb129__0_11677 -> bb342__0_11677 [label="unwind"];
    bb130__0_11677 -> bb146__0_11677 [label="0"];
    bb130__0_11677 -> bb131__0_11677 [label="otherwise"];
    bb131__0_11677 -> bb132__0_11677 [label="return"];
    bb131__0_11677 -> bb342__0_11677 [label="unwind"];
    bb132__0_11677 -> bb133__0_11677 [label="success"];
    bb132__0_11677 -> bb342__0_11677 [label="unwind"];
    bb133__0_11677 -> bb134__0_11677 [label="return"];
    bb133__0_11677 -> bb342__0_11677 [label="unwind"];
    bb134__0_11677 -> bb135__0_11677 [label="return"];
    bb134__0_11677 -> bb342__0_11677 [label="unwind"];
    bb135__0_11677 -> bb136__0_11677 [label="return"];
    bb135__0_11677 -> bb342__0_11677 [label="unwind"];
    bb136__0_11677 -> bb137__0_11677 [label="0"];
    bb136__0_11677 -> bb138__0_11677 [label="1"];
    bb136__0_11677 -> bb4__0_11677 [label="otherwise"];
    bb137__0_11677 -> bb140__0_11677 [label="return"];
    bb137__0_11677 -> bb342__0_11677 [label="unwind"];
    bb138__0_11677 -> bb139__0_11677 [label="return"];
    bb138__0_11677 -> bb342__0_11677 [label="unwind"];
    bb139__0_11677 -> bb304__0_11677 [label=""];
    bb140__0_11677 -> bb141__0_11677 [label="return"];
    bb140__0_11677 -> bb342__0_11677 [label="unwind"];
    bb141__0_11677 -> bb142__0_11677 [label="0"];
    bb141__0_11677 -> bb143__0_11677 [label="1"];
    bb141__0_11677 -> bb4__0_11677 [label="otherwise"];
    bb142__0_11677 -> bb145__0_11677 [label="return"];
    bb142__0_11677 -> bb342__0_11677 [label="unwind"];
    bb143__0_11677 -> bb144__0_11677 [label="return"];
    bb143__0_11677 -> bb342__0_11677 [label="unwind"];
    bb144__0_11677 -> bb304__0_11677 [label=""];
    bb145__0_11677 -> bb148__0_11677 [label=""];
    bb146__0_11677 -> bb147__0_11677 [label=""];
    bb147__0_11677 -> bb148__0_11677 [label=""];
    bb148__0_11677 -> bb149__0_11677 [label="return"];
    bb148__0_11677 -> bb342__0_11677 [label="unwind"];
    bb149__0_11677 -> bb150__0_11677 [label="return"];
    bb149__0_11677 -> bb342__0_11677 [label="unwind"];
    bb150__0_11677 -> bb151__0_11677 [label="return"];
    bb150__0_11677 -> bb342__0_11677 [label="unwind"];
    bb151__0_11677 -> bb152__0_11677 [label="return"];
    bb151__0_11677 -> bb342__0_11677 [label="unwind"];
    bb152__0_11677 -> bb153__0_11677 [label="return"];
    bb152__0_11677 -> bb342__0_11677 [label="unwind"];
    bb153__0_11677 -> bb154__0_11677 [label="0"];
    bb153__0_11677 -> bb155__0_11677 [label="1"];
    bb153__0_11677 -> bb4__0_11677 [label="otherwise"];
    bb154__0_11677 -> bb157__0_11677 [label="return"];
    bb154__0_11677 -> bb342__0_11677 [label="unwind"];
    bb155__0_11677 -> bb156__0_11677 [label="return"];
    bb155__0_11677 -> bb342__0_11677 [label="unwind"];
    bb156__0_11677 -> bb303__0_11677 [label=""];
    bb157__0_11677 -> bb158__0_11677 [label="return"];
    bb157__0_11677 -> bb342__0_11677 [label="unwind"];
    bb158__0_11677 -> bb159__0_11677 [label="0"];
    bb158__0_11677 -> bb160__0_11677 [label="1"];
    bb158__0_11677 -> bb4__0_11677 [label="otherwise"];
    bb159__0_11677 -> bb162__0_11677 [label="return"];
    bb159__0_11677 -> bb342__0_11677 [label="unwind"];
    bb160__0_11677 -> bb161__0_11677 [label="return"];
    bb160__0_11677 -> bb342__0_11677 [label="unwind"];
    bb161__0_11677 -> bb303__0_11677 [label=""];
    bb162__0_11677 -> bb163__0_11677 [label="return"];
    bb162__0_11677 -> bb342__0_11677 [label="unwind"];
    bb163__0_11677 -> bb164__0_11677 [label="return"];
    bb163__0_11677 -> bb342__0_11677 [label="unwind"];
    bb164__0_11677 -> bb165__0_11677 [label="success"];
    bb164__0_11677 -> bb342__0_11677 [label="unwind"];
    bb165__0_11677 -> bb166__0_11677 [label="return"];
    bb165__0_11677 -> bb342__0_11677 [label="unwind"];
    bb166__0_11677 -> bb167__0_11677 [label="return"];
    bb166__0_11677 -> bb342__0_11677 [label="unwind"];
    bb167__0_11677 -> bb168__0_11677 [label="return"];
    bb167__0_11677 -> bb342__0_11677 [label="unwind"];
    bb168__0_11677 -> bb169__0_11677 [label="0"];
    bb168__0_11677 -> bb170__0_11677 [label="1"];
    bb168__0_11677 -> bb4__0_11677 [label="otherwise"];
    bb169__0_11677 -> bb172__0_11677 [label="return"];
    bb169__0_11677 -> bb342__0_11677 [label="unwind"];
    bb170__0_11677 -> bb171__0_11677 [label="return"];
    bb170__0_11677 -> bb342__0_11677 [label="unwind"];
    bb171__0_11677 -> bb302__0_11677 [label=""];
    bb172__0_11677 -> bb173__0_11677 [label="return"];
    bb172__0_11677 -> bb342__0_11677 [label="unwind"];
    bb173__0_11677 -> bb174__0_11677 [label="return"];
    bb173__0_11677 -> bb342__0_11677 [label="unwind"];
    bb174__0_11677 -> bb175__0_11677 [label="0"];
    bb174__0_11677 -> bb176__0_11677 [label="1"];
    bb174__0_11677 -> bb4__0_11677 [label="otherwise"];
    bb175__0_11677 -> bb179__0_11677 [label="0"];
    bb175__0_11677 -> bb178__0_11677 [label="otherwise"];
    bb176__0_11677 -> bb177__0_11677 [label="return"];
    bb176__0_11677 -> bb342__0_11677 [label="unwind"];
    bb177__0_11677 -> bb301__0_11677 [label=""];
    bb178__0_11677 -> bb181__0_11677 [label="0"];
    bb178__0_11677 -> bb180__0_11677 [label="otherwise"];
    bb179__0_11677 -> bb200__0_11677 [label=""];
    bb180__0_11677 -> bb195__0_11677 [label=""];
    bb181__0_11677 -> bb182__0_11677 [label="return"];
    bb181__0_11677 -> bb342__0_11677 [label="unwind"];
    bb182__0_11677 -> bb183__0_11677 [label="return"];
    bb182__0_11677 -> bb342__0_11677 [label="unwind"];
    bb183__0_11677 -> bb184__0_11677 [label="return"];
    bb183__0_11677 -> bb342__0_11677 [label="unwind"];
    bb184__0_11677 -> bb185__0_11677 [label="return"];
    bb184__0_11677 -> bb324__0_11677 [label="unwind"];
    bb185__0_11677 -> bb186__0_11677 [label="return"];
    bb185__0_11677 -> bb324__0_11677 [label="unwind"];
    bb186__0_11677 -> bb187__0_11677 [label="return"];
    bb186__0_11677 -> bb342__0_11677 [label="unwind"];
    bb187__0_11677 -> bb188__0_11677 [label="return"];
    bb187__0_11677 -> bb342__0_11677 [label="unwind"];
    bb188__0_11677 -> bb189__0_11677 [label="return"];
    bb188__0_11677 -> bb342__0_11677 [label="unwind"];
    bb189__0_11677 -> bb190__0_11677 [label="return"];
    bb189__0_11677 -> bb342__0_11677 [label="unwind"];
    bb190__0_11677 -> bb191__0_11677 [label="return"];
    bb190__0_11677 -> bb342__0_11677 [label="unwind"];
    bb191__0_11677 -> bb192__0_11677 [label="return"];
    bb191__0_11677 -> bb323__0_11677 [label="unwind"];
    bb192__0_11677 -> bb193__0_11677 [label="return"];
    bb192__0_11677 -> bb323__0_11677 [label="unwind"];
    bb193__0_11677 -> bb194__0_11677 [label="return"];
    bb193__0_11677 -> bb342__0_11677 [label="unwind"];
    bb194__0_11677 -> bb195__0_11677 [label=""];
    bb195__0_11677 -> bb196__0_11677 [label="return"];
    bb195__0_11677 -> bb342__0_11677 [label="unwind"];
    bb196__0_11677 -> bb197__0_11677 [label="0"];
    bb196__0_11677 -> bb198__0_11677 [label="1"];
    bb196__0_11677 -> bb4__0_11677 [label="otherwise"];
    bb197__0_11677 -> bb200__0_11677 [label=""];
    bb198__0_11677 -> bb199__0_11677 [label="return"];
    bb198__0_11677 -> bb342__0_11677 [label="unwind"];
    bb199__0_11677 -> bb301__0_11677 [label=""];
    bb200__0_11677 -> bb201__0_11677 [label="return"];
    bb200__0_11677 -> bb342__0_11677 [label="unwind"];
    bb201__0_11677 -> bb227__0_11677 [label="0"];
    bb201__0_11677 -> bb202__0_11677 [label="otherwise"];
    bb202__0_11677 -> bb226__0_11677 [label="0"];
    bb202__0_11677 -> bb203__0_11677 [label="otherwise"];
    bb203__0_11677 -> bb204__0_11677 [label="return"];
    bb203__0_11677 -> bb342__0_11677 [label="unwind"];
    bb204__0_11677 -> bb206__0_11677 [label="1"];
    bb204__0_11677 -> bb205__0_11677 [label="otherwise"];
    bb205__0_11677 -> bb207__0_11677 [label=""];
    bb206__0_11677 -> bb207__0_11677 [label=""];
    bb207__0_11677 -> bb209__0_11677 [label="0"];
    bb207__0_11677 -> bb208__0_11677 [label="otherwise"];
    bb208__0_11677 -> bb221__0_11677 [label=""];
    bb209__0_11677 -> bb210__0_11677 [label="return"];
    bb209__0_11677 -> bb342__0_11677 [label="unwind"];
    bb210__0_11677 -> bb211__0_11677 [label="return"];
    bb210__0_11677 -> bb342__0_11677 [label="unwind"];
    bb211__0_11677 -> bb212__0_11677 [label="return"];
    bb211__0_11677 -> bb342__0_11677 [label="unwind"];
    bb212__0_11677 -> bb213__0_11677 [label="return"];
    bb212__0_11677 -> bb322__0_11677 [label="unwind"];
    bb213__0_11677 -> bb214__0_11677 [label="return"];
    bb213__0_11677 -> bb322__0_11677 [label="unwind"];
    bb214__0_11677 -> bb215__0_11677 [label="return"];
    bb214__0_11677 -> bb342__0_11677 [label="unwind"];
    bb215__0_11677 -> bb216__0_11677 [label="return"];
    bb215__0_11677 -> bb342__0_11677 [label="unwind"];
    bb216__0_11677 -> bb217__0_11677 [label="return"];
    bb216__0_11677 -> bb342__0_11677 [label="unwind"];
    bb217__0_11677 -> bb218__0_11677 [label="return"];
    bb217__0_11677 -> bb321__0_11677 [label="unwind"];
    bb218__0_11677 -> bb219__0_11677 [label="return"];
    bb218__0_11677 -> bb321__0_11677 [label="unwind"];
    bb219__0_11677 -> bb220__0_11677 [label="return"];
    bb219__0_11677 -> bb342__0_11677 [label="unwind"];
    bb220__0_11677 -> bb221__0_11677 [label=""];
    bb221__0_11677 -> bb222__0_11677 [label="return"];
    bb221__0_11677 -> bb342__0_11677 [label="unwind"];
    bb222__0_11677 -> bb223__0_11677 [label="0"];
    bb222__0_11677 -> bb224__0_11677 [label="1"];
    bb222__0_11677 -> bb4__0_11677 [label="otherwise"];
    bb223__0_11677 -> bb229__0_11677 [label=""];
    bb224__0_11677 -> bb225__0_11677 [label="return"];
    bb224__0_11677 -> bb342__0_11677 [label="unwind"];
    bb225__0_11677 -> bb301__0_11677 [label=""];
    bb226__0_11677 -> bb228__0_11677 [label=""];
    bb227__0_11677 -> bb228__0_11677 [label=""];
    bb228__0_11677 -> bb229__0_11677 [label=""];
    bb229__0_11677 -> bb230__0_11677 [label="return"];
    bb229__0_11677 -> bb342__0_11677 [label="unwind"];
    bb230__0_11677 -> bb231__0_11677 [label="return"];
    bb230__0_11677 -> bb342__0_11677 [label="unwind"];
    bb231__0_11677 -> bb232__0_11677 [label="return"];
    bb231__0_11677 -> bb342__0_11677 [label="unwind"];
    bb232__0_11677 -> bb246__0_11677 [label="0"];
    bb232__0_11677 -> bb233__0_11677 [label="otherwise"];
    bb233__0_11677 -> bb234__0_11677 [label="return"];
    bb233__0_11677 -> bb342__0_11677 [label="unwind"];
    bb234__0_11677 -> bb235__0_11677 [label="return"];
    bb234__0_11677 -> bb342__0_11677 [label="unwind"];
    bb235__0_11677 -> bb236__0_11677 [label="return"];
    bb235__0_11677 -> bb342__0_11677 [label="unwind"];
    bb236__0_11677 -> bb237__0_11677 [label="return"];
    bb236__0_11677 -> bb342__0_11677 [label="unwind"];
    bb237__0_11677 -> bb238__0_11677 [label="0"];
    bb237__0_11677 -> bb239__0_11677 [label="1"];
    bb237__0_11677 -> bb4__0_11677 [label="otherwise"];
    bb238__0_11677 -> bb242__0_11677 [label="0"];
    bb238__0_11677 -> bb241__0_11677 [label="otherwise"];
    bb239__0_11677 -> bb240__0_11677 [label="return"];
    bb239__0_11677 -> bb342__0_11677 [label="unwind"];
    bb240__0_11677 -> bb301__0_11677 [label=""];
    bb241__0_11677 -> bb245__0_11677 [label=""];
    bb242__0_11677 -> bb243__0_11677 [label="return"];
    bb242__0_11677 -> bb342__0_11677 [label="unwind"];
    bb243__0_11677 -> bb244__0_11677 [label="return"];
    bb243__0_11677 -> bb342__0_11677 [label="unwind"];
    bb244__0_11677 -> bb245__0_11677 [label=""];
    bb245__0_11677 -> bb247__0_11677 [label=""];
    bb246__0_11677 -> bb247__0_11677 [label=""];
    bb247__0_11677 -> bb248__0_11677 [label="return"];
    bb247__0_11677 -> bb342__0_11677 [label="unwind"];
    bb248__0_11677 -> bb249__0_11677 [label="return"];
    bb248__0_11677 -> bb342__0_11677 [label="unwind"];
    bb249__0_11677 -> bb250__0_11677 [label="return"];
    bb249__0_11677 -> bb342__0_11677 [label="unwind"];
    bb250__0_11677 -> bb251__0_11677 [label="return"];
    bb250__0_11677 -> bb342__0_11677 [label="unwind"];
    bb251__0_11677 -> bb252__0_11677 [label="0"];
    bb251__0_11677 -> bb253__0_11677 [label="1"];
    bb251__0_11677 -> bb4__0_11677 [label="otherwise"];
    bb252__0_11677 -> bb255__0_11677 [label="return"];
    bb252__0_11677 -> bb320__0_11677 [label="unwind"];
    bb253__0_11677 -> bb254__0_11677 [label="return"];
    bb253__0_11677 -> bb340__0_11677 [label="unwind"];
    bb254__0_11677 -> bb300__0_11677 [label=""];
    bb255__0_11677 -> bb256__0_11677 [label="return"];
    bb255__0_11677 -> bb320__0_11677 [label="unwind"];
    bb256__0_11677 -> bb257__0_11677 [label="return"];
    bb256__0_11677 -> bb320__0_11677 [label="unwind"];
    bb257__0_11677 -> bb259__0_11677 [label="0"];
    bb257__0_11677 -> bb258__0_11677 [label="otherwise"];
    bb258__0_11677 -> bb260__0_11677 [label=""];
    bb259__0_11677 -> bb260__0_11677 [label=""];
    bb260__0_11677 -> bb261__0_11677 [label="return"];
    bb260__0_11677 -> bb320__0_11677 [label="unwind"];
    bb261__0_11677 -> bb262__0_11677 [label="return"];
    bb261__0_11677 -> bb320__0_11677 [label="unwind"];
    bb262__0_11677 -> bb263__0_11677 [label="0"];
    bb262__0_11677 -> bb264__0_11677 [label="1"];
    bb262__0_11677 -> bb4__0_11677 [label="otherwise"];
    bb263__0_11677 -> bb266__0_11677 [label="return"];
    bb263__0_11677 -> bb320__0_11677 [label="unwind"];
    bb264__0_11677 -> bb265__0_11677 [label="return"];
    bb264__0_11677 -> bb339__0_11677 [label="unwind"];
    bb265__0_11677 -> bb299__0_11677 [label=""];
    bb266__0_11677 -> bb267__0_11677 [label="return"];
    bb266__0_11677 -> bb320__0_11677 [label="unwind"];
    bb267__0_11677 -> bb268__0_11677 [label="0"];
    bb267__0_11677 -> bb269__0_11677 [label="1"];
    bb267__0_11677 -> bb4__0_11677 [label="otherwise"];
    bb268__0_11677 -> bb271__0_11677 [label="return"];
    bb268__0_11677 -> bb320__0_11677 [label="unwind"];
    bb269__0_11677 -> bb270__0_11677 [label="return"];
    bb269__0_11677 -> bb338__0_11677 [label="unwind"];
    bb270__0_11677 -> bb299__0_11677 [label=""];
    bb271__0_11677 -> bb272__0_11677 [label="return"];
    bb271__0_11677 -> bb320__0_11677 [label="unwind"];
    bb272__0_11677 -> bb273__0_11677 [label="return"];
    bb272__0_11677 -> bb320__0_11677 [label="unwind"];
    bb273__0_11677 -> bb274__0_11677 [label="return"];
    bb273__0_11677 -> bb320__0_11677 [label="unwind"];
    bb274__0_11677 -> bb275__0_11677 [label="return"];
    bb274__0_11677 -> bb320__0_11677 [label="unwind"];
    bb275__0_11677 -> bb277__0_11677 [label="0"];
    bb275__0_11677 -> bb276__0_11677 [label="otherwise"];
    bb276__0_11677 -> bb278__0_11677 [label=""];
    bb277__0_11677 -> bb278__0_11677 [label=""];
    bb278__0_11677 -> bb279__0_11677 [label="return"];
    bb278__0_11677 -> bb320__0_11677 [label="unwind"];
    bb279__0_11677 -> bb280__0_11677 [label="return"];
    bb279__0_11677 -> bb320__0_11677 [label="unwind"];
    bb280__0_11677 -> bb281__0_11677 [label="return"];
    bb280__0_11677 -> bb320__0_11677 [label="unwind"];
    bb281__0_11677 -> bb282__0_11677 [label="return"];
    bb281__0_11677 -> bb320__0_11677 [label="unwind"];
    bb282__0_11677 -> bb283__0_11677 [label="return"];
    bb282__0_11677 -> bb320__0_11677 [label="unwind"];
    bb283__0_11677 -> bb284__0_11677 [label="return"];
    bb283__0_11677 -> bb320__0_11677 [label="unwind"];
    bb284__0_11677 -> bb285__0_11677 [label="return"];
    bb284__0_11677 -> bb319__0_11677 [label="unwind"];
    bb285__0_11677 -> bb286__0_11677 [label="return"];
    bb285__0_11677 -> bb319__0_11677 [label="unwind"];
    bb286__0_11677 -> bb287__0_11677 [label="return"];
    bb286__0_11677 -> bb320__0_11677 [label="unwind"];
    bb287__0_11677 -> bb288__0_11677 [label="return"];
    bb287__0_11677 -> bb320__0_11677 [label="unwind"];
    bb288__0_11677 -> bb289__0_11677 [label="return"];
    bb288__0_11677 -> bb320__0_11677 [label="unwind"];
    bb289__0_11677 -> bb290__0_11677 [label="return"];
    bb289__0_11677 -> bb320__0_11677 [label="unwind"];
    bb290__0_11677 -> bb291__0_11677 [label="0"];
    bb290__0_11677 -> bb292__0_11677 [label="1"];
    bb290__0_11677 -> bb4__0_11677 [label="otherwise"];
    bb291__0_11677 -> bb294__0_11677 [label="return"];
    bb291__0_11677 -> bb342__0_11677 [label="unwind"];
    bb292__0_11677 -> bb293__0_11677 [label="return"];
    bb292__0_11677 -> bb320__0_11677 [label="unwind"];
    bb293__0_11677 -> bb299__0_11677 [label=""];
    bb294__0_11677 -> bb295__0_11677 [label="return"];
    bb294__0_11677 -> bb331__0_11677 [label="unwind"];
    bb295__0_11677 -> bb296__0_11677 [label="return"];
    bb295__0_11677 -> bb332__0_11677 [label="unwind"];
    bb296__0_11677 -> bb297__0_11677 [label="return"];
    bb296__0_11677 -> bb335__0_11677 [label="unwind"];
    bb297__0_11677 -> bb298__0_11677 [label="return"];
    bb297__0_11677 -> bb336__0_11677 [label="unwind"];
    bb298__0_11677 -> bb318__0_11677 [label=""];
    bb299__0_11677 -> bb300__0_11677 [label="return"];
    bb299__0_11677 -> bb342__0_11677 [label="unwind"];
    bb300__0_11677 -> bb301__0_11677 [label=""];
    bb301__0_11677 -> bb302__0_11677 [label=""];
    bb302__0_11677 -> bb305__0_11677 [label=""];
    bb303__0_11677 -> bb305__0_11677 [label=""];
    bb304__0_11677 -> bb305__0_11677 [label=""];
    bb305__0_11677 -> bb306__0_11677 [label=""];
    bb306__0_11677 -> bb307__0_11677 [label=""];
    bb307__0_11677 -> bb308__0_11677 [label="0"];
    bb307__0_11677 -> bb337__0_11677 [label="otherwise"];
    bb308__0_11677 -> bb309__0_11677 [label=""];
    bb309__0_11677 -> bb310__0_11677 [label="return"];
    bb309__0_11677 -> bb331__0_11677 [label="unwind"];
    bb310__0_11677 -> bb311__0_11677 [label="return"];
    bb310__0_11677 -> bb332__0_11677 [label="unwind"];
    bb311__0_11677 -> bb312__0_11677 [label="return"];
    bb311__0_11677 -> bb335__0_11677 [label="unwind"];
    bb312__0_11677 -> bb315__0_11677 [label=""];
    bb313__0_11677 -> bb314__0_11677 [label="return"];
    bb313__0_11677 -> bb335__0_11677 [label="unwind"];
    bb314__0_11677 -> bb315__0_11677 [label=""];
    bb315__0_11677 -> bb316__0_11677 [label=""];
    bb316__0_11677 -> bb317__0_11677 [label="return"];
    bb316__0_11677 -> bb336__0_11677 [label="unwind"];
    bb317__0_11677 -> bb318__0_11677 [label=""];
    bb319__0_11677 -> bb320__0_11677 [label="return"];
    bb320__0_11677 -> bb342__0_11677 [label="return"];
    bb321__0_11677 -> bb342__0_11677 [label="return"];
    bb322__0_11677 -> bb342__0_11677 [label="return"];
    bb323__0_11677 -> bb342__0_11677 [label="return"];
    bb324__0_11677 -> bb342__0_11677 [label="return"];
    bb325__0_11677 -> bb342__0_11677 [label="return"];
    bb326__0_11677 -> bb342__0_11677 [label="return"];
    bb327__0_11677 -> bb342__0_11677 [label="return"];
    bb328__0_11677 -> bb330__0_11677 [label="return"];
    bb329__0_11677 -> bb330__0_11677 [label="return"];
    bb330__0_11677 -> bb331__0_11677 [label="return"];
    bb331__0_11677 -> bb332__0_11677 [label="return"];
    bb332__0_11677 -> bb335__0_11677 [label="return"];
    bb333__0_11677 -> bb334__0_11677 [label="return"];
    bb334__0_11677 -> bb335__0_11677 [label="return"];
    bb335__0_11677 -> bb336__0_11677 [label="return"];
    bb337__0_11677 -> bb308__0_11677 [label="return"];
    bb337__0_11677 -> bb330__0_11677 [label="unwind"];
    bb338__0_11677 -> bb320__0_11677 [label=""];
    bb339__0_11677 -> bb320__0_11677 [label=""];
    bb340__0_11677 -> bb342__0_11677 [label=""];
    bb341__0_11677 -> bb330__0_11677 [label="return"];
    bb342__0_11677 -> bb330__0_11677 [label="0"];
    bb342__0_11677 -> bb341__0_11677 [label="otherwise"];
    bb343__0_11677 -> bb330__0_11677 [label=""];
    bb344__0_11677 -> bb333__0_11677 [label=""];
    bb345__0_11677 -> bb335__0_11677 [label=""];
    bb346__0_11677 -> bb336__0_11677 [label=""];
    bb347__0_11677 -> bb336__0_11677 [label=""];
}
