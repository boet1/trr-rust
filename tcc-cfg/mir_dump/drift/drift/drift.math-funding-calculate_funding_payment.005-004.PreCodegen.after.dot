digraph Mir_0_2304 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_funding_payment(_1: i128, _2: &amp;ReErased state::user::PerpPosition) -&gt; std::result::Result&lt;i64, error::ErrorCode&gt;<br align="left"/>let _3: i128;<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _5: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _6: i128;<br align="left"/>let mut _7: i128;<br align="left"/>let mut _8: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _9: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _10: i64;<br align="left"/>let mut _11: isize;<br align="left"/>let _12: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _13: !;<br align="left"/>let mut _14: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _15: i128;<br align="left"/>let mut _16: isize;<br align="left"/>let _17: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _18: !;<br align="left"/>let mut _19: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _20: i128;<br align="left"/>let _21: ();<br align="left"/>let mut _22: bool;<br align="left"/>let mut _23: i128;<br align="left"/>let mut _24: !;<br align="left"/>let mut _25: i128;<br align="left"/>let mut _26: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _27: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _28: i128;<br align="left"/>let mut _29: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _30: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _31: i128;<br align="left"/>let mut _32: i128;<br align="left"/>let mut _33: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _34: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _35: i64;<br align="left"/>let mut _36: isize;<br align="left"/>let _37: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _38: !;<br align="left"/>let mut _39: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _40: i128;<br align="left"/>let mut _41: isize;<br align="left"/>let _42: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _43: !;<br align="left"/>let mut _44: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _45: i128;<br align="left"/>let mut _46: isize;<br align="left"/>let _47: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _48: !;<br align="left"/>let mut _49: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _50: i128;<br align="left"/>debug amm_cumulative_funding_rate =&gt; _1;<br align="left"/>debug market_position =&gt; _2;<br align="left"/>debug funding_rate_delta =&gt; _3;<br align="left"/>debug residual =&gt; _12;<br align="left"/>debug val =&gt; _15;<br align="left"/>debug residual =&gt; _17;<br align="left"/>debug val =&gt; _20;<br align="left"/>debug residual =&gt; _37;<br align="left"/>debug val =&gt; _40;<br align="left"/>debug residual =&gt; _42;<br align="left"/>debug val =&gt; _45;<br align="left"/>debug residual =&gt; _47;<br align="left"/>debug val =&gt; _50;<br align="left"/>>;
    bb0__0_2304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = _1<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = ((*_2).0: i64)<br/></td></tr><tr><td align="left">_9 = &lt;i64 as Cast&gt;::cast::&lt;i128&gt;(move _10)</td></tr></table>>];
    bb1__0_2304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/></td></tr><tr><td align="left">_8 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _9)</td></tr></table>>];
    bb2__0_2304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>_11 = discriminant(_8)<br/></td></tr><tr><td align="left">switchInt(move _11)</td></tr></table>>];
    bb3__0_2304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_15)<br/>_15 = ((_8 as Continue).0: i128)<br/>_7 = _15<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">_5 = &lt;i128 as SafeMath&gt;::safe_sub(move _6, move _7)</td></tr></table>>];
    bb4__0_2304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_2304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_8 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_14)<br/>_14 = _12<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _14)</td></tr></table>>];
    bb6__0_2304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_12)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_2304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb8__0_2304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_16 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _16)</td></tr></table>>];
    bb9__0_2304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_20)<br/>_20 = ((_4 as Continue).0: i128)<br/>_3 = _20<br/>StorageDead(_20)<br/>StorageDead(_8)<br/>StorageDead(_4)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>_23 = _3<br/>_22 = Eq(move _23, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _22)</td></tr></table>>];
    bb10__0_2304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>_17 = ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_19)<br/>_19 = _17<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _19)</td></tr></table>>];
    bb11__0_2304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_2304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>_0 = std::result::Result::&lt;i64, error::ErrorCode&gt;::Ok(const 0_i64)<br/>StorageDead(_22)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_2304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>_21 = const ()<br/>StorageDead(_22)<br/>StorageDead(_21)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>_31 = _3<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>_35 = ((*_2).1: i64)<br/></td></tr><tr><td align="left">_34 = &lt;i64 as Cast&gt;::cast::&lt;i128&gt;(move _35)</td></tr></table>>];
    bb14__0_2304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/></td></tr><tr><td align="left">_33 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _34)</td></tr></table>>];
    bb15__0_2304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>_36 = discriminant(_33)<br/></td></tr><tr><td align="left">switchInt(move _36)</td></tr></table>>];
    bb16__0_2304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_40)<br/>_40 = ((_33 as Continue).0: i128)<br/>_32 = _40<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">_30 = _calculate_funding_payment(move _31, move _32)</td></tr></table>>];
    bb17__0_2304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_37)<br/>_37 = ((_33 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_39)<br/>_39 = _37<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _39)</td></tr></table>>];
    bb18__0_2304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_37)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_2304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">_29 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _30)</td></tr></table>>];
    bb20__0_2304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>_41 = discriminant(_29)<br/></td></tr><tr><td align="left">switchInt(move _41)</td></tr></table>>];
    bb21__0_2304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_45)<br/>_45 = ((_29 as Continue).0: i128)<br/>_28 = _45<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">_27 = &lt;i128 as SafeMath&gt;::safe_div(move _28, const _)</td></tr></table>>];
    bb22__0_2304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_42)<br/>_42 = ((_29 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_44)<br/>_44 = _42<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _44)</td></tr></table>>];
    bb23__0_2304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_2304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/></td></tr><tr><td align="left">_26 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _27)</td></tr></table>>];
    bb25__0_2304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>_46 = discriminant(_26)<br/></td></tr><tr><td align="left">switchInt(move _46)</td></tr></table>>];
    bb26__0_2304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_50)<br/>_50 = ((_26 as Continue).0: i128)<br/>_25 = _50<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">_0 = &lt;i128 as Cast&gt;::cast::&lt;i64&gt;(move _25)</td></tr></table>>];
    bb27__0_2304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>_47 = ((_26 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_49)<br/>_49 = _47<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _49)</td></tr></table>>];
    bb28__0_2304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_2304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_3)<br/>StorageDead(_33)<br/>StorageDead(_29)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_2304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_2304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_3)<br/>StorageDead(_33)<br/>StorageDead(_29)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_2304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_2304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_2304 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2304 -> bb1__0_2304 [label="return"];
    bb1__0_2304 -> bb2__0_2304 [label="return"];
    bb2__0_2304 -> bb3__0_2304 [label="0"];
    bb2__0_2304 -> bb5__0_2304 [label="1"];
    bb2__0_2304 -> bb4__0_2304 [label="otherwise"];
    bb3__0_2304 -> bb7__0_2304 [label="return"];
    bb5__0_2304 -> bb6__0_2304 [label="return"];
    bb6__0_2304 -> bb32__0_2304 [label=""];
    bb7__0_2304 -> bb8__0_2304 [label="return"];
    bb8__0_2304 -> bb9__0_2304 [label="0"];
    bb8__0_2304 -> bb10__0_2304 [label="1"];
    bb8__0_2304 -> bb4__0_2304 [label="otherwise"];
    bb9__0_2304 -> bb13__0_2304 [label="0"];
    bb9__0_2304 -> bb12__0_2304 [label="otherwise"];
    bb10__0_2304 -> bb11__0_2304 [label="return"];
    bb11__0_2304 -> bb32__0_2304 [label=""];
    bb12__0_2304 -> bb33__0_2304 [label=""];
    bb13__0_2304 -> bb14__0_2304 [label="return"];
    bb14__0_2304 -> bb15__0_2304 [label="return"];
    bb15__0_2304 -> bb16__0_2304 [label="0"];
    bb15__0_2304 -> bb17__0_2304 [label="1"];
    bb15__0_2304 -> bb4__0_2304 [label="otherwise"];
    bb16__0_2304 -> bb19__0_2304 [label="return"];
    bb17__0_2304 -> bb18__0_2304 [label="return"];
    bb18__0_2304 -> bb30__0_2304 [label=""];
    bb19__0_2304 -> bb20__0_2304 [label="return"];
    bb20__0_2304 -> bb21__0_2304 [label="0"];
    bb20__0_2304 -> bb22__0_2304 [label="1"];
    bb20__0_2304 -> bb4__0_2304 [label="otherwise"];
    bb21__0_2304 -> bb24__0_2304 [label="return"];
    bb22__0_2304 -> bb23__0_2304 [label="return"];
    bb23__0_2304 -> bb30__0_2304 [label=""];
    bb24__0_2304 -> bb25__0_2304 [label="return"];
    bb25__0_2304 -> bb26__0_2304 [label="0"];
    bb25__0_2304 -> bb27__0_2304 [label="1"];
    bb25__0_2304 -> bb4__0_2304 [label="otherwise"];
    bb26__0_2304 -> bb29__0_2304 [label="return"];
    bb27__0_2304 -> bb28__0_2304 [label="return"];
    bb28__0_2304 -> bb31__0_2304 [label=""];
    bb29__0_2304 -> bb34__0_2304 [label=""];
    bb30__0_2304 -> bb31__0_2304 [label=""];
    bb31__0_2304 -> bb34__0_2304 [label=""];
    bb32__0_2304 -> bb33__0_2304 [label=""];
    bb33__0_2304 -> bb34__0_2304 [label=""];
}
