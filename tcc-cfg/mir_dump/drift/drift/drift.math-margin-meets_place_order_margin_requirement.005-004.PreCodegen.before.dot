digraph Mir_0_2466 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn math::margin::meets_place_order_margin_requirement(_1: &amp;ReErased state::user::User, _2: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;, _3: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;, _4: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;, _5: bool) -&gt; std::result::Result&lt;(), error::ErrorCode&gt;<br align="left"/>let _6: math::margin::MarginRequirementType;<br align="left"/>let mut _7: bool;<br align="left"/>let _8: state::margin_calculation::MarginContext;<br align="left"/>let mut _9: state::margin_calculation::MarginContext;<br align="left"/>let mut _10: math::margin::MarginRequirementType;<br align="left"/>let _11: state::margin_calculation::MarginCalculation;<br align="left"/>let mut _12: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::margin_calculation::MarginCalculation&gt;;<br align="left"/>let mut _13: std::result::Result&lt;state::margin_calculation::MarginCalculation, error::ErrorCode&gt;;<br align="left"/>let mut _14: &amp;ReErased state::user::User;<br align="left"/>let mut _15: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _16: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _17: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _18: state::margin_calculation::MarginContext;<br align="left"/>let mut _19: isize;<br align="left"/>let _20: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _21: !;<br align="left"/>let mut _22: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _23: state::margin_calculation::MarginCalculation;<br align="left"/>let _24: ();<br align="left"/>let mut _25: bool;<br align="left"/>let mut _26: &amp;ReErased state::margin_calculation::MarginCalculation;<br align="left"/>let mut _27: !;<br align="left"/>let _28: ();<br align="left"/>let mut _29: &amp;ReErased str;<br align="left"/>let _30: &amp;ReErased str;<br align="left"/>let mut _31: &amp;ReErased std::string::String;<br align="left"/>let _32: &amp;ReErased std::string::String;<br align="left"/>let _33: std::string::String;<br align="left"/>let _34: std::string::String;<br align="left"/>let mut _35: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _36: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _37: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _38: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _39: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _40: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _41: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _42: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _43: [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let mut _44: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _45: &amp;ReErased i128;<br align="left"/>let _46: &amp;ReErased i128;<br align="left"/>let mut _47: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _48: &amp;ReErased u128;<br align="left"/>let _49: &amp;ReErased u128;<br align="left"/>let mut _50: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _51: &amp;ReErased math::margin::MarginRequirementType;<br align="left"/>let _52: &amp;ReErased math::margin::MarginRequirementType;<br align="left"/>let mut _53: error::ErrorCode;<br align="left"/>let _54: ();<br align="left"/>let mut _55: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _56: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _57: &amp;ReErased state::user::User;<br align="left"/>let mut _58: state::margin_calculation::MarginCalculation;<br align="left"/>let mut _59: isize;<br align="left"/>let _60: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _61: !;<br align="left"/>let mut _62: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _63: ();<br align="left"/>let mut _64: ();<br align="left"/>let mut _65: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>debug user =&gt; _1;<br align="left"/>debug perp_market_map =&gt; _2;<br align="left"/>debug spot_market_map =&gt; _3;<br align="left"/>debug oracle_map =&gt; _4;<br align="left"/>debug risk_increasing =&gt; _5;<br align="left"/>debug margin_type =&gt; _6;<br align="left"/>debug context =&gt; _8;<br align="left"/>debug calculation =&gt; _11;<br align="left"/>debug residual =&gt; _20;<br align="left"/>debug val =&gt; _23;<br align="left"/>debug res =&gt; _34;<br align="left"/>debug residual =&gt; _60;<br align="left"/>debug val =&gt; _63;<br align="left"/>>;
    bb0__0_2466 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = _5<br/></td></tr><tr><td align="left">switchInt(move _7)</td></tr></table>>];
    bb1__0_2466 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_6 = math::margin::MarginRequirementType::Initial<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb2__0_2466 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">_6 = math::margin::MarginRequirementType::Maintenance<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb3__0_2466 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = _6<br/></td></tr><tr><td align="left">_9 = MarginContext::standard(move _10)</td></tr></table>>];
    bb4__0_2466 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/></td></tr><tr><td align="left">_8 = MarginContext::strict(move _9, const true)</td></tr></table>>];
    bb5__0_2466 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_14 = &amp;(*_1)<br/>StorageLive(_15)<br/>_15 = &amp;(*_2)<br/>StorageLive(_16)<br/>_16 = &amp;(*_3)<br/>StorageLive(_17)<br/>_17 = &amp;mut (*_4)<br/>StorageLive(_18)<br/>_18 = _8<br/></td></tr><tr><td align="left">_13 = math::margin::calculate_margin_requirement_and_total_collateral_and_liability_info(move _14, move _15, move _16, move _17, move _18)</td></tr></table>>];
    bb6__0_2466 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">_12 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as Try&gt;::branch(move _13)</td></tr></table>>];
    bb7__0_2466 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>_19 = discriminant(_12)<br/></td></tr><tr><td align="left">switchInt(move _19)</td></tr></table>>];
    bb8__0_2466 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_23)<br/>_23 = ((_12 as Continue).0: state::margin_calculation::MarginCalculation)<br/>_11 = _23<br/>StorageDead(_23)<br/>StorageDead(_12)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_26 = &amp;_11<br/></td></tr><tr><td align="left">_25 = MarginCalculation::meets_margin_requirement(move _26)</td></tr></table>>];
    bb9__0_2466 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb10__0_2466 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_20)<br/>_20 = ((_12 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_22)<br/>_22 = _20<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _22)</td></tr></table>>];
    bb11__0_2466 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_20)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_2466 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left">switchInt(move _25)</td></tr></table>>];
    bb13__0_2466 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>_24 = const ()<br/>StorageDead(_25)<br/>StorageDead(_24)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>_57 = &amp;(*_1)<br/>StorageLive(_58)<br/>_58 = _11<br/></td></tr><tr><td align="left">_56 = validate_any_isolated_tier_requirements(move _57, move _58)</td></tr></table>>];
    bb14__0_2466 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>_65 = const _<br/>_38 = &amp;(*_65)<br/>_37 = &amp;(*_38)<br/>_36 = move _37 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_37)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>_46 = &amp;(_11.1: i128)<br/>_45 = &amp;(*_46)<br/></td></tr><tr><td align="left">_44 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i128&gt;(move _45)</td></tr></table>>];
    bb15__0_2466 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>_49 = &amp;(_11.3: u128)<br/>_48 = &amp;(*_49)<br/></td></tr><tr><td align="left">_47 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u128&gt;(move _48)</td></tr></table>>];
    bb16__0_2466 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>_52 = &amp;_6<br/>_51 = &amp;(*_52)<br/></td></tr><tr><td align="left">_50 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;math::margin::MarginRequirementType&gt;(move _51)</td></tr></table>>];
    bb17__0_2466 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>_43 = [move _44, move _47, move _50]<br/>StorageDead(_50)<br/>StorageDead(_47)<br/>StorageDead(_44)<br/>_42 = &amp;_43<br/>_41 = &amp;(*_42)<br/>_40 = move _41 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">_35 = Arguments::&lt;'_&gt;::new_v1(move _36, move _40)</td></tr></table>>];
    bb18__0_2466 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">_34 = format(move _35)</td></tr></table>>];
    bb19__0_2466 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_52)<br/>StorageDead(_49)<br/>StorageDead(_46)<br/>StorageDead(_43)<br/>StorageDead(_42)<br/>StorageDead(_38)<br/>_33 = move _34<br/>StorageDead(_34)<br/>_32 = &amp;_33<br/>_31 = &amp;(*_32)<br/></td></tr><tr><td align="left">_30 = &lt;String as Deref&gt;::deref(move _31)</td></tr></table>>];
    bb20__0_2466 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">_29 = &amp;(*_30)<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">_28 = solana_program::log::sol_log(move _29)</td></tr></table>>];
    bb21__0_2466 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/></td></tr><tr><td align="left">drop(_33)</td></tr></table>>];
    bb22__0_2466 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_32)<br/>StorageDead(_30)<br/>StorageDead(_28)<br/>StorageLive(_53)<br/>_53 = error::ErrorCode::InsufficientCollateral<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _53)<br/>StorageDead(_53)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_2466 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">_55 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _56)</td></tr></table>>];
    bb24__0_2466 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>_59 = discriminant(_55)<br/></td></tr><tr><td align="left">switchInt(move _59)</td></tr></table>>];
    bb25__0_2466 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_63)<br/>_63 = ((_55 as Continue).0: ())<br/>_54 = _63<br/>StorageDead(_63)<br/>StorageDead(_55)<br/>StorageDead(_54)<br/>StorageLive(_64)<br/>_64 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _64)<br/>StorageDead(_64)<br/>StorageDead(_11)<br/>StorageDead(_8)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_2466 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_60)<br/>_60 = ((_55 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_62)<br/>_62 = _60<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _62)</td></tr></table>>];
    bb27__0_2466 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageDead(_60)<br/>StorageDead(_55)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_2466 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_8)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_2466 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left">return</td></tr></table>>];
    bb30__0_2466 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">30 (cleanup)</td></tr><tr><td align="left">drop(_33)</td></tr></table>>];
    bb31__0_2466 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">31 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_2466 -> bb2__0_2466 [label="0"];
    bb0__0_2466 -> bb1__0_2466 [label="otherwise"];
    bb1__0_2466 -> bb3__0_2466 [label=""];
    bb2__0_2466 -> bb3__0_2466 [label=""];
    bb3__0_2466 -> bb4__0_2466 [label="return"];
    bb4__0_2466 -> bb5__0_2466 [label="return"];
    bb5__0_2466 -> bb6__0_2466 [label="return"];
    bb6__0_2466 -> bb7__0_2466 [label="return"];
    bb7__0_2466 -> bb8__0_2466 [label="0"];
    bb7__0_2466 -> bb10__0_2466 [label="1"];
    bb7__0_2466 -> bb9__0_2466 [label="otherwise"];
    bb8__0_2466 -> bb12__0_2466 [label="return"];
    bb10__0_2466 -> bb11__0_2466 [label="return"];
    bb11__0_2466 -> bb28__0_2466 [label=""];
    bb12__0_2466 -> bb14__0_2466 [label="0"];
    bb12__0_2466 -> bb13__0_2466 [label="otherwise"];
    bb13__0_2466 -> bb23__0_2466 [label="return"];
    bb14__0_2466 -> bb15__0_2466 [label="return"];
    bb15__0_2466 -> bb16__0_2466 [label="return"];
    bb16__0_2466 -> bb17__0_2466 [label="return"];
    bb17__0_2466 -> bb18__0_2466 [label="return"];
    bb18__0_2466 -> bb19__0_2466 [label="return"];
    bb19__0_2466 -> bb20__0_2466 [label="return"];
    bb19__0_2466 -> bb30__0_2466 [label="unwind"];
    bb20__0_2466 -> bb21__0_2466 [label="return"];
    bb20__0_2466 -> bb30__0_2466 [label="unwind"];
    bb21__0_2466 -> bb22__0_2466 [label="return"];
    bb21__0_2466 -> bb31__0_2466 [label="unwind"];
    bb22__0_2466 -> bb28__0_2466 [label=""];
    bb23__0_2466 -> bb24__0_2466 [label="return"];
    bb24__0_2466 -> bb25__0_2466 [label="0"];
    bb24__0_2466 -> bb26__0_2466 [label="1"];
    bb24__0_2466 -> bb9__0_2466 [label="otherwise"];
    bb25__0_2466 -> bb29__0_2466 [label=""];
    bb26__0_2466 -> bb27__0_2466 [label="return"];
    bb27__0_2466 -> bb28__0_2466 [label=""];
    bb28__0_2466 -> bb29__0_2466 [label=""];
    bb30__0_2466 -> bb31__0_2466 [label="return"];
}
