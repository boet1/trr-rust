digraph Mir_0_3525 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn get_pyth_stable_coin_price(_1: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, _2: u64, _3: &amp;ReErased state::oracle::OracleSource) -&gt; std::result::Result&lt;state::oracle::OraclePriceData, error::ErrorCode&gt;<br align="left"/>let mut _4: state::oracle::OraclePriceData;<br align="left"/>let mut _5: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _6: std::result::Result&lt;state::oracle::OraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _7: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _8: u64;<br align="left"/>let mut _9: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let mut _10: isize;<br align="left"/>let _11: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _12: !;<br align="left"/>let mut _13: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _14: state::oracle::OraclePriceData;<br align="left"/>let _15: i64;<br align="left"/>let _16: u64;<br align="left"/>let _17: i64;<br align="left"/>let _18: ();<br align="left"/>let mut _19: bool;<br align="left"/>let mut _20: i64;<br align="left"/>let mut _21: i64;<br align="left"/>let mut _22: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _23: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _24: i64;<br align="left"/>let mut _25: isize;<br align="left"/>let _26: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _27: !;<br align="left"/>let mut _28: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _29: i64;<br align="left"/>let mut _30: i64;<br align="left"/>let mut _31: i64;<br align="left"/>let mut _32: i64;<br align="left"/>let mut _33: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _34: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _35: u64;<br align="left"/>let mut _36: isize;<br align="left"/>let _37: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _38: !;<br align="left"/>let mut _39: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _40: i64;<br align="left"/>let mut _41: state::oracle::OraclePriceData;<br align="left"/>debug price_oracle =&gt; _1;<br align="left"/>debug clock_slot =&gt; _2;<br align="left"/>debug oracle_source =&gt; _3;<br align="left"/>debug oracle_price_data =&gt; _4;<br align="left"/>debug residual =&gt; _11;<br align="left"/>debug val =&gt; _14;<br align="left"/>debug price =&gt; _15;<br align="left"/>debug confidence =&gt; _16;<br align="left"/>debug five_bps =&gt; _17;<br align="left"/>debug residual =&gt; _26;<br align="left"/>debug val =&gt; _29;<br align="left"/>debug residual =&gt; _37;<br align="left"/>debug val =&gt; _40;<br align="left"/>>;
    bb0__0_3525 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = &amp;(*_1)<br/>StorageLive(_8)<br/>_8 = _2<br/>StorageLive(_9)<br/>_9 = &amp;(*_3)<br/></td></tr><tr><td align="left">_6 = get_pyth_price(move _7, move _8, move _9)</td></tr></table>>];
    bb1__0_3525 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">_5 = &lt;std::result::Result&lt;OraclePriceData, error::ErrorCode&gt; as Try&gt;::branch(move _6)</td></tr></table>>];
    bb2__0_3525 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_10 = discriminant(_5)<br/></td></tr><tr><td align="left">switchInt(move _10)</td></tr></table>>];
    bb3__0_3525 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = ((_5 as Continue).0: state::oracle::OraclePriceData)<br/>_4 = _14<br/>StorageDead(_14)<br/>StorageDead(_5)<br/>StorageLive(_15)<br/>_15 = (_4.0: i64)<br/>StorageLive(_16)<br/>_16 = (_4.1: u64)<br/>StorageLive(_17)<br/>_17 = const 500_i64<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_24 = _15<br/></td></tr><tr><td align="left">_23 = &lt;i64 as SafeMath&gt;::safe_sub(move _24, const _)</td></tr></table>>];
    bb4__0_3525 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_3525 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = ((_5 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_13)<br/>_13 = _11<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;OraclePriceData, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _13)</td></tr></table>>];
    bb6__0_3525 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_11)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_3525 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/></td></tr><tr><td align="left">_22 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _23)</td></tr></table>>];
    bb8__0_3525 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>_25 = discriminant(_22)<br/></td></tr><tr><td align="left">switchInt(move _25)</td></tr></table>>];
    bb9__0_3525 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_29)<br/>_29 = ((_22 as Continue).0: i64)<br/>_21 = _29<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">_20 = core::num::&lt;impl i64&gt;::abs(move _21)</td></tr></table>>];
    bb10__0_3525 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_26)<br/>_26 = ((_22 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_28)<br/>_28 = _26<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;OraclePriceData, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _28)</td></tr></table>>];
    bb11__0_3525 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_26)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_3525 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>_31 = _17<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>_35 = _16<br/></td></tr><tr><td align="left">_34 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _35)</td></tr></table>>];
    bb13__0_3525 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/></td></tr><tr><td align="left">_33 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _34)</td></tr></table>>];
    bb14__0_3525 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>_36 = discriminant(_33)<br/></td></tr><tr><td align="left">switchInt(move _36)</td></tr></table>>];
    bb15__0_3525 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_40)<br/>_40 = ((_33 as Continue).0: i64)<br/>_32 = _40<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">_30 = &lt;i64 as Ord&gt;::min(move _31, move _32)</td></tr></table>>];
    bb16__0_3525 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_37)<br/>_37 = ((_33 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_39)<br/>_39 = _37<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;OraclePriceData, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _39)</td></tr></table>>];
    bb17__0_3525 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_37)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/>StorageDead(_33)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_3525 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_31)<br/>_19 = Le(move _20, move _30)<br/></td></tr><tr><td align="left">switchInt(move _19)</td></tr></table>>];
    bb19__0_3525 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_30)<br/>StorageDead(_22)<br/>StorageDead(_20)<br/>(_4.0: i64) = const _<br/>_18 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_3525 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_30)<br/>StorageDead(_22)<br/>StorageDead(_20)<br/>_18 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_3525 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_18)<br/>StorageLive(_41)<br/>_41 = _4<br/>_0 = std::result::Result::&lt;OraclePriceData, error::ErrorCode&gt;::Ok(move _41)<br/>StorageDead(_41)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_3525 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_20)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_3525 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_3525 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_3525 -> bb1__0_3525 [label="return"];
    bb1__0_3525 -> bb2__0_3525 [label="return"];
    bb2__0_3525 -> bb3__0_3525 [label="0"];
    bb2__0_3525 -> bb5__0_3525 [label="1"];
    bb2__0_3525 -> bb4__0_3525 [label="otherwise"];
    bb3__0_3525 -> bb7__0_3525 [label="return"];
    bb5__0_3525 -> bb6__0_3525 [label="return"];
    bb6__0_3525 -> bb23__0_3525 [label=""];
    bb7__0_3525 -> bb8__0_3525 [label="return"];
    bb8__0_3525 -> bb9__0_3525 [label="0"];
    bb8__0_3525 -> bb10__0_3525 [label="1"];
    bb8__0_3525 -> bb4__0_3525 [label="otherwise"];
    bb9__0_3525 -> bb12__0_3525 [label="return"];
    bb10__0_3525 -> bb11__0_3525 [label="return"];
    bb11__0_3525 -> bb22__0_3525 [label=""];
    bb12__0_3525 -> bb13__0_3525 [label="return"];
    bb13__0_3525 -> bb14__0_3525 [label="return"];
    bb14__0_3525 -> bb15__0_3525 [label="0"];
    bb14__0_3525 -> bb16__0_3525 [label="1"];
    bb14__0_3525 -> bb4__0_3525 [label="otherwise"];
    bb15__0_3525 -> bb18__0_3525 [label="return"];
    bb16__0_3525 -> bb17__0_3525 [label="return"];
    bb17__0_3525 -> bb22__0_3525 [label=""];
    bb18__0_3525 -> bb20__0_3525 [label="0"];
    bb18__0_3525 -> bb19__0_3525 [label="otherwise"];
    bb19__0_3525 -> bb21__0_3525 [label=""];
    bb20__0_3525 -> bb21__0_3525 [label=""];
    bb21__0_3525 -> bb24__0_3525 [label=""];
    bb22__0_3525 -> bb23__0_3525 [label=""];
    bb23__0_3525 -> bb24__0_3525 [label=""];
}
