digraph Mir_0_16671 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;HistoricalIndexData as BorshDeserialize&gt;::deserialize_reader(_1: &amp;ReErased mut R/#0) -&gt; std::result::Result&lt;state::oracle::HistoricalIndexData, std::io::Error&gt;<br align="left"/>let mut _2: state::oracle::HistoricalIndexData;<br align="left"/>let mut _3: u64;<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, u64&gt;;<br align="left"/>let mut _5: std::result::Result&lt;u64, std::io::Error&gt;;<br align="left"/>let mut _6: &amp;ReErased mut R/#0;<br align="left"/>let mut _7: isize;<br align="left"/>let _8: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _9: !;<br align="left"/>let mut _10: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _11: u64;<br align="left"/>let mut _12: u64;<br align="left"/>let mut _13: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, u64&gt;;<br align="left"/>let mut _14: std::result::Result&lt;u64, std::io::Error&gt;;<br align="left"/>let mut _15: &amp;ReErased mut R/#0;<br align="left"/>let mut _16: isize;<br align="left"/>let _17: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _18: !;<br align="left"/>let mut _19: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _20: u64;<br align="left"/>let mut _21: u64;<br align="left"/>let mut _22: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, u64&gt;;<br align="left"/>let mut _23: std::result::Result&lt;u64, std::io::Error&gt;;<br align="left"/>let mut _24: &amp;ReErased mut R/#0;<br align="left"/>let mut _25: isize;<br align="left"/>let _26: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _27: !;<br align="left"/>let mut _28: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _29: u64;<br align="left"/>let mut _30: u64;<br align="left"/>let mut _31: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, u64&gt;;<br align="left"/>let mut _32: std::result::Result&lt;u64, std::io::Error&gt;;<br align="left"/>let mut _33: &amp;ReErased mut R/#0;<br align="left"/>let mut _34: isize;<br align="left"/>let _35: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _36: !;<br align="left"/>let mut _37: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _38: u64;<br align="left"/>let mut _39: i64;<br align="left"/>let mut _40: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, i64&gt;;<br align="left"/>let mut _41: std::result::Result&lt;i64, std::io::Error&gt;;<br align="left"/>let mut _42: &amp;ReErased mut R/#0;<br align="left"/>let mut _43: isize;<br align="left"/>let _44: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _45: !;<br align="left"/>let mut _46: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _47: i64;<br align="left"/>let mut _48: bool;<br align="left"/>let mut _49: bool;<br align="left"/>let mut _50: bool;<br align="left"/>let mut _51: bool;<br align="left"/>let mut _52: isize;<br align="left"/>let mut _53: isize;<br align="left"/>let mut _54: isize;<br align="left"/>let mut _55: isize;<br align="left"/>let mut _56: isize;<br align="left"/>let mut _57: isize;<br align="left"/>let mut _58: isize;<br align="left"/>let mut _59: isize;<br align="left"/>let mut _60: isize;<br align="left"/>let mut _61: isize;<br align="left"/>let mut _62: isize;<br align="left"/>let mut _63: isize;<br align="left"/>let mut _64: isize;<br align="left"/>let mut _65: isize;<br align="left"/>let mut _66: isize;<br align="left"/>let mut _67: isize;<br align="left"/>let mut _68: isize;<br align="left"/>let mut _69: isize;<br align="left"/>let mut _70: isize;<br align="left"/>let mut _71: isize;<br align="left"/>let mut _72: isize;<br align="left"/>let mut _73: isize;<br align="left"/>let mut _74: isize;<br align="left"/>let mut _75: isize;<br align="left"/>let mut _76: isize;<br align="left"/>debug reader =&gt; _1;<br align="left"/>debug residual =&gt; _8;<br align="left"/>debug val =&gt; _11;<br align="left"/>debug residual =&gt; _17;<br align="left"/>debug val =&gt; _20;<br align="left"/>debug residual =&gt; _26;<br align="left"/>debug val =&gt; _29;<br align="left"/>debug residual =&gt; _35;<br align="left"/>debug val =&gt; _38;<br align="left"/>debug residual =&gt; _44;<br align="left"/>debug val =&gt; _47;<br align="left"/>>;
    bb0__0_16671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_51 = const false<br/>_50 = const false<br/>_49 = const false<br/>_48 = const false<br/>StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_5 = &lt;u64 as BorshDeserialize&gt;::deserialize_reader::&lt;R&gt;(move _6)</td></tr></table>>];
    bb1__0_16671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;u64, std::io::Error&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb2__0_16671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">_51 = const true<br/>StorageDead(_5)<br/>_7 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _7)</td></tr></table>>];
    bb3__0_16671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = ((_4 as Continue).0: u64)<br/>_3 = _11<br/>StorageDead(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_14 = &lt;u64 as BorshDeserialize&gt;::deserialize_reader::&lt;R&gt;(move _15)</td></tr></table>>];
    bb4__0_16671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_16671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/>_8 = move ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_10)<br/>_10 = move _8<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;HistoricalIndexData, std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _10)</td></tr></table>>];
    bb6__0_16671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_8)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_16671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/></td></tr><tr><td align="left">_13 = &lt;std::result::Result&lt;u64, std::io::Error&gt; as Try&gt;::branch(move _14)</td></tr></table>>];
    bb8__0_16671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">_50 = const true<br/>StorageDead(_14)<br/>_16 = discriminant(_13)<br/></td></tr><tr><td align="left">switchInt(move _16)</td></tr></table>>];
    bb9__0_16671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_20)<br/>_20 = ((_13 as Continue).0: u64)<br/>_12 = _20<br/>StorageDead(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_24 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_23 = &lt;u64 as BorshDeserialize&gt;::deserialize_reader::&lt;R&gt;(move _24)</td></tr></table>>];
    bb10__0_16671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>_17 = move ((_13 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_19)<br/>_19 = move _17<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;HistoricalIndexData, std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _19)</td></tr></table>>];
    bb11__0_16671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_17)<br/>StorageDead(_12)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_16671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/></td></tr><tr><td align="left">_22 = &lt;std::result::Result&lt;u64, std::io::Error&gt; as Try&gt;::branch(move _23)</td></tr></table>>];
    bb13__0_16671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">_49 = const true<br/>StorageDead(_23)<br/>_25 = discriminant(_22)<br/></td></tr><tr><td align="left">switchInt(move _25)</td></tr></table>>];
    bb14__0_16671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_29)<br/>_29 = ((_22 as Continue).0: u64)<br/>_21 = _29<br/>StorageDead(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>_33 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_32 = &lt;u64 as BorshDeserialize&gt;::deserialize_reader::&lt;R&gt;(move _33)</td></tr></table>>];
    bb15__0_16671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_26)<br/>_26 = move ((_22 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_28)<br/>_28 = move _26<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;HistoricalIndexData, std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _28)</td></tr></table>>];
    bb16__0_16671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_26)<br/>StorageDead(_21)<br/>StorageDead(_12)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_16671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/></td></tr><tr><td align="left">_31 = &lt;std::result::Result&lt;u64, std::io::Error&gt; as Try&gt;::branch(move _32)</td></tr></table>>];
    bb18__0_16671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">_48 = const true<br/>StorageDead(_32)<br/>_34 = discriminant(_31)<br/></td></tr><tr><td align="left">switchInt(move _34)</td></tr></table>>];
    bb19__0_16671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_38)<br/>_38 = ((_31 as Continue).0: u64)<br/>_30 = _38<br/>StorageDead(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>_42 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_41 = &lt;i64 as BorshDeserialize&gt;::deserialize_reader::&lt;R&gt;(move _42)</td></tr></table>>];
    bb20__0_16671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = move ((_31 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_37)<br/>_37 = move _35<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;HistoricalIndexData, std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _37)</td></tr></table>>];
    bb21__0_16671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_35)<br/>StorageDead(_30)<br/>StorageDead(_21)<br/>StorageDead(_12)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_16671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/></td></tr><tr><td align="left">_40 = &lt;std::result::Result&lt;i64, std::io::Error&gt; as Try&gt;::branch(move _41)</td></tr></table>>];
    bb23__0_16671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>_43 = discriminant(_40)<br/></td></tr><tr><td align="left">switchInt(move _43)</td></tr></table>>];
    bb24__0_16671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>_47 = ((_40 as Continue).0: i64)<br/>_39 = _47<br/>StorageDead(_47)<br/>_2 = HistoricalIndexData { last_index_bid_price: move _3, last_index_ask_price: move _12, last_index_price_twap: move _21, last_index_price_twap_5min: move _30, last_index_price_twap_ts: move _39 }<br/>StorageDead(_39)<br/>StorageDead(_30)<br/>StorageDead(_21)<br/>StorageDead(_12)<br/>StorageDead(_3)<br/>_0 = std::result::Result::&lt;HistoricalIndexData, std::io::Error&gt;::Ok(move _2)<br/>StorageDead(_2)<br/>_52 = discriminant(_40)<br/>StorageDead(_40)<br/>_54 = discriminant(_31)<br/>_48 = const false<br/>StorageDead(_31)<br/>_56 = discriminant(_22)<br/>_49 = const false<br/>StorageDead(_22)<br/>_58 = discriminant(_13)<br/>_50 = const false<br/>StorageDead(_13)<br/>_60 = discriminant(_4)<br/>_51 = const false<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_16671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_44)<br/>_44 = move ((_40 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_46)<br/>_46 = move _44<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;HistoricalIndexData, std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _46)</td></tr></table>>];
    bb26__0_16671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_44)<br/>StorageDead(_39)<br/>StorageDead(_30)<br/>StorageDead(_21)<br/>StorageDead(_12)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/>_62 = discriminant(_40)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_16671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left">return</td></tr></table>>];
    bb28__0_16671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">28 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb29__0_16671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">_64 = discriminant(_31)<br/>_48 = const false<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_16671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">_66 = discriminant(_22)<br/>_49 = const false<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_16671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">_68 = discriminant(_13)<br/>_50 = const false<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_16671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">_70 = discriminant(_4)<br/>_51 = const false<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_16671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">33 (cleanup)</td></tr><tr><td align="left" balign="left">_72 = discriminant(_40)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_16671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">34 (cleanup)</td></tr><tr><td align="left" balign="left">_73 = discriminant(_31)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_16671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">35 (cleanup)</td></tr><tr><td align="left" balign="left">_74 = discriminant(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_16671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">36 (cleanup)</td></tr><tr><td align="left" balign="left">_75 = discriminant(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_16671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">37 (cleanup)</td></tr><tr><td align="left" balign="left">_76 = discriminant(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_16671 -> bb1__0_16671 [label="return"];
    bb1__0_16671 -> bb2__0_16671 [label="return"];
    bb1__0_16671 -> bb28__0_16671 [label="unwind"];
    bb2__0_16671 -> bb3__0_16671 [label="0"];
    bb2__0_16671 -> bb5__0_16671 [label="1"];
    bb2__0_16671 -> bb4__0_16671 [label="otherwise"];
    bb3__0_16671 -> bb7__0_16671 [label="return"];
    bb3__0_16671 -> bb37__0_16671 [label="unwind"];
    bb5__0_16671 -> bb6__0_16671 [label="return"];
    bb5__0_16671 -> bb37__0_16671 [label="unwind"];
    bb6__0_16671 -> bb32__0_16671 [label=""];
    bb7__0_16671 -> bb8__0_16671 [label="return"];
    bb7__0_16671 -> bb37__0_16671 [label="unwind"];
    bb8__0_16671 -> bb9__0_16671 [label="0"];
    bb8__0_16671 -> bb10__0_16671 [label="1"];
    bb8__0_16671 -> bb4__0_16671 [label="otherwise"];
    bb9__0_16671 -> bb12__0_16671 [label="return"];
    bb9__0_16671 -> bb36__0_16671 [label="unwind"];
    bb10__0_16671 -> bb11__0_16671 [label="return"];
    bb10__0_16671 -> bb36__0_16671 [label="unwind"];
    bb11__0_16671 -> bb31__0_16671 [label=""];
    bb12__0_16671 -> bb13__0_16671 [label="return"];
    bb12__0_16671 -> bb36__0_16671 [label="unwind"];
    bb13__0_16671 -> bb14__0_16671 [label="0"];
    bb13__0_16671 -> bb15__0_16671 [label="1"];
    bb13__0_16671 -> bb4__0_16671 [label="otherwise"];
    bb14__0_16671 -> bb17__0_16671 [label="return"];
    bb14__0_16671 -> bb35__0_16671 [label="unwind"];
    bb15__0_16671 -> bb16__0_16671 [label="return"];
    bb15__0_16671 -> bb35__0_16671 [label="unwind"];
    bb16__0_16671 -> bb30__0_16671 [label=""];
    bb17__0_16671 -> bb18__0_16671 [label="return"];
    bb17__0_16671 -> bb35__0_16671 [label="unwind"];
    bb18__0_16671 -> bb19__0_16671 [label="0"];
    bb18__0_16671 -> bb20__0_16671 [label="1"];
    bb18__0_16671 -> bb4__0_16671 [label="otherwise"];
    bb19__0_16671 -> bb22__0_16671 [label="return"];
    bb19__0_16671 -> bb34__0_16671 [label="unwind"];
    bb20__0_16671 -> bb21__0_16671 [label="return"];
    bb20__0_16671 -> bb34__0_16671 [label="unwind"];
    bb21__0_16671 -> bb29__0_16671 [label=""];
    bb22__0_16671 -> bb23__0_16671 [label="return"];
    bb22__0_16671 -> bb34__0_16671 [label="unwind"];
    bb23__0_16671 -> bb24__0_16671 [label="0"];
    bb23__0_16671 -> bb25__0_16671 [label="1"];
    bb23__0_16671 -> bb4__0_16671 [label="otherwise"];
    bb24__0_16671 -> bb27__0_16671 [label=""];
    bb25__0_16671 -> bb26__0_16671 [label="return"];
    bb25__0_16671 -> bb33__0_16671 [label="unwind"];
    bb26__0_16671 -> bb29__0_16671 [label=""];
    bb29__0_16671 -> bb30__0_16671 [label=""];
    bb30__0_16671 -> bb31__0_16671 [label=""];
    bb31__0_16671 -> bb32__0_16671 [label=""];
    bb32__0_16671 -> bb27__0_16671 [label=""];
    bb33__0_16671 -> bb34__0_16671 [label=""];
    bb34__0_16671 -> bb35__0_16671 [label=""];
    bb35__0_16671 -> bb36__0_16671 [label=""];
    bb36__0_16671 -> bb37__0_16671 [label=""];
    bb37__0_16671 -> bb28__0_16671 [label=""];
}
