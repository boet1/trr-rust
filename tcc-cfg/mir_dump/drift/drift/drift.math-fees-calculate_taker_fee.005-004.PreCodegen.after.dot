digraph Mir_0_2220 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_taker_fee(_1: u64, _2: &amp;ReErased state::state::FeeTier, _3: i16) -&gt; std::result::Result&lt;u64, error::ErrorCode&gt;<br align="left"/>let mut _4: u64;<br align="left"/>let mut _5: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _6: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _7: u128;<br align="left"/>let mut _8: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _9: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _10: u128;<br align="left"/>let mut _11: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _12: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _13: u128;<br align="left"/>let mut _14: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _15: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _16: u64;<br align="left"/>let mut _17: isize;<br align="left"/>let _18: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _19: !;<br align="left"/>let mut _20: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _21: u128;<br align="left"/>let mut _22: u128;<br align="left"/>let mut _23: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _24: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _25: u32;<br align="left"/>let mut _26: isize;<br align="left"/>let _27: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _28: !;<br align="left"/>let mut _29: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _30: u128;<br align="left"/>let mut _31: isize;<br align="left"/>let _32: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _33: !;<br align="left"/>let mut _34: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _35: u128;<br align="left"/>let mut _36: u128;<br align="left"/>let mut _37: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _38: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _39: u32;<br align="left"/>let mut _40: isize;<br align="left"/>let _41: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _42: !;<br align="left"/>let mut _43: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _44: u128;<br align="left"/>let mut _45: isize;<br align="left"/>let _46: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _47: !;<br align="left"/>let mut _48: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _49: u128;<br align="left"/>let mut _50: isize;<br align="left"/>let _51: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _52: !;<br align="left"/>let mut _53: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _54: u64;<br align="left"/>let _55: ();<br align="left"/>let mut _56: bool;<br align="left"/>let mut _57: i16;<br align="left"/>let mut _58: u64;<br align="left"/>let mut _59: u64;<br align="left"/>let mut _60: u64;<br align="left"/>let mut _61: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _62: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _63: u64;<br align="left"/>let mut _64: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _65: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _66: u64;<br align="left"/>let mut _67: u64;<br align="left"/>let mut _68: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _69: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _70: u16;<br align="left"/>let mut _71: i16;<br align="left"/>let mut _72: isize;<br align="left"/>let _73: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _74: !;<br align="left"/>let mut _75: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _76: u64;<br align="left"/>let mut _77: isize;<br align="left"/>let _78: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _79: !;<br align="left"/>let mut _80: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _81: u64;<br align="left"/>let mut _82: isize;<br align="left"/>let _83: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _84: !;<br align="left"/>let mut _85: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _86: u64;<br align="left"/>let mut _87: bool;<br align="left"/>let mut _88: i16;<br align="left"/>let mut _89: u64;<br align="left"/>let mut _90: u64;<br align="left"/>let mut _91: u64;<br align="left"/>let mut _92: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _93: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _94: u64;<br align="left"/>let mut _95: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _96: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _97: u64;<br align="left"/>let mut _98: u64;<br align="left"/>let mut _99: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _100: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _101: i16;<br align="left"/>let mut _102: isize;<br align="left"/>let _103: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _104: !;<br align="left"/>let mut _105: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _106: u64;<br align="left"/>let mut _107: isize;<br align="left"/>let _108: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _109: !;<br align="left"/>let mut _110: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _111: u64;<br align="left"/>let mut _112: isize;<br align="left"/>let _113: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _114: !;<br align="left"/>let mut _115: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _116: u64;<br align="left"/>let mut _117: u64;<br align="left"/>debug quote_asset_amount =&gt; _1;<br align="left"/>debug fee_tier =&gt; _2;<br align="left"/>debug fee_adjustment =&gt; _3;<br align="left"/>debug taker_fee =&gt; _4;<br align="left"/>debug residual =&gt; _18;<br align="left"/>debug val =&gt; _21;<br align="left"/>debug residual =&gt; _27;<br align="left"/>debug val =&gt; _30;<br align="left"/>debug residual =&gt; _32;<br align="left"/>debug val =&gt; _35;<br align="left"/>debug residual =&gt; _41;<br align="left"/>debug val =&gt; _44;<br align="left"/>debug residual =&gt; _46;<br align="left"/>debug val =&gt; _49;<br align="left"/>debug residual =&gt; _51;<br align="left"/>debug val =&gt; _54;<br align="left"/>debug residual =&gt; _73;<br align="left"/>debug val =&gt; _76;<br align="left"/>debug residual =&gt; _78;<br align="left"/>debug val =&gt; _81;<br align="left"/>debug residual =&gt; _83;<br align="left"/>debug val =&gt; _86;<br align="left"/>debug residual =&gt; _103;<br align="left"/>debug val =&gt; _106;<br align="left"/>debug residual =&gt; _108;<br align="left"/>debug val =&gt; _111;<br align="left"/>debug residual =&gt; _113;<br align="left"/>debug val =&gt; _116;<br align="left"/>>;
    bb0__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_16 = _1<br/></td></tr><tr><td align="left">_15 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _16)</td></tr></table>>];
    bb1__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/></td></tr><tr><td align="left">_14 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _15)</td></tr></table>>];
    bb2__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>_17 = discriminant(_14)<br/></td></tr><tr><td align="left">switchInt(move _17)</td></tr></table>>];
    bb3__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = ((_14 as Continue).0: u128)<br/>_13 = _21<br/>StorageDead(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>_25 = ((*_2).0: u32)<br/></td></tr><tr><td align="left">_24 = &lt;u32 as Cast&gt;::cast::&lt;u128&gt;(move _25)</td></tr></table>>];
    bb4__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_18)<br/>_18 = ((_14 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_20)<br/>_20 = _18<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _20)</td></tr></table>>];
    bb6__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_18)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/></td></tr><tr><td align="left">_23 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _24)</td></tr></table>>];
    bb8__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>_26 = discriminant(_23)<br/></td></tr><tr><td align="left">switchInt(move _26)</td></tr></table>>];
    bb9__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_30)<br/>_30 = ((_23 as Continue).0: u128)<br/>_22 = _30<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">_12 = &lt;u128 as SafeMath&gt;::safe_mul(move _13, move _22)</td></tr></table>>];
    bb10__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_27)<br/>_27 = ((_23 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_29)<br/>_29 = _27<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _29)</td></tr></table>>];
    bb11__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_27)<br/>StorageDead(_22)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">_11 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _12)</td></tr></table>>];
    bb13__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>_31 = discriminant(_11)<br/></td></tr><tr><td align="left">switchInt(move _31)</td></tr></table>>];
    bb14__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = ((_11 as Continue).0: u128)<br/>_10 = _35<br/>StorageDead(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>_39 = ((*_2).1: u32)<br/></td></tr><tr><td align="left">_38 = &lt;u32 as Cast&gt;::cast::&lt;u128&gt;(move _39)</td></tr></table>>];
    bb15__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_32)<br/>_32 = ((_11 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_34)<br/>_34 = _32<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _34)</td></tr></table>>];
    bb16__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/></td></tr><tr><td align="left">_37 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _38)</td></tr></table>>];
    bb18__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>_40 = discriminant(_37)<br/></td></tr><tr><td align="left">switchInt(move _40)</td></tr></table>>];
    bb19__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_44)<br/>_44 = ((_37 as Continue).0: u128)<br/>_36 = _44<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">_9 = &lt;u128 as SafeMath&gt;::safe_div_ceil(move _10, move _36)</td></tr></table>>];
    bb20__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_41)<br/>_41 = ((_37 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_43)<br/>_43 = _41<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _43)</td></tr></table>>];
    bb21__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_41)<br/>StorageDead(_36)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">_8 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _9)</td></tr></table>>];
    bb23__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>_45 = discriminant(_8)<br/></td></tr><tr><td align="left">switchInt(move _45)</td></tr></table>>];
    bb24__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_49)<br/>_49 = ((_8 as Continue).0: u128)<br/>_7 = _49<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">_6 = &lt;u128 as Cast&gt;::cast::&lt;u64&gt;(move _7)</td></tr></table>>];
    bb25__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_46)<br/>_46 = ((_8 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_48)<br/>_48 = _46<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _48)</td></tr></table>>];
    bb26__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/></td></tr><tr><td align="left">_5 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _6)</td></tr></table>>];
    bb28__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_50 = discriminant(_5)<br/></td></tr><tr><td align="left">switchInt(move _50)</td></tr></table>>];
    bb29__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_54)<br/>_54 = ((_5 as Continue).0: u64)<br/>_4 = _54<br/>StorageDead(_54)<br/>StorageDead(_37)<br/>StorageDead(_23)<br/>StorageDead(_14)<br/>StorageDead(_11)<br/>StorageDead(_8)<br/>StorageDead(_5)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>_57 = _3<br/>_56 = Lt(move _57, const 0_i16)<br/></td></tr><tr><td align="left">switchInt(move _56)</td></tr></table>>];
    bb30__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_51)<br/>_51 = ((_5 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_53)<br/>_53 = _51<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _53)</td></tr></table>>];
    bb31__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>_59 = _4<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>_66 = _4<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>_71 = _3<br/></td></tr><tr><td align="left">_70 = core::num::&lt;impl i16&gt;::unsigned_abs(move _71)</td></tr></table>>];
    bb33__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>_88 = _3<br/>_87 = Gt(move _88, const 0_i16)<br/></td></tr><tr><td align="left">switchInt(move _87)</td></tr></table>>];
    bb34__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/></td></tr><tr><td align="left">_69 = &lt;u16 as Cast&gt;::cast::&lt;u64&gt;(move _70)</td></tr></table>>];
    bb35__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/></td></tr><tr><td align="left">_68 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _69)</td></tr></table>>];
    bb36__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>_72 = discriminant(_68)<br/></td></tr><tr><td align="left">switchInt(move _72)</td></tr></table>>];
    bb37__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_76)<br/>_76 = ((_68 as Continue).0: u64)<br/>_67 = _76<br/>StorageDead(_76)<br/></td></tr><tr><td align="left">_65 = &lt;u64 as SafeMath&gt;::safe_mul(move _66, move _67)</td></tr></table>>];
    bb38__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_73)<br/>_73 = ((_68 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_75)<br/>_75 = _73<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _75)</td></tr></table>>];
    bb39__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_73)<br/>StorageDead(_67)<br/>StorageDead(_66)<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">_64 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _65)</td></tr></table>>];
    bb41__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>_77 = discriminant(_64)<br/></td></tr><tr><td align="left">switchInt(move _77)</td></tr></table>>];
    bb42__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageLive(_81)<br/>_81 = ((_64 as Continue).0: u64)<br/>_63 = _81<br/>StorageDead(_81)<br/></td></tr><tr><td align="left">_62 = &lt;u64 as SafeMath&gt;::safe_div(move _63, const _)</td></tr></table>>];
    bb43__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageLive(_78)<br/>_78 = ((_64 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_80)<br/>_80 = _78<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _80)</td></tr></table>>];
    bb44__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>StorageDead(_78)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/></td></tr><tr><td align="left">_61 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _62)</td></tr></table>>];
    bb46__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>_82 = discriminant(_61)<br/></td></tr><tr><td align="left">switchInt(move _82)</td></tr></table>>];
    bb47__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageLive(_86)<br/>_86 = ((_61 as Continue).0: u64)<br/>_60 = _86<br/>StorageDead(_86)<br/></td></tr><tr><td align="left">_58 = core::num::&lt;impl u64&gt;::saturating_sub(move _59, move _60)</td></tr></table>>];
    bb48__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageLive(_83)<br/>_83 = ((_61 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_85)<br/>_85 = _83<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _85)</td></tr></table>>];
    bb49__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>StorageDead(_83)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageDead(_59)<br/>_4 = move _58<br/>StorageDead(_58)<br/>StorageDead(_68)<br/>StorageDead(_64)<br/>StorageDead(_61)<br/>_55 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb51__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>_90 = _4<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>_97 = _4<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>_101 = _3<br/></td></tr><tr><td align="left">_100 = &lt;i16 as Cast&gt;::cast::&lt;u64&gt;(move _101)</td></tr></table>>];
    bb52__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>_55 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/></td></tr><tr><td align="left">_99 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _100)</td></tr></table>>];
    bb54__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>_102 = discriminant(_99)<br/></td></tr><tr><td align="left">switchInt(move _102)</td></tr></table>>];
    bb55__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageLive(_106)<br/>_106 = ((_99 as Continue).0: u64)<br/>_98 = _106<br/>StorageDead(_106)<br/></td></tr><tr><td align="left">_96 = &lt;u64 as SafeMath&gt;::safe_mul(move _97, move _98)</td></tr></table>>];
    bb56__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageLive(_103)<br/>_103 = ((_99 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_105)<br/>_105 = _103<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _105)</td></tr></table>>];
    bb57__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/>StorageDead(_103)<br/>StorageDead(_98)<br/>StorageDead(_97)<br/>StorageDead(_96)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb58__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>StorageDead(_97)<br/></td></tr><tr><td align="left">_95 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _96)</td></tr></table>>];
    bb59__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>_107 = discriminant(_95)<br/></td></tr><tr><td align="left">switchInt(move _107)</td></tr></table>>];
    bb60__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageLive(_111)<br/>_111 = ((_95 as Continue).0: u64)<br/>_94 = _111<br/>StorageDead(_111)<br/></td></tr><tr><td align="left">_93 = &lt;u64 as SafeMath&gt;::safe_div_ceil(move _94, const _)</td></tr></table>>];
    bb61__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageLive(_108)<br/>_108 = ((_95 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_110)<br/>_110 = _108<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _110)</td></tr></table>>];
    bb62__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/>StorageDead(_108)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb63__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/></td></tr><tr><td align="left">_92 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _93)</td></tr></table>>];
    bb64__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>_112 = discriminant(_92)<br/></td></tr><tr><td align="left">switchInt(move _112)</td></tr></table>>];
    bb65__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageLive(_116)<br/>_116 = ((_92 as Continue).0: u64)<br/>_91 = _116<br/>StorageDead(_116)<br/></td></tr><tr><td align="left">_89 = core::num::&lt;impl u64&gt;::saturating_add(move _90, move _91)</td></tr></table>>];
    bb66__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageLive(_113)<br/>_113 = ((_92 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_115)<br/>_115 = _113<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _115)</td></tr></table>>];
    bb67__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_115)<br/>StorageDead(_113)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/>StorageDead(_90)<br/>_4 = move _89<br/>StorageDead(_89)<br/>StorageDead(_99)<br/>StorageDead(_95)<br/>StorageDead(_92)<br/>_55 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb69__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb70__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_55)<br/>StorageLive(_117)<br/>_117 = _4<br/>_0 = std::result::Result::&lt;u64, error::ErrorCode&gt;::Ok(move _117)<br/>StorageDead(_117)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb71__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/>StorageDead(_93)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb72__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/>StorageDead(_90)<br/>StorageDead(_89)<br/>StorageDead(_99)<br/>StorageDead(_95)<br/>StorageDead(_92)<br/>StorageDead(_87)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb73__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb74__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageDead(_59)<br/>StorageDead(_58)<br/>StorageDead(_68)<br/>StorageDead(_64)<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb75__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb76__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb77__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb78__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_9)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb79__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb80__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_11)<br/>StorageDead(_8)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb81__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb82__0_2220 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2220 -> bb1__0_2220 [label="return"];
    bb1__0_2220 -> bb2__0_2220 [label="return"];
    bb2__0_2220 -> bb3__0_2220 [label="0"];
    bb2__0_2220 -> bb5__0_2220 [label="1"];
    bb2__0_2220 -> bb4__0_2220 [label="otherwise"];
    bb3__0_2220 -> bb7__0_2220 [label="return"];
    bb5__0_2220 -> bb6__0_2220 [label="return"];
    bb6__0_2220 -> bb80__0_2220 [label=""];
    bb7__0_2220 -> bb8__0_2220 [label="return"];
    bb8__0_2220 -> bb9__0_2220 [label="0"];
    bb8__0_2220 -> bb10__0_2220 [label="1"];
    bb8__0_2220 -> bb4__0_2220 [label="otherwise"];
    bb9__0_2220 -> bb12__0_2220 [label="return"];
    bb10__0_2220 -> bb11__0_2220 [label="return"];
    bb11__0_2220 -> bb78__0_2220 [label=""];
    bb12__0_2220 -> bb13__0_2220 [label="return"];
    bb13__0_2220 -> bb14__0_2220 [label="0"];
    bb13__0_2220 -> bb15__0_2220 [label="1"];
    bb13__0_2220 -> bb4__0_2220 [label="otherwise"];
    bb14__0_2220 -> bb17__0_2220 [label="return"];
    bb15__0_2220 -> bb16__0_2220 [label="return"];
    bb16__0_2220 -> bb78__0_2220 [label=""];
    bb17__0_2220 -> bb18__0_2220 [label="return"];
    bb18__0_2220 -> bb19__0_2220 [label="0"];
    bb18__0_2220 -> bb20__0_2220 [label="1"];
    bb18__0_2220 -> bb4__0_2220 [label="otherwise"];
    bb19__0_2220 -> bb22__0_2220 [label="return"];
    bb20__0_2220 -> bb21__0_2220 [label="return"];
    bb21__0_2220 -> bb76__0_2220 [label=""];
    bb22__0_2220 -> bb23__0_2220 [label="return"];
    bb23__0_2220 -> bb24__0_2220 [label="0"];
    bb23__0_2220 -> bb25__0_2220 [label="1"];
    bb23__0_2220 -> bb4__0_2220 [label="otherwise"];
    bb24__0_2220 -> bb27__0_2220 [label="return"];
    bb25__0_2220 -> bb26__0_2220 [label="return"];
    bb26__0_2220 -> bb76__0_2220 [label=""];
    bb27__0_2220 -> bb28__0_2220 [label="return"];
    bb28__0_2220 -> bb29__0_2220 [label="0"];
    bb28__0_2220 -> bb30__0_2220 [label="1"];
    bb28__0_2220 -> bb4__0_2220 [label="otherwise"];
    bb29__0_2220 -> bb33__0_2220 [label="0"];
    bb29__0_2220 -> bb32__0_2220 [label="otherwise"];
    bb30__0_2220 -> bb31__0_2220 [label="return"];
    bb31__0_2220 -> bb77__0_2220 [label=""];
    bb32__0_2220 -> bb34__0_2220 [label="return"];
    bb33__0_2220 -> bb52__0_2220 [label="0"];
    bb33__0_2220 -> bb51__0_2220 [label="otherwise"];
    bb34__0_2220 -> bb35__0_2220 [label="return"];
    bb35__0_2220 -> bb36__0_2220 [label="return"];
    bb36__0_2220 -> bb37__0_2220 [label="0"];
    bb36__0_2220 -> bb38__0_2220 [label="1"];
    bb36__0_2220 -> bb4__0_2220 [label="otherwise"];
    bb37__0_2220 -> bb40__0_2220 [label="return"];
    bb38__0_2220 -> bb39__0_2220 [label="return"];
    bb39__0_2220 -> bb73__0_2220 [label=""];
    bb40__0_2220 -> bb41__0_2220 [label="return"];
    bb41__0_2220 -> bb42__0_2220 [label="0"];
    bb41__0_2220 -> bb43__0_2220 [label="1"];
    bb41__0_2220 -> bb4__0_2220 [label="otherwise"];
    bb42__0_2220 -> bb45__0_2220 [label="return"];
    bb43__0_2220 -> bb44__0_2220 [label="return"];
    bb44__0_2220 -> bb73__0_2220 [label=""];
    bb45__0_2220 -> bb46__0_2220 [label="return"];
    bb46__0_2220 -> bb47__0_2220 [label="0"];
    bb46__0_2220 -> bb48__0_2220 [label="1"];
    bb46__0_2220 -> bb4__0_2220 [label="otherwise"];
    bb47__0_2220 -> bb50__0_2220 [label="return"];
    bb48__0_2220 -> bb49__0_2220 [label="return"];
    bb49__0_2220 -> bb74__0_2220 [label=""];
    bb50__0_2220 -> bb70__0_2220 [label=""];
    bb51__0_2220 -> bb53__0_2220 [label="return"];
    bb52__0_2220 -> bb69__0_2220 [label=""];
    bb53__0_2220 -> bb54__0_2220 [label="return"];
    bb54__0_2220 -> bb55__0_2220 [label="0"];
    bb54__0_2220 -> bb56__0_2220 [label="1"];
    bb54__0_2220 -> bb4__0_2220 [label="otherwise"];
    bb55__0_2220 -> bb58__0_2220 [label="return"];
    bb56__0_2220 -> bb57__0_2220 [label="return"];
    bb57__0_2220 -> bb71__0_2220 [label=""];
    bb58__0_2220 -> bb59__0_2220 [label="return"];
    bb59__0_2220 -> bb60__0_2220 [label="0"];
    bb59__0_2220 -> bb61__0_2220 [label="1"];
    bb59__0_2220 -> bb4__0_2220 [label="otherwise"];
    bb60__0_2220 -> bb63__0_2220 [label="return"];
    bb61__0_2220 -> bb62__0_2220 [label="return"];
    bb62__0_2220 -> bb71__0_2220 [label=""];
    bb63__0_2220 -> bb64__0_2220 [label="return"];
    bb64__0_2220 -> bb65__0_2220 [label="0"];
    bb64__0_2220 -> bb66__0_2220 [label="1"];
    bb64__0_2220 -> bb4__0_2220 [label="otherwise"];
    bb65__0_2220 -> bb68__0_2220 [label="return"];
    bb66__0_2220 -> bb67__0_2220 [label="return"];
    bb67__0_2220 -> bb72__0_2220 [label=""];
    bb68__0_2220 -> bb69__0_2220 [label=""];
    bb69__0_2220 -> bb70__0_2220 [label=""];
    bb70__0_2220 -> bb82__0_2220 [label=""];
    bb71__0_2220 -> bb72__0_2220 [label=""];
    bb72__0_2220 -> bb75__0_2220 [label=""];
    bb73__0_2220 -> bb74__0_2220 [label=""];
    bb74__0_2220 -> bb75__0_2220 [label=""];
    bb75__0_2220 -> bb81__0_2220 [label=""];
    bb76__0_2220 -> bb77__0_2220 [label=""];
    bb77__0_2220 -> bb79__0_2220 [label=""];
    bb78__0_2220 -> bb79__0_2220 [label=""];
    bb79__0_2220 -> bb80__0_2220 [label=""];
    bb80__0_2220 -> bb81__0_2220 [label=""];
    bb81__0_2220 -> bb82__0_2220 [label=""];
}
