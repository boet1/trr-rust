digraph Mir_0_5650 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn admin::handle_update_spot_market_fee_adjustment(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::admin::AdminUpdateSpotMarket&lt;ReErased&gt;&gt;, _2: i16) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _5: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _6: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _7: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _8: isize;<br align="left"/>let _9: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _10: !;<br align="left"/>let mut _11: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _12: ();<br align="left"/>let _13: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _14: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _15: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _16: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _17: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _18: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _19: Closure(DefId(0:5651 ~ drift[d311]::instructions::admin::handle_update_spot_market_fee_adjustment::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _20: isize;<br align="left"/>let _21: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _22: !;<br align="left"/>let mut _23: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _24: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _25: ();<br align="left"/>let mut _26: &amp;ReErased str;<br align="left"/>let _27: &amp;ReErased str;<br align="left"/>let mut _28: &amp;ReErased std::string::String;<br align="left"/>let _29: &amp;ReErased std::string::String;<br align="left"/>let _30: std::string::String;<br align="left"/>let _31: std::string::String;<br align="left"/>let mut _32: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _33: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _34: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _35: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _36: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _37: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _38: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _39: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _40: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _41: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _42: &amp;ReErased u16;<br align="left"/>let _43: &amp;ReErased u16;<br align="left"/>let _44: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _45: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _46: ();<br align="left"/>let mut _47: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _48: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _49: bool;<br align="left"/>let mut _50: u64;<br align="left"/>let mut _51: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _52: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _53: u16;<br align="left"/>let mut _54: i16;<br align="left"/>let mut _55: isize;<br align="left"/>let _56: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _57: !;<br align="left"/>let mut _58: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _59: u64;<br align="left"/>let mut _60: ();<br align="left"/>let _61: error::ErrorCode;<br align="left"/>let _62: ();<br align="left"/>let mut _63: &amp;ReErased str;<br align="left"/>let _64: &amp;ReErased str;<br align="left"/>let mut _65: &amp;ReErased std::string::String;<br align="left"/>let _66: &amp;ReErased std::string::String;<br align="left"/>let _67: std::string::String;<br align="left"/>let _68: std::string::String;<br align="left"/>let mut _69: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _70: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _71: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _72: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _73: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _74: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _75: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _76: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _77: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _78: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _79: &amp;ReErased error::ErrorCode;<br align="left"/>let _80: &amp;ReErased error::ErrorCode;<br align="left"/>let _81: ();<br align="left"/>let mut _82: &amp;ReErased str;<br align="left"/>let _83: &amp;ReErased str;<br align="left"/>let mut _84: &amp;ReErased std::string::String;<br align="left"/>let _85: &amp;ReErased std::string::String;<br align="left"/>let _86: std::string::String;<br align="left"/>let _87: std::string::String;<br align="left"/>let mut _88: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _89: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _90: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _91: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _92: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _93: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _94: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _95: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _96: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _97: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _98: &amp;ReErased i16;<br align="left"/>let _99: &amp;ReErased i16;<br align="left"/>let mut _100: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _101: &amp;ReErased u64;<br align="left"/>let _102: &amp;ReErased u64;<br align="left"/>let _103: u64;<br align="left"/>let mut _104: error::ErrorCode;<br align="left"/>let mut _105: isize;<br align="left"/>let _106: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _107: !;<br align="left"/>let mut _108: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _109: ();<br align="left"/>let _110: ();<br align="left"/>let mut _111: &amp;ReErased str;<br align="left"/>let _112: &amp;ReErased str;<br align="left"/>let mut _113: &amp;ReErased std::string::String;<br align="left"/>let _114: &amp;ReErased std::string::String;<br align="left"/>let _115: std::string::String;<br align="left"/>let _116: std::string::String;<br align="left"/>let mut _117: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _118: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _119: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _120: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _121: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _122: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _123: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _124: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _125: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _126: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _127: &amp;ReErased i16;<br align="left"/>let _128: &amp;ReErased i16;<br align="left"/>let _129: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _130: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _131: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _132: &amp;ReErased i16;<br align="left"/>let _133: &amp;ReErased i16;<br align="left"/>let mut _134: i16;<br align="left"/>let mut _135: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _136: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _137: ();<br align="left"/>let mut _138: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _139: &amp;ReErased u64;<br align="left"/>let mut _140: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _141: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _142: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _143: &amp;ReErased mut instructions::admin::AdminUpdateSpotMarket&lt;ReErased&gt;;<br align="left"/>let mut _144: &amp;ReErased mut instructions::admin::AdminUpdateSpotMarket&lt;ReErased&gt;;<br align="left"/>let mut _145: isize;<br align="left"/>let mut _146: isize;<br align="left"/>let mut _147: isize;<br align="left"/>let mut _148: isize;<br align="left"/>let mut _149: isize;<br align="left"/>let mut _150: isize;<br align="left"/>let mut _151: isize;<br align="left"/>let mut _152: isize;<br align="left"/>let mut _153: isize;<br align="left"/>let mut _154: isize;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug fee_adjustment =&gt; _2;<br align="left"/>debug residual =&gt; _9;<br align="left"/>debug val =&gt; _12;<br align="left"/>debug spot =&gt; _13;<br align="left"/>debug residual =&gt; _21;<br align="left"/>debug val =&gt; _24;<br align="left"/>debug res =&gt; _31;<br align="left"/>debug residual =&gt; _56;<br align="left"/>debug val =&gt; _59;<br align="left"/>debug error_code =&gt; _61;<br align="left"/>debug res =&gt; _68;<br align="left"/>debug res =&gt; _87;<br align="left"/>debug residual =&gt; _106;<br align="left"/>debug val =&gt; _109;<br align="left"/>debug res =&gt; _116;<br align="left"/>>;
    bb0__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_143 = deref_copy (_1.1: &amp;mut instructions::admin::AdminUpdateSpotMarket&lt;'_&gt;)<br/>_7 = &amp;((*_143).2: anchor_lang::prelude::AccountLoader&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_6 = &amp;(*_7)<br/></td></tr><tr><td align="left">_5 = constraints::spot_market_valid(move _6)</td></tr></table>>];
    bb1__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb2__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_8 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb3__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_4 as Continue).0: ())<br/>_3 = _12<br/>StorageDead(_12)<br/>_145 = discriminant(_4)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_144 = deref_copy (_1.1: &amp;mut instructions::admin::AdminUpdateSpotMarket&lt;'_&gt;)<br/>_18 = &amp;((*_144).2: anchor_lang::prelude::AccountLoader&lt;'_, state::spot_market::SpotMarket&gt;)<br/></td></tr><tr><td align="left">_17 = anchor_lang::prelude::AccountLoader::&lt;'_, SpotMarket&gt;::load_mut(move _18)</td></tr></table>>];
    bb4__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>_9 = move ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_11)<br/>_11 = move _9<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _11)</td></tr></table>>];
    bb6__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_9)<br/>_151 = discriminant(_4)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageLive(_19)<br/>_19 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_16 = std::result::Result::&lt;RefMut&lt;'_, SpotMarket&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _17, move _19)</td></tr></table>>];
    bb8__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">_15 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _16)</td></tr></table>>];
    bb9__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>_20 = discriminant(_15)<br/></td></tr><tr><td align="left">switchInt(move _20)</td></tr></table>>];
    bb10__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_24)<br/>_24 = move ((_15 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_14 = move _24<br/>StorageDead(_24)<br/>_13 = &amp;mut _14<br/>_149 = discriminant(_15)<br/>StorageDead(_15)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>_142 = const _<br/>_35 = &amp;(*_142)<br/>_34 = &amp;(*_35)<br/>_33 = move _34 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_34)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>_45 = &amp;(*_13)<br/></td></tr><tr><td align="left">_44 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _45)</td></tr></table>>];
    bb11__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = ((_15 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_23)<br/>_23 = _21<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _23)</td></tr></table>>];
    bb12__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_21)<br/>_147 = discriminant(_15)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>_43 = &amp;((*_44).42: u16)<br/>_42 = &amp;(*_43)<br/></td></tr><tr><td align="left">_41 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _42)</td></tr></table>>];
    bb14__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>_40 = [move _41]<br/>StorageDead(_41)<br/>_39 = &amp;_40<br/>_38 = &amp;(*_39)<br/>_37 = move _38 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">_32 = Arguments::&lt;'_&gt;::new_v1(move _33, move _37)</td></tr></table>>];
    bb15__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">_31 = format(move _32)</td></tr></table>>];
    bb16__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_44)<br/>StorageDead(_43)<br/>StorageDead(_40)<br/>StorageDead(_39)<br/>StorageDead(_35)<br/>_30 = move _31<br/>StorageDead(_31)<br/>_29 = &amp;_30<br/>_28 = &amp;(*_29)<br/></td></tr><tr><td align="left">_27 = &lt;String as Deref&gt;::deref(move _28)</td></tr></table>>];
    bb17__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">_26 = &amp;(*_27)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">_25 = solana_program::log::sol_log(move _26)</td></tr></table>>];
    bb18__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/></td></tr><tr><td align="left">drop(_30)</td></tr></table>>];
    bb19__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_29)<br/>StorageDead(_27)<br/>StorageDead(_25)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>_54 = _2<br/></td></tr><tr><td align="left">_53 = core::num::&lt;impl i16&gt;::unsigned_abs(move _54)</td></tr></table>>];
    bb20__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/></td></tr><tr><td align="left">_52 = &lt;u16 as Cast&gt;::cast::&lt;u64&gt;(move _53)</td></tr></table>>];
    bb21__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/></td></tr><tr><td align="left">_51 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _52)</td></tr></table>>];
    bb22__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>_55 = discriminant(_51)<br/></td></tr><tr><td align="left">switchInt(move _55)</td></tr></table>>];
    bb23__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_59)<br/>_59 = ((_51 as Continue).0: u64)<br/>_50 = _59<br/>StorageDead(_59)<br/>_49 = Le(move _50, const _)<br/></td></tr><tr><td align="left">switchInt(move _49)</td></tr></table>>];
    bb24__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_56)<br/>_56 = ((_51 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_58)<br/>_58 = _56<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _58)</td></tr></table>>];
    bb25__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageDead(_56)<br/>StorageDead(_51)<br/>StorageDead(_50)<br/>StorageDead(_49)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageDead(_50)<br/>StorageLive(_60)<br/>_60 = ()<br/>_48 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _60)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageDead(_50)<br/>StorageLive(_61)<br/>_61 = error::ErrorCode::DefaultError<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>_141 = const _<br/>_72 = &amp;(*_141)<br/>_71 = &amp;(*_72)<br/>_70 = move _71 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_71)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>_80 = &amp;_61<br/>_79 = &amp;(*_80)<br/></td></tr><tr><td align="left">_78 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _79)</td></tr></table>>];
    bb28__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>_77 = [move _78]<br/>StorageDead(_78)<br/>_76 = &amp;_77<br/>_75 = &amp;(*_76)<br/>_74 = move _75 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_75)<br/></td></tr><tr><td align="left">_69 = Arguments::&lt;'_&gt;::new_v1(move _70, move _74)</td></tr></table>>];
    bb29__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageDead(_70)<br/></td></tr><tr><td align="left">_68 = format(move _69)</td></tr></table>>];
    bb30__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageDead(_80)<br/>StorageDead(_77)<br/>StorageDead(_76)<br/>StorageDead(_72)<br/>_67 = move _68<br/>StorageDead(_68)<br/>_66 = &amp;_67<br/>_65 = &amp;(*_66)<br/></td></tr><tr><td align="left">_64 = &lt;String as Deref&gt;::deref(move _65)</td></tr></table>>];
    bb31__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">_63 = &amp;(*_64)<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">_62 = solana_program::log::sol_log(move _63)</td></tr></table>>];
    bb32__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/></td></tr><tr><td align="left">drop(_67)</td></tr></table>>];
    bb33__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>StorageDead(_66)<br/>StorageDead(_64)<br/>StorageDead(_62)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>_140 = const _<br/>_91 = &amp;(*_140)<br/>_90 = &amp;(*_91)<br/>_89 = move _90 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_90)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>_99 = &amp;_2<br/>_98 = &amp;(*_99)<br/></td></tr><tr><td align="left">_97 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i16&gt;(move _98)</td></tr></table>>];
    bb34__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>_139 = const _<br/>_102 = &amp;(*_139)<br/>_101 = &amp;(*_102)<br/></td></tr><tr><td align="left">_100 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _101)</td></tr></table>>];
    bb35__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/>_96 = [move _97, move _100]<br/>StorageDead(_100)<br/>StorageDead(_97)<br/>_95 = &amp;_96<br/>_94 = &amp;(*_95)<br/>_93 = move _94 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_94)<br/></td></tr><tr><td align="left">_88 = Arguments::&lt;'_&gt;::new_v1(move _89, move _93)</td></tr></table>>];
    bb36__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageDead(_89)<br/></td></tr><tr><td align="left">_87 = format(move _88)</td></tr></table>>];
    bb37__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>StorageDead(_102)<br/>StorageDead(_99)<br/>StorageDead(_96)<br/>StorageDead(_95)<br/>StorageDead(_91)<br/>_86 = move _87<br/>StorageDead(_87)<br/>_85 = &amp;_86<br/>_84 = &amp;(*_85)<br/></td></tr><tr><td align="left">_83 = &lt;String as Deref&gt;::deref(move _84)</td></tr></table>>];
    bb38__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">_82 = &amp;(*_83)<br/>StorageDead(_84)<br/></td></tr><tr><td align="left">_81 = solana_program::log::sol_log(move _82)</td></tr></table>>];
    bb39__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/></td></tr><tr><td align="left">drop(_86)</td></tr></table>>];
    bb40__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>StorageDead(_85)<br/>StorageDead(_83)<br/>StorageDead(_81)<br/>StorageLive(_104)<br/>_104 = _61<br/>_48 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _104)<br/>StorageDead(_104)<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/></td></tr><tr><td align="left">_47 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _48)</td></tr></table>>];
    bb42__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>_105 = discriminant(_47)<br/></td></tr><tr><td align="left">switchInt(move _105)</td></tr></table>>];
    bb43__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageLive(_109)<br/>_109 = ((_47 as Continue).0: ())<br/>_46 = _109<br/>StorageDead(_109)<br/>StorageDead(_47)<br/>StorageDead(_46)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>_138 = const _<br/>_120 = &amp;(*_138)<br/>_119 = &amp;(*_120)<br/>_118 = move _119 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_119)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>_130 = &amp;(*_13)<br/></td></tr><tr><td align="left">_129 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _130)</td></tr></table>>];
    bb44__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_106)<br/>_106 = ((_47 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_108)<br/>_108 = _106<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _108)</td></tr></table>>];
    bb45__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/>StorageDead(_106)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_130)<br/>_128 = &amp;((*_129).49: i16)<br/>_127 = &amp;(*_128)<br/></td></tr><tr><td align="left">_126 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;i16&gt;(move _127)</td></tr></table>>];
    bb47__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>_133 = &amp;_2<br/>_132 = &amp;(*_133)<br/></td></tr><tr><td align="left">_131 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;i16&gt;(move _132)</td></tr></table>>];
    bb48__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_132)<br/>_125 = [move _126, move _131]<br/>StorageDead(_131)<br/>StorageDead(_126)<br/>_124 = &amp;_125<br/>_123 = &amp;(*_124)<br/>_122 = move _123 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_123)<br/></td></tr><tr><td align="left">_117 = Arguments::&lt;'_&gt;::new_v1(move _118, move _122)</td></tr></table>>];
    bb49__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/>StorageDead(_118)<br/></td></tr><tr><td align="left">_116 = format(move _117)</td></tr></table>>];
    bb50__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/>StorageDead(_133)<br/>StorageDead(_129)<br/>StorageDead(_128)<br/>StorageDead(_125)<br/>StorageDead(_124)<br/>StorageDead(_120)<br/>_115 = move _116<br/>StorageDead(_116)<br/>_114 = &amp;_115<br/>_113 = &amp;(*_114)<br/></td></tr><tr><td align="left">_112 = &lt;String as Deref&gt;::deref(move _113)</td></tr></table>>];
    bb51__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">_111 = &amp;(*_112)<br/>StorageDead(_113)<br/></td></tr><tr><td align="left">_110 = solana_program::log::sol_log(move _111)</td></tr></table>>];
    bb52__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/></td></tr><tr><td align="left">drop(_115)</td></tr></table>>];
    bb53__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_115)<br/>StorageDead(_114)<br/>StorageDead(_112)<br/>StorageDead(_110)<br/>StorageLive(_134)<br/>_134 = _2<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>_136 = &amp;mut (*_13)<br/></td></tr><tr><td align="left">_135 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _136)</td></tr></table>>];
    bb54__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_136)<br/>((*_135).49: i16) = move _134<br/>StorageDead(_134)<br/>StorageDead(_135)<br/>StorageLive(_137)<br/>_137 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _137)<br/>StorageDead(_137)<br/></td></tr><tr><td align="left">drop(_14)</td></tr></table>>];
    bb55__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb56__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">drop(_14)</td></tr></table>>];
    bb57__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb58__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left">return</td></tr></table>>];
    bb59__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">59 (cleanup)</td></tr><tr><td align="left">drop(_115)</td></tr></table>>];
    bb60__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">60 (cleanup)</td></tr><tr><td align="left">drop(_86)</td></tr></table>>];
    bb61__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">61 (cleanup)</td></tr><tr><td align="left">drop(_67)</td></tr></table>>];
    bb62__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">62 (cleanup)</td></tr><tr><td align="left">drop(_30)</td></tr></table>>];
    bb63__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">63 (cleanup)</td></tr><tr><td align="left">drop(_14)</td></tr></table>>];
    bb64__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">64 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb65__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">65 (cleanup)</td></tr><tr><td align="left" balign="left">_153 = discriminant(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb66__0_5650 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">66 (cleanup)</td></tr><tr><td align="left" balign="left">_154 = discriminant(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_5650 -> bb1__0_5650 [label="return"];
    bb1__0_5650 -> bb2__0_5650 [label="return"];
    bb1__0_5650 -> bb64__0_5650 [label="unwind"];
    bb2__0_5650 -> bb3__0_5650 [label="0"];
    bb2__0_5650 -> bb5__0_5650 [label="1"];
    bb2__0_5650 -> bb4__0_5650 [label="otherwise"];
    bb3__0_5650 -> bb7__0_5650 [label="return"];
    bb5__0_5650 -> bb6__0_5650 [label="return"];
    bb5__0_5650 -> bb66__0_5650 [label="unwind"];
    bb6__0_5650 -> bb58__0_5650 [label=""];
    bb7__0_5650 -> bb8__0_5650 [label="return"];
    bb7__0_5650 -> bb64__0_5650 [label="unwind"];
    bb8__0_5650 -> bb9__0_5650 [label="return"];
    bb8__0_5650 -> bb64__0_5650 [label="unwind"];
    bb9__0_5650 -> bb10__0_5650 [label="0"];
    bb9__0_5650 -> bb11__0_5650 [label="1"];
    bb9__0_5650 -> bb4__0_5650 [label="otherwise"];
    bb10__0_5650 -> bb13__0_5650 [label="return"];
    bb10__0_5650 -> bb63__0_5650 [label="unwind"];
    bb11__0_5650 -> bb12__0_5650 [label="return"];
    bb11__0_5650 -> bb65__0_5650 [label="unwind"];
    bb12__0_5650 -> bb57__0_5650 [label=""];
    bb13__0_5650 -> bb14__0_5650 [label="return"];
    bb13__0_5650 -> bb63__0_5650 [label="unwind"];
    bb14__0_5650 -> bb15__0_5650 [label="return"];
    bb14__0_5650 -> bb63__0_5650 [label="unwind"];
    bb15__0_5650 -> bb16__0_5650 [label="return"];
    bb15__0_5650 -> bb63__0_5650 [label="unwind"];
    bb16__0_5650 -> bb17__0_5650 [label="return"];
    bb16__0_5650 -> bb62__0_5650 [label="unwind"];
    bb17__0_5650 -> bb18__0_5650 [label="return"];
    bb17__0_5650 -> bb62__0_5650 [label="unwind"];
    bb18__0_5650 -> bb19__0_5650 [label="return"];
    bb18__0_5650 -> bb63__0_5650 [label="unwind"];
    bb19__0_5650 -> bb20__0_5650 [label="return"];
    bb19__0_5650 -> bb63__0_5650 [label="unwind"];
    bb20__0_5650 -> bb21__0_5650 [label="return"];
    bb20__0_5650 -> bb63__0_5650 [label="unwind"];
    bb21__0_5650 -> bb22__0_5650 [label="return"];
    bb21__0_5650 -> bb63__0_5650 [label="unwind"];
    bb22__0_5650 -> bb23__0_5650 [label="0"];
    bb22__0_5650 -> bb24__0_5650 [label="1"];
    bb22__0_5650 -> bb4__0_5650 [label="otherwise"];
    bb23__0_5650 -> bb27__0_5650 [label="0"];
    bb23__0_5650 -> bb26__0_5650 [label="otherwise"];
    bb24__0_5650 -> bb25__0_5650 [label="return"];
    bb24__0_5650 -> bb63__0_5650 [label="unwind"];
    bb25__0_5650 -> bb56__0_5650 [label=""];
    bb26__0_5650 -> bb41__0_5650 [label=""];
    bb27__0_5650 -> bb28__0_5650 [label="return"];
    bb27__0_5650 -> bb63__0_5650 [label="unwind"];
    bb28__0_5650 -> bb29__0_5650 [label="return"];
    bb28__0_5650 -> bb63__0_5650 [label="unwind"];
    bb29__0_5650 -> bb30__0_5650 [label="return"];
    bb29__0_5650 -> bb63__0_5650 [label="unwind"];
    bb30__0_5650 -> bb31__0_5650 [label="return"];
    bb30__0_5650 -> bb61__0_5650 [label="unwind"];
    bb31__0_5650 -> bb32__0_5650 [label="return"];
    bb31__0_5650 -> bb61__0_5650 [label="unwind"];
    bb32__0_5650 -> bb33__0_5650 [label="return"];
    bb32__0_5650 -> bb63__0_5650 [label="unwind"];
    bb33__0_5650 -> bb34__0_5650 [label="return"];
    bb33__0_5650 -> bb63__0_5650 [label="unwind"];
    bb34__0_5650 -> bb35__0_5650 [label="return"];
    bb34__0_5650 -> bb63__0_5650 [label="unwind"];
    bb35__0_5650 -> bb36__0_5650 [label="return"];
    bb35__0_5650 -> bb63__0_5650 [label="unwind"];
    bb36__0_5650 -> bb37__0_5650 [label="return"];
    bb36__0_5650 -> bb63__0_5650 [label="unwind"];
    bb37__0_5650 -> bb38__0_5650 [label="return"];
    bb37__0_5650 -> bb60__0_5650 [label="unwind"];
    bb38__0_5650 -> bb39__0_5650 [label="return"];
    bb38__0_5650 -> bb60__0_5650 [label="unwind"];
    bb39__0_5650 -> bb40__0_5650 [label="return"];
    bb39__0_5650 -> bb63__0_5650 [label="unwind"];
    bb40__0_5650 -> bb41__0_5650 [label=""];
    bb41__0_5650 -> bb42__0_5650 [label="return"];
    bb41__0_5650 -> bb63__0_5650 [label="unwind"];
    bb42__0_5650 -> bb43__0_5650 [label="0"];
    bb42__0_5650 -> bb44__0_5650 [label="1"];
    bb42__0_5650 -> bb4__0_5650 [label="otherwise"];
    bb43__0_5650 -> bb46__0_5650 [label="return"];
    bb43__0_5650 -> bb63__0_5650 [label="unwind"];
    bb44__0_5650 -> bb45__0_5650 [label="return"];
    bb44__0_5650 -> bb63__0_5650 [label="unwind"];
    bb45__0_5650 -> bb56__0_5650 [label=""];
    bb46__0_5650 -> bb47__0_5650 [label="return"];
    bb46__0_5650 -> bb63__0_5650 [label="unwind"];
    bb47__0_5650 -> bb48__0_5650 [label="return"];
    bb47__0_5650 -> bb63__0_5650 [label="unwind"];
    bb48__0_5650 -> bb49__0_5650 [label="return"];
    bb48__0_5650 -> bb63__0_5650 [label="unwind"];
    bb49__0_5650 -> bb50__0_5650 [label="return"];
    bb49__0_5650 -> bb63__0_5650 [label="unwind"];
    bb50__0_5650 -> bb51__0_5650 [label="return"];
    bb50__0_5650 -> bb59__0_5650 [label="unwind"];
    bb51__0_5650 -> bb52__0_5650 [label="return"];
    bb51__0_5650 -> bb59__0_5650 [label="unwind"];
    bb52__0_5650 -> bb53__0_5650 [label="return"];
    bb52__0_5650 -> bb63__0_5650 [label="unwind"];
    bb53__0_5650 -> bb54__0_5650 [label="return"];
    bb53__0_5650 -> bb63__0_5650 [label="unwind"];
    bb54__0_5650 -> bb55__0_5650 [label="return"];
    bb54__0_5650 -> bb64__0_5650 [label="unwind"];
    bb55__0_5650 -> bb58__0_5650 [label=""];
    bb56__0_5650 -> bb57__0_5650 [label="return"];
    bb56__0_5650 -> bb64__0_5650 [label="unwind"];
    bb57__0_5650 -> bb58__0_5650 [label=""];
    bb59__0_5650 -> bb63__0_5650 [label="return"];
    bb60__0_5650 -> bb63__0_5650 [label="return"];
    bb61__0_5650 -> bb63__0_5650 [label="return"];
    bb62__0_5650 -> bb63__0_5650 [label="return"];
    bb63__0_5650 -> bb64__0_5650 [label="return"];
    bb65__0_5650 -> bb64__0_5650 [label=""];
    bb66__0_5650 -> bb64__0_5650 [label=""];
}
