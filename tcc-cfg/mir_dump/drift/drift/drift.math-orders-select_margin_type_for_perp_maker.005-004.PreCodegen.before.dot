digraph Mir_0_2624 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn math::orders::select_margin_type_for_perp_maker(_1: &amp;ReErased state::user::User, _2: i64, _3: u16) -&gt; std::result::Result&lt;(math::margin::MarginRequirementType, bool), error::ErrorCode&gt;<br align="left"/>let _4: i64;<br align="left"/>let mut _5: std::result::Result&lt;&amp;ReErased state::user::PerpPosition, error::ErrorCode&gt;;<br align="left"/>let mut _6: &amp;ReErased state::user::User;<br align="left"/>let mut _7: u16;<br align="left"/>let mut _8: Closure(DefId(0:2625 ~ drift[d311]::math::orders::select_margin_type_for_perp_maker::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((&amp;ReErased state::user::PerpPosition,)) -&gt; i64, []), ()]);<br align="left"/>let _9: i64;<br align="left"/>let mut _10: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _11: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _12: i64;<br align="left"/>let mut _13: i64;<br align="left"/>let mut _14: isize;<br align="left"/>let _15: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _16: !;<br align="left"/>let mut _17: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _18: i64;<br align="left"/>let _19: ();<br align="left"/>let mut _20: bool;<br align="left"/>let mut _21: i64;<br align="left"/>let mut _22: !;<br align="left"/>let mut _23: (math::margin::MarginRequirementType, bool);<br align="left"/>let mut _24: math::margin::MarginRequirementType;<br align="left"/>let _25: ();<br align="left"/>let mut _26: bool;<br align="left"/>let mut _27: i64;<br align="left"/>let mut _28: i64;<br align="left"/>let mut _29: i64;<br align="left"/>let mut _30: i64;<br align="left"/>let mut _31: bool;<br align="left"/>let mut _32: i64;<br align="left"/>let mut _33: i64;<br align="left"/>let mut _34: i64;<br align="left"/>let mut _35: i64;<br align="left"/>let mut _36: !;<br align="left"/>let mut _37: (math::margin::MarginRequirementType, bool);<br align="left"/>let mut _38: math::margin::MarginRequirementType;<br align="left"/>let mut _39: (math::margin::MarginRequirementType, bool);<br align="left"/>let mut _40: math::margin::MarginRequirementType;<br align="left"/>debug maker =&gt; _1;<br align="left"/>debug base_asset_amount_filled =&gt; _2;<br align="left"/>debug market_index =&gt; _3;<br align="left"/>debug position_after_fill =&gt; _4;<br align="left"/>debug position_before =&gt; _9;<br align="left"/>debug residual =&gt; _15;<br align="left"/>debug val =&gt; _18;<br align="left"/>>;
    bb0__0_2624 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = &amp;(*_1)<br/>StorageLive(_7)<br/>_7 = _3<br/></td></tr><tr><td align="left">_5 = User::get_perp_position(move _6, move _7)</td></tr></table>>];
    bb1__0_2624 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_6)<br/>StorageLive(_8)<br/>_8 = {closure@programs/drift/src/math/orders.rs:1345:20: 1345:23}<br/></td></tr><tr><td align="left">_4 = std::result::Result::&lt;&amp;PerpPosition, error::ErrorCode&gt;::map_or::&lt;i64, {closure@programs/drift/src/math/orders.rs:1345:20: 1345:23}&gt;(move _5, const 0_i64, move _8)</td></tr></table>>];
    bb2__0_2624 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_5)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = _4<br/>StorageLive(_13)<br/>_13 = _2<br/></td></tr><tr><td align="left">_11 = &lt;i64 as SafeMath&gt;::safe_sub(move _12, move _13)</td></tr></table>>];
    bb3__0_2624 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">_10 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _11)</td></tr></table>>];
    bb4__0_2624 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>_14 = discriminant(_10)<br/></td></tr><tr><td align="left">switchInt(move _14)</td></tr></table>>];
    bb5__0_2624 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_18)<br/>_18 = ((_10 as Continue).0: i64)<br/>_9 = _18<br/>StorageDead(_18)<br/>StorageDead(_10)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_21 = _4<br/>_20 = Eq(move _21, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _20)</td></tr></table>>];
    bb6__0_2624 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb7__0_2624 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_15)<br/>_15 = ((_10 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_17)<br/>_17 = _15<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(math::margin::MarginRequirementType, bool), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _17)</td></tr></table>>];
    bb8__0_2624 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_15)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_2624 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_24 = math::margin::MarginRequirementType::Maintenance<br/>_23 = (move _24, const false)<br/>StorageDead(_24)<br/>_0 = std::result::Result::&lt;(math::margin::MarginRequirementType, bool), error::ErrorCode&gt;::Ok(move _23)<br/>StorageDead(_23)<br/>StorageDead(_20)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_2624 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>_19 = const ()<br/>StorageDead(_20)<br/>StorageDead(_19)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>_28 = _4<br/></td></tr><tr><td align="left">_27 = core::num::&lt;impl i64&gt;::signum(move _28)</td></tr></table>>];
    bb11__0_2624 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>_30 = _9<br/></td></tr><tr><td align="left">_29 = core::num::&lt;impl i64&gt;::signum(move _30)</td></tr></table>>];
    bb12__0_2624 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>_26 = Eq(move _27, move _29)<br/></td></tr><tr><td align="left">switchInt(move _26)</td></tr></table>>];
    bb13__0_2624 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_27)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>_33 = _4<br/></td></tr><tr><td align="left">_32 = core::num::&lt;impl i64&gt;::abs(move _33)</td></tr></table>>];
    bb14__0_2624 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>_35 = _9<br/></td></tr><tr><td align="left">_34 = core::num::&lt;impl i64&gt;::abs(move _35)</td></tr></table>>];
    bb15__0_2624 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>_31 = Lt(move _32, move _34)<br/></td></tr><tr><td align="left">switchInt(move _31)</td></tr></table>>];
    bb16__0_2624 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_32)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>_38 = math::margin::MarginRequirementType::Maintenance<br/>_37 = (move _38, const false)<br/>StorageDead(_38)<br/>_0 = std::result::Result::&lt;(math::margin::MarginRequirementType, bool), error::ErrorCode&gt;::Ok(move _37)<br/>StorageDead(_37)<br/>StorageDead(_31)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_2624 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_2624 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_2624 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">_25 = const ()<br/>StorageDead(_31)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_40 = math::margin::MarginRequirementType::Fill<br/>_39 = (move _40, const true)<br/>StorageDead(_40)<br/>_0 = std::result::Result::&lt;(math::margin::MarginRequirementType, bool), error::ErrorCode&gt;::Ok(move _39)<br/>StorageDead(_39)<br/>StorageDead(_9)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_2624 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_2624 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2624 -> bb1__0_2624 [label="return"];
    bb1__0_2624 -> bb2__0_2624 [label="return"];
    bb2__0_2624 -> bb3__0_2624 [label="return"];
    bb3__0_2624 -> bb4__0_2624 [label="return"];
    bb4__0_2624 -> bb5__0_2624 [label="0"];
    bb4__0_2624 -> bb7__0_2624 [label="1"];
    bb4__0_2624 -> bb6__0_2624 [label="otherwise"];
    bb5__0_2624 -> bb10__0_2624 [label="0"];
    bb5__0_2624 -> bb9__0_2624 [label="otherwise"];
    bb7__0_2624 -> bb8__0_2624 [label="return"];
    bb8__0_2624 -> bb20__0_2624 [label=""];
    bb9__0_2624 -> bb20__0_2624 [label=""];
    bb10__0_2624 -> bb11__0_2624 [label="return"];
    bb11__0_2624 -> bb12__0_2624 [label="return"];
    bb12__0_2624 -> bb18__0_2624 [label="0"];
    bb12__0_2624 -> bb13__0_2624 [label="otherwise"];
    bb13__0_2624 -> bb14__0_2624 [label="return"];
    bb14__0_2624 -> bb15__0_2624 [label="return"];
    bb15__0_2624 -> bb17__0_2624 [label="0"];
    bb15__0_2624 -> bb16__0_2624 [label="otherwise"];
    bb16__0_2624 -> bb20__0_2624 [label=""];
    bb17__0_2624 -> bb19__0_2624 [label=""];
    bb18__0_2624 -> bb19__0_2624 [label=""];
    bb19__0_2624 -> bb21__0_2624 [label=""];
    bb20__0_2624 -> bb21__0_2624 [label=""];
}
