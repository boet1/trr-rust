digraph Mir_0_1805 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_swap_output(_1: u128, _2: u128, _3: controller::amm::SwapDirection, _4: u128) -&gt; std::result::Result&lt;(u128, u128), error::ErrorCode&gt;<br align="left"/>let _5: math::bn::U192;<br align="left"/>let mut _6: u128;<br align="left"/>let _7: math::bn::U192;<br align="left"/>let mut _8: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, math::bn::U192&gt;;<br align="left"/>let mut _9: std::result::Result&lt;math::bn::U192, error::ErrorCode&gt;;<br align="left"/>let mut _10: math::bn::U192;<br align="left"/>let mut _11: math::bn::U192;<br align="left"/>let mut _12: isize;<br align="left"/>let _13: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _14: !;<br align="left"/>let mut _15: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _16: math::bn::U192;<br align="left"/>let _17: ();<br align="left"/>let mut _18: bool;<br align="left"/>let mut _19: &amp;ReErased controller::amm::SwapDirection;<br align="left"/>let mut _20: &amp;ReErased controller::amm::SwapDirection;<br align="left"/>let _21: controller::amm::SwapDirection;<br align="left"/>let mut _22: bool;<br align="left"/>let mut _23: u128;<br align="left"/>let mut _24: u128;<br align="left"/>let mut _25: !;<br align="left"/>let _26: ();<br align="left"/>let mut _27: &amp;ReErased str;<br align="left"/>let _28: &amp;ReErased str;<br align="left"/>let mut _29: &amp;ReErased std::string::String;<br align="left"/>let _30: &amp;ReErased std::string::String;<br align="left"/>let _31: std::string::String;<br align="left"/>let _32: std::string::String;<br align="left"/>let mut _33: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _34: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _35: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _36: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _37: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _38: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _39: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _40: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _41: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _42: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _43: &amp;ReErased u128;<br align="left"/>let _44: &amp;ReErased u128;<br align="left"/>let mut _45: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _46: &amp;ReErased u128;<br align="left"/>let _47: &amp;ReErased u128;<br align="left"/>let mut _48: error::ErrorCode;<br align="left"/>let _49: u128;<br align="left"/>let mut _50: isize;<br align="left"/>let mut _51: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _52: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _53: u128;<br align="left"/>let mut _54: u128;<br align="left"/>let mut _55: isize;<br align="left"/>let _56: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _57: !;<br align="left"/>let mut _58: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _59: u128;<br align="left"/>let mut _60: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _61: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _62: u128;<br align="left"/>let mut _63: u128;<br align="left"/>let mut _64: isize;<br align="left"/>let _65: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _66: !;<br align="left"/>let mut _67: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _68: u128;<br align="left"/>let _69: math::bn::U192;<br align="left"/>let mut _70: u128;<br align="left"/>let _71: u128;<br align="left"/>let mut _72: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _73: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _74: math::bn::U192;<br align="left"/>let mut _75: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, math::bn::U192&gt;;<br align="left"/>let mut _76: std::result::Result&lt;math::bn::U192, error::ErrorCode&gt;;<br align="left"/>let mut _77: math::bn::U192;<br align="left"/>let mut _78: math::bn::U192;<br align="left"/>let mut _79: isize;<br align="left"/>let _80: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _81: !;<br align="left"/>let mut _82: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _83: math::bn::U192;<br align="left"/>let mut _84: isize;<br align="left"/>let _85: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _86: !;<br align="left"/>let mut _87: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _88: u128;<br align="left"/>let mut _89: (u128, u128);<br align="left"/>let mut _90: u128;<br align="left"/>let mut _91: u128;<br align="left"/>let mut _92: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _93: &amp;ReErased controller::amm::SwapDirection;<br align="left"/>debug swap_amount =&gt; _1;<br align="left"/>debug input_asset_reserve =&gt; _2;<br align="left"/>debug direction =&gt; _3;<br align="left"/>debug invariant_sqrt =&gt; _4;<br align="left"/>debug invariant_sqrt_u192 =&gt; _5;<br align="left"/>debug invariant =&gt; _7;<br align="left"/>debug residual =&gt; _13;<br align="left"/>debug val =&gt; _16;<br align="left"/>debug res =&gt; _32;<br align="left"/>debug new_input_asset_reserve =&gt; _49;<br align="left"/>debug residual =&gt; _56;<br align="left"/>debug val =&gt; _59;<br align="left"/>debug residual =&gt; _65;<br align="left"/>debug val =&gt; _68;<br align="left"/>debug new_input_amount_u192 =&gt; _69;<br align="left"/>debug new_output_asset_reserve =&gt; _71;<br align="left"/>debug residual =&gt; _80;<br align="left"/>debug val =&gt; _83;<br align="left"/>debug residual =&gt; _85;<br align="left"/>debug val =&gt; _88;<br align="left"/>>;
    bb0__0_1805 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = _4<br/></td></tr><tr><td align="left">_5 = &lt;U192 as From&lt;u128&gt;&gt;::from(move _6)</td></tr></table>>];
    bb1__0_1805 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = _5<br/>StorageLive(_11)<br/>_11 = _5<br/></td></tr><tr><td align="left">_9 = &lt;U192 as SafeMath&gt;::safe_mul(move _10, move _11)</td></tr></table>>];
    bb2__0_1805 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">_8 = &lt;std::result::Result&lt;U192, error::ErrorCode&gt; as Try&gt;::branch(move _9)</td></tr></table>>];
    bb3__0_1805 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>_12 = discriminant(_8)<br/></td></tr><tr><td align="left">switchInt(move _12)</td></tr></table>>];
    bb4__0_1805 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_16)<br/>_16 = ((_8 as Continue).0: math::bn::U192)<br/>_7 = _16<br/>StorageDead(_16)<br/>StorageDead(_8)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_19 = &amp;_3<br/>StorageLive(_20)<br/>_93 = const _<br/>_20 = &amp;(*_93)<br/></td></tr><tr><td align="left">_18 = &lt;SwapDirection as PartialEq&gt;::eq(move _19, move _20)</td></tr></table>>];
    bb5__0_1805 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_1805 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = ((_8 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_15)<br/>_15 = _13<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _15)</td></tr></table>>];
    bb7__0_1805 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_13)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_1805 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left">switchInt(move _18)</td></tr></table>>];
    bb9__0_1805 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_19)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>_23 = _1<br/>StorageLive(_24)<br/>_24 = _2<br/>_22 = Gt(move _23, move _24)<br/></td></tr><tr><td align="left">switchInt(move _22)</td></tr></table>>];
    bb10__0_1805 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_23)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>_92 = const _<br/>_36 = &amp;(*_92)<br/>_35 = &amp;(*_36)<br/>_34 = move _35 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_35)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>_44 = &amp;_1<br/>_43 = &amp;(*_44)<br/></td></tr><tr><td align="left">_42 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;u128&gt;(move _43)</td></tr></table>>];
    bb11__0_1805 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>_47 = &amp;_2<br/>_46 = &amp;(*_47)<br/></td></tr><tr><td align="left">_45 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;u128&gt;(move _46)</td></tr></table>>];
    bb12__0_1805 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>_41 = [move _42, move _45]<br/>StorageDead(_45)<br/>StorageDead(_42)<br/>_40 = &amp;_41<br/>_39 = &amp;(*_40)<br/>_38 = move _39 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">_33 = Arguments::&lt;'_&gt;::new_v1(move _34, move _38)</td></tr></table>>];
    bb13__0_1805 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">_32 = format(move _33)</td></tr></table>>];
    bb14__0_1805 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_47)<br/>StorageDead(_44)<br/>StorageDead(_41)<br/>StorageDead(_40)<br/>StorageDead(_36)<br/>_31 = move _32<br/>StorageDead(_32)<br/>_30 = &amp;_31<br/>_29 = &amp;(*_30)<br/></td></tr><tr><td align="left">_28 = &lt;String as Deref&gt;::deref(move _29)</td></tr></table>>];
    bb15__0_1805 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">_27 = &amp;(*_28)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">_26 = solana_program::log::sol_log(move _27)</td></tr></table>>];
    bb16__0_1805 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/></td></tr><tr><td align="left">drop(_31)</td></tr></table>>];
    bb17__0_1805 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_30)<br/>StorageDead(_28)<br/>StorageDead(_26)<br/>StorageLive(_48)<br/>_48 = error::ErrorCode::TradeSizeTooLarge<br/>_0 = std::result::Result::&lt;(u128, u128), error::ErrorCode&gt;::Err(move _48)<br/>StorageDead(_48)<br/>StorageDead(_22)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_1805 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_1805 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_1805 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">_17 = const ()<br/>StorageDead(_22)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/>StorageLive(_49)<br/>_50 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _50)</td></tr></table>>];
    bb21__0_1805 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>_53 = _2<br/>StorageLive(_54)<br/>_54 = _1<br/></td></tr><tr><td align="left">_52 = &lt;u128 as SafeMath&gt;::safe_add(move _53, move _54)</td></tr></table>>];
    bb22__0_1805 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">_51 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _52)</td></tr></table>>];
    bb23__0_1805 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>_55 = discriminant(_51)<br/></td></tr><tr><td align="left">switchInt(move _55)</td></tr></table>>];
    bb24__0_1805 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_59)<br/>_59 = ((_51 as Continue).0: u128)<br/>_49 = _59<br/>StorageDead(_59)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_1805 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_56)<br/>_56 = ((_51 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_58)<br/>_58 = _56<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _58)</td></tr></table>>];
    bb26__0_1805 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageDead(_56)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_1805 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>_62 = _2<br/>StorageLive(_63)<br/>_63 = _1<br/></td></tr><tr><td align="left">_61 = &lt;u128 as SafeMath&gt;::safe_sub(move _62, move _63)</td></tr></table>>];
    bb28__0_1805 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">_60 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _61)</td></tr></table>>];
    bb29__0_1805 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>_64 = discriminant(_60)<br/></td></tr><tr><td align="left">switchInt(move _64)</td></tr></table>>];
    bb30__0_1805 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_68)<br/>_68 = ((_60 as Continue).0: u128)<br/>_49 = _68<br/>StorageDead(_68)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_1805 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_65)<br/>_65 = ((_60 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_67)<br/>_67 = _65<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _67)</td></tr></table>>];
    bb32__0_1805 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>StorageDead(_65)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_1805 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageLive(_69)<br/>StorageLive(_70)<br/>_70 = _49<br/></td></tr><tr><td align="left">_69 = &lt;U192 as From&lt;u128&gt;&gt;::from(move _70)</td></tr></table>>];
    bb34__0_1805 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>_77 = _7<br/>StorageLive(_78)<br/>_78 = _69<br/></td></tr><tr><td align="left">_76 = &lt;U192 as SafeMath&gt;::safe_div(move _77, move _78)</td></tr></table>>];
    bb35__0_1805 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>StorageDead(_77)<br/></td></tr><tr><td align="left">_75 = &lt;std::result::Result&lt;U192, error::ErrorCode&gt; as Try&gt;::branch(move _76)</td></tr></table>>];
    bb36__0_1805 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>_79 = discriminant(_75)<br/></td></tr><tr><td align="left">switchInt(move _79)</td></tr></table>>];
    bb37__0_1805 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_83)<br/>_83 = ((_75 as Continue).0: math::bn::U192)<br/>_74 = _83<br/>StorageDead(_83)<br/></td></tr><tr><td align="left">_73 = U192::try_to_u128(move _74)</td></tr></table>>];
    bb38__0_1805 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_80)<br/>_80 = ((_75 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_82)<br/>_82 = _80<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _82)</td></tr></table>>];
    bb39__0_1805 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>StorageDead(_80)<br/>StorageDead(_74)<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_1805 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/></td></tr><tr><td align="left">_72 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _73)</td></tr></table>>];
    bb41__0_1805 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>_84 = discriminant(_72)<br/></td></tr><tr><td align="left">switchInt(move _84)</td></tr></table>>];
    bb42__0_1805 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageLive(_88)<br/>_88 = ((_72 as Continue).0: u128)<br/>_71 = _88<br/>StorageDead(_88)<br/>StorageDead(_75)<br/>StorageDead(_72)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>_90 = _71<br/>StorageLive(_91)<br/>_91 = _49<br/>_89 = (move _90, move _91)<br/>StorageDead(_91)<br/>StorageDead(_90)<br/>_0 = std::result::Result::&lt;(u128, u128), error::ErrorCode&gt;::Ok(move _89)<br/>StorageDead(_89)<br/>StorageDead(_71)<br/>StorageDead(_69)<br/>StorageDead(_49)<br/>StorageDead(_7)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_1805 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageLive(_85)<br/>_85 = ((_72 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_87)<br/>_87 = _85<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _87)</td></tr></table>>];
    bb44__0_1805 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>StorageDead(_85)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_1805 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_72)<br/>StorageDead(_71)<br/>StorageDead(_69)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_1805 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_1805 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_1805 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left">return</td></tr></table>>];
    bb49__0_1805 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">49 (cleanup)</td></tr><tr><td align="left">drop(_31)</td></tr></table>>];
    bb50__0_1805 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">50 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_1805 -> bb1__0_1805 [label="return"];
    bb1__0_1805 -> bb2__0_1805 [label="return"];
    bb2__0_1805 -> bb3__0_1805 [label="return"];
    bb3__0_1805 -> bb4__0_1805 [label="0"];
    bb3__0_1805 -> bb6__0_1805 [label="1"];
    bb3__0_1805 -> bb5__0_1805 [label="otherwise"];
    bb4__0_1805 -> bb8__0_1805 [label="return"];
    bb6__0_1805 -> bb7__0_1805 [label="return"];
    bb7__0_1805 -> bb47__0_1805 [label=""];
    bb8__0_1805 -> bb19__0_1805 [label="0"];
    bb8__0_1805 -> bb9__0_1805 [label="otherwise"];
    bb9__0_1805 -> bb18__0_1805 [label="0"];
    bb9__0_1805 -> bb10__0_1805 [label="otherwise"];
    bb10__0_1805 -> bb11__0_1805 [label="return"];
    bb11__0_1805 -> bb12__0_1805 [label="return"];
    bb12__0_1805 -> bb13__0_1805 [label="return"];
    bb13__0_1805 -> bb14__0_1805 [label="return"];
    bb14__0_1805 -> bb15__0_1805 [label="return"];
    bb14__0_1805 -> bb49__0_1805 [label="unwind"];
    bb15__0_1805 -> bb16__0_1805 [label="return"];
    bb15__0_1805 -> bb49__0_1805 [label="unwind"];
    bb16__0_1805 -> bb17__0_1805 [label="return"];
    bb16__0_1805 -> bb50__0_1805 [label="unwind"];
    bb17__0_1805 -> bb47__0_1805 [label=""];
    bb18__0_1805 -> bb20__0_1805 [label=""];
    bb19__0_1805 -> bb20__0_1805 [label=""];
    bb20__0_1805 -> bb21__0_1805 [label="0"];
    bb20__0_1805 -> bb27__0_1805 [label="otherwise"];
    bb21__0_1805 -> bb22__0_1805 [label="return"];
    bb22__0_1805 -> bb23__0_1805 [label="return"];
    bb23__0_1805 -> bb24__0_1805 [label="0"];
    bb23__0_1805 -> bb25__0_1805 [label="1"];
    bb23__0_1805 -> bb5__0_1805 [label="otherwise"];
    bb24__0_1805 -> bb33__0_1805 [label=""];
    bb25__0_1805 -> bb26__0_1805 [label="return"];
    bb26__0_1805 -> bb46__0_1805 [label=""];
    bb27__0_1805 -> bb28__0_1805 [label="return"];
    bb28__0_1805 -> bb29__0_1805 [label="return"];
    bb29__0_1805 -> bb30__0_1805 [label="0"];
    bb29__0_1805 -> bb31__0_1805 [label="1"];
    bb29__0_1805 -> bb5__0_1805 [label="otherwise"];
    bb30__0_1805 -> bb33__0_1805 [label=""];
    bb31__0_1805 -> bb32__0_1805 [label="return"];
    bb32__0_1805 -> bb46__0_1805 [label=""];
    bb33__0_1805 -> bb34__0_1805 [label="return"];
    bb34__0_1805 -> bb35__0_1805 [label="return"];
    bb35__0_1805 -> bb36__0_1805 [label="return"];
    bb36__0_1805 -> bb37__0_1805 [label="0"];
    bb36__0_1805 -> bb38__0_1805 [label="1"];
    bb36__0_1805 -> bb5__0_1805 [label="otherwise"];
    bb37__0_1805 -> bb40__0_1805 [label="return"];
    bb38__0_1805 -> bb39__0_1805 [label="return"];
    bb39__0_1805 -> bb45__0_1805 [label=""];
    bb40__0_1805 -> bb41__0_1805 [label="return"];
    bb41__0_1805 -> bb42__0_1805 [label="0"];
    bb41__0_1805 -> bb43__0_1805 [label="1"];
    bb41__0_1805 -> bb5__0_1805 [label="otherwise"];
    bb42__0_1805 -> bb48__0_1805 [label=""];
    bb43__0_1805 -> bb44__0_1805 [label="return"];
    bb44__0_1805 -> bb45__0_1805 [label=""];
    bb45__0_1805 -> bb46__0_1805 [label=""];
    bb46__0_1805 -> bb47__0_1805 [label=""];
    bb47__0_1805 -> bb48__0_1805 [label=""];
    bb49__0_1805 -> bb50__0_1805 [label="return"];
}
