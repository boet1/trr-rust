// MIR for `state::events::<impl at programs/drift/src/state/events.rs:586:10: 586:17>::default` before PreCodegen

fn state::events::<impl at programs/drift/src/state/events.rs:586:10: 586:17>::default() -> InsuranceFundSwapRecord {
    let mut _0: state::events::InsuranceFundSwapRecord;
    let mut _1: anchor_lang::prelude::Pubkey;
    let mut _2: u128;
    let mut _3: u128;
    let mut _4: u128;
    let mut _5: u128;
    let mut _6: u128;
    let mut _7: u128;
    let mut _8: u128;
    let mut _9: u128;
    let mut _10: i64;
    let mut _11: u64;
    let mut _12: u64;
    let mut _13: u64;
    let mut _14: i64;
    let mut _15: u64;
    let mut _16: u64;
    let mut _17: u64;
    let mut _18: u64;
    let mut _19: u16;
    let mut _20: u16;

    bb0: {
        StorageLive(_1);
        _1 = <anchor_lang::prelude::Pubkey as Default>::default() -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageLive(_2);
        _2 = <u128 as Default>::default() -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageLive(_3);
        _3 = <u128 as Default>::default() -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageLive(_4);
        _4 = <u128 as Default>::default() -> [return: bb4, unwind continue];
    }

    bb4: {
        StorageLive(_5);
        _5 = <u128 as Default>::default() -> [return: bb5, unwind continue];
    }

    bb5: {
        StorageLive(_6);
        _6 = <u128 as Default>::default() -> [return: bb6, unwind continue];
    }

    bb6: {
        StorageLive(_7);
        _7 = <u128 as Default>::default() -> [return: bb7, unwind continue];
    }

    bb7: {
        StorageLive(_8);
        _8 = <u128 as Default>::default() -> [return: bb8, unwind continue];
    }

    bb8: {
        StorageLive(_9);
        _9 = <u128 as Default>::default() -> [return: bb9, unwind continue];
    }

    bb9: {
        StorageLive(_10);
        _10 = <i64 as Default>::default() -> [return: bb10, unwind continue];
    }

    bb10: {
        StorageLive(_11);
        _11 = <u64 as Default>::default() -> [return: bb11, unwind continue];
    }

    bb11: {
        StorageLive(_12);
        _12 = <u64 as Default>::default() -> [return: bb12, unwind continue];
    }

    bb12: {
        StorageLive(_13);
        _13 = <u64 as Default>::default() -> [return: bb13, unwind continue];
    }

    bb13: {
        StorageLive(_14);
        _14 = <i64 as Default>::default() -> [return: bb14, unwind continue];
    }

    bb14: {
        StorageLive(_15);
        _15 = <u64 as Default>::default() -> [return: bb15, unwind continue];
    }

    bb15: {
        StorageLive(_16);
        _16 = <u64 as Default>::default() -> [return: bb16, unwind continue];
    }

    bb16: {
        StorageLive(_17);
        _17 = <u64 as Default>::default() -> [return: bb17, unwind continue];
    }

    bb17: {
        StorageLive(_18);
        _18 = <u64 as Default>::default() -> [return: bb18, unwind continue];
    }

    bb18: {
        StorageLive(_19);
        _19 = <u16 as Default>::default() -> [return: bb19, unwind continue];
    }

    bb19: {
        StorageLive(_20);
        _20 = <u16 as Default>::default() -> [return: bb20, unwind continue];
    }

    bb20: {
        _0 = InsuranceFundSwapRecord { rebalance_config: move _1, in_if_total_shares_before: move _2, out_if_total_shares_before: move _3, in_if_user_shares_before: move _4, out_if_user_shares_before: move _5, in_if_total_shares_after: move _6, out_if_total_shares_after: move _7, in_if_user_shares_after: move _8, out_if_user_shares_after: move _9, ts: move _10, in_amount: move _11, out_amount: move _12, out_oracle_price: move _13, out_oracle_price_twap: move _14, in_vault_amount_before: move _15, out_vault_amount_before: move _16, in_fund_vault_amount_after: move _17, out_fund_vault_amount_after: move _18, in_market_index: move _19, out_market_index: move _20 };
        StorageDead(_20);
        StorageDead(_19);
        StorageDead(_18);
        StorageDead(_17);
        StorageDead(_16);
        StorageDead(_15);
        StorageDead(_14);
        StorageDead(_13);
        StorageDead(_12);
        StorageDead(_11);
        StorageDead(_10);
        StorageDead(_9);
        StorageDead(_8);
        StorageDead(_7);
        StorageDead(_6);
        StorageDead(_5);
        StorageDead(_4);
        StorageDead(_3);
        StorageDead(_2);
        StorageDead(_1);
        return;
    }
}
