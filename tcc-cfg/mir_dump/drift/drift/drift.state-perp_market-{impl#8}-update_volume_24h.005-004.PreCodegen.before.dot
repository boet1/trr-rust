digraph Mir_0_3842 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn AMM::update_volume_24h(_1: &amp;ReErased mut state::perp_market::AMM, _2: u64, _3: controller::position::PositionDirection, _4: i64) -&gt; std::result::Result&lt;(), error::ErrorCode&gt;<br align="left"/>let _5: i64;<br align="left"/>let mut _6: i64;<br align="left"/>let mut _7: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _8: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _9: i64;<br align="left"/>let mut _10: i64;<br align="left"/>let mut _11: isize;<br align="left"/>let _12: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _13: !;<br align="left"/>let mut _14: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _15: i64;<br align="left"/>let _16: bool;<br align="left"/>let mut _17: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _18: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _19: &amp;ReErased mut state::perp_market::AMM;<br align="left"/>let mut _20: i64;<br align="left"/>let mut _21: u64;<br align="left"/>let mut _22: controller::position::PositionDirection;<br align="left"/>let mut _23: isize;<br align="left"/>let _24: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _25: !;<br align="left"/>let mut _26: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _27: bool;<br align="left"/>let mut _28: u64;<br align="left"/>let mut _29: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _30: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _31: u64;<br align="left"/>let mut _32: u64;<br align="left"/>let mut _33: i64;<br align="left"/>let mut _34: isize;<br align="left"/>let _35: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _36: !;<br align="left"/>let mut _37: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _38: u64;<br align="left"/>let mut _39: i64;<br align="left"/>let mut _40: ();<br align="left"/>debug self =&gt; _1;<br align="left"/>debug quote_asset_amount =&gt; _2;<br align="left"/>debug position_direction =&gt; _3;<br align="left"/>debug now =&gt; _4;<br align="left"/>debug since_last =&gt; _5;<br align="left"/>debug residual =&gt; _12;<br align="left"/>debug val =&gt; _15;<br align="left"/>debug residual =&gt; _24;<br align="left"/>debug val =&gt; _27;<br align="left"/>debug residual =&gt; _35;<br align="left"/>debug val =&gt; _38;<br align="left"/>>;
    bb0__0_3842 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = _4<br/>StorageLive(_10)<br/>_10 = ((*_1).59: i64)<br/></td></tr><tr><td align="left">_8 = &lt;i64 as SafeMath&gt;::safe_sub(move _9, move _10)</td></tr></table>>];
    bb1__0_3842 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _8)</td></tr></table>>];
    bb2__0_3842 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_11 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _11)</td></tr></table>>];
    bb3__0_3842 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_15)<br/>_15 = ((_7 as Continue).0: i64)<br/>_6 = _15<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">_5 = std::cmp::max::&lt;i64&gt;(const 1_i64, move _6)</td></tr></table>>];
    bb4__0_3842 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_3842 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_7 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_14)<br/>_14 = _12<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _14)</td></tr></table>>];
    bb6__0_3842 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_12)<br/>StorageDead(_6)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_3842 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_7)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_19 = &amp;mut (*_1)<br/>StorageLive(_20)<br/>_20 = _4<br/>StorageLive(_21)<br/>_21 = _2<br/>StorageLive(_22)<br/>_22 = _3<br/></td></tr><tr><td align="left">_18 = update_amm_long_short_intensity(move _19, move _20, move _21, move _22)</td></tr></table>>];
    bb8__0_3842 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">_17 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _18)</td></tr></table>>];
    bb9__0_3842 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>_23 = discriminant(_17)<br/></td></tr><tr><td align="left">switchInt(move _23)</td></tr></table>>];
    bb10__0_3842 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_27)<br/>_27 = ((_17 as Continue).0: bool)<br/>_16 = _27<br/>StorageDead(_27)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>_31 = ((*_1).56: u64)<br/>StorageLive(_32)<br/>_32 = _2<br/>StorageLive(_33)<br/>_33 = _5<br/></td></tr><tr><td align="left">_30 = calculate_rolling_sum(move _31, move _32, move _33, const _)</td></tr></table>>];
    bb11__0_3842 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_24)<br/>_24 = ((_17 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_26)<br/>_26 = _24<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _26)</td></tr></table>>];
    bb12__0_3842 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_24)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_3842 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">_29 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _30)</td></tr></table>>];
    bb14__0_3842 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>_34 = discriminant(_29)<br/></td></tr><tr><td align="left">switchInt(move _34)</td></tr></table>>];
    bb15__0_3842 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_38)<br/>_38 = ((_29 as Continue).0: u64)<br/>_28 = _38<br/>StorageDead(_38)<br/>((*_1).56: u64) = move _28<br/>StorageDead(_28)<br/>StorageDead(_29)<br/>StorageLive(_39)<br/>_39 = _4<br/>((*_1).59: i64) = move _39<br/>StorageDead(_39)<br/>StorageLive(_40)<br/>_40 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _40)<br/>StorageDead(_40)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_3842 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = ((_29 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_37)<br/>_37 = _35<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _37)</td></tr></table>>];
    bb17__0_3842 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_35)<br/>StorageDead(_28)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_3842 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_3842 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_3842 -> bb1__0_3842 [label="return"];
    bb1__0_3842 -> bb2__0_3842 [label="return"];
    bb2__0_3842 -> bb3__0_3842 [label="0"];
    bb2__0_3842 -> bb5__0_3842 [label="1"];
    bb2__0_3842 -> bb4__0_3842 [label="otherwise"];
    bb3__0_3842 -> bb7__0_3842 [label="return"];
    bb5__0_3842 -> bb6__0_3842 [label="return"];
    bb6__0_3842 -> bb18__0_3842 [label=""];
    bb7__0_3842 -> bb8__0_3842 [label="return"];
    bb8__0_3842 -> bb9__0_3842 [label="return"];
    bb9__0_3842 -> bb10__0_3842 [label="0"];
    bb9__0_3842 -> bb11__0_3842 [label="1"];
    bb9__0_3842 -> bb4__0_3842 [label="otherwise"];
    bb10__0_3842 -> bb13__0_3842 [label="return"];
    bb11__0_3842 -> bb12__0_3842 [label="return"];
    bb12__0_3842 -> bb18__0_3842 [label=""];
    bb13__0_3842 -> bb14__0_3842 [label="return"];
    bb14__0_3842 -> bb15__0_3842 [label="0"];
    bb14__0_3842 -> bb16__0_3842 [label="1"];
    bb14__0_3842 -> bb4__0_3842 [label="otherwise"];
    bb15__0_3842 -> bb19__0_3842 [label=""];
    bb16__0_3842 -> bb17__0_3842 [label="return"];
    bb17__0_3842 -> bb18__0_3842 [label=""];
    bb18__0_3842 -> bb19__0_3842 [label=""];
}
