digraph Mir_0_3502 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn HistoricalIndexData::default_with_current_oracle(_1: state::oracle::OraclePriceData) -&gt; std::result::Result&lt;state::oracle::HistoricalIndexData, error::ErrorCode&gt;<br align="left"/>let _2: u64;<br align="left"/>let mut _3: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _4: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _5: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _6: i64;<br align="left"/>let mut _7: isize;<br align="left"/>let _8: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _9: !;<br align="left"/>let mut _10: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _11: u64;<br align="left"/>let mut _12: state::oracle::HistoricalIndexData;<br align="left"/>let mut _13: u64;<br align="left"/>let mut _14: u64;<br align="left"/>let mut _15: u64;<br align="left"/>let mut _16: u64;<br align="left"/>let mut _17: state::oracle::HistoricalIndexData;<br align="left"/>debug oracle_price_data =&gt; _1;<br align="left"/>debug price =&gt; _2;<br align="left"/>debug residual =&gt; _8;<br align="left"/>debug val =&gt; _11;<br align="left"/>>;
    bb0__0_3502 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = (_1.0: i64)<br/></td></tr><tr><td align="left">_5 = &lt;i64 as Cast&gt;::cast::&lt;u64&gt;(move _6)</td></tr></table>>];
    bb1__0_3502 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as SafeUnwrap&gt;::safe_unwrap(move _5)</td></tr></table>>];
    bb2__0_3502 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">_3 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _4)</td></tr></table>>];
    bb3__0_3502 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>_7 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _7)</td></tr></table>>];
    bb4__0_3502 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = ((_3 as Continue).0: u64)<br/>_2 = _11<br/>StorageDead(_11)<br/>StorageDead(_3)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>_13 = _2<br/>StorageLive(_14)<br/>_14 = _2<br/>StorageLive(_15)<br/>_15 = _2<br/>StorageLive(_16)<br/>_16 = _2<br/>StorageLive(_17)<br/></td></tr><tr><td align="left">_17 = &lt;HistoricalIndexData as Default&gt;::default()</td></tr></table>>];
    bb5__0_3502 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_3502 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/>_8 = ((_3 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_10)<br/>_10 = _8<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;HistoricalIndexData, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _10)</td></tr></table>>];
    bb7__0_3502 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_8)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_3502 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">_12 = HistoricalIndexData { last_index_bid_price: move _13, last_index_ask_price: move _14, last_index_price_twap: move _15, last_index_price_twap_5min: move _16, last_index_price_twap_ts: (_17.4: i64) }<br/>StorageDead(_16)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>_0 = std::result::Result::&lt;HistoricalIndexData, error::ErrorCode&gt;::Ok(move _12)<br/>StorageDead(_12)<br/>StorageDead(_2)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_3502 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_3502 -> bb1__0_3502 [label="return"];
    bb1__0_3502 -> bb2__0_3502 [label="return"];
    bb2__0_3502 -> bb3__0_3502 [label="return"];
    bb3__0_3502 -> bb4__0_3502 [label="0"];
    bb3__0_3502 -> bb6__0_3502 [label="1"];
    bb3__0_3502 -> bb5__0_3502 [label="otherwise"];
    bb4__0_3502 -> bb8__0_3502 [label="return"];
    bb6__0_3502 -> bb7__0_3502 [label="return"];
    bb7__0_3502 -> bb9__0_3502 [label=""];
    bb8__0_3502 -> bb9__0_3502 [label=""];
}
