digraph Mir_0_2622 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn find_bids_and_asks_from_users::{closure#0}::{closure#0}(_1: &amp;ReErased mut Closure(DefId(0:2622 ~ drift[d311]::math::orders::find_bids_and_asks_from_users::{closure#0}::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReErased math::orders::Level,)) -&gt; std::cmp::Ordering, []), (&amp;ReErased controller::position::PositionDirection, &amp;ReErased u64)]), _2: &amp;ReErased math::orders::Level) -&gt; std::cmp::Ordering<br align="left"/>let mut _3: isize;<br align="left"/>let mut _4: &amp;ReErased u64;<br align="left"/>let mut _5: &amp;ReErased u64;<br align="left"/>let _6: &amp;ReErased u64;<br align="left"/>let mut _7: &amp;ReErased u64;<br align="left"/>let mut _8: &amp;ReErased u64;<br align="left"/>let _9: &amp;ReErased u64;<br align="left"/>let mut _10: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let mut _11: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let mut _12: &amp;ReErased u64;<br align="left"/>let mut _13: &amp;ReErased u64;<br align="left"/>debug level =&gt; _2;<br align="left"/>debug direction =&gt; (*((*_1).0: &amp;controller::position::PositionDirection));<br align="left"/>debug price =&gt; (*((*_1).1: &amp;u64));<br align="left"/>>;
    bb0__0_2622 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_10 = deref_copy ((*_1).0: &amp;controller::position::PositionDirection)<br/>_11 = deref_copy ((*_1).0: &amp;controller::position::PositionDirection)<br/>_3 = discriminant((*_11))<br/></td></tr><tr><td align="left">switchInt(move _3)</td></tr></table>>];
    bb1__0_2622 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_7)<br/>_7 = &amp;((*_2).0: u64)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_12 = deref_copy ((*_1).1: &amp;u64)<br/>_9 = &amp;(*_12)<br/>_8 = &amp;(*_9)<br/></td></tr><tr><td align="left">_0 = &lt;u64 as Ord&gt;::cmp(move _7, move _8)</td></tr></table>>];
    bb2__0_2622 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb3__0_2622 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>_13 = deref_copy ((*_1).1: &amp;u64)<br/>_4 = &amp;(*_13)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = &amp;((*_2).0: u64)<br/>_5 = &amp;(*_6)<br/></td></tr><tr><td align="left">_0 = &lt;u64 as Ord&gt;::cmp(move _4, move _5)</td></tr></table>>];
    bb4__0_2622 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb5__0_2622 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb6__0_2622 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2622 -> bb3__0_2622 [label="0"];
    bb0__0_2622 -> bb1__0_2622 [label="1"];
    bb0__0_2622 -> bb2__0_2622 [label="otherwise"];
    bb1__0_2622 -> bb5__0_2622 [label="return"];
    bb3__0_2622 -> bb4__0_2622 [label="return"];
    bb4__0_2622 -> bb6__0_2622 [label=""];
    bb5__0_2622 -> bb6__0_2622 [label=""];
}
