digraph Mir_0_3834 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn AMM::bid_price(_1: &amp;ReErased state::perp_market::AMM, _2: u64) -&gt; std::result::Result&lt;u64, error::ErrorCode&gt;<br align="left"/>let _3: i32;<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i32&gt;;<br align="left"/>let mut _5: std::result::Result&lt;i32, error::ErrorCode&gt;;<br align="left"/>let mut _6: i32;<br align="left"/>let mut _7: i32;<br align="left"/>let mut _8: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i32&gt;;<br align="left"/>let mut _9: std::result::Result&lt;i32, error::ErrorCode&gt;;<br align="left"/>let mut _10: u32;<br align="left"/>let mut _11: isize;<br align="left"/>let _12: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _13: !;<br align="left"/>let mut _14: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _15: i32;<br align="left"/>let mut _16: bool;<br align="left"/>let mut _17: i32;<br align="left"/>let mut _18: isize;<br align="left"/>let _19: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _20: !;<br align="left"/>let mut _21: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _22: i32;<br align="left"/>let _23: i128;<br align="left"/>let mut _24: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _25: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _26: i128;<br align="left"/>let mut _27: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _28: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _29: i32;<br align="left"/>let mut _30: isize;<br align="left"/>let _31: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _32: !;<br align="left"/>let mut _33: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _34: i128;<br align="left"/>let mut _35: isize;<br align="left"/>let _36: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _37: !;<br align="left"/>let mut _38: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _39: i128;<br align="left"/>let mut _40: u128;<br align="left"/>let mut _41: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _42: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _43: u128;<br align="left"/>let mut _44: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _45: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _46: u128;<br align="left"/>let mut _47: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _48: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _49: u64;<br align="left"/>let mut _50: isize;<br align="left"/>let _51: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _52: !;<br align="left"/>let mut _53: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _54: u128;<br align="left"/>let mut _55: u128;<br align="left"/>let mut _56: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _57: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _58: i128;<br align="left"/>let mut _59: isize;<br align="left"/>let _60: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _61: !;<br align="left"/>let mut _62: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _63: u128;<br align="left"/>let mut _64: isize;<br align="left"/>let _65: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _66: !;<br align="left"/>let mut _67: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _68: u128;<br align="left"/>let mut _69: isize;<br align="left"/>let _70: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _71: !;<br align="left"/>let mut _72: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _73: u128;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug reserve_price =&gt; _2;<br align="left"/>debug adjusted_spread =&gt; _3;<br align="left"/>debug residual =&gt; _12;<br align="left"/>debug val =&gt; _15;<br align="left"/>debug residual =&gt; _19;<br align="left"/>debug val =&gt; _22;<br align="left"/>debug multiplier =&gt; _23;<br align="left"/>debug residual =&gt; _31;<br align="left"/>debug val =&gt; _34;<br align="left"/>debug residual =&gt; _36;<br align="left"/>debug val =&gt; _39;<br align="left"/>debug residual =&gt; _51;<br align="left"/>debug val =&gt; _54;<br align="left"/>debug residual =&gt; _60;<br align="left"/>debug val =&gt; _63;<br align="left"/>debug residual =&gt; _65;<br align="left"/>debug val =&gt; _68;<br align="left"/>debug residual =&gt; _70;<br align="left"/>debug val =&gt; _73;<br align="left"/>>;
    bb0__0_3834 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = ((*_1).66: u32)<br/></td></tr><tr><td align="left">_9 = &lt;u32 as Cast&gt;::cast::&lt;i32&gt;(move _10)</td></tr></table>>];
    bb1__0_3834 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/></td></tr><tr><td align="left">_8 = &lt;std::result::Result&lt;i32, error::ErrorCode&gt; as Try&gt;::branch(move _9)</td></tr></table>>];
    bb2__0_3834 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>_11 = discriminant(_8)<br/></td></tr><tr><td align="left">switchInt(move _11)</td></tr></table>>];
    bb3__0_3834 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_15)<br/>_15 = ((_8 as Continue).0: i32)<br/>_7 = _15<br/>StorageDead(_15)<br/>_16 = Eq(_7, const i32::MIN)<br/></td></tr><tr><td align="left">assert(!move _16, &quot;attempt to negate `{}`, which would overflow&quot;, _7)</td></tr></table>>];
    bb4__0_3834 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_3834 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_8 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_14)<br/>_14 = _12<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _14)</td></tr></table>>];
    bb6__0_3834 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_12)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_3834 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">_6 = Neg(move _7)<br/>StorageDead(_7)<br/>StorageLive(_17)<br/>_17 = ((*_1).82: i32)<br/></td></tr><tr><td align="left">_5 = &lt;i32 as SafeMath&gt;::safe_add(move _6, move _17)</td></tr></table>>];
    bb8__0_3834 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;i32, error::ErrorCode&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb9__0_3834 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_18 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _18)</td></tr></table>>];
    bb10__0_3834 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_22)<br/>_22 = ((_4 as Continue).0: i32)<br/>_3 = _22<br/>StorageDead(_22)<br/>StorageDead(_8)<br/>StorageDead(_4)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_29 = _3<br/></td></tr><tr><td align="left">_28 = &lt;i32 as Cast&gt;::cast::&lt;i128&gt;(move _29)</td></tr></table>>];
    bb11__0_3834 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_19)<br/>_19 = ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_21)<br/>_21 = _19<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _21)</td></tr></table>>];
    bb12__0_3834 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_3834 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/></td></tr><tr><td align="left">_27 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _28)</td></tr></table>>];
    bb14__0_3834 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>_30 = discriminant(_27)<br/></td></tr><tr><td align="left">switchInt(move _30)</td></tr></table>>];
    bb15__0_3834 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_34)<br/>_34 = ((_27 as Continue).0: i128)<br/>_26 = _34<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">_25 = &lt;i128 as SafeMath&gt;::safe_add(const _, move _26)</td></tr></table>>];
    bb16__0_3834 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_31)<br/>_31 = ((_27 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_33)<br/>_33 = _31<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _33)</td></tr></table>>];
    bb17__0_3834 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_31)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_3834 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/></td></tr><tr><td align="left">_24 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _25)</td></tr></table>>];
    bb19__0_3834 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>_35 = discriminant(_24)<br/></td></tr><tr><td align="left">switchInt(move _35)</td></tr></table>>];
    bb20__0_3834 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_39)<br/>_39 = ((_24 as Continue).0: i128)<br/>_23 = _39<br/>StorageDead(_39)<br/>StorageDead(_27)<br/>StorageDead(_24)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>_49 = _2<br/></td></tr><tr><td align="left">_48 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _49)</td></tr></table>>];
    bb21__0_3834 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_36)<br/>_36 = ((_24 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_38)<br/>_38 = _36<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _38)</td></tr></table>>];
    bb22__0_3834 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_3834 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/></td></tr><tr><td align="left">_47 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _48)</td></tr></table>>];
    bb24__0_3834 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>_50 = discriminant(_47)<br/></td></tr><tr><td align="left">switchInt(move _50)</td></tr></table>>];
    bb25__0_3834 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_54)<br/>_54 = ((_47 as Continue).0: u128)<br/>_46 = _54<br/>StorageDead(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>_58 = _23<br/></td></tr><tr><td align="left">_57 = &lt;i128 as Cast&gt;::cast::&lt;u128&gt;(move _58)</td></tr></table>>];
    bb26__0_3834 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_51)<br/>_51 = ((_47 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_53)<br/>_53 = _51<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _53)</td></tr></table>>];
    bb27__0_3834 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_51)<br/>StorageDead(_46)<br/>StorageDead(_45)<br/>StorageDead(_43)<br/>StorageDead(_42)<br/>StorageDead(_40)<br/>StorageDead(_23)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_3834 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/></td></tr><tr><td align="left">_56 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _57)</td></tr></table>>];
    bb29__0_3834 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>_59 = discriminant(_56)<br/></td></tr><tr><td align="left">switchInt(move _59)</td></tr></table>>];
    bb30__0_3834 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_63)<br/>_63 = ((_56 as Continue).0: u128)<br/>_55 = _63<br/>StorageDead(_63)<br/></td></tr><tr><td align="left">_45 = &lt;u128 as SafeMath&gt;::safe_mul(move _46, move _55)</td></tr></table>>];
    bb31__0_3834 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_60)<br/>_60 = ((_56 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_62)<br/>_62 = _60<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _62)</td></tr></table>>];
    bb32__0_3834 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageDead(_60)<br/>StorageDead(_55)<br/>StorageDead(_46)<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_3834 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">_44 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _45)</td></tr></table>>];
    bb34__0_3834 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>_64 = discriminant(_44)<br/></td></tr><tr><td align="left">switchInt(move _64)</td></tr></table>>];
    bb35__0_3834 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_68)<br/>_68 = ((_44 as Continue).0: u128)<br/>_43 = _68<br/>StorageDead(_68)<br/></td></tr><tr><td align="left">_42 = &lt;u128 as SafeMath&gt;::safe_div(move _43, const _)</td></tr></table>>];
    bb36__0_3834 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageLive(_65)<br/>_65 = ((_44 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_67)<br/>_67 = _65<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _67)</td></tr></table>>];
    bb37__0_3834 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_3834 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/></td></tr><tr><td align="left">_41 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _42)</td></tr></table>>];
    bb39__0_3834 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>_69 = discriminant(_41)<br/></td></tr><tr><td align="left">switchInt(move _69)</td></tr></table>>];
    bb40__0_3834 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageLive(_73)<br/>_73 = ((_41 as Continue).0: u128)<br/>_40 = _73<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">_0 = &lt;u128 as Cast&gt;::cast::&lt;u64&gt;(move _40)</td></tr></table>>];
    bb41__0_3834 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageLive(_70)<br/>_70 = ((_41 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_72)<br/>_72 = _70<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _72)</td></tr></table>>];
    bb42__0_3834 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_70)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_3834 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageDead(_23)<br/>StorageDead(_3)<br/>StorageDead(_56)<br/>StorageDead(_47)<br/>StorageDead(_44)<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_3834 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_3834 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageDead(_23)<br/>StorageDead(_3)<br/>StorageDead(_56)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_3834 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_44)<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_3834 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_3834 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_3834 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_3834 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_3834 -> bb1__0_3834 [label="return"];
    bb1__0_3834 -> bb2__0_3834 [label="return"];
    bb2__0_3834 -> bb3__0_3834 [label="0"];
    bb2__0_3834 -> bb5__0_3834 [label="1"];
    bb2__0_3834 -> bb4__0_3834 [label="otherwise"];
    bb3__0_3834 -> bb7__0_3834 [label="success"];
    bb5__0_3834 -> bb6__0_3834 [label="return"];
    bb6__0_3834 -> bb48__0_3834 [label=""];
    bb7__0_3834 -> bb8__0_3834 [label="return"];
    bb8__0_3834 -> bb9__0_3834 [label="return"];
    bb9__0_3834 -> bb10__0_3834 [label="0"];
    bb9__0_3834 -> bb11__0_3834 [label="1"];
    bb9__0_3834 -> bb4__0_3834 [label="otherwise"];
    bb10__0_3834 -> bb13__0_3834 [label="return"];
    bb11__0_3834 -> bb12__0_3834 [label="return"];
    bb12__0_3834 -> bb48__0_3834 [label=""];
    bb13__0_3834 -> bb14__0_3834 [label="return"];
    bb14__0_3834 -> bb15__0_3834 [label="0"];
    bb14__0_3834 -> bb16__0_3834 [label="1"];
    bb14__0_3834 -> bb4__0_3834 [label="otherwise"];
    bb15__0_3834 -> bb18__0_3834 [label="return"];
    bb16__0_3834 -> bb17__0_3834 [label="return"];
    bb17__0_3834 -> bb47__0_3834 [label=""];
    bb18__0_3834 -> bb19__0_3834 [label="return"];
    bb19__0_3834 -> bb20__0_3834 [label="0"];
    bb19__0_3834 -> bb21__0_3834 [label="1"];
    bb19__0_3834 -> bb4__0_3834 [label="otherwise"];
    bb20__0_3834 -> bb23__0_3834 [label="return"];
    bb21__0_3834 -> bb22__0_3834 [label="return"];
    bb22__0_3834 -> bb47__0_3834 [label=""];
    bb23__0_3834 -> bb24__0_3834 [label="return"];
    bb24__0_3834 -> bb25__0_3834 [label="0"];
    bb24__0_3834 -> bb26__0_3834 [label="1"];
    bb24__0_3834 -> bb4__0_3834 [label="otherwise"];
    bb25__0_3834 -> bb28__0_3834 [label="return"];
    bb26__0_3834 -> bb27__0_3834 [label="return"];
    bb27__0_3834 -> bb46__0_3834 [label=""];
    bb28__0_3834 -> bb29__0_3834 [label="return"];
    bb29__0_3834 -> bb30__0_3834 [label="0"];
    bb29__0_3834 -> bb31__0_3834 [label="1"];
    bb29__0_3834 -> bb4__0_3834 [label="otherwise"];
    bb30__0_3834 -> bb33__0_3834 [label="return"];
    bb31__0_3834 -> bb32__0_3834 [label="return"];
    bb32__0_3834 -> bb44__0_3834 [label=""];
    bb33__0_3834 -> bb34__0_3834 [label="return"];
    bb34__0_3834 -> bb35__0_3834 [label="0"];
    bb34__0_3834 -> bb36__0_3834 [label="1"];
    bb34__0_3834 -> bb4__0_3834 [label="otherwise"];
    bb35__0_3834 -> bb38__0_3834 [label="return"];
    bb36__0_3834 -> bb37__0_3834 [label="return"];
    bb37__0_3834 -> bb44__0_3834 [label=""];
    bb38__0_3834 -> bb39__0_3834 [label="return"];
    bb39__0_3834 -> bb40__0_3834 [label="0"];
    bb39__0_3834 -> bb41__0_3834 [label="1"];
    bb39__0_3834 -> bb4__0_3834 [label="otherwise"];
    bb40__0_3834 -> bb43__0_3834 [label="return"];
    bb41__0_3834 -> bb42__0_3834 [label="return"];
    bb42__0_3834 -> bb45__0_3834 [label=""];
    bb43__0_3834 -> bb50__0_3834 [label=""];
    bb44__0_3834 -> bb45__0_3834 [label=""];
    bb45__0_3834 -> bb46__0_3834 [label=""];
    bb46__0_3834 -> bb50__0_3834 [label=""];
    bb47__0_3834 -> bb49__0_3834 [label=""];
    bb48__0_3834 -> bb49__0_3834 [label=""];
    bb49__0_3834 -> bb50__0_3834 [label=""];
}
