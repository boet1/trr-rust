digraph Mir_0_4083 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn SpotMarket::get_margin_ratio(_1: &amp;ReErased state::spot_market::SpotMarket, _2: &amp;ReErased math::margin::MarginRequirementType) -&gt; std::result::Result&lt;u32, error::ErrorCode&gt;<br align="left"/>let _3: u32;<br align="left"/>let mut _4: isize;<br align="left"/>let mut _5: !;<br align="left"/>let mut _6: error::ErrorCode;<br align="left"/>let mut _7: u32;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug margin_requirement_type =&gt; _2;<br align="left"/>debug liability_weight =&gt; _3;<br align="left"/>>;
    bb0__0_4083 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>_4 = discriminant((*_2))<br/></td></tr><tr><td align="left">switchInt(move _4)</td></tr></table>>];
    bb1__0_4083 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_3 = ((*_1).34: u32)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb2__0_4083 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb3__0_4083 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">_3 = ((*_1).33: u32)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb4__0_4083 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_6)<br/>_6 = error::ErrorCode::DefaultError<br/>_0 = std::result::Result::&lt;u32, error::ErrorCode&gt;::Err(move _6)<br/>StorageDead(_6)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb5__0_4083 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_7)<br/>_7 = _3<br/></td></tr><tr><td align="left">_0 = &lt;u32 as SafeMath&gt;::safe_sub(move _7, const _)</td></tr></table>>];
    bb6__0_4083 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_4083 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_4083 -> bb3__0_4083 [label="0"];
    bb0__0_4083 -> bb4__0_4083 [label="1"];
    bb0__0_4083 -> bb1__0_4083 [label="2"];
    bb0__0_4083 -> bb2__0_4083 [label="otherwise"];
    bb1__0_4083 -> bb5__0_4083 [label=""];
    bb3__0_4083 -> bb5__0_4083 [label=""];
    bb4__0_4083 -> bb7__0_4083 [label=""];
    bb5__0_4083 -> bb6__0_4083 [label="return"];
    bb6__0_4083 -> bb7__0_4083 [label=""];
}
