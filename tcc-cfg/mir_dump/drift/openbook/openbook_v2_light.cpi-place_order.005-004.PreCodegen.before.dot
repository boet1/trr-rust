digraph Mir_0_1255 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn cpi::place_order(_1: anchor_lang::context::CpiContext&lt;ReErased, ReErased, ReErased, ReErased, context::__cpi_client_accounts_place_order::PlaceOrder&lt;ReErased&gt;&gt;, _2: account::Side, _3: i64, _4: i64, _5: i64, _6: u64, _7: account::PlaceOrderType, _8: u64, _9: account::SelfTradeBehavior, _10: u8) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _11: anchor_lang::solana_program::instruction::Instruction;<br align="left"/>let _12: instruction::PlaceOrder;<br align="left"/>let mut _13: account::Side;<br align="left"/>let mut _14: i64;<br align="left"/>let mut _15: i64;<br align="left"/>let mut _16: i64;<br align="left"/>let mut _17: u64;<br align="left"/>let mut _18: account::PlaceOrderType;<br align="left"/>let mut _19: u64;<br align="left"/>let mut _20: account::SelfTradeBehavior;<br align="left"/>let mut _21: u8;<br align="left"/>let mut _22: std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _23: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::ErrorCode&gt;, std::vec::Vec&lt;u8, std::alloc::Global&gt;&gt;;<br align="left"/>let mut _24: std::result::Result&lt;std::vec::Vec&lt;u8, std::alloc::Global&gt;, anchor_lang::error::ErrorCode&gt;;<br align="left"/>let mut _25: std::result::Result&lt;std::vec::Vec&lt;u8, std::alloc::Global&gt;, std::io::Error&gt;;<br align="left"/>let mut _26: &amp;ReErased instruction::PlaceOrder;<br align="left"/>let _27: &amp;ReErased instruction::PlaceOrder;<br align="left"/>let mut _28: Closure(DefId(0:1260 ~ openbook_v2_light[d815]::cpi::place_order::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((std::io::Error,)) -&gt; anchor_lang::error::ErrorCode, []), ()]);<br align="left"/>let mut _29: isize;<br align="left"/>let _30: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::ErrorCode&gt;;<br align="left"/>let mut _31: !;<br align="left"/>let mut _32: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::ErrorCode&gt;;<br align="left"/>let _33: std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _34: std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _35: &amp;ReErased [u8];<br align="left"/>let mut _36: &amp;ReErased [u8; 8_usize];<br align="left"/>let _37: [u8; 8_usize];<br align="left"/>let _38: ();<br align="left"/>let mut _39: &amp;ReErased mut std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _40: &amp;ReErased mut std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _41: &amp;ReErased mut std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _42: std::vec::Vec&lt;anchor_lang::prelude::AccountMeta, std::alloc::Global&gt;;<br align="left"/>let mut _43: &amp;ReErased anchor_lang::context::CpiContext&lt;ReErased, ReErased, ReErased, ReErased, context::__cpi_client_accounts_place_order::PlaceOrder&lt;ReErased&gt;&gt;;<br align="left"/>let mut _44: std::option::Option&lt;bool&gt;;<br align="left"/>let mut _45: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _46: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _47: std::vec::Vec&lt;anchor_lang::prelude::AccountMeta, std::alloc::Global&gt;;<br align="left"/>let mut _48: std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _49: std::vec::Vec&lt;anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _50: &amp;ReErased anchor_lang::context::CpiContext&lt;ReErased, ReErased, ReErased, ReErased, context::__cpi_client_accounts_place_order::PlaceOrder&lt;ReErased&gt;&gt;;<br align="left"/>let mut _51: std::result::Result&lt;(), anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _52: &amp;ReErased anchor_lang::solana_program::instruction::Instruction;<br align="left"/>let _53: &amp;ReErased anchor_lang::solana_program::instruction::Instruction;<br align="left"/>let mut _54: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let _55: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _56: &amp;ReErased std::vec::Vec&lt;anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, std::alloc::Global&gt;;<br align="left"/>let _57: &amp;ReErased std::vec::Vec&lt;anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _58: &amp;ReErased [&amp;ReErased [&amp;ReErased [u8]]];<br align="left"/>let mut _59: Closure(DefId(0:1261 ~ openbook_v2_light[d815]::cpi::place_order::{closure#1}), [i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::prelude::ProgramError,)) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;, []), ()]);<br align="left"/>let mut _60: Closure(DefId(0:1262 ~ openbook_v2_light[d815]::cpi::place_order::{closure#2}), [i32, Binder(extern &quot;RustCall&quot; fn(((),)) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;, []), ()]);<br align="left"/>let mut _61: &amp;ReErased [u8; 8_usize];<br align="left"/>let mut _62: &amp;ReErased [&amp;ReErased [&amp;ReErased [u8]]];<br align="left"/>let mut _63: isize;<br align="left"/>let mut _64: isize;<br align="left"/>let mut _65: isize;<br align="left"/>let mut _66: isize;<br align="left"/>let mut _67: isize;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug side =&gt; _2;<br align="left"/>debug price_lots =&gt; _3;<br align="left"/>debug max_base_lots =&gt; _4;<br align="left"/>debug max_quote_lots_including_fees =&gt; _5;<br align="left"/>debug client_order_id =&gt; _6;<br align="left"/>debug order_type =&gt; _7;<br align="left"/>debug expiry_timestamp =&gt; _8;<br align="left"/>debug self_trade_behavior =&gt; _9;<br align="left"/>debug limit =&gt; _10;<br align="left"/>debug ix =&gt; _11;<br align="left"/>debug ix =&gt; _12;<br align="left"/>debug ix_data =&gt; _22;<br align="left"/>debug residual =&gt; _30;<br align="left"/>debug val =&gt; _33;<br align="left"/>debug data =&gt; _34;<br align="left"/>debug accounts =&gt; _42;<br align="left"/>debug acc_infos =&gt; _49;<br align="left"/>>;
    bb0__0_1255 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>_13 = move _2<br/>StorageLive(_14)<br/>_14 = _3<br/>StorageLive(_15)<br/>_15 = _4<br/>StorageLive(_16)<br/>_16 = _5<br/>StorageLive(_17)<br/>_17 = _6<br/>StorageLive(_18)<br/>_18 = move _7<br/>StorageLive(_19)<br/>_19 = _8<br/>StorageLive(_20)<br/>_20 = move _9<br/>StorageLive(_21)<br/>_21 = _10<br/>_12 = instruction::PlaceOrder { side: move _13, price_lots: move _14, max_base_lots: move _15, max_quote_lots_including_fees: move _16, client_order_id: move _17, order_type: move _18, expiry_timestamp: move _19, self_trade_behavior: move _20, limit: move _21 }<br/>StorageDead(_21)<br/>StorageDead(_20)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_27 = &amp;_12<br/>_26 = &amp;(*_27)<br/></td></tr><tr><td align="left">_25 = &lt;instruction::PlaceOrder as anchor_lang::AnchorSerialize&gt;::try_to_vec(move _26)</td></tr></table>>];
    bb1__0_1255 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageLive(_28)<br/>_28 = {closure@programs/openbook_v2/src/lib.rs:19:1: 19:11}<br/></td></tr><tr><td align="left">_24 = std::result::Result::&lt;Vec&lt;u8&gt;, std::io::Error&gt;::map_err::&lt;ErrorCode, {closure@programs/openbook_v2/src/lib.rs:19:1: 19:11}&gt;(move _25, move _28)</td></tr></table>>];
    bb2__0_1255 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">_23 = &lt;std::result::Result&lt;Vec&lt;u8&gt;, ErrorCode&gt; as Try&gt;::branch(move _24)</td></tr></table>>];
    bb3__0_1255 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>_29 = discriminant(_23)<br/></td></tr><tr><td align="left">switchInt(move _29)</td></tr></table>>];
    bb4__0_1255 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_33)<br/>_33 = move ((_23 as Continue).0: std::vec::Vec&lt;u8&gt;)<br/>_22 = move _33<br/>StorageDead(_33)<br/>_65 = discriminant(_23)<br/>StorageDead(_27)<br/>StorageDead(_23)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>_61 = const _<br/>_36 = &amp;(*_61)<br/>_35 = move _36 as &amp;[u8] (PointerCoercion(Unsize))<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">_34 = std::slice::&lt;impl [u8]&gt;::to_vec(move _35)</td></tr></table>>];
    bb5__0_1255 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_1255 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_30)<br/>_30 = ((_23 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::ErrorCode&gt;)<br/>StorageLive(_32)<br/>_32 = _30<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, ErrorCode&gt;&gt;&gt;::from_residual(move _32)</td></tr></table>>];
    bb7__0_1255 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_30)<br/>_63 = discriminant(_23)<br/>StorageDead(_27)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">drop(_1)</td></tr></table>>];
    bb8__0_1255 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>_39 = &amp;mut _34<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>_41 = &amp;mut _22<br/>_40 = &amp;mut (*_41)<br/></td></tr><tr><td align="left">_38 = Vec::&lt;u8&gt;::append(move _39, move _40)</td></tr></table>>];
    bb9__0_1255 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageDead(_39)<br/>StorageDead(_41)<br/>StorageDead(_38)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>_43 = &amp;_1<br/>StorageLive(_44)<br/>_44 = Option::&lt;bool&gt;::None<br/></td></tr><tr><td align="left">_42 = &lt;CpiContext&lt;'_, '_, '_, '_, context::__cpi_client_accounts_place_order::PlaceOrder&lt;'_&gt;&gt; as anchor_lang::ToAccountMetas&gt;::to_account_metas(move _43, move _44)</td></tr></table>>];
    bb10__0_1255 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_43)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>_46 = &amp;(_1.2: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/></td></tr><tr><td align="left">_45 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::Key&gt;::key(move _46)</td></tr></table>>];
    bb11__0_1255 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageLive(_47)<br/>_47 = move _42<br/>StorageLive(_48)<br/>_48 = move _34<br/>_11 = Instruction { program_id: move _45, accounts: move _47, data: move _48 }<br/>StorageDead(_48)<br/>StorageDead(_47)<br/>StorageDead(_45)<br/>StorageDead(_42)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">drop(_22)</td></tr></table>>];
    bb12__0_1255 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_12)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>_50 = &amp;_1<br/></td></tr><tr><td align="left">_49 = &lt;CpiContext&lt;'_, '_, '_, '_, context::__cpi_client_accounts_place_order::PlaceOrder&lt;'_&gt;&gt; as anchor_lang::ToAccountInfos&lt;'_&gt;&gt;::to_account_infos(move _50)</td></tr></table>>];
    bb13__0_1255 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>_53 = &amp;_11<br/>_52 = &amp;(*_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>_57 = &amp;_49<br/>_56 = &amp;(*_57)<br/></td></tr><tr><td align="left">_55 = &lt;Vec&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as Deref&gt;::deref(move _56)</td></tr></table>>];
    bb14__0_1255 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">_54 = &amp;(*_55)<br/>StorageDead(_56)<br/>StorageLive(_58)<br/>_62 = deref_copy (_1.3: &amp;[&amp;[&amp;[u8]]])<br/>_58 = &amp;(*_62)<br/></td></tr><tr><td align="left">_51 = invoke_signed(move _52, move _54, move _58)</td></tr></table>>];
    bb15__0_1255 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageDead(_54)<br/>StorageDead(_52)<br/>StorageLive(_59)<br/>_59 = {closure@programs/openbook_v2/src/lib.rs:19:1: 19:11}<br/>StorageLive(_60)<br/>_60 = {closure@programs/openbook_v2/src/lib.rs:19:1: 19:11}<br/></td></tr><tr><td align="left">_0 = std::result::Result::&lt;(), anchor_lang::prelude::ProgramError&gt;::map_or_else::&lt;std::result::Result&lt;(), anchor_lang::error::Error&gt;, {closure@programs/openbook_v2/src/lib.rs:19:1: 19:11}, {closure@programs/openbook_v2/src/lib.rs:19:1: 19:11}&gt;(move _51, move _59, move _60)</td></tr></table>>];
    bb16__0_1255 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageDead(_59)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">drop(_49)</td></tr></table>>];
    bb17__0_1255 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/></td></tr><tr><td align="left">drop(_11)</td></tr></table>>];
    bb18__0_1255 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_57)<br/>StorageDead(_55)<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">drop(_1)</td></tr></table>>];
    bb19__0_1255 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left">return</td></tr></table>>];
    bb20__0_1255 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">20 (cleanup)</td></tr><tr><td align="left">drop(_49)</td></tr></table>>];
    bb21__0_1255 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">21 (cleanup)</td></tr><tr><td align="left">drop(_11)</td></tr></table>>];
    bb22__0_1255 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">22 (cleanup)</td></tr><tr><td align="left">drop(_42)</td></tr></table>>];
    bb23__0_1255 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">23 (cleanup)</td></tr><tr><td align="left">drop(_34)</td></tr></table>>];
    bb24__0_1255 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">24 (cleanup)</td></tr><tr><td align="left">drop(_22)</td></tr></table>>];
    bb25__0_1255 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">25 (cleanup)</td></tr><tr><td align="left">drop(_1)</td></tr></table>>];
    bb26__0_1255 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">26 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb27__0_1255 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">27 (cleanup)</td></tr><tr><td align="left" balign="left">_67 = discriminant(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_1255 -> bb1__0_1255 [label="return"];
    bb0__0_1255 -> bb25__0_1255 [label="unwind"];
    bb1__0_1255 -> bb2__0_1255 [label="return"];
    bb1__0_1255 -> bb25__0_1255 [label="unwind"];
    bb2__0_1255 -> bb3__0_1255 [label="return"];
    bb2__0_1255 -> bb25__0_1255 [label="unwind"];
    bb3__0_1255 -> bb4__0_1255 [label="0"];
    bb3__0_1255 -> bb6__0_1255 [label="1"];
    bb3__0_1255 -> bb5__0_1255 [label="otherwise"];
    bb4__0_1255 -> bb8__0_1255 [label="return"];
    bb4__0_1255 -> bb24__0_1255 [label="unwind"];
    bb6__0_1255 -> bb7__0_1255 [label="return"];
    bb6__0_1255 -> bb27__0_1255 [label="unwind"];
    bb7__0_1255 -> bb19__0_1255 [label="return"];
    bb7__0_1255 -> bb26__0_1255 [label="unwind"];
    bb8__0_1255 -> bb9__0_1255 [label="return"];
    bb8__0_1255 -> bb23__0_1255 [label="unwind"];
    bb9__0_1255 -> bb10__0_1255 [label="return"];
    bb9__0_1255 -> bb23__0_1255 [label="unwind"];
    bb10__0_1255 -> bb11__0_1255 [label="return"];
    bb10__0_1255 -> bb22__0_1255 [label="unwind"];
    bb11__0_1255 -> bb12__0_1255 [label="return"];
    bb11__0_1255 -> bb25__0_1255 [label="unwind"];
    bb12__0_1255 -> bb13__0_1255 [label="return"];
    bb12__0_1255 -> bb21__0_1255 [label="unwind"];
    bb13__0_1255 -> bb14__0_1255 [label="return"];
    bb13__0_1255 -> bb20__0_1255 [label="unwind"];
    bb14__0_1255 -> bb15__0_1255 [label="return"];
    bb14__0_1255 -> bb20__0_1255 [label="unwind"];
    bb15__0_1255 -> bb16__0_1255 [label="return"];
    bb15__0_1255 -> bb20__0_1255 [label="unwind"];
    bb16__0_1255 -> bb17__0_1255 [label="return"];
    bb16__0_1255 -> bb21__0_1255 [label="unwind"];
    bb17__0_1255 -> bb18__0_1255 [label="return"];
    bb17__0_1255 -> bb25__0_1255 [label="unwind"];
    bb18__0_1255 -> bb19__0_1255 [label="return"];
    bb18__0_1255 -> bb26__0_1255 [label="unwind"];
    bb20__0_1255 -> bb21__0_1255 [label="return"];
    bb21__0_1255 -> bb25__0_1255 [label="return"];
    bb22__0_1255 -> bb23__0_1255 [label="return"];
    bb23__0_1255 -> bb24__0_1255 [label="return"];
    bb24__0_1255 -> bb25__0_1255 [label="return"];
    bb25__0_1255 -> bb26__0_1255 [label="return"];
    bb27__0_1255 -> bb25__0_1255 [label=""];
}
