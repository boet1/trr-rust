// MIR for `cpi::consume_events` before PreCodegen

fn cpi::consume_events(_1: CpiContext<'_, '_, '_, '_, context::__cpi_client_accounts_consume_events::ConsumeEvents<'_>>, _2: u64) -> std::result::Result<(), anchor_lang::error::Error> {
    debug ctx => _1;
    debug limit => _2;
    let mut _0: std::result::Result<(), anchor_lang::error::Error>;
    let _3: anchor_lang::solana_program::instruction::Instruction;
    let _4: instruction::ConsumeEvents;
    let mut _5: u64;
    let mut _7: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, anchor_lang::error::ErrorCode>, std::vec::Vec<u8>>;
    let mut _8: std::result::Result<std::vec::Vec<u8>, anchor_lang::error::ErrorCode>;
    let mut _9: std::result::Result<std::vec::Vec<u8>, std::io::Error>;
    let mut _10: &instruction::ConsumeEvents;
    let _11: &instruction::ConsumeEvents;
    let mut _12: {closure@programs/openbook_v2/src/lib.rs:19:1: 19:11};
    let mut _13: isize;
    let mut _15: !;
    let mut _16: std::result::Result<std::convert::Infallible, anchor_lang::error::ErrorCode>;
    let mut _19: &[u8];
    let mut _20: &[u8; 8];
    let _21: [u8; 8];
    let _22: ();
    let mut _23: &mut std::vec::Vec<u8>;
    let mut _24: &mut std::vec::Vec<u8>;
    let mut _25: &mut std::vec::Vec<u8>;
    let mut _27: &anchor_lang::context::CpiContext<'_, '_, '_, '_, context::__cpi_client_accounts_consume_events::ConsumeEvents<'_>>;
    let mut _28: std::option::Option<bool>;
    let mut _29: anchor_lang::prelude::Pubkey;
    let mut _30: &anchor_lang::prelude::AccountInfo<'_>;
    let mut _31: std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _32: std::vec::Vec<u8>;
    let mut _34: &anchor_lang::context::CpiContext<'_, '_, '_, '_, context::__cpi_client_accounts_consume_events::ConsumeEvents<'_>>;
    let mut _35: std::result::Result<(), anchor_lang::prelude::ProgramError>;
    let mut _36: &anchor_lang::solana_program::instruction::Instruction;
    let _37: &anchor_lang::solana_program::instruction::Instruction;
    let mut _38: &[anchor_lang::prelude::AccountInfo<'_>];
    let _39: &[anchor_lang::prelude::AccountInfo<'_>];
    let mut _40: &std::vec::Vec<anchor_lang::prelude::AccountInfo<'_>>;
    let _41: &std::vec::Vec<anchor_lang::prelude::AccountInfo<'_>>;
    let mut _42: &[&[&[u8]]];
    let mut _43: {closure@programs/openbook_v2/src/lib.rs:19:1: 19:11};
    let mut _44: {closure@programs/openbook_v2/src/lib.rs:19:1: 19:11};
    let mut _46: &[&[&[u8]]];
    let mut _47: isize;
    let mut _48: isize;
    let mut _49: isize;
    let mut _50: isize;
    let mut _51: isize;
    scope 1 {
        debug ix => _3;
        let mut _33: std::vec::Vec<anchor_lang::prelude::AccountInfo<'_>>;
        scope 10 {
            debug acc_infos => _33;
        }
    }
    scope 2 {
        debug ix => _4;
        let mut _6: std::vec::Vec<u8>;
        let _14: std::result::Result<std::convert::Infallible, anchor_lang::error::ErrorCode>;
        let _17: std::vec::Vec<u8>;
        scope 3 {
            debug ix_data => _6;
            let mut _18: std::vec::Vec<u8>;
            let mut _45: &[u8; 8];
            scope 8 {
                debug data => _18;
                let _26: std::vec::Vec<anchor_lang::prelude::AccountMeta>;
                scope 9 {
                    debug accounts => _26;
                }
            }
        }
        scope 4 {
            debug residual => _14;
            scope 5 {
            }
        }
        scope 6 {
            debug val => _17;
            scope 7 {
            }
        }
    }

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        StorageLive(_5);
        _5 = _2;
        _4 = instruction::ConsumeEvents { limit: move _5 };
        StorageDead(_5);
        StorageLive(_6);
        StorageLive(_7);
        StorageLive(_8);
        StorageLive(_9);
        StorageLive(_10);
        StorageLive(_11);
        _11 = &_4;
        _10 = &(*_11);
        _9 = <instruction::ConsumeEvents as anchor_lang::AnchorSerialize>::try_to_vec(move _10) -> [return: bb1, unwind: bb25];
    }

    bb1: {
        StorageDead(_10);
        StorageLive(_12);
        _12 = {closure@programs/openbook_v2/src/lib.rs:19:1: 19:11};
        _8 = std::result::Result::<Vec<u8>, std::io::Error>::map_err::<ErrorCode, {closure@programs/openbook_v2/src/lib.rs:19:1: 19:11}>(move _9, move _12) -> [return: bb2, unwind: bb25];
    }

    bb2: {
        StorageDead(_12);
        StorageDead(_9);
        _7 = <std::result::Result<Vec<u8>, ErrorCode> as Try>::branch(move _8) -> [return: bb3, unwind: bb25];
    }

    bb3: {
        StorageDead(_8);
        _13 = discriminant(_7);
        switchInt(move _13) -> [0: bb4, 1: bb6, otherwise: bb5];
    }

    bb4: {
        StorageLive(_17);
        _17 = move ((_7 as Continue).0: std::vec::Vec<u8>);
        _6 = move _17;
        StorageDead(_17);
        _49 = discriminant(_7);
        StorageDead(_11);
        StorageDead(_7);
        StorageLive(_18);
        StorageLive(_19);
        StorageLive(_20);
        _45 = const _;
        _20 = &(*_45);
        _19 = move _20 as &[u8] (PointerCoercion(Unsize));
        StorageDead(_20);
        _18 = std::slice::<impl [u8]>::to_vec(move _19) -> [return: bb8, unwind: bb24];
    }

    bb5: {
        unreachable;
    }

    bb6: {
        StorageLive(_14);
        _14 = ((_7 as Break).0: std::result::Result<std::convert::Infallible, anchor_lang::error::ErrorCode>);
        StorageLive(_16);
        _16 = _14;
        _0 = <std::result::Result<(), anchor_lang::error::Error> as FromResidual<std::result::Result<Infallible, ErrorCode>>>::from_residual(move _16) -> [return: bb7, unwind: bb27];
    }

    bb7: {
        StorageDead(_16);
        StorageDead(_14);
        _47 = discriminant(_7);
        StorageDead(_11);
        StorageDead(_7);
        StorageDead(_6);
        StorageDead(_4);
        StorageDead(_3);
        drop(_1) -> [return: bb19, unwind: bb26];
    }

    bb8: {
        StorageDead(_19);
        StorageLive(_22);
        StorageLive(_23);
        _23 = &mut _18;
        StorageLive(_24);
        StorageLive(_25);
        _25 = &mut _6;
        _24 = &mut (*_25);
        _22 = Vec::<u8>::append(move _23, move _24) -> [return: bb9, unwind: bb23];
    }

    bb9: {
        StorageDead(_24);
        StorageDead(_23);
        StorageDead(_25);
        StorageDead(_22);
        StorageLive(_26);
        StorageLive(_27);
        _27 = &_1;
        StorageLive(_28);
        _28 = Option::<bool>::None;
        _26 = <CpiContext<'_, '_, '_, '_, context::__cpi_client_accounts_consume_events::ConsumeEvents<'_>> as anchor_lang::ToAccountMetas>::to_account_metas(move _27, move _28) -> [return: bb10, unwind: bb23];
    }

    bb10: {
        StorageDead(_28);
        StorageDead(_27);
        StorageLive(_29);
        StorageLive(_30);
        _30 = &(_1.2: anchor_lang::prelude::AccountInfo<'_>);
        _29 = <anchor_lang::prelude::AccountInfo<'_> as anchor_lang::Key>::key(move _30) -> [return: bb11, unwind: bb22];
    }

    bb11: {
        StorageDead(_30);
        StorageLive(_31);
        _31 = move _26;
        StorageLive(_32);
        _32 = move _18;
        _3 = Instruction { program_id: move _29, accounts: move _31, data: move _32 };
        StorageDead(_32);
        StorageDead(_31);
        StorageDead(_29);
        StorageDead(_26);
        StorageDead(_18);
        drop(_6) -> [return: bb12, unwind: bb25];
    }

    bb12: {
        StorageDead(_6);
        StorageDead(_4);
        StorageLive(_33);
        StorageLive(_34);
        _34 = &_1;
        _33 = <CpiContext<'_, '_, '_, '_, context::__cpi_client_accounts_consume_events::ConsumeEvents<'_>> as anchor_lang::ToAccountInfos<'_>>::to_account_infos(move _34) -> [return: bb13, unwind: bb21];
    }

    bb13: {
        StorageDead(_34);
        StorageLive(_35);
        StorageLive(_36);
        StorageLive(_37);
        _37 = &_3;
        _36 = &(*_37);
        StorageLive(_38);
        StorageLive(_39);
        StorageLive(_40);
        StorageLive(_41);
        _41 = &_33;
        _40 = &(*_41);
        _39 = <Vec<anchor_lang::prelude::AccountInfo<'_>> as Deref>::deref(move _40) -> [return: bb14, unwind: bb20];
    }

    bb14: {
        _38 = &(*_39);
        StorageDead(_40);
        StorageLive(_42);
        _46 = deref_copy (_1.3: &[&[&[u8]]]);
        _42 = &(*_46);
        _35 = invoke_signed(move _36, move _38, move _42) -> [return: bb15, unwind: bb20];
    }

    bb15: {
        StorageDead(_42);
        StorageDead(_38);
        StorageDead(_36);
        StorageLive(_43);
        _43 = {closure@programs/openbook_v2/src/lib.rs:19:1: 19:11};
        StorageLive(_44);
        _44 = {closure@programs/openbook_v2/src/lib.rs:19:1: 19:11};
        _0 = std::result::Result::<(), anchor_lang::prelude::ProgramError>::map_or_else::<std::result::Result<(), anchor_lang::error::Error>, {closure@programs/openbook_v2/src/lib.rs:19:1: 19:11}, {closure@programs/openbook_v2/src/lib.rs:19:1: 19:11}>(move _35, move _43, move _44) -> [return: bb16, unwind: bb20];
    }

    bb16: {
        StorageDead(_44);
        StorageDead(_43);
        StorageDead(_35);
        drop(_33) -> [return: bb17, unwind: bb21];
    }

    bb17: {
        StorageDead(_33);
        drop(_3) -> [return: bb18, unwind: bb25];
    }

    bb18: {
        StorageDead(_3);
        StorageDead(_41);
        StorageDead(_39);
        StorageDead(_37);
        drop(_1) -> [return: bb19, unwind: bb26];
    }

    bb19: {
        return;
    }

    bb20 (cleanup): {
        drop(_33) -> [return: bb21, unwind terminate(cleanup)];
    }

    bb21 (cleanup): {
        drop(_3) -> [return: bb25, unwind terminate(cleanup)];
    }

    bb22 (cleanup): {
        drop(_26) -> [return: bb23, unwind terminate(cleanup)];
    }

    bb23 (cleanup): {
        drop(_18) -> [return: bb24, unwind terminate(cleanup)];
    }

    bb24 (cleanup): {
        drop(_6) -> [return: bb25, unwind terminate(cleanup)];
    }

    bb25 (cleanup): {
        drop(_1) -> [return: bb26, unwind terminate(cleanup)];
    }

    bb26 (cleanup): {
        resume;
    }

    bb27 (cleanup): {
        _51 = discriminant(_7);
        goto -> bb25;
    }
}
