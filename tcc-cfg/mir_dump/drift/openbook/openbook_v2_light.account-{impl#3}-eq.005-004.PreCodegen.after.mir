// MIR for `account::<impl at programs/openbook_v2/src/account.rs:356:1: 356:47>::eq` after PreCodegen

fn account::<impl at programs/openbook_v2/src/account.rs:356:1: 356:47>::eq(_1: &anchor_lang::prelude::Pubkey, _2: &NonZeroPubkeyOption) -> bool {
    debug self => _1;
    debug other => _2;
    let mut _0: bool;
    let mut _3: bool;
    let mut _4: &account::NonZeroPubkeyOption;
    let mut _5: &anchor_lang::prelude::Pubkey;
    let mut _6: &anchor_lang::prelude::Pubkey;

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        _4 = &(*_2);
        _3 = NonZeroPubkeyOption::is_some(move _4) -> [return: bb1, unwind continue];
    }

    bb1: {
        switchInt(move _3) -> [0: bb3, otherwise: bb2];
    }

    bb2: {
        StorageDead(_4);
        StorageLive(_5);
        _5 = &(*_1);
        StorageLive(_6);
        _6 = &((*_2).0: anchor_lang::prelude::Pubkey);
        _0 = <anchor_lang::prelude::Pubkey as PartialEq>::eq(move _5, move _6) -> [return: bb4, unwind continue];
    }

    bb3: {
        StorageDead(_4);
        _0 = const false;
        goto -> bb5;
    }

    bb4: {
        StorageDead(_6);
        StorageDead(_5);
        goto -> bb5;
    }

    bb5: {
        StorageDead(_3);
        return;
    }
}
