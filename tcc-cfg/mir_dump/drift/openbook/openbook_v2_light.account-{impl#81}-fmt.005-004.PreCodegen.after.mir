// MIR for `account::<impl at programs/openbook_v2/src/account.rs:240:5: 240:10>::fmt` after PreCodegen

fn account::<impl at programs/openbook_v2/src/account.rs:240:5: 240:10>::fmt(_1: &LeafNode, _2: &mut Formatter<'_>) -> std::result::Result<(), std::fmt::Error> {
    debug self => _1;
    debug f => _2;
    let mut _0: std::result::Result<(), std::fmt::Error>;
    let _3: &[&str; 10];
    let _4: &[&str; 10];
    let _5: [&str; 10];
    let mut _6: &str;
    let _7: &str;
    let mut _8: &str;
    let _9: &str;
    let mut _10: &str;
    let _11: &str;
    let mut _12: &str;
    let _13: &str;
    let mut _14: &str;
    let _15: &str;
    let mut _16: &str;
    let _17: &str;
    let mut _18: &str;
    let _19: &str;
    let mut _20: &str;
    let _21: &str;
    let mut _22: &str;
    let _23: &str;
    let mut _25: &[&dyn std::fmt::Debug; 10];
    let _26: &[&dyn std::fmt::Debug; 10];
    let _27: [&dyn std::fmt::Debug; 10];
    let mut _28: &dyn std::fmt::Debug;
    let mut _29: &u8;
    let _30: &u8;
    let mut _31: &dyn std::fmt::Debug;
    let mut _32: &u8;
    let _33: &u8;
    let mut _34: &dyn std::fmt::Debug;
    let mut _35: &u16;
    let _36: &u16;
    let mut _37: &dyn std::fmt::Debug;
    let mut _38: &[u8; 4];
    let _39: &[u8; 4];
    let mut _40: &dyn std::fmt::Debug;
    let mut _41: &u128;
    let _42: &u128;
    let mut _43: &dyn std::fmt::Debug;
    let mut _44: &anchor_lang::prelude::Pubkey;
    let _45: &anchor_lang::prelude::Pubkey;
    let mut _46: &dyn std::fmt::Debug;
    let mut _47: &i64;
    let _48: &i64;
    let mut _49: &dyn std::fmt::Debug;
    let mut _50: &u64;
    let _51: &u64;
    let mut _52: &dyn std::fmt::Debug;
    let mut _53: &i64;
    let _54: &i64;
    let mut _55: &dyn std::fmt::Debug;
    let mut _56: &&u64;
    let _57: &&u64;
    let _58: &u64;
    let mut _59: &mut std::fmt::Formatter<'_>;
    let mut _60: &str;
    let _61: &str;
    let mut _62: &[&str];
    let mut _63: &[&str; 10];
    let mut _64: &[&dyn std::fmt::Debug];
    let mut _65: &[&str; 10];
    scope 1 {
        debug names => _3;
        let _24: &[&dyn std::fmt::Debug];
        scope 2 {
            debug values => _24;
        }
    }

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        _65 = const _;
        _4 = &(*_65);
        _3 = &(*_4);
        StorageDead(_4);
        StorageLive(_24);
        StorageLive(_25);
        StorageLive(_26);
        StorageLive(_27);
        StorageLive(_28);
        StorageLive(_29);
        StorageLive(_30);
        _30 = &((*_1).0: u8);
        _29 = &(*_30);
        _28 = move _29 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_29);
        StorageLive(_31);
        StorageLive(_32);
        StorageLive(_33);
        _33 = &((*_1).1: u8);
        _32 = &(*_33);
        _31 = move _32 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_32);
        StorageLive(_34);
        StorageLive(_35);
        StorageLive(_36);
        _36 = &((*_1).2: u16);
        _35 = &(*_36);
        _34 = move _35 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_35);
        StorageLive(_37);
        StorageLive(_38);
        StorageLive(_39);
        _39 = &((*_1).3: [u8; 4]);
        _38 = &(*_39);
        _37 = move _38 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_38);
        StorageLive(_40);
        StorageLive(_41);
        StorageLive(_42);
        _42 = &((*_1).4: u128);
        _41 = &(*_42);
        _40 = move _41 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_41);
        StorageLive(_43);
        StorageLive(_44);
        StorageLive(_45);
        _45 = &((*_1).5: anchor_lang::prelude::Pubkey);
        _44 = &(*_45);
        _43 = move _44 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_44);
        StorageLive(_46);
        StorageLive(_47);
        StorageLive(_48);
        _48 = &((*_1).6: i64);
        _47 = &(*_48);
        _46 = move _47 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_47);
        StorageLive(_49);
        StorageLive(_50);
        StorageLive(_51);
        _51 = &((*_1).7: u64);
        _50 = &(*_51);
        _49 = move _50 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_50);
        StorageLive(_52);
        StorageLive(_53);
        StorageLive(_54);
        _54 = &((*_1).8: i64);
        _53 = &(*_54);
        _52 = move _53 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_53);
        StorageLive(_55);
        StorageLive(_56);
        StorageLive(_57);
        StorageLive(_58);
        _58 = &((*_1).9: u64);
        _57 = &_58;
        _56 = &(*_57);
        _55 = move _56 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_56);
        _27 = [move _28, move _31, move _34, move _37, move _40, move _43, move _46, move _49, move _52, move _55];
        StorageDead(_55);
        StorageDead(_52);
        StorageDead(_49);
        StorageDead(_46);
        StorageDead(_43);
        StorageDead(_40);
        StorageDead(_37);
        StorageDead(_34);
        StorageDead(_31);
        StorageDead(_28);
        _26 = &_27;
        _25 = &(*_26);
        _24 = move _25 as &[&dyn std::fmt::Debug] (PointerCoercion(Unsize));
        StorageDead(_25);
        StorageDead(_57);
        StorageDead(_54);
        StorageDead(_51);
        StorageDead(_48);
        StorageDead(_45);
        StorageDead(_42);
        StorageDead(_39);
        StorageDead(_36);
        StorageDead(_33);
        StorageDead(_30);
        StorageDead(_26);
        StorageLive(_59);
        _59 = &mut (*_2);
        StorageLive(_60);
        StorageLive(_61);
        _61 = const "LeafNode";
        _60 = &(*_61);
        StorageLive(_62);
        StorageLive(_63);
        _63 = &(*_3);
        _62 = move _63 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_63);
        StorageLive(_64);
        _64 = &(*_24);
        _0 = Formatter::<'_>::debug_struct_fields_finish(move _59, move _60, move _62, move _64) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_64);
        StorageDead(_62);
        StorageDead(_60);
        StorageDead(_59);
        StorageDead(_58);
        StorageDead(_27);
        StorageDead(_24);
        StorageDead(_3);
        StorageDead(_61);
        return;
    }
}
