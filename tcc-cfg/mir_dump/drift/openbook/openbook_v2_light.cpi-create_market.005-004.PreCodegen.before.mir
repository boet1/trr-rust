// MIR for `cpi::create_market` before PreCodegen

fn cpi::create_market(_1: CpiContext<'_, '_, '_, '_, context::__cpi_client_accounts_create_market::CreateMarket<'_>>, _2: String, _3: account::OracleConfigParams, _4: i64, _5: i64, _6: i64, _7: i64, _8: i64) -> std::result::Result<(), anchor_lang::error::Error> {
    debug ctx => _1;
    debug name => _2;
    debug oracle_config => _3;
    debug quote_lot_size => _4;
    debug base_lot_size => _5;
    debug maker_fee => _6;
    debug taker_fee => _7;
    debug time_expiry => _8;
    let mut _0: std::result::Result<(), anchor_lang::error::Error>;
    let _9: anchor_lang::solana_program::instruction::Instruction;
    let _10: instruction::CreateMarket;
    let mut _11: std::string::String;
    let mut _12: account::OracleConfigParams;
    let mut _13: i64;
    let mut _14: i64;
    let mut _15: i64;
    let mut _16: i64;
    let mut _17: i64;
    let mut _19: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, anchor_lang::error::ErrorCode>, std::vec::Vec<u8>>;
    let mut _20: std::result::Result<std::vec::Vec<u8>, anchor_lang::error::ErrorCode>;
    let mut _21: std::result::Result<std::vec::Vec<u8>, std::io::Error>;
    let mut _22: &instruction::CreateMarket;
    let _23: &instruction::CreateMarket;
    let mut _24: {closure@programs/openbook_v2/src/lib.rs:19:1: 19:11};
    let mut _25: isize;
    let mut _27: !;
    let mut _28: std::result::Result<std::convert::Infallible, anchor_lang::error::ErrorCode>;
    let mut _31: &[u8];
    let mut _32: &[u8; 8];
    let _33: [u8; 8];
    let _34: ();
    let mut _35: &mut std::vec::Vec<u8>;
    let mut _36: &mut std::vec::Vec<u8>;
    let mut _37: &mut std::vec::Vec<u8>;
    let mut _39: &anchor_lang::context::CpiContext<'_, '_, '_, '_, context::__cpi_client_accounts_create_market::CreateMarket<'_>>;
    let mut _40: std::option::Option<bool>;
    let mut _41: anchor_lang::prelude::Pubkey;
    let mut _42: &anchor_lang::prelude::AccountInfo<'_>;
    let mut _43: std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _44: std::vec::Vec<u8>;
    let mut _46: &anchor_lang::context::CpiContext<'_, '_, '_, '_, context::__cpi_client_accounts_create_market::CreateMarket<'_>>;
    let mut _47: std::result::Result<(), anchor_lang::prelude::ProgramError>;
    let mut _48: &anchor_lang::solana_program::instruction::Instruction;
    let _49: &anchor_lang::solana_program::instruction::Instruction;
    let mut _50: &[anchor_lang::prelude::AccountInfo<'_>];
    let _51: &[anchor_lang::prelude::AccountInfo<'_>];
    let mut _52: &std::vec::Vec<anchor_lang::prelude::AccountInfo<'_>>;
    let _53: &std::vec::Vec<anchor_lang::prelude::AccountInfo<'_>>;
    let mut _54: &[&[&[u8]]];
    let mut _55: {closure@programs/openbook_v2/src/lib.rs:19:1: 19:11};
    let mut _56: {closure@programs/openbook_v2/src/lib.rs:19:1: 19:11};
    let mut _58: &[&[&[u8]]];
    let mut _59: isize;
    let mut _60: isize;
    let mut _61: isize;
    let mut _62: isize;
    let mut _63: isize;
    scope 1 {
        debug ix => _9;
        let mut _45: std::vec::Vec<anchor_lang::prelude::AccountInfo<'_>>;
        scope 10 {
            debug acc_infos => _45;
        }
    }
    scope 2 {
        debug ix => _10;
        let mut _18: std::vec::Vec<u8>;
        let _26: std::result::Result<std::convert::Infallible, anchor_lang::error::ErrorCode>;
        let _29: std::vec::Vec<u8>;
        scope 3 {
            debug ix_data => _18;
            let mut _30: std::vec::Vec<u8>;
            let mut _57: &[u8; 8];
            scope 8 {
                debug data => _30;
                let _38: std::vec::Vec<anchor_lang::prelude::AccountMeta>;
                scope 9 {
                    debug accounts => _38;
                }
            }
        }
        scope 4 {
            debug residual => _26;
            scope 5 {
            }
        }
        scope 6 {
            debug val => _29;
            scope 7 {
            }
        }
    }

    bb0: {
        StorageLive(_9);
        StorageLive(_10);
        StorageLive(_11);
        _11 = move _2;
        StorageLive(_12);
        _12 = _3;
        StorageLive(_13);
        _13 = _4;
        StorageLive(_14);
        _14 = _5;
        StorageLive(_15);
        _15 = _6;
        StorageLive(_16);
        _16 = _7;
        StorageLive(_17);
        _17 = _8;
        _10 = instruction::CreateMarket { name: move _11, oracle_config: move _12, quote_lot_size: move _13, base_lot_size: move _14, maker_fee: move _15, taker_fee: move _16, time_expiry: move _17 };
        StorageDead(_17);
        StorageDead(_16);
        StorageDead(_15);
        StorageDead(_14);
        StorageDead(_13);
        StorageDead(_12);
        StorageDead(_11);
        StorageLive(_18);
        StorageLive(_19);
        StorageLive(_20);
        StorageLive(_21);
        StorageLive(_22);
        StorageLive(_23);
        _23 = &_10;
        _22 = &(*_23);
        _21 = <instruction::CreateMarket as anchor_lang::AnchorSerialize>::try_to_vec(move _22) -> [return: bb1, unwind: bb27];
    }

    bb1: {
        StorageDead(_22);
        StorageLive(_24);
        _24 = {closure@programs/openbook_v2/src/lib.rs:19:1: 19:11};
        _20 = std::result::Result::<Vec<u8>, std::io::Error>::map_err::<ErrorCode, {closure@programs/openbook_v2/src/lib.rs:19:1: 19:11}>(move _21, move _24) -> [return: bb2, unwind: bb27];
    }

    bb2: {
        StorageDead(_24);
        StorageDead(_21);
        _19 = <std::result::Result<Vec<u8>, ErrorCode> as Try>::branch(move _20) -> [return: bb3, unwind: bb27];
    }

    bb3: {
        StorageDead(_20);
        _25 = discriminant(_19);
        switchInt(move _25) -> [0: bb4, 1: bb6, otherwise: bb5];
    }

    bb4: {
        StorageLive(_29);
        _29 = move ((_19 as Continue).0: std::vec::Vec<u8>);
        _18 = move _29;
        StorageDead(_29);
        _61 = discriminant(_19);
        StorageDead(_23);
        StorageDead(_19);
        StorageLive(_30);
        StorageLive(_31);
        StorageLive(_32);
        _57 = const _;
        _32 = &(*_57);
        _31 = move _32 as &[u8] (PointerCoercion(Unsize));
        StorageDead(_32);
        _30 = std::slice::<impl [u8]>::to_vec(move _31) -> [return: bb8, unwind: bb26];
    }

    bb5: {
        unreachable;
    }

    bb6: {
        StorageLive(_26);
        _26 = ((_19 as Break).0: std::result::Result<std::convert::Infallible, anchor_lang::error::ErrorCode>);
        StorageLive(_28);
        _28 = _26;
        _0 = <std::result::Result<(), anchor_lang::error::Error> as FromResidual<std::result::Result<Infallible, ErrorCode>>>::from_residual(move _28) -> [return: bb7, unwind: bb30];
    }

    bb7: {
        StorageDead(_28);
        StorageDead(_26);
        _59 = discriminant(_19);
        StorageDead(_23);
        StorageDead(_19);
        StorageDead(_18);
        drop(_10) -> [return: bb20, unwind: bb28];
    }

    bb8: {
        StorageDead(_31);
        StorageLive(_34);
        StorageLive(_35);
        _35 = &mut _30;
        StorageLive(_36);
        StorageLive(_37);
        _37 = &mut _18;
        _36 = &mut (*_37);
        _34 = Vec::<u8>::append(move _35, move _36) -> [return: bb9, unwind: bb25];
    }

    bb9: {
        StorageDead(_36);
        StorageDead(_35);
        StorageDead(_37);
        StorageDead(_34);
        StorageLive(_38);
        StorageLive(_39);
        _39 = &_1;
        StorageLive(_40);
        _40 = Option::<bool>::None;
        _38 = <CpiContext<'_, '_, '_, '_, context::__cpi_client_accounts_create_market::CreateMarket<'_>> as anchor_lang::ToAccountMetas>::to_account_metas(move _39, move _40) -> [return: bb10, unwind: bb25];
    }

    bb10: {
        StorageDead(_40);
        StorageDead(_39);
        StorageLive(_41);
        StorageLive(_42);
        _42 = &(_1.2: anchor_lang::prelude::AccountInfo<'_>);
        _41 = <anchor_lang::prelude::AccountInfo<'_> as anchor_lang::Key>::key(move _42) -> [return: bb11, unwind: bb24];
    }

    bb11: {
        StorageDead(_42);
        StorageLive(_43);
        _43 = move _38;
        StorageLive(_44);
        _44 = move _30;
        _9 = Instruction { program_id: move _41, accounts: move _43, data: move _44 };
        StorageDead(_44);
        StorageDead(_43);
        StorageDead(_41);
        StorageDead(_38);
        StorageDead(_30);
        drop(_18) -> [return: bb12, unwind: bb27];
    }

    bb12: {
        StorageDead(_18);
        drop(_10) -> [return: bb13, unwind: bb28];
    }

    bb13: {
        StorageDead(_10);
        StorageLive(_45);
        StorageLive(_46);
        _46 = &_1;
        _45 = <CpiContext<'_, '_, '_, '_, context::__cpi_client_accounts_create_market::CreateMarket<'_>> as anchor_lang::ToAccountInfos<'_>>::to_account_infos(move _46) -> [return: bb14, unwind: bb23];
    }

    bb14: {
        StorageDead(_46);
        StorageLive(_47);
        StorageLive(_48);
        StorageLive(_49);
        _49 = &_9;
        _48 = &(*_49);
        StorageLive(_50);
        StorageLive(_51);
        StorageLive(_52);
        StorageLive(_53);
        _53 = &_45;
        _52 = &(*_53);
        _51 = <Vec<anchor_lang::prelude::AccountInfo<'_>> as Deref>::deref(move _52) -> [return: bb15, unwind: bb22];
    }

    bb15: {
        _50 = &(*_51);
        StorageDead(_52);
        StorageLive(_54);
        _58 = deref_copy (_1.3: &[&[&[u8]]]);
        _54 = &(*_58);
        _47 = invoke_signed(move _48, move _50, move _54) -> [return: bb16, unwind: bb22];
    }

    bb16: {
        StorageDead(_54);
        StorageDead(_50);
        StorageDead(_48);
        StorageLive(_55);
        _55 = {closure@programs/openbook_v2/src/lib.rs:19:1: 19:11};
        StorageLive(_56);
        _56 = {closure@programs/openbook_v2/src/lib.rs:19:1: 19:11};
        _0 = std::result::Result::<(), anchor_lang::prelude::ProgramError>::map_or_else::<std::result::Result<(), anchor_lang::error::Error>, {closure@programs/openbook_v2/src/lib.rs:19:1: 19:11}, {closure@programs/openbook_v2/src/lib.rs:19:1: 19:11}>(move _47, move _55, move _56) -> [return: bb17, unwind: bb22];
    }

    bb17: {
        StorageDead(_56);
        StorageDead(_55);
        StorageDead(_47);
        drop(_45) -> [return: bb18, unwind: bb23];
    }

    bb18: {
        StorageDead(_45);
        drop(_9) -> [return: bb19, unwind: bb28];
    }

    bb19: {
        StorageDead(_9);
        StorageDead(_53);
        StorageDead(_51);
        StorageDead(_49);
        drop(_1) -> [return: bb21, unwind: bb29];
    }

    bb20: {
        StorageDead(_10);
        StorageDead(_9);
        drop(_1) -> [return: bb21, unwind: bb29];
    }

    bb21: {
        return;
    }

    bb22 (cleanup): {
        drop(_45) -> [return: bb23, unwind terminate(cleanup)];
    }

    bb23 (cleanup): {
        drop(_9) -> [return: bb28, unwind terminate(cleanup)];
    }

    bb24 (cleanup): {
        drop(_38) -> [return: bb25, unwind terminate(cleanup)];
    }

    bb25 (cleanup): {
        drop(_30) -> [return: bb26, unwind terminate(cleanup)];
    }

    bb26 (cleanup): {
        drop(_18) -> [return: bb27, unwind terminate(cleanup)];
    }

    bb27 (cleanup): {
        drop(_10) -> [return: bb28, unwind terminate(cleanup)];
    }

    bb28 (cleanup): {
        drop(_1) -> [return: bb29, unwind terminate(cleanup)];
    }

    bb29 (cleanup): {
        resume;
    }

    bb30 (cleanup): {
        _63 = discriminant(_19);
        goto -> bb27;
    }
}
