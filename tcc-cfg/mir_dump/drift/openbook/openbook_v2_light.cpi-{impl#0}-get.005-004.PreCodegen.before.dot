digraph Mir_0_1222 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn Return::&lt;T&gt;::get(_1: &amp;ReErased cpi::Return&lt;T/#0&gt;) -&gt; T/#0<br align="left"/>let _2: anchor_lang::prelude::Pubkey;<br align="left"/>let _3: std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _4: (anchor_lang::prelude::Pubkey, std::vec::Vec&lt;u8, std::alloc::Global&gt;);<br align="left"/>let mut _5: std::option::Option&lt;(anchor_lang::prelude::Pubkey, std::vec::Vec&lt;u8, std::alloc::Global&gt;)&gt;;<br align="left"/>let mut _6: std::result::Result&lt;T/#0, std::io::Error&gt;;<br align="left"/>let mut _7: &amp;ReErased [u8];<br align="left"/>let _8: &amp;ReErased [u8];<br align="left"/>let mut _9: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _10: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug _key =&gt; _2;<br align="left"/>debug data =&gt; _3;<br align="left"/>>;
    bb0__0_1222 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/></td></tr><tr><td align="left">_5 = get_return_data()</td></tr></table>>];
    bb1__0_1222 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">_4 = Option::&lt;(anchor_lang::prelude::Pubkey, Vec&lt;u8&gt;)&gt;::unwrap(move _5)</td></tr></table>>];
    bb2__0_1222 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageLive(_2)<br/>_2 = (_4.0: anchor_lang::prelude::Pubkey)<br/>StorageLive(_3)<br/>_3 = move (_4.1: std::vec::Vec&lt;u8&gt;)<br/>StorageDead(_4)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = &amp;_3<br/>_9 = &amp;(*_10)<br/></td></tr><tr><td align="left">_8 = &lt;Vec&lt;u8&gt; as Deref&gt;::deref(move _9)</td></tr></table>>];
    bb3__0_1222 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">_7 = &amp;(*_8)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">_6 = &lt;T as anchor_lang::AnchorDeserialize&gt;::try_from_slice(move _7)</td></tr></table>>];
    bb4__0_1222 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/></td></tr><tr><td align="left">_0 = std::result::Result::&lt;T, std::io::Error&gt;::unwrap(move _6)</td></tr></table>>];
    bb5__0_1222 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb6__0_1222 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/>StorageDead(_2)<br/>StorageDead(_10)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb7__0_1222 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">7 (cleanup)</td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb8__0_1222 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">8 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_1222 -> bb1__0_1222 [label="return"];
    bb1__0_1222 -> bb2__0_1222 [label="return"];
    bb1__0_1222 -> bb8__0_1222 [label="unwind"];
    bb2__0_1222 -> bb3__0_1222 [label="return"];
    bb2__0_1222 -> bb7__0_1222 [label="unwind"];
    bb3__0_1222 -> bb4__0_1222 [label="return"];
    bb3__0_1222 -> bb7__0_1222 [label="unwind"];
    bb4__0_1222 -> bb5__0_1222 [label="return"];
    bb4__0_1222 -> bb7__0_1222 [label="unwind"];
    bb5__0_1222 -> bb6__0_1222 [label="return"];
    bb5__0_1222 -> bb8__0_1222 [label="unwind"];
    bb7__0_1222 -> bb8__0_1222 [label="return"];
}
