// MIR for `account::<impl at programs/openbook_v2/src/account.rs:286:1: 286:14>::new` before PreCodegen

fn account::<impl at programs/openbook_v2/src/account.rs:286:1: 286:14>::new(_1: u8, _2: u128, _3: anchor_lang::prelude::Pubkey, _4: i64, _5: u64, _6: u16, _7: i64, _8: u64) -> LeafNode {
    debug owner_slot => _1;
    debug key => _2;
    debug owner => _3;
    debug quantity => _4;
    debug timestamp => _5;
    debug time_in_force => _6;
    debug peg_limit => _7;
    debug client_order_id => _8;
    let mut _0: account::LeafNode;
    let mut _9: u8;
    let mut _10: u16;
    let mut _11: [u8; 4];
    let mut _12: u128;
    let mut _13: anchor_lang::prelude::Pubkey;
    let mut _14: i64;
    let mut _15: u64;
    let mut _16: i64;
    let mut _17: u64;

    bb0: {
        StorageLive(_9);
        _9 = _1;
        StorageLive(_10);
        _10 = _6;
        StorageLive(_11);
        _11 = <[u8; 4] as Default>::default() -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageLive(_12);
        _12 = _2;
        StorageLive(_13);
        _13 = _3;
        StorageLive(_14);
        _14 = _4;
        StorageLive(_15);
        _15 = _5;
        StorageLive(_16);
        _16 = _7;
        StorageLive(_17);
        _17 = _8;
        _0 = LeafNode { tag: const 2_u8, owner_slot: move _9, time_in_force: move _10, padding: move _11, key: move _12, owner: move _13, quantity: move _14, timestamp: move _15, peg_limit: move _16, client_order_id: move _17 };
        StorageDead(_17);
        StorageDead(_16);
        StorageDead(_15);
        StorageDead(_14);
        StorageDead(_13);
        StorageDead(_12);
        StorageDead(_11);
        StorageDead(_10);
        StorageDead(_9);
        return;
    }
}
