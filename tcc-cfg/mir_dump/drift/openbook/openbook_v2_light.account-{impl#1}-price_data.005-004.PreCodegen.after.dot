digraph Mir_0_18 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn LeafNode::price_data(_1: &amp;ReErased account::LeafNode) -&gt; u64<br align="left"/>let mut _2: u128;<br align="left"/>let mut _3: u128;<br align="left"/>let mut _4: u32;<br align="left"/>let mut _5: bool;<br align="left"/>debug self =&gt; _1;<br align="left"/>>;
    bb0__0_18 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>_3 = ((*_1).4: u128)<br/>_4 = const 64_i32 as u32 (IntToInt)<br/>_5 = Lt(move _4, const 128_u32)<br/></td></tr><tr><td align="left">assert(move _5, &quot;attempt to shift right by `{}`, which would overflow&quot;, const 64_i32)</td></tr></table>>];
    bb1__0_18 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_2 = Shr(move _3, const 64_i32)<br/>StorageDead(_3)<br/>_0 = move _2 as u64 (IntToInt)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_18 -> bb1__0_18 [label="success"];
}
