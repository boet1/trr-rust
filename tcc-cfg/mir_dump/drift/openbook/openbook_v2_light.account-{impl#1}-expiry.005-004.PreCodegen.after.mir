// MIR for `account::<impl at programs/openbook_v2/src/account.rs:286:1: 286:14>::expiry` after PreCodegen

fn account::<impl at programs/openbook_v2/src/account.rs:286:1: 286:14>::expiry(_1: &LeafNode) -> u64 {
    debug self => _1;
    let mut _0: u64;
    let mut _2: bool;
    let mut _3: u16;
    let mut _4: u64;
    let mut _5: u64;
    let mut _6: u16;
    let mut _7: (u64, bool);

    bb0: {
        StorageLive(_2);
        StorageLive(_3);
        _3 = ((*_1).2: u16);
        _2 = Eq(move _3, const 0_u16);
        switchInt(move _2) -> [0: bb2, otherwise: bb1];
    }

    bb1: {
        StorageDead(_3);
        _0 = const _;
        goto -> bb4;
    }

    bb2: {
        StorageDead(_3);
        StorageLive(_4);
        _4 = ((*_1).7: u64);
        StorageLive(_5);
        StorageLive(_6);
        _6 = ((*_1).2: u16);
        _5 = move _6 as u64 (IntToInt);
        StorageDead(_6);
        _7 = CheckedAdd(_4, _5);
        assert(!move (_7.1: bool), "attempt to compute `{} + {}`, which would overflow", move _4, move _5) -> [success: bb3, unwind continue];
    }

    bb3: {
        _0 = move (_7.0: u64);
        StorageDead(_5);
        StorageDead(_4);
        goto -> bb4;
    }

    bb4: {
        StorageDead(_2);
        return;
    }
}
