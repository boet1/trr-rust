digraph Mir_0_1174 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn openbook_v2::place_order(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, context::PlaceOrder&lt;ReErased&gt;&gt;, _2: account::Side, _3: i64, _4: i64, _5: i64, _6: u64, _7: account::PlaceOrderType, _8: u64, _9: account::SelfTradeBehavior, _10: u8) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let mut _11: ();<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug side =&gt; _2;<br align="left"/>debug price_lots =&gt; _3;<br align="left"/>debug max_base_lots =&gt; _4;<br align="left"/>debug max_quote_lots_including_fees =&gt; _5;<br align="left"/>debug client_order_id =&gt; _6;<br align="left"/>debug order_type =&gt; _7;<br align="left"/>debug expiry_timestamp =&gt; _8;<br align="left"/>debug self_trade_behavior =&gt; _9;<br align="left"/>debug limit =&gt; _10;<br align="left"/>>;
    bb0__0_1174 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _11)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
}
