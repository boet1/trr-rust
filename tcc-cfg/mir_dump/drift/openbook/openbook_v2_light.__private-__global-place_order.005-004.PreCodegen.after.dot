digraph Mir_0_1162 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn __global::place_order(_1: &amp;ReErased anchor_lang::prelude::Pubkey, _2: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;], _3: &amp;ReErased [u8]) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _4: ();<br align="left"/>let mut _5: &amp;ReErased str;<br align="left"/>let _6: &amp;ReErased str;<br align="left"/>let _7: instruction::PlaceOrder;<br align="left"/>let mut _8: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::ErrorCode&gt;, instruction::PlaceOrder&gt;;<br align="left"/>let mut _9: std::result::Result&lt;instruction::PlaceOrder, anchor_lang::error::ErrorCode&gt;;<br align="left"/>let mut _10: std::result::Result&lt;instruction::PlaceOrder, std::io::Error&gt;;<br align="left"/>let mut _11: &amp;ReErased mut &amp;ReErased [u8];<br align="left"/>let mut _12: &amp;ReErased mut &amp;ReErased [u8];<br align="left"/>let mut _13: &amp;ReErased [u8];<br align="left"/>let _14: &amp;ReErased [u8];<br align="left"/>let mut _15: &amp;ReErased [u8];<br align="left"/>let mut _16: std::ops::RangeFull;<br align="left"/>let mut _17: Closure(DefId(0:1164 ~ openbook_v2_light[d815]::__private::__global::place_order::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((std::io::Error,)) -&gt; anchor_lang::error::ErrorCode, []), ()]);<br align="left"/>let mut _18: isize;<br align="left"/>let _19: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::ErrorCode&gt;;<br align="left"/>let mut _20: !;<br align="left"/>let mut _21: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::ErrorCode&gt;;<br align="left"/>let _22: instruction::PlaceOrder;<br align="left"/>let _23: account::Side;<br align="left"/>let _24: i64;<br align="left"/>let _25: i64;<br align="left"/>let _26: i64;<br align="left"/>let _27: u64;<br align="left"/>let _28: account::PlaceOrderType;<br align="left"/>let _29: u64;<br align="left"/>let _30: account::SelfTradeBehavior;<br align="left"/>let _31: u8;<br align="left"/>let mut _32: context::PlaceOrderBumps;<br align="left"/>let mut _33: std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _34: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _35: context::PlaceOrder&lt;ReErased&gt;;<br align="left"/>let mut _36: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, context::PlaceOrder&lt;ReErased&gt;&gt;;<br align="left"/>let mut _37: std::result::Result&lt;context::PlaceOrder&lt;ReErased&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _38: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _39: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _40: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _41: &amp;ReErased [u8];<br align="left"/>let mut _42: &amp;ReErased mut context::PlaceOrderBumps;<br align="left"/>let mut _43: &amp;ReErased mut context::PlaceOrderBumps;<br align="left"/>let mut _44: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _45: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _46: isize;<br align="left"/>let _47: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _48: !;<br align="left"/>let mut _49: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _50: context::PlaceOrder&lt;ReErased&gt;;<br align="left"/>let _51: ();<br align="left"/>let mut _52: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _53: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _54: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, context::PlaceOrder&lt;ReErased&gt;&gt;;<br align="left"/>let mut _55: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _56: &amp;ReErased mut context::PlaceOrder&lt;ReErased&gt;;<br align="left"/>let mut _57: &amp;ReErased mut context::PlaceOrder&lt;ReErased&gt;;<br align="left"/>let mut _58: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _59: context::PlaceOrderBumps;<br align="left"/>let mut _60: account::Side;<br align="left"/>let mut _61: i64;<br align="left"/>let mut _62: i64;<br align="left"/>let mut _63: i64;<br align="left"/>let mut _64: u64;<br align="left"/>let mut _65: account::PlaceOrderType;<br align="left"/>let mut _66: u64;<br align="left"/>let mut _67: account::SelfTradeBehavior;<br align="left"/>let mut _68: u8;<br align="left"/>let mut _69: isize;<br align="left"/>let _70: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _71: !;<br align="left"/>let mut _72: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _73: ();<br align="left"/>let mut _74: &amp;ReErased context::PlaceOrder&lt;ReErased&gt;;<br align="left"/>let mut _75: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _76: isize;<br align="left"/>let mut _77: isize;<br align="left"/>let mut _78: isize;<br align="left"/>let mut _79: isize;<br align="left"/>let mut _80: isize;<br align="left"/>let mut _81: isize;<br align="left"/>let mut _82: isize;<br align="left"/>let mut _83: isize;<br align="left"/>let mut _84: isize;<br align="left"/>let mut _85: isize;<br align="left"/>debug __program_id =&gt; _1;<br align="left"/>debug __accounts =&gt; _2;<br align="left"/>debug __ix_data =&gt; _3;<br align="left"/>debug ix =&gt; _7;<br align="left"/>debug residual =&gt; _19;<br align="left"/>debug val =&gt; _22;<br align="left"/>debug side =&gt; _23;<br align="left"/>debug price_lots =&gt; _24;<br align="left"/>debug max_base_lots =&gt; _25;<br align="left"/>debug max_quote_lots_including_fees =&gt; _26;<br align="left"/>debug client_order_id =&gt; _27;<br align="left"/>debug order_type =&gt; _28;<br align="left"/>debug expiry_timestamp =&gt; _29;<br align="left"/>debug self_trade_behavior =&gt; _30;<br align="left"/>debug limit =&gt; _31;<br align="left"/>debug __bumps =&gt; _32;<br align="left"/>debug __reallocs =&gt; _33;<br align="left"/>debug __remaining_accounts =&gt; _34;<br align="left"/>debug __accounts =&gt; _35;<br align="left"/>debug residual =&gt; _47;<br align="left"/>debug val =&gt; _50;<br align="left"/>debug result =&gt; _51;<br align="left"/>debug residual =&gt; _70;<br align="left"/>debug val =&gt; _73;<br align="left"/>>;
    bb0__0_1162 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = const &quot;Instruction: PlaceOrder&quot;<br/>_5 = &amp;(*_6)<br/></td></tr><tr><td align="left">_4 = anchor_lang::solana_program::log::sol_log(move _5)</td></tr></table>>];
    bb1__0_1162 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageDead(_6)<br/>StorageDead(_4)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = &amp;(*_3)<br/>StorageLive(_16)<br/>_16 = RangeFull<br/></td></tr><tr><td align="left">_14 = &lt;[u8] as Index&lt;RangeFull&gt;&gt;::index(move _15, move _16)</td></tr></table>>];
    bb2__0_1162 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_15)<br/>_13 = &amp;(*_14)<br/>_12 = &amp;mut _13<br/>_11 = &amp;mut (*_12)<br/></td></tr><tr><td align="left">_10 = &lt;instruction::PlaceOrder as anchor_lang::AnchorDeserialize&gt;::deserialize(move _11)</td></tr></table>>];
    bb3__0_1162 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageLive(_17)<br/>_17 = {closure@programs/openbook_v2/src/lib.rs:19:1: 19:11}<br/></td></tr><tr><td align="left">_9 = std::result::Result::&lt;instruction::PlaceOrder, std::io::Error&gt;::map_err::&lt;ErrorCode, {closure@programs/openbook_v2/src/lib.rs:19:1: 19:11}&gt;(move _10, move _17)</td></tr></table>>];
    bb4__0_1162 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">_8 = &lt;std::result::Result&lt;instruction::PlaceOrder, ErrorCode&gt; as Try&gt;::branch(move _9)</td></tr></table>>];
    bb5__0_1162 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>_18 = discriminant(_8)<br/></td></tr><tr><td align="left">switchInt(move _18)</td></tr></table>>];
    bb6__0_1162 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_22)<br/>_22 = move ((_8 as Continue).0: instruction::PlaceOrder)<br/>_7 = move _22<br/>StorageDead(_22)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_8)<br/>StorageLive(_23)<br/>_23 = move (_7.0: account::Side)<br/>StorageLive(_24)<br/>_24 = (_7.1: i64)<br/>StorageLive(_25)<br/>_25 = (_7.2: i64)<br/>StorageLive(_26)<br/>_26 = (_7.3: i64)<br/>StorageLive(_27)<br/>_27 = (_7.4: u64)<br/>StorageLive(_28)<br/>_28 = move (_7.5: account::PlaceOrderType)<br/>StorageLive(_29)<br/>_29 = (_7.6: u64)<br/>StorageLive(_30)<br/>_30 = move (_7.7: account::SelfTradeBehavior)<br/>StorageLive(_31)<br/>_31 = (_7.8: u8)<br/>StorageLive(_32)<br/></td></tr><tr><td align="left">_32 = &lt;PlaceOrderBumps as Default&gt;::default()</td></tr></table>>];
    bb7__0_1162 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb8__0_1162 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_19)<br/>_19 = ((_8 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::ErrorCode&gt;)<br/>StorageLive(_21)<br/>_21 = _19<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, ErrorCode&gt;&gt;&gt;::from_residual(move _21)</td></tr></table>>];
    bb9__0_1162 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_19)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_1162 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_33)<br/></td></tr><tr><td align="left">_33 = BTreeSet::&lt;anchor_lang::prelude::Pubkey&gt;::new()</td></tr></table>>];
    bb11__0_1162 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_34)<br/>_34 = &amp;(*_2)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>_38 = &amp;(*_1)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_40 = &amp;mut _34<br/>_39 = &amp;mut (*_40)<br/>StorageLive(_41)<br/>_41 = &amp;(*_3)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>_43 = &amp;mut _32<br/>_42 = &amp;mut (*_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>_45 = &amp;mut _33<br/>_44 = &amp;mut (*_45)<br/></td></tr><tr><td align="left">_37 = &lt;context::PlaceOrder&lt;'_&gt; as anchor_lang::Accounts&lt;'_, PlaceOrderBumps&gt;&gt;::try_accounts(move _38, move _39, move _41, move _42, move _44)</td></tr></table>>];
    bb12__0_1162 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_42)<br/>StorageDead(_41)<br/>StorageDead(_39)<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">_36 = &lt;std::result::Result&lt;context::PlaceOrder&lt;'_&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _37)</td></tr></table>>];
    bb13__0_1162 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>_46 = discriminant(_36)<br/></td></tr><tr><td align="left">switchInt(move _46)</td></tr></table>>];
    bb14__0_1162 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_50)<br/>_50 = move ((_36 as Continue).0: context::PlaceOrder&lt;'_&gt;)<br/>_35 = move _50<br/>StorageDead(_50)<br/>_76 = discriminant(_36)<br/>StorageDead(_45)<br/>StorageDead(_43)<br/>StorageDead(_40)<br/>StorageDead(_36)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>_55 = &amp;(*_1)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>_57 = &amp;mut _35<br/>_56 = &amp;mut (*_57)<br/>StorageLive(_58)<br/>_58 = &amp;(*_34)<br/>StorageLive(_59)<br/>_59 = move _32<br/></td></tr><tr><td align="left">_54 = anchor_lang::context::Context::&lt;'_, '_, '_, '_, context::PlaceOrder&lt;'_&gt;&gt;::new(move _55, move _56, move _58, move _59)</td></tr></table>>];
    bb15__0_1162 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>_47 = move ((_36 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_49)<br/>_49 = move _47<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _49)</td></tr></table>>];
    bb16__0_1162 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_47)<br/>_82 = discriminant(_36)<br/>StorageDead(_45)<br/>StorageDead(_43)<br/>StorageDead(_40)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_1162 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_58)<br/>StorageDead(_56)<br/>StorageDead(_55)<br/>StorageLive(_60)<br/>_60 = move _23<br/>StorageLive(_61)<br/>_61 = _24<br/>StorageLive(_62)<br/>_62 = _25<br/>StorageLive(_63)<br/>_63 = _26<br/>StorageLive(_64)<br/>_64 = _27<br/>StorageLive(_65)<br/>_65 = move _28<br/>StorageLive(_66)<br/>_66 = _29<br/>StorageLive(_67)<br/>_67 = move _30<br/>StorageLive(_68)<br/>_68 = _31<br/></td></tr><tr><td align="left">_53 = openbook_v2::place_order(move _54, move _60, move _61, move _62, move _63, move _64, move _65, move _66, move _67, move _68)</td></tr></table>>];
    bb18__0_1162 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>StorageDead(_67)<br/>StorageDead(_66)<br/>StorageDead(_65)<br/>StorageDead(_64)<br/>StorageDead(_63)<br/>StorageDead(_62)<br/>StorageDead(_61)<br/>StorageDead(_60)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">_52 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _53)</td></tr></table>>];
    bb19__0_1162 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>_69 = discriminant(_52)<br/></td></tr><tr><td align="left">switchInt(move _69)</td></tr></table>>];
    bb20__0_1162 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_73)<br/>_73 = ((_52 as Continue).0: ())<br/>_51 = _73<br/>StorageDead(_73)<br/>_78 = discriminant(_52)<br/>StorageDead(_57)<br/>StorageDead(_52)<br/>StorageLive(_74)<br/>_74 = &amp;_35<br/>StorageLive(_75)<br/>_75 = &amp;(*_1)<br/></td></tr><tr><td align="left">_0 = &lt;context::PlaceOrder&lt;'_&gt; as anchor_lang::AccountsExit&lt;'_&gt;&gt;::exit(move _74, move _75)</td></tr></table>>];
    bb21__0_1162 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_70)<br/>_70 = move ((_52 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_72)<br/>_72 = move _70<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _72)</td></tr></table>>];
    bb22__0_1162 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_70)<br/>_80 = discriminant(_52)<br/>StorageDead(_57)<br/>StorageDead(_52)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_1162 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_74)<br/>StorageDead(_51)<br/>StorageDead(_35)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">drop(_33)</td></tr></table>>];
    bb24__0_1162 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/>StorageDead(_29)<br/>StorageDead(_28)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_1162 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">drop(_33)</td></tr></table>>];
    bb26__0_1162 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/>StorageDead(_29)<br/>StorageDead(_28)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_1162 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_1162 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left">return</td></tr></table>>];
    bb29__0_1162 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">29 (cleanup)</td></tr><tr><td align="left">drop(_33)</td></tr></table>>];
    bb30__0_1162 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">30 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb31__0_1162 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">31 (cleanup)</td></tr><tr><td align="left" balign="left">_84 = discriminant(_52)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_1162 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">32 (cleanup)</td></tr><tr><td align="left" balign="left">_85 = discriminant(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_1162 -> bb1__0_1162 [label="return"];
    bb1__0_1162 -> bb2__0_1162 [label="return"];
    bb2__0_1162 -> bb3__0_1162 [label="return"];
    bb3__0_1162 -> bb4__0_1162 [label="return"];
    bb3__0_1162 -> bb30__0_1162 [label="unwind"];
    bb4__0_1162 -> bb5__0_1162 [label="return"];
    bb5__0_1162 -> bb6__0_1162 [label="0"];
    bb5__0_1162 -> bb8__0_1162 [label="1"];
    bb5__0_1162 -> bb7__0_1162 [label="otherwise"];
    bb6__0_1162 -> bb10__0_1162 [label="return"];
    bb8__0_1162 -> bb9__0_1162 [label="return"];
    bb9__0_1162 -> bb27__0_1162 [label=""];
    bb10__0_1162 -> bb11__0_1162 [label="return"];
    bb11__0_1162 -> bb12__0_1162 [label="return"];
    bb11__0_1162 -> bb29__0_1162 [label="unwind"];
    bb12__0_1162 -> bb13__0_1162 [label="return"];
    bb12__0_1162 -> bb29__0_1162 [label="unwind"];
    bb13__0_1162 -> bb14__0_1162 [label="0"];
    bb13__0_1162 -> bb15__0_1162 [label="1"];
    bb13__0_1162 -> bb7__0_1162 [label="otherwise"];
    bb14__0_1162 -> bb17__0_1162 [label="return"];
    bb14__0_1162 -> bb29__0_1162 [label="unwind"];
    bb15__0_1162 -> bb16__0_1162 [label="return"];
    bb15__0_1162 -> bb32__0_1162 [label="unwind"];
    bb16__0_1162 -> bb25__0_1162 [label=""];
    bb17__0_1162 -> bb18__0_1162 [label="return"];
    bb17__0_1162 -> bb29__0_1162 [label="unwind"];
    bb18__0_1162 -> bb19__0_1162 [label="return"];
    bb18__0_1162 -> bb29__0_1162 [label="unwind"];
    bb19__0_1162 -> bb20__0_1162 [label="0"];
    bb19__0_1162 -> bb21__0_1162 [label="1"];
    bb19__0_1162 -> bb7__0_1162 [label="otherwise"];
    bb20__0_1162 -> bb23__0_1162 [label="return"];
    bb20__0_1162 -> bb29__0_1162 [label="unwind"];
    bb21__0_1162 -> bb22__0_1162 [label="return"];
    bb21__0_1162 -> bb31__0_1162 [label="unwind"];
    bb22__0_1162 -> bb25__0_1162 [label=""];
    bb23__0_1162 -> bb24__0_1162 [label="return"];
    bb23__0_1162 -> bb30__0_1162 [label="unwind"];
    bb24__0_1162 -> bb28__0_1162 [label=""];
    bb25__0_1162 -> bb26__0_1162 [label="return"];
    bb25__0_1162 -> bb30__0_1162 [label="unwind"];
    bb26__0_1162 -> bb27__0_1162 [label=""];
    bb27__0_1162 -> bb28__0_1162 [label=""];
    bb29__0_1162 -> bb30__0_1162 [label="return"];
    bb31__0_1162 -> bb29__0_1162 [label=""];
    bb32__0_1162 -> bb29__0_1162 [label=""];
}
