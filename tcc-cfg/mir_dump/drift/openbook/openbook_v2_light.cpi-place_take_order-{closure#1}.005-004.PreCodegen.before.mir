// MIR for `cpi::place_take_order::{closure#1}` before PreCodegen

fn cpi::place_take_order::{closure#1}(_1: {closure@programs/openbook_v2/src/lib.rs:19:1: 19:11}, _2: anchor_lang::prelude::ProgramError) -> std::result::Result<(), anchor_lang::error::Error> {
    debug e => _2;
    let mut _0: std::result::Result<(), anchor_lang::error::Error>;
    let mut _3: anchor_lang::error::Error;
    let mut _4: anchor_lang::prelude::ProgramError;

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        _4 = move _2;
        _3 = <anchor_lang::prelude::ProgramError as Into<anchor_lang::error::Error>>::into(move _4) -> [return: bb1, unwind: bb2];
    }

    bb1: {
        StorageDead(_4);
        _0 = std::result::Result::<(), anchor_lang::error::Error>::Err(move _3);
        StorageDead(_3);
        return;
    }

    bb2 (cleanup): {
        resume;
    }
}
