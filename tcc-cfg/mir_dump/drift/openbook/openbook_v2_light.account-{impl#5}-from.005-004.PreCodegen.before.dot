digraph Mir_0_32 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;NonZeroPubkeyOption as From&lt;Option&lt;anchor_lang::prelude::Pubkey&gt;&gt;&gt;::from(_1: std::option::Option&lt;anchor_lang::prelude::Pubkey&gt;) -&gt; account::NonZeroPubkeyOption<br align="left"/>let mut _2: isize;<br align="left"/>let _3: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _4: anchor_lang::prelude::Pubkey;<br align="left"/>debug normal_option =&gt; _1;<br align="left"/>debug key =&gt; _3;<br align="left"/>>;
    bb0__0_32 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_2 = discriminant(_1)<br/></td></tr><tr><td align="left">switchInt(move _2)</td></tr></table>>];
    bb1__0_32 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">_0 = &lt;NonZeroPubkeyOption as Zeroable&gt;::zeroed()</td></tr></table>>];
    bb2__0_32 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb3__0_32 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>_3 = ((_1 as Some).0: anchor_lang::prelude::Pubkey)<br/>StorageLive(_4)<br/>_4 = _3<br/>_0 = NonZeroPubkeyOption { key: move _4 }<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb4__0_32 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_32 -> bb1__0_32 [label="0"];
    bb0__0_32 -> bb3__0_32 [label="1"];
    bb0__0_32 -> bb2__0_32 [label="otherwise"];
    bb1__0_32 -> bb4__0_32 [label="return"];
    bb3__0_32 -> bb4__0_32 [label=""];
}
