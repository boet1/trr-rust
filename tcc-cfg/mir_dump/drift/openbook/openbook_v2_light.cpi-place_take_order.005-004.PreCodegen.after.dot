digraph Mir_0_1223 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn cpi::place_take_order(_1: anchor_lang::context::CpiContext&lt;ReErased, ReErased, ReErased, ReErased, context::__cpi_client_accounts_place_take_order::PlaceTakeOrder&lt;ReErased&gt;&gt;, _2: account::Side, _3: i64, _4: i64, _5: i64, _6: account::PlaceOrderType, _7: u8) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _8: anchor_lang::solana_program::instruction::Instruction;<br align="left"/>let _9: instruction::PlaceTakeOrder;<br align="left"/>let mut _10: account::Side;<br align="left"/>let mut _11: i64;<br align="left"/>let mut _12: i64;<br align="left"/>let mut _13: i64;<br align="left"/>let mut _14: account::PlaceOrderType;<br align="left"/>let mut _15: u8;<br align="left"/>let mut _16: std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _17: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::ErrorCode&gt;, std::vec::Vec&lt;u8, std::alloc::Global&gt;&gt;;<br align="left"/>let mut _18: std::result::Result&lt;std::vec::Vec&lt;u8, std::alloc::Global&gt;, anchor_lang::error::ErrorCode&gt;;<br align="left"/>let mut _19: std::result::Result&lt;std::vec::Vec&lt;u8, std::alloc::Global&gt;, std::io::Error&gt;;<br align="left"/>let mut _20: &amp;ReErased instruction::PlaceTakeOrder;<br align="left"/>let _21: &amp;ReErased instruction::PlaceTakeOrder;<br align="left"/>let mut _22: Closure(DefId(0:1228 ~ openbook_v2_light[d815]::cpi::place_take_order::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((std::io::Error,)) -&gt; anchor_lang::error::ErrorCode, []), ()]);<br align="left"/>let mut _23: isize;<br align="left"/>let _24: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::ErrorCode&gt;;<br align="left"/>let mut _25: !;<br align="left"/>let mut _26: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::ErrorCode&gt;;<br align="left"/>let _27: std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _28: std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _29: &amp;ReErased [u8];<br align="left"/>let mut _30: &amp;ReErased [u8; 8_usize];<br align="left"/>let _31: [u8; 8_usize];<br align="left"/>let _32: ();<br align="left"/>let mut _33: &amp;ReErased mut std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _34: &amp;ReErased mut std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _35: &amp;ReErased mut std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _36: std::vec::Vec&lt;anchor_lang::prelude::AccountMeta, std::alloc::Global&gt;;<br align="left"/>let mut _37: &amp;ReErased anchor_lang::context::CpiContext&lt;ReErased, ReErased, ReErased, ReErased, context::__cpi_client_accounts_place_take_order::PlaceTakeOrder&lt;ReErased&gt;&gt;;<br align="left"/>let mut _38: std::option::Option&lt;bool&gt;;<br align="left"/>let mut _39: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _40: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _41: std::vec::Vec&lt;anchor_lang::prelude::AccountMeta, std::alloc::Global&gt;;<br align="left"/>let mut _42: std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _43: std::vec::Vec&lt;anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _44: &amp;ReErased anchor_lang::context::CpiContext&lt;ReErased, ReErased, ReErased, ReErased, context::__cpi_client_accounts_place_take_order::PlaceTakeOrder&lt;ReErased&gt;&gt;;<br align="left"/>let mut _45: std::result::Result&lt;(), anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _46: &amp;ReErased anchor_lang::solana_program::instruction::Instruction;<br align="left"/>let _47: &amp;ReErased anchor_lang::solana_program::instruction::Instruction;<br align="left"/>let mut _48: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let _49: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _50: &amp;ReErased std::vec::Vec&lt;anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, std::alloc::Global&gt;;<br align="left"/>let _51: &amp;ReErased std::vec::Vec&lt;anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _52: &amp;ReErased [&amp;ReErased [&amp;ReErased [u8]]];<br align="left"/>let mut _53: Closure(DefId(0:1229 ~ openbook_v2_light[d815]::cpi::place_take_order::{closure#1}), [i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::prelude::ProgramError,)) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;, []), ()]);<br align="left"/>let mut _54: Closure(DefId(0:1230 ~ openbook_v2_light[d815]::cpi::place_take_order::{closure#2}), [i32, Binder(extern &quot;RustCall&quot; fn(((),)) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;, []), ()]);<br align="left"/>let mut _55: &amp;ReErased [u8; 8_usize];<br align="left"/>let mut _56: &amp;ReErased [&amp;ReErased [&amp;ReErased [u8]]];<br align="left"/>let mut _57: isize;<br align="left"/>let mut _58: isize;<br align="left"/>let mut _59: isize;<br align="left"/>let mut _60: isize;<br align="left"/>let mut _61: isize;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug side =&gt; _2;<br align="left"/>debug price_lots =&gt; _3;<br align="left"/>debug max_base_lots =&gt; _4;<br align="left"/>debug max_quote_lots_including_fees =&gt; _5;<br align="left"/>debug order_type =&gt; _6;<br align="left"/>debug limit =&gt; _7;<br align="left"/>debug ix =&gt; _8;<br align="left"/>debug ix =&gt; _9;<br align="left"/>debug ix_data =&gt; _16;<br align="left"/>debug residual =&gt; _24;<br align="left"/>debug val =&gt; _27;<br align="left"/>debug data =&gt; _28;<br align="left"/>debug accounts =&gt; _36;<br align="left"/>debug acc_infos =&gt; _43;<br align="left"/>>;
    bb0__0_1223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = move _2<br/>StorageLive(_11)<br/>_11 = _3<br/>StorageLive(_12)<br/>_12 = _4<br/>StorageLive(_13)<br/>_13 = _5<br/>StorageLive(_14)<br/>_14 = move _6<br/>StorageLive(_15)<br/>_15 = _7<br/>_9 = instruction::PlaceTakeOrder { side: move _10, price_lots: move _11, max_base_lots: move _12, max_quote_lots_including_fees: move _13, order_type: move _14, limit: move _15 }<br/>StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_10)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_21 = &amp;_9<br/>_20 = &amp;(*_21)<br/></td></tr><tr><td align="left">_19 = &lt;instruction::PlaceTakeOrder as anchor_lang::AnchorSerialize&gt;::try_to_vec(move _20)</td></tr></table>>];
    bb1__0_1223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageLive(_22)<br/>_22 = {closure@programs/openbook_v2/src/lib.rs:19:1: 19:11}<br/></td></tr><tr><td align="left">_18 = std::result::Result::&lt;Vec&lt;u8&gt;, std::io::Error&gt;::map_err::&lt;ErrorCode, {closure@programs/openbook_v2/src/lib.rs:19:1: 19:11}&gt;(move _19, move _22)</td></tr></table>>];
    bb2__0_1223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">_17 = &lt;std::result::Result&lt;Vec&lt;u8&gt;, ErrorCode&gt; as Try&gt;::branch(move _18)</td></tr></table>>];
    bb3__0_1223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>_23 = discriminant(_17)<br/></td></tr><tr><td align="left">switchInt(move _23)</td></tr></table>>];
    bb4__0_1223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_27)<br/>_27 = move ((_17 as Continue).0: std::vec::Vec&lt;u8&gt;)<br/>_16 = move _27<br/>StorageDead(_27)<br/>_59 = discriminant(_17)<br/>StorageDead(_21)<br/>StorageDead(_17)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>_55 = const _<br/>_30 = &amp;(*_55)<br/>_29 = move _30 as &amp;[u8] (PointerCoercion(Unsize))<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">_28 = std::slice::&lt;impl [u8]&gt;::to_vec(move _29)</td></tr></table>>];
    bb5__0_1223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_1223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_24)<br/>_24 = ((_17 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::ErrorCode&gt;)<br/>StorageLive(_26)<br/>_26 = _24<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, ErrorCode&gt;&gt;&gt;::from_residual(move _26)</td></tr></table>>];
    bb7__0_1223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_24)<br/>_57 = discriminant(_17)<br/>StorageDead(_21)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">drop(_1)</td></tr></table>>];
    bb8__0_1223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>_33 = &amp;mut _28<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>_35 = &amp;mut _16<br/>_34 = &amp;mut (*_35)<br/></td></tr><tr><td align="left">_32 = Vec::&lt;u8&gt;::append(move _33, move _34)</td></tr></table>>];
    bb9__0_1223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_33)<br/>StorageDead(_35)<br/>StorageDead(_32)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>_37 = &amp;_1<br/>StorageLive(_38)<br/>_38 = Option::&lt;bool&gt;::None<br/></td></tr><tr><td align="left">_36 = &lt;CpiContext&lt;'_, '_, '_, '_, context::__cpi_client_accounts_place_take_order::PlaceTakeOrder&lt;'_&gt;&gt; as anchor_lang::ToAccountMetas&gt;::to_account_metas(move _37, move _38)</td></tr></table>>];
    bb10__0_1223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_37)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_40 = &amp;(_1.2: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/></td></tr><tr><td align="left">_39 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::Key&gt;::key(move _40)</td></tr></table>>];
    bb11__0_1223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageLive(_41)<br/>_41 = move _36<br/>StorageLive(_42)<br/>_42 = move _28<br/>_8 = Instruction { program_id: move _39, accounts: move _41, data: move _42 }<br/>StorageDead(_42)<br/>StorageDead(_41)<br/>StorageDead(_39)<br/>StorageDead(_36)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">drop(_16)</td></tr></table>>];
    bb12__0_1223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_9)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>_44 = &amp;_1<br/></td></tr><tr><td align="left">_43 = &lt;CpiContext&lt;'_, '_, '_, '_, context::__cpi_client_accounts_place_take_order::PlaceTakeOrder&lt;'_&gt;&gt; as anchor_lang::ToAccountInfos&lt;'_&gt;&gt;::to_account_infos(move _44)</td></tr></table>>];
    bb13__0_1223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>_47 = &amp;_8<br/>_46 = &amp;(*_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>_51 = &amp;_43<br/>_50 = &amp;(*_51)<br/></td></tr><tr><td align="left">_49 = &lt;Vec&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as Deref&gt;::deref(move _50)</td></tr></table>>];
    bb14__0_1223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">_48 = &amp;(*_49)<br/>StorageDead(_50)<br/>StorageLive(_52)<br/>_56 = deref_copy (_1.3: &amp;[&amp;[&amp;[u8]]])<br/>_52 = &amp;(*_56)<br/></td></tr><tr><td align="left">_45 = invoke_signed(move _46, move _48, move _52)</td></tr></table>>];
    bb15__0_1223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_48)<br/>StorageDead(_46)<br/>StorageLive(_53)<br/>_53 = {closure@programs/openbook_v2/src/lib.rs:19:1: 19:11}<br/>StorageLive(_54)<br/>_54 = {closure@programs/openbook_v2/src/lib.rs:19:1: 19:11}<br/></td></tr><tr><td align="left">_0 = std::result::Result::&lt;(), anchor_lang::prelude::ProgramError&gt;::map_or_else::&lt;std::result::Result&lt;(), anchor_lang::error::Error&gt;, {closure@programs/openbook_v2/src/lib.rs:19:1: 19:11}, {closure@programs/openbook_v2/src/lib.rs:19:1: 19:11}&gt;(move _45, move _53, move _54)</td></tr></table>>];
    bb16__0_1223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_53)<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">drop(_43)</td></tr></table>>];
    bb17__0_1223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/></td></tr><tr><td align="left">drop(_8)</td></tr></table>>];
    bb18__0_1223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_51)<br/>StorageDead(_49)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">drop(_1)</td></tr></table>>];
    bb19__0_1223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left">return</td></tr></table>>];
    bb20__0_1223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">20 (cleanup)</td></tr><tr><td align="left">drop(_43)</td></tr></table>>];
    bb21__0_1223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">21 (cleanup)</td></tr><tr><td align="left">drop(_8)</td></tr></table>>];
    bb22__0_1223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">22 (cleanup)</td></tr><tr><td align="left">drop(_36)</td></tr></table>>];
    bb23__0_1223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">23 (cleanup)</td></tr><tr><td align="left">drop(_28)</td></tr></table>>];
    bb24__0_1223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">24 (cleanup)</td></tr><tr><td align="left">drop(_16)</td></tr></table>>];
    bb25__0_1223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">25 (cleanup)</td></tr><tr><td align="left">drop(_1)</td></tr></table>>];
    bb26__0_1223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">26 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb27__0_1223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">27 (cleanup)</td></tr><tr><td align="left" balign="left">_61 = discriminant(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_1223 -> bb1__0_1223 [label="return"];
    bb0__0_1223 -> bb25__0_1223 [label="unwind"];
    bb1__0_1223 -> bb2__0_1223 [label="return"];
    bb1__0_1223 -> bb25__0_1223 [label="unwind"];
    bb2__0_1223 -> bb3__0_1223 [label="return"];
    bb2__0_1223 -> bb25__0_1223 [label="unwind"];
    bb3__0_1223 -> bb4__0_1223 [label="0"];
    bb3__0_1223 -> bb6__0_1223 [label="1"];
    bb3__0_1223 -> bb5__0_1223 [label="otherwise"];
    bb4__0_1223 -> bb8__0_1223 [label="return"];
    bb4__0_1223 -> bb24__0_1223 [label="unwind"];
    bb6__0_1223 -> bb7__0_1223 [label="return"];
    bb6__0_1223 -> bb27__0_1223 [label="unwind"];
    bb7__0_1223 -> bb19__0_1223 [label="return"];
    bb7__0_1223 -> bb26__0_1223 [label="unwind"];
    bb8__0_1223 -> bb9__0_1223 [label="return"];
    bb8__0_1223 -> bb23__0_1223 [label="unwind"];
    bb9__0_1223 -> bb10__0_1223 [label="return"];
    bb9__0_1223 -> bb23__0_1223 [label="unwind"];
    bb10__0_1223 -> bb11__0_1223 [label="return"];
    bb10__0_1223 -> bb22__0_1223 [label="unwind"];
    bb11__0_1223 -> bb12__0_1223 [label="return"];
    bb11__0_1223 -> bb25__0_1223 [label="unwind"];
    bb12__0_1223 -> bb13__0_1223 [label="return"];
    bb12__0_1223 -> bb21__0_1223 [label="unwind"];
    bb13__0_1223 -> bb14__0_1223 [label="return"];
    bb13__0_1223 -> bb20__0_1223 [label="unwind"];
    bb14__0_1223 -> bb15__0_1223 [label="return"];
    bb14__0_1223 -> bb20__0_1223 [label="unwind"];
    bb15__0_1223 -> bb16__0_1223 [label="return"];
    bb15__0_1223 -> bb20__0_1223 [label="unwind"];
    bb16__0_1223 -> bb17__0_1223 [label="return"];
    bb16__0_1223 -> bb21__0_1223 [label="unwind"];
    bb17__0_1223 -> bb18__0_1223 [label="return"];
    bb17__0_1223 -> bb25__0_1223 [label="unwind"];
    bb18__0_1223 -> bb19__0_1223 [label="return"];
    bb18__0_1223 -> bb26__0_1223 [label="unwind"];
    bb20__0_1223 -> bb21__0_1223 [label="return"];
    bb21__0_1223 -> bb25__0_1223 [label="return"];
    bb22__0_1223 -> bb23__0_1223 [label="return"];
    bb23__0_1223 -> bb24__0_1223 [label="return"];
    bb24__0_1223 -> bb25__0_1223 [label="return"];
    bb25__0_1223 -> bb26__0_1223 [label="return"];
    bb27__0_1223 -> bb25__0_1223 [label=""];
}
