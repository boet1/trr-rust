// MIR for `context::<impl at programs/openbook_v2/src/context.rs:3:10: 3:18>::to_account_metas` before PreCodegen

fn context::<impl at programs/openbook_v2/src/context.rs:3:10: 3:18>::to_account_metas(_1: &context::PlaceTakeOrder<'_>, _2: Option<bool>) -> Vec<AccountMeta> {
    debug self => _1;
    debug is_signer => _2;
    let mut _0: std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _3: std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let _4: ();
    let mut _5: &mut std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _6: std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _7: &anchor_lang::prelude::Signer<'_>;
    let mut _8: std::option::Option<bool>;
    scope 1 {
        debug account_metas => _3;
    }

    bb0: {
        StorageLive(_3);
        _3 = Vec::<AccountMeta>::new() -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageLive(_4);
        StorageLive(_5);
        _5 = &mut _3;
        StorageLive(_6);
        StorageLive(_7);
        _7 = &((*_1).0: anchor_lang::prelude::Signer<'_>);
        StorageLive(_8);
        _8 = Option::<bool>::None;
        _6 = <anchor_lang::prelude::Signer<'_> as anchor_lang::ToAccountMetas>::to_account_metas(move _7, move _8) -> [return: bb2, unwind: bb4];
    }

    bb2: {
        StorageDead(_8);
        StorageDead(_7);
        _4 = <Vec<AccountMeta> as Extend<AccountMeta>>::extend::<Vec<AccountMeta>>(move _5, move _6) -> [return: bb3, unwind: bb4];
    }

    bb3: {
        StorageDead(_6);
        StorageDead(_5);
        StorageDead(_4);
        _0 = move _3;
        StorageDead(_3);
        return;
    }

    bb4 (cleanup): {
        drop(_3) -> [return: bb5, unwind terminate(cleanup)];
    }

    bb5 (cleanup): {
        resume;
    }
}
