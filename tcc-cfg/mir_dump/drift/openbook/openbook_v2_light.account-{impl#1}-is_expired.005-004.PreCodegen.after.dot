digraph Mir_0_20 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn LeafNode::is_expired(_1: &amp;ReErased account::LeafNode, _2: u64) -&gt; bool<br align="left"/>let mut _3: bool;<br align="left"/>let mut _4: u16;<br align="left"/>let mut _5: u64;<br align="left"/>let mut _6: u64;<br align="left"/>let mut _7: u64;<br align="left"/>let mut _8: u64;<br align="left"/>let mut _9: u16;<br align="left"/>let mut _10: (u64, bool);<br align="left"/>debug self =&gt; _1;<br align="left"/>debug now_ts =&gt; _2;<br align="left"/>>;
    bb0__0_20 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>_4 = ((*_1).2: u16)<br/>_3 = Gt(move _4, const 0_u16)<br/></td></tr><tr><td align="left">switchInt(move _3)</td></tr></table>>];
    bb1__0_20 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageLive(_5)<br/>_5 = _2<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = ((*_1).7: u64)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = ((*_1).2: u16)<br/>_8 = move _9 as u64 (IntToInt)<br/>StorageDead(_9)<br/>_10 = CheckedAdd(_7, _8)<br/></td></tr><tr><td align="left">assert(!move (_10.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, move _7, move _8)</td></tr></table>>];
    bb2__0_20 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>_0 = const false<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb3__0_20 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">_6 = move (_10.0: u64)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/>_0 = Ge(move _5, move _6)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb4__0_20 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_20 -> bb2__0_20 [label="0"];
    bb0__0_20 -> bb1__0_20 [label="otherwise"];
    bb1__0_20 -> bb3__0_20 [label="success"];
    bb2__0_20 -> bb4__0_20 [label=""];
    bb3__0_20 -> bb4__0_20 [label=""];
}
