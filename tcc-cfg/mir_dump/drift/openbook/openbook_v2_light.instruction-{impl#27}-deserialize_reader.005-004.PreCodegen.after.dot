digraph Mir_0_1341 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;instruction::CreateMarket as anchor_lang::AnchorDeserialize&gt;::deserialize_reader(_1: &amp;ReErased mut R/#0) -&gt; std::result::Result&lt;instruction::CreateMarket, std::io::Error&gt;<br align="left"/>let mut _2: instruction::CreateMarket;<br align="left"/>let mut _3: std::string::String;<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, std::string::String&gt;;<br align="left"/>let mut _5: std::result::Result&lt;std::string::String, std::io::Error&gt;;<br align="left"/>let mut _6: &amp;ReErased mut R/#0;<br align="left"/>let mut _7: isize;<br align="left"/>let _8: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _9: !;<br align="left"/>let mut _10: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _11: std::string::String;<br align="left"/>let mut _12: account::OracleConfigParams;<br align="left"/>let mut _13: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, account::OracleConfigParams&gt;;<br align="left"/>let mut _14: std::result::Result&lt;account::OracleConfigParams, std::io::Error&gt;;<br align="left"/>let mut _15: &amp;ReErased mut R/#0;<br align="left"/>let mut _16: isize;<br align="left"/>let _17: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _18: !;<br align="left"/>let mut _19: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _20: account::OracleConfigParams;<br align="left"/>let mut _21: i64;<br align="left"/>let mut _22: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, i64&gt;;<br align="left"/>let mut _23: std::result::Result&lt;i64, std::io::Error&gt;;<br align="left"/>let mut _24: &amp;ReErased mut R/#0;<br align="left"/>let mut _25: isize;<br align="left"/>let _26: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _27: !;<br align="left"/>let mut _28: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _29: i64;<br align="left"/>let mut _30: i64;<br align="left"/>let mut _31: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, i64&gt;;<br align="left"/>let mut _32: std::result::Result&lt;i64, std::io::Error&gt;;<br align="left"/>let mut _33: &amp;ReErased mut R/#0;<br align="left"/>let mut _34: isize;<br align="left"/>let _35: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _36: !;<br align="left"/>let mut _37: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _38: i64;<br align="left"/>let mut _39: i64;<br align="left"/>let mut _40: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, i64&gt;;<br align="left"/>let mut _41: std::result::Result&lt;i64, std::io::Error&gt;;<br align="left"/>let mut _42: &amp;ReErased mut R/#0;<br align="left"/>let mut _43: isize;<br align="left"/>let _44: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _45: !;<br align="left"/>let mut _46: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _47: i64;<br align="left"/>let mut _48: i64;<br align="left"/>let mut _49: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, i64&gt;;<br align="left"/>let mut _50: std::result::Result&lt;i64, std::io::Error&gt;;<br align="left"/>let mut _51: &amp;ReErased mut R/#0;<br align="left"/>let mut _52: isize;<br align="left"/>let _53: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _54: !;<br align="left"/>let mut _55: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _56: i64;<br align="left"/>let mut _57: i64;<br align="left"/>let mut _58: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, i64&gt;;<br align="left"/>let mut _59: std::result::Result&lt;i64, std::io::Error&gt;;<br align="left"/>let mut _60: &amp;ReErased mut R/#0;<br align="left"/>let mut _61: isize;<br align="left"/>let _62: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _63: !;<br align="left"/>let mut _64: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _65: i64;<br align="left"/>let mut _66: bool;<br align="left"/>let mut _67: bool;<br align="left"/>let mut _68: bool;<br align="left"/>let mut _69: bool;<br align="left"/>let mut _70: bool;<br align="left"/>let mut _71: bool;<br align="left"/>let mut _72: bool;<br align="left"/>let mut _73: isize;<br align="left"/>let mut _74: isize;<br align="left"/>let mut _75: isize;<br align="left"/>let mut _76: isize;<br align="left"/>let mut _77: isize;<br align="left"/>let mut _78: isize;<br align="left"/>let mut _79: isize;<br align="left"/>let mut _80: isize;<br align="left"/>let mut _81: isize;<br align="left"/>let mut _82: isize;<br align="left"/>let mut _83: isize;<br align="left"/>let mut _84: isize;<br align="left"/>let mut _85: isize;<br align="left"/>let mut _86: isize;<br align="left"/>let mut _87: isize;<br align="left"/>let mut _88: isize;<br align="left"/>let mut _89: isize;<br align="left"/>let mut _90: isize;<br align="left"/>let mut _91: isize;<br align="left"/>let mut _92: isize;<br align="left"/>let mut _93: isize;<br align="left"/>let mut _94: isize;<br align="left"/>let mut _95: isize;<br align="left"/>let mut _96: isize;<br align="left"/>let mut _97: isize;<br align="left"/>let mut _98: isize;<br align="left"/>let mut _99: isize;<br align="left"/>let mut _100: isize;<br align="left"/>let mut _101: isize;<br align="left"/>let mut _102: isize;<br align="left"/>let mut _103: isize;<br align="left"/>let mut _104: isize;<br align="left"/>let mut _105: isize;<br align="left"/>let mut _106: isize;<br align="left"/>let mut _107: isize;<br align="left"/>debug reader =&gt; _1;<br align="left"/>debug residual =&gt; _8;<br align="left"/>debug val =&gt; _11;<br align="left"/>debug residual =&gt; _17;<br align="left"/>debug val =&gt; _20;<br align="left"/>debug residual =&gt; _26;<br align="left"/>debug val =&gt; _29;<br align="left"/>debug residual =&gt; _35;<br align="left"/>debug val =&gt; _38;<br align="left"/>debug residual =&gt; _44;<br align="left"/>debug val =&gt; _47;<br align="left"/>debug residual =&gt; _53;<br align="left"/>debug val =&gt; _56;<br align="left"/>debug residual =&gt; _62;<br align="left"/>debug val =&gt; _65;<br align="left"/>>;
    bb0__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_72 = const false<br/>_71 = const false<br/>_70 = const false<br/>_69 = const false<br/>_68 = const false<br/>_67 = const false<br/>_66 = const false<br/>StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_5 = &lt;String as anchor_lang::AnchorDeserialize&gt;::deserialize_reader::&lt;R&gt;(move _6)</td></tr></table>>];
    bb1__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;String, std::io::Error&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb2__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">_71 = const true<br/>_72 = const true<br/>StorageDead(_5)<br/>_7 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _7)</td></tr></table>>];
    bb3__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = move ((_4 as Continue).0: std::string::String)<br/>_3 = move _11<br/>StorageDead(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_14 = &lt;account::OracleConfigParams as anchor_lang::AnchorDeserialize&gt;::deserialize_reader::&lt;R&gt;(move _15)</td></tr></table>>];
    bb4__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/>_8 = move ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_10)<br/>_10 = move _8<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;instruction::CreateMarket, std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _10)</td></tr></table>>];
    bb6__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_8)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/></td></tr><tr><td align="left">_13 = &lt;std::result::Result&lt;account::OracleConfigParams, std::io::Error&gt; as Try&gt;::branch(move _14)</td></tr></table>>];
    bb8__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">_70 = const true<br/>StorageDead(_14)<br/>_16 = discriminant(_13)<br/></td></tr><tr><td align="left">switchInt(move _16)</td></tr></table>>];
    bb9__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_20)<br/>_20 = ((_13 as Continue).0: account::OracleConfigParams)<br/>_12 = _20<br/>StorageDead(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_24 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_23 = &lt;i64 as anchor_lang::AnchorDeserialize&gt;::deserialize_reader::&lt;R&gt;(move _24)</td></tr></table>>];
    bb10__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>_17 = move ((_13 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_19)<br/>_19 = move _17<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;instruction::CreateMarket, std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _19)</td></tr></table>>];
    bb11__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_17)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb12__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/></td></tr><tr><td align="left">_22 = &lt;std::result::Result&lt;i64, std::io::Error&gt; as Try&gt;::branch(move _23)</td></tr></table>>];
    bb13__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">_69 = const true<br/>StorageDead(_23)<br/>_25 = discriminant(_22)<br/></td></tr><tr><td align="left">switchInt(move _25)</td></tr></table>>];
    bb14__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_29)<br/>_29 = ((_22 as Continue).0: i64)<br/>_21 = _29<br/>StorageDead(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>_33 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_32 = &lt;i64 as anchor_lang::AnchorDeserialize&gt;::deserialize_reader::&lt;R&gt;(move _33)</td></tr></table>>];
    bb15__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_26)<br/>_26 = move ((_22 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_28)<br/>_28 = move _26<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;instruction::CreateMarket, std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _28)</td></tr></table>>];
    bb16__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_26)<br/>StorageDead(_21)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb17__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/></td></tr><tr><td align="left">_31 = &lt;std::result::Result&lt;i64, std::io::Error&gt; as Try&gt;::branch(move _32)</td></tr></table>>];
    bb18__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">_68 = const true<br/>StorageDead(_32)<br/>_34 = discriminant(_31)<br/></td></tr><tr><td align="left">switchInt(move _34)</td></tr></table>>];
    bb19__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_38)<br/>_38 = ((_31 as Continue).0: i64)<br/>_30 = _38<br/>StorageDead(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>_42 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_41 = &lt;i64 as anchor_lang::AnchorDeserialize&gt;::deserialize_reader::&lt;R&gt;(move _42)</td></tr></table>>];
    bb20__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = move ((_31 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_37)<br/>_37 = move _35<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;instruction::CreateMarket, std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _37)</td></tr></table>>];
    bb21__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_35)<br/>StorageDead(_30)<br/>StorageDead(_21)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb22__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/></td></tr><tr><td align="left">_40 = &lt;std::result::Result&lt;i64, std::io::Error&gt; as Try&gt;::branch(move _41)</td></tr></table>>];
    bb23__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">_67 = const true<br/>StorageDead(_41)<br/>_43 = discriminant(_40)<br/></td></tr><tr><td align="left">switchInt(move _43)</td></tr></table>>];
    bb24__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>_47 = ((_40 as Continue).0: i64)<br/>_39 = _47<br/>StorageDead(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>_51 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_50 = &lt;i64 as anchor_lang::AnchorDeserialize&gt;::deserialize_reader::&lt;R&gt;(move _51)</td></tr></table>>];
    bb25__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_44)<br/>_44 = move ((_40 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_46)<br/>_46 = move _44<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;instruction::CreateMarket, std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _46)</td></tr></table>>];
    bb26__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_44)<br/>StorageDead(_39)<br/>StorageDead(_30)<br/>StorageDead(_21)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb27__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/></td></tr><tr><td align="left">_49 = &lt;std::result::Result&lt;i64, std::io::Error&gt; as Try&gt;::branch(move _50)</td></tr></table>>];
    bb28__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">_66 = const true<br/>StorageDead(_50)<br/>_52 = discriminant(_49)<br/></td></tr><tr><td align="left">switchInt(move _52)</td></tr></table>>];
    bb29__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_56)<br/>_56 = ((_49 as Continue).0: i64)<br/>_48 = _56<br/>StorageDead(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>_60 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_59 = &lt;i64 as anchor_lang::AnchorDeserialize&gt;::deserialize_reader::&lt;R&gt;(move _60)</td></tr></table>>];
    bb30__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_53)<br/>_53 = move ((_49 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_55)<br/>_55 = move _53<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;instruction::CreateMarket, std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _55)</td></tr></table>>];
    bb31__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_53)<br/>StorageDead(_48)<br/>StorageDead(_39)<br/>StorageDead(_30)<br/>StorageDead(_21)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb32__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/></td></tr><tr><td align="left">_58 = &lt;std::result::Result&lt;i64, std::io::Error&gt; as Try&gt;::branch(move _59)</td></tr></table>>];
    bb33__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>_61 = discriminant(_58)<br/></td></tr><tr><td align="left">switchInt(move _61)</td></tr></table>>];
    bb34__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_65)<br/>_65 = ((_58 as Continue).0: i64)<br/>_57 = _65<br/>StorageDead(_65)<br/>_2 = instruction::CreateMarket { name: move _3, oracle_config: move _12, quote_lot_size: move _21, base_lot_size: move _30, maker_fee: move _39, taker_fee: move _48, time_expiry: move _57 }<br/>StorageDead(_57)<br/>StorageDead(_48)<br/>StorageDead(_39)<br/>StorageDead(_30)<br/>StorageDead(_21)<br/>StorageDead(_12)<br/>StorageDead(_3)<br/>_0 = std::result::Result::&lt;instruction::CreateMarket, std::io::Error&gt;::Ok(move _2)<br/>StorageDead(_2)<br/>_73 = discriminant(_58)<br/>StorageDead(_58)<br/>_75 = discriminant(_49)<br/>_66 = const false<br/>StorageDead(_49)<br/>_77 = discriminant(_40)<br/>_67 = const false<br/>StorageDead(_40)<br/>_79 = discriminant(_31)<br/>_68 = const false<br/>StorageDead(_31)<br/>_81 = discriminant(_22)<br/>_69 = const false<br/>StorageDead(_22)<br/>_83 = discriminant(_13)<br/>_70 = const false<br/>StorageDead(_13)<br/>_85 = discriminant(_4)<br/>_71 = const false<br/>_72 = const false<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_62)<br/>_62 = move ((_58 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_64)<br/>_64 = move _62<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;instruction::CreateMarket, std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _64)</td></tr></table>>];
    bb36__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageDead(_62)<br/>StorageDead(_57)<br/>StorageDead(_48)<br/>StorageDead(_39)<br/>StorageDead(_30)<br/>StorageDead(_21)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb37__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/>StorageDead(_2)<br/>_87 = discriminant(_58)<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left">return</td></tr></table>>];
    bb44__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">44 (cleanup)</td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb45__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">45 (cleanup)</td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb46__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">46 (cleanup)</td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb47__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">47 (cleanup)</td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb48__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">48 (cleanup)</td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb49__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">49 (cleanup)</td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb50__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">50 (cleanup)</td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb51__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">51 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb52__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">_89 = discriminant(_49)<br/>_66 = const false<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">_91 = discriminant(_40)<br/>_67 = const false<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">_93 = discriminant(_31)<br/>_68 = const false<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb55__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">_95 = discriminant(_22)<br/>_69 = const false<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb56__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">_97 = discriminant(_13)<br/>_70 = const false<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb57__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">_99 = discriminant(_4)<br/>_71 = const false<br/>_72 = const false<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb58__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">58 (cleanup)</td></tr><tr><td align="left" balign="left">_101 = discriminant(_58)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">59 (cleanup)</td></tr><tr><td align="left" balign="left">_102 = discriminant(_49)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb60__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">60 (cleanup)</td></tr><tr><td align="left" balign="left">_103 = discriminant(_40)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb61__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">61 (cleanup)</td></tr><tr><td align="left" balign="left">_104 = discriminant(_31)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">62 (cleanup)</td></tr><tr><td align="left" balign="left">_105 = discriminant(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb63__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">63 (cleanup)</td></tr><tr><td align="left" balign="left">_106 = discriminant(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb64__0_1341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">64 (cleanup)</td></tr><tr><td align="left" balign="left">_107 = discriminant(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_1341 -> bb1__0_1341 [label="return"];
    bb1__0_1341 -> bb2__0_1341 [label="return"];
    bb1__0_1341 -> bb51__0_1341 [label="unwind"];
    bb2__0_1341 -> bb3__0_1341 [label="0"];
    bb2__0_1341 -> bb5__0_1341 [label="1"];
    bb2__0_1341 -> bb4__0_1341 [label="otherwise"];
    bb3__0_1341 -> bb7__0_1341 [label="return"];
    bb3__0_1341 -> bb50__0_1341 [label="unwind"];
    bb5__0_1341 -> bb6__0_1341 [label="return"];
    bb5__0_1341 -> bb64__0_1341 [label="unwind"];
    bb6__0_1341 -> bb57__0_1341 [label=""];
    bb7__0_1341 -> bb8__0_1341 [label="return"];
    bb7__0_1341 -> bb50__0_1341 [label="unwind"];
    bb8__0_1341 -> bb9__0_1341 [label="0"];
    bb8__0_1341 -> bb10__0_1341 [label="1"];
    bb8__0_1341 -> bb4__0_1341 [label="otherwise"];
    bb9__0_1341 -> bb12__0_1341 [label="return"];
    bb9__0_1341 -> bb49__0_1341 [label="unwind"];
    bb10__0_1341 -> bb11__0_1341 [label="return"];
    bb10__0_1341 -> bb49__0_1341 [label="unwind"];
    bb11__0_1341 -> bb42__0_1341 [label="return"];
    bb11__0_1341 -> bb63__0_1341 [label="unwind"];
    bb12__0_1341 -> bb13__0_1341 [label="return"];
    bb12__0_1341 -> bb49__0_1341 [label="unwind"];
    bb13__0_1341 -> bb14__0_1341 [label="0"];
    bb13__0_1341 -> bb15__0_1341 [label="1"];
    bb13__0_1341 -> bb4__0_1341 [label="otherwise"];
    bb14__0_1341 -> bb17__0_1341 [label="return"];
    bb14__0_1341 -> bb48__0_1341 [label="unwind"];
    bb15__0_1341 -> bb16__0_1341 [label="return"];
    bb15__0_1341 -> bb48__0_1341 [label="unwind"];
    bb16__0_1341 -> bb41__0_1341 [label="return"];
    bb16__0_1341 -> bb62__0_1341 [label="unwind"];
    bb17__0_1341 -> bb18__0_1341 [label="return"];
    bb17__0_1341 -> bb48__0_1341 [label="unwind"];
    bb18__0_1341 -> bb19__0_1341 [label="0"];
    bb18__0_1341 -> bb20__0_1341 [label="1"];
    bb18__0_1341 -> bb4__0_1341 [label="otherwise"];
    bb19__0_1341 -> bb22__0_1341 [label="return"];
    bb19__0_1341 -> bb47__0_1341 [label="unwind"];
    bb20__0_1341 -> bb21__0_1341 [label="return"];
    bb20__0_1341 -> bb47__0_1341 [label="unwind"];
    bb21__0_1341 -> bb40__0_1341 [label="return"];
    bb21__0_1341 -> bb61__0_1341 [label="unwind"];
    bb22__0_1341 -> bb23__0_1341 [label="return"];
    bb22__0_1341 -> bb47__0_1341 [label="unwind"];
    bb23__0_1341 -> bb24__0_1341 [label="0"];
    bb23__0_1341 -> bb25__0_1341 [label="1"];
    bb23__0_1341 -> bb4__0_1341 [label="otherwise"];
    bb24__0_1341 -> bb27__0_1341 [label="return"];
    bb24__0_1341 -> bb46__0_1341 [label="unwind"];
    bb25__0_1341 -> bb26__0_1341 [label="return"];
    bb25__0_1341 -> bb46__0_1341 [label="unwind"];
    bb26__0_1341 -> bb39__0_1341 [label="return"];
    bb26__0_1341 -> bb60__0_1341 [label="unwind"];
    bb27__0_1341 -> bb28__0_1341 [label="return"];
    bb27__0_1341 -> bb46__0_1341 [label="unwind"];
    bb28__0_1341 -> bb29__0_1341 [label="0"];
    bb28__0_1341 -> bb30__0_1341 [label="1"];
    bb28__0_1341 -> bb4__0_1341 [label="otherwise"];
    bb29__0_1341 -> bb32__0_1341 [label="return"];
    bb29__0_1341 -> bb45__0_1341 [label="unwind"];
    bb30__0_1341 -> bb31__0_1341 [label="return"];
    bb30__0_1341 -> bb45__0_1341 [label="unwind"];
    bb31__0_1341 -> bb38__0_1341 [label="return"];
    bb31__0_1341 -> bb59__0_1341 [label="unwind"];
    bb32__0_1341 -> bb33__0_1341 [label="return"];
    bb32__0_1341 -> bb45__0_1341 [label="unwind"];
    bb33__0_1341 -> bb34__0_1341 [label="0"];
    bb33__0_1341 -> bb35__0_1341 [label="1"];
    bb33__0_1341 -> bb4__0_1341 [label="otherwise"];
    bb34__0_1341 -> bb43__0_1341 [label=""];
    bb35__0_1341 -> bb36__0_1341 [label="return"];
    bb35__0_1341 -> bb44__0_1341 [label="unwind"];
    bb36__0_1341 -> bb37__0_1341 [label="return"];
    bb36__0_1341 -> bb58__0_1341 [label="unwind"];
    bb37__0_1341 -> bb52__0_1341 [label=""];
    bb38__0_1341 -> bb52__0_1341 [label=""];
    bb39__0_1341 -> bb53__0_1341 [label=""];
    bb40__0_1341 -> bb54__0_1341 [label=""];
    bb41__0_1341 -> bb55__0_1341 [label=""];
    bb42__0_1341 -> bb56__0_1341 [label=""];
    bb44__0_1341 -> bb58__0_1341 [label="return"];
    bb45__0_1341 -> bb59__0_1341 [label="return"];
    bb46__0_1341 -> bb60__0_1341 [label="return"];
    bb47__0_1341 -> bb61__0_1341 [label="return"];
    bb48__0_1341 -> bb62__0_1341 [label="return"];
    bb49__0_1341 -> bb63__0_1341 [label="return"];
    bb50__0_1341 -> bb64__0_1341 [label="return"];
    bb52__0_1341 -> bb53__0_1341 [label=""];
    bb53__0_1341 -> bb54__0_1341 [label=""];
    bb54__0_1341 -> bb55__0_1341 [label=""];
    bb55__0_1341 -> bb56__0_1341 [label=""];
    bb56__0_1341 -> bb57__0_1341 [label=""];
    bb57__0_1341 -> bb43__0_1341 [label=""];
    bb58__0_1341 -> bb59__0_1341 [label=""];
    bb59__0_1341 -> bb60__0_1341 [label=""];
    bb60__0_1341 -> bb61__0_1341 [label=""];
    bb61__0_1341 -> bb62__0_1341 [label=""];
    bb62__0_1341 -> bb63__0_1341 [label=""];
    bb63__0_1341 -> bb64__0_1341 [label=""];
    bb64__0_1341 -> bb51__0_1341 [label=""];
}
