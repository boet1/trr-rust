// MIR for `__idl_set_authority` before PreCodegen

fn __idl_set_authority(_1: &anchor_lang::prelude::Pubkey, _2: &mut __idl::IdlAccounts<'_>, _3: anchor_lang::prelude::Pubkey) -> Result<(), anchor_lang::error::Error> {
    debug program_id => _1;
    debug accounts => _2;
    debug new_authority => _3;
    let mut _0: std::result::Result<(), anchor_lang::error::Error>;
    let _4: ();
    let mut _5: &str;
    let _6: &str;
    let mut _7: anchor_lang::prelude::Pubkey;
    let mut _8: &mut __private::__idl::IdlAccount;
    let mut _9: &mut anchor_lang::prelude::Account<'_, __private::__idl::IdlAccount>;
    let mut _10: ();

    bb0: {
        StorageLive(_4);
        StorageLive(_5);
        StorageLive(_6);
        _6 = const "Instruction: IdlSetAuthority";
        _5 = &(*_6);
        _4 = solana_program::log::sol_log(move _5) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_5);
        StorageDead(_6);
        StorageDead(_4);
        StorageLive(_7);
        _7 = _3;
        StorageLive(_8);
        StorageLive(_9);
        _9 = &mut ((*_2).0: anchor_lang::prelude::Account<'_, __private::__idl::IdlAccount>);
        _8 = <anchor_lang::prelude::Account<'_, __idl::IdlAccount> as DerefMut>::deref_mut(move _9) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_9);
        ((*_8).0: anchor_lang::prelude::Pubkey) = move _7;
        StorageDead(_7);
        StorageDead(_8);
        StorageLive(_10);
        _10 = ();
        _0 = Result::<(), anchor_lang::error::Error>::Ok(move _10);
        StorageDead(_10);
        return;
    }
}
