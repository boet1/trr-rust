digraph Mir_0_2598 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn get_price_usd::{closure#1}(_1: &amp;ReErased mut Closure(DefId(0:2598 ~ kamino_lending[6389]::utils::prices::scope::get_price_usd::{closure#1}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) &amp;ReErased std::option::Option&lt;(utils::prices::types::Price&lt;u64&gt;, u64)&gt;,)) -&gt; bool, [Region(BrAnon)]), ()]), _2: &amp;ReErased &amp;ReErased std::option::Option&lt;(utils::prices::types::Price&lt;u64&gt;, u64)&gt;) -&gt; bool<br align="left"/>let mut _3: &amp;ReErased std::option::Option&lt;(utils::prices::types::Price&lt;u64&gt;, u64)&gt;;<br align="left"/>let mut _4: &amp;ReErased std::option::Option&lt;(utils::prices::types::Price&lt;u64&gt;, u64)&gt;;<br align="left"/>debug v =&gt; _2;<br align="left"/>>;
    bb0__0_2598 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>_4 = deref_copy (*_2)<br/>_3 = &amp;(*_4)<br/></td></tr><tr><td align="left">_0 = std::option::Option::&lt;(prices::types::Price&lt;u64&gt;, u64)&gt;::is_some(move _3)</td></tr></table>>];
    bb1__0_2598 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2598 -> bb1__0_2598 [label="return"];
}
