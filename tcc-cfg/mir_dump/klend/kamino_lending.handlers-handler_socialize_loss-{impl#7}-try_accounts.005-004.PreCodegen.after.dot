digraph Mir_0_5678 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;handlers::handler_socialize_loss::SocializeLossV2&lt;'info&gt; as anchor_lang::Accounts&lt;'info, SocializeLossV2Bumps&gt;&gt;::try_accounts(_1: &amp;ReErased anchor_lang::prelude::Pubkey, _2: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;], _3: &amp;ReErased [u8], _4: &amp;ReErased mut handlers::handler_socialize_loss::SocializeLossV2Bumps, _5: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;) -&gt; std::result::Result&lt;handlers::handler_socialize_loss::SocializeLossV2&lt;ReErased&gt;, anchor_lang::error::Error&gt;<br align="left"/>let _6: handlers::handler_socialize_loss::SocializeLoss&lt;ReErased&gt;;<br align="left"/>let mut _7: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, handlers::handler_socialize_loss::SocializeLoss&lt;ReErased&gt;&gt;;<br align="left"/>let mut _8: std::result::Result&lt;handlers::handler_socialize_loss::SocializeLoss&lt;ReErased&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _9: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _10: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _11: &amp;ReErased [u8];<br align="left"/>let mut _12: &amp;ReErased mut handlers::handler_socialize_loss::SocializeLossBumps;<br align="left"/>let mut _13: &amp;ReErased mut handlers::handler_socialize_loss::SocializeLossBumps;<br align="left"/>let mut _14: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _15: isize;<br align="left"/>let _16: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _17: !;<br align="left"/>let mut _18: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _19: handlers::handler_socialize_loss::SocializeLoss&lt;ReErased&gt;;<br align="left"/>let _20: handlers::handler_refresh_obligation_farms_for_reserve::OptionalObligationFarmsAccounts&lt;ReErased&gt;;<br align="left"/>let mut _21: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, handlers::handler_refresh_obligation_farms_for_reserve::OptionalObligationFarmsAccounts&lt;ReErased&gt;&gt;;<br align="left"/>let mut _22: std::result::Result&lt;handlers::handler_refresh_obligation_farms_for_reserve::OptionalObligationFarmsAccounts&lt;ReErased&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _23: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _24: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _25: &amp;ReErased [u8];<br align="left"/>let mut _26: &amp;ReErased mut handlers::handler_refresh_obligation_farms_for_reserve::OptionalObligationFarmsAccountsBumps;<br align="left"/>let mut _27: &amp;ReErased mut handlers::handler_refresh_obligation_farms_for_reserve::OptionalObligationFarmsAccountsBumps;<br align="left"/>let mut _28: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _29: isize;<br align="left"/>let _30: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _31: !;<br align="left"/>let mut _32: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _33: handlers::handler_refresh_obligation_farms_for_reserve::OptionalObligationFarmsAccounts&lt;ReErased&gt;;<br align="left"/>let _34: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _35: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _36: std::result::Result&lt;anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _37: std::result::Result&lt;anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _38: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _39: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _40: &amp;ReErased [u8];<br align="left"/>let mut _41: &amp;ReErased mut handlers::handler_socialize_loss::SocializeLossV2Bumps;<br align="left"/>let mut _42: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _43: Closure(DefId(0:5679 ~ kamino_lending[6389]::handlers::handler_socialize_loss::{impl#7}::try_accounts::{closure#0}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _44: isize;<br align="left"/>let _45: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _46: !;<br align="left"/>let mut _47: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _48: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _49: anchor_lang::prelude::Program&lt;ReErased, farms::program::Farms&gt;;<br align="left"/>let mut _50: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, anchor_lang::prelude::Program&lt;ReErased, farms::program::Farms&gt;&gt;;<br align="left"/>let mut _51: std::result::Result&lt;anchor_lang::prelude::Program&lt;ReErased, farms::program::Farms&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _52: std::result::Result&lt;anchor_lang::prelude::Program&lt;ReErased, farms::program::Farms&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _53: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _54: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _55: &amp;ReErased [u8];<br align="left"/>let mut _56: &amp;ReErased mut handlers::handler_socialize_loss::SocializeLossV2Bumps;<br align="left"/>let mut _57: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _58: Closure(DefId(0:5680 ~ kamino_lending[6389]::handlers::handler_socialize_loss::{impl#7}::try_accounts::{closure#1}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _59: isize;<br align="left"/>let _60: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _61: !;<br align="left"/>let mut _62: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _63: anchor_lang::prelude::Program&lt;ReErased, farms::program::Farms&gt;;<br align="left"/>let _64: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _65: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, anchor_lang::prelude::Pubkey&gt;;<br align="left"/>let mut _66: std::result::Result&lt;anchor_lang::prelude::Pubkey, anchor_lang::error::Error&gt;;<br align="left"/>let mut _67: std::result::Result&lt;anchor_lang::prelude::Pubkey, solana_program::pubkey::PubkeyError&gt;;<br align="left"/>let mut _68: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let mut _69: &amp;ReErased [&amp;ReErased [u8]; 3_usize];<br align="left"/>let _70: &amp;ReErased [&amp;ReErased [u8]; 3_usize];<br align="left"/>let _71: [&amp;ReErased [u8]; 3_usize];<br align="left"/>let mut _72: &amp;ReErased [u8];<br align="left"/>let _73: &amp;ReErased [u8];<br align="left"/>let mut _74: &amp;ReErased [u8];<br align="left"/>let _75: &amp;ReErased [u8];<br align="left"/>let mut _76: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _77: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _78: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _79: &amp;ReErased [u8];<br align="left"/>let _80: &amp;ReErased [u8];<br align="left"/>let _81: &amp;ReErased [u8];<br align="left"/>let mut _82: &amp;ReErased [u8; 1_usize];<br align="left"/>let _83: [u8; 1_usize];<br align="left"/>let mut _84: u8;<br align="left"/>let mut _85: u64;<br align="left"/>let mut _86: &amp;ReErased state::lending_market::LendingMarket;<br align="left"/>let mut _87: &amp;ReErased std::cell::Ref&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let _88: std::cell::Ref&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _89: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::Ref&lt;ReErased, state::lending_market::LendingMarket&gt;&gt;;<br align="left"/>let mut _90: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::lending_market::LendingMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _91: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _92: isize;<br align="left"/>let _93: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _94: !;<br align="left"/>let mut _95: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _96: std::cell::Ref&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _97: std::ops::RangeFull;<br align="left"/>let mut _98: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _99: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _100: Closure(DefId(0:5681 ~ kamino_lending[6389]::handlers::handler_socialize_loss::{impl#7}::try_accounts::{closure#2}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((solana_program::pubkey::PubkeyError,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _101: isize;<br align="left"/>let _102: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _103: !;<br align="left"/>let mut _104: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _105: anchor_lang::prelude::Pubkey;<br align="left"/>let _106: ();<br align="left"/>let mut _107: bool;<br align="left"/>let mut _108: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _109: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _110: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _111: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _112: !;<br align="left"/>let mut _113: anchor_lang::error::Error;<br align="left"/>let mut _114: anchor_lang::error::Error;<br align="left"/>let mut _115: anchor_lang::error::Error;<br align="left"/>let mut _116: anchor_lang::error::ErrorCode;<br align="left"/>let mut _117: (anchor_lang::prelude::Pubkey, anchor_lang::prelude::Pubkey);<br align="left"/>let mut _118: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _119: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _120: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _121: handlers::handler_socialize_loss::SocializeLossV2&lt;ReErased&gt;;<br align="left"/>let mut _122: handlers::handler_socialize_loss::SocializeLoss&lt;ReErased&gt;;<br align="left"/>let mut _123: handlers::handler_refresh_obligation_farms_for_reserve::OptionalObligationFarmsAccounts&lt;ReErased&gt;;<br align="left"/>let mut _124: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _125: anchor_lang::prelude::Program&lt;ReErased, farms::program::Farms&gt;;<br align="left"/>let mut _126: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _127: bool;<br align="left"/>let mut _128: bool;<br align="left"/>let mut _129: bool;<br align="left"/>let mut _130: isize;<br align="left"/>let mut _131: isize;<br align="left"/>let mut _132: isize;<br align="left"/>let mut _133: isize;<br align="left"/>let mut _134: isize;<br align="left"/>let mut _135: isize;<br align="left"/>let mut _136: isize;<br align="left"/>let mut _137: isize;<br align="left"/>let mut _138: isize;<br align="left"/>let mut _139: isize;<br align="left"/>let mut _140: isize;<br align="left"/>let mut _141: isize;<br align="left"/>let mut _142: isize;<br align="left"/>let mut _143: isize;<br align="left"/>let mut _144: isize;<br align="left"/>let mut _145: isize;<br align="left"/>let mut _146: isize;<br align="left"/>let mut _147: isize;<br align="left"/>let mut _148: isize;<br align="left"/>let mut _149: isize;<br align="left"/>let mut _150: isize;<br align="left"/>let mut _151: isize;<br align="left"/>let mut _152: isize;<br align="left"/>let mut _153: isize;<br align="left"/>let mut _154: isize;<br align="left"/>let mut _155: isize;<br align="left"/>let mut _156: isize;<br align="left"/>let mut _157: isize;<br align="left"/>let mut _158: isize;<br align="left"/>let mut _159: isize;<br align="left"/>debug __program_id =&gt; _1;<br align="left"/>debug __accounts =&gt; _2;<br align="left"/>debug __ix_data =&gt; _3;<br align="left"/>debug __bumps =&gt; _4;<br align="left"/>debug __reallocs =&gt; _5;<br align="left"/>debug socialize_loss_accounts =&gt; _6;<br align="left"/>debug residual =&gt; _16;<br align="left"/>debug val =&gt; _19;<br align="left"/>debug farms_accounts =&gt; _20;<br align="left"/>debug residual =&gt; _30;<br align="left"/>debug val =&gt; _33;<br align="left"/>debug lending_market_authority =&gt; _34;<br align="left"/>debug residual =&gt; _45;<br align="left"/>debug val =&gt; _48;<br align="left"/>debug farms_program =&gt; _49;<br align="left"/>debug residual =&gt; _60;<br align="left"/>debug val =&gt; _63;<br align="left"/>debug __pda_address =&gt; _64;<br align="left"/>debug residual =&gt; _93;<br align="left"/>debug val =&gt; _96;<br align="left"/>debug residual =&gt; _102;<br align="left"/>debug val =&gt; _105;<br align="left"/>>;
    bb0__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_129 = const false<br/>_128 = const false<br/>_127 = const false<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = &amp;(*_1)<br/>StorageLive(_10)<br/>_10 = &amp;mut (*_2)<br/>StorageLive(_11)<br/>_11 = &amp;(*_3)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>_13 = &amp;mut ((*_4).0: handlers::handler_socialize_loss::SocializeLossBumps)<br/>_12 = &amp;mut (*_13)<br/>StorageLive(_14)<br/>_14 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_8 = &lt;handlers::handler_socialize_loss::SocializeLoss&lt;'_&gt; as anchor_lang::Accounts&lt;'_, SocializeLossBumps&gt;&gt;::try_accounts(move _9, move _10, move _11, move _12, move _14)</td></tr></table>>];
    bb1__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = &lt;std::result::Result&lt;handlers::handler_socialize_loss::SocializeLoss&lt;'_&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _8)</td></tr></table>>];
    bb2__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_15 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _15)</td></tr></table>>];
    bb3__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_19)<br/>_19 = move ((_7 as Continue).0: handlers::handler_socialize_loss::SocializeLoss&lt;'_&gt;)<br/>_6 = move _19<br/>StorageDead(_19)<br/>_130 = discriminant(_7)<br/>StorageDead(_13)<br/>StorageDead(_7)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>_23 = &amp;(*_1)<br/>StorageLive(_24)<br/>_24 = &amp;mut (*_2)<br/>StorageLive(_25)<br/>_25 = &amp;(*_3)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_27 = &amp;mut ((*_4).1: handlers::handler_refresh_obligation_farms_for_reserve::OptionalObligationFarmsAccountsBumps)<br/>_26 = &amp;mut (*_27)<br/>StorageLive(_28)<br/>_28 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_22 = &lt;handlers::handler_refresh_obligation_farms_for_reserve::OptionalObligationFarmsAccounts&lt;'_&gt; as anchor_lang::Accounts&lt;'_, handlers::handler_refresh_obligation_farms_for_reserve::OptionalObligationFarmsAccountsBumps&gt;&gt;::try_accounts(move _23, move _24, move _25, move _26, move _28)</td></tr></table>>];
    bb4__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_16)<br/>_16 = move ((_7 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_18)<br/>_18 = move _16<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;handlers::handler_socialize_loss::SocializeLossV2&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _18)</td></tr></table>>];
    bb6__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_16)<br/>_152 = discriminant(_7)<br/>StorageDead(_13)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">_21 = &lt;std::result::Result&lt;handlers::handler_refresh_obligation_farms_for_reserve::OptionalObligationFarmsAccounts&lt;'_&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _22)</td></tr></table>>];
    bb8__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>_29 = discriminant(_21)<br/></td></tr><tr><td align="left">switchInt(move _29)</td></tr></table>>];
    bb9__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_33)<br/>_33 = move ((_21 as Continue).0: handlers::handler_refresh_obligation_farms_for_reserve::OptionalObligationFarmsAccounts&lt;'_&gt;)<br/>_20 = move _33<br/>StorageDead(_33)<br/>_132 = discriminant(_21)<br/>StorageDead(_27)<br/>StorageDead(_21)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>_38 = &amp;(*_1)<br/>StorageLive(_39)<br/>_39 = &amp;mut (*_2)<br/>StorageLive(_40)<br/>_40 = &amp;(*_3)<br/>StorageLive(_41)<br/>_41 = &amp;mut (*_4)<br/>StorageLive(_42)<br/>_42 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_37 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::Accounts&lt;'_, SocializeLossV2Bumps&gt;&gt;::try_accounts(move _38, move _39, move _40, move _41, move _42)</td></tr></table>>];
    bb10__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_30)<br/>_30 = move ((_21 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_32)<br/>_32 = move _30<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;handlers::handler_socialize_loss::SocializeLossV2&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _32)</td></tr></table>>];
    bb11__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_30)<br/>_150 = discriminant(_21)<br/>StorageDead(_27)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_41)<br/>StorageDead(_40)<br/>StorageDead(_39)<br/>StorageDead(_38)<br/>StorageLive(_43)<br/>_43 = {closure@programs\klend\src\handlers\handler_socialize_loss.rs:87:10: 87:18}<br/></td></tr><tr><td align="left">_36 = std::result::Result::&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs\klend\src\handlers\handler_socialize_loss.rs:87:10: 87:18}&gt;(move _37, move _43)</td></tr></table>>];
    bb13__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">_35 = &lt;std::result::Result&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _36)</td></tr></table>>];
    bb14__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>_44 = discriminant(_35)<br/></td></tr><tr><td align="left">switchInt(move _44)</td></tr></table>>];
    bb15__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_48)<br/>_48 = move ((_35 as Continue).0: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_34 = move _48<br/>StorageDead(_48)<br/>_134 = discriminant(_35)<br/>StorageDead(_35)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>_53 = &amp;(*_1)<br/>StorageLive(_54)<br/>_54 = &amp;mut (*_2)<br/>StorageLive(_55)<br/>_55 = &amp;(*_3)<br/>StorageLive(_56)<br/>_56 = &amp;mut (*_4)<br/>StorageLive(_57)<br/>_57 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_52 = &lt;anchor_lang::prelude::Program&lt;'_, Farms&gt; as anchor_lang::Accounts&lt;'_, SocializeLossV2Bumps&gt;&gt;::try_accounts(move _53, move _54, move _55, move _56, move _57)</td></tr></table>>];
    bb16__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_45)<br/>_45 = move ((_35 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_47)<br/>_47 = move _45<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;handlers::handler_socialize_loss::SocializeLossV2&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _47)</td></tr></table>>];
    bb17__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_45)<br/>_148 = discriminant(_35)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_56)<br/>StorageDead(_55)<br/>StorageDead(_54)<br/>StorageDead(_53)<br/>StorageLive(_58)<br/>_58 = {closure@programs\klend\src\handlers\handler_socialize_loss.rs:87:10: 87:18}<br/></td></tr><tr><td align="left">_51 = std::result::Result::&lt;anchor_lang::prelude::Program&lt;'_, Farms&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs\klend\src\handlers\handler_socialize_loss.rs:87:10: 87:18}&gt;(move _52, move _58)</td></tr></table>>];
    bb19__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">_50 = &lt;std::result::Result&lt;anchor_lang::prelude::Program&lt;'_, Farms&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _51)</td></tr></table>>];
    bb20__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>_59 = discriminant(_50)<br/></td></tr><tr><td align="left">switchInt(move _59)</td></tr></table>>];
    bb21__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_63)<br/>_63 = move ((_50 as Continue).0: anchor_lang::prelude::Program&lt;'_, farms::program::Farms&gt;)<br/>_49 = move _63<br/>StorageDead(_63)<br/>_136 = discriminant(_50)<br/>StorageDead(_50)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>_73 = const _<br/>_72 = &amp;(*_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>_78 = &amp;(_6.2: anchor_lang::prelude::AccountLoader&lt;'_, state::lending_market::LendingMarket&gt;)<br/></td></tr><tr><td align="left">_77 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, state::lending_market::LendingMarket&gt; as anchor_lang::Key&gt;::key(move _78)</td></tr></table>>];
    bb22__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_60)<br/>_60 = move ((_50 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_62)<br/>_62 = move _60<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;handlers::handler_socialize_loss::SocializeLossV2&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _62)</td></tr></table>>];
    bb23__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageDead(_60)<br/>_146 = discriminant(_50)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">_76 = &amp;_77<br/>StorageDead(_78)<br/></td></tr><tr><td align="left">_75 = &lt;anchor_lang::prelude::Pubkey as AsRef&lt;[u8]&gt;&gt;::as_ref(move _76)</td></tr></table>>];
    bb25__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">_74 = &amp;(*_75)<br/>StorageDead(_76)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>_91 = &amp;(_6.2: anchor_lang::prelude::AccountLoader&lt;'_, state::lending_market::LendingMarket&gt;)<br/></td></tr><tr><td align="left">_90 = anchor_lang::prelude::AccountLoader::&lt;'_, state::lending_market::LendingMarket&gt;::load(move _91)</td></tr></table>>];
    bb26__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/></td></tr><tr><td align="left">_89 = &lt;std::result::Result&lt;Ref&lt;'_, state::lending_market::LendingMarket&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _90)</td></tr></table>>];
    bb27__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">_127 = const true<br/>_128 = const true<br/>StorageDead(_90)<br/>_92 = discriminant(_89)<br/></td></tr><tr><td align="left">switchInt(move _92)</td></tr></table>>];
    bb28__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_96)<br/>_96 = move ((_89 as Continue).0: std::cell::Ref&lt;'_, state::lending_market::LendingMarket&gt;)<br/>_88 = move _96<br/>StorageDead(_96)<br/>_87 = &amp;_88<br/></td></tr><tr><td align="left">_86 = &lt;Ref&lt;'_, state::lending_market::LendingMarket&gt; as Deref&gt;::deref(move _87)</td></tr></table>>];
    bb29__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_93)<br/>_93 = move ((_89 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_95)<br/>_95 = move _93<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;handlers::handler_socialize_loss::SocializeLossV2&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _95)</td></tr></table>>];
    bb30__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/>StorageDead(_93)<br/>StorageDead(_87)<br/>StorageDead(_85)<br/>StorageDead(_84)<br/>StorageDead(_82)<br/>StorageDead(_79)<br/>StorageDead(_74)<br/>StorageDead(_72)<br/>StorageDead(_69)<br/>StorageDead(_68)<br/>StorageDead(_67)<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>_85 = ((*_86).1: u64)<br/>_84 = move _85 as u8 (IntToInt)<br/>StorageDead(_85)<br/>_83 = [move _84]<br/>_82 = &amp;_83<br/>StorageDead(_84)<br/>StorageLive(_97)<br/>_97 = RangeFull<br/></td></tr><tr><td align="left">_81 = &lt;[u8; 1] as Index&lt;RangeFull&gt;&gt;::index(move _82, move _97)</td></tr></table>>];
    bb32__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>StorageDead(_82)<br/>_80 = &amp;(*_81)<br/>_79 = &amp;(*_80)<br/>_71 = [move _72, move _74, move _79]<br/>StorageDead(_79)<br/>StorageDead(_74)<br/>StorageDead(_72)<br/>_70 = &amp;_71<br/>_69 = &amp;(*_70)<br/>_68 = move _69 as &amp;[&amp;[u8]] (PointerCoercion(Unsize))<br/>StorageDead(_69)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>_99 = &amp;_1<br/>_126 = deref_copy (*_99)<br/>_98 = &amp;(*_126)<br/></td></tr><tr><td align="left">_67 = anchor_lang::prelude::Pubkey::create_program_address(move _68, move _98)</td></tr></table>>];
    bb33__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>StorageDead(_68)<br/>StorageLive(_100)<br/>_100 = {closure@programs\klend\src\handlers\handler_socialize_loss.rs:87:10: 87:18}<br/></td></tr><tr><td align="left">_66 = std::result::Result::&lt;anchor_lang::prelude::Pubkey, PubkeyError&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs\klend\src\handlers\handler_socialize_loss.rs:87:10: 87:18}&gt;(move _67, move _100)</td></tr></table>>];
    bb34__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">_65 = &lt;std::result::Result&lt;anchor_lang::prelude::Pubkey, anchor_lang::error::Error&gt; as Try&gt;::branch(move _66)</td></tr></table>>];
    bb35__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>_101 = discriminant(_65)<br/></td></tr><tr><td align="left">switchInt(move _101)</td></tr></table>>];
    bb36__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageLive(_105)<br/>_105 = ((_65 as Continue).0: anchor_lang::prelude::Pubkey)<br/>_64 = _105<br/>StorageDead(_105)<br/>_138 = discriminant(_65)<br/>StorageDead(_99)<br/></td></tr><tr><td align="left">drop(_88)</td></tr></table>>];
    bb37__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_102)<br/>_102 = move ((_65 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_104)<br/>_104 = move _102<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;handlers::handler_socialize_loss::SocializeLossV2&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _104)</td></tr></table>>];
    bb38__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/>StorageDead(_102)<br/>_142 = discriminant(_65)<br/>StorageDead(_99)<br/></td></tr><tr><td align="left">drop(_88)</td></tr></table>>];
    bb39__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">_108 = &amp;_109<br/>StorageDead(_110)<br/>StorageLive(_111)<br/>_111 = &amp;_64<br/></td></tr><tr><td align="left">_107 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _108, move _111)</td></tr></table>>];
    bb40__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left">switchInt(move _107)</td></tr></table>>];
    bb41__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/>StorageDead(_109)<br/>StorageDead(_108)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>_116 = ConstraintSeeds<br/></td></tr><tr><td align="left">_115 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _116)</td></tr></table>>];
    bb42__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_116)<br/></td></tr><tr><td align="left">_114 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _115, const &quot;lending_market_authority&quot;)</td></tr></table>>];
    bb43__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">_129 = const true<br/>StorageDead(_115)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>_119 = &amp;_34<br/></td></tr><tr><td align="left">_118 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::Key&gt;::key(move _119)</td></tr></table>>];
    bb44__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/>StorageLive(_120)<br/>_120 = _64<br/>_117 = (move _118, move _120)<br/>StorageDead(_120)<br/>StorageDead(_118)<br/>_129 = const false<br/></td></tr><tr><td align="left">_113 = anchor_lang::error::Error::with_pubkeys(move _114, move _117)</td></tr></table>>];
    bb45__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/>_129 = const false<br/>StorageDead(_114)<br/>_0 = std::result::Result::&lt;handlers::handler_socialize_loss::SocializeLossV2&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _113)<br/>StorageDead(_113)<br/>StorageDead(_107)<br/>StorageDead(_106)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/>StorageDead(_109)<br/>StorageDead(_108)<br/>_106 = const ()<br/>StorageDead(_107)<br/>StorageDead(_106)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>_122 = move _6<br/>StorageLive(_123)<br/>_123 = move _20<br/>StorageLive(_124)<br/>_124 = move _34<br/>StorageLive(_125)<br/>_125 = move _49<br/>_121 = handlers::handler_socialize_loss::SocializeLossV2::&lt;'_&gt; { socialize_loss_accounts: move _122, farms_accounts: move _123, lending_market_authority: move _124, farms_program: move _125 }<br/>StorageDead(_125)<br/>StorageDead(_124)<br/>StorageDead(_123)<br/>StorageDead(_122)<br/>_0 = std::result::Result::&lt;handlers::handler_socialize_loss::SocializeLossV2&lt;'_&gt;, anchor_lang::error::Error&gt;::Ok(move _121)<br/>StorageDead(_121)<br/>StorageDead(_64)<br/>StorageDead(_49)<br/>StorageDead(_34)<br/>StorageDead(_20)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/></td></tr><tr><td align="left">drop(_34)</td></tr></table>>];
    bb49__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/></td></tr><tr><td align="left">drop(_20)</td></tr></table>>];
    bb50__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/></td></tr><tr><td align="left">drop(_6)</td></tr></table>>];
    bb51__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb52__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left">return</td></tr></table>>];
    bb53__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">53 (cleanup)</td></tr><tr><td align="left">drop(_88)</td></tr></table>>];
    bb54__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">54 (cleanup)</td></tr><tr><td align="left">drop(_34)</td></tr></table>>];
    bb55__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">55 (cleanup)</td></tr><tr><td align="left">drop(_20)</td></tr></table>>];
    bb56__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">56 (cleanup)</td></tr><tr><td align="left">drop(_6)</td></tr></table>>];
    bb57__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">57 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb58__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">_140 = discriminant(_89)<br/>_127 = const false<br/>_128 = const false<br/>StorageDead(_89)<br/>StorageDead(_88)<br/>StorageDead(_86)<br/>StorageDead(_83)<br/>StorageDead(_81)<br/>StorageDead(_80)<br/>StorageDead(_77)<br/>StorageDead(_75)<br/>StorageDead(_73)<br/>StorageDead(_71)<br/>StorageDead(_70)<br/>StorageDead(_65)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>_110 = &amp;_34<br/></td></tr><tr><td align="left">_109 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::Key&gt;::key(move _110)</td></tr></table>>];
    bb59__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">_144 = discriminant(_89)<br/>_127 = const false<br/>_128 = const false<br/>StorageDead(_89)<br/>StorageDead(_88)<br/>StorageDead(_86)<br/>StorageDead(_83)<br/>StorageDead(_81)<br/>StorageDead(_80)<br/>StorageDead(_77)<br/>StorageDead(_75)<br/>StorageDead(_73)<br/>StorageDead(_71)<br/>StorageDead(_70)<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb60__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">60 (cleanup)</td></tr><tr><td align="left">drop(_114)</td></tr></table>>];
    bb61__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">61 (cleanup)</td></tr><tr><td align="left">switchInt(_129)</td></tr></table>>];
    bb62__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">62 (cleanup)</td></tr><tr><td align="left" balign="left">_154 = discriminant(_65)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb63__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">63 (cleanup)</td></tr><tr><td align="left" balign="left">_155 = discriminant(_89)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb64__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">64 (cleanup)</td></tr><tr><td align="left" balign="left">_156 = discriminant(_50)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb65__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">65 (cleanup)</td></tr><tr><td align="left" balign="left">_157 = discriminant(_35)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb66__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">66 (cleanup)</td></tr><tr><td align="left" balign="left">_158 = discriminant(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb67__0_5678 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">67 (cleanup)</td></tr><tr><td align="left" balign="left">_159 = discriminant(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_5678 -> bb1__0_5678 [label="return"];
    bb1__0_5678 -> bb2__0_5678 [label="return"];
    bb1__0_5678 -> bb57__0_5678 [label="unwind"];
    bb2__0_5678 -> bb3__0_5678 [label="0"];
    bb2__0_5678 -> bb5__0_5678 [label="1"];
    bb2__0_5678 -> bb4__0_5678 [label="otherwise"];
    bb3__0_5678 -> bb7__0_5678 [label="return"];
    bb3__0_5678 -> bb56__0_5678 [label="unwind"];
    bb5__0_5678 -> bb6__0_5678 [label="return"];
    bb5__0_5678 -> bb67__0_5678 [label="unwind"];
    bb6__0_5678 -> bb51__0_5678 [label=""];
    bb7__0_5678 -> bb8__0_5678 [label="return"];
    bb7__0_5678 -> bb56__0_5678 [label="unwind"];
    bb8__0_5678 -> bb9__0_5678 [label="0"];
    bb8__0_5678 -> bb10__0_5678 [label="1"];
    bb8__0_5678 -> bb4__0_5678 [label="otherwise"];
    bb9__0_5678 -> bb12__0_5678 [label="return"];
    bb9__0_5678 -> bb55__0_5678 [label="unwind"];
    bb10__0_5678 -> bb11__0_5678 [label="return"];
    bb10__0_5678 -> bb66__0_5678 [label="unwind"];
    bb11__0_5678 -> bb50__0_5678 [label=""];
    bb12__0_5678 -> bb13__0_5678 [label="return"];
    bb12__0_5678 -> bb55__0_5678 [label="unwind"];
    bb13__0_5678 -> bb14__0_5678 [label="return"];
    bb13__0_5678 -> bb55__0_5678 [label="unwind"];
    bb14__0_5678 -> bb15__0_5678 [label="0"];
    bb14__0_5678 -> bb16__0_5678 [label="1"];
    bb14__0_5678 -> bb4__0_5678 [label="otherwise"];
    bb15__0_5678 -> bb18__0_5678 [label="return"];
    bb15__0_5678 -> bb54__0_5678 [label="unwind"];
    bb16__0_5678 -> bb17__0_5678 [label="return"];
    bb16__0_5678 -> bb65__0_5678 [label="unwind"];
    bb17__0_5678 -> bb49__0_5678 [label=""];
    bb18__0_5678 -> bb19__0_5678 [label="return"];
    bb18__0_5678 -> bb54__0_5678 [label="unwind"];
    bb19__0_5678 -> bb20__0_5678 [label="return"];
    bb19__0_5678 -> bb54__0_5678 [label="unwind"];
    bb20__0_5678 -> bb21__0_5678 [label="0"];
    bb20__0_5678 -> bb22__0_5678 [label="1"];
    bb20__0_5678 -> bb4__0_5678 [label="otherwise"];
    bb21__0_5678 -> bb24__0_5678 [label="return"];
    bb21__0_5678 -> bb54__0_5678 [label="unwind"];
    bb22__0_5678 -> bb23__0_5678 [label="return"];
    bb22__0_5678 -> bb64__0_5678 [label="unwind"];
    bb23__0_5678 -> bb48__0_5678 [label=""];
    bb24__0_5678 -> bb25__0_5678 [label="return"];
    bb24__0_5678 -> bb54__0_5678 [label="unwind"];
    bb25__0_5678 -> bb26__0_5678 [label="return"];
    bb25__0_5678 -> bb54__0_5678 [label="unwind"];
    bb26__0_5678 -> bb27__0_5678 [label="return"];
    bb26__0_5678 -> bb54__0_5678 [label="unwind"];
    bb27__0_5678 -> bb28__0_5678 [label="0"];
    bb27__0_5678 -> bb29__0_5678 [label="1"];
    bb27__0_5678 -> bb4__0_5678 [label="otherwise"];
    bb28__0_5678 -> bb31__0_5678 [label="return"];
    bb28__0_5678 -> bb53__0_5678 [label="unwind"];
    bb29__0_5678 -> bb30__0_5678 [label="return"];
    bb29__0_5678 -> bb63__0_5678 [label="unwind"];
    bb30__0_5678 -> bb59__0_5678 [label=""];
    bb31__0_5678 -> bb32__0_5678 [label="return"];
    bb31__0_5678 -> bb53__0_5678 [label="unwind"];
    bb32__0_5678 -> bb33__0_5678 [label="return"];
    bb32__0_5678 -> bb53__0_5678 [label="unwind"];
    bb33__0_5678 -> bb34__0_5678 [label="return"];
    bb33__0_5678 -> bb53__0_5678 [label="unwind"];
    bb34__0_5678 -> bb35__0_5678 [label="return"];
    bb34__0_5678 -> bb53__0_5678 [label="unwind"];
    bb35__0_5678 -> bb36__0_5678 [label="0"];
    bb35__0_5678 -> bb37__0_5678 [label="1"];
    bb35__0_5678 -> bb4__0_5678 [label="otherwise"];
    bb36__0_5678 -> bb58__0_5678 [label="return"];
    bb36__0_5678 -> bb63__0_5678 [label="unwind"];
    bb37__0_5678 -> bb38__0_5678 [label="return"];
    bb37__0_5678 -> bb62__0_5678 [label="unwind"];
    bb38__0_5678 -> bb59__0_5678 [label="return"];
    bb38__0_5678 -> bb63__0_5678 [label="unwind"];
    bb39__0_5678 -> bb40__0_5678 [label="return"];
    bb39__0_5678 -> bb54__0_5678 [label="unwind"];
    bb40__0_5678 -> bb46__0_5678 [label="0"];
    bb40__0_5678 -> bb41__0_5678 [label="otherwise"];
    bb41__0_5678 -> bb42__0_5678 [label="return"];
    bb41__0_5678 -> bb54__0_5678 [label="unwind"];
    bb42__0_5678 -> bb43__0_5678 [label="return"];
    bb42__0_5678 -> bb54__0_5678 [label="unwind"];
    bb43__0_5678 -> bb44__0_5678 [label="return"];
    bb43__0_5678 -> bb61__0_5678 [label="unwind"];
    bb44__0_5678 -> bb45__0_5678 [label="return"];
    bb44__0_5678 -> bb61__0_5678 [label="unwind"];
    bb45__0_5678 -> bb47__0_5678 [label=""];
    bb46__0_5678 -> bb52__0_5678 [label=""];
    bb47__0_5678 -> bb48__0_5678 [label=""];
    bb48__0_5678 -> bb49__0_5678 [label="return"];
    bb48__0_5678 -> bb55__0_5678 [label="unwind"];
    bb49__0_5678 -> bb50__0_5678 [label="return"];
    bb49__0_5678 -> bb56__0_5678 [label="unwind"];
    bb50__0_5678 -> bb51__0_5678 [label="return"];
    bb50__0_5678 -> bb57__0_5678 [label="unwind"];
    bb51__0_5678 -> bb52__0_5678 [label=""];
    bb53__0_5678 -> bb63__0_5678 [label="return"];
    bb54__0_5678 -> bb55__0_5678 [label="return"];
    bb55__0_5678 -> bb56__0_5678 [label="return"];
    bb56__0_5678 -> bb57__0_5678 [label="return"];
    bb58__0_5678 -> bb39__0_5678 [label="return"];
    bb58__0_5678 -> bb54__0_5678 [label="unwind"];
    bb59__0_5678 -> bb47__0_5678 [label=""];
    bb60__0_5678 -> bb54__0_5678 [label="return"];
    bb61__0_5678 -> bb54__0_5678 [label="0"];
    bb61__0_5678 -> bb60__0_5678 [label="otherwise"];
    bb62__0_5678 -> bb53__0_5678 [label=""];
    bb63__0_5678 -> bb54__0_5678 [label=""];
    bb64__0_5678 -> bb54__0_5678 [label=""];
    bb65__0_5678 -> bb55__0_5678 [label=""];
    bb66__0_5678 -> bb56__0_5678 [label=""];
    bb67__0_5678 -> bb57__0_5678 [label=""];
}
