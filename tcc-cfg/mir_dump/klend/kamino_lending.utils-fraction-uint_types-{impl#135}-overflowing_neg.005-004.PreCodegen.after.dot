digraph Mir_0_11924 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn uint_types::U128::overflowing_neg(_1: utils::fraction::uint_types::U128) -&gt; (utils::fraction::uint_types::U128, bool)<br align="left"/>let mut _2: bool;<br align="left"/>let mut _3: &amp;ReErased utils::fraction::uint_types::U128;<br align="left"/>let mut _4: utils::fraction::uint_types::U128;<br align="left"/>let mut _5: utils::fraction::uint_types::U128;<br align="left"/>let mut _6: utils::fraction::uint_types::U128;<br align="left"/>let mut _7: utils::fraction::uint_types::U128;<br align="left"/>debug self =&gt; _1;<br align="left"/>>;
    bb0__0_11924 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>_3 = &amp;_1<br/></td></tr><tr><td align="left">_2 = uint_types::U128::is_zero(move _3)</td></tr></table>>];
    bb1__0_11924 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">switchInt(move _2)</td></tr></table>>];
    bb2__0_11924 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/>StorageLive(_4)<br/>_4 = _1<br/>_0 = (move _4, const false)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb3__0_11924 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = _1<br/></td></tr><tr><td align="left">_6 = &lt;uint_types::U128 as Not&gt;::not(move _7)</td></tr></table>>];
    bb4__0_11924 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/></td></tr><tr><td align="left">_5 = &lt;uint_types::U128 as Add&lt;i32&gt;&gt;::add(move _6, const 1_i32)</td></tr></table>>];
    bb5__0_11924 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_0 = (move _5, const true)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb6__0_11924 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_2)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_11924 -> bb1__0_11924 [label="return"];
    bb1__0_11924 -> bb3__0_11924 [label="0"];
    bb1__0_11924 -> bb2__0_11924 [label="otherwise"];
    bb2__0_11924 -> bb6__0_11924 [label=""];
    bb3__0_11924 -> bb4__0_11924 [label="return"];
    bb4__0_11924 -> bb5__0_11924 [label="return"];
    bb5__0_11924 -> bb6__0_11924 [label=""];
}
