digraph Mir_0_944 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn ConfigItemUpdater::&lt;'h, H, u8, S, G, V, R&gt;::representing_u8_enum(_1: lending_market::config_items::ConfigItemUpdater&lt;ReErased, H/#1, u8, S/#2, G/#3, V/#4, R/#5&gt;) -&gt; lending_market::config_items::ConfigItemUpdater&lt;ReErased, H/#1, u8, S/#2, G/#3, FnDef(DefId(0:982 ~ kamino_lending[6389]::lending_market::config_items::validations::check_valid_u8_enum), [E/#6]), FnDef(DefId(0:993 ~ kamino_lending[6389]::lending_market::config_items::renderings::as_u8_enum), [E/#6])&gt;<br align="left"/>let mut _2: lending_market::config_items::ConfigItemUpdater&lt;ReErased, H/#1, u8, S/#2, G/#3, FnDef(DefId(0:982 ~ kamino_lending[6389]::lending_market::config_items::validations::check_valid_u8_enum), [E/#6]), R/#5&gt;;<br align="left"/>let mut _3: lending_market::config_items::ConfigItemUpdater&lt;ReErased, H/#1, u8, S/#2, G/#3, V/#4, R/#5&gt;;<br align="left"/>debug self =&gt; _1;<br align="left"/>>;
    bb0__0_944 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>_3 = move _1<br/></td></tr><tr><td align="left">_2 = ConfigItemUpdater::&lt;'_, H, u8, S, G, V, R&gt;::validating::&lt;for&lt;'a&gt; fn(&amp;'a u8) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt; {check_valid_u8_enum::&lt;E&gt;}&gt;(move _3, check_valid_u8_enum::&lt;E&gt;)</td></tr></table>>];
    bb1__0_944 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/></td></tr><tr><td align="left">_0 = ConfigItemUpdater::&lt;'_, H, u8, S, G, for&lt;'a&gt; fn(&amp;'a u8) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt; {check_valid_u8_enum::&lt;E&gt;}, R&gt;::rendering::&lt;for&lt;'a, 'b, 'c&gt; fn(&amp;'a u8, &amp;'b mut Formatter&lt;'c&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; {as_u8_enum::&lt;E&gt;}&gt;(move _2, as_u8_enum::&lt;E&gt;)</td></tr></table>>];
    bb2__0_944 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_2)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb3__0_944 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">3 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_944 -> bb1__0_944 [label="return"];
    bb0__0_944 -> bb3__0_944 [label="unwind"];
    bb1__0_944 -> bb2__0_944 [label="return"];
    bb1__0_944 -> bb3__0_944 [label="unwind"];
}
