digraph Mir_0_1386 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn post_repay_obligation_invariants(_1: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, _2: &amp;ReErased state::obligation::Obligation, _3: &amp;ReErased state::reserve::Reserve, _4: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, _5: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _6: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _7: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _8: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _9: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _10: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _11: u128;<br align="left"/>let mut _12: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _13: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _14: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _15: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _16: bool;<br align="left"/>let mut _17: u8;<br align="left"/>let _18: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _19: u128;<br align="left"/>let _20: ();<br align="left"/>let mut _21: bool;<br align="left"/>let mut _22: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _23: &amp;ReErased i32;<br align="left"/>let _24: i32;<br align="left"/>let _25: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _26: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _27: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _28: bool;<br align="left"/>let mut _29: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _30: &amp;ReErased i32;<br align="left"/>let _31: i32;<br align="left"/>let mut _32: bool;<br align="left"/>let mut _33: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _34: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _35: !;<br align="left"/>let _36: ();<br align="left"/>let mut _37: &amp;ReErased str;<br align="left"/>let _38: &amp;ReErased str;<br align="left"/>let mut _39: &amp;ReErased std::string::String;<br align="left"/>let _40: &amp;ReErased std::string::String;<br align="left"/>let _41: std::string::String;<br align="left"/>let _42: std::string::String;<br align="left"/>let mut _43: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _44: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _45: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _46: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _47: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _48: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _49: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _50: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _51: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _52: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _53: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _54: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _55: utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _56: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _57: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _58: &amp;ReErased &amp;ReErased str;<br align="left"/>let _59: &amp;ReErased &amp;ReErased str;<br align="left"/>let _60: &amp;ReErased str;<br align="left"/>let mut _61: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _62: anchor_lang::error::Error;<br align="left"/>let mut _63: anchor_lang::error::AnchorError;<br align="left"/>let mut _64: std::string::String;<br align="left"/>let mut _65: &amp;ReErased LendingError;<br align="left"/>let _66: LendingError;<br align="left"/>let mut _67: u32;<br align="left"/>let mut _68: LendingError;<br align="left"/>let mut _69: std::string::String;<br align="left"/>let mut _70: &amp;ReErased LendingError;<br align="left"/>let _71: LendingError;<br align="left"/>let mut _72: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _73: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _74: anchor_lang::error::Source;<br align="left"/>let mut _75: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let _76: ();<br align="left"/>let mut _77: bool;<br align="left"/>let mut _78: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _79: &amp;ReErased i32;<br align="left"/>let _80: i32;<br align="left"/>let _81: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _82: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _83: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _84: bool;<br align="left"/>let mut _85: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _86: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _87: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _88: &amp;ReErased state::obligation::Obligation;<br align="left"/>let mut _89: !;<br align="left"/>let _90: ();<br align="left"/>let mut _91: &amp;ReErased str;<br align="left"/>let _92: &amp;ReErased str;<br align="left"/>let mut _93: &amp;ReErased std::string::String;<br align="left"/>let _94: &amp;ReErased std::string::String;<br align="left"/>let _95: std::string::String;<br align="left"/>let _96: std::string::String;<br align="left"/>let mut _97: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _98: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _99: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _100: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _101: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _102: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _103: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _104: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _105: [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let mut _106: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _107: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _108: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _109: utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _110: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _111: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _112: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _113: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _114: utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _115: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _116: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _117: &amp;ReErased state::obligation::Obligation;<br align="left"/>let mut _118: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _119: &amp;ReErased &amp;ReErased str;<br align="left"/>let _120: &amp;ReErased &amp;ReErased str;<br align="left"/>let _121: &amp;ReErased str;<br align="left"/>let mut _122: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _123: &amp;ReErased [core::fmt::rt::Placeholder];<br align="left"/>let mut _124: &amp;ReErased [core::fmt::rt::Placeholder; 3_usize];<br align="left"/>let _125: &amp;ReErased [core::fmt::rt::Placeholder; 3_usize];<br align="left"/>let _126: [core::fmt::rt::Placeholder; 3_usize];<br align="left"/>let mut _127: core::fmt::rt::Placeholder;<br align="left"/>let mut _128: core::fmt::rt::Alignment;<br align="left"/>let mut _129: core::fmt::rt::Count;<br align="left"/>let mut _130: core::fmt::rt::Count;<br align="left"/>let mut _131: core::fmt::rt::Placeholder;<br align="left"/>let mut _132: core::fmt::rt::Alignment;<br align="left"/>let mut _133: core::fmt::rt::Count;<br align="left"/>let mut _134: core::fmt::rt::Count;<br align="left"/>let mut _135: core::fmt::rt::Placeholder;<br align="left"/>let mut _136: core::fmt::rt::Alignment;<br align="left"/>let mut _137: core::fmt::rt::Count;<br align="left"/>let mut _138: core::fmt::rt::Count;<br align="left"/>let mut _139: core::fmt::rt::UnsafeArg;<br align="left"/>let mut _140: anchor_lang::error::Error;<br align="left"/>let mut _141: anchor_lang::error::AnchorError;<br align="left"/>let mut _142: std::string::String;<br align="left"/>let mut _143: &amp;ReErased LendingError;<br align="left"/>let _144: LendingError;<br align="left"/>let mut _145: u32;<br align="left"/>let mut _146: LendingError;<br align="left"/>let mut _147: std::string::String;<br align="left"/>let mut _148: &amp;ReErased LendingError;<br align="left"/>let _149: LendingError;<br align="left"/>let mut _150: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _151: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _152: anchor_lang::error::Source;<br align="left"/>let mut _153: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let mut _154: ();<br align="left"/>let mut _155: &amp;ReErased LendingError;<br align="left"/>let mut _156: &amp;ReErased LendingError;<br align="left"/>let mut _157: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _158: &amp;ReErased LendingError;<br align="left"/>let mut _159: &amp;ReErased LendingError;<br align="left"/>let mut _160: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _161: &amp;ReErased i32;<br align="left"/>let mut _162: &amp;ReErased i32;<br align="left"/>let mut _163: &amp;ReErased i32;<br align="left"/>debug amount =&gt; _1;<br align="left"/>debug obligation =&gt; _2;<br align="left"/>debug reserve =&gt; _3;<br align="left"/>debug liquidity_asset_mv =&gt; _4;<br align="left"/>debug min_accepted_net_value =&gt; _5;<br align="left"/>debug asset_mv =&gt; _6;<br align="left"/>debug new_total_bf_debt_mv =&gt; _9;<br align="left"/>debug total_deposited_mv =&gt; _18;<br align="left"/>debug new_liquidity_asset_mv =&gt; _25;<br align="left"/>debug res =&gt; _42;<br align="left"/>debug new_ltv =&gt; _81;<br align="left"/>debug res =&gt; _96;<br align="left"/>>;
    bb0__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = &amp;(*_3)<br/>StorageLive(_8)<br/>_8 = _1<br/></td></tr><tr><td align="left">_6 = calculate_market_value_from_liquidity_amount(move _7, move _8)</td></tr></table>>];
    bb1__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_7)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = ((*_2).8: u128)<br/></td></tr><tr><td align="left">_10 = FixedU128::&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;::from_bits(move _11)</td></tr></table>>];
    bb2__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>_13 = _6<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = &amp;(*_3)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_17 = ((*_2).14: u8)<br/>_16 = Ne(move _17, const _)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">_14 = reserve::Reserve::borrow_factor_f(move _15, move _16)</td></tr></table>>];
    bb3__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">_12 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as std::ops::Mul&gt;::mul(move _13, move _14)</td></tr></table>>];
    bb4__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">_9 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as Sub&gt;::sub(move _10, move _12)</td></tr></table>>];
    bb5__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_10)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_19 = ((*_2).6: u128)<br/></td></tr><tr><td align="left">_18 = FixedU128::&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;::from_bits(move _19)</td></tr></table>>];
    bb6__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_22 = &amp;_4<br/>StorageLive(_23)<br/>_163 = const _<br/>_23 = &amp;(*_163)<br/></td></tr><tr><td align="left">_21 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as PartialEq&lt;i32&gt;&gt;::ne(move _22, move _23)</td></tr></table>>];
    bb7__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">switchInt(move _21)</td></tr></table>>];
    bb8__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_22)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_26 = _4<br/>StorageLive(_27)<br/>_27 = _6<br/></td></tr><tr><td align="left">_25 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as Sub&gt;::sub(move _26, move _27)</td></tr></table>>];
    bb9__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_26)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_29 = &amp;_25<br/>StorageLive(_30)<br/>_162 = const _<br/>_30 = &amp;(*_162)<br/></td></tr><tr><td align="left">_28 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as PartialOrd&lt;i32&gt;&gt;::gt(move _29, move _30)</td></tr></table>>];
    bb10__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left">switchInt(move _28)</td></tr></table>>];
    bb11__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_29)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>_33 = &amp;_25<br/>StorageLive(_34)<br/>_34 = &amp;_5<br/></td></tr><tr><td align="left">_32 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as PartialOrd&gt;::lt(move _33, move _34)</td></tr></table>>];
    bb12__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left">switchInt(move _32)</td></tr></table>>];
    bb13__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_33)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>_157 = const _<br/>_46 = &amp;(*_157)<br/>_45 = &amp;(*_46)<br/>_44 = move _45 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_45)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>_56 = &amp;_25<br/></td></tr><tr><td align="left">_55 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as utils::fraction::FractionExtra&gt;::to_display(move _56)</td></tr></table>>];
    bb14__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>_54 = &amp;_55<br/>_53 = &amp;(*_54)<br/></td></tr><tr><td align="left">_52 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _53)</td></tr></table>>];
    bb15__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>_61 = &amp;(*_3)<br/></td></tr><tr><td align="left">_60 = reserve::Reserve::token_symbol(move _61)</td></tr></table>>];
    bb16__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>_59 = &amp;_60<br/>_58 = &amp;(*_59)<br/></td></tr><tr><td align="left">_57 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;&amp;str&gt;(move _58)</td></tr></table>>];
    bb17__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>_51 = [move _52, move _57]<br/>StorageDead(_57)<br/>StorageDead(_52)<br/>_50 = &amp;_51<br/>_49 = &amp;(*_50)<br/>_48 = move _49 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">_43 = Arguments::&lt;'_&gt;::new_v1(move _44, move _48)</td></tr></table>>];
    bb18__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">_42 = format(move _43)</td></tr></table>>];
    bb19__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_60)<br/>StorageDead(_59)<br/>StorageDead(_55)<br/>StorageDead(_54)<br/>StorageDead(_51)<br/>StorageDead(_50)<br/>StorageDead(_46)<br/>_41 = move _42<br/>StorageDead(_42)<br/>_40 = &amp;_41<br/>_39 = &amp;(*_40)<br/></td></tr><tr><td align="left">_38 = &lt;std::string::String as Deref&gt;::deref(move _39)</td></tr></table>>];
    bb20__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">_37 = &amp;(*_38)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">_36 = solana_program::log::sol_log(move _37)</td></tr></table>>];
    bb21__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/></td></tr><tr><td align="left">drop(_41)</td></tr></table>>];
    bb22__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_40)<br/>StorageDead(_38)<br/>StorageDead(_36)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>_156 = const _<br/>_65 = &amp;(*_156)<br/></td></tr><tr><td align="left">_64 = LendingError::name(move _65)</td></tr></table>>];
    bb23__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>_68 = LendingError::NetValueRemainingTooSmall<br/></td></tr><tr><td align="left">_67 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _68)</td></tr></table>>];
    bb24__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>_155 = const _<br/>_70 = &amp;(*_155)<br/></td></tr><tr><td align="left">_69 = &lt;LendingError as ToString&gt;::to_string(move _70)</td></tr></table>>];
    bb25__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>_74 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\lending_market\\lending_operations.rs&quot;, line: const 3075_u32 }<br/>_73 = anchor_lang::error::ErrorOrigin::Source(move _74)<br/>StorageDead(_74)<br/>_72 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _73)<br/>StorageDead(_73)<br/>StorageLive(_75)<br/>_75 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_63 = anchor_lang::error::AnchorError { error_name: move _64, error_code_number: move _67, error_msg: move _69, error_origin: move _72, compared_values: move _75 }<br/>StorageDead(_75)<br/>StorageDead(_72)<br/>StorageDead(_69)<br/>StorageDead(_67)<br/>StorageDead(_64)<br/></td></tr><tr><td align="left">_62 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _63)</td></tr></table>>];
    bb26__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _62)<br/>StorageDead(_62)<br/>StorageDead(_32)<br/>StorageDead(_28)<br/>StorageDead(_25)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">_20 = const ()<br/>StorageDead(_32)<br/>StorageDead(_28)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_22)<br/>_20 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_20)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>_78 = &amp;_18<br/>StorageLive(_79)<br/>_161 = const _<br/>_79 = &amp;(*_161)<br/></td></tr><tr><td align="left">_77 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as PartialOrd&lt;i32&gt;&gt;::gt(move _78, move _79)</td></tr></table>>];
    bb32__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left">switchInt(move _77)</td></tr></table>>];
    bb33__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageDead(_78)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>_82 = _9<br/>StorageLive(_83)<br/>_83 = _18<br/></td></tr><tr><td align="left">_81 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as std::ops::Div&gt;::div(move _82, move _83)</td></tr></table>>];
    bb34__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>StorageDead(_82)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>_85 = &amp;_81<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>_88 = &amp;(*_2)<br/></td></tr><tr><td align="left">_87 = obligation::Obligation::loan_to_value(move _88)</td></tr></table>>];
    bb35__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">_86 = &amp;_87<br/>StorageDead(_88)<br/></td></tr><tr><td align="left">_84 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as PartialOrd&gt;::gt(move _85, move _86)</td></tr></table>>];
    bb36__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left">switchInt(move _84)</td></tr></table>>];
    bb37__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>StorageDead(_86)<br/>StorageDead(_85)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>_160 = const _<br/>_100 = &amp;(*_160)<br/>_99 = &amp;(*_100)<br/>_98 = move _99 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_99)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>_110 = &amp;_81<br/></td></tr><tr><td align="left">_109 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as utils::fraction::FractionExtra&gt;::to_display(move _110)</td></tr></table>>];
    bb38__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/>_108 = &amp;_109<br/>_107 = &amp;(*_108)<br/></td></tr><tr><td align="left">_106 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _107)</td></tr></table>>];
    bb39__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>_117 = &amp;(*_2)<br/></td></tr><tr><td align="left">_116 = obligation::Obligation::unhealthy_loan_to_value(move _117)</td></tr></table>>];
    bb40__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">_115 = &amp;_116<br/>StorageDead(_117)<br/></td></tr><tr><td align="left">_114 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as utils::fraction::FractionExtra&gt;::to_display(move _115)</td></tr></table>>];
    bb41__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_115)<br/>_113 = &amp;_114<br/>_112 = &amp;(*_113)<br/></td></tr><tr><td align="left">_111 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _112)</td></tr></table>>];
    bb42__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>_122 = &amp;(*_3)<br/></td></tr><tr><td align="left">_121 = reserve::Reserve::token_symbol(move _122)</td></tr></table>>];
    bb43__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/>_120 = &amp;_121<br/>_119 = &amp;(*_120)<br/></td></tr><tr><td align="left">_118 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;&amp;str&gt;(move _119)</td></tr></table>>];
    bb44__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/>_105 = [move _106, move _111, move _118]<br/>StorageDead(_118)<br/>StorageDead(_111)<br/>StorageDead(_106)<br/>_104 = &amp;_105<br/>_103 = &amp;(*_104)<br/>_102 = move _103 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_103)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>_128 = core::fmt::rt::Alignment::Unknown<br/>StorageLive(_129)<br/>_129 = core::fmt::rt::Count::Is(const 2_usize)<br/>StorageLive(_130)<br/>_130 = core::fmt::rt::Count::Implied<br/></td></tr><tr><td align="left">_127 = core::fmt::rt::Placeholder::new(const 0_usize, const ' ', move _128, const 0_u32, move _129, move _130)</td></tr></table>>];
    bb45__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_130)<br/>StorageDead(_129)<br/>StorageDead(_128)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>_132 = core::fmt::rt::Alignment::Unknown<br/>StorageLive(_133)<br/>_133 = core::fmt::rt::Count::Is(const 2_usize)<br/>StorageLive(_134)<br/>_134 = core::fmt::rt::Count::Implied<br/></td></tr><tr><td align="left">_131 = core::fmt::rt::Placeholder::new(const 1_usize, const ' ', move _132, const 0_u32, move _133, move _134)</td></tr></table>>];
    bb46__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_134)<br/>StorageDead(_133)<br/>StorageDead(_132)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>_136 = core::fmt::rt::Alignment::Unknown<br/>StorageLive(_137)<br/>_137 = core::fmt::rt::Count::Implied<br/>StorageLive(_138)<br/>_138 = core::fmt::rt::Count::Implied<br/></td></tr><tr><td align="left">_135 = core::fmt::rt::Placeholder::new(const 2_usize, const ' ', move _136, const 0_u32, move _137, move _138)</td></tr></table>>];
    bb47__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/>StorageDead(_137)<br/>StorageDead(_136)<br/>_126 = [move _127, move _131, move _135]<br/>StorageDead(_135)<br/>StorageDead(_131)<br/>StorageDead(_127)<br/>_125 = &amp;_126<br/>_124 = &amp;(*_125)<br/>_123 = move _124 as &amp;[core::fmt::rt::Placeholder] (PointerCoercion(Unsize))<br/>StorageDead(_124)<br/>StorageLive(_139)<br/></td></tr><tr><td align="left">_139 = core::fmt::rt::UnsafeArg::new()</td></tr></table>>];
    bb48__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left">_97 = Arguments::&lt;'_&gt;::new_v1_formatted(move _98, move _102, move _123, move _139)</td></tr></table>>];
    bb49__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_139)<br/>StorageDead(_123)<br/>StorageDead(_102)<br/>StorageDead(_98)<br/></td></tr><tr><td align="left">_96 = format(move _97)</td></tr></table>>];
    bb50__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>StorageDead(_126)<br/>StorageDead(_125)<br/>StorageDead(_121)<br/>StorageDead(_120)<br/>StorageDead(_116)<br/>StorageDead(_114)<br/>StorageDead(_113)<br/>StorageDead(_109)<br/>StorageDead(_108)<br/>StorageDead(_105)<br/>StorageDead(_104)<br/>StorageDead(_100)<br/>_95 = move _96<br/>StorageDead(_96)<br/>_94 = &amp;_95<br/>_93 = &amp;(*_94)<br/></td></tr><tr><td align="left">_92 = &lt;std::string::String as Deref&gt;::deref(move _93)</td></tr></table>>];
    bb51__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">_91 = &amp;(*_92)<br/>StorageDead(_93)<br/></td></tr><tr><td align="left">_90 = solana_program::log::sol_log(move _91)</td></tr></table>>];
    bb52__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/></td></tr><tr><td align="left">drop(_95)</td></tr></table>>];
    bb53__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/>StorageDead(_94)<br/>StorageDead(_92)<br/>StorageDead(_90)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>_159 = const _<br/>_143 = &amp;(*_159)<br/></td></tr><tr><td align="left">_142 = LendingError::name(move _143)</td></tr></table>>];
    bb54__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_143)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>_146 = LendingError::WorseLtvBlocked<br/></td></tr><tr><td align="left">_145 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _146)</td></tr></table>>];
    bb55__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_146)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>_158 = const _<br/>_148 = &amp;(*_158)<br/></td></tr><tr><td align="left">_147 = &lt;LendingError as ToString&gt;::to_string(move _148)</td></tr></table>>];
    bb56__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_148)<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>StorageLive(_152)<br/>_152 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\lending_market\\lending_operations.rs&quot;, line: const 3090_u32 }<br/>_151 = anchor_lang::error::ErrorOrigin::Source(move _152)<br/>StorageDead(_152)<br/>_150 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _151)<br/>StorageDead(_151)<br/>StorageLive(_153)<br/>_153 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_141 = anchor_lang::error::AnchorError { error_name: move _142, error_code_number: move _145, error_msg: move _147, error_origin: move _150, compared_values: move _153 }<br/>StorageDead(_153)<br/>StorageDead(_150)<br/>StorageDead(_147)<br/>StorageDead(_145)<br/>StorageDead(_142)<br/></td></tr><tr><td align="left">_140 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _141)</td></tr></table>>];
    bb57__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_141)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _140)<br/>StorageDead(_140)<br/>StorageDead(_84)<br/>StorageDead(_81)<br/>StorageDead(_77)<br/>StorageDead(_76)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb58__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>StorageDead(_86)<br/>StorageDead(_85)<br/>_76 = const ()<br/>StorageDead(_84)<br/>StorageDead(_81)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageDead(_78)<br/>_76 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb60__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>StorageDead(_76)<br/>StorageLive(_154)<br/>_154 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _154)<br/>StorageDead(_154)<br/>StorageDead(_18)<br/>StorageDead(_9)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb61__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_9)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left">return</td></tr></table>>];
    bb63__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">63 (cleanup)</td></tr><tr><td align="left">drop(_142)</td></tr></table>>];
    bb64__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">64 (cleanup)</td></tr><tr><td align="left">drop(_95)</td></tr></table>>];
    bb65__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">65 (cleanup)</td></tr><tr><td align="left">drop(_64)</td></tr></table>>];
    bb66__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">66 (cleanup)</td></tr><tr><td align="left">drop(_41)</td></tr></table>>];
    bb67__0_1386 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">67 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_1386 -> bb1__0_1386 [label="return"];
    bb1__0_1386 -> bb2__0_1386 [label="return"];
    bb2__0_1386 -> bb3__0_1386 [label="return"];
    bb3__0_1386 -> bb4__0_1386 [label="return"];
    bb4__0_1386 -> bb5__0_1386 [label="return"];
    bb5__0_1386 -> bb6__0_1386 [label="return"];
    bb6__0_1386 -> bb7__0_1386 [label="return"];
    bb7__0_1386 -> bb30__0_1386 [label="0"];
    bb7__0_1386 -> bb8__0_1386 [label="otherwise"];
    bb8__0_1386 -> bb9__0_1386 [label="return"];
    bb9__0_1386 -> bb10__0_1386 [label="return"];
    bb10__0_1386 -> bb28__0_1386 [label="0"];
    bb10__0_1386 -> bb11__0_1386 [label="otherwise"];
    bb11__0_1386 -> bb12__0_1386 [label="return"];
    bb12__0_1386 -> bb27__0_1386 [label="0"];
    bb12__0_1386 -> bb13__0_1386 [label="otherwise"];
    bb13__0_1386 -> bb14__0_1386 [label="return"];
    bb14__0_1386 -> bb15__0_1386 [label="return"];
    bb15__0_1386 -> bb16__0_1386 [label="return"];
    bb16__0_1386 -> bb17__0_1386 [label="return"];
    bb17__0_1386 -> bb18__0_1386 [label="return"];
    bb18__0_1386 -> bb19__0_1386 [label="return"];
    bb19__0_1386 -> bb20__0_1386 [label="return"];
    bb19__0_1386 -> bb66__0_1386 [label="unwind"];
    bb20__0_1386 -> bb21__0_1386 [label="return"];
    bb20__0_1386 -> bb66__0_1386 [label="unwind"];
    bb21__0_1386 -> bb22__0_1386 [label="return"];
    bb21__0_1386 -> bb67__0_1386 [label="unwind"];
    bb22__0_1386 -> bb23__0_1386 [label="return"];
    bb23__0_1386 -> bb24__0_1386 [label="return"];
    bb23__0_1386 -> bb65__0_1386 [label="unwind"];
    bb24__0_1386 -> bb25__0_1386 [label="return"];
    bb24__0_1386 -> bb65__0_1386 [label="unwind"];
    bb25__0_1386 -> bb26__0_1386 [label="return"];
    bb25__0_1386 -> bb67__0_1386 [label="unwind"];
    bb26__0_1386 -> bb61__0_1386 [label=""];
    bb27__0_1386 -> bb29__0_1386 [label=""];
    bb28__0_1386 -> bb29__0_1386 [label=""];
    bb29__0_1386 -> bb31__0_1386 [label=""];
    bb30__0_1386 -> bb31__0_1386 [label=""];
    bb31__0_1386 -> bb32__0_1386 [label="return"];
    bb32__0_1386 -> bb59__0_1386 [label="0"];
    bb32__0_1386 -> bb33__0_1386 [label="otherwise"];
    bb33__0_1386 -> bb34__0_1386 [label="return"];
    bb34__0_1386 -> bb35__0_1386 [label="return"];
    bb35__0_1386 -> bb36__0_1386 [label="return"];
    bb36__0_1386 -> bb58__0_1386 [label="0"];
    bb36__0_1386 -> bb37__0_1386 [label="otherwise"];
    bb37__0_1386 -> bb38__0_1386 [label="return"];
    bb38__0_1386 -> bb39__0_1386 [label="return"];
    bb39__0_1386 -> bb40__0_1386 [label="return"];
    bb40__0_1386 -> bb41__0_1386 [label="return"];
    bb41__0_1386 -> bb42__0_1386 [label="return"];
    bb42__0_1386 -> bb43__0_1386 [label="return"];
    bb43__0_1386 -> bb44__0_1386 [label="return"];
    bb44__0_1386 -> bb45__0_1386 [label="return"];
    bb45__0_1386 -> bb46__0_1386 [label="return"];
    bb46__0_1386 -> bb47__0_1386 [label="return"];
    bb47__0_1386 -> bb48__0_1386 [label="return"];
    bb48__0_1386 -> bb49__0_1386 [label="return"];
    bb49__0_1386 -> bb50__0_1386 [label="return"];
    bb50__0_1386 -> bb51__0_1386 [label="return"];
    bb50__0_1386 -> bb64__0_1386 [label="unwind"];
    bb51__0_1386 -> bb52__0_1386 [label="return"];
    bb51__0_1386 -> bb64__0_1386 [label="unwind"];
    bb52__0_1386 -> bb53__0_1386 [label="return"];
    bb52__0_1386 -> bb67__0_1386 [label="unwind"];
    bb53__0_1386 -> bb54__0_1386 [label="return"];
    bb54__0_1386 -> bb55__0_1386 [label="return"];
    bb54__0_1386 -> bb63__0_1386 [label="unwind"];
    bb55__0_1386 -> bb56__0_1386 [label="return"];
    bb55__0_1386 -> bb63__0_1386 [label="unwind"];
    bb56__0_1386 -> bb57__0_1386 [label="return"];
    bb56__0_1386 -> bb67__0_1386 [label="unwind"];
    bb57__0_1386 -> bb61__0_1386 [label=""];
    bb58__0_1386 -> bb60__0_1386 [label=""];
    bb59__0_1386 -> bb60__0_1386 [label=""];
    bb60__0_1386 -> bb62__0_1386 [label=""];
    bb61__0_1386 -> bb62__0_1386 [label=""];
    bb63__0_1386 -> bb67__0_1386 [label="return"];
    bb64__0_1386 -> bb67__0_1386 [label="return"];
    bb65__0_1386 -> bb67__0_1386 [label="return"];
    bb66__0_1386 -> bb67__0_1386 [label="return"];
}
