digraph Mir_0_2456 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;utils::fraction::BigFraction as std::ops::Div&lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;&gt;&gt;::div(_1: utils::fraction::BigFraction, _2: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;) -&gt; utils::fraction::BigFraction<br align="left"/>let _3: utils::fraction::uint_types::U256;<br align="left"/>let mut _4: utils::fraction::uint_types::U256;<br align="left"/>let _5: utils::fraction::uint_types::U256;<br align="left"/>let mut _6: utils::fraction::uint_types::U256;<br align="left"/>let mut _7: u128;<br align="left"/>let mut _8: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _9: utils::fraction::uint_types::U256;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug rhs =&gt; _2;<br align="left"/>debug extra_scaled =&gt; _3;<br align="left"/>debug res =&gt; _5;<br align="left"/>>;
    bb0__0_2456 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>_4 = (_1.0: utils::fraction::uint_types::U256)<br/></td></tr><tr><td align="left">_3 = &lt;uint_types::U256 as Shl&lt;u32&gt;&gt;::shl(move _4, const _)</td></tr></table>>];
    bb1__0_2456 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = _3<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = _2<br/></td></tr><tr><td align="left">_7 = FixedU128::&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;::to_bits(move _8)</td></tr></table>>];
    bb2__0_2456 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/></td></tr><tr><td align="left">_5 = &lt;uint_types::U256 as std::ops::Div&lt;u128&gt;&gt;::div(move _6, move _7)</td></tr></table>>];
    bb3__0_2456 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_6)<br/>StorageLive(_9)<br/>_9 = _5<br/>_0 = utils::fraction::BigFraction(move _9)<br/>StorageDead(_9)<br/>StorageDead(_5)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2456 -> bb1__0_2456 [label="return"];
    bb1__0_2456 -> bb2__0_2456 [label="return"];
    bb2__0_2456 -> bb3__0_2456 [label="return"];
}
