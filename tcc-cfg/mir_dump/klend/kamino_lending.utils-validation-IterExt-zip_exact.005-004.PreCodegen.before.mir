// MIR for `validation::IterExt::zip_exact` before PreCodegen

fn validation::IterExt::zip_exact(_1: Self, _2: impl IntoIterator<Item = R::Item, IntoIter = R>) -> LengthCheckingZipIterator<Self, R> {
    debug self => _1;
    debug rights => _2;
    let mut _0: utils::validation::LengthCheckingZipIterator<Self, R>;
    let mut _3: Self;
    let mut _4: impl IntoIterator<Item = R::Item, IntoIter = R>;

    bb0: {
        StorageLive(_3);
        _3 = move _1;
        StorageLive(_4);
        _4 = move _2;
        _0 = zip_exact::<Self, R, Self, impl IntoIterator<Item = R::Item, IntoIter = R>>(move _3, move _4) -> [return: bb1, unwind: bb2];
    }

    bb1: {
        StorageDead(_4);
        StorageDead(_3);
        return;
    }

    bb2 (cleanup): {
        resume;
    }
}
