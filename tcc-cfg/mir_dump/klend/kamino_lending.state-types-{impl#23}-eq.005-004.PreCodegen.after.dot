digraph Mir_0_10658 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;state::types::LiquidationReason as PartialEq&gt;::eq(_1: &amp;ReErased state::types::LiquidationReason, _2: &amp;ReErased state::types::LiquidationReason) -&gt; bool<br align="left"/>let _3: isize;<br align="left"/>let mut _4: &amp;ReErased state::types::LiquidationReason;<br align="left"/>let _5: isize;<br align="left"/>let mut _6: &amp;ReErased state::types::LiquidationReason;<br align="left"/>let mut _7: bool;<br align="left"/>let mut _8: isize;<br align="left"/>let mut _9: isize;<br align="left"/>let mut _10: (&amp;ReErased state::types::LiquidationReason, &amp;ReErased state::types::LiquidationReason);<br align="left"/>let mut _11: &amp;ReErased state::types::LiquidationReason;<br align="left"/>let mut _12: &amp;ReErased state::types::LiquidationReason;<br align="left"/>let mut _13: isize;<br align="left"/>let mut _14: isize;<br align="left"/>let _15: &amp;ReErased usize;<br align="left"/>let _16: &amp;ReErased usize;<br align="left"/>let mut _17: usize;<br align="left"/>let mut _18: usize;<br align="left"/>let mut _19: &amp;ReErased state::types::LiquidationReason;<br align="left"/>let mut _20: &amp;ReErased state::types::LiquidationReason;<br align="left"/>let mut _21: &amp;ReErased state::types::LiquidationReason;<br align="left"/>let mut _22: &amp;ReErased state::types::LiquidationReason;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug other =&gt; _2;<br align="left"/>debug __self_tag =&gt; _3;<br align="left"/>debug __arg1_tag =&gt; _5;<br align="left"/>debug __self_0 =&gt; _15;<br align="left"/>debug __arg1_0 =&gt; _16;<br align="left"/>>;
    bb0__0_10658 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>_4 = &amp;(*_1)<br/>_3 = discriminant((*_4))<br/>StorageDead(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = &amp;(*_2)<br/>_5 = discriminant((*_6))<br/>StorageDead(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = _3<br/>StorageLive(_9)<br/>_9 = _5<br/>_7 = Eq(move _8, move _9)<br/></td></tr><tr><td align="left">switchInt(move _7)</td></tr></table>>];
    bb1__0_10658 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_8)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = _1<br/>StorageLive(_12)<br/>_12 = _2<br/>_10 = (move _11, move _12)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>_19 = deref_copy (_10.0: &amp;state::types::LiquidationReason)<br/>_14 = discriminant((*_19))<br/></td></tr><tr><td align="left">switchInt(move _14)</td></tr></table>>];
    bb2__0_10658 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_8)<br/>_0 = const false<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb3__0_10658 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">_0 = const true<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb4__0_10658 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">_20 = deref_copy (_10.1: &amp;state::types::LiquidationReason)<br/>_13 = discriminant((*_20))<br/></td></tr><tr><td align="left">switchInt(move _13)</td></tr></table>>];
    bb5__0_10658 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_15)<br/>_21 = deref_copy (_10.0: &amp;state::types::LiquidationReason)<br/>_15 = &amp;(((*_21) as ObligationOrder).0: usize)<br/>StorageLive(_16)<br/>_22 = deref_copy (_10.1: &amp;state::types::LiquidationReason)<br/>_16 = &amp;(((*_22) as ObligationOrder).0: usize)<br/>StorageLive(_17)<br/>_17 = (*_15)<br/>StorageLive(_18)<br/>_18 = (*_16)<br/>_0 = Eq(move _17, move _18)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb6__0_10658 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_10658 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_5)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_10658 -> bb2__0_10658 [label="0"];
    bb0__0_10658 -> bb1__0_10658 [label="otherwise"];
    bb1__0_10658 -> bb4__0_10658 [label="3"];
    bb1__0_10658 -> bb3__0_10658 [label="otherwise"];
    bb2__0_10658 -> bb7__0_10658 [label=""];
    bb3__0_10658 -> bb6__0_10658 [label=""];
    bb4__0_10658 -> bb5__0_10658 [label="3"];
    bb4__0_10658 -> bb3__0_10658 [label="otherwise"];
    bb5__0_10658 -> bb6__0_10658 [label=""];
    bb6__0_10658 -> bb7__0_10658 [label=""];
}
