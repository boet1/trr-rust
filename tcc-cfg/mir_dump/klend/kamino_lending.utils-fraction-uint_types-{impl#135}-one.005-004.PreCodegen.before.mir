// MIR for `uint_types::<impl at C:\Users\Yellow Letter HQ\.cargo\registry\src\index.crates.io-6f17d22bba15001f\uint-0.9.5\src\uint.rs:573:3: 573:13>::one` before PreCodegen

fn uint_types::<impl at C:\Users\Yellow Letter HQ\.cargo\registry\src\index.crates.io-6f17d22bba15001f\uint-0.9.5\src\uint.rs:573:3: 573:13>::one() -> uint_types::U128 {
    let mut _0: utils::fraction::uint_types::U128;
    let mut _1: [u64; 2];
    let _2: usize;
    let mut _3: usize;
    let mut _4: bool;
    let mut _5: [u64; 2];
    scope 1 {
        debug words => _1;
    }

    bb0: {
        StorageLive(_1);
        _1 = [const 0_u64; 2];
        StorageLive(_2);
        _2 = const 0_usize;
        _3 = Len(_1);
        _4 = Lt(_2, _3);
        assert(move _4, "index out of bounds: the length is {} but the index is {}", move _3, _2) -> [success: bb1, unwind continue];
    }

    bb1: {
        _1[_2] = const 1_u64;
        StorageDead(_2);
        StorageLive(_5);
        _5 = _1;
        _0 = uint_types::U128(move _5);
        StorageDead(_5);
        StorageDead(_1);
        return;
    }
}
