digraph Mir_0_13016 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;impl From&lt;LendingError&gt; for anchor_lang::error::Error&gt;::from(_1: LendingError) -&gt; anchor_lang::error::Error<br align="left"/>let mut _2: anchor_lang::error::AnchorError;<br align="left"/>let mut _3: std::string::String;<br align="left"/>let mut _4: &amp;ReErased LendingError;<br align="left"/>let mut _5: u32;<br align="left"/>let mut _6: LendingError;<br align="left"/>let mut _7: std::string::String;<br align="left"/>let mut _8: &amp;ReErased LendingError;<br align="left"/>let mut _9: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _10: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>debug error_code =&gt; _1;<br align="left"/>>;
    bb0__0_13016 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>_4 = &amp;_1<br/></td></tr><tr><td align="left">_3 = LendingError::name(move _4)</td></tr></table>>];
    bb1__0_13016 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = _1<br/></td></tr><tr><td align="left">_5 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _6)</td></tr></table>>];
    bb2__0_13016 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = &amp;_1<br/></td></tr><tr><td align="left">_7 = &lt;LendingError as ToString&gt;::to_string(move _8)</td></tr></table>>];
    bb3__0_13016 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageLive(_9)<br/>_9 = std::option::Option::&lt;ErrorOrigin&gt;::None<br/>StorageLive(_10)<br/>_10 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_2 = anchor_lang::error::AnchorError { error_name: move _3, error_code_number: move _5, error_msg: move _7, error_origin: move _9, compared_values: move _10 }<br/>StorageDead(_10)<br/>StorageDead(_9)<br/>StorageDead(_7)<br/>StorageDead(_5)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">_0 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _2)</td></tr></table>>];
    bb4__0_13016 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_2)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb5__0_13016 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">5 (cleanup)</td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb6__0_13016 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">6 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_13016 -> bb1__0_13016 [label="return"];
    bb1__0_13016 -> bb2__0_13016 [label="return"];
    bb1__0_13016 -> bb5__0_13016 [label="unwind"];
    bb2__0_13016 -> bb3__0_13016 [label="return"];
    bb2__0_13016 -> bb5__0_13016 [label="unwind"];
    bb3__0_13016 -> bb4__0_13016 [label="return"];
    bb3__0_13016 -> bb6__0_13016 [label="unwind"];
    bb5__0_13016 -> bb6__0_13016 [label="return"];
}
