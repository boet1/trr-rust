digraph Mir_0_321 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn handlers::handler_init_referrer_state_and_short_url::process(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, handlers::handler_init_referrer_state_and_short_url::InitReferrerStateAndShortUrl&lt;ReErased&gt;&gt;, _2: std::string::String) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: bool;<br align="left"/>let mut _5: &amp;ReErased mut std::str::Chars&lt;ReErased&gt;;<br align="left"/>let mut _6: std::str::Chars&lt;ReErased&gt;;<br align="left"/>let mut _7: &amp;ReErased str;<br align="left"/>let _8: &amp;ReErased str;<br align="left"/>let mut _9: &amp;ReErased std::string::String;<br align="left"/>let mut _10: Closure(DefId(0:4142 ~ kamino_lending[6389]::handlers::handler_init_referrer_state_and_short_url::process::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((char,)) -&gt; bool, []), ()]);<br align="left"/>let mut _11: !;<br align="left"/>let mut _12: anchor_lang::error::Error;<br align="left"/>let mut _13: anchor_lang::error::AnchorError;<br align="left"/>let mut _14: std::string::String;<br align="left"/>let mut _15: &amp;ReErased LendingError;<br align="left"/>let _16: LendingError;<br align="left"/>let mut _17: u32;<br align="left"/>let mut _18: LendingError;<br align="left"/>let mut _19: std::string::String;<br align="left"/>let mut _20: &amp;ReErased LendingError;<br align="left"/>let _21: LendingError;<br align="left"/>let mut _22: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _23: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _24: anchor_lang::error::Source;<br align="left"/>let mut _25: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let mut _26: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _27: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _28: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _29: &amp;ReErased mut state::referral::ShortUrl;<br align="left"/>let mut _30: &amp;ReErased mut anchor_lang::prelude::Account&lt;ReErased, state::referral::ShortUrl&gt;;<br align="left"/>let mut _31: std::string::String;<br align="left"/>let mut _32: &amp;ReErased mut state::referral::ShortUrl;<br align="left"/>let mut _33: &amp;ReErased mut anchor_lang::prelude::Account&lt;ReErased, state::referral::ShortUrl&gt;;<br align="left"/>let _34: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::referral::ReferrerState&gt;;<br align="left"/>let mut _35: std::cell::RefMut&lt;ReErased, state::referral::ReferrerState&gt;;<br align="left"/>let mut _36: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::RefMut&lt;ReErased, state::referral::ReferrerState&gt;&gt;;<br align="left"/>let mut _37: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::referral::ReferrerState&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _38: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::referral::ReferrerState&gt;;<br align="left"/>let mut _39: isize;<br align="left"/>let _40: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _41: !;<br align="left"/>let mut _42: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _43: std::cell::RefMut&lt;ReErased, state::referral::ReferrerState&gt;;<br align="left"/>let mut _44: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _45: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::referral::ShortUrl&gt;;<br align="left"/>let mut _46: &amp;ReErased mut state::referral::ReferrerState;<br align="left"/>let mut _47: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::referral::ReferrerState&gt;;<br align="left"/>let mut _48: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _49: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _50: &amp;ReErased mut state::referral::ReferrerState;<br align="left"/>let mut _51: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::referral::ReferrerState&gt;;<br align="left"/>let mut _52: ();<br align="left"/>let mut _53: &amp;ReErased LendingError;<br align="left"/>let mut _54: &amp;ReErased LendingError;<br align="left"/>let mut _55: &amp;ReErased mut handlers::handler_init_referrer_state_and_short_url::InitReferrerStateAndShortUrl&lt;ReErased&gt;;<br align="left"/>let mut _56: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _57: &amp;ReErased mut handlers::handler_init_referrer_state_and_short_url::InitReferrerStateAndShortUrl&lt;ReErased&gt;;<br align="left"/>let mut _58: &amp;ReErased mut handlers::handler_init_referrer_state_and_short_url::InitReferrerStateAndShortUrl&lt;ReErased&gt;;<br align="left"/>let mut _59: &amp;ReErased mut handlers::handler_init_referrer_state_and_short_url::InitReferrerStateAndShortUrl&lt;ReErased&gt;;<br align="left"/>let mut _60: &amp;ReErased mut handlers::handler_init_referrer_state_and_short_url::InitReferrerStateAndShortUrl&lt;ReErased&gt;;<br align="left"/>let mut _61: &amp;ReErased mut handlers::handler_init_referrer_state_and_short_url::InitReferrerStateAndShortUrl&lt;ReErased&gt;;<br align="left"/>let mut _62: bool;<br align="left"/>let mut _63: bool;<br align="left"/>let mut _64: isize;<br align="left"/>let mut _65: isize;<br align="left"/>let mut _66: isize;<br align="left"/>let mut _67: isize;<br align="left"/>let mut _68: isize;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug short_url =&gt; _2;<br align="left"/>debug referrer_state =&gt; _34;<br align="left"/>debug residual =&gt; _40;<br align="left"/>debug val =&gt; _43;<br align="left"/>>;
    bb0__0_321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_62 = const false<br/>_63 = const false<br/>_62 = const true<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = &amp;_2<br/></td></tr><tr><td align="left">_8 = &lt;std::string::String as Deref&gt;::deref(move _9)</td></tr></table>>];
    bb1__0_321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_7 = &amp;(*_8)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">_6 = core::str::&lt;impl str&gt;::chars(move _7)</td></tr></table>>];
    bb2__0_321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">_5 = &amp;mut _6<br/>StorageDead(_7)<br/>StorageLive(_10)<br/>_10 = {closure@programs\klend\src\handlers\handler_init_referrer_state_and_short_url.rs:15:18: 15:24}<br/></td></tr><tr><td align="left">_4 = &lt;Chars&lt;'_&gt; as Iterator&gt;::all::&lt;{closure@programs\klend\src\handlers\handler_init_referrer_state_and_short_url.rs:15:18: 15:24}&gt;(move _5, move _10)</td></tr></table>>];
    bb3__0_321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left">switchInt(move _4)</td></tr></table>>];
    bb4__0_321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_5)<br/>StorageDead(_8)<br/>StorageDead(_6)<br/>_3 = const ()<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>_55 = deref_copy (_1.1: &amp;mut handlers::handler_init_referrer_state_and_short_url::InitReferrerStateAndShortUrl&lt;'_&gt;)<br/>_28 = &amp;((*_55).0: anchor_lang::prelude::Signer&lt;'_&gt;)<br/></td></tr><tr><td align="left">_27 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as Deref&gt;::deref(move _28)</td></tr></table>>];
    bb5__0_321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_5)<br/>StorageDead(_8)<br/>StorageDead(_6)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_54 = const _<br/>_15 = &amp;(*_54)<br/></td></tr><tr><td align="left">_14 = LendingError::name(move _15)</td></tr></table>>];
    bb6__0_321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = LendingError::ShortUrlNotAsciiAlphanumeric<br/></td></tr><tr><td align="left">_17 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _18)</td></tr></table>>];
    bb7__0_321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_53 = const _<br/>_20 = &amp;(*_53)<br/></td></tr><tr><td align="left">_19 = &lt;LendingError as ToString&gt;::to_string(move _20)</td></tr></table>>];
    bb8__0_321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_24 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\handlers\\handler_init_referrer_state_and_short_url.rs&quot;, line: const 12_u32 }<br/>_23 = anchor_lang::error::ErrorOrigin::Source(move _24)<br/>StorageDead(_24)<br/>_22 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _23)<br/>StorageDead(_23)<br/>StorageLive(_25)<br/>_25 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_13 = anchor_lang::error::AnchorError { error_name: move _14, error_code_number: move _17, error_msg: move _19, error_origin: move _22, compared_values: move _25 }<br/>StorageDead(_25)<br/>StorageDead(_22)<br/>StorageDead(_19)<br/>StorageDead(_17)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">_12 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _13)</td></tr></table>>];
    bb9__0_321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _12)<br/>StorageDead(_12)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>_56 = deref_copy ((*_27).0: &amp;anchor_lang::prelude::Pubkey)<br/>_26 = (*_56)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>_57 = deref_copy (_1.1: &amp;mut handlers::handler_init_referrer_state_and_short_url::InitReferrerStateAndShortUrl&lt;'_&gt;)<br/>_30 = &amp;mut ((*_57).2: anchor_lang::prelude::Account&lt;'_, state::referral::ShortUrl&gt;)<br/></td></tr><tr><td align="left">_29 = &lt;anchor_lang::prelude::Account&lt;'_, referral::ShortUrl&gt; as DerefMut&gt;::deref_mut(move _30)</td></tr></table>>];
    bb11__0_321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>((*_29).0: anchor_lang::prelude::Pubkey) = move _26<br/>StorageDead(_26)<br/>StorageDead(_29)<br/>StorageDead(_27)<br/>StorageLive(_31)<br/>_62 = const false<br/>_63 = const true<br/>_31 = move _2<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>_58 = deref_copy (_1.1: &amp;mut handlers::handler_init_referrer_state_and_short_url::InitReferrerStateAndShortUrl&lt;'_&gt;)<br/>_33 = &amp;mut ((*_58).2: anchor_lang::prelude::Account&lt;'_, state::referral::ShortUrl&gt;)<br/></td></tr><tr><td align="left">_32 = &lt;anchor_lang::prelude::Account&lt;'_, referral::ShortUrl&gt; as DerefMut&gt;::deref_mut(move _33)</td></tr></table>>];
    bb12__0_321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/></td></tr><tr><td align="left">drop(((*_32).1: std::string::String))</td></tr></table>>];
    bb13__0_321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">_63 = const false<br/>((*_32).1: std::string::String) = move _31<br/>_63 = const false<br/>StorageDead(_31)<br/>StorageDead(_32)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>_59 = deref_copy (_1.1: &amp;mut handlers::handler_init_referrer_state_and_short_url::InitReferrerStateAndShortUrl&lt;'_&gt;)<br/>_38 = &amp;((*_59).1: anchor_lang::prelude::AccountLoader&lt;'_, state::referral::ReferrerState&gt;)<br/></td></tr><tr><td align="left">_37 = anchor_lang::prelude::AccountLoader::&lt;'_, referral::ReferrerState&gt;::load_init(move _38)</td></tr></table>>];
    bb14__0_321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">14 (cleanup)</td></tr><tr><td align="left" balign="left">_63 = const false<br/>((*_32).1: std::string::String) = move _31<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/></td></tr><tr><td align="left">_36 = &lt;std::result::Result&lt;RefMut&lt;'_, referral::ReferrerState&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _37)</td></tr></table>>];
    bb16__0_321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>_39 = discriminant(_36)<br/></td></tr><tr><td align="left">switchInt(move _39)</td></tr></table>>];
    bb17__0_321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_43)<br/>_43 = move ((_36 as Continue).0: std::cell::RefMut&lt;'_, state::referral::ReferrerState&gt;)<br/>_35 = move _43<br/>StorageDead(_43)<br/>_34 = &amp;mut _35<br/>_64 = discriminant(_36)<br/>StorageDead(_36)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>_60 = deref_copy (_1.1: &amp;mut handlers::handler_init_referrer_state_and_short_url::InitReferrerStateAndShortUrl&lt;'_&gt;)<br/>_45 = &amp;((*_60).2: anchor_lang::prelude::Account&lt;'_, state::referral::ShortUrl&gt;)<br/></td></tr><tr><td align="left">_44 = &lt;anchor_lang::prelude::Account&lt;'_, referral::ShortUrl&gt; as anchor_lang::Key&gt;::key(move _45)</td></tr></table>>];
    bb18__0_321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb19__0_321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_40)<br/>_40 = move ((_36 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_42)<br/>_42 = move _40<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _42)</td></tr></table>>];
    bb20__0_321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_40)<br/>_66 = discriminant(_36)<br/>StorageDead(_36)<br/>StorageDead(_35)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>_47 = &amp;mut (*_34)<br/></td></tr><tr><td align="left">_46 = &lt;RefMut&lt;'_, referral::ReferrerState&gt; as DerefMut&gt;::deref_mut(move _47)</td></tr></table>>];
    bb22__0_321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>((*_46).0: anchor_lang::prelude::Pubkey) = move _44<br/>StorageDead(_44)<br/>StorageDead(_46)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>_61 = deref_copy (_1.1: &amp;mut handlers::handler_init_referrer_state_and_short_url::InitReferrerStateAndShortUrl&lt;'_&gt;)<br/>_49 = &amp;((*_61).0: anchor_lang::prelude::Signer&lt;'_&gt;)<br/></td></tr><tr><td align="left">_48 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::Key&gt;::key(move _49)</td></tr></table>>];
    bb23__0_321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>_51 = &amp;mut (*_34)<br/></td></tr><tr><td align="left">_50 = &lt;RefMut&lt;'_, referral::ReferrerState&gt; as DerefMut&gt;::deref_mut(move _51)</td></tr></table>>];
    bb24__0_321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>((*_50).1: anchor_lang::prelude::Pubkey) = move _48<br/>StorageDead(_48)<br/>StorageDead(_50)<br/>StorageLive(_52)<br/>_52 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _52)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">drop(_35)</td></tr></table>>];
    bb25__0_321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left">return</td></tr></table>>];
    bb27__0_321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">27 (cleanup)</td></tr><tr><td align="left">drop(_35)</td></tr></table>>];
    bb28__0_321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">28 (cleanup)</td></tr><tr><td align="left">drop(_14)</td></tr></table>>];
    bb29__0_321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">29 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb30__0_321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left">drop(_2)</td></tr></table>>];
    bb31__0_321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left">switchInt(_62)</td></tr></table>>];
    bb32__0_321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">32 (cleanup)</td></tr><tr><td align="left" balign="left">_68 = discriminant(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">33 (cleanup)</td></tr><tr><td align="left">drop(_31)</td></tr></table>>];
    bb34__0_321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">34 (cleanup)</td></tr><tr><td align="left">switchInt(_63)</td></tr></table>>];
    bb35__0_321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">35 (cleanup)</td></tr><tr><td align="left">drop(_2)</td></tr></table>>];
    bb36__0_321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">36 (cleanup)</td></tr><tr><td align="left">switchInt(_62)</td></tr></table>>];
    bb0__0_321 -> bb1__0_321 [label="return"];
    bb0__0_321 -> bb36__0_321 [label="unwind"];
    bb1__0_321 -> bb2__0_321 [label="return"];
    bb1__0_321 -> bb36__0_321 [label="unwind"];
    bb2__0_321 -> bb3__0_321 [label="return"];
    bb2__0_321 -> bb36__0_321 [label="unwind"];
    bb3__0_321 -> bb5__0_321 [label="0"];
    bb3__0_321 -> bb4__0_321 [label="otherwise"];
    bb4__0_321 -> bb10__0_321 [label="return"];
    bb4__0_321 -> bb36__0_321 [label="unwind"];
    bb5__0_321 -> bb6__0_321 [label="return"];
    bb5__0_321 -> bb36__0_321 [label="unwind"];
    bb6__0_321 -> bb7__0_321 [label="return"];
    bb6__0_321 -> bb28__0_321 [label="unwind"];
    bb7__0_321 -> bb8__0_321 [label="return"];
    bb7__0_321 -> bb28__0_321 [label="unwind"];
    bb8__0_321 -> bb9__0_321 [label="return"];
    bb8__0_321 -> bb36__0_321 [label="unwind"];
    bb9__0_321 -> bb31__0_321 [label=""];
    bb10__0_321 -> bb11__0_321 [label="return"];
    bb10__0_321 -> bb36__0_321 [label="unwind"];
    bb11__0_321 -> bb12__0_321 [label="return"];
    bb11__0_321 -> bb34__0_321 [label="unwind"];
    bb12__0_321 -> bb13__0_321 [label="return"];
    bb12__0_321 -> bb14__0_321 [label="unwind"];
    bb13__0_321 -> bb15__0_321 [label="return"];
    bb13__0_321 -> bb36__0_321 [label="unwind"];
    bb14__0_321 -> bb34__0_321 [label=""];
    bb15__0_321 -> bb16__0_321 [label="return"];
    bb15__0_321 -> bb36__0_321 [label="unwind"];
    bb16__0_321 -> bb17__0_321 [label="0"];
    bb16__0_321 -> bb19__0_321 [label="1"];
    bb16__0_321 -> bb18__0_321 [label="otherwise"];
    bb17__0_321 -> bb21__0_321 [label="return"];
    bb17__0_321 -> bb27__0_321 [label="unwind"];
    bb19__0_321 -> bb20__0_321 [label="return"];
    bb19__0_321 -> bb32__0_321 [label="unwind"];
    bb20__0_321 -> bb31__0_321 [label=""];
    bb21__0_321 -> bb22__0_321 [label="return"];
    bb21__0_321 -> bb27__0_321 [label="unwind"];
    bb22__0_321 -> bb23__0_321 [label="return"];
    bb22__0_321 -> bb27__0_321 [label="unwind"];
    bb23__0_321 -> bb24__0_321 [label="return"];
    bb23__0_321 -> bb27__0_321 [label="unwind"];
    bb24__0_321 -> bb25__0_321 [label="return"];
    bb24__0_321 -> bb36__0_321 [label="unwind"];
    bb25__0_321 -> bb26__0_321 [label=""];
    bb27__0_321 -> bb36__0_321 [label="return"];
    bb28__0_321 -> bb36__0_321 [label="return"];
    bb30__0_321 -> bb26__0_321 [label="return"];
    bb30__0_321 -> bb29__0_321 [label="unwind"];
    bb31__0_321 -> bb26__0_321 [label="0"];
    bb31__0_321 -> bb30__0_321 [label="otherwise"];
    bb32__0_321 -> bb36__0_321 [label=""];
    bb33__0_321 -> bb36__0_321 [label="return"];
    bb34__0_321 -> bb36__0_321 [label="0"];
    bb34__0_321 -> bb33__0_321 [label="otherwise"];
    bb35__0_321 -> bb29__0_321 [label="return"];
    bb36__0_321 -> bb29__0_321 [label="0"];
    bb36__0_321 -> bb35__0_321 [label="otherwise"];
}
