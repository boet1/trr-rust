digraph Mir_0_1422 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn check_capacity_allows_withdrawals(_1: &amp;ReErased mut state::reserve::WithdrawalCaps, _2: u64) -&gt; std::result::Result&lt;(), LendingError&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: bool;<br align="left"/>let mut _5: i64;<br align="left"/>let mut _6: !;<br align="left"/>let mut _7: LendingError;<br align="left"/>let _8: ();<br align="left"/>let mut _9: bool;<br align="left"/>let mut _10: i64;<br align="left"/>let mut _11: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, LendingError&gt;, i64&gt;;<br align="left"/>let mut _12: std::result::Result&lt;i64, LendingError&gt;;<br align="left"/>let mut _13: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _14: i64;<br align="left"/>let mut _15: i64;<br align="left"/>let mut _16: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, LendingError&gt;, i64&gt;;<br align="left"/>let mut _17: std::result::Result&lt;i64, LendingError&gt;;<br align="left"/>let mut _18: std::result::Result&lt;i64, std::num::TryFromIntError&gt;;<br align="left"/>let mut _19: u64;<br align="left"/>let mut _20: Closure(DefId(0:1423 ~ kamino_lending[6389]::lending_market::withdrawal_cap_operations::utils::check_capacity_allows_withdrawals::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((std::num::TryFromIntError,)) -&gt; LendingError, []), ()]);<br align="left"/>let mut _21: isize;<br align="left"/>let _22: std::result::Result&lt;std::convert::Infallible, LendingError&gt;;<br align="left"/>let mut _23: !;<br align="left"/>let mut _24: std::result::Result&lt;std::convert::Infallible, LendingError&gt;;<br align="left"/>let _25: i64;<br align="left"/>let mut _26: Closure(DefId(0:1424 ~ kamino_lending[6389]::lending_market::withdrawal_cap_operations::utils::check_capacity_allows_withdrawals::{closure#1}), [i32, Binder(extern &quot;RustCall&quot; fn(()) -&gt; LendingError, []), ()]);<br align="left"/>let mut _27: isize;<br align="left"/>let _28: std::result::Result&lt;std::convert::Infallible, LendingError&gt;;<br align="left"/>let mut _29: !;<br align="left"/>let mut _30: std::result::Result&lt;std::convert::Infallible, LendingError&gt;;<br align="left"/>let _31: i64;<br align="left"/>let mut _32: i64;<br align="left"/>let mut _33: !;<br align="left"/>let mut _34: LendingError;<br align="left"/>let mut _35: ();<br align="left"/>debug caps =&gt; _1;<br align="left"/>debug requested_amount =&gt; _2;<br align="left"/>debug residual =&gt; _22;<br align="left"/>debug val =&gt; _25;<br align="left"/>debug residual =&gt; _28;<br align="left"/>debug val =&gt; _31;<br align="left"/>>;
    bb0__0_1422 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = ((*_1).0: i64)<br/>_4 = Lt(move _5, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _4)</td></tr></table>>];
    bb1__0_1422 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageLive(_7)<br/>_7 = LendingError::WithdrawalCapReached<br/>_0 = std::result::Result::&lt;(), LendingError&gt;::Err(move _7)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb2__0_1422 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_3 = const ()<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_14 = ((*_1).1: i64)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_19 = _2<br/></td></tr><tr><td align="left">_18 = &lt;u64 as TryInto&lt;i64&gt;&gt;::try_into(move _19)</td></tr></table>>];
    bb3__0_1422 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageLive(_20)<br/>_20 = {closure@programs\klend\src\lending_market\withdrawal_cap_operations.rs:118:30: 118:33}<br/></td></tr><tr><td align="left">_17 = std::result::Result::&lt;i64, TryFromIntError&gt;::map_err::&lt;LendingError, {closure@programs\klend\src\lending_market\withdrawal_cap_operations.rs:118:30: 118:33}&gt;(move _18, move _20)</td></tr></table>>];
    bb4__0_1422 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">_16 = &lt;std::result::Result&lt;i64, LendingError&gt; as Try&gt;::branch(move _17)</td></tr></table>>];
    bb5__0_1422 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>_21 = discriminant(_16)<br/></td></tr><tr><td align="left">switchInt(move _21)</td></tr></table>>];
    bb6__0_1422 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_25)<br/>_25 = ((_16 as Continue).0: i64)<br/>_15 = _25<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">_13 = core::num::&lt;impl i64&gt;::checked_add(move _14, move _15)</td></tr></table>>];
    bb7__0_1422 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb8__0_1422 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_22)<br/>_22 = ((_16 as Break).0: std::result::Result&lt;std::convert::Infallible, LendingError&gt;)<br/>StorageLive(_24)<br/>_24 = _22<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), LendingError&gt; as FromResidual&lt;std::result::Result&lt;Infallible, LendingError&gt;&gt;&gt;::from_residual(move _24)</td></tr></table>>];
    bb9__0_1422 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_22)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_1422 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_14)<br/>StorageLive(_26)<br/>_26 = {closure@programs\klend\src\lending_market\withdrawal_cap_operations.rs:120:25: 120:27}<br/></td></tr><tr><td align="left">_12 = std::option::Option::&lt;i64&gt;::ok_or_else::&lt;LendingError, {closure@programs\klend\src\lending_market\withdrawal_cap_operations.rs:120:25: 120:27}&gt;(move _13, move _26)</td></tr></table>>];
    bb11__0_1422 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">_11 = &lt;std::result::Result&lt;i64, LendingError&gt; as Try&gt;::branch(move _12)</td></tr></table>>];
    bb12__0_1422 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>_27 = discriminant(_11)<br/></td></tr><tr><td align="left">switchInt(move _27)</td></tr></table>>];
    bb13__0_1422 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_31)<br/>_31 = ((_11 as Continue).0: i64)<br/>_10 = _31<br/>StorageDead(_31)<br/>StorageLive(_32)<br/>_32 = ((*_1).0: i64)<br/>_9 = Gt(move _10, move _32)<br/></td></tr><tr><td align="left">switchInt(move _9)</td></tr></table>>];
    bb14__0_1422 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_28)<br/>_28 = ((_11 as Break).0: std::result::Result&lt;std::convert::Infallible, LendingError&gt;)<br/>StorageLive(_30)<br/>_30 = _28<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), LendingError&gt; as FromResidual&lt;std::result::Result&lt;Infallible, LendingError&gt;&gt;&gt;::from_residual(move _30)</td></tr></table>>];
    bb15__0_1422 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_1422 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_16)<br/>StorageDead(_11)<br/>StorageDead(_10)<br/>StorageLive(_34)<br/>_34 = LendingError::WithdrawalCapReached<br/>_0 = std::result::Result::&lt;(), LendingError&gt;::Err(move _34)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_1422 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_16)<br/>StorageDead(_11)<br/>StorageDead(_10)<br/>_8 = const ()<br/>StorageDead(_9)<br/>StorageDead(_8)<br/>StorageLive(_35)<br/>_35 = ()<br/>_0 = std::result::Result::&lt;(), LendingError&gt;::Ok(move _35)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_1422 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_11)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_1422 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_1422 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_1422 -> bb2__0_1422 [label="0"];
    bb0__0_1422 -> bb1__0_1422 [label="otherwise"];
    bb1__0_1422 -> bb20__0_1422 [label=""];
    bb2__0_1422 -> bb3__0_1422 [label="return"];
    bb3__0_1422 -> bb4__0_1422 [label="return"];
    bb4__0_1422 -> bb5__0_1422 [label="return"];
    bb5__0_1422 -> bb6__0_1422 [label="0"];
    bb5__0_1422 -> bb8__0_1422 [label="1"];
    bb5__0_1422 -> bb7__0_1422 [label="otherwise"];
    bb6__0_1422 -> bb10__0_1422 [label="return"];
    bb8__0_1422 -> bb9__0_1422 [label="return"];
    bb9__0_1422 -> bb18__0_1422 [label=""];
    bb10__0_1422 -> bb11__0_1422 [label="return"];
    bb11__0_1422 -> bb12__0_1422 [label="return"];
    bb12__0_1422 -> bb13__0_1422 [label="0"];
    bb12__0_1422 -> bb14__0_1422 [label="1"];
    bb12__0_1422 -> bb7__0_1422 [label="otherwise"];
    bb13__0_1422 -> bb17__0_1422 [label="0"];
    bb13__0_1422 -> bb16__0_1422 [label="otherwise"];
    bb14__0_1422 -> bb15__0_1422 [label="return"];
    bb15__0_1422 -> bb18__0_1422 [label=""];
    bb16__0_1422 -> bb19__0_1422 [label=""];
    bb17__0_1422 -> bb20__0_1422 [label=""];
    bb18__0_1422 -> bb19__0_1422 [label=""];
    bb19__0_1422 -> bb20__0_1422 [label=""];
}
