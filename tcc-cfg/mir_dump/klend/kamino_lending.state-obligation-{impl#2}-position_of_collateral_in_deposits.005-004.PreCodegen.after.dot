digraph Mir_0_1670 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn obligation::Obligation::position_of_collateral_in_deposits(_1: &amp;ReErased state::obligation::Obligation, _2: anchor_lang::prelude::Pubkey) -&gt; std::result::Result&lt;usize, anchor_lang::error::Error&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: bool;<br align="left"/>let mut _5: &amp;ReErased state::obligation::Obligation;<br align="left"/>let mut _6: !;<br align="left"/>let _7: ();<br align="left"/>let _8: ();<br align="left"/>let mut _9: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _10: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _11: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _12: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _13: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _14: anchor_lang::error::Error;<br align="left"/>let mut _15: anchor_lang::error::AnchorError;<br align="left"/>let mut _16: std::string::String;<br align="left"/>let mut _17: &amp;ReErased LendingError;<br align="left"/>let _18: LendingError;<br align="left"/>let mut _19: u32;<br align="left"/>let mut _20: LendingError;<br align="left"/>let mut _21: std::string::String;<br align="left"/>let mut _22: &amp;ReErased LendingError;<br align="left"/>let _23: LendingError;<br align="left"/>let mut _24: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _25: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _26: anchor_lang::error::Source;<br align="left"/>let mut _27: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let mut _28: std::option::Option&lt;usize&gt;;<br align="left"/>let mut _29: &amp;ReErased mut std::slice::Iter&lt;ReErased, state::obligation::ObligationCollateral&gt;;<br align="left"/>let mut _30: std::slice::Iter&lt;ReErased, state::obligation::ObligationCollateral&gt;;<br align="left"/>let mut _31: &amp;ReErased [state::obligation::ObligationCollateral];<br align="left"/>let mut _32: &amp;ReErased [state::obligation::ObligationCollateral; 8_usize];<br align="left"/>let mut _33: Closure(DefId(0:1671 ~ kamino_lending[6389]::state::obligation::{impl#2}::position_of_collateral_in_deposits::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReErased state::obligation::ObligationCollateral,)) -&gt; bool, []), (&amp;ReErased anchor_lang::prelude::Pubkey,)]);<br align="left"/>let mut _34: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _35: anchor_lang::error::Error;<br align="left"/>let mut _36: anchor_lang::error::AnchorError;<br align="left"/>let mut _37: std::string::String;<br align="left"/>let mut _38: &amp;ReErased LendingError;<br align="left"/>let _39: LendingError;<br align="left"/>let mut _40: u32;<br align="left"/>let mut _41: LendingError;<br align="left"/>let mut _42: std::string::String;<br align="left"/>let mut _43: &amp;ReErased LendingError;<br align="left"/>let _44: LendingError;<br align="left"/>let mut _45: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _46: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _47: anchor_lang::error::Source;<br align="left"/>let mut _48: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let mut _49: &amp;ReErased LendingError;<br align="left"/>let mut _50: &amp;ReErased LendingError;<br align="left"/>let mut _51: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _52: &amp;ReErased LendingError;<br align="left"/>let mut _53: &amp;ReErased LendingError;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug deposit_reserve =&gt; _2;<br align="left"/>>;
    bb0__0_1670 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = &amp;(*_1)<br/></td></tr><tr><td align="left">_4 = obligation::Obligation::active_deposits_empty(move _5)</td></tr></table>>];
    bb1__0_1670 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">switchInt(move _4)</td></tr></table>>];
    bb2__0_1670 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_51 = const _<br/>_12 = &amp;(*_51)<br/>_11 = &amp;(*_12)<br/>_10 = move _11 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">_9 = Arguments::&lt;'_&gt;::new_const(move _10)</td></tr></table>>];
    bb3__0_1670 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/></td></tr><tr><td align="left">_8 = _print(move _9)</td></tr></table>>];
    bb4__0_1670 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_12)<br/>StorageDead(_8)<br/>_7 = const ()<br/>StorageDead(_7)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_50 = const _<br/>_17 = &amp;(*_50)<br/></td></tr><tr><td align="left">_16 = LendingError::name(move _17)</td></tr></table>>];
    bb5__0_1670 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_20 = LendingError::ObligationDepositsEmpty<br/></td></tr><tr><td align="left">_19 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _20)</td></tr></table>>];
    bb6__0_1670 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_49 = const _<br/>_22 = &amp;(*_49)<br/></td></tr><tr><td align="left">_21 = &lt;LendingError as ToString&gt;::to_string(move _22)</td></tr></table>>];
    bb7__0_1670 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_26 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\state\\obligation.rs&quot;, line: const 334_u32 }<br/>_25 = anchor_lang::error::ErrorOrigin::Source(move _26)<br/>StorageDead(_26)<br/>_24 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _25)<br/>StorageDead(_25)<br/>StorageLive(_27)<br/>_27 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_15 = anchor_lang::error::AnchorError { error_name: move _16, error_code_number: move _19, error_msg: move _21, error_origin: move _24, compared_values: move _27 }<br/>StorageDead(_27)<br/>StorageDead(_24)<br/>StorageDead(_21)<br/>StorageDead(_19)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">_14 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _15)</td></tr></table>>];
    bb8__0_1670 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>_0 = std::result::Result::&lt;usize, anchor_lang::error::Error&gt;::Err(move _14)<br/>StorageDead(_14)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_1670 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_3 = const ()<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>_32 = &amp;((*_1).4: [state::obligation::ObligationCollateral; 8])<br/>_31 = move _32 as &amp;[state::obligation::ObligationCollateral] (PointerCoercion(Unsize))<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">_30 = core::slice::&lt;impl [obligation::ObligationCollateral]&gt;::iter(move _31)</td></tr></table>>];
    bb10__0_1670 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">_29 = &amp;mut _30<br/>StorageDead(_31)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>_34 = &amp;_2<br/>_33 = {closure@programs\klend\src\state\obligation.rs:338:23: 338:35} { deposit_reserve: move _34 }<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">_28 = &lt;std::slice::Iter&lt;'_, obligation::ObligationCollateral&gt; as Iterator&gt;::position::&lt;{closure@programs\klend\src\state\obligation.rs:338:23: 338:35}&gt;(move _29, move _33)</td></tr></table>>];
    bb11__0_1670 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_29)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>_53 = const _<br/>_38 = &amp;(*_53)<br/></td></tr><tr><td align="left">_37 = LendingError::name(move _38)</td></tr></table>>];
    bb12__0_1670 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>_41 = LendingError::InvalidObligationCollateral<br/></td></tr><tr><td align="left">_40 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _41)</td></tr></table>>];
    bb13__0_1670 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>_52 = const _<br/>_43 = &amp;(*_52)<br/></td></tr><tr><td align="left">_42 = &lt;LendingError as ToString&gt;::to_string(move _43)</td></tr></table>>];
    bb14__0_1670 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>_47 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\state\\obligation.rs&quot;, line: const 339_u32 }<br/>_46 = anchor_lang::error::ErrorOrigin::Source(move _47)<br/>StorageDead(_47)<br/>_45 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _46)<br/>StorageDead(_46)<br/>StorageLive(_48)<br/>_48 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_36 = anchor_lang::error::AnchorError { error_name: move _37, error_code_number: move _40, error_msg: move _42, error_origin: move _45, compared_values: move _48 }<br/>StorageDead(_48)<br/>StorageDead(_45)<br/>StorageDead(_42)<br/>StorageDead(_40)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">_35 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _36)</td></tr></table>>];
    bb15__0_1670 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/></td></tr><tr><td align="left">_0 = std::option::Option::&lt;usize&gt;::ok_or::&lt;anchor_lang::error::Error&gt;(move _28, move _35)</td></tr></table>>];
    bb16__0_1670 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_28)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_1670 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left">return</td></tr></table>>];
    bb18__0_1670 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">18 (cleanup)</td></tr><tr><td align="left">drop(_37)</td></tr></table>>];
    bb19__0_1670 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">19 (cleanup)</td></tr><tr><td align="left">drop(_16)</td></tr></table>>];
    bb20__0_1670 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">20 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_1670 -> bb1__0_1670 [label="return"];
    bb1__0_1670 -> bb9__0_1670 [label="0"];
    bb1__0_1670 -> bb2__0_1670 [label="otherwise"];
    bb2__0_1670 -> bb3__0_1670 [label="return"];
    bb3__0_1670 -> bb4__0_1670 [label="return"];
    bb4__0_1670 -> bb5__0_1670 [label="return"];
    bb5__0_1670 -> bb6__0_1670 [label="return"];
    bb5__0_1670 -> bb19__0_1670 [label="unwind"];
    bb6__0_1670 -> bb7__0_1670 [label="return"];
    bb6__0_1670 -> bb19__0_1670 [label="unwind"];
    bb7__0_1670 -> bb8__0_1670 [label="return"];
    bb7__0_1670 -> bb20__0_1670 [label="unwind"];
    bb8__0_1670 -> bb17__0_1670 [label=""];
    bb9__0_1670 -> bb10__0_1670 [label="return"];
    bb10__0_1670 -> bb11__0_1670 [label="return"];
    bb11__0_1670 -> bb12__0_1670 [label="return"];
    bb12__0_1670 -> bb13__0_1670 [label="return"];
    bb12__0_1670 -> bb18__0_1670 [label="unwind"];
    bb13__0_1670 -> bb14__0_1670 [label="return"];
    bb13__0_1670 -> bb18__0_1670 [label="unwind"];
    bb14__0_1670 -> bb15__0_1670 [label="return"];
    bb14__0_1670 -> bb20__0_1670 [label="unwind"];
    bb15__0_1670 -> bb16__0_1670 [label="return"];
    bb15__0_1670 -> bb20__0_1670 [label="unwind"];
    bb16__0_1670 -> bb17__0_1670 [label=""];
    bb18__0_1670 -> bb20__0_1670 [label="return"];
    bb19__0_1670 -> bb20__0_1670 [label="return"];
}
