// MIR for `utils::fraction::<impl at programs\klend\src\utils\fraction.rs:306:1: 306:25>::div` before PreCodegen

fn utils::fraction::<impl at programs\klend\src\utils\fraction.rs:306:1: 306:25>::div(_1: utils::fraction::BigFraction, _2: utils::fraction::BigFraction) -> utils::fraction::BigFraction {
    debug self => _1;
    debug rhs => _2;
    let mut _0: utils::fraction::BigFraction;
    let _3: utils::fraction::uint_types::U256;
    let mut _4: utils::fraction::uint_types::U256;
    let mut _6: utils::fraction::uint_types::U256;
    let mut _7: utils::fraction::uint_types::U256;
    let mut _8: utils::fraction::uint_types::U256;
    scope 1 {
        debug extra_scaled => _3;
        let _5: utils::fraction::uint_types::U256;
        scope 2 {
            debug res => _5;
        }
    }

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        _4 = (_1.0: utils::fraction::uint_types::U256);
        _3 = <uint_types::U256 as Shl<u32>>::shl(move _4, const _) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_4);
        StorageLive(_5);
        StorageLive(_6);
        _6 = _3;
        StorageLive(_7);
        _7 = (_2.0: utils::fraction::uint_types::U256);
        _5 = <uint_types::U256 as std::ops::Div>::div(move _6, move _7) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_7);
        StorageDead(_6);
        StorageLive(_8);
        _8 = _5;
        _0 = utils::fraction::BigFraction(move _8);
        StorageDead(_8);
        StorageDead(_5);
        StorageDead(_3);
        return;
    }
}
