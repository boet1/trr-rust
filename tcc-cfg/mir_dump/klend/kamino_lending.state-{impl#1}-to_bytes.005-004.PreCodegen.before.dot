digraph Mir_0_2076 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn state::UpdateLendingMarketConfigValue::to_bytes(_1: &amp;ReErased state::UpdateLendingMarketConfigValue) -&gt; [u8; 72_usize]<br align="left"/>let mut _2: [u8; 72_usize];<br align="left"/>let _3: ();<br align="left"/>let mut _4: isize;<br align="left"/>let _5: &amp;ReErased bool;<br align="left"/>let mut _6: bool;<br align="left"/>let _7: usize;<br align="left"/>let mut _8: usize;<br align="left"/>let mut _9: bool;<br align="left"/>let _10: &amp;ReErased u8;<br align="left"/>let mut _11: u8;<br align="left"/>let _12: usize;<br align="left"/>let mut _13: usize;<br align="left"/>let mut _14: bool;<br align="left"/>let _15: &amp;ReErased u16;<br align="left"/>let _16: ();<br align="left"/>let mut _17: &amp;ReErased mut [u8];<br align="left"/>let mut _18: &amp;ReErased mut [u8];<br align="left"/>let mut _19: &amp;ReErased mut [u8; 72_usize];<br align="left"/>let mut _20: std::ops::RangeTo&lt;usize&gt;;<br align="left"/>let mut _21: &amp;ReErased [u8];<br align="left"/>let mut _22: &amp;ReErased [u8; 2_usize];<br align="left"/>let _23: &amp;ReErased [u8; 2_usize];<br align="left"/>let _24: [u8; 2_usize];<br align="left"/>let mut _25: u16;<br align="left"/>let _26: &amp;ReErased u64;<br align="left"/>let _27: ();<br align="left"/>let mut _28: &amp;ReErased mut [u8];<br align="left"/>let mut _29: &amp;ReErased mut [u8];<br align="left"/>let mut _30: &amp;ReErased mut [u8; 72_usize];<br align="left"/>let mut _31: std::ops::RangeTo&lt;usize&gt;;<br align="left"/>let mut _32: &amp;ReErased [u8];<br align="left"/>let mut _33: &amp;ReErased [u8; 8_usize];<br align="left"/>let _34: &amp;ReErased [u8; 8_usize];<br align="left"/>let _35: [u8; 8_usize];<br align="left"/>let mut _36: u64;<br align="left"/>let _37: &amp;ReErased u128;<br align="left"/>let _38: ();<br align="left"/>let mut _39: &amp;ReErased mut [u8];<br align="left"/>let mut _40: &amp;ReErased mut [u8];<br align="left"/>let mut _41: &amp;ReErased mut [u8; 72_usize];<br align="left"/>let mut _42: std::ops::RangeTo&lt;usize&gt;;<br align="left"/>let mut _43: &amp;ReErased [u8];<br align="left"/>let mut _44: &amp;ReErased [u8; 16_usize];<br align="left"/>let _45: &amp;ReErased [u8; 16_usize];<br align="left"/>let _46: [u8; 16_usize];<br align="left"/>let mut _47: u128;<br align="left"/>let _48: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _49: ();<br align="left"/>let mut _50: &amp;ReErased mut [u8];<br align="left"/>let mut _51: &amp;ReErased mut [u8];<br align="left"/>let mut _52: &amp;ReErased mut [u8; 72_usize];<br align="left"/>let mut _53: std::ops::RangeTo&lt;usize&gt;;<br align="left"/>let mut _54: &amp;ReErased [u8];<br align="left"/>let _55: &amp;ReErased [u8];<br align="left"/>let mut _56: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _57: &amp;ReErased state::lending_market::ElevationGroup;<br align="left"/>let _58: ();<br align="left"/>let mut _59: &amp;ReErased mut [u8];<br align="left"/>let mut _60: &amp;ReErased mut [u8];<br align="left"/>let mut _61: &amp;ReErased mut [u8; 72_usize];<br align="left"/>let mut _62: std::ops::RangeTo&lt;usize&gt;;<br align="left"/>let mut _63: &amp;ReErased [u8];<br align="left"/>let _64: &amp;ReErased [u8];<br align="left"/>let mut _65: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _66: std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _67: std::result::Result&lt;std::vec::Vec&lt;u8, std::alloc::Global&gt;, std::io::Error&gt;;<br align="left"/>let mut _68: &amp;ReErased state::lending_market::ElevationGroup;<br align="left"/>let _69: &amp;ReErased [u8; 8_usize];<br align="left"/>let _70: ();<br align="left"/>let mut _71: &amp;ReErased mut [u8];<br align="left"/>let mut _72: &amp;ReErased mut [u8];<br align="left"/>let mut _73: &amp;ReErased mut [u8; 72_usize];<br align="left"/>let mut _74: std::ops::RangeTo&lt;usize&gt;;<br align="left"/>let mut _75: &amp;ReErased [u8];<br align="left"/>let mut _76: &amp;ReErased [u8; 8_usize];<br align="left"/>let _77: &amp;ReErased [u8; 32_usize];<br align="left"/>let _78: ();<br align="left"/>let mut _79: &amp;ReErased mut [u8];<br align="left"/>let mut _80: &amp;ReErased mut [u8];<br align="left"/>let mut _81: &amp;ReErased mut [u8; 72_usize];<br align="left"/>let mut _82: std::ops::RangeTo&lt;usize&gt;;<br align="left"/>let mut _83: usize;<br align="left"/>let mut _84: &amp;ReErased [u8];<br align="left"/>let mut _85: &amp;ReErased [u8; 32_usize];<br align="left"/>let mut _86: &amp;ReErased [u8];<br align="left"/>let mut _87: &amp;ReErased [u8; 32_usize];<br align="left"/>debug self =&gt; _1;<br align="left"/>debug val =&gt; _2;<br align="left"/>debug v =&gt; _5;<br align="left"/>debug v =&gt; _10;<br align="left"/>debug v =&gt; _15;<br align="left"/>debug v =&gt; _26;<br align="left"/>debug v =&gt; _37;<br align="left"/>debug v =&gt; _48;<br align="left"/>debug v =&gt; _57;<br align="left"/>debug value =&gt; _69;<br align="left"/>debug v =&gt; _77;<br align="left"/>>;
    bb0__0_2076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>_2 = [const 0_u8; 72]<br/>StorageLive(_3)<br/>_4 = discriminant((*_1))<br/></td></tr><tr><td align="left">switchInt(move _4)</td></tr></table>>];
    bb1__0_2076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_77)<br/>_77 = &amp;(((*_1) as Name).0: [u8; 32])<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>_81 = &amp;mut _2<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>_85 = &amp;(*_77)<br/>_84 = move _85 as &amp;[u8] (PointerCoercion(Unsize))<br/>StorageDead(_85)<br/></td></tr><tr><td align="left">_83 = core::slice::&lt;impl [u8]&gt;::len(move _84)</td></tr></table>>];
    bb2__0_2076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb3__0_2076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>_5 = &amp;(((*_1) as Bool).0: bool)<br/>StorageLive(_6)<br/>_6 = (*_5)<br/>StorageLive(_7)<br/>_7 = const 0_usize<br/>_8 = Len(_2)<br/>_9 = Lt(_7, _8)<br/></td></tr><tr><td align="left">assert(move _9, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _8, _7)</td></tr></table>>];
    bb4__0_2076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">_2[_7] = move _6 as u8 (IntToInt)<br/>StorageDead(_6)<br/>StorageDead(_7)<br/>_3 = const ()<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb5__0_2076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>_10 = &amp;(((*_1) as U8).0: u8)<br/>StorageLive(_11)<br/>_11 = (*_10)<br/>StorageLive(_12)<br/>_12 = const 0_usize<br/>_13 = Len(_2)<br/>_14 = Lt(_12, _13)<br/></td></tr><tr><td align="left">assert(move _14, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _13, _12)</td></tr></table>>];
    bb6__0_2076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">_2[_12] = move _11<br/>StorageDead(_11)<br/>StorageDead(_12)<br/>_3 = const ()<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_2076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_15)<br/>_15 = &amp;(((*_1) as U16).0: u16)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_19 = &amp;mut _2<br/>StorageLive(_20)<br/>_20 = RangeTo::&lt;usize&gt; { end: const 2_usize }<br/></td></tr><tr><td align="left">_18 = &lt;[u8; 72] as IndexMut&lt;RangeTo&lt;usize&gt;&gt;&gt;::index_mut(move _19, move _20)</td></tr></table>>];
    bb8__0_2076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">_17 = &amp;mut (*_18)<br/>StorageDead(_20)<br/>StorageDead(_19)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>_25 = (*_15)<br/></td></tr><tr><td align="left">_24 = core::num::&lt;impl u16&gt;::to_le_bytes(move _25)</td></tr></table>>];
    bb9__0_2076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>_23 = &amp;_24<br/>_22 = &amp;(*_23)<br/>_21 = move _22 as &amp;[u8] (PointerCoercion(Unsize))<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">_16 = core::slice::&lt;impl [u8]&gt;::copy_from_slice(move _17, move _21)</td></tr></table>>];
    bb10__0_2076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_17)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/>StorageDead(_18)<br/>StorageDead(_16)<br/>_3 = const ()<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb11__0_2076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_26)<br/>_26 = &amp;(((*_1) as U64).0: u64)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>_30 = &amp;mut _2<br/>StorageLive(_31)<br/>_31 = RangeTo::&lt;usize&gt; { end: const 8_usize }<br/></td></tr><tr><td align="left">_29 = &lt;[u8; 72] as IndexMut&lt;RangeTo&lt;usize&gt;&gt;&gt;::index_mut(move _30, move _31)</td></tr></table>>];
    bb12__0_2076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">_28 = &amp;mut (*_29)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>_36 = (*_26)<br/></td></tr><tr><td align="left">_35 = core::num::&lt;impl u64&gt;::to_le_bytes(move _36)</td></tr></table>>];
    bb13__0_2076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>_34 = &amp;_35<br/>_33 = &amp;(*_34)<br/>_32 = move _33 as &amp;[u8] (PointerCoercion(Unsize))<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">_27 = core::slice::&lt;impl [u8]&gt;::copy_from_slice(move _28, move _32)</td></tr></table>>];
    bb14__0_2076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_28)<br/>StorageDead(_35)<br/>StorageDead(_34)<br/>StorageDead(_29)<br/>StorageDead(_27)<br/>_3 = const ()<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_2076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_37)<br/>_37 = &amp;(((*_1) as U128).0: u128)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>_41 = &amp;mut _2<br/>StorageLive(_42)<br/>_42 = RangeTo::&lt;usize&gt; { end: const 16_usize }<br/></td></tr><tr><td align="left">_40 = &lt;[u8; 72] as IndexMut&lt;RangeTo&lt;usize&gt;&gt;&gt;::index_mut(move _41, move _42)</td></tr></table>>];
    bb16__0_2076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">_39 = &amp;mut (*_40)<br/>StorageDead(_42)<br/>StorageDead(_41)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>_47 = (*_37)<br/></td></tr><tr><td align="left">_46 = core::num::&lt;impl u128&gt;::to_le_bytes(move _47)</td></tr></table>>];
    bb17__0_2076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>_45 = &amp;_46<br/>_44 = &amp;(*_45)<br/>_43 = move _44 as &amp;[u8] (PointerCoercion(Unsize))<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">_38 = core::slice::&lt;impl [u8]&gt;::copy_from_slice(move _39, move _43)</td></tr></table>>];
    bb18__0_2076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_39)<br/>StorageDead(_46)<br/>StorageDead(_45)<br/>StorageDead(_40)<br/>StorageDead(_38)<br/>_3 = const ()<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_2076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_48)<br/>_48 = &amp;(((*_1) as Pubkey).0: anchor_lang::prelude::Pubkey)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>_52 = &amp;mut _2<br/>StorageLive(_53)<br/>_53 = RangeTo::&lt;usize&gt; { end: const 32_usize }<br/></td></tr><tr><td align="left">_51 = &lt;[u8; 72] as IndexMut&lt;RangeTo&lt;usize&gt;&gt;&gt;::index_mut(move _52, move _53)</td></tr></table>>];
    bb20__0_2076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">_50 = &amp;mut (*_51)<br/>StorageDead(_53)<br/>StorageDead(_52)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>_56 = &amp;(*_48)<br/></td></tr><tr><td align="left">_55 = &lt;anchor_lang::prelude::Pubkey as AsRef&lt;[u8]&gt;&gt;::as_ref(move _56)</td></tr></table>>];
    bb21__0_2076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">_54 = &amp;(*_55)<br/>StorageDead(_56)<br/></td></tr><tr><td align="left">_49 = core::slice::&lt;impl [u8]&gt;::copy_from_slice(move _50, move _54)</td></tr></table>>];
    bb22__0_2076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_50)<br/>StorageDead(_55)<br/>StorageDead(_51)<br/>StorageDead(_49)<br/>_3 = const ()<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_2076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_57)<br/>_57 = &amp;(((*_1) as ElevationGroup).0: state::lending_market::ElevationGroup)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>_61 = &amp;mut _2<br/>StorageLive(_62)<br/>_62 = RangeTo::&lt;usize&gt; { end: const 72_usize }<br/></td></tr><tr><td align="left">_60 = &lt;[u8; 72] as IndexMut&lt;RangeTo&lt;usize&gt;&gt;&gt;::index_mut(move _61, move _62)</td></tr></table>>];
    bb24__0_2076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">_59 = &amp;mut (*_60)<br/>StorageDead(_62)<br/>StorageDead(_61)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>_68 = &amp;(*_57)<br/></td></tr><tr><td align="left">_67 = &lt;state::lending_market::ElevationGroup as BorshSerialize&gt;::try_to_vec(move _68)</td></tr></table>>];
    bb25__0_2076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/></td></tr><tr><td align="left">_66 = std::result::Result::&lt;Vec&lt;u8&gt;, std::io::Error&gt;::unwrap(move _67)</td></tr></table>>];
    bb26__0_2076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">_65 = &amp;_66<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">_64 = Vec::&lt;u8&gt;::as_slice(move _65)</td></tr></table>>];
    bb27__0_2076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">_63 = &amp;(*_64)<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">_58 = core::slice::&lt;impl [u8]&gt;::copy_from_slice(move _59, move _63)</td></tr></table>>];
    bb28__0_2076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_59)<br/></td></tr><tr><td align="left">drop(_66)</td></tr></table>>];
    bb29__0_2076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageDead(_64)<br/>StorageDead(_60)<br/>StorageDead(_58)<br/>_3 = const ()<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_2076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_69)<br/>_69 = &amp;(((*_1) as U8Array).0: [u8; 8])<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>_73 = &amp;mut _2<br/>StorageLive(_74)<br/>_74 = RangeTo::&lt;usize&gt; { end: const 8_usize }<br/></td></tr><tr><td align="left">_72 = &lt;[u8; 72] as IndexMut&lt;RangeTo&lt;usize&gt;&gt;&gt;::index_mut(move _73, move _74)</td></tr></table>>];
    bb31__0_2076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">_71 = &amp;mut (*_72)<br/>StorageDead(_74)<br/>StorageDead(_73)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>_76 = &amp;(*_69)<br/>_75 = move _76 as &amp;[u8] (PointerCoercion(Unsize))<br/>StorageDead(_76)<br/></td></tr><tr><td align="left">_70 = core::slice::&lt;impl [u8]&gt;::copy_from_slice(move _71, move _75)</td></tr></table>>];
    bb32__0_2076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_71)<br/>StorageDead(_72)<br/>StorageDead(_70)<br/>_3 = const ()<br/>StorageDead(_69)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_2076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>_82 = RangeTo::&lt;usize&gt; { end: move _83 }<br/>StorageDead(_83)<br/></td></tr><tr><td align="left">_80 = &lt;[u8; 72] as IndexMut&lt;RangeTo&lt;usize&gt;&gt;&gt;::index_mut(move _81, move _82)</td></tr></table>>];
    bb34__0_2076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">_79 = &amp;mut (*_80)<br/>StorageDead(_82)<br/>StorageDead(_81)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>_87 = &amp;(*_77)<br/>_86 = move _87 as &amp;[u8] (PointerCoercion(Unsize))<br/>StorageDead(_87)<br/></td></tr><tr><td align="left">_78 = core::slice::&lt;impl [u8]&gt;::copy_from_slice(move _79, move _86)</td></tr></table>>];
    bb35__0_2076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>StorageDead(_79)<br/>StorageDead(_80)<br/>StorageDead(_78)<br/>_3 = const ()<br/>StorageDead(_77)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_2076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/>_0 = _2<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb37__0_2076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">37 (cleanup)</td></tr><tr><td align="left">drop(_66)</td></tr></table>>];
    bb38__0_2076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">38 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_2076 -> bb3__0_2076 [label="0"];
    bb0__0_2076 -> bb5__0_2076 [label="1"];
    bb0__0_2076 -> bb30__0_2076 [label="2"];
    bb0__0_2076 -> bb7__0_2076 [label="3"];
    bb0__0_2076 -> bb11__0_2076 [label="4"];
    bb0__0_2076 -> bb15__0_2076 [label="5"];
    bb0__0_2076 -> bb19__0_2076 [label="6"];
    bb0__0_2076 -> bb23__0_2076 [label="7"];
    bb0__0_2076 -> bb1__0_2076 [label="8"];
    bb0__0_2076 -> bb2__0_2076 [label="otherwise"];
    bb1__0_2076 -> bb33__0_2076 [label="return"];
    bb3__0_2076 -> bb4__0_2076 [label="success"];
    bb4__0_2076 -> bb36__0_2076 [label=""];
    bb5__0_2076 -> bb6__0_2076 [label="success"];
    bb6__0_2076 -> bb36__0_2076 [label=""];
    bb7__0_2076 -> bb8__0_2076 [label="return"];
    bb8__0_2076 -> bb9__0_2076 [label="return"];
    bb9__0_2076 -> bb10__0_2076 [label="return"];
    bb10__0_2076 -> bb36__0_2076 [label=""];
    bb11__0_2076 -> bb12__0_2076 [label="return"];
    bb12__0_2076 -> bb13__0_2076 [label="return"];
    bb13__0_2076 -> bb14__0_2076 [label="return"];
    bb14__0_2076 -> bb36__0_2076 [label=""];
    bb15__0_2076 -> bb16__0_2076 [label="return"];
    bb16__0_2076 -> bb17__0_2076 [label="return"];
    bb17__0_2076 -> bb18__0_2076 [label="return"];
    bb18__0_2076 -> bb36__0_2076 [label=""];
    bb19__0_2076 -> bb20__0_2076 [label="return"];
    bb20__0_2076 -> bb21__0_2076 [label="return"];
    bb21__0_2076 -> bb22__0_2076 [label="return"];
    bb22__0_2076 -> bb36__0_2076 [label=""];
    bb23__0_2076 -> bb24__0_2076 [label="return"];
    bb24__0_2076 -> bb25__0_2076 [label="return"];
    bb25__0_2076 -> bb26__0_2076 [label="return"];
    bb25__0_2076 -> bb38__0_2076 [label="unwind"];
    bb26__0_2076 -> bb27__0_2076 [label="return"];
    bb26__0_2076 -> bb37__0_2076 [label="unwind"];
    bb27__0_2076 -> bb28__0_2076 [label="return"];
    bb27__0_2076 -> bb37__0_2076 [label="unwind"];
    bb28__0_2076 -> bb29__0_2076 [label="return"];
    bb28__0_2076 -> bb38__0_2076 [label="unwind"];
    bb29__0_2076 -> bb36__0_2076 [label=""];
    bb30__0_2076 -> bb31__0_2076 [label="return"];
    bb31__0_2076 -> bb32__0_2076 [label="return"];
    bb32__0_2076 -> bb36__0_2076 [label=""];
    bb33__0_2076 -> bb34__0_2076 [label="return"];
    bb34__0_2076 -> bb35__0_2076 [label="return"];
    bb35__0_2076 -> bb36__0_2076 [label=""];
    bb37__0_2076 -> bb38__0_2076 [label="return"];
}
