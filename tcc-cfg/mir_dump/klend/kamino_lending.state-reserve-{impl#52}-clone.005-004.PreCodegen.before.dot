digraph Mir_0_9214 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;ReserveFarmKindIter as Clone&gt;::clone(_1: &amp;ReErased state::reserve::ReserveFarmKindIter) -&gt; state::reserve::ReserveFarmKindIter<br align="left"/>let mut _2: usize;<br align="left"/>let mut _3: usize;<br align="left"/>let mut _4: std::marker::PhantomData&lt;()&gt;;<br align="left"/>let mut _5: &amp;ReErased std::marker::PhantomData&lt;()&gt;;<br align="left"/>debug self =&gt; _1;<br align="left"/>>;
    bb0__0_9214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>_2 = ((*_1).0: usize)<br/>StorageLive(_3)<br/>_3 = ((*_1).1: usize)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = &amp;((*_1).2: std::marker::PhantomData&lt;()&gt;)<br/></td></tr><tr><td align="left">_4 = &lt;PhantomData&lt;()&gt; as Clone&gt;::clone(move _5)</td></tr></table>>];
    bb1__0_9214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_0 = ReserveFarmKindIter { idx: move _2, back_idx: move _3, marker: move _4 }<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_9214 -> bb1__0_9214 [label="return"];
}
