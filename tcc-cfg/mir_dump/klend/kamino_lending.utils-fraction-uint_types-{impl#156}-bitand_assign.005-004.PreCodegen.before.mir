// MIR for `uint_types::<impl at C:\Users\Yellow Letter HQ\.cargo\registry\src\index.crates.io-6f17d22bba15001f\uint-0.9.5\src\uint.rs:1511:3: 1511:57>::bitand_assign` before PreCodegen

fn uint_types::<impl at C:\Users\Yellow Letter HQ\.cargo\registry\src\index.crates.io-6f17d22bba15001f\uint-0.9.5\src\uint.rs:1511:3: 1511:57>::bitand_assign(_1: &mut uint_types::U128, _2: uint_types::U128) -> () {
    debug self => _1;
    debug rhs => _2;
    let mut _0: ();
    let mut _3: utils::fraction::uint_types::U128;
    let mut _4: utils::fraction::uint_types::U128;
    let mut _5: utils::fraction::uint_types::U128;

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        _4 = (*_1);
        StorageLive(_5);
        _5 = _2;
        _3 = <uint_types::U128 as BitAnd>::bitand(move _4, move _5) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_5);
        StorageDead(_4);
        (*_1) = move _3;
        StorageDead(_3);
        _0 = const ();
        return;
    }
}
