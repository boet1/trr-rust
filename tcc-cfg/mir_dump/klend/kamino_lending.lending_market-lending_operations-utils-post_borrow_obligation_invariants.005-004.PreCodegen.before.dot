digraph Mir_0_1385 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn post_borrow_obligation_invariants(_1: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, _2: &amp;ReErased state::obligation::Obligation, _3: &amp;ReErased state::reserve::Reserve, _4: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, _5: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _6: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _7: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _8: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _9: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _10: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _11: u128;<br align="left"/>let mut _12: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _13: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _14: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _15: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _16: bool;<br align="left"/>let mut _17: u8;<br align="left"/>let _18: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _19: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _20: u128;<br align="left"/>let mut _21: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _22: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _23: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _24: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _25: ();<br align="left"/>let mut _26: bool;<br align="left"/>let mut _27: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _28: &amp;ReErased i32;<br align="left"/>let _29: i32;<br align="left"/>let mut _30: bool;<br align="left"/>let mut _31: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _32: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _33: !;<br align="left"/>let _34: ();<br align="left"/>let mut _35: &amp;ReErased str;<br align="left"/>let _36: &amp;ReErased str;<br align="left"/>let mut _37: &amp;ReErased std::string::String;<br align="left"/>let _38: &amp;ReErased std::string::String;<br align="left"/>let _39: std::string::String;<br align="left"/>let _40: std::string::String;<br align="left"/>let mut _41: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _42: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _43: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _44: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _45: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _46: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _47: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _48: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _49: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _50: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _51: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _52: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _53: utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _54: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _55: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _56: &amp;ReErased &amp;ReErased str;<br align="left"/>let _57: &amp;ReErased &amp;ReErased str;<br align="left"/>let _58: &amp;ReErased str;<br align="left"/>let mut _59: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _60: anchor_lang::error::Error;<br align="left"/>let mut _61: anchor_lang::error::AnchorError;<br align="left"/>let mut _62: std::string::String;<br align="left"/>let mut _63: &amp;ReErased LendingError;<br align="left"/>let _64: LendingError;<br align="left"/>let mut _65: u32;<br align="left"/>let mut _66: LendingError;<br align="left"/>let mut _67: std::string::String;<br align="left"/>let mut _68: &amp;ReErased LendingError;<br align="left"/>let _69: LendingError;<br align="left"/>let mut _70: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _71: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _72: anchor_lang::error::Source;<br align="left"/>let mut _73: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let _74: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _75: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _76: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _77: u128;<br align="left"/>let _78: ();<br align="left"/>let mut _79: bool;<br align="left"/>let mut _80: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _81: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _82: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _83: &amp;ReErased state::obligation::Obligation;<br align="left"/>let mut _84: !;<br align="left"/>let _85: ();<br align="left"/>let mut _86: &amp;ReErased str;<br align="left"/>let _87: &amp;ReErased str;<br align="left"/>let mut _88: &amp;ReErased std::string::String;<br align="left"/>let _89: &amp;ReErased std::string::String;<br align="left"/>let _90: std::string::String;<br align="left"/>let _91: std::string::String;<br align="left"/>let mut _92: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _93: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _94: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _95: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _96: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _97: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _98: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _99: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _100: [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let mut _101: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _102: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _103: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _104: utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _105: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _106: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _107: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _108: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _109: utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _110: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _111: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _112: &amp;ReErased state::obligation::Obligation;<br align="left"/>let mut _113: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _114: &amp;ReErased &amp;ReErased str;<br align="left"/>let _115: &amp;ReErased &amp;ReErased str;<br align="left"/>let _116: &amp;ReErased str;<br align="left"/>let mut _117: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _118: &amp;ReErased [core::fmt::rt::Placeholder];<br align="left"/>let mut _119: &amp;ReErased [core::fmt::rt::Placeholder; 3_usize];<br align="left"/>let _120: &amp;ReErased [core::fmt::rt::Placeholder; 3_usize];<br align="left"/>let _121: [core::fmt::rt::Placeholder; 3_usize];<br align="left"/>let mut _122: core::fmt::rt::Placeholder;<br align="left"/>let mut _123: core::fmt::rt::Alignment;<br align="left"/>let mut _124: core::fmt::rt::Count;<br align="left"/>let mut _125: core::fmt::rt::Count;<br align="left"/>let mut _126: core::fmt::rt::Placeholder;<br align="left"/>let mut _127: core::fmt::rt::Alignment;<br align="left"/>let mut _128: core::fmt::rt::Count;<br align="left"/>let mut _129: core::fmt::rt::Count;<br align="left"/>let mut _130: core::fmt::rt::Placeholder;<br align="left"/>let mut _131: core::fmt::rt::Alignment;<br align="left"/>let mut _132: core::fmt::rt::Count;<br align="left"/>let mut _133: core::fmt::rt::Count;<br align="left"/>let mut _134: core::fmt::rt::UnsafeArg;<br align="left"/>let mut _135: anchor_lang::error::Error;<br align="left"/>let mut _136: anchor_lang::error::AnchorError;<br align="left"/>let mut _137: std::string::String;<br align="left"/>let mut _138: &amp;ReErased LendingError;<br align="left"/>let _139: LendingError;<br align="left"/>let mut _140: u32;<br align="left"/>let mut _141: LendingError;<br align="left"/>let mut _142: std::string::String;<br align="left"/>let mut _143: &amp;ReErased LendingError;<br align="left"/>let _144: LendingError;<br align="left"/>let mut _145: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _146: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _147: anchor_lang::error::Source;<br align="left"/>let mut _148: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let _149: ();<br align="left"/>let mut _150: bool;<br align="left"/>let mut _151: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _152: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _153: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _154: u128;<br align="left"/>let mut _155: !;<br align="left"/>let _156: ();<br align="left"/>let mut _157: &amp;ReErased str;<br align="left"/>let _158: &amp;ReErased str;<br align="left"/>let mut _159: &amp;ReErased std::string::String;<br align="left"/>let _160: &amp;ReErased std::string::String;<br align="left"/>let _161: std::string::String;<br align="left"/>let _162: std::string::String;<br align="left"/>let mut _163: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _164: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _165: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _166: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _167: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _168: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _169: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _170: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _171: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _172: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _173: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _174: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _175: utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _176: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _177: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _178: &amp;ReErased &amp;ReErased str;<br align="left"/>let _179: &amp;ReErased &amp;ReErased str;<br align="left"/>let _180: &amp;ReErased str;<br align="left"/>let mut _181: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _182: anchor_lang::error::Error;<br align="left"/>let mut _183: anchor_lang::error::AnchorError;<br align="left"/>let mut _184: std::string::String;<br align="left"/>let mut _185: &amp;ReErased LendingError;<br align="left"/>let _186: LendingError;<br align="left"/>let mut _187: u32;<br align="left"/>let mut _188: LendingError;<br align="left"/>let mut _189: std::string::String;<br align="left"/>let mut _190: &amp;ReErased LendingError;<br align="left"/>let _191: LendingError;<br align="left"/>let mut _192: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _193: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _194: anchor_lang::error::Source;<br align="left"/>let mut _195: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let mut _196: ();<br align="left"/>let mut _197: &amp;ReErased LendingError;<br align="left"/>let mut _198: &amp;ReErased LendingError;<br align="left"/>let mut _199: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _200: &amp;ReErased LendingError;<br align="left"/>let mut _201: &amp;ReErased LendingError;<br align="left"/>let mut _202: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _203: &amp;ReErased LendingError;<br align="left"/>let mut _204: &amp;ReErased LendingError;<br align="left"/>let mut _205: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _206: &amp;ReErased i32;<br align="left"/>debug amount =&gt; _1;<br align="left"/>debug obligation =&gt; _2;<br align="left"/>debug reserve =&gt; _3;<br align="left"/>debug liquidity_asset_mv =&gt; _4;<br align="left"/>debug min_accepted_net_value =&gt; _5;<br align="left"/>debug asset_mv =&gt; _6;<br align="left"/>debug new_total_bf_debt_mv =&gt; _9;<br align="left"/>debug new_total_no_bf_debt_mv =&gt; _18;<br align="left"/>debug new_liquidity_asset_mv =&gt; _22;<br align="left"/>debug res =&gt; _40;<br align="left"/>debug new_ltv =&gt; _74;<br align="left"/>debug res =&gt; _91;<br align="left"/>debug res =&gt; _162;<br align="left"/>>;
    bb0__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = &amp;(*_3)<br/>StorageLive(_8)<br/>_8 = _1<br/></td></tr><tr><td align="left">_6 = calculate_market_value_from_liquidity_amount(move _7, move _8)</td></tr></table>>];
    bb1__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_7)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = ((*_2).8: u128)<br/></td></tr><tr><td align="left">_10 = FixedU128::&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;::from_bits(move _11)</td></tr></table>>];
    bb2__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>_13 = _6<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = &amp;(*_3)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_17 = ((*_2).14: u8)<br/>_16 = Ne(move _17, const _)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">_14 = reserve::Reserve::borrow_factor_f(move _15, move _16)</td></tr></table>>];
    bb3__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">_12 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as std::ops::Mul&gt;::mul(move _13, move _14)</td></tr></table>>];
    bb4__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">_9 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as Add&gt;::add(move _10, move _12)</td></tr></table>>];
    bb5__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_10)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_20 = ((*_2).9: u128)<br/></td></tr><tr><td align="left">_19 = FixedU128::&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;::from_bits(move _20)</td></tr></table>>];
    bb6__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageLive(_21)<br/>_21 = _6<br/></td></tr><tr><td align="left">_18 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as Add&gt;::add(move _19, move _21)</td></tr></table>>];
    bb7__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_19)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>_23 = _4<br/>StorageLive(_24)<br/>_24 = _6<br/></td></tr><tr><td align="left">_22 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as Add&gt;::add(move _23, move _24)</td></tr></table>>];
    bb8__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_23)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_27 = &amp;_22<br/>StorageLive(_28)<br/>_206 = const _<br/>_28 = &amp;(*_206)<br/></td></tr><tr><td align="left">_26 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as PartialOrd&lt;i32&gt;&gt;::gt(move _27, move _28)</td></tr></table>>];
    bb9__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left">switchInt(move _26)</td></tr></table>>];
    bb10__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_27)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>_31 = &amp;_22<br/>StorageLive(_32)<br/>_32 = &amp;_5<br/></td></tr><tr><td align="left">_30 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as PartialOrd&gt;::lt(move _31, move _32)</td></tr></table>>];
    bb11__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left">switchInt(move _30)</td></tr></table>>];
    bb12__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_31)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>_199 = const _<br/>_44 = &amp;(*_199)<br/>_43 = &amp;(*_44)<br/>_42 = move _43 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_43)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>_54 = &amp;_22<br/></td></tr><tr><td align="left">_53 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as utils::fraction::FractionExtra&gt;::to_display(move _54)</td></tr></table>>];
    bb13__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>_52 = &amp;_53<br/>_51 = &amp;(*_52)<br/></td></tr><tr><td align="left">_50 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _51)</td></tr></table>>];
    bb14__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>_59 = &amp;(*_3)<br/></td></tr><tr><td align="left">_58 = reserve::Reserve::token_symbol(move _59)</td></tr></table>>];
    bb15__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>_57 = &amp;_58<br/>_56 = &amp;(*_57)<br/></td></tr><tr><td align="left">_55 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;&amp;str&gt;(move _56)</td></tr></table>>];
    bb16__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>_49 = [move _50, move _55]<br/>StorageDead(_55)<br/>StorageDead(_50)<br/>_48 = &amp;_49<br/>_47 = &amp;(*_48)<br/>_46 = move _47 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">_41 = Arguments::&lt;'_&gt;::new_v1(move _42, move _46)</td></tr></table>>];
    bb17__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">_40 = format(move _41)</td></tr></table>>];
    bb18__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_58)<br/>StorageDead(_57)<br/>StorageDead(_53)<br/>StorageDead(_52)<br/>StorageDead(_49)<br/>StorageDead(_48)<br/>StorageDead(_44)<br/>_39 = move _40<br/>StorageDead(_40)<br/>_38 = &amp;_39<br/>_37 = &amp;(*_38)<br/></td></tr><tr><td align="left">_36 = &lt;std::string::String as Deref&gt;::deref(move _37)</td></tr></table>>];
    bb19__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">_35 = &amp;(*_36)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">_34 = solana_program::log::sol_log(move _35)</td></tr></table>>];
    bb20__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/></td></tr><tr><td align="left">drop(_39)</td></tr></table>>];
    bb21__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_38)<br/>StorageDead(_36)<br/>StorageDead(_34)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>_198 = const _<br/>_63 = &amp;(*_198)<br/></td></tr><tr><td align="left">_62 = LendingError::name(move _63)</td></tr></table>>];
    bb22__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>_66 = LendingError::NetValueRemainingTooSmall<br/></td></tr><tr><td align="left">_65 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _66)</td></tr></table>>];
    bb23__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>_197 = const _<br/>_68 = &amp;(*_197)<br/></td></tr><tr><td align="left">_67 = &lt;LendingError as ToString&gt;::to_string(move _68)</td></tr></table>>];
    bb24__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>_72 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\lending_market\\lending_operations.rs&quot;, line: const 3024_u32 }<br/>_71 = anchor_lang::error::ErrorOrigin::Source(move _72)<br/>StorageDead(_72)<br/>_70 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _71)<br/>StorageDead(_71)<br/>StorageLive(_73)<br/>_73 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_61 = anchor_lang::error::AnchorError { error_name: move _62, error_code_number: move _65, error_msg: move _67, error_origin: move _70, compared_values: move _73 }<br/>StorageDead(_73)<br/>StorageDead(_70)<br/>StorageDead(_67)<br/>StorageDead(_65)<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">_60 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _61)</td></tr></table>>];
    bb25__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _60)<br/>StorageDead(_60)<br/>StorageDead(_30)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">_25 = const ()<br/>StorageDead(_30)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>_75 = _9<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>_77 = ((*_2).6: u128)<br/></td></tr><tr><td align="left">_76 = FixedU128::&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;::from_bits(move _77)</td></tr></table>>];
    bb29__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/></td></tr><tr><td align="left">_74 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as std::ops::Div&gt;::div(move _75, move _76)</td></tr></table>>];
    bb30__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>StorageDead(_75)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>_80 = &amp;_74<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>_83 = &amp;(*_2)<br/></td></tr><tr><td align="left">_82 = obligation::Obligation::unhealthy_loan_to_value(move _83)</td></tr></table>>];
    bb31__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">_81 = &amp;_82<br/>StorageDead(_83)<br/></td></tr><tr><td align="left">_79 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as PartialOrd&gt;::gt(move _80, move _81)</td></tr></table>>];
    bb32__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left">switchInt(move _79)</td></tr></table>>];
    bb33__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>StorageDead(_81)<br/>StorageDead(_80)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>_202 = const _<br/>_95 = &amp;(*_202)<br/>_94 = &amp;(*_95)<br/>_93 = move _94 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_94)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>_105 = &amp;_74<br/></td></tr><tr><td align="left">_104 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as utils::fraction::FractionExtra&gt;::to_display(move _105)</td></tr></table>>];
    bb34__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/>_103 = &amp;_104<br/>_102 = &amp;(*_103)<br/></td></tr><tr><td align="left">_101 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _102)</td></tr></table>>];
    bb35__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>_112 = &amp;(*_2)<br/></td></tr><tr><td align="left">_111 = obligation::Obligation::unhealthy_loan_to_value(move _112)</td></tr></table>>];
    bb36__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">_110 = &amp;_111<br/>StorageDead(_112)<br/></td></tr><tr><td align="left">_109 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as utils::fraction::FractionExtra&gt;::to_display(move _110)</td></tr></table>>];
    bb37__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/>_108 = &amp;_109<br/>_107 = &amp;(*_108)<br/></td></tr><tr><td align="left">_106 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _107)</td></tr></table>>];
    bb38__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>_117 = &amp;(*_3)<br/></td></tr><tr><td align="left">_116 = reserve::Reserve::token_symbol(move _117)</td></tr></table>>];
    bb39__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/>_115 = &amp;_116<br/>_114 = &amp;(*_115)<br/></td></tr><tr><td align="left">_113 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;&amp;str&gt;(move _114)</td></tr></table>>];
    bb40__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/>_100 = [move _101, move _106, move _113]<br/>StorageDead(_113)<br/>StorageDead(_106)<br/>StorageDead(_101)<br/>_99 = &amp;_100<br/>_98 = &amp;(*_99)<br/>_97 = move _98 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_98)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>_123 = core::fmt::rt::Alignment::Unknown<br/>StorageLive(_124)<br/>_124 = core::fmt::rt::Count::Is(const 2_usize)<br/>StorageLive(_125)<br/>_125 = core::fmt::rt::Count::Implied<br/></td></tr><tr><td align="left">_122 = core::fmt::rt::Placeholder::new(const 0_usize, const ' ', move _123, const 0_u32, move _124, move _125)</td></tr></table>>];
    bb41__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/>StorageDead(_124)<br/>StorageDead(_123)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>_127 = core::fmt::rt::Alignment::Unknown<br/>StorageLive(_128)<br/>_128 = core::fmt::rt::Count::Is(const 2_usize)<br/>StorageLive(_129)<br/>_129 = core::fmt::rt::Count::Implied<br/></td></tr><tr><td align="left">_126 = core::fmt::rt::Placeholder::new(const 1_usize, const ' ', move _127, const 0_u32, move _128, move _129)</td></tr></table>>];
    bb42__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_129)<br/>StorageDead(_128)<br/>StorageDead(_127)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>_131 = core::fmt::rt::Alignment::Unknown<br/>StorageLive(_132)<br/>_132 = core::fmt::rt::Count::Implied<br/>StorageLive(_133)<br/>_133 = core::fmt::rt::Count::Implied<br/></td></tr><tr><td align="left">_130 = core::fmt::rt::Placeholder::new(const 2_usize, const ' ', move _131, const 0_u32, move _132, move _133)</td></tr></table>>];
    bb43__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/>StorageDead(_132)<br/>StorageDead(_131)<br/>_121 = [move _122, move _126, move _130]<br/>StorageDead(_130)<br/>StorageDead(_126)<br/>StorageDead(_122)<br/>_120 = &amp;_121<br/>_119 = &amp;(*_120)<br/>_118 = move _119 as &amp;[core::fmt::rt::Placeholder] (PointerCoercion(Unsize))<br/>StorageDead(_119)<br/>StorageLive(_134)<br/></td></tr><tr><td align="left">_134 = core::fmt::rt::UnsafeArg::new()</td></tr></table>>];
    bb44__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left">_92 = Arguments::&lt;'_&gt;::new_v1_formatted(move _93, move _97, move _118, move _134)</td></tr></table>>];
    bb45__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_134)<br/>StorageDead(_118)<br/>StorageDead(_97)<br/>StorageDead(_93)<br/></td></tr><tr><td align="left">_91 = format(move _92)</td></tr></table>>];
    bb46__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>StorageDead(_121)<br/>StorageDead(_120)<br/>StorageDead(_116)<br/>StorageDead(_115)<br/>StorageDead(_111)<br/>StorageDead(_109)<br/>StorageDead(_108)<br/>StorageDead(_104)<br/>StorageDead(_103)<br/>StorageDead(_100)<br/>StorageDead(_99)<br/>StorageDead(_95)<br/>_90 = move _91<br/>StorageDead(_91)<br/>_89 = &amp;_90<br/>_88 = &amp;(*_89)<br/></td></tr><tr><td align="left">_87 = &lt;std::string::String as Deref&gt;::deref(move _88)</td></tr></table>>];
    bb47__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">_86 = &amp;(*_87)<br/>StorageDead(_88)<br/></td></tr><tr><td align="left">_85 = solana_program::log::sol_log(move _86)</td></tr></table>>];
    bb48__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/></td></tr><tr><td align="left">drop(_90)</td></tr></table>>];
    bb49__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>StorageDead(_89)<br/>StorageDead(_87)<br/>StorageDead(_85)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>_201 = const _<br/>_138 = &amp;(*_201)<br/></td></tr><tr><td align="left">_137 = LendingError::name(move _138)</td></tr></table>>];
    bb50__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>_141 = LendingError::WorseLtvThanUnhealthyLtv<br/></td></tr><tr><td align="left">_140 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _141)</td></tr></table>>];
    bb51__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_141)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>_200 = const _<br/>_143 = &amp;(*_200)<br/></td></tr><tr><td align="left">_142 = &lt;LendingError as ToString&gt;::to_string(move _143)</td></tr></table>>];
    bb52__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_143)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>_147 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\lending_market\\lending_operations.rs&quot;, line: const 3035_u32 }<br/>_146 = anchor_lang::error::ErrorOrigin::Source(move _147)<br/>StorageDead(_147)<br/>_145 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _146)<br/>StorageDead(_146)<br/>StorageLive(_148)<br/>_148 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_136 = anchor_lang::error::AnchorError { error_name: move _137, error_code_number: move _140, error_msg: move _142, error_origin: move _145, compared_values: move _148 }<br/>StorageDead(_148)<br/>StorageDead(_145)<br/>StorageDead(_142)<br/>StorageDead(_140)<br/>StorageDead(_137)<br/></td></tr><tr><td align="left">_135 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _136)</td></tr></table>>];
    bb53__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_136)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _135)<br/>StorageDead(_135)<br/>StorageDead(_79)<br/>StorageDead(_78)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>StorageDead(_81)<br/>StorageDead(_80)<br/>_78 = const ()<br/>StorageDead(_79)<br/>StorageDead(_78)<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>_151 = &amp;_18<br/>StorageLive(_152)<br/>StorageLive(_153)<br/>StorageLive(_154)<br/>_154 = ((*_2).6: u128)<br/></td></tr><tr><td align="left">_153 = FixedU128::&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;::from_bits(move _154)</td></tr></table>>];
    bb55__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">_152 = &amp;_153<br/>StorageDead(_154)<br/></td></tr><tr><td align="left">_150 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as PartialOrd&gt;::ge(move _151, move _152)</td></tr></table>>];
    bb56__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left">switchInt(move _150)</td></tr></table>>];
    bb57__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_153)<br/>StorageDead(_152)<br/>StorageDead(_151)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>StorageLive(_161)<br/>StorageLive(_162)<br/>StorageLive(_163)<br/>StorageLive(_164)<br/>StorageLive(_165)<br/>StorageLive(_166)<br/>_205 = const _<br/>_166 = &amp;(*_205)<br/>_165 = &amp;(*_166)<br/>_164 = move _165 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_165)<br/>StorageLive(_168)<br/>StorageLive(_169)<br/>StorageLive(_170)<br/>StorageLive(_171)<br/>StorageLive(_172)<br/>StorageLive(_173)<br/>StorageLive(_174)<br/>StorageLive(_175)<br/>StorageLive(_176)<br/>_176 = &amp;_18<br/></td></tr><tr><td align="left">_175 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as utils::fraction::FractionExtra&gt;::to_display(move _176)</td></tr></table>>];
    bb58__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_176)<br/>_174 = &amp;_175<br/>_173 = &amp;(*_174)<br/></td></tr><tr><td align="left">_172 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _173)</td></tr></table>>];
    bb59__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_173)<br/>StorageLive(_177)<br/>StorageLive(_178)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>StorageLive(_181)<br/>_181 = &amp;(*_3)<br/></td></tr><tr><td align="left">_180 = reserve::Reserve::token_symbol(move _181)</td></tr></table>>];
    bb60__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_181)<br/>_179 = &amp;_180<br/>_178 = &amp;(*_179)<br/></td></tr><tr><td align="left">_177 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;&amp;str&gt;(move _178)</td></tr></table>>];
    bb61__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_178)<br/>_171 = [move _172, move _177]<br/>StorageDead(_177)<br/>StorageDead(_172)<br/>_170 = &amp;_171<br/>_169 = &amp;(*_170)<br/>_168 = move _169 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_169)<br/></td></tr><tr><td align="left">_163 = Arguments::&lt;'_&gt;::new_v1(move _164, move _168)</td></tr></table>>];
    bb62__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_168)<br/>StorageDead(_164)<br/></td></tr><tr><td align="left">_162 = format(move _163)</td></tr></table>>];
    bb63__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_163)<br/>StorageDead(_180)<br/>StorageDead(_179)<br/>StorageDead(_175)<br/>StorageDead(_174)<br/>StorageDead(_171)<br/>StorageDead(_170)<br/>StorageDead(_166)<br/>_161 = move _162<br/>StorageDead(_162)<br/>_160 = &amp;_161<br/>_159 = &amp;(*_160)<br/></td></tr><tr><td align="left">_158 = &lt;std::string::String as Deref&gt;::deref(move _159)</td></tr></table>>];
    bb64__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">_157 = &amp;(*_158)<br/>StorageDead(_159)<br/></td></tr><tr><td align="left">_156 = solana_program::log::sol_log(move _157)</td></tr></table>>];
    bb65__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_157)<br/></td></tr><tr><td align="left">drop(_161)</td></tr></table>>];
    bb66__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_161)<br/>StorageDead(_160)<br/>StorageDead(_158)<br/>StorageDead(_156)<br/>StorageLive(_182)<br/>StorageLive(_183)<br/>StorageLive(_184)<br/>StorageLive(_185)<br/>_204 = const _<br/>_185 = &amp;(*_204)<br/></td></tr><tr><td align="left">_184 = LendingError::name(move _185)</td></tr></table>>];
    bb67__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_185)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>_188 = LendingError::LiabilitiesBiggerThanAssets<br/></td></tr><tr><td align="left">_187 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _188)</td></tr></table>>];
    bb68__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_188)<br/>StorageLive(_189)<br/>StorageLive(_190)<br/>_203 = const _<br/>_190 = &amp;(*_203)<br/></td></tr><tr><td align="left">_189 = &lt;LendingError as ToString&gt;::to_string(move _190)</td></tr></table>>];
    bb69__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_190)<br/>StorageLive(_192)<br/>StorageLive(_193)<br/>StorageLive(_194)<br/>_194 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\lending_market\\lending_operations.rs&quot;, line: const 3044_u32 }<br/>_193 = anchor_lang::error::ErrorOrigin::Source(move _194)<br/>StorageDead(_194)<br/>_192 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _193)<br/>StorageDead(_193)<br/>StorageLive(_195)<br/>_195 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_183 = anchor_lang::error::AnchorError { error_name: move _184, error_code_number: move _187, error_msg: move _189, error_origin: move _192, compared_values: move _195 }<br/>StorageDead(_195)<br/>StorageDead(_192)<br/>StorageDead(_189)<br/>StorageDead(_187)<br/>StorageDead(_184)<br/></td></tr><tr><td align="left">_182 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _183)</td></tr></table>>];
    bb70__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_183)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _182)<br/>StorageDead(_182)<br/>StorageDead(_150)<br/>StorageDead(_149)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb71__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_153)<br/>StorageDead(_152)<br/>StorageDead(_151)<br/>_149 = const ()<br/>StorageDead(_150)<br/>StorageDead(_149)<br/>StorageLive(_196)<br/>_196 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _196)<br/>StorageDead(_196)<br/>StorageDead(_74)<br/>StorageDead(_22)<br/>StorageDead(_18)<br/>StorageDead(_9)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb72__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb73__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_18)<br/>StorageDead(_9)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb74__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left">return</td></tr></table>>];
    bb75__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">75 (cleanup)</td></tr><tr><td align="left">drop(_184)</td></tr></table>>];
    bb76__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">76 (cleanup)</td></tr><tr><td align="left">drop(_161)</td></tr></table>>];
    bb77__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">77 (cleanup)</td></tr><tr><td align="left">drop(_137)</td></tr></table>>];
    bb78__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">78 (cleanup)</td></tr><tr><td align="left">drop(_90)</td></tr></table>>];
    bb79__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">79 (cleanup)</td></tr><tr><td align="left">drop(_62)</td></tr></table>>];
    bb80__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">80 (cleanup)</td></tr><tr><td align="left">drop(_39)</td></tr></table>>];
    bb81__0_1385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">81 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_1385 -> bb1__0_1385 [label="return"];
    bb1__0_1385 -> bb2__0_1385 [label="return"];
    bb2__0_1385 -> bb3__0_1385 [label="return"];
    bb3__0_1385 -> bb4__0_1385 [label="return"];
    bb4__0_1385 -> bb5__0_1385 [label="return"];
    bb5__0_1385 -> bb6__0_1385 [label="return"];
    bb6__0_1385 -> bb7__0_1385 [label="return"];
    bb7__0_1385 -> bb8__0_1385 [label="return"];
    bb8__0_1385 -> bb9__0_1385 [label="return"];
    bb9__0_1385 -> bb27__0_1385 [label="0"];
    bb9__0_1385 -> bb10__0_1385 [label="otherwise"];
    bb10__0_1385 -> bb11__0_1385 [label="return"];
    bb11__0_1385 -> bb26__0_1385 [label="0"];
    bb11__0_1385 -> bb12__0_1385 [label="otherwise"];
    bb12__0_1385 -> bb13__0_1385 [label="return"];
    bb13__0_1385 -> bb14__0_1385 [label="return"];
    bb14__0_1385 -> bb15__0_1385 [label="return"];
    bb15__0_1385 -> bb16__0_1385 [label="return"];
    bb16__0_1385 -> bb17__0_1385 [label="return"];
    bb17__0_1385 -> bb18__0_1385 [label="return"];
    bb18__0_1385 -> bb19__0_1385 [label="return"];
    bb18__0_1385 -> bb80__0_1385 [label="unwind"];
    bb19__0_1385 -> bb20__0_1385 [label="return"];
    bb19__0_1385 -> bb80__0_1385 [label="unwind"];
    bb20__0_1385 -> bb21__0_1385 [label="return"];
    bb20__0_1385 -> bb81__0_1385 [label="unwind"];
    bb21__0_1385 -> bb22__0_1385 [label="return"];
    bb22__0_1385 -> bb23__0_1385 [label="return"];
    bb22__0_1385 -> bb79__0_1385 [label="unwind"];
    bb23__0_1385 -> bb24__0_1385 [label="return"];
    bb23__0_1385 -> bb79__0_1385 [label="unwind"];
    bb24__0_1385 -> bb25__0_1385 [label="return"];
    bb24__0_1385 -> bb81__0_1385 [label="unwind"];
    bb25__0_1385 -> bb73__0_1385 [label=""];
    bb26__0_1385 -> bb28__0_1385 [label=""];
    bb27__0_1385 -> bb28__0_1385 [label=""];
    bb28__0_1385 -> bb29__0_1385 [label="return"];
    bb29__0_1385 -> bb30__0_1385 [label="return"];
    bb30__0_1385 -> bb31__0_1385 [label="return"];
    bb31__0_1385 -> bb32__0_1385 [label="return"];
    bb32__0_1385 -> bb54__0_1385 [label="0"];
    bb32__0_1385 -> bb33__0_1385 [label="otherwise"];
    bb33__0_1385 -> bb34__0_1385 [label="return"];
    bb34__0_1385 -> bb35__0_1385 [label="return"];
    bb35__0_1385 -> bb36__0_1385 [label="return"];
    bb36__0_1385 -> bb37__0_1385 [label="return"];
    bb37__0_1385 -> bb38__0_1385 [label="return"];
    bb38__0_1385 -> bb39__0_1385 [label="return"];
    bb39__0_1385 -> bb40__0_1385 [label="return"];
    bb40__0_1385 -> bb41__0_1385 [label="return"];
    bb41__0_1385 -> bb42__0_1385 [label="return"];
    bb42__0_1385 -> bb43__0_1385 [label="return"];
    bb43__0_1385 -> bb44__0_1385 [label="return"];
    bb44__0_1385 -> bb45__0_1385 [label="return"];
    bb45__0_1385 -> bb46__0_1385 [label="return"];
    bb46__0_1385 -> bb47__0_1385 [label="return"];
    bb46__0_1385 -> bb78__0_1385 [label="unwind"];
    bb47__0_1385 -> bb48__0_1385 [label="return"];
    bb47__0_1385 -> bb78__0_1385 [label="unwind"];
    bb48__0_1385 -> bb49__0_1385 [label="return"];
    bb48__0_1385 -> bb81__0_1385 [label="unwind"];
    bb49__0_1385 -> bb50__0_1385 [label="return"];
    bb50__0_1385 -> bb51__0_1385 [label="return"];
    bb50__0_1385 -> bb77__0_1385 [label="unwind"];
    bb51__0_1385 -> bb52__0_1385 [label="return"];
    bb51__0_1385 -> bb77__0_1385 [label="unwind"];
    bb52__0_1385 -> bb53__0_1385 [label="return"];
    bb52__0_1385 -> bb81__0_1385 [label="unwind"];
    bb53__0_1385 -> bb72__0_1385 [label=""];
    bb54__0_1385 -> bb55__0_1385 [label="return"];
    bb55__0_1385 -> bb56__0_1385 [label="return"];
    bb56__0_1385 -> bb71__0_1385 [label="0"];
    bb56__0_1385 -> bb57__0_1385 [label="otherwise"];
    bb57__0_1385 -> bb58__0_1385 [label="return"];
    bb58__0_1385 -> bb59__0_1385 [label="return"];
    bb59__0_1385 -> bb60__0_1385 [label="return"];
    bb60__0_1385 -> bb61__0_1385 [label="return"];
    bb61__0_1385 -> bb62__0_1385 [label="return"];
    bb62__0_1385 -> bb63__0_1385 [label="return"];
    bb63__0_1385 -> bb64__0_1385 [label="return"];
    bb63__0_1385 -> bb76__0_1385 [label="unwind"];
    bb64__0_1385 -> bb65__0_1385 [label="return"];
    bb64__0_1385 -> bb76__0_1385 [label="unwind"];
    bb65__0_1385 -> bb66__0_1385 [label="return"];
    bb65__0_1385 -> bb81__0_1385 [label="unwind"];
    bb66__0_1385 -> bb67__0_1385 [label="return"];
    bb67__0_1385 -> bb68__0_1385 [label="return"];
    bb67__0_1385 -> bb75__0_1385 [label="unwind"];
    bb68__0_1385 -> bb69__0_1385 [label="return"];
    bb68__0_1385 -> bb75__0_1385 [label="unwind"];
    bb69__0_1385 -> bb70__0_1385 [label="return"];
    bb69__0_1385 -> bb81__0_1385 [label="unwind"];
    bb70__0_1385 -> bb72__0_1385 [label=""];
    bb71__0_1385 -> bb74__0_1385 [label=""];
    bb72__0_1385 -> bb73__0_1385 [label=""];
    bb73__0_1385 -> bb74__0_1385 [label=""];
    bb75__0_1385 -> bb81__0_1385 [label="return"];
    bb76__0_1385 -> bb81__0_1385 [label="return"];
    bb77__0_1385 -> bb81__0_1385 [label="return"];
    bb78__0_1385 -> bb81__0_1385 [label="return"];
    bb79__0_1385 -> bb81__0_1385 [label="return"];
    bb80__0_1385 -> bb81__0_1385 [label="return"];
}
