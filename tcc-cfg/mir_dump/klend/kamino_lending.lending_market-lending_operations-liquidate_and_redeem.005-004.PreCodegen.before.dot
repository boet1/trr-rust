digraph Mir_0_1318 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn liquidate_and_redeem(_1: &amp;ReErased state::lending_market::LendingMarket, _2: &amp;ReErased dyn [Binder(Trait(utils::account_loader_trait::AnyAccountLoader&lt;'_, state::reserve::Reserve&gt;), [])] + ReErased, _3: &amp;ReErased dyn [Binder(Trait(utils::account_loader_trait::AnyAccountLoader&lt;'_, state::reserve::Reserve&gt;), [])] + ReErased, _4: &amp;ReErased mut state::obligation::Obligation, _5: &amp;ReErased anchor_lang::prelude::Clock, _6: u64, _7: u64, _8: std::option::Option&lt;u64&gt;, _9: impl Iterator&lt;Item = T&gt;/#2) -&gt; std::result::Result&lt;state::types::LiquidateAndRedeemResult, anchor_lang::error::Error&gt;<br align="left"/>let _10: u64;<br align="left"/>let _11: u64;<br align="left"/>let _12: u64;<br align="left"/>let _13: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _14: state::types::LiquidationReason;<br align="left"/>let mut _15: state::types::LiquidateObligationResult;<br align="left"/>let mut _16: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, state::types::LiquidateObligationResult&gt;;<br align="left"/>let mut _17: std::result::Result&lt;state::types::LiquidateObligationResult, anchor_lang::error::Error&gt;;<br align="left"/>let mut _18: &amp;ReErased state::lending_market::LendingMarket;<br align="left"/>let mut _19: &amp;ReErased dyn [Binder(Trait(utils::account_loader_trait::AnyAccountLoader&lt;'_, state::reserve::Reserve&gt;), [])] + ReErased;<br align="left"/>let mut _20: &amp;ReErased dyn [Binder(Trait(utils::account_loader_trait::AnyAccountLoader&lt;'_, state::reserve::Reserve&gt;), [])] + ReErased;<br align="left"/>let mut _21: &amp;ReErased dyn [Binder(Trait(utils::account_loader_trait::AnyAccountLoader&lt;'_, state::reserve::Reserve&gt;), [])] + ReErased;<br align="left"/>let mut _22: &amp;ReErased dyn [Binder(Trait(utils::account_loader_trait::AnyAccountLoader&lt;'_, state::reserve::Reserve&gt;), [])] + ReErased;<br align="left"/>let mut _23: &amp;ReErased mut state::obligation::Obligation;<br align="left"/>let mut _24: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let mut _25: u64;<br align="left"/>let mut _26: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _27: impl Iterator&lt;Item = T&gt;/#2;<br align="left"/>let mut _28: isize;<br align="left"/>let _29: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _30: !;<br align="left"/>let mut _31: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _32: state::types::LiquidateObligationResult;<br align="left"/>let _33: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _34: std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _35: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;&gt;;<br align="left"/>let mut _36: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _37: &amp;ReErased dyn [Binder(Trait(utils::account_loader_trait::AnyAccountLoader&lt;'_, state::reserve::Reserve&gt;), [])] + ReErased;<br align="left"/>let mut _38: isize;<br align="left"/>let _39: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _40: !;<br align="left"/>let mut _41: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _42: std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let _43: std::option::Option&lt;(u64, u64)&gt;;<br align="left"/>let mut _44: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::option::Option&lt;(u64, u64)&gt;&gt;;<br align="left"/>let mut _45: std::result::Result&lt;std::option::Option&lt;(u64, u64)&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _46: &amp;ReErased mut state::reserve::Reserve;<br align="left"/>let mut _47: &amp;ReErased mut state::reserve::Reserve;<br align="left"/>let mut _48: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _49: u64;<br align="left"/>let mut _50: u64;<br align="left"/>let mut _51: u64;<br align="left"/>let mut _52: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _53: state::types::LiquidationReason;<br align="left"/>let mut _54: u64;<br align="left"/>let mut _55: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let mut _56: isize;<br align="left"/>let _57: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _58: !;<br align="left"/>let mut _59: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _60: std::option::Option&lt;(u64, u64)&gt;;<br align="left"/>let mut _61: state::types::LiquidateAndRedeemResult;<br align="left"/>let mut _62: u64;<br align="left"/>let mut _63: u64;<br align="left"/>let mut _64: std::option::Option&lt;(u64, u64)&gt;;<br align="left"/>let mut _65: u64;<br align="left"/>let mut _66: isize;<br align="left"/>let mut _67: isize;<br align="left"/>let mut _68: isize;<br align="left"/>let mut _69: isize;<br align="left"/>let mut _70: isize;<br align="left"/>let mut _71: isize;<br align="left"/>let mut _72: isize;<br align="left"/>let mut _73: isize;<br align="left"/>let mut _74: isize;<br align="left"/>let mut _75: isize;<br align="left"/>let mut _76: isize;<br align="left"/>let mut _77: isize;<br align="left"/>let mut _78: isize;<br align="left"/>let mut _79: isize;<br align="left"/>let mut _80: isize;<br align="left"/>debug lending_market =&gt; _1;<br align="left"/>debug repay_reserve =&gt; _2;<br align="left"/>debug withdraw_reserve =&gt; _3;<br align="left"/>debug obligation =&gt; _4;<br align="left"/>debug clock =&gt; _5;<br align="left"/>debug liquidity_amount =&gt; _6;<br align="left"/>debug min_acceptable_received_liquidity_amount =&gt; _7;<br align="left"/>debug max_allowed_ltv_override_pct_opt =&gt; _8;<br align="left"/>debug deposit_reserves_iter =&gt; _9;<br align="left"/>debug repay_amount =&gt; _10;<br align="left"/>debug withdraw_collateral_amount =&gt; _11;<br align="left"/>debug withdraw_amount =&gt; _12;<br align="left"/>debug liquidation_bonus_rate =&gt; _13;<br align="left"/>debug liquidation_reason =&gt; _14;<br align="left"/>debug residual =&gt; _29;<br align="left"/>debug val =&gt; _32;<br align="left"/>debug withdraw_reserve =&gt; _33;<br align="left"/>debug residual =&gt; _39;<br align="left"/>debug val =&gt; _42;<br align="left"/>debug total_withdraw_liquidity_amount =&gt; _43;<br align="left"/>debug residual =&gt; _57;<br align="left"/>debug val =&gt; _60;<br align="left"/>>;
    bb0__0_1318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = &amp;(*_1)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_20 = &amp;(*_2)<br/>_19 = move _20 as &amp;dyn utils::account_loader_trait::AnyAccountLoader&lt;'_, state::reserve::Reserve&gt; (PointerCoercion(Unsize))<br/>StorageDead(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_22 = &amp;(*_3)<br/>_21 = move _22 as &amp;dyn utils::account_loader_trait::AnyAccountLoader&lt;'_, state::reserve::Reserve&gt; (PointerCoercion(Unsize))<br/>StorageDead(_22)<br/>StorageLive(_23)<br/>_23 = &amp;mut (*_4)<br/>StorageLive(_24)<br/>_24 = &amp;(*_5)<br/>StorageLive(_25)<br/>_25 = _6<br/>StorageLive(_26)<br/>_26 = _8<br/>StorageLive(_27)<br/>_27 = move _9<br/></td></tr><tr><td align="left">_17 = liquidate_obligation::&lt;'_, T, impl Iterator&lt;Item = T&gt;&gt;(move _18, move _19, move _21, move _23, move _24, move _25, move _26, move _27)</td></tr></table>>];
    bb1__0_1318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/>StorageDead(_21)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">_16 = &lt;std::result::Result&lt;state::types::LiquidateObligationResult, anchor_lang::error::Error&gt; as Try&gt;::branch(move _17)</td></tr></table>>];
    bb2__0_1318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>_28 = discriminant(_16)<br/></td></tr><tr><td align="left">switchInt(move _28)</td></tr></table>>];
    bb3__0_1318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_32)<br/>_32 = move ((_16 as Continue).0: state::types::LiquidateObligationResult)<br/>_15 = move _32<br/>StorageDead(_32)<br/>StorageLive(_10)<br/>_10 = (_15.1: u64)<br/>StorageLive(_11)<br/>_11 = (_15.3: u64)<br/>StorageLive(_12)<br/>_12 = (_15.2: u64)<br/>StorageLive(_13)<br/>_13 = (_15.4: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;)<br/>StorageLive(_14)<br/>_14 = (_15.5: state::types::LiquidationReason)<br/>_66 = discriminant(_16)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>_37 = &amp;(*_3)<br/></td></tr><tr><td align="left">_36 = &lt;dyn account_loader_trait::AnyAccountLoader&lt;'_, reserve::Reserve&gt; as account_loader_trait::AnyAccountLoader&lt;'_, reserve::Reserve&gt;&gt;::get_mut(move _37)</td></tr></table>>];
    bb4__0_1318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_1318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_29)<br/>_29 = move ((_16 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_31)<br/>_31 = move _29<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;state::types::LiquidateAndRedeemResult, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _31)</td></tr></table>>];
    bb6__0_1318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_29)<br/>_76 = discriminant(_16)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_1318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/></td></tr><tr><td align="left">_35 = &lt;std::result::Result&lt;RefMut&lt;'_, reserve::Reserve&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _36)</td></tr></table>>];
    bb8__0_1318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>_38 = discriminant(_35)<br/></td></tr><tr><td align="left">switchInt(move _38)</td></tr></table>>];
    bb9__0_1318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_42)<br/>_42 = move ((_35 as Continue).0: std::cell::RefMut&lt;'_, state::reserve::Reserve&gt;)<br/>_34 = move _42<br/>StorageDead(_42)<br/>_33 = &amp;mut _34<br/>_68 = discriminant(_35)<br/>StorageDead(_35)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>_48 = &amp;mut (*_33)<br/></td></tr><tr><td align="left">_47 = &lt;RefMut&lt;'_, reserve::Reserve&gt; as DerefMut&gt;::deref_mut(move _48)</td></tr></table>>];
    bb10__0_1318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_39)<br/>_39 = move ((_35 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_41)<br/>_41 = move _39<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;state::types::LiquidateAndRedeemResult, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _41)</td></tr></table>>];
    bb11__0_1318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_39)<br/>_74 = discriminant(_35)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_1318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">_46 = &amp;mut (*_47)<br/>StorageDead(_48)<br/>StorageLive(_49)<br/>_49 = _10<br/>StorageLive(_50)<br/>_50 = _12<br/>StorageLive(_51)<br/>_51 = _11<br/>StorageLive(_52)<br/>_52 = _13<br/>StorageLive(_53)<br/>_53 = _14<br/>StorageLive(_54)<br/>_54 = _7<br/>StorageLive(_55)<br/>_55 = &amp;(*_5)<br/></td></tr><tr><td align="left">_45 = post_liquidate_redeem(move _46, move _49, move _50, move _51, move _52, move _53, move _54, move _55)</td></tr></table>>];
    bb13__0_1318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_54)<br/>StorageDead(_53)<br/>StorageDead(_52)<br/>StorageDead(_51)<br/>StorageDead(_50)<br/>StorageDead(_49)<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">_44 = &lt;std::result::Result&lt;std::option::Option&lt;(u64, u64)&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _45)</td></tr></table>>];
    bb14__0_1318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>_56 = discriminant(_44)<br/></td></tr><tr><td align="left">switchInt(move _56)</td></tr></table>>];
    bb15__0_1318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_60)<br/>_60 = ((_44 as Continue).0: std::option::Option&lt;(u64, u64)&gt;)<br/>_43 = _60<br/>StorageDead(_60)<br/>_70 = discriminant(_44)<br/>StorageDead(_47)<br/>StorageDead(_44)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>_62 = _10<br/>StorageLive(_63)<br/>_63 = _12<br/>StorageLive(_64)<br/>_64 = _43<br/>StorageLive(_65)<br/>_65 = _11<br/>_61 = state::types::LiquidateAndRedeemResult { repay_amount: move _62, withdraw_amount: move _63, withdraw_collateral_amount: move _65, total_withdraw_liquidity_amount: move _64 }<br/>StorageDead(_65)<br/>StorageDead(_64)<br/>StorageDead(_63)<br/>StorageDead(_62)<br/>_0 = std::result::Result::&lt;state::types::LiquidateAndRedeemResult, anchor_lang::error::Error&gt;::Ok(move _61)<br/>StorageDead(_61)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">drop(_34)</td></tr></table>>];
    bb16__0_1318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_57)<br/>_57 = move ((_44 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_59)<br/>_59 = move _57<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;state::types::LiquidateAndRedeemResult, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _59)</td></tr></table>>];
    bb17__0_1318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_57)<br/>_72 = discriminant(_44)<br/>StorageDead(_47)<br/>StorageDead(_44)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">drop(_34)</td></tr></table>>];
    bb18__0_1318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_33)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_1318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_33)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_1318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left">return</td></tr></table>>];
    bb21__0_1318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">21 (cleanup)</td></tr><tr><td align="left">drop(_34)</td></tr></table>>];
    bb22__0_1318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">22 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb23__0_1318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">23 (cleanup)</td></tr><tr><td align="left" balign="left">_78 = discriminant(_44)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_1318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">24 (cleanup)</td></tr><tr><td align="left" balign="left">_79 = discriminant(_35)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_1318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">25 (cleanup)</td></tr><tr><td align="left" balign="left">_80 = discriminant(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_1318 -> bb1__0_1318 [label="return"];
    bb0__0_1318 -> bb22__0_1318 [label="unwind"];
    bb1__0_1318 -> bb2__0_1318 [label="return"];
    bb1__0_1318 -> bb22__0_1318 [label="unwind"];
    bb2__0_1318 -> bb3__0_1318 [label="0"];
    bb2__0_1318 -> bb5__0_1318 [label="1"];
    bb2__0_1318 -> bb4__0_1318 [label="otherwise"];
    bb3__0_1318 -> bb7__0_1318 [label="return"];
    bb3__0_1318 -> bb22__0_1318 [label="unwind"];
    bb5__0_1318 -> bb6__0_1318 [label="return"];
    bb5__0_1318 -> bb25__0_1318 [label="unwind"];
    bb6__0_1318 -> bb20__0_1318 [label=""];
    bb7__0_1318 -> bb8__0_1318 [label="return"];
    bb7__0_1318 -> bb22__0_1318 [label="unwind"];
    bb8__0_1318 -> bb9__0_1318 [label="0"];
    bb8__0_1318 -> bb10__0_1318 [label="1"];
    bb8__0_1318 -> bb4__0_1318 [label="otherwise"];
    bb9__0_1318 -> bb12__0_1318 [label="return"];
    bb9__0_1318 -> bb21__0_1318 [label="unwind"];
    bb10__0_1318 -> bb11__0_1318 [label="return"];
    bb10__0_1318 -> bb24__0_1318 [label="unwind"];
    bb11__0_1318 -> bb19__0_1318 [label=""];
    bb12__0_1318 -> bb13__0_1318 [label="return"];
    bb12__0_1318 -> bb21__0_1318 [label="unwind"];
    bb13__0_1318 -> bb14__0_1318 [label="return"];
    bb13__0_1318 -> bb21__0_1318 [label="unwind"];
    bb14__0_1318 -> bb15__0_1318 [label="0"];
    bb14__0_1318 -> bb16__0_1318 [label="1"];
    bb14__0_1318 -> bb4__0_1318 [label="otherwise"];
    bb15__0_1318 -> bb18__0_1318 [label="return"];
    bb15__0_1318 -> bb22__0_1318 [label="unwind"];
    bb16__0_1318 -> bb17__0_1318 [label="return"];
    bb16__0_1318 -> bb23__0_1318 [label="unwind"];
    bb17__0_1318 -> bb19__0_1318 [label="return"];
    bb17__0_1318 -> bb22__0_1318 [label="unwind"];
    bb18__0_1318 -> bb20__0_1318 [label=""];
    bb19__0_1318 -> bb20__0_1318 [label=""];
    bb21__0_1318 -> bb22__0_1318 [label="return"];
    bb23__0_1318 -> bb21__0_1318 [label=""];
    bb24__0_1318 -> bb22__0_1318 [label=""];
    bb25__0_1318 -> bb22__0_1318 [label=""];
}
