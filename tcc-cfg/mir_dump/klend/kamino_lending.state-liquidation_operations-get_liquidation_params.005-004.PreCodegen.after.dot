digraph Mir_0_1567 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn get_liquidation_params(_1: &amp;ReErased state::lending_market::LendingMarket, _2: &amp;ReErased state::reserve::Reserve, _3: &amp;ReErased state::reserve::Reserve, _4: &amp;ReErased state::obligation::Obligation, _5: u64, _6: bool, _7: bool, _8: std::option::Option&lt;u64&gt;) -&gt; std::result::Result&lt;state::types::LiquidationParams, anchor_lang::error::Error&gt;<br align="left"/>let _9: state::types::LiquidationCheckInputs&lt;ReErased&gt;;<br align="left"/>let mut _10: &amp;ReErased state::lending_market::LendingMarket;<br align="left"/>let mut _11: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _12: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _13: &amp;ReErased state::obligation::Obligation;<br align="left"/>let mut _14: u64;<br align="left"/>let mut _15: std::option::Option&lt;u64&gt;;<br align="left"/>let _16: state::types::LiquidationParams;<br align="left"/>let mut _17: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, LendingError&gt;, state::types::LiquidationParams&gt;;<br align="left"/>let mut _18: std::result::Result&lt;state::types::LiquidationParams, LendingError&gt;;<br align="left"/>let mut _19: std::option::Option&lt;state::types::LiquidationParams&gt;;<br align="left"/>let mut _20: std::option::Option&lt;state::types::LiquidationParams&gt;;<br align="left"/>let mut _21: std::option::Option&lt;state::types::LiquidationParams&gt;;<br align="left"/>let mut _22: std::option::Option&lt;state::types::LiquidationParams&gt;;<br align="left"/>let mut _23: &amp;ReErased state::types::LiquidationCheckInputs&lt;ReErased&gt;;<br align="left"/>let _24: &amp;ReErased state::types::LiquidationCheckInputs&lt;ReErased&gt;;<br align="left"/>let mut _25: Closure(DefId(0:1568 ~ kamino_lending[6389]::state::liquidation_operations::get_liquidation_params::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn(()) -&gt; std::option::Option&lt;state::types::LiquidationParams&gt;, []), (&amp;ReErased state::types::LiquidationCheckInputs&lt;ReErased&gt;,)]);<br align="left"/>let mut _26: &amp;ReErased state::types::LiquidationCheckInputs&lt;ReErased&gt;;<br align="left"/>let mut _27: Closure(DefId(0:1569 ~ kamino_lending[6389]::state::liquidation_operations::get_liquidation_params::{closure#1}), [i32, Binder(extern &quot;RustCall&quot; fn(()) -&gt; std::option::Option&lt;state::types::LiquidationParams&gt;, []), (&amp;ReErased state::types::LiquidationCheckInputs&lt;ReErased&gt;,)]);<br align="left"/>let mut _28: &amp;ReErased state::types::LiquidationCheckInputs&lt;ReErased&gt;;<br align="left"/>let mut _29: Closure(DefId(0:1570 ~ kamino_lending[6389]::state::liquidation_operations::get_liquidation_params::{closure#2}), [i32, Binder(extern &quot;RustCall&quot; fn(()) -&gt; std::option::Option&lt;state::types::LiquidationParams&gt;, []), (&amp;ReErased state::types::LiquidationCheckInputs&lt;ReErased&gt;,)]);<br align="left"/>let mut _30: &amp;ReErased state::types::LiquidationCheckInputs&lt;ReErased&gt;;<br align="left"/>let mut _31: Closure(DefId(0:1571 ~ kamino_lending[6389]::state::liquidation_operations::get_liquidation_params::{closure#3}), [i32, Binder(extern &quot;RustCall&quot; fn(()) -&gt; LendingError, []), (&amp;ReErased state::obligation::Obligation,)]);<br align="left"/>let mut _32: &amp;ReErased state::obligation::Obligation;<br align="left"/>let mut _33: isize;<br align="left"/>let _34: std::result::Result&lt;std::convert::Infallible, LendingError&gt;;<br align="left"/>let mut _35: !;<br align="left"/>let mut _36: std::result::Result&lt;std::convert::Infallible, LendingError&gt;;<br align="left"/>let _37: state::types::LiquidationParams;<br align="left"/>let _38: ();<br align="left"/>let mut _39: bool;<br align="left"/>let mut _40: &amp;ReErased state::types::LiquidationReason;<br align="left"/>let mut _41: &amp;ReErased state::types::LiquidationReason;<br align="left"/>let _42: state::types::LiquidationReason;<br align="left"/>let mut _43: bool;<br align="left"/>let mut _44: !;<br align="left"/>let _45: ();<br align="left"/>let _46: ();<br align="left"/>let mut _47: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _48: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _49: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _50: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _51: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _52: anchor_lang::error::Error;<br align="left"/>let mut _53: anchor_lang::error::AnchorError;<br align="left"/>let mut _54: std::string::String;<br align="left"/>let mut _55: &amp;ReErased LendingError;<br align="left"/>let _56: LendingError;<br align="left"/>let mut _57: u32;<br align="left"/>let mut _58: LendingError;<br align="left"/>let mut _59: std::string::String;<br align="left"/>let mut _60: &amp;ReErased LendingError;<br align="left"/>let _61: LendingError;<br align="left"/>let mut _62: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _63: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _64: anchor_lang::error::Source;<br align="left"/>let mut _65: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let _66: ();<br align="left"/>let mut _67: bool;<br align="left"/>let mut _68: isize;<br align="left"/>let mut _69: bool;<br align="left"/>let mut _70: !;<br align="left"/>let _71: ();<br align="left"/>let _72: ();<br align="left"/>let mut _73: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _74: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _75: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _76: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _77: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _78: anchor_lang::error::Error;<br align="left"/>let mut _79: anchor_lang::error::AnchorError;<br align="left"/>let mut _80: std::string::String;<br align="left"/>let mut _81: &amp;ReErased LendingError;<br align="left"/>let _82: LendingError;<br align="left"/>let mut _83: u32;<br align="left"/>let mut _84: LendingError;<br align="left"/>let mut _85: std::string::String;<br align="left"/>let mut _86: &amp;ReErased LendingError;<br align="left"/>let _87: LendingError;<br align="left"/>let mut _88: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _89: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _90: anchor_lang::error::Source;<br align="left"/>let mut _91: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let _92: ();<br align="left"/>let _93: ();<br align="left"/>let mut _94: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _95: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _96: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _97: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _98: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _99: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _100: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _101: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _102: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _103: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _104: &amp;ReErased state::types::LiquidationReason;<br align="left"/>let _105: &amp;ReErased state::types::LiquidationReason;<br align="left"/>let mut _106: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _107: &amp;ReErased u64;<br align="left"/>let _108: &amp;ReErased u64;<br align="left"/>let _109: u64;<br align="left"/>let mut _110: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _111: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _112: state::types::LiquidationParams;<br align="left"/>let mut _113: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _114: &amp;ReErased LendingError;<br align="left"/>let mut _115: &amp;ReErased LendingError;<br align="left"/>let mut _116: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _117: &amp;ReErased LendingError;<br align="left"/>let mut _118: &amp;ReErased LendingError;<br align="left"/>let mut _119: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _120: &amp;ReErased state::types::LiquidationReason;<br align="left"/>debug lending_market =&gt; _1;<br align="left"/>debug collateral_reserve =&gt; _2;<br align="left"/>debug debt_reserve =&gt; _3;<br align="left"/>debug obligation =&gt; _4;<br align="left"/>debug timestamp =&gt; _5;<br align="left"/>debug is_debt_reserve_highest_borrow_factor =&gt; _6;<br align="left"/>debug is_collateral_reserve_lowest_liquidation_ltv =&gt; _7;<br align="left"/>debug max_allowed_ltv_override_pct_opt =&gt; _8;<br align="left"/>debug inputs =&gt; _9;<br align="left"/>debug params =&gt; _16;<br align="left"/>debug residual =&gt; _34;<br align="left"/>debug val =&gt; _37;<br align="left"/>>;
    bb0__0_1567 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = &amp;(*_1)<br/>StorageLive(_11)<br/>_11 = &amp;(*_2)<br/>StorageLive(_12)<br/>_12 = &amp;(*_3)<br/>StorageLive(_13)<br/>_13 = &amp;(*_4)<br/>StorageLive(_14)<br/>_14 = _5<br/>StorageLive(_15)<br/>_15 = _8<br/>_9 = state::types::LiquidationCheckInputs::&lt;'_&gt; { lending_market: move _10, collateral_reserve: move _11, debt_reserve: move _12, obligation: move _13, timestamp: move _14, max_allowed_ltv_override_pct_opt: move _15 }<br/>StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_10)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_24 = &amp;_9<br/>_23 = &amp;(*_24)<br/></td></tr><tr><td align="left">_22 = check_liquidate_obligation(move _23)</td></tr></table>>];
    bb1__0_1567 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_26 = &amp;_9<br/>_25 = {closure@programs\klend\src\state\liquidation_operations.rs:202:18: 202:20} { inputs: move _26 }<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">_21 = std::option::Option::&lt;state::types::LiquidationParams&gt;::or_else::&lt;{closure@programs\klend\src\state\liquidation_operations.rs:202:18: 202:20}&gt;(move _22, move _25)</td></tr></table>>];
    bb2__0_1567 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_22)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>_28 = &amp;_9<br/>_27 = {closure@programs\klend\src\state\liquidation_operations.rs:203:18: 203:20} { inputs: move _28 }<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">_20 = std::option::Option::&lt;state::types::LiquidationParams&gt;::or_else::&lt;{closure@programs\klend\src\state\liquidation_operations.rs:203:18: 203:20}&gt;(move _21, move _27)</td></tr></table>>];
    bb3__0_1567 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_21)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>_30 = &amp;_9<br/>_29 = {closure@programs\klend\src\state\liquidation_operations.rs:204:18: 204:20} { inputs: move _30 }<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">_19 = std::option::Option::&lt;state::types::LiquidationParams&gt;::or_else::&lt;{closure@programs\klend\src\state\liquidation_operations.rs:204:18: 204:20}&gt;(move _20, move _29)</td></tr></table>>];
    bb4__0_1567 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_20)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>_32 = &amp;(*_4)<br/>_31 = {closure@programs\klend\src\state\liquidation_operations.rs:205:21: 205:23} { obligation: move _32 }<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">_18 = std::option::Option::&lt;state::types::LiquidationParams&gt;::ok_or_else::&lt;LendingError, {closure@programs\klend\src\state\liquidation_operations.rs:205:21: 205:23}&gt;(move _19, move _31)</td></tr></table>>];
    bb5__0_1567 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">_17 = &lt;std::result::Result&lt;state::types::LiquidationParams, LendingError&gt; as Try&gt;::branch(move _18)</td></tr></table>>];
    bb6__0_1567 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>_33 = discriminant(_17)<br/></td></tr><tr><td align="left">switchInt(move _33)</td></tr></table>>];
    bb7__0_1567 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_37)<br/>_37 = move ((_17 as Continue).0: state::types::LiquidationParams)<br/>_16 = move _37<br/>StorageDead(_37)<br/>StorageDead(_24)<br/>StorageDead(_17)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_40 = &amp;(_16.2: state::types::LiquidationReason)<br/>StorageLive(_41)<br/>_120 = const _<br/>_41 = &amp;(*_120)<br/></td></tr><tr><td align="left">_39 = &lt;state::types::LiquidationReason as PartialEq&gt;::eq(move _40, move _41)</td></tr></table>>];
    bb8__0_1567 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb9__0_1567 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_34)<br/>_34 = ((_17 as Break).0: std::result::Result&lt;std::convert::Infallible, LendingError&gt;)<br/>StorageLive(_36)<br/>_36 = _34<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;state::types::LiquidationParams, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, LendingError&gt;&gt;&gt;::from_residual(move _36)</td></tr></table>>];
    bb10__0_1567 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_34)<br/>StorageDead(_24)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb11__0_1567 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left">switchInt(move _39)</td></tr></table>>];
    bb12__0_1567 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_40)<br/>StorageLive(_43)<br/>_43 = _6<br/></td></tr><tr><td align="left">switchInt(move _43)</td></tr></table>>];
    bb13__0_1567 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>_119 = const _<br/>_50 = &amp;(*_119)<br/>_49 = &amp;(*_50)<br/>_48 = move _49 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">_47 = Arguments::&lt;'_&gt;::new_const(move _48)</td></tr></table>>];
    bb14__0_1567 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/></td></tr><tr><td align="left">_46 = _print(move _47)</td></tr></table>>];
    bb15__0_1567 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_50)<br/>StorageDead(_46)<br/>_45 = const ()<br/>StorageDead(_45)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>_118 = const _<br/>_55 = &amp;(*_118)<br/></td></tr><tr><td align="left">_54 = LendingError::name(move _55)</td></tr></table>>];
    bb16__0_1567 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>_58 = LendingError::LiquidationBorrowFactorPriority<br/></td></tr><tr><td align="left">_57 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _58)</td></tr></table>>];
    bb17__0_1567 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>_117 = const _<br/>_60 = &amp;(*_117)<br/></td></tr><tr><td align="left">_59 = &lt;LendingError as ToString&gt;::to_string(move _60)</td></tr></table>>];
    bb18__0_1567 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>_64 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\state\\liquidation_operations.rs&quot;, line: const 218_u32 }<br/>_63 = anchor_lang::error::ErrorOrigin::Source(move _64)<br/>StorageDead(_64)<br/>_62 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _63)<br/>StorageDead(_63)<br/>StorageLive(_65)<br/>_65 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_53 = anchor_lang::error::AnchorError { error_name: move _54, error_code_number: move _57, error_msg: move _59, error_origin: move _62, compared_values: move _65 }<br/>StorageDead(_65)<br/>StorageDead(_62)<br/>StorageDead(_59)<br/>StorageDead(_57)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">_52 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _53)</td></tr></table>>];
    bb19__0_1567 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>_0 = std::result::Result::&lt;state::types::LiquidationParams, anchor_lang::error::Error&gt;::Err(move _52)<br/>StorageDead(_52)<br/>StorageDead(_43)<br/>StorageDead(_39)<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_1567 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_1567 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">_38 = const ()<br/>StorageDead(_43)<br/>StorageDead(_39)<br/>StorageDead(_38)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>_68 = discriminant((_16.2: state::types::LiquidationReason))<br/></td></tr><tr><td align="left">switchInt(move _68)</td></tr></table>>];
    bb22__0_1567 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">_67 = const false<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_1567 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">_67 = const true<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_1567 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left">switchInt(move _67)</td></tr></table>>];
    bb25__0_1567 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_69)<br/>_69 = _7<br/></td></tr><tr><td align="left">switchInt(move _69)</td></tr></table>>];
    bb26__0_1567 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>_116 = const _<br/>_76 = &amp;(*_116)<br/>_75 = &amp;(*_76)<br/>_74 = move _75 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_75)<br/></td></tr><tr><td align="left">_73 = Arguments::&lt;'_&gt;::new_const(move _74)</td></tr></table>>];
    bb27__0_1567 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/></td></tr><tr><td align="left">_72 = _print(move _73)</td></tr></table>>];
    bb28__0_1567 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>StorageDead(_76)<br/>StorageDead(_72)<br/>_71 = const ()<br/>StorageDead(_71)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>_115 = const _<br/>_81 = &amp;(*_115)<br/></td></tr><tr><td align="left">_80 = LendingError::name(move _81)</td></tr></table>>];
    bb29__0_1567 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>_84 = LendingError::LiquidationLowestLiquidationLtvPriority<br/></td></tr><tr><td align="left">_83 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _84)</td></tr></table>>];
    bb30__0_1567 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>_114 = const _<br/>_86 = &amp;(*_114)<br/></td></tr><tr><td align="left">_85 = &lt;LendingError as ToString&gt;::to_string(move _86)</td></tr></table>>];
    bb31__0_1567 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>_90 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\state\\liquidation_operations.rs&quot;, line: const 226_u32 }<br/>_89 = anchor_lang::error::ErrorOrigin::Source(move _90)<br/>StorageDead(_90)<br/>_88 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _89)<br/>StorageDead(_89)<br/>StorageLive(_91)<br/>_91 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_79 = anchor_lang::error::AnchorError { error_name: move _80, error_code_number: move _83, error_msg: move _85, error_origin: move _88, compared_values: move _91 }<br/>StorageDead(_91)<br/>StorageDead(_88)<br/>StorageDead(_85)<br/>StorageDead(_83)<br/>StorageDead(_80)<br/></td></tr><tr><td align="left">_78 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _79)</td></tr></table>>];
    bb32__0_1567 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>_0 = std::result::Result::&lt;state::types::LiquidationParams, anchor_lang::error::Error&gt;::Err(move _78)<br/>StorageDead(_78)<br/>StorageDead(_69)<br/>StorageDead(_67)<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_1567 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">_66 = const ()<br/>StorageDead(_69)<br/>StorageDead(_67)<br/>StorageDead(_66)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>_113 = const _<br/>_97 = &amp;(*_113)<br/>_96 = &amp;(*_97)<br/>_95 = move _96 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_96)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>_105 = &amp;(_16.2: state::types::LiquidationReason)<br/>_104 = &amp;(*_105)<br/></td></tr><tr><td align="left">_103 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;state::types::LiquidationReason&gt;(move _104)</td></tr></table>>];
    bb34__0_1567 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>_111 = &amp;(_16.1: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;)<br/></td></tr><tr><td align="left">_110 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as utils::fraction::FractionExtra&gt;::to_bps::&lt;u64&gt;(move _111)</td></tr></table>>];
    bb35__0_1567 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/></td></tr><tr><td align="left">_109 = std::option::Option::&lt;u64&gt;::unwrap(move _110)</td></tr></table>>];
    bb36__0_1567 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/>_108 = &amp;_109<br/>_107 = &amp;(*_108)<br/></td></tr><tr><td align="left">_106 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _107)</td></tr></table>>];
    bb37__0_1567 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>_102 = [move _103, move _106]<br/>StorageDead(_106)<br/>StorageDead(_103)<br/>_101 = &amp;_102<br/>_100 = &amp;(*_101)<br/>_99 = move _100 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_100)<br/></td></tr><tr><td align="left">_94 = Arguments::&lt;'_&gt;::new_v1(move _95, move _99)</td></tr></table>>];
    bb38__0_1567 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/>StorageDead(_95)<br/></td></tr><tr><td align="left">_93 = _print(move _94)</td></tr></table>>];
    bb39__0_1567 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/>StorageDead(_109)<br/>StorageDead(_108)<br/>StorageDead(_105)<br/>StorageDead(_102)<br/>StorageDead(_101)<br/>StorageDead(_97)<br/>StorageDead(_93)<br/>_92 = const ()<br/>StorageDead(_92)<br/>StorageLive(_112)<br/>_112 = move _16<br/>_0 = std::result::Result::&lt;state::types::LiquidationParams, anchor_lang::error::Error&gt;::Ok(move _112)<br/>StorageDead(_112)<br/>StorageDead(_16)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_1567 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_1567 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left">return</td></tr></table>>];
    bb42__0_1567 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">42 (cleanup)</td></tr><tr><td align="left">drop(_80)</td></tr></table>>];
    bb43__0_1567 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">43 (cleanup)</td></tr><tr><td align="left">drop(_54)</td></tr></table>>];
    bb44__0_1567 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">44 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_1567 -> bb1__0_1567 [label="return"];
    bb1__0_1567 -> bb2__0_1567 [label="return"];
    bb2__0_1567 -> bb3__0_1567 [label="return"];
    bb3__0_1567 -> bb4__0_1567 [label="return"];
    bb4__0_1567 -> bb5__0_1567 [label="return"];
    bb5__0_1567 -> bb6__0_1567 [label="return"];
    bb6__0_1567 -> bb7__0_1567 [label="0"];
    bb6__0_1567 -> bb9__0_1567 [label="1"];
    bb6__0_1567 -> bb8__0_1567 [label="otherwise"];
    bb7__0_1567 -> bb11__0_1567 [label="return"];
    bb9__0_1567 -> bb10__0_1567 [label="return"];
    bb10__0_1567 -> bb40__0_1567 [label=""];
    bb11__0_1567 -> bb20__0_1567 [label="0"];
    bb11__0_1567 -> bb12__0_1567 [label="otherwise"];
    bb12__0_1567 -> bb13__0_1567 [label="0"];
    bb12__0_1567 -> bb21__0_1567 [label="otherwise"];
    bb13__0_1567 -> bb14__0_1567 [label="return"];
    bb14__0_1567 -> bb15__0_1567 [label="return"];
    bb15__0_1567 -> bb16__0_1567 [label="return"];
    bb16__0_1567 -> bb17__0_1567 [label="return"];
    bb16__0_1567 -> bb43__0_1567 [label="unwind"];
    bb17__0_1567 -> bb18__0_1567 [label="return"];
    bb17__0_1567 -> bb43__0_1567 [label="unwind"];
    bb18__0_1567 -> bb19__0_1567 [label="return"];
    bb18__0_1567 -> bb44__0_1567 [label="unwind"];
    bb19__0_1567 -> bb40__0_1567 [label=""];
    bb20__0_1567 -> bb21__0_1567 [label=""];
    bb21__0_1567 -> bb23__0_1567 [label="0"];
    bb21__0_1567 -> bb23__0_1567 [label="3"];
    bb21__0_1567 -> bb22__0_1567 [label="otherwise"];
    bb22__0_1567 -> bb24__0_1567 [label=""];
    bb23__0_1567 -> bb24__0_1567 [label=""];
    bb24__0_1567 -> bb33__0_1567 [label="0"];
    bb24__0_1567 -> bb25__0_1567 [label="otherwise"];
    bb25__0_1567 -> bb26__0_1567 [label="0"];
    bb25__0_1567 -> bb33__0_1567 [label="otherwise"];
    bb26__0_1567 -> bb27__0_1567 [label="return"];
    bb27__0_1567 -> bb28__0_1567 [label="return"];
    bb28__0_1567 -> bb29__0_1567 [label="return"];
    bb29__0_1567 -> bb30__0_1567 [label="return"];
    bb29__0_1567 -> bb42__0_1567 [label="unwind"];
    bb30__0_1567 -> bb31__0_1567 [label="return"];
    bb30__0_1567 -> bb42__0_1567 [label="unwind"];
    bb31__0_1567 -> bb32__0_1567 [label="return"];
    bb31__0_1567 -> bb44__0_1567 [label="unwind"];
    bb32__0_1567 -> bb40__0_1567 [label=""];
    bb33__0_1567 -> bb34__0_1567 [label="return"];
    bb34__0_1567 -> bb35__0_1567 [label="return"];
    bb35__0_1567 -> bb36__0_1567 [label="return"];
    bb36__0_1567 -> bb37__0_1567 [label="return"];
    bb37__0_1567 -> bb38__0_1567 [label="return"];
    bb38__0_1567 -> bb39__0_1567 [label="return"];
    bb39__0_1567 -> bb41__0_1567 [label=""];
    bb40__0_1567 -> bb41__0_1567 [label=""];
    bb42__0_1567 -> bb44__0_1567 [label="return"];
    bb43__0_1567 -> bb44__0_1567 [label="return"];
}
