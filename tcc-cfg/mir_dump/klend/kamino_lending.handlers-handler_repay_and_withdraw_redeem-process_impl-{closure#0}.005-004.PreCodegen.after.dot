digraph Mir_0_575 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn handlers::handler_repay_and_withdraw_redeem::process_impl::{closure#0}(_1: &amp;ReErased mut Closure(DefId(0:575 ~ kamino_lending[6389]::handlers::handler_repay_and_withdraw_redeem::process_impl::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) mut bool, &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;)) -&gt; std::option::Option&lt;std::option::Option&lt;anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;, [Region(BrAnon)]), (&amp;ReErased anchor_lang::prelude::Pubkey, &amp;ReErased anchor_lang::prelude::Pubkey)]), _2: &amp;ReErased mut bool, _3: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;) -&gt; std::option::Option&lt;std::option::Option&lt;anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;<br align="left"/>let _4: bool;<br align="left"/>let mut _5: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _6: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _7: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _8: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _9: bool;<br align="left"/>let mut _10: bool;<br align="left"/>let mut _11: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _12: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _13: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _14: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _15: bool;<br align="left"/>let mut _16: bool;<br align="left"/>let mut _17: bool;<br align="left"/>let mut _18: bool;<br align="left"/>let mut _19: std::option::Option&lt;anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _20: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _21: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _22: std::option::Option&lt;anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _23: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _24: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>debug found_repay_reserve =&gt; _2;<br align="left"/>debug account =&gt; _3;<br align="left"/>debug repay_reserve_key =&gt; (*((*_1).0: &amp;anchor_lang::prelude::Pubkey));<br align="left"/>debug referrer_to_skip =&gt; (*((*_1).1: &amp;anchor_lang::prelude::Pubkey));<br align="left"/>debug is_repay_reserve =&gt; _4;<br align="left"/>debug accounts_to_include =&gt; _9;<br align="left"/>>;
    bb0__0_575 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = &amp;(*_3)<br/></td></tr><tr><td align="left">_6 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::Key&gt;::key(move _7)</td></tr></table>>];
    bb1__0_575 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_5 = &amp;_6<br/>StorageDead(_7)<br/>StorageLive(_8)<br/>_23 = deref_copy ((*_1).0: &amp;anchor_lang::prelude::Pubkey)<br/>_8 = &amp;(*_23)<br/></td></tr><tr><td align="left">_4 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _5, move _8)</td></tr></table>>];
    bb2__0_575 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_5)<br/>StorageDead(_6)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>_13 = &amp;(*_3)<br/></td></tr><tr><td align="left">_12 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::Key&gt;::key(move _13)</td></tr></table>>];
    bb3__0_575 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">_11 = &amp;_12<br/>StorageDead(_13)<br/>StorageLive(_14)<br/>_24 = deref_copy ((*_1).1: &amp;anchor_lang::prelude::Pubkey)<br/>_14 = &amp;(*_24)<br/></td></tr><tr><td align="left">_10 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _11, move _14)</td></tr></table>>];
    bb4__0_575 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">switchInt(move _10)</td></tr></table>>];
    bb5__0_575 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageLive(_15)<br/>_15 = _4<br/></td></tr><tr><td align="left">switchInt(move _15)</td></tr></table>>];
    bb6__0_575 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>_9 = const false<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_575 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">_9 = const true<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_575 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">_9 = (*_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_575 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_575 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_17 = (*_2)<br/></td></tr><tr><td align="left">switchInt(move _17)</td></tr></table>>];
    bb11__0_575 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">_16 = const true<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_575 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">_16 = _4<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_575 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>(*_2) = move _16<br/>StorageDead(_16)<br/>StorageLive(_18)<br/>_18 = _9<br/></td></tr><tr><td align="left">switchInt(move _18)</td></tr></table>>];
    bb14__0_575 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_21 = &amp;(*_3)<br/></td></tr><tr><td align="left">_20 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as Clone&gt;::clone(move _21)</td></tr></table>>];
    bb15__0_575 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>_19 = std::option::Option::&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;::Some(move _20)<br/>StorageDead(_20)<br/>_0 = std::option::Option::&lt;std::option::Option&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;::Some(move _19)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_575 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_22)<br/>_22 = std::option::Option::&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;::None<br/>_0 = std::option::Option::&lt;std::option::Option&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;::Some(move _22)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_575 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_9)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_575 -> bb1__0_575 [label="return"];
    bb1__0_575 -> bb2__0_575 [label="return"];
    bb2__0_575 -> bb3__0_575 [label="return"];
    bb3__0_575 -> bb4__0_575 [label="return"];
    bb4__0_575 -> bb6__0_575 [label="0"];
    bb4__0_575 -> bb5__0_575 [label="otherwise"];
    bb5__0_575 -> bb7__0_575 [label="0"];
    bb5__0_575 -> bb8__0_575 [label="otherwise"];
    bb6__0_575 -> bb10__0_575 [label=""];
    bb7__0_575 -> bb9__0_575 [label=""];
    bb8__0_575 -> bb9__0_575 [label=""];
    bb9__0_575 -> bb10__0_575 [label=""];
    bb10__0_575 -> bb12__0_575 [label="0"];
    bb10__0_575 -> bb11__0_575 [label="otherwise"];
    bb11__0_575 -> bb13__0_575 [label=""];
    bb12__0_575 -> bb13__0_575 [label=""];
    bb13__0_575 -> bb16__0_575 [label="0"];
    bb13__0_575 -> bb14__0_575 [label="otherwise"];
    bb14__0_575 -> bb15__0_575 [label="return"];
    bb15__0_575 -> bb17__0_575 [label=""];
    bb16__0_575 -> bb17__0_575 [label=""];
}
