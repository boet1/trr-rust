digraph Mir_0_513 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn process_refresh_obligation_farms_for_reserve(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, handlers::handler_refresh_obligation_farms_for_reserve::RefreshObligationFarmsForReserve&lt;ReErased&gt;&gt;, _2: u8) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _5: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _6: &amp;ReErased anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, handlers::handler_refresh_obligation_farms_for_reserve::RefreshObligationFarmsForReserve&lt;ReErased&gt;&gt;;<br align="left"/>let _7: &amp;ReErased anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, handlers::handler_refresh_obligation_farms_for_reserve::RefreshObligationFarmsForReserve&lt;ReErased&gt;&gt;;<br align="left"/>let mut _8: isize;<br align="left"/>let _9: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _10: !;<br align="left"/>let mut _11: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _12: ();<br align="left"/>let _13: state::reserve::ReserveFarmKind;<br align="left"/>let mut _14: std::result::Result&lt;state::reserve::ReserveFarmKind, num_enum::TryFromPrimitiveError&lt;state::reserve::ReserveFarmKind&gt;&gt;;<br align="left"/>let mut _15: u8;<br align="left"/>let mut _16: &amp;ReErased handlers::handler_refresh_obligation_farms_for_reserve::RefreshObligationFarmsForReserveBase&lt;ReErased&gt;;<br align="left"/>let _17: &amp;ReErased handlers::handler_refresh_obligation_farms_for_reserve::RefreshObligationFarmsForReserveBase&lt;ReErased&gt;;<br align="left"/>let mut _18: state::reserve::ReserveFarmKind;<br align="left"/>let mut _19: &amp;ReErased mut handlers::handler_refresh_obligation_farms_for_reserve::RefreshObligationFarmsForReserve&lt;ReErased&gt;;<br align="left"/>let mut _20: isize;<br align="left"/>let mut _21: isize;<br align="left"/>let mut _22: isize;<br align="left"/>let mut _23: isize;<br align="left"/>let mut _24: isize;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug mode =&gt; _2;<br align="left"/>debug residual =&gt; _9;<br align="left"/>debug val =&gt; _12;<br align="left"/>debug farm_kind =&gt; _13;<br align="left"/>>;
    bb0__0_513 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = &amp;_1<br/>_6 = &amp;(*_7)<br/></td></tr><tr><td align="left">_5 = utils::constraints::check_remaining_accounts::&lt;handlers::handler_refresh_obligation_farms_for_reserve::RefreshObligationFarmsForReserve&lt;'_&gt;&gt;(move _6)</td></tr></table>>];
    bb1__0_513 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb2__0_513 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_8 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb3__0_513 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_4 as Continue).0: ())<br/>_3 = _12<br/>StorageDead(_12)<br/>_20 = discriminant(_4)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = _2<br/></td></tr><tr><td align="left">_14 = &lt;u8 as TryInto&lt;reserve::ReserveFarmKind&gt;&gt;::try_into(move _15)</td></tr></table>>];
    bb4__0_513 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_513 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>_9 = move ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_11)<br/>_11 = move _9<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _11)</td></tr></table>>];
    bb6__0_513 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_9)<br/>_22 = discriminant(_4)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_513 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/></td></tr><tr><td align="left">_13 = std::result::Result::&lt;reserve::ReserveFarmKind, TryFromPrimitiveError&lt;reserve::ReserveFarmKind&gt;&gt;::unwrap(move _14)</td></tr></table>>];
    bb8__0_513 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_19 = deref_copy (_1.1: &amp;mut handlers::handler_refresh_obligation_farms_for_reserve::RefreshObligationFarmsForReserve&lt;'_&gt;)<br/>_17 = &amp;((*_19).1: handlers::handler_refresh_obligation_farms_for_reserve::RefreshObligationFarmsForReserveBase&lt;'_&gt;)<br/>_16 = &amp;(*_17)<br/>StorageLive(_18)<br/>_18 = _13<br/></td></tr><tr><td align="left">_0 = handlers::handler_refresh_obligation_farms_for_reserve::process_impl_refresh_obligation_farms_for_reserve(move _16, move _18)</td></tr></table>>];
    bb9__0_513 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_16)<br/>StorageDead(_13)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_513 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left">return</td></tr></table>>];
    bb11__0_513 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">11 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb12__0_513 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">12 (cleanup)</td></tr><tr><td align="left" balign="left">_24 = discriminant(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_513 -> bb1__0_513 [label="return"];
    bb1__0_513 -> bb2__0_513 [label="return"];
    bb1__0_513 -> bb11__0_513 [label="unwind"];
    bb2__0_513 -> bb3__0_513 [label="0"];
    bb2__0_513 -> bb5__0_513 [label="1"];
    bb2__0_513 -> bb4__0_513 [label="otherwise"];
    bb3__0_513 -> bb7__0_513 [label="return"];
    bb5__0_513 -> bb6__0_513 [label="return"];
    bb5__0_513 -> bb12__0_513 [label="unwind"];
    bb6__0_513 -> bb10__0_513 [label=""];
    bb7__0_513 -> bb8__0_513 [label="return"];
    bb8__0_513 -> bb9__0_513 [label="return"];
    bb9__0_513 -> bb10__0_513 [label=""];
    bb12__0_513 -> bb11__0_513 [label=""];
}
