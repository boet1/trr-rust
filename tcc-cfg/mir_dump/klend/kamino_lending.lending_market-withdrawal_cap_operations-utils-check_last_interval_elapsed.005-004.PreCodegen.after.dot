digraph Mir_0_1425 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn check_last_interval_elapsed(_1: &amp;ReErased mut state::reserve::WithdrawalCaps, _2: u64) -&gt; std::result::Result&lt;bool, LendingError&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: bool;<br align="left"/>let mut _5: u64;<br align="left"/>let mut _6: u64;<br align="left"/>let mut _7: !;<br align="left"/>let mut _8: LendingError;<br align="left"/>let mut _9: bool;<br align="left"/>let mut _10: u64;<br align="left"/>let mut _11: u64;<br align="left"/>let mut _12: u64;<br align="left"/>let mut _13: u64;<br align="left"/>debug caps =&gt; _1;<br align="left"/>debug curr_timestamp =&gt; _2;<br align="left"/>>;
    bb0__0_1425 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = ((*_1).2: u64)<br/>StorageLive(_6)<br/>_6 = _2<br/>_4 = Gt(move _5, move _6)<br/></td></tr><tr><td align="left">switchInt(move _4)</td></tr></table>>];
    bb1__0_1425 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_5)<br/>StorageLive(_8)<br/>_8 = LendingError::LastTimestampGreaterThanCurrent<br/>_0 = std::result::Result::&lt;bool, LendingError&gt;::Err(move _8)<br/>StorageDead(_8)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb2__0_1425 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_5)<br/>_3 = const ()<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = ((*_1).3: u64)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = _2<br/>StorageLive(_13)<br/>_13 = ((*_1).2: u64)<br/></td></tr><tr><td align="left">_11 = core::num::&lt;impl u64&gt;::saturating_sub(move _12, move _13)</td></tr></table>>];
    bb3__0_1425 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_12)<br/>_9 = Le(move _10, move _11)<br/>StorageDead(_11)<br/>StorageDead(_10)<br/>_0 = std::result::Result::&lt;bool, LendingError&gt;::Ok(move _9)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb4__0_1425 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_1425 -> bb2__0_1425 [label="0"];
    bb0__0_1425 -> bb1__0_1425 [label="otherwise"];
    bb1__0_1425 -> bb4__0_1425 [label=""];
    bb2__0_1425 -> bb3__0_1425 [label="return"];
    bb3__0_1425 -> bb4__0_1425 [label=""];
}
