digraph Mir_0_2151 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;account_loader_trait::FatAccountLoader&lt;'info, T&gt; as anchor_lang::ToAccountMetas&gt;::to_account_metas(_1: &amp;ReErased utils::account_loader_trait::FatAccountLoader&lt;ReErased, T/#1&gt;, _2: std::option::Option&lt;bool&gt;) -&gt; std::vec::Vec&lt;anchor_lang::prelude::AccountMeta, std::alloc::Global&gt;<br align="left"/>let _3: bool;<br align="left"/>let mut _4: std::option::Option&lt;bool&gt;;<br align="left"/>let mut _5: bool;<br align="left"/>let _6: anchor_lang::prelude::AccountMeta;<br align="left"/>let mut _7: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _8: bool;<br align="left"/>let mut _9: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _10: bool;<br align="left"/>let mut _11: std::boxed::Box&lt;[anchor_lang::prelude::AccountMeta], std::alloc::Global&gt;;<br align="left"/>let mut _12: std::boxed::Box&lt;[anchor_lang::prelude::AccountMeta; 1_usize], std::alloc::Global&gt;;<br align="left"/>let mut _13: usize;<br align="left"/>let mut _14: usize;<br align="left"/>let mut _15: *mut u8;<br align="left"/>let mut _16: std::boxed::Box&lt;[anchor_lang::prelude::AccountMeta; 1_usize], std::alloc::Global&gt;;<br align="left"/>let mut _17: anchor_lang::prelude::AccountMeta;<br align="left"/>let mut _18: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _19: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _20: *const [anchor_lang::prelude::AccountMeta; 1_usize];<br align="left"/>let mut _21: *const ();<br align="left"/>let mut _22: usize;<br align="left"/>let mut _23: usize;<br align="left"/>let mut _24: usize;<br align="left"/>let mut _25: usize;<br align="left"/>let mut _26: bool;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug is_signer =&gt; _2;<br align="left"/>debug is_signer =&gt; _3;<br align="left"/>debug meta =&gt; _6;<br align="left"/>>;
    bb0__0_2151 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>_4 = _2<br/>StorageLive(_5)<br/>_5 = (((*_1).0: anchor_lang::prelude::AccountInfo&lt;'_&gt;).5: bool)<br/></td></tr><tr><td align="left">_3 = std::option::Option::&lt;bool&gt;::unwrap_or(move _4, move _5)</td></tr></table>>];
    bb1__0_2151 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageDead(_4)<br/>StorageLive(_6)<br/></td></tr><tr><td align="left">switchInt((((*_1).0: anchor_lang::prelude::AccountInfo&lt;'_&gt;).6: bool))</td></tr></table>>];
    bb2__0_2151 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>_18 = deref_copy (((*_1).0: anchor_lang::prelude::AccountInfo&lt;'_&gt;).0: &amp;anchor_lang::prelude::Pubkey)<br/>_9 = (*_18)<br/>StorageLive(_10)<br/>_10 = _3<br/></td></tr><tr><td align="left">_6 = anchor_lang::prelude::AccountMeta::new(move _9, move _10)</td></tr></table>>];
    bb3__0_2151 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_7)<br/>_19 = deref_copy (((*_1).0: anchor_lang::prelude::AccountInfo&lt;'_&gt;).0: &amp;anchor_lang::prelude::Pubkey)<br/>_7 = (*_19)<br/>StorageLive(_8)<br/>_8 = _3<br/></td></tr><tr><td align="left">_6 = anchor_lang::prelude::AccountMeta::new_readonly(move _7, move _8)</td></tr></table>>];
    bb4__0_2151 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb5__0_2151 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb6__0_2151 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>StorageLive(_12)<br/>_13 = SizeOf([anchor_lang::prelude::AccountMeta; 1])<br/>_14 = AlignOf([anchor_lang::prelude::AccountMeta; 1])<br/></td></tr><tr><td align="left">_15 = alloc::alloc::exchange_malloc(move _13, move _14)</td></tr></table>>];
    bb7__0_2151 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_16)<br/>_16 = ShallowInitBox(move _15, [anchor_lang::prelude::AccountMeta; 1])<br/>StorageLive(_17)<br/>_17 = move _6<br/>_20 = (((_16.0: std::ptr::Unique&lt;[anchor_lang::prelude::AccountMeta; 1]&gt;).0: std::ptr::NonNull&lt;[anchor_lang::prelude::AccountMeta; 1]&gt;).0: *const [anchor_lang::prelude::AccountMeta; 1])<br/>_21 = _20 as *const () (PtrToPtr)<br/>_22 = _21 as usize (Transmute)<br/>_23 = AlignOf([anchor_lang::prelude::AccountMeta; 1])<br/>_24 = Sub(_23, const 1_usize)<br/>_25 = BitAnd(_22, _24)<br/>_26 = Eq(_25, const 0_usize)<br/></td></tr><tr><td align="left">assert(_26, &quot;misaligned pointer dereference: address must be a multiple of {} but is {}&quot;, _23, _22)</td></tr></table>>];
    bb8__0_2151 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_6)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb9__0_2151 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">9 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb10__0_2151 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">(*_20) = [move _17]<br/>StorageDead(_17)<br/>_12 = move _16<br/>_11 = move _12 as std::boxed::Box&lt;[anchor_lang::prelude::AccountMeta]&gt; (PointerCoercion(Unsize))<br/>StorageDead(_16)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">_0 = std::slice::&lt;impl [anchor_lang::prelude::AccountMeta]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _11)</td></tr></table>>];
    bb0__0_2151 -> bb1__0_2151 [label="return"];
    bb1__0_2151 -> bb3__0_2151 [label="0"];
    bb1__0_2151 -> bb2__0_2151 [label="otherwise"];
    bb2__0_2151 -> bb5__0_2151 [label="return"];
    bb3__0_2151 -> bb4__0_2151 [label="return"];
    bb4__0_2151 -> bb6__0_2151 [label=""];
    bb5__0_2151 -> bb6__0_2151 [label=""];
    bb6__0_2151 -> bb7__0_2151 [label="return"];
    bb7__0_2151 -> bb10__0_2151 [label="success"];
    bb10__0_2151 -> bb8__0_2151 [label="return"];
    bb10__0_2151 -> bb9__0_2151 [label="unwind"];
}
