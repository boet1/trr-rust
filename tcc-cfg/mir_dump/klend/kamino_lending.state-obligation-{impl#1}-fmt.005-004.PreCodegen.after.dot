digraph Mir_0_1652 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;obligation::Obligation as std::fmt::Display&gt;::fmt(_1: &amp;ReErased state::obligation::Obligation, _2: &amp;ReErased mut std::fmt::Formatter&lt;ReErased&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::fmt::Error&gt;, ()&gt;;<br align="left"/>let mut _5: std::result::Result&lt;(), std::fmt::Error&gt;;<br align="left"/>let mut _6: &amp;ReErased mut std::fmt::Formatter&lt;ReErased&gt;;<br align="left"/>let mut _7: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _8: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _9: &amp;ReErased [&amp;ReErased str; 5_usize];<br align="left"/>let _10: &amp;ReErased [&amp;ReErased str; 5_usize];<br align="left"/>let _11: [&amp;ReErased str; 5_usize];<br align="left"/>let mut _12: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _13: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 4_usize];<br align="left"/>let _14: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 4_usize];<br align="left"/>let _15: [core::fmt::rt::Argument&lt;ReErased&gt;; 4_usize];<br align="left"/>let mut _16: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _17: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _18: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _19: utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _20: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _21: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _22: u128;<br align="left"/>let mut _23: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _24: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _25: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _26: utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _27: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _28: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _29: u128;<br align="left"/>let mut _30: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _31: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _32: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _33: utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _34: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _35: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _36: u128;<br align="left"/>let mut _37: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _38: &amp;ReErased u16;<br align="left"/>let _39: &amp;ReErased u16;<br align="left"/>let _40: u16;<br align="left"/>let mut _41: bool;<br align="left"/>let mut _42: u128;<br align="left"/>let mut _43: std::option::Option&lt;u16&gt;;<br align="left"/>let mut _44: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _45: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _46: &amp;ReErased state::obligation::Obligation;<br align="left"/>let mut _47: isize;<br align="left"/>let _48: std::result::Result&lt;std::convert::Infallible, std::fmt::Error&gt;;<br align="left"/>let mut _49: !;<br align="left"/>let mut _50: std::result::Result&lt;std::convert::Infallible, std::fmt::Error&gt;;<br align="left"/>let _51: ();<br align="left"/>let _52: ();<br align="left"/>let mut _53: std::iter::Filter&lt;std::slice::Iter&lt;ReErased, state::obligation::ObligationCollateral&gt;, Closure(DefId(0:1687 ~ kamino_lending[6389]::state::obligation::{impl#2}::active_deposits::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) &amp;ReErased state::obligation::ObligationCollateral,)) -&gt; bool, [Region(BrAnon)]), ()])&gt;;<br align="left"/>let mut _54: std::iter::Filter&lt;std::slice::Iter&lt;ReErased, state::obligation::ObligationCollateral&gt;, Closure(DefId(0:1687 ~ kamino_lending[6389]::state::obligation::{impl#2}::active_deposits::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) &amp;ReErased state::obligation::ObligationCollateral,)) -&gt; bool, [Region(BrAnon)]), ()])&gt;;<br align="left"/>let mut _55: &amp;ReErased state::obligation::Obligation;<br align="left"/>let mut _56: std::iter::Filter&lt;std::slice::Iter&lt;ReErased, state::obligation::ObligationCollateral&gt;, Closure(DefId(0:1687 ~ kamino_lending[6389]::state::obligation::{impl#2}::active_deposits::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) &amp;ReErased state::obligation::ObligationCollateral,)) -&gt; bool, [Region(BrAnon)]), ()])&gt;;<br align="left"/>let mut _57: ();<br align="left"/>let _58: ();<br align="left"/>let mut _59: std::option::Option&lt;&amp;ReErased state::obligation::ObligationCollateral&gt;;<br align="left"/>let mut _60: &amp;ReErased mut std::iter::Filter&lt;std::slice::Iter&lt;ReErased, state::obligation::ObligationCollateral&gt;, Closure(DefId(0:1687 ~ kamino_lending[6389]::state::obligation::{impl#2}::active_deposits::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) &amp;ReErased state::obligation::ObligationCollateral,)) -&gt; bool, [Region(BrAnon)]), ()])&gt;;<br align="left"/>let mut _61: &amp;ReErased mut std::iter::Filter&lt;std::slice::Iter&lt;ReErased, state::obligation::ObligationCollateral&gt;, Closure(DefId(0:1687 ~ kamino_lending[6389]::state::obligation::{impl#2}::active_deposits::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) &amp;ReErased state::obligation::ObligationCollateral,)) -&gt; bool, [Region(BrAnon)]), ()])&gt;;<br align="left"/>let mut _62: isize;<br align="left"/>let mut _63: !;<br align="left"/>let _64: &amp;ReErased state::obligation::ObligationCollateral;<br align="left"/>let _65: ();<br align="left"/>let mut _66: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::fmt::Error&gt;, ()&gt;;<br align="left"/>let mut _67: std::result::Result&lt;(), std::fmt::Error&gt;;<br align="left"/>let mut _68: &amp;ReErased mut std::fmt::Formatter&lt;ReErased&gt;;<br align="left"/>let mut _69: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _70: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _71: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _72: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _73: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _74: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _75: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _76: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _77: [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let mut _78: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _79: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _80: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _81: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _82: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _83: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _84: utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _85: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _86: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _87: u128;<br align="left"/>let mut _88: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _89: &amp;ReErased u64;<br align="left"/>let _90: &amp;ReErased u64;<br align="left"/>let mut _91: isize;<br align="left"/>let _92: std::result::Result&lt;std::convert::Infallible, std::fmt::Error&gt;;<br align="left"/>let mut _93: !;<br align="left"/>let mut _94: std::result::Result&lt;std::convert::Infallible, std::fmt::Error&gt;;<br align="left"/>let _95: ();<br align="left"/>let _96: ();<br align="left"/>let mut _97: std::iter::Filter&lt;std::slice::Iter&lt;ReErased, state::obligation::ObligationLiquidity&gt;, Closure(DefId(0:1689 ~ kamino_lending[6389]::state::obligation::{impl#2}::active_borrows::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) &amp;ReErased state::obligation::ObligationLiquidity,)) -&gt; bool, [Region(BrAnon)]), ()])&gt;;<br align="left"/>let mut _98: std::iter::Filter&lt;std::slice::Iter&lt;ReErased, state::obligation::ObligationLiquidity&gt;, Closure(DefId(0:1689 ~ kamino_lending[6389]::state::obligation::{impl#2}::active_borrows::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) &amp;ReErased state::obligation::ObligationLiquidity,)) -&gt; bool, [Region(BrAnon)]), ()])&gt;;<br align="left"/>let mut _99: &amp;ReErased state::obligation::Obligation;<br align="left"/>let mut _100: std::iter::Filter&lt;std::slice::Iter&lt;ReErased, state::obligation::ObligationLiquidity&gt;, Closure(DefId(0:1689 ~ kamino_lending[6389]::state::obligation::{impl#2}::active_borrows::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) &amp;ReErased state::obligation::ObligationLiquidity,)) -&gt; bool, [Region(BrAnon)]), ()])&gt;;<br align="left"/>let _101: ();<br align="left"/>let mut _102: std::option::Option&lt;&amp;ReErased state::obligation::ObligationLiquidity&gt;;<br align="left"/>let mut _103: &amp;ReErased mut std::iter::Filter&lt;std::slice::Iter&lt;ReErased, state::obligation::ObligationLiquidity&gt;, Closure(DefId(0:1689 ~ kamino_lending[6389]::state::obligation::{impl#2}::active_borrows::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) &amp;ReErased state::obligation::ObligationLiquidity,)) -&gt; bool, [Region(BrAnon)]), ()])&gt;;<br align="left"/>let mut _104: &amp;ReErased mut std::iter::Filter&lt;std::slice::Iter&lt;ReErased, state::obligation::ObligationLiquidity&gt;, Closure(DefId(0:1689 ~ kamino_lending[6389]::state::obligation::{impl#2}::active_borrows::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) &amp;ReErased state::obligation::ObligationLiquidity,)) -&gt; bool, [Region(BrAnon)]), ()])&gt;;<br align="left"/>let mut _105: isize;<br align="left"/>let mut _106: !;<br align="left"/>let _107: &amp;ReErased state::obligation::ObligationLiquidity;<br align="left"/>let _108: ();<br align="left"/>let mut _109: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::fmt::Error&gt;, ()&gt;;<br align="left"/>let mut _110: std::result::Result&lt;(), std::fmt::Error&gt;;<br align="left"/>let mut _111: &amp;ReErased mut std::fmt::Formatter&lt;ReErased&gt;;<br align="left"/>let mut _112: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _113: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _114: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _115: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _116: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _117: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _118: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _119: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _120: [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let mut _121: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _122: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _123: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _124: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _125: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _126: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _127: utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _128: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _129: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _130: &amp;ReErased state::obligation::ObligationLiquidity;<br align="left"/>let mut _131: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _132: &amp;ReErased u128;<br align="left"/>let _133: &amp;ReErased u128;<br align="left"/>let _134: u128;<br align="left"/>let mut _135: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _136: &amp;ReErased state::obligation::ObligationLiquidity;<br align="left"/>let mut _137: isize;<br align="left"/>let _138: std::result::Result&lt;std::convert::Infallible, std::fmt::Error&gt;;<br align="left"/>let mut _139: !;<br align="left"/>let mut _140: std::result::Result&lt;std::convert::Infallible, std::fmt::Error&gt;;<br align="left"/>let _141: ();<br align="left"/>let mut _142: ();<br align="left"/>let mut _143: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _144: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _145: &amp;ReErased [&amp;ReErased str; 5_usize];<br align="left"/>debug self =&gt; _1;<br align="left"/>debug f =&gt; _2;<br align="left"/>debug residual =&gt; _48;<br align="left"/>debug val =&gt; _51;<br align="left"/>debug iter =&gt; _56;<br align="left"/>debug collateral =&gt; _64;<br align="left"/>debug residual =&gt; _92;<br align="left"/>debug val =&gt; _95;<br align="left"/>debug iter =&gt; _100;<br align="left"/>debug liquidity =&gt; _107;<br align="left"/>debug residual =&gt; _138;<br align="left"/>debug val =&gt; _141;<br align="left"/>>;
    bb0__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = &amp;mut (*_2)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_145 = const _<br/>_10 = &amp;(*_145)<br/>_9 = &amp;(*_10)<br/>_8 = move _9 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_9)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_22 = ((*_1).6: u128)<br/></td></tr><tr><td align="left">_21 = FixedU128::&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;::from_bits(move _22)</td></tr></table>>];
    bb1__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_20 = &amp;_21<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">_19 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as utils::fraction::FractionExtra&gt;::to_display(move _20)</td></tr></table>>];
    bb2__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>_18 = &amp;_19<br/>_17 = &amp;(*_18)<br/></td></tr><tr><td align="left">_16 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _17)</td></tr></table>>];
    bb3__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_29 = ((*_1).8: u128)<br/></td></tr><tr><td align="left">_28 = FixedU128::&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;::from_bits(move _29)</td></tr></table>>];
    bb4__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">_27 = &amp;_28<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">_26 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as utils::fraction::FractionExtra&gt;::to_display(move _27)</td></tr></table>>];
    bb5__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>_25 = &amp;_26<br/>_24 = &amp;(*_25)<br/></td></tr><tr><td align="left">_23 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _24)</td></tr></table>>];
    bb6__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>_36 = ((*_1).9: u128)<br/></td></tr><tr><td align="left">_35 = FixedU128::&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;::from_bits(move _36)</td></tr></table>>];
    bb7__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">_34 = &amp;_35<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">_33 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as utils::fraction::FractionExtra&gt;::to_display(move _34)</td></tr></table>>];
    bb8__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>_32 = &amp;_33<br/>_31 = &amp;(*_32)<br/></td></tr><tr><td align="left">_30 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _31)</td></tr></table>>];
    bb9__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>_42 = ((*_1).6: u128)<br/>_41 = Gt(move _42, const 0_u128)<br/></td></tr><tr><td align="left">switchInt(move _41)</td></tr></table>>];
    bb10__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>_46 = &amp;(*_1)<br/></td></tr><tr><td align="left">_45 = obligation::Obligation::loan_to_value(move _46)</td></tr></table>>];
    bb11__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">_44 = &amp;_45<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">_43 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as utils::fraction::FractionExtra&gt;::to_percent::&lt;u16&gt;(move _44)</td></tr></table>>];
    bb12__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/></td></tr><tr><td align="left">_40 = std::option::Option::&lt;u16&gt;::unwrap(move _43)</td></tr></table>>];
    bb13__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>_40 = const 0_u16<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>_39 = &amp;_40<br/>_38 = &amp;(*_39)<br/></td></tr><tr><td align="left">_37 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _38)</td></tr></table>>];
    bb16__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>_15 = [move _16, move _23, move _30, move _37]<br/>StorageDead(_37)<br/>StorageDead(_30)<br/>StorageDead(_23)<br/>StorageDead(_16)<br/>_14 = &amp;_15<br/>_13 = &amp;(*_14)<br/>_12 = move _13 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">_7 = Arguments::&lt;'_&gt;::new_v1(move _8, move _12)</td></tr></table>>];
    bb17__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">_5 = Formatter::&lt;'_&gt;::write_fmt(move _6, move _7)</td></tr></table>>];
    bb18__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;(), std::fmt::Error&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb19__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_47 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _47)</td></tr></table>>];
    bb20__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_51)<br/>_51 = ((_4 as Continue).0: ())<br/>_3 = _51<br/>StorageDead(_51)<br/>StorageDead(_40)<br/>StorageDead(_39)<br/>StorageDead(_35)<br/>StorageDead(_33)<br/>StorageDead(_32)<br/>StorageDead(_28)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_21)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_10)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>_55 = &amp;(*_1)<br/></td></tr><tr><td align="left">_54 = obligation::Obligation::active_deposits(move _55)</td></tr></table>>];
    bb21__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb22__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_48)<br/>_48 = ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, std::fmt::Error&gt;)<br/>StorageLive(_50)<br/>_50 = _48<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), std::fmt::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::fmt::Error&gt;&gt;&gt;::from_residual(move _50)</td></tr></table>>];
    bb23__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageDead(_48)<br/>StorageDead(_40)<br/>StorageDead(_39)<br/>StorageDead(_35)<br/>StorageDead(_33)<br/>StorageDead(_32)<br/>StorageDead(_28)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_21)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_10)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/></td></tr><tr><td align="left">_53 = &lt;Filter&lt;std::slice::Iter&lt;'_, obligation::ObligationCollateral&gt;, {closure@programs\klend\src\state\obligation.rs:425:37: 425:40}&gt; as IntoIterator&gt;::into_iter(move _54)</td></tr></table>>];
    bb25__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageLive(_56)<br/>_56 = move _53<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>_61 = &amp;mut _56<br/>_60 = &amp;mut (*_61)<br/></td></tr><tr><td align="left">_59 = &lt;Filter&lt;std::slice::Iter&lt;'_, obligation::ObligationCollateral&gt;, {closure@programs\klend\src\state\obligation.rs:425:37: 425:40}&gt; as Iterator&gt;::next(move _60)</td></tr></table>>];
    bb27__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>_62 = discriminant(_59)<br/></td></tr><tr><td align="left">switchInt(move _62)</td></tr></table>>];
    bb28__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_64)<br/>_64 = ((_59 as Some).0: &amp;state::obligation::ObligationCollateral)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>_68 = &amp;mut (*_2)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>_143 = const _<br/>_72 = &amp;(*_143)<br/>_71 = &amp;(*_72)<br/>_70 = move _71 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_71)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>_80 = &amp;((*_64).0: anchor_lang::prelude::Pubkey)<br/>_79 = &amp;(*_80)<br/></td></tr><tr><td align="left">_78 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;anchor_lang::prelude::Pubkey&gt;(move _79)</td></tr></table>>];
    bb29__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">_52 = const ()<br/>StorageDead(_61)<br/>StorageDead(_59)<br/>StorageDead(_58)<br/>StorageDead(_56)<br/>StorageDead(_53)<br/>StorageDead(_52)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>_99 = &amp;(*_1)<br/></td></tr><tr><td align="left">_98 = obligation::Obligation::active_borrows(move _99)</td></tr></table>>];
    bb30__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>_87 = ((*_64).2: u128)<br/></td></tr><tr><td align="left">_86 = FixedU128::&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;::from_bits(move _87)</td></tr></table>>];
    bb31__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">_85 = &amp;_86<br/>StorageDead(_87)<br/></td></tr><tr><td align="left">_84 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as utils::fraction::FractionExtra&gt;::to_display(move _85)</td></tr></table>>];
    bb32__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>_83 = &amp;_84<br/>_82 = &amp;(*_83)<br/></td></tr><tr><td align="left">_81 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _82)</td></tr></table>>];
    bb33__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>_90 = &amp;((*_64).1: u64)<br/>_89 = &amp;(*_90)<br/></td></tr><tr><td align="left">_88 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _89)</td></tr></table>>];
    bb34__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>_77 = [move _78, move _81, move _88]<br/>StorageDead(_88)<br/>StorageDead(_81)<br/>StorageDead(_78)<br/>_76 = &amp;_77<br/>_75 = &amp;(*_76)<br/>_74 = move _75 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_75)<br/></td></tr><tr><td align="left">_69 = Arguments::&lt;'_&gt;::new_v1(move _70, move _74)</td></tr></table>>];
    bb35__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageDead(_70)<br/></td></tr><tr><td align="left">_67 = Formatter::&lt;'_&gt;::write_fmt(move _68, move _69)</td></tr></table>>];
    bb36__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageDead(_68)<br/></td></tr><tr><td align="left">_66 = &lt;std::result::Result&lt;(), std::fmt::Error&gt; as Try&gt;::branch(move _67)</td></tr></table>>];
    bb37__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>_91 = discriminant(_66)<br/></td></tr><tr><td align="left">switchInt(move _91)</td></tr></table>>];
    bb38__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_95)<br/>_95 = ((_66 as Continue).0: ())<br/>_65 = _95<br/>StorageDead(_95)<br/>StorageDead(_90)<br/>StorageDead(_86)<br/>StorageDead(_84)<br/>StorageDead(_83)<br/>StorageDead(_80)<br/>StorageDead(_77)<br/>StorageDead(_76)<br/>StorageDead(_72)<br/>StorageDead(_66)<br/>StorageDead(_65)<br/>_58 = const ()<br/>StorageDead(_64)<br/>StorageDead(_61)<br/>StorageDead(_59)<br/>StorageDead(_58)<br/>_57 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_92)<br/>_92 = ((_66 as Break).0: std::result::Result&lt;std::convert::Infallible, std::fmt::Error&gt;)<br/>StorageLive(_94)<br/>_94 = _92<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), std::fmt::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::fmt::Error&gt;&gt;&gt;::from_residual(move _94)</td></tr></table>>];
    bb40__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/>StorageDead(_92)<br/>StorageDead(_90)<br/>StorageDead(_86)<br/>StorageDead(_84)<br/>StorageDead(_83)<br/>StorageDead(_80)<br/>StorageDead(_77)<br/>StorageDead(_76)<br/>StorageDead(_72)<br/>StorageDead(_66)<br/>StorageDead(_65)<br/>StorageDead(_64)<br/>StorageDead(_61)<br/>StorageDead(_59)<br/>StorageDead(_58)<br/>StorageDead(_56)<br/>StorageDead(_53)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/></td></tr><tr><td align="left">_97 = &lt;Filter&lt;std::slice::Iter&lt;'_, obligation::ObligationLiquidity&gt;, {closure@programs\klend\src\state\obligation.rs:429:36: 429:39}&gt; as IntoIterator&gt;::into_iter(move _98)</td></tr></table>>];
    bb42__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>StorageLive(_100)<br/>_100 = move _97<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>_104 = &amp;mut _100<br/>_103 = &amp;mut (*_104)<br/></td></tr><tr><td align="left">_102 = &lt;Filter&lt;std::slice::Iter&lt;'_, obligation::ObligationLiquidity&gt;, {closure@programs\klend\src\state\obligation.rs:429:36: 429:39}&gt; as Iterator&gt;::next(move _103)</td></tr></table>>];
    bb44__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>_105 = discriminant(_102)<br/></td></tr><tr><td align="left">switchInt(move _105)</td></tr></table>>];
    bb45__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageLive(_107)<br/>_107 = ((_102 as Some).0: &amp;state::obligation::ObligationLiquidity)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>_111 = &amp;mut (*_2)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>_144 = const _<br/>_115 = &amp;(*_144)<br/>_114 = &amp;(*_115)<br/>_113 = move _114 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_114)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>_123 = &amp;((*_107).0: anchor_lang::prelude::Pubkey)<br/>_122 = &amp;(*_123)<br/></td></tr><tr><td align="left">_121 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;anchor_lang::prelude::Pubkey&gt;(move _122)</td></tr></table>>];
    bb46__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">_96 = const ()<br/>StorageDead(_104)<br/>StorageDead(_102)<br/>StorageDead(_101)<br/>StorageDead(_100)<br/>StorageDead(_97)<br/>StorageDead(_96)<br/>StorageLive(_142)<br/>_142 = ()<br/>_0 = std::result::Result::&lt;(), std::fmt::Error&gt;::Ok(move _142)<br/>StorageDead(_142)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>_130 = &amp;(*_107)<br/></td></tr><tr><td align="left">_129 = obligation::ObligationLiquidity::market_value(move _130)</td></tr></table>>];
    bb48__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">_128 = &amp;_129<br/>StorageDead(_130)<br/></td></tr><tr><td align="left">_127 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as utils::fraction::FractionExtra&gt;::to_display(move _128)</td></tr></table>>];
    bb49__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>_126 = &amp;_127<br/>_125 = &amp;(*_126)<br/></td></tr><tr><td align="left">_124 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _125)</td></tr></table>>];
    bb50__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>_136 = &amp;(*_107)<br/></td></tr><tr><td align="left">_135 = obligation::ObligationLiquidity::borrowed_amount(move _136)</td></tr></table>>];
    bb51__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_136)<br/></td></tr><tr><td align="left">_134 = FixedU128::&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;::to_num::&lt;u128&gt;(move _135)</td></tr></table>>];
    bb52__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_135)<br/>_133 = &amp;_134<br/>_132 = &amp;(*_133)<br/></td></tr><tr><td align="left">_131 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u128&gt;(move _132)</td></tr></table>>];
    bb53__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_132)<br/>_120 = [move _121, move _124, move _131]<br/>StorageDead(_131)<br/>StorageDead(_124)<br/>StorageDead(_121)<br/>_119 = &amp;_120<br/>_118 = &amp;(*_119)<br/>_117 = move _118 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_118)<br/></td></tr><tr><td align="left">_112 = Arguments::&lt;'_&gt;::new_v1(move _113, move _117)</td></tr></table>>];
    bb54__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/>StorageDead(_113)<br/></td></tr><tr><td align="left">_110 = Formatter::&lt;'_&gt;::write_fmt(move _111, move _112)</td></tr></table>>];
    bb55__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>StorageDead(_111)<br/></td></tr><tr><td align="left">_109 = &lt;std::result::Result&lt;(), std::fmt::Error&gt; as Try&gt;::branch(move _110)</td></tr></table>>];
    bb56__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/>_137 = discriminant(_109)<br/></td></tr><tr><td align="left">switchInt(move _137)</td></tr></table>>];
    bb57__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageLive(_141)<br/>_141 = ((_109 as Continue).0: ())<br/>_108 = _141<br/>StorageDead(_141)<br/>StorageDead(_134)<br/>StorageDead(_133)<br/>StorageDead(_129)<br/>StorageDead(_127)<br/>StorageDead(_126)<br/>StorageDead(_123)<br/>StorageDead(_120)<br/>StorageDead(_119)<br/>StorageDead(_115)<br/>StorageDead(_109)<br/>StorageDead(_108)<br/>_101 = const ()<br/>StorageDead(_107)<br/>StorageDead(_104)<br/>StorageDead(_102)<br/>StorageDead(_101)<br/>_57 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb58__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageLive(_138)<br/>_138 = ((_109 as Break).0: std::result::Result&lt;std::convert::Infallible, std::fmt::Error&gt;)<br/>StorageLive(_140)<br/>_140 = _138<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), std::fmt::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::fmt::Error&gt;&gt;&gt;::from_residual(move _140)</td></tr></table>>];
    bb59__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_140)<br/>StorageDead(_138)<br/>StorageDead(_134)<br/>StorageDead(_133)<br/>StorageDead(_129)<br/>StorageDead(_127)<br/>StorageDead(_126)<br/>StorageDead(_123)<br/>StorageDead(_120)<br/>StorageDead(_119)<br/>StorageDead(_115)<br/>StorageDead(_109)<br/>StorageDead(_108)<br/>StorageDead(_107)<br/>StorageDead(_104)<br/>StorageDead(_102)<br/>StorageDead(_101)<br/>StorageDead(_100)<br/>StorageDead(_97)<br/>StorageDead(_96)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb60__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left">return</td></tr></table>>];
    bb61__0_1652 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">61 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_1652 -> bb1__0_1652 [label="return"];
    bb1__0_1652 -> bb2__0_1652 [label="return"];
    bb2__0_1652 -> bb3__0_1652 [label="return"];
    bb3__0_1652 -> bb4__0_1652 [label="return"];
    bb4__0_1652 -> bb5__0_1652 [label="return"];
    bb5__0_1652 -> bb6__0_1652 [label="return"];
    bb6__0_1652 -> bb7__0_1652 [label="return"];
    bb7__0_1652 -> bb8__0_1652 [label="return"];
    bb8__0_1652 -> bb9__0_1652 [label="return"];
    bb9__0_1652 -> bb14__0_1652 [label="0"];
    bb9__0_1652 -> bb10__0_1652 [label="otherwise"];
    bb10__0_1652 -> bb11__0_1652 [label="return"];
    bb11__0_1652 -> bb12__0_1652 [label="return"];
    bb12__0_1652 -> bb13__0_1652 [label="return"];
    bb13__0_1652 -> bb15__0_1652 [label=""];
    bb14__0_1652 -> bb15__0_1652 [label=""];
    bb15__0_1652 -> bb16__0_1652 [label="return"];
    bb16__0_1652 -> bb17__0_1652 [label="return"];
    bb17__0_1652 -> bb18__0_1652 [label="return"];
    bb18__0_1652 -> bb19__0_1652 [label="return"];
    bb19__0_1652 -> bb20__0_1652 [label="0"];
    bb19__0_1652 -> bb22__0_1652 [label="1"];
    bb19__0_1652 -> bb21__0_1652 [label="otherwise"];
    bb20__0_1652 -> bb24__0_1652 [label="return"];
    bb22__0_1652 -> bb23__0_1652 [label="return"];
    bb23__0_1652 -> bb60__0_1652 [label=""];
    bb24__0_1652 -> bb25__0_1652 [label="return"];
    bb24__0_1652 -> bb61__0_1652 [label="unwind"];
    bb25__0_1652 -> bb26__0_1652 [label=""];
    bb26__0_1652 -> bb27__0_1652 [label="return"];
    bb26__0_1652 -> bb61__0_1652 [label="unwind"];
    bb27__0_1652 -> bb29__0_1652 [label="0"];
    bb27__0_1652 -> bb28__0_1652 [label="1"];
    bb27__0_1652 -> bb21__0_1652 [label="otherwise"];
    bb28__0_1652 -> bb30__0_1652 [label="return"];
    bb28__0_1652 -> bb61__0_1652 [label="unwind"];
    bb29__0_1652 -> bb41__0_1652 [label="return"];
    bb30__0_1652 -> bb31__0_1652 [label="return"];
    bb30__0_1652 -> bb61__0_1652 [label="unwind"];
    bb31__0_1652 -> bb32__0_1652 [label="return"];
    bb31__0_1652 -> bb61__0_1652 [label="unwind"];
    bb32__0_1652 -> bb33__0_1652 [label="return"];
    bb32__0_1652 -> bb61__0_1652 [label="unwind"];
    bb33__0_1652 -> bb34__0_1652 [label="return"];
    bb33__0_1652 -> bb61__0_1652 [label="unwind"];
    bb34__0_1652 -> bb35__0_1652 [label="return"];
    bb34__0_1652 -> bb61__0_1652 [label="unwind"];
    bb35__0_1652 -> bb36__0_1652 [label="return"];
    bb35__0_1652 -> bb61__0_1652 [label="unwind"];
    bb36__0_1652 -> bb37__0_1652 [label="return"];
    bb36__0_1652 -> bb61__0_1652 [label="unwind"];
    bb37__0_1652 -> bb38__0_1652 [label="0"];
    bb37__0_1652 -> bb39__0_1652 [label="1"];
    bb37__0_1652 -> bb21__0_1652 [label="otherwise"];
    bb38__0_1652 -> bb26__0_1652 [label=""];
    bb39__0_1652 -> bb40__0_1652 [label="return"];
    bb39__0_1652 -> bb61__0_1652 [label="unwind"];
    bb40__0_1652 -> bb60__0_1652 [label=""];
    bb41__0_1652 -> bb42__0_1652 [label="return"];
    bb41__0_1652 -> bb61__0_1652 [label="unwind"];
    bb42__0_1652 -> bb43__0_1652 [label=""];
    bb43__0_1652 -> bb44__0_1652 [label="return"];
    bb43__0_1652 -> bb61__0_1652 [label="unwind"];
    bb44__0_1652 -> bb46__0_1652 [label="0"];
    bb44__0_1652 -> bb45__0_1652 [label="1"];
    bb44__0_1652 -> bb21__0_1652 [label="otherwise"];
    bb45__0_1652 -> bb47__0_1652 [label="return"];
    bb45__0_1652 -> bb61__0_1652 [label="unwind"];
    bb46__0_1652 -> bb60__0_1652 [label=""];
    bb47__0_1652 -> bb48__0_1652 [label="return"];
    bb47__0_1652 -> bb61__0_1652 [label="unwind"];
    bb48__0_1652 -> bb49__0_1652 [label="return"];
    bb48__0_1652 -> bb61__0_1652 [label="unwind"];
    bb49__0_1652 -> bb50__0_1652 [label="return"];
    bb49__0_1652 -> bb61__0_1652 [label="unwind"];
    bb50__0_1652 -> bb51__0_1652 [label="return"];
    bb50__0_1652 -> bb61__0_1652 [label="unwind"];
    bb51__0_1652 -> bb52__0_1652 [label="return"];
    bb51__0_1652 -> bb61__0_1652 [label="unwind"];
    bb52__0_1652 -> bb53__0_1652 [label="return"];
    bb52__0_1652 -> bb61__0_1652 [label="unwind"];
    bb53__0_1652 -> bb54__0_1652 [label="return"];
    bb53__0_1652 -> bb61__0_1652 [label="unwind"];
    bb54__0_1652 -> bb55__0_1652 [label="return"];
    bb54__0_1652 -> bb61__0_1652 [label="unwind"];
    bb55__0_1652 -> bb56__0_1652 [label="return"];
    bb55__0_1652 -> bb61__0_1652 [label="unwind"];
    bb56__0_1652 -> bb57__0_1652 [label="0"];
    bb56__0_1652 -> bb58__0_1652 [label="1"];
    bb56__0_1652 -> bb21__0_1652 [label="otherwise"];
    bb57__0_1652 -> bb43__0_1652 [label=""];
    bb58__0_1652 -> bb59__0_1652 [label="return"];
    bb58__0_1652 -> bb61__0_1652 [label="unwind"];
    bb59__0_1652 -> bb60__0_1652 [label=""];
}
