// MIR for `handlers::handler_refresh_obligation_farms_for_reserve::__cpi_client_accounts_optional_obligation_farms_accounts::<impl at programs\klend\src\handlers\handler_refresh_obligation_farms_for_reserve.rs:117:10: 117:18>::to_account_infos` after PreCodegen

fn handlers::handler_refresh_obligation_farms_for_reserve::__cpi_client_accounts_optional_obligation_farms_accounts::<impl at programs\klend\src\handlers\handler_refresh_obligation_farms_for_reserve.rs:117:10: 117:18>::to_account_infos(_1: &handlers::handler_refresh_obligation_farms_for_reserve::__cpi_client_accounts_optional_obligation_farms_accounts::OptionalObligationFarmsAccounts<'_>) -> Vec<anchor_lang::prelude::AccountInfo<'_>> {
    debug self => _1;
    let mut _0: std::vec::Vec<anchor_lang::prelude::AccountInfo<'_>>;
    let mut _2: std::vec::Vec<anchor_lang::prelude::AccountInfo<'_>>;
    let _3: ();
    let mut _4: &mut std::vec::Vec<anchor_lang::prelude::AccountInfo<'_>>;
    let mut _5: std::vec::Vec<anchor_lang::prelude::AccountInfo<'_>>;
    let mut _6: &std::option::Option<anchor_lang::prelude::AccountInfo<'_>>;
    let _7: &std::option::Option<anchor_lang::prelude::AccountInfo<'_>>;
    let _8: ();
    let mut _9: &mut std::vec::Vec<anchor_lang::prelude::AccountInfo<'_>>;
    let mut _10: std::vec::Vec<anchor_lang::prelude::AccountInfo<'_>>;
    let mut _11: &std::option::Option<anchor_lang::prelude::AccountInfo<'_>>;
    let _12: &std::option::Option<anchor_lang::prelude::AccountInfo<'_>>;
    scope 1 {
        debug account_infos => _2;
    }

    bb0: {
        StorageLive(_2);
        _2 = Vec::<anchor_lang::prelude::AccountInfo<'_>>::new() -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageLive(_3);
        StorageLive(_4);
        _4 = &mut _2;
        StorageLive(_5);
        StorageLive(_6);
        StorageLive(_7);
        _7 = &((*_1).0: std::option::Option<anchor_lang::prelude::AccountInfo<'_>>);
        _6 = &(*_7);
        _5 = <std::option::Option<anchor_lang::prelude::AccountInfo<'_>> as anchor_lang::ToAccountInfos<'_>>::to_account_infos(move _6) -> [return: bb2, unwind: bb6];
    }

    bb2: {
        StorageDead(_6);
        _3 = <Vec<anchor_lang::prelude::AccountInfo<'_>> as Extend<anchor_lang::prelude::AccountInfo<'_>>>::extend::<Vec<anchor_lang::prelude::AccountInfo<'_>>>(move _4, move _5) -> [return: bb3, unwind: bb6];
    }

    bb3: {
        StorageDead(_5);
        StorageDead(_4);
        StorageDead(_7);
        StorageDead(_3);
        StorageLive(_8);
        StorageLive(_9);
        _9 = &mut _2;
        StorageLive(_10);
        StorageLive(_11);
        StorageLive(_12);
        _12 = &((*_1).1: std::option::Option<anchor_lang::prelude::AccountInfo<'_>>);
        _11 = &(*_12);
        _10 = <std::option::Option<anchor_lang::prelude::AccountInfo<'_>> as anchor_lang::ToAccountInfos<'_>>::to_account_infos(move _11) -> [return: bb4, unwind: bb6];
    }

    bb4: {
        StorageDead(_11);
        _8 = <Vec<anchor_lang::prelude::AccountInfo<'_>> as Extend<anchor_lang::prelude::AccountInfo<'_>>>::extend::<Vec<anchor_lang::prelude::AccountInfo<'_>>>(move _9, move _10) -> [return: bb5, unwind: bb6];
    }

    bb5: {
        StorageDead(_10);
        StorageDead(_9);
        StorageDead(_12);
        StorageDead(_8);
        _0 = move _2;
        StorageDead(_2);
        return;
    }

    bb6 (cleanup): {
        drop(_2) -> [return: bb7, unwind terminate(cleanup)];
    }

    bb7 (cleanup): {
        resume;
    }
}
