digraph Mir_0_1312 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn refresh_obligation_borrows::{closure#0}(_1: &amp;ReErased mut Closure(DefId(0:1312 ~ kamino_lending[6389]::lending_market::lending_operations::refresh_obligation_borrows::{closure#0}), [ReErased, T/#1, U/#2, impl Iterator&lt;Item = T&gt;/#3, impl Iterator&lt;Item = U&gt;/#4, i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) (usize, &amp;ReErased mut state::obligation::ObligationLiquidity),)) -&gt; bool, [Region(BrAnon)]), ()]), _2: &amp;ReErased (usize, &amp;ReErased mut state::obligation::ObligationLiquidity)) -&gt; bool<br align="left"/>let _3: &amp;ReErased &amp;ReErased mut state::obligation::ObligationLiquidity;<br align="left"/>let mut _4: &amp;ReErased state::obligation::ObligationLiquidity;<br align="left"/>let mut _5: &amp;ReErased mut state::obligation::ObligationLiquidity;<br align="left"/>debug borrow =&gt; _3;<br align="left"/>>;
    bb0__0_1312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>_3 = &amp;((*_2).1: &amp;mut state::obligation::ObligationLiquidity)<br/>StorageLive(_4)<br/>_5 = deref_copy (*_3)<br/>_4 = &amp;(*_5)<br/></td></tr><tr><td align="left">_0 = obligation::ObligationLiquidity::is_active(move _4)</td></tr></table>>];
    bb1__0_1312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_1312 -> bb1__0_1312 [label="return"];
}
