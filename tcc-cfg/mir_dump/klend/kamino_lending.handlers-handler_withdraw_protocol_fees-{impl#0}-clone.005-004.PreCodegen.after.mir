// MIR for `handlers::handler_withdraw_protocol_fees::<impl at programs\klend\src\handlers\handler_withdraw_protocol_fees.rs:95:1: 95:53>::clone` after PreCodegen

fn handlers::handler_withdraw_protocol_fees::<impl at programs\klend\src\handlers\handler_withdraw_protocol_fees.rs:95:1: 95:53>::clone(_1: &handlers::handler_withdraw_protocol_fees::__client_accounts_withdraw_protocol_fees::WithdrawProtocolFees) -> handlers::handler_withdraw_protocol_fees::__client_accounts_withdraw_protocol_fees::WithdrawProtocolFees {
    debug self => _1;
    let mut _0: handlers::handler_withdraw_protocol_fees::__client_accounts_withdraw_protocol_fees::WithdrawProtocolFees;
    let mut _2: anchor_lang::prelude::Pubkey;
    let mut _3: anchor_lang::prelude::Pubkey;
    let mut _4: anchor_lang::prelude::Pubkey;
    let mut _5: anchor_lang::prelude::Pubkey;
    let mut _6: anchor_lang::prelude::Pubkey;
    let mut _7: anchor_lang::prelude::Pubkey;
    let mut _8: anchor_lang::prelude::Pubkey;
    let mut _9: anchor_lang::prelude::Pubkey;

    bb0: {
        StorageLive(_2);
        _2 = ((*_1).1: anchor_lang::prelude::Pubkey);
        StorageLive(_3);
        _3 = ((*_1).2: anchor_lang::prelude::Pubkey);
        StorageLive(_4);
        _4 = ((*_1).3: anchor_lang::prelude::Pubkey);
        StorageLive(_5);
        _5 = ((*_1).4: anchor_lang::prelude::Pubkey);
        StorageLive(_6);
        _6 = ((*_1).5: anchor_lang::prelude::Pubkey);
        StorageLive(_7);
        _7 = ((*_1).7: anchor_lang::prelude::Pubkey);
        StorageLive(_8);
        _8 = ((*_1).6: anchor_lang::prelude::Pubkey);
        StorageLive(_9);
        _9 = ((*_1).0: anchor_lang::prelude::Pubkey);
        _0 = handlers::handler_withdraw_protocol_fees::__client_accounts_withdraw_protocol_fees::WithdrawProtocolFees { global_config: move _9, lending_market: move _2, reserve: move _3, reserve_liquidity_mint: move _4, lending_market_authority: move _5, fee_vault: move _6, fee_collector_ata: move _8, token_program: move _7 };
        StorageDead(_9);
        StorageDead(_8);
        StorageDead(_7);
        StorageDead(_6);
        StorageDead(_5);
        StorageDead(_4);
        StorageDead(_3);
        StorageDead(_2);
        return;
    }
}
