digraph Mir_0_2633 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn get_switchboard_price::{closure#0}(_1: Closure(DefId(0:2633 ~ kamino_lending[6389]::utils::prices::switchboard::get_switchboard_price::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((std::num::TryFromIntError,)) -&gt; anchor_lang::error::Error, []), ()]), _2: std::num::TryFromIntError) -&gt; anchor_lang::error::Error<br align="left"/>let _3: ();<br align="left"/>let mut _4: &amp;ReErased str;<br align="left"/>let _5: &amp;ReErased str;<br align="left"/>let mut _6: anchor_lang::error::AnchorError;<br align="left"/>let mut _7: std::string::String;<br align="left"/>let mut _8: &amp;ReErased LendingError;<br align="left"/>let _9: LendingError;<br align="left"/>let mut _10: u32;<br align="left"/>let mut _11: LendingError;<br align="left"/>let mut _12: std::string::String;<br align="left"/>let mut _13: &amp;ReErased LendingError;<br align="left"/>let _14: LendingError;<br align="left"/>let mut _15: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _16: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _17: anchor_lang::error::Source;<br align="left"/>let mut _18: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let mut _19: &amp;ReErased LendingError;<br align="left"/>let mut _20: &amp;ReErased LendingError;<br align="left"/>>;
    bb0__0_2633 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = const &quot;Switchboard standard deviation is negative which is against its math definition&quot;<br/>_4 = &amp;(*_5)<br/></td></tr><tr><td align="left">_3 = solana_program::log::sol_log(move _4)</td></tr></table>>];
    bb1__0_2633 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageDead(_5)<br/>StorageDead(_3)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_20 = const _<br/>_8 = &amp;(*_20)<br/></td></tr><tr><td align="left">_7 = LendingError::name(move _8)</td></tr></table>>];
    bb2__0_2633 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = LendingError::SwitchboardV2Error<br/></td></tr><tr><td align="left">_10 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _11)</td></tr></table>>];
    bb3__0_2633 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>_19 = const _<br/>_13 = &amp;(*_19)<br/></td></tr><tr><td align="left">_12 = &lt;LendingError as ToString&gt;::to_string(move _13)</td></tr></table>>];
    bb4__0_2633 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_17 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\utils\\prices\\switchboard.rs&quot;, line: const 74_u32 }<br/>_16 = anchor_lang::error::ErrorOrigin::Source(move _17)<br/>StorageDead(_17)<br/>_15 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _16)<br/>StorageDead(_16)<br/>StorageLive(_18)<br/>_18 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_6 = anchor_lang::error::AnchorError { error_name: move _7, error_code_number: move _10, error_msg: move _12, error_origin: move _15, compared_values: move _18 }<br/>StorageDead(_18)<br/>StorageDead(_15)<br/>StorageDead(_12)<br/>StorageDead(_10)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">_0 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _6)</td></tr></table>>];
    bb5__0_2633 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb6__0_2633 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">6 (cleanup)</td></tr><tr><td align="left">drop(_7)</td></tr></table>>];
    bb7__0_2633 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">7 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_2633 -> bb1__0_2633 [label="return"];
    bb1__0_2633 -> bb2__0_2633 [label="return"];
    bb2__0_2633 -> bb3__0_2633 [label="return"];
    bb2__0_2633 -> bb6__0_2633 [label="unwind"];
    bb3__0_2633 -> bb4__0_2633 [label="return"];
    bb3__0_2633 -> bb6__0_2633 [label="unwind"];
    bb4__0_2633 -> bb5__0_2633 [label="return"];
    bb4__0_2633 -> bb7__0_2633 [label="unwind"];
    bb6__0_2633 -> bb7__0_2633 [label="return"];
}
