digraph Mir_0_2604 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn get_price_usd::{closure#4}::{closure#2}(_1: Closure(DefId(0:2604 ~ kamino_lending[6389]::utils::prices::scope::get_price_usd::{closure#4}::{closure#2}), [i32, Binder(extern &quot;RustCall&quot; fn(()) -&gt; LendingError, []), ()])) -&gt; LendingError<br align="left"/>let mut _2: LendingError;<br align="left"/>let _3: LendingError;<br align="left"/>let _4: ();<br align="left"/>let _5: ();<br align="left"/>let mut _6: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _7: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _8: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _9: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _10: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _11: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _12: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _13: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _14: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _15: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _16: &amp;ReErased &amp;ReErased LendingError;<br align="left"/>let _17: &amp;ReErased &amp;ReErased LendingError;<br align="left"/>let _18: &amp;ReErased LendingError;<br align="left"/>let mut _19: &amp;ReErased [core::fmt::rt::Placeholder];<br align="left"/>let mut _20: &amp;ReErased [core::fmt::rt::Placeholder; 1_usize];<br align="left"/>let _21: &amp;ReErased [core::fmt::rt::Placeholder; 1_usize];<br align="left"/>let _22: [core::fmt::rt::Placeholder; 1_usize];<br align="left"/>let mut _23: core::fmt::rt::Placeholder;<br align="left"/>let mut _24: core::fmt::rt::Alignment;<br align="left"/>let mut _25: core::fmt::rt::Count;<br align="left"/>let mut _26: core::fmt::rt::Count;<br align="left"/>let mut _27: core::fmt::rt::UnsafeArg;<br align="left"/>let mut _28: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>debug tmp =&gt; _3;<br align="left"/>>;
    bb0__0_2604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>_2 = LendingError::MathOverflow<br/>StorageLive(_3)<br/>_3 = _2<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_28 = const _<br/>_9 = &amp;(*_28)<br/>_8 = &amp;(*_9)<br/>_7 = move _8 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_8)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = &amp;_3<br/>_17 = &amp;_18<br/>_16 = &amp;(*_17)<br/></td></tr><tr><td align="left">_15 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;&amp;LendingError&gt;(move _16)</td></tr></table>>];
    bb1__0_2604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>_14 = [move _15]<br/>StorageDead(_15)<br/>_13 = &amp;_14<br/>_12 = &amp;(*_13)<br/>_11 = move _12 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_12)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_24 = core::fmt::rt::Alignment::Unknown<br/>StorageLive(_25)<br/>_25 = core::fmt::rt::Count::Implied<br/>StorageLive(_26)<br/>_26 = core::fmt::rt::Count::Implied<br/></td></tr><tr><td align="left">_23 = core::fmt::rt::Placeholder::new(const 0_usize, const ' ', move _24, const 4_u32, move _25, move _26)</td></tr></table>>];
    bb2__0_2604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/>_22 = [move _23]<br/>StorageDead(_23)<br/>_21 = &amp;_22<br/>_20 = &amp;(*_21)<br/>_19 = move _20 as &amp;[core::fmt::rt::Placeholder] (PointerCoercion(Unsize))<br/>StorageDead(_20)<br/>StorageLive(_27)<br/></td></tr><tr><td align="left">_27 = core::fmt::rt::UnsafeArg::new()</td></tr></table>>];
    bb3__0_2604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left">_6 = Arguments::&lt;'_&gt;::new_v1_formatted(move _7, move _11, move _19, move _27)</td></tr></table>>];
    bb4__0_2604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_19)<br/>StorageDead(_11)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">_5 = _print(move _6)</td></tr></table>>];
    bb5__0_2604 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_22)<br/>StorageDead(_21)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_9)<br/>StorageDead(_5)<br/>_4 = const ()<br/>StorageDead(_4)<br/>_0 = _3<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2604 -> bb1__0_2604 [label="return"];
    bb1__0_2604 -> bb2__0_2604 [label="return"];
    bb2__0_2604 -> bb3__0_2604 [label="return"];
    bb3__0_2604 -> bb4__0_2604 [label="return"];
    bb4__0_2604 -> bb5__0_2604 [label="return"];
}
