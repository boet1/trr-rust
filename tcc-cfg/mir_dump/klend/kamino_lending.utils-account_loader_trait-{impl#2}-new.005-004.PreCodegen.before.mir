// MIR for `account_loader_trait::<impl at programs\klend\src\utils\account_loader_trait.rs:50:1: 50:60>::new` before PreCodegen

fn account_loader_trait::<impl at programs\klend\src\utils\account_loader_trait.rs:50:1: 50:60>::new(_1: &anchor_lang::prelude::AccountInfo<'_>) -> account_loader_trait::FatAccountLoader<'_, T> {
    debug acc_info => _1;
    let mut _0: utils::account_loader_trait::FatAccountLoader<'_, T>;
    let mut _2: anchor_lang::prelude::AccountInfo<'_>;
    let mut _3: &anchor_lang::prelude::AccountInfo<'_>;
    let mut _4: std::marker::PhantomData<&T>;

    bb0: {
        StorageLive(_2);
        StorageLive(_3);
        _3 = &(*_1);
        _2 = <anchor_lang::prelude::AccountInfo<'_> as Clone>::clone(move _3) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_3);
        StorageLive(_4);
        _4 = PhantomData::<&T>;
        _0 = account_loader_trait::FatAccountLoader::<'_, T> { acc_info: move _2, phantom: move _4 };
        StorageDead(_4);
        StorageDead(_2);
        return;
    }
}
