digraph Mir_0_2129 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn account_loader_trait::FatAccountLoader::&lt;'info, T&gt;::try_from_unchecked(_1: &amp;ReErased anchor_lang::prelude::Pubkey, _2: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;) -&gt; std::result::Result&lt;utils::account_loader_trait::FatAccountLoader&lt;ReErased, T/#1&gt;, anchor_lang::error::Error&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: bool;<br align="left"/>let mut _5: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _6: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _7: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _8: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _9: !;<br align="left"/>let mut _10: anchor_lang::error::Error;<br align="left"/>let mut _11: anchor_lang::error::Error;<br align="left"/>let mut _12: anchor_lang::error::ErrorCode;<br align="left"/>let mut _13: (anchor_lang::prelude::Pubkey, anchor_lang::prelude::Pubkey);<br align="left"/>let mut _14: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _15: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _16: utils::account_loader_trait::FatAccountLoader&lt;ReErased, T/#1&gt;;<br align="left"/>let mut _17: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _18: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _19: bool;<br align="left"/>debug _program_id =&gt; _1;<br align="left"/>debug acc_info =&gt; _2;<br align="left"/>>;
    bb0__0_2129 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_19 = const false<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = &amp;((*_2).3: &amp;anchor_lang::prelude::Pubkey)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/></td></tr><tr><td align="left">_8 = &lt;T as anchor_lang::Owner&gt;::owner()</td></tr></table>>];
    bb1__0_2129 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_7 = &amp;_8<br/>_6 = &amp;_7<br/></td></tr><tr><td align="left">_4 = &lt;&amp;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _5, move _6)</td></tr></table>>];
    bb2__0_2129 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left">switchInt(move _4)</td></tr></table>>];
    bb3__0_2129 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = AccountOwnedByWrongProgram<br/>_19 = const true<br/></td></tr><tr><td align="left">_11 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _12)</td></tr></table>>];
    bb4__0_2129 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_18 = deref_copy ((*_2).3: &amp;anchor_lang::prelude::Pubkey)<br/>_14 = (*_18)<br/>StorageLive(_15)<br/></td></tr><tr><td align="left">_15 = &lt;T as anchor_lang::Owner&gt;::owner()</td></tr></table>>];
    bb5__0_2129 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">_13 = (move _14, move _15)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/>_19 = const false<br/></td></tr><tr><td align="left">_10 = anchor_lang::error::Error::with_pubkeys(move _11, move _13)</td></tr></table>>];
    bb6__0_2129 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>_19 = const false<br/>StorageDead(_11)<br/>_0 = std::result::Result::&lt;account_loader_trait::FatAccountLoader&lt;'_, T&gt;, anchor_lang::error::Error&gt;::Err(move _10)<br/>StorageDead(_10)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_2129 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>_3 = const ()<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_17 = &amp;(*_2)<br/></td></tr><tr><td align="left">_16 = account_loader_trait::FatAccountLoader::&lt;'_, T&gt;::new(move _17)</td></tr></table>>];
    bb8__0_2129 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>_0 = std::result::Result::&lt;account_loader_trait::FatAccountLoader&lt;'_, T&gt;, anchor_lang::error::Error&gt;::Ok(move _16)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_2129 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left">return</td></tr></table>>];
    bb10__0_2129 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">10 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb11__0_2129 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">11 (cleanup)</td></tr><tr><td align="left">drop(_11)</td></tr></table>>];
    bb12__0_2129 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">12 (cleanup)</td></tr><tr><td align="left">switchInt(_19)</td></tr></table>>];
    bb0__0_2129 -> bb1__0_2129 [label="return"];
    bb1__0_2129 -> bb2__0_2129 [label="return"];
    bb2__0_2129 -> bb7__0_2129 [label="0"];
    bb2__0_2129 -> bb3__0_2129 [label="otherwise"];
    bb3__0_2129 -> bb4__0_2129 [label="return"];
    bb4__0_2129 -> bb5__0_2129 [label="return"];
    bb4__0_2129 -> bb12__0_2129 [label="unwind"];
    bb5__0_2129 -> bb6__0_2129 [label="return"];
    bb5__0_2129 -> bb12__0_2129 [label="unwind"];
    bb6__0_2129 -> bb9__0_2129 [label=""];
    bb7__0_2129 -> bb8__0_2129 [label="return"];
    bb8__0_2129 -> bb9__0_2129 [label=""];
    bb11__0_2129 -> bb10__0_2129 [label="return"];
    bb12__0_2129 -> bb10__0_2129 [label="0"];
    bb12__0_2129 -> bb11__0_2129 [label="otherwise"];
}
