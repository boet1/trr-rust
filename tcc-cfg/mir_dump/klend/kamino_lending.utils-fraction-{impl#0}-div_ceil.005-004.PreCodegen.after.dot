digraph Mir_0_2392 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as utils::fraction::FractionExtra&gt;::div_ceil(_1: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, _2: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;) -&gt; fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;<br align="left"/>let _3: u128;<br align="left"/>let mut _4: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _5: u128;<br align="left"/>let mut _6: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _7: utils::fraction::uint_types::U256;<br align="left"/>let mut _8: utils::fraction::uint_types::U256;<br align="left"/>let mut _9: utils::fraction::uint_types::U256;<br align="left"/>let mut _10: utils::fraction::uint_types::U256;<br align="left"/>let mut _11: u128;<br align="left"/>let mut _12: utils::fraction::uint_types::U256;<br align="left"/>let mut _13: u128;<br align="left"/>let mut _14: u128;<br align="left"/>let mut _15: (u128, bool);<br align="left"/>let mut _16: u128;<br align="left"/>let _17: u128;<br align="left"/>let mut _18: std::result::Result&lt;u128, &amp;ReErased str&gt;;<br align="left"/>let mut _19: utils::fraction::uint_types::U256;<br align="left"/>let mut _20: &amp;ReErased str;<br align="left"/>let _21: &amp;ReErased str;<br align="left"/>let mut _22: u128;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug denum =&gt; _2;<br align="left"/>debug num_sf =&gt; _3;<br align="left"/>debug denum_sf =&gt; _5;<br align="left"/>debug res_sf_u256 =&gt; _7;<br align="left"/>debug res_sf =&gt; _17;<br align="left"/>>;
    bb0__0_2392 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>_4 = (*_1)<br/></td></tr><tr><td align="left">_3 = FixedU128::&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;::to_bits(move _4)</td></tr></table>>];
    bb1__0_2392 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = (*_2)<br/></td></tr><tr><td align="left">_5 = FixedU128::&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;::to_bits(move _6)</td></tr></table>>];
    bb2__0_2392 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = _3<br/></td></tr><tr><td align="left">_10 = &lt;uint_types::U256 as From&lt;u128&gt;&gt;::from(move _11)</td></tr></table>>];
    bb3__0_2392 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/></td></tr><tr><td align="left">_9 = &lt;uint_types::U256 as Shl&lt;u32&gt;&gt;::shl(move _10, const _)</td></tr></table>>];
    bb4__0_2392 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_14 = _5<br/>_15 = CheckedSub(_14, const 1_u128)<br/></td></tr><tr><td align="left">assert(!move (_15.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, move _14, const 1_u128)</td></tr></table>>];
    bb5__0_2392 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">_13 = move (_15.0: u128)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">_12 = &lt;uint_types::U256 as From&lt;u128&gt;&gt;::from(move _13)</td></tr></table>>];
    bb6__0_2392 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/></td></tr><tr><td align="left">_8 = &lt;uint_types::U256 as Add&gt;::add(move _9, move _12)</td></tr></table>>];
    bb7__0_2392 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_9)<br/>StorageLive(_16)<br/>_16 = _5<br/></td></tr><tr><td align="left">_7 = &lt;uint_types::U256 as std::ops::Div&lt;u128&gt;&gt;::div(move _8, move _16)</td></tr></table>>];
    bb8__0_2392 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_8)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_19 = _7<br/></td></tr><tr><td align="left">_18 = &lt;u128 as TryFrom&lt;uint_types::U256&gt;&gt;::try_from(move _19)</td></tr></table>>];
    bb9__0_2392 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_21 = const &quot;Overflow in div_ceil&quot;<br/>_20 = &amp;(*_21)<br/></td></tr><tr><td align="left">_17 = std::result::Result::&lt;u128, &amp;str&gt;::expect(move _18, move _20)</td></tr></table>>];
    bb10__0_2392 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_18)<br/>StorageDead(_21)<br/>StorageLive(_22)<br/>_22 = _17<br/></td></tr><tr><td align="left">_0 = FixedU128::&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;::from_bits(move _22)</td></tr></table>>];
    bb11__0_2392 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_17)<br/>StorageDead(_7)<br/>StorageDead(_5)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2392 -> bb1__0_2392 [label="return"];
    bb1__0_2392 -> bb2__0_2392 [label="return"];
    bb2__0_2392 -> bb3__0_2392 [label="return"];
    bb3__0_2392 -> bb4__0_2392 [label="return"];
    bb4__0_2392 -> bb5__0_2392 [label="success"];
    bb5__0_2392 -> bb6__0_2392 [label="return"];
    bb6__0_2392 -> bb7__0_2392 [label="return"];
    bb7__0_2392 -> bb8__0_2392 [label="return"];
    bb8__0_2392 -> bb9__0_2392 [label="return"];
    bb9__0_2392 -> bb10__0_2392 [label="return"];
    bb10__0_2392 -> bb11__0_2392 [label="return"];
}
