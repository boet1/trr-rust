// MIR for `borrow_rate_curve::<impl at programs\klend\src\utils\borrow_rate_curve.rs:141:1: 141:21>::get_borrow_rate::{closure#0}` after PreCodegen

fn borrow_rate_curve::<impl at programs\klend\src\utils\borrow_rate_curve.rs:141:1: 141:21>::get_borrow_rate::{closure#0}(_1: &mut {closure@programs\klend\src\utils\borrow_rate_curve.rs:297:18: 297:23}, _2: &[CurvePoint]) -> (&CurvePoint, &CurvePoint) {
    debug seg => _2;
    let mut _0: (&utils::borrow_rate_curve::CurvePoint, &utils::borrow_rate_curve::CurvePoint);
    let _3: &utils::borrow_rate_curve::CurvePoint;
    let _4: &utils::borrow_rate_curve::CurvePoint;
    let mut _5: &[utils::borrow_rate_curve::CurvePoint; 2];
    let mut _6: std::result::Result<&[utils::borrow_rate_curve::CurvePoint; 2], std::array::TryFromSliceError>;
    let mut _7: &[utils::borrow_rate_curve::CurvePoint];
    let mut _8: &utils::borrow_rate_curve::CurvePoint;
    let mut _9: &utils::borrow_rate_curve::CurvePoint;
    scope 1 {
        debug first => _3;
        debug second => _4;
    }

    bb0: {
        StorageLive(_5);
        StorageLive(_6);
        StorageLive(_7);
        _7 = &(*_2);
        _6 = <&[CurvePoint] as TryInto<&[CurvePoint; 2]>>::try_into(move _7) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_7);
        _5 = std::result::Result::<&[CurvePoint; 2], TryFromSliceError>::unwrap(move _6) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_6);
        StorageLive(_3);
        _3 = &(*_5)[0 of 2];
        StorageLive(_4);
        _4 = &(*_5)[1 of 2];
        StorageDead(_5);
        StorageLive(_8);
        _8 = _3;
        StorageLive(_9);
        _9 = _4;
        _0 = (move _8, move _9);
        StorageDead(_9);
        StorageDead(_8);
        StorageDead(_4);
        StorageDead(_3);
        return;
    }
}
