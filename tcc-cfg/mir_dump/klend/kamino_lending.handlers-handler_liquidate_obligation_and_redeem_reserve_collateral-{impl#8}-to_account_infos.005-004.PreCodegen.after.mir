// MIR for `handlers::handler_liquidate_obligation_and_redeem_reserve_collateral::<impl at programs\klend\src\handlers\handler_liquidate_obligation_and_redeem_reserve_collateral.rs:338:10: 338:18>::to_account_infos` after PreCodegen

fn handlers::handler_liquidate_obligation_and_redeem_reserve_collateral::<impl at programs\klend\src\handlers\handler_liquidate_obligation_and_redeem_reserve_collateral.rs:338:10: 338:18>::to_account_infos(_1: &handlers::handler_liquidate_obligation_and_redeem_reserve_collateral::LiquidateObligationAndRedeemReserveCollateralV2<'_>) -> Vec<anchor_lang::prelude::AccountInfo<'_>> {
    debug self => _1;
    let mut _0: std::vec::Vec<anchor_lang::prelude::AccountInfo<'_>>;
    let mut _2: std::vec::Vec<anchor_lang::prelude::AccountInfo<'_>>;
    let _3: ();
    let mut _4: &mut std::vec::Vec<anchor_lang::prelude::AccountInfo<'_>>;
    let mut _5: std::vec::Vec<anchor_lang::prelude::AccountInfo<'_>>;
    let mut _6: &handlers::handler_liquidate_obligation_and_redeem_reserve_collateral::LiquidateObligationAndRedeemReserveCollateral<'_>;
    let _7: ();
    let mut _8: &mut std::vec::Vec<anchor_lang::prelude::AccountInfo<'_>>;
    let mut _9: std::vec::Vec<anchor_lang::prelude::AccountInfo<'_>>;
    let mut _10: &handlers::handler_refresh_obligation_farms_for_reserve::OptionalObligationFarmsAccounts<'_>;
    let _11: ();
    let mut _12: &mut std::vec::Vec<anchor_lang::prelude::AccountInfo<'_>>;
    let mut _13: std::vec::Vec<anchor_lang::prelude::AccountInfo<'_>>;
    let mut _14: &handlers::handler_refresh_obligation_farms_for_reserve::OptionalObligationFarmsAccounts<'_>;
    let _15: ();
    let mut _16: &mut std::vec::Vec<anchor_lang::prelude::AccountInfo<'_>>;
    let mut _17: std::vec::Vec<anchor_lang::prelude::AccountInfo<'_>>;
    let mut _18: &anchor_lang::prelude::Program<'_, farms::program::Farms>;
    scope 1 {
        debug account_infos => _2;
    }

    bb0: {
        StorageLive(_2);
        _2 = Vec::<anchor_lang::prelude::AccountInfo<'_>>::new() -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageLive(_3);
        StorageLive(_4);
        _4 = &mut _2;
        StorageLive(_5);
        StorageLive(_6);
        _6 = &((*_1).0: handlers::handler_liquidate_obligation_and_redeem_reserve_collateral::LiquidateObligationAndRedeemReserveCollateral<'_>);
        _5 = <handlers::handler_liquidate_obligation_and_redeem_reserve_collateral::LiquidateObligationAndRedeemReserveCollateral<'_> as anchor_lang::ToAccountInfos<'_>>::to_account_infos(move _6) -> [return: bb2, unwind: bb10];
    }

    bb2: {
        StorageDead(_6);
        _3 = <Vec<anchor_lang::prelude::AccountInfo<'_>> as Extend<anchor_lang::prelude::AccountInfo<'_>>>::extend::<Vec<anchor_lang::prelude::AccountInfo<'_>>>(move _4, move _5) -> [return: bb3, unwind: bb10];
    }

    bb3: {
        StorageDead(_5);
        StorageDead(_4);
        StorageDead(_3);
        StorageLive(_7);
        StorageLive(_8);
        _8 = &mut _2;
        StorageLive(_9);
        StorageLive(_10);
        _10 = &((*_1).1: handlers::handler_refresh_obligation_farms_for_reserve::OptionalObligationFarmsAccounts<'_>);
        _9 = <handlers::handler_refresh_obligation_farms_for_reserve::OptionalObligationFarmsAccounts<'_> as anchor_lang::ToAccountInfos<'_>>::to_account_infos(move _10) -> [return: bb4, unwind: bb10];
    }

    bb4: {
        StorageDead(_10);
        _7 = <Vec<anchor_lang::prelude::AccountInfo<'_>> as Extend<anchor_lang::prelude::AccountInfo<'_>>>::extend::<Vec<anchor_lang::prelude::AccountInfo<'_>>>(move _8, move _9) -> [return: bb5, unwind: bb10];
    }

    bb5: {
        StorageDead(_9);
        StorageDead(_8);
        StorageDead(_7);
        StorageLive(_11);
        StorageLive(_12);
        _12 = &mut _2;
        StorageLive(_13);
        StorageLive(_14);
        _14 = &((*_1).2: handlers::handler_refresh_obligation_farms_for_reserve::OptionalObligationFarmsAccounts<'_>);
        _13 = <handlers::handler_refresh_obligation_farms_for_reserve::OptionalObligationFarmsAccounts<'_> as anchor_lang::ToAccountInfos<'_>>::to_account_infos(move _14) -> [return: bb6, unwind: bb10];
    }

    bb6: {
        StorageDead(_14);
        _11 = <Vec<anchor_lang::prelude::AccountInfo<'_>> as Extend<anchor_lang::prelude::AccountInfo<'_>>>::extend::<Vec<anchor_lang::prelude::AccountInfo<'_>>>(move _12, move _13) -> [return: bb7, unwind: bb10];
    }

    bb7: {
        StorageDead(_13);
        StorageDead(_12);
        StorageDead(_11);
        StorageLive(_15);
        StorageLive(_16);
        _16 = &mut _2;
        StorageLive(_17);
        StorageLive(_18);
        _18 = &((*_1).3: anchor_lang::prelude::Program<'_, farms::program::Farms>);
        _17 = <anchor_lang::prelude::Program<'_, Farms> as anchor_lang::ToAccountInfos<'_>>::to_account_infos(move _18) -> [return: bb8, unwind: bb10];
    }

    bb8: {
        StorageDead(_18);
        _15 = <Vec<anchor_lang::prelude::AccountInfo<'_>> as Extend<anchor_lang::prelude::AccountInfo<'_>>>::extend::<Vec<anchor_lang::prelude::AccountInfo<'_>>>(move _16, move _17) -> [return: bb9, unwind: bb10];
    }

    bb9: {
        StorageDead(_17);
        StorageDead(_16);
        StorageDead(_15);
        _0 = move _2;
        StorageDead(_2);
        return;
    }

    bb10 (cleanup): {
        drop(_2) -> [return: bb11, unwind terminate(cleanup)];
    }

    bb11 (cleanup): {
        resume;
    }
}
