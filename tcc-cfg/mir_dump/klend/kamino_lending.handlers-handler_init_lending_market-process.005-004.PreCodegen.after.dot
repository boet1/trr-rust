digraph Mir_0_264 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn handlers::handler_init_lending_market::process(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, handlers::handler_init_lending_market::InitLendingMarket&lt;ReErased&gt;&gt;, _2: [u8; 32_usize]) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _3: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _4: std::cell::RefMut&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _5: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::RefMut&lt;ReErased, state::lending_market::LendingMarket&gt;&gt;;<br align="left"/>let mut _6: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::lending_market::LendingMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _7: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _8: isize;<br align="left"/>let _9: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _10: !;<br align="left"/>let mut _11: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _12: std::cell::RefMut&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let _13: ();<br align="left"/>let mut _14: &amp;ReErased mut state::lending_market::LendingMarket;<br align="left"/>let mut _15: &amp;ReErased mut state::lending_market::LendingMarket;<br align="left"/>let mut _16: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _17: state::lending_market::InitLendingMarketParams;<br align="left"/>let mut _18: [u8; 32_usize];<br align="left"/>let mut _19: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _20: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _21: u8;<br align="left"/>let mut _22: ();<br align="left"/>let mut _23: &amp;ReErased mut handlers::handler_init_lending_market::InitLendingMarket&lt;ReErased&gt;;<br align="left"/>let mut _24: &amp;ReErased mut handlers::handler_init_lending_market::InitLendingMarket&lt;ReErased&gt;;<br align="left"/>let mut _25: isize;<br align="left"/>let mut _26: isize;<br align="left"/>let mut _27: isize;<br align="left"/>let mut _28: isize;<br align="left"/>let mut _29: isize;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug quote_currency =&gt; _2;<br align="left"/>debug lending_market =&gt; _3;<br align="left"/>debug residual =&gt; _9;<br align="left"/>debug val =&gt; _12;<br align="left"/>>;
    bb0__0_264 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_23 = deref_copy (_1.1: &amp;mut handlers::handler_init_lending_market::InitLendingMarket&lt;'_&gt;)<br/>_7 = &amp;((*_23).1: anchor_lang::prelude::AccountLoader&lt;'_, state::lending_market::LendingMarket&gt;)<br/></td></tr><tr><td align="left">_6 = anchor_lang::prelude::AccountLoader::&lt;'_, state::lending_market::LendingMarket&gt;::load_init(move _7)</td></tr></table>>];
    bb1__0_264 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/></td></tr><tr><td align="left">_5 = &lt;std::result::Result&lt;RefMut&lt;'_, state::lending_market::LendingMarket&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _6)</td></tr></table>>];
    bb2__0_264 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_8 = discriminant(_5)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb3__0_264 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = move ((_5 as Continue).0: std::cell::RefMut&lt;'_, state::lending_market::LendingMarket&gt;)<br/>_4 = move _12<br/>StorageDead(_12)<br/>_3 = &amp;mut _4<br/>_25 = discriminant(_5)<br/>StorageDead(_5)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_16 = &amp;mut (*_3)<br/></td></tr><tr><td align="left">_15 = &lt;RefMut&lt;'_, state::lending_market::LendingMarket&gt; as DerefMut&gt;::deref_mut(move _16)</td></tr></table>>];
    bb4__0_264 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_264 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>_9 = move ((_5 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_11)<br/>_11 = move _9<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _11)</td></tr></table>>];
    bb6__0_264 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_9)<br/>_27 = discriminant(_5)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_264 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">_14 = &amp;mut (*_15)<br/>StorageDead(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = _2<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_24 = deref_copy (_1.1: &amp;mut handlers::handler_init_lending_market::InitLendingMarket&lt;'_&gt;)<br/>_20 = &amp;((*_24).0: anchor_lang::prelude::Signer&lt;'_&gt;)<br/></td></tr><tr><td align="left">_19 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::Key&gt;::key(move _20)</td></tr></table>>];
    bb8__0_264 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageLive(_21)<br/>_21 = ((_1.3: handlers::handler_init_lending_market::InitLendingMarketBumps).0: u8)<br/>_17 = state::lending_market::InitLendingMarketParams { bump_seed: move _21, lending_market_owner: move _19, quote_currency: move _18 }<br/>StorageDead(_21)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">_13 = state::lending_market::LendingMarket::init(move _14, move _17)</td></tr></table>>];
    bb9__0_264 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_14)<br/>StorageDead(_15)<br/>StorageDead(_13)<br/>StorageLive(_22)<br/>_22 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _22)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">drop(_4)</td></tr></table>>];
    bb10__0_264 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb11__0_264 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left">return</td></tr></table>>];
    bb12__0_264 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">12 (cleanup)</td></tr><tr><td align="left">drop(_4)</td></tr></table>>];
    bb13__0_264 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">13 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb14__0_264 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">14 (cleanup)</td></tr><tr><td align="left" balign="left">_29 = discriminant(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_264 -> bb1__0_264 [label="return"];
    bb1__0_264 -> bb2__0_264 [label="return"];
    bb1__0_264 -> bb13__0_264 [label="unwind"];
    bb2__0_264 -> bb3__0_264 [label="0"];
    bb2__0_264 -> bb5__0_264 [label="1"];
    bb2__0_264 -> bb4__0_264 [label="otherwise"];
    bb3__0_264 -> bb7__0_264 [label="return"];
    bb3__0_264 -> bb12__0_264 [label="unwind"];
    bb5__0_264 -> bb6__0_264 [label="return"];
    bb5__0_264 -> bb14__0_264 [label="unwind"];
    bb6__0_264 -> bb11__0_264 [label=""];
    bb7__0_264 -> bb8__0_264 [label="return"];
    bb7__0_264 -> bb12__0_264 [label="unwind"];
    bb8__0_264 -> bb9__0_264 [label="return"];
    bb8__0_264 -> bb12__0_264 [label="unwind"];
    bb9__0_264 -> bb10__0_264 [label="return"];
    bb9__0_264 -> bb13__0_264 [label="unwind"];
    bb10__0_264 -> bb11__0_264 [label=""];
    bb12__0_264 -> bb13__0_264 [label="return"];
    bb14__0_264 -> bb13__0_264 [label=""];
}
