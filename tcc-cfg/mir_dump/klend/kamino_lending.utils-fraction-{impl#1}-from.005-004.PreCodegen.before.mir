// MIR for `utils::fraction::<impl at programs\klend\src\utils\fraction.rs:213:1: 215:23>::from` before PreCodegen

fn utils::fraction::<impl at programs\klend\src\utils\fraction.rs:213:1: 215:23>::from(_1: T) -> utils::fraction::BigFraction {
    debug fraction => _1;
    let mut _0: utils::fraction::BigFraction;
    let _2: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _3: T;
    let mut _5: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _6: utils::fraction::uint_types::U256;
    let mut _7: u128;
    scope 1 {
        debug fraction => _2;
        let _4: u128;
        scope 2 {
            debug repr_fraction => _4;
        }
    }

    bb0: {
        StorageLive(_2);
        StorageLive(_3);
        _3 = move _1;
        _2 = <T as Into<FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>>>::into(move _3) -> [return: bb1, unwind: bb4];
    }

    bb1: {
        StorageDead(_3);
        StorageLive(_4);
        StorageLive(_5);
        _5 = _2;
        _4 = FixedU128::<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>::to_bits(move _5) -> [return: bb2, unwind: bb4];
    }

    bb2: {
        StorageDead(_5);
        StorageLive(_6);
        StorageLive(_7);
        _7 = _4;
        _6 = <uint_types::U256 as From<u128>>::from(move _7) -> [return: bb3, unwind: bb4];
    }

    bb3: {
        StorageDead(_7);
        _0 = utils::fraction::BigFraction(move _6);
        StorageDead(_6);
        StorageDead(_4);
        StorageDead(_2);
        return;
    }

    bb4 (cleanup): {
        resume;
    }
}
