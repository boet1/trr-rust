digraph Mir_0_2531 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn get_validated_price(_1: utils::prices::types::TimestampedPriceWithTwap, _2: &amp;ReErased state::token_info::TokenInfo, _3: i64) -&gt; std::option::Option&lt;utils::prices::GetPriceResult&gt;<br align="left"/>let _4: u64;<br align="left"/>let mut _5: std::result::Result&lt;u64, std::num::TryFromIntError&gt;;<br align="left"/>let mut _6: i64;<br align="left"/>let _7: utils::prices::types::TimestampedPrice;<br align="left"/>let _8: std::option::Option&lt;utils::prices::types::TimestampedPrice&gt;;<br align="left"/>let mut _9: state::last_update::PriceStatusFlags;<br align="left"/>let _10: &amp;ReErased str;<br align="left"/>let mut _11: &amp;ReErased state::token_info::TokenInfo;<br align="left"/>let _12: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _13: std::result::Result&lt;fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _14: std::boxed::Box&lt;dyn [Binder(Trait(std::ops::FnOnce&lt;()&gt;), []), Binder(Projection(ExistentialProjection { def_id: DefId(2:3085 ~ core[c321]::ops::function::FnOnce::Output), args: [()], term: Term::Ty(std::result::Result&lt;fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, anchor_lang::error::Error&gt;) }), [])] + ReErased, std::alloc::Global&gt;;<br align="left"/>let mut _15: ();<br align="left"/>let mut _16: isize;<br align="left"/>let _17: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _18: ();<br align="left"/>let mut _19: &amp;ReErased mut state::last_update::PriceStatusFlags;<br align="left"/>let _20: anchor_lang::error::Error;<br align="left"/>let mut _21: !;<br align="left"/>let _22: ();<br align="left"/>let mut _23: &amp;ReErased str;<br align="left"/>let _24: &amp;ReErased str;<br align="left"/>let mut _25: &amp;ReErased std::string::String;<br align="left"/>let _26: &amp;ReErased std::string::String;<br align="left"/>let _27: std::string::String;<br align="left"/>let _28: std::string::String;<br align="left"/>let mut _29: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _30: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _31: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _32: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _33: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _34: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _35: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _36: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _37: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _38: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _39: &amp;ReErased &amp;ReErased str;<br align="left"/>let _40: &amp;ReErased &amp;ReErased str;<br align="left"/>let mut _41: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _42: &amp;ReErased anchor_lang::error::Error;<br align="left"/>let _43: &amp;ReErased anchor_lang::error::Error;<br align="left"/>let _44: ();<br align="left"/>let mut _45: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _46: u64;<br align="left"/>let mut _47: u64;<br align="left"/>let mut _48: u64;<br align="left"/>let mut _49: isize;<br align="left"/>let mut _50: &amp;ReErased mut state::last_update::PriceStatusFlags;<br align="left"/>let _51: anchor_lang::error::Error;<br align="left"/>let _52: ();<br align="left"/>let _53: ();<br align="left"/>let mut _54: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _55: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _56: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _57: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _58: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _59: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _60: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _61: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _62: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _63: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _64: &amp;ReErased &amp;ReErased str;<br align="left"/>let _65: &amp;ReErased &amp;ReErased str;<br align="left"/>let mut _66: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _67: &amp;ReErased anchor_lang::error::Error;<br align="left"/>let _68: &amp;ReErased anchor_lang::error::Error;<br align="left"/>let _69: ();<br align="left"/>let mut _70: bool;<br align="left"/>let mut _71: &amp;ReErased state::token_info::TokenInfo;<br align="left"/>let mut _72: isize;<br align="left"/>let _73: utils::prices::types::TimestampedPrice;<br align="left"/>let _74: ();<br align="left"/>let mut _75: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _76: u64;<br align="left"/>let mut _77: u64;<br align="left"/>let mut _78: u64;<br align="left"/>let mut _79: isize;<br align="left"/>let mut _80: &amp;ReErased mut state::last_update::PriceStatusFlags;<br align="left"/>let _81: anchor_lang::error::Error;<br align="left"/>let _82: ();<br align="left"/>let mut _83: &amp;ReErased str;<br align="left"/>let _84: &amp;ReErased str;<br align="left"/>let mut _85: &amp;ReErased std::string::String;<br align="left"/>let _86: &amp;ReErased std::string::String;<br align="left"/>let _87: std::string::String;<br align="left"/>let _88: std::string::String;<br align="left"/>let mut _89: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _90: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _91: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _92: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _93: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _94: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _95: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _96: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _97: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _98: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _99: &amp;ReErased &amp;ReErased str;<br align="left"/>let _100: &amp;ReErased &amp;ReErased str;<br align="left"/>let mut _101: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _102: &amp;ReErased anchor_lang::error::Error;<br align="left"/>let _103: &amp;ReErased anchor_lang::error::Error;<br align="left"/>let mut _104: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _105: std::result::Result&lt;fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _106: std::boxed::Box&lt;dyn [Binder(Trait(std::ops::FnOnce&lt;()&gt;), []), Binder(Projection(ExistentialProjection { def_id: DefId(2:3085 ~ core[c321]::ops::function::FnOnce::Output), args: [()], term: Term::Ty(std::result::Result&lt;fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, anchor_lang::error::Error&gt;) }), [])] + ReErased, std::alloc::Global&gt;;<br align="left"/>let mut _107: ();<br align="left"/>let mut _108: Closure(DefId(0:2532 ~ kamino_lending[6389]::utils::prices::checks::get_validated_price::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;,)) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;, []), (&amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, &amp;ReErased state::token_info::TokenInfo)]);<br align="left"/>let mut _109: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _110: &amp;ReErased state::token_info::TokenInfo;<br align="left"/>let mut _111: isize;<br align="left"/>let _112: ();<br align="left"/>let mut _113: &amp;ReErased mut state::last_update::PriceStatusFlags;<br align="left"/>let _114: anchor_lang::error::Error;<br align="left"/>let _115: ();<br align="left"/>let mut _116: &amp;ReErased str;<br align="left"/>let _117: &amp;ReErased str;<br align="left"/>let mut _118: &amp;ReErased std::string::String;<br align="left"/>let _119: &amp;ReErased std::string::String;<br align="left"/>let _120: std::string::String;<br align="left"/>let _121: std::string::String;<br align="left"/>let mut _122: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _123: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _124: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _125: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _126: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _127: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _128: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _129: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _130: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _131: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _132: &amp;ReErased &amp;ReErased str;<br align="left"/>let _133: &amp;ReErased &amp;ReErased str;<br align="left"/>let mut _134: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _135: &amp;ReErased anchor_lang::error::Error;<br align="left"/>let _136: &amp;ReErased anchor_lang::error::Error;<br align="left"/>let _137: ();<br align="left"/>let mut _138: &amp;ReErased str;<br align="left"/>let _139: &amp;ReErased str;<br align="left"/>let mut _140: &amp;ReErased std::string::String;<br align="left"/>let _141: &amp;ReErased std::string::String;<br align="left"/>let _142: std::string::String;<br align="left"/>let _143: std::string::String;<br align="left"/>let mut _144: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _145: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _146: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _147: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _148: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _149: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _150: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _151: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _152: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _153: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _154: &amp;ReErased &amp;ReErased str;<br align="left"/>let _155: &amp;ReErased &amp;ReErased str;<br align="left"/>let _156: ();<br align="left"/>let mut _157: &amp;ReErased mut state::last_update::PriceStatusFlags;<br align="left"/>let _158: ();<br align="left"/>let mut _159: &amp;ReErased mut state::last_update::PriceStatusFlags;<br align="left"/>let _160: ();<br align="left"/>let mut _161: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _162: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _163: &amp;ReErased state::token_info::PriceHeuristic;<br align="left"/>let _164: &amp;ReErased state::token_info::PriceHeuristic;<br align="left"/>let mut _165: isize;<br align="left"/>let mut _166: &amp;ReErased mut state::last_update::PriceStatusFlags;<br align="left"/>let _167: anchor_lang::error::Error;<br align="left"/>let mut _168: &amp;ReErased str;<br align="left"/>let _169: &amp;ReErased str;<br align="left"/>let mut _170: &amp;ReErased std::string::String;<br align="left"/>let _171: &amp;ReErased std::string::String;<br align="left"/>let _172: std::string::String;<br align="left"/>let _173: std::string::String;<br align="left"/>let mut _174: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _175: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _176: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _177: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _178: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _179: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _180: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _181: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _182: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _183: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _184: &amp;ReErased &amp;ReErased str;<br align="left"/>let _185: &amp;ReErased &amp;ReErased str;<br align="left"/>let mut _186: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _187: &amp;ReErased anchor_lang::error::Error;<br align="left"/>let _188: &amp;ReErased anchor_lang::error::Error;<br align="left"/>let _189: ();<br align="left"/>let mut _190: bool;<br align="left"/>let mut _191: u8;<br align="left"/>let _192: ();<br align="left"/>let mut _193: &amp;ReErased mut state::last_update::PriceStatusFlags;<br align="left"/>let mut _194: utils::prices::GetPriceResult;<br align="left"/>let mut _195: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _196: u64;<br align="left"/>let mut _197: state::last_update::PriceStatusFlags;<br align="left"/>let mut _198: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _199: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _200: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _201: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _202: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _203: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _204: bool;<br align="left"/>let mut _205: bool;<br align="left"/>let mut _206: bool;<br align="left"/>let mut _207: bool;<br align="left"/>let mut _208: bool;<br align="left"/>let mut _209: bool;<br align="left"/>let mut _210: bool;<br align="left"/>let mut _211: bool;<br align="left"/>let mut _212: bool;<br align="left"/>let mut _213: bool;<br align="left"/>let mut _214: isize;<br align="left"/>let mut _215: isize;<br align="left"/>let mut _216: isize;<br align="left"/>let mut _217: isize;<br align="left"/>let mut _218: isize;<br align="left"/>let mut _219: isize;<br align="left"/>let mut _220: isize;<br align="left"/>let mut _221: isize;<br align="left"/>let mut _222: isize;<br align="left"/>let mut _223: isize;<br align="left"/>let mut _224: isize;<br align="left"/>let mut _225: isize;<br align="left"/>let mut _226: isize;<br align="left"/>let mut _227: isize;<br align="left"/>let mut _228: isize;<br align="left"/>let mut _229: isize;<br align="left"/>let mut _230: isize;<br align="left"/>let mut _231: isize;<br align="left"/>let mut _232: isize;<br align="left"/>let mut _233: isize;<br align="left"/>debug price_and_twap =&gt; _1;<br align="left"/>debug token_info =&gt; _2;<br align="left"/>debug unix_timestamp =&gt; _3;<br align="left"/>debug unix_timestamp =&gt; _4;<br align="left"/>debug price =&gt; _7;<br align="left"/>debug twap =&gt; _8;<br align="left"/>debug price_status =&gt; _9;<br align="left"/>debug price_label =&gt; _10;<br align="left"/>debug price_dec =&gt; _12;<br align="left"/>debug price_dec =&gt; _17;<br align="left"/>debug e =&gt; _20;<br align="left"/>debug res =&gt; _28;<br align="left"/>debug e =&gt; _51;<br align="left"/>debug twap =&gt; _73;<br align="left"/>debug e =&gt; _81;<br align="left"/>debug res =&gt; _88;<br align="left"/>debug e =&gt; _114;<br align="left"/>debug res =&gt; _121;<br align="left"/>debug res =&gt; _143;<br align="left"/>debug e =&gt; _167;<br align="left"/>debug res =&gt; _173;<br align="left"/>>;
    bb0__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_213 = const false<br/>_212 = const false<br/>_211 = const false<br/>_210 = const false<br/>_204 = const false<br/>_208 = const false<br/>_205 = const false<br/>_209 = const false<br/>_206 = const false<br/>_207 = const false<br/>_212 = const true<br/>_213 = const true<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = _3<br/></td></tr><tr><td align="left">_5 = &lt;u64 as TryFrom&lt;i64&gt;&gt;::try_from(move _6)</td></tr></table>>];
    bb1__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = std::result::Result::&lt;u64, TryFromIntError&gt;::unwrap(move _5)</td></tr></table>>];
    bb2__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageLive(_7)<br/>_213 = const false<br/>_211 = const true<br/>_7 = move (_1.0: utils::prices::types::TimestampedPrice)<br/>StorageLive(_8)<br/>_212 = const false<br/>_208 = const true<br/>_8 = move (_1.1: std::option::Option&lt;utils::prices::types::TimestampedPrice&gt;)<br/>StorageLive(_9)<br/></td></tr><tr><td align="left">_9 = last_update::_::&lt;impl last_update::PriceStatusFlags&gt;::empty()</td></tr></table>>];
    bb3__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = &amp;(*_2)<br/></td></tr><tr><td align="left">_10 = token_info::TokenInfo::symbol(move _11)</td></tr></table>>];
    bb4__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_211 = const false<br/>_14 = move (_7.0: std::boxed::Box&lt;dyn std::ops::FnOnce() -&gt; std::result::Result&lt;fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, anchor_lang::error::Error&gt;&gt;)<br/>StorageLive(_15)<br/>_15 = ()<br/></td></tr><tr><td align="left">_13 = &lt;Box&lt;dyn FnOnce() -&gt; std::result::Result&lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, anchor_lang::error::Error&gt;&gt; as FnOnce&lt;()&gt;&gt;::call_once(move _14, move _15)</td></tr></table>>];
    bb5__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">_210 = const true<br/>StorageDead(_15)<br/>StorageDead(_14)<br/>_16 = discriminant(_13)<br/></td></tr><tr><td align="left">switchInt(move _16)</td></tr></table>>];
    bb6__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_20)<br/>_20 = move ((_13 as Err).0: anchor_lang::error::Error)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>_198 = const _<br/>_32 = &amp;(*_198)<br/>_31 = &amp;(*_32)<br/>_30 = move _31 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_31)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_40 = &amp;_10<br/>_39 = &amp;(*_40)<br/></td></tr><tr><td align="left">_38 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;&amp;str&gt;(move _39)</td></tr></table>>];
    bb7__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb8__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>_17 = ((_13 as Ok).0: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_19 = &amp;mut _9<br/></td></tr><tr><td align="left">_18 = last_update::_::&lt;impl last_update::PriceStatusFlags&gt;::set(move _19, const _, const true)</td></tr></table>>];
    bb9__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_18)<br/>_12 = _17<br/>StorageDead(_17)<br/>_214 = discriminant(_13)<br/>_210 = const false<br/>StorageDead(_13)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>_46 = (_7.1: u64)<br/>StorageLive(_47)<br/>_47 = ((*_2).3: u64)<br/>StorageLive(_48)<br/>_48 = _4<br/></td></tr><tr><td align="left">_45 = check_price_age(move _46, move _47, move _48)</td></tr></table>>];
    bb10__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>_43 = &amp;_20<br/>_42 = &amp;(*_43)<br/></td></tr><tr><td align="left">_41 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;anchor_lang::error::Error&gt;(move _42)</td></tr></table>>];
    bb11__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>_37 = [move _38, move _41]<br/>StorageDead(_41)<br/>StorageDead(_38)<br/>_36 = &amp;_37<br/>_35 = &amp;(*_36)<br/>_34 = move _35 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">_29 = Arguments::&lt;'_&gt;::new_v1(move _30, move _34)</td></tr></table>>];
    bb12__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">_28 = format(move _29)</td></tr></table>>];
    bb13__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_43)<br/>StorageDead(_40)<br/>StorageDead(_37)<br/>StorageDead(_36)<br/>StorageDead(_32)<br/>_27 = move _28<br/>StorageDead(_28)<br/>_26 = &amp;_27<br/>_25 = &amp;(*_26)<br/></td></tr><tr><td align="left">_24 = &lt;std::string::String as Deref&gt;::deref(move _25)</td></tr></table>>];
    bb14__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">_23 = &amp;(*_24)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">_22 = solana_program::log::sol_log(move _23)</td></tr></table>>];
    bb15__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/></td></tr><tr><td align="left">drop(_27)</td></tr></table>>];
    bb16__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_26)<br/>StorageDead(_24)<br/>StorageDead(_22)<br/>_0 = std::option::Option::&lt;prices::GetPriceResult&gt;::None<br/></td></tr><tr><td align="left">drop(_20)</td></tr></table>>];
    bb17__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">_204 = const true<br/>StorageDead(_48)<br/>StorageDead(_47)<br/>StorageDead(_46)<br/>_49 = discriminant(_45)<br/></td></tr><tr><td align="left">switchInt(move _49)</td></tr></table>>];
    bb18__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_51)<br/>_51 = move ((_45 as Err).0: anchor_lang::error::Error)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>_203 = const _<br/>_57 = &amp;(*_203)<br/>_56 = &amp;(*_57)<br/>_55 = move _56 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_56)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>_65 = &amp;_10<br/>_64 = &amp;(*_65)<br/></td></tr><tr><td align="left">_63 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;&amp;str&gt;(move _64)</td></tr></table>>];
    bb19__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_50)<br/>_50 = &amp;mut _9<br/></td></tr><tr><td align="left">_44 = last_update::_::&lt;impl last_update::PriceStatusFlags&gt;::set(move _50, const _, const true)</td></tr></table>>];
    bb20__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>_68 = &amp;_51<br/>_67 = &amp;(*_68)<br/></td></tr><tr><td align="left">_66 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;anchor_lang::error::Error&gt;(move _67)</td></tr></table>>];
    bb22__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>_62 = [move _63, move _66]<br/>StorageDead(_66)<br/>StorageDead(_63)<br/>_61 = &amp;_62<br/>_60 = &amp;(*_61)<br/>_59 = move _60 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">_54 = Arguments::&lt;'_&gt;::new_v1(move _55, move _59)</td></tr></table>>];
    bb23__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">_53 = _print(move _54)</td></tr></table>>];
    bb24__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_68)<br/>StorageDead(_65)<br/>StorageDead(_62)<br/>StorageDead(_61)<br/>StorageDead(_57)<br/>StorageDead(_53)<br/>_52 = const ()<br/>StorageDead(_52)<br/>_44 = const ()<br/></td></tr><tr><td align="left">drop(_51)</td></tr></table>>];
    bb25__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left">switchInt(move _70)</td></tr></table>>];
    bb27__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>_72 = discriminant(_8)<br/></td></tr><tr><td align="left">switchInt(move _72)</td></tr></table>>];
    bb28__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_73)<br/>_208 = const false<br/>_209 = const true<br/>_73 = move ((_8 as Some).0: utils::prices::types::TimestampedPrice)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>_76 = (_73.1: u64)<br/>StorageLive(_77)<br/>_77 = ((*_2).4: u64)<br/>StorageLive(_78)<br/>_78 = _4<br/></td></tr><tr><td align="left">_75 = check_price_age(move _76, move _77, move _78)</td></tr></table>>];
    bb29__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">_205 = const true<br/>StorageDead(_78)<br/>StorageDead(_77)<br/>StorageDead(_76)<br/>_79 = discriminant(_75)<br/></td></tr><tr><td align="left">switchInt(move _79)</td></tr></table>>];
    bb30__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_81)<br/>_81 = move ((_75 as Err).0: anchor_lang::error::Error)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>_202 = const _<br/>_92 = &amp;(*_202)<br/>_91 = &amp;(*_92)<br/>_90 = move _91 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_91)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>_100 = &amp;_10<br/>_99 = &amp;(*_100)<br/></td></tr><tr><td align="left">_98 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;&amp;str&gt;(move _99)</td></tr></table>>];
    bb31__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_80)<br/>_80 = &amp;mut _9<br/></td></tr><tr><td align="left">_74 = last_update::_::&lt;impl last_update::PriceStatusFlags&gt;::set(move _80, const _, const true)</td></tr></table>>];
    bb32__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>_103 = &amp;_81<br/>_102 = &amp;(*_103)<br/></td></tr><tr><td align="left">_101 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;anchor_lang::error::Error&gt;(move _102)</td></tr></table>>];
    bb34__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>_97 = [move _98, move _101]<br/>StorageDead(_101)<br/>StorageDead(_98)<br/>_96 = &amp;_97<br/>_95 = &amp;(*_96)<br/>_94 = move _95 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_95)<br/></td></tr><tr><td align="left">_89 = Arguments::&lt;'_&gt;::new_v1(move _90, move _94)</td></tr></table>>];
    bb35__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/>StorageDead(_90)<br/></td></tr><tr><td align="left">_88 = format(move _89)</td></tr></table>>];
    bb36__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>StorageDead(_103)<br/>StorageDead(_100)<br/>StorageDead(_97)<br/>StorageDead(_96)<br/>StorageDead(_92)<br/>_87 = move _88<br/>StorageDead(_88)<br/>_86 = &amp;_87<br/>_85 = &amp;(*_86)<br/></td></tr><tr><td align="left">_84 = &lt;std::string::String as Deref&gt;::deref(move _85)</td></tr></table>>];
    bb37__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">_83 = &amp;(*_84)<br/>StorageDead(_85)<br/></td></tr><tr><td align="left">_82 = solana_program::log::sol_log(move _83)</td></tr></table>>];
    bb38__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/></td></tr><tr><td align="left">drop(_87)</td></tr></table>>];
    bb39__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>StorageDead(_86)<br/>StorageDead(_84)<br/>StorageDead(_82)<br/>_74 = const ()<br/></td></tr><tr><td align="left">drop(_81)</td></tr></table>>];
    bb40__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>StorageDead(_106)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>_109 = &amp;_12<br/>StorageLive(_110)<br/>_110 = &amp;(*_2)<br/>_108 = {closure@programs\klend\src\utils\prices\checks.rs:64:27: 64:37} { price_dec: move _109, token_info: move _110 }<br/>StorageDead(_110)<br/>StorageDead(_109)<br/></td></tr><tr><td align="left">_104 = std::result::Result::&lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, anchor_lang::error::Error&gt;::and_then::&lt;(), {closure@programs\klend\src\utils\prices\checks.rs:64:27: 64:37}&gt;(move _105, move _108)</td></tr></table>>];
    bb42__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">_206 = const true<br/>StorageDead(_108)<br/>StorageDead(_105)<br/>_111 = discriminant(_104)<br/></td></tr><tr><td align="left">switchInt(move _111)</td></tr></table>>];
    bb43__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageLive(_114)<br/>_114 = move ((_104 as Err).0: anchor_lang::error::Error)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>_201 = const _<br/>_125 = &amp;(*_201)<br/>_124 = &amp;(*_125)<br/>_123 = move _124 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_124)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>_133 = &amp;_10<br/>_132 = &amp;(*_133)<br/></td></tr><tr><td align="left">_131 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;&amp;str&gt;(move _132)</td></tr></table>>];
    bb44__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_112)<br/>StorageLive(_113)<br/>_113 = &amp;mut _9<br/></td></tr><tr><td align="left">_112 = last_update::_::&lt;impl last_update::PriceStatusFlags&gt;::set(move _113, const _, const true)</td></tr></table>>];
    bb45__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_113)<br/>StorageDead(_112)<br/>_69 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_132)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>_136 = &amp;_114<br/>_135 = &amp;(*_136)<br/></td></tr><tr><td align="left">_134 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;anchor_lang::error::Error&gt;(move _135)</td></tr></table>>];
    bb47__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_135)<br/>_130 = [move _131, move _134]<br/>StorageDead(_134)<br/>StorageDead(_131)<br/>_129 = &amp;_130<br/>_128 = &amp;(*_129)<br/>_127 = move _128 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_128)<br/></td></tr><tr><td align="left">_122 = Arguments::&lt;'_&gt;::new_v1(move _123, move _127)</td></tr></table>>];
    bb48__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/>StorageDead(_123)<br/></td></tr><tr><td align="left">_121 = format(move _122)</td></tr></table>>];
    bb49__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/>StorageDead(_136)<br/>StorageDead(_133)<br/>StorageDead(_130)<br/>StorageDead(_129)<br/>StorageDead(_125)<br/>_120 = move _121<br/>StorageDead(_121)<br/>_119 = &amp;_120<br/>_118 = &amp;(*_119)<br/></td></tr><tr><td align="left">_117 = &lt;std::string::String as Deref&gt;::deref(move _118)</td></tr></table>>];
    bb50__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">_116 = &amp;(*_117)<br/>StorageDead(_118)<br/></td></tr><tr><td align="left">_115 = solana_program::log::sol_log(move _116)</td></tr></table>>];
    bb51__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_116)<br/></td></tr><tr><td align="left">drop(_120)</td></tr></table>>];
    bb52__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/>StorageDead(_119)<br/>StorageDead(_117)<br/>StorageDead(_115)<br/>_69 = const ()<br/></td></tr><tr><td align="left">drop(_114)</td></tr></table>>];
    bb53__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageLive(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>_200 = const _<br/>_147 = &amp;(*_200)<br/>_146 = &amp;(*_147)<br/>_145 = move _146 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_146)<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>StorageLive(_152)<br/>StorageLive(_153)<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>_155 = &amp;_10<br/>_154 = &amp;(*_155)<br/></td></tr><tr><td align="left">_153 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;&amp;str&gt;(move _154)</td></tr></table>>];
    bb55__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_154)<br/>_152 = [move _153]<br/>StorageDead(_153)<br/>_151 = &amp;_152<br/>_150 = &amp;(*_151)<br/>_149 = move _150 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_150)<br/></td></tr><tr><td align="left">_144 = Arguments::&lt;'_&gt;::new_v1(move _145, move _149)</td></tr></table>>];
    bb56__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_149)<br/>StorageDead(_145)<br/></td></tr><tr><td align="left">_143 = format(move _144)</td></tr></table>>];
    bb57__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_144)<br/>StorageDead(_155)<br/>StorageDead(_152)<br/>StorageDead(_151)<br/>StorageDead(_147)<br/>_142 = move _143<br/>StorageDead(_143)<br/>_141 = &amp;_142<br/>_140 = &amp;(*_141)<br/></td></tr><tr><td align="left">_139 = &lt;std::string::String as Deref&gt;::deref(move _140)</td></tr></table>>];
    bb58__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">_138 = &amp;(*_139)<br/>StorageDead(_140)<br/></td></tr><tr><td align="left">_137 = solana_program::log::sol_log(move _138)</td></tr></table>>];
    bb59__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/></td></tr><tr><td align="left">drop(_142)</td></tr></table>>];
    bb60__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_142)<br/>StorageDead(_141)<br/>StorageDead(_139)<br/>StorageDead(_137)<br/>_69 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb61__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>_157 = &amp;mut _9<br/></td></tr><tr><td align="left">_156 = last_update::_::&lt;impl last_update::PriceStatusFlags&gt;::set(move _157, const _, const true)</td></tr></table>>];
    bb62__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_157)<br/>StorageDead(_156)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>_159 = &amp;mut _9<br/></td></tr><tr><td align="left">_158 = last_update::_::&lt;impl last_update::PriceStatusFlags&gt;::set(move _159, const _, const true)</td></tr></table>>];
    bb63__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_159)<br/>StorageDead(_158)<br/>_69 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb64__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_69)<br/>StorageLive(_160)<br/>StorageLive(_161)<br/>StorageLive(_162)<br/>_162 = _12<br/>StorageLive(_163)<br/>StorageLive(_164)<br/>_164 = &amp;((*_2).1: state::token_info::PriceHeuristic)<br/>_163 = &amp;(*_164)<br/></td></tr><tr><td align="left">_161 = check_price_heuristics(move _162, move _163)</td></tr></table>>];
    bb65__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">_207 = const true<br/>StorageDead(_163)<br/>StorageDead(_162)<br/>_165 = discriminant(_161)<br/></td></tr><tr><td align="left">switchInt(move _165)</td></tr></table>>];
    bb66__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageLive(_167)<br/>_167 = move ((_161 as Err).0: anchor_lang::error::Error)<br/>StorageLive(_168)<br/>StorageLive(_169)<br/>StorageLive(_170)<br/>StorageLive(_171)<br/>StorageLive(_172)<br/>StorageLive(_173)<br/>StorageLive(_174)<br/>StorageLive(_175)<br/>StorageLive(_176)<br/>StorageLive(_177)<br/>_199 = const _<br/>_177 = &amp;(*_199)<br/>_176 = &amp;(*_177)<br/>_175 = move _176 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_176)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>StorageLive(_181)<br/>StorageLive(_182)<br/>StorageLive(_183)<br/>StorageLive(_184)<br/>StorageLive(_185)<br/>_185 = &amp;_10<br/>_184 = &amp;(*_185)<br/></td></tr><tr><td align="left">_183 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;&amp;str&gt;(move _184)</td></tr></table>>];
    bb67__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageLive(_166)<br/>_166 = &amp;mut _9<br/></td></tr><tr><td align="left">_160 = last_update::_::&lt;impl last_update::PriceStatusFlags&gt;::set(move _166, const _, const true)</td></tr></table>>];
    bb68__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_166)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb69__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_184)<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>_188 = &amp;_167<br/>_187 = &amp;(*_188)<br/></td></tr><tr><td align="left">_186 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;anchor_lang::error::Error&gt;(move _187)</td></tr></table>>];
    bb70__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_187)<br/>_182 = [move _183, move _186]<br/>StorageDead(_186)<br/>StorageDead(_183)<br/>_181 = &amp;_182<br/>_180 = &amp;(*_181)<br/>_179 = move _180 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_180)<br/></td></tr><tr><td align="left">_174 = Arguments::&lt;'_&gt;::new_v1(move _175, move _179)</td></tr></table>>];
    bb71__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_179)<br/>StorageDead(_175)<br/></td></tr><tr><td align="left">_173 = format(move _174)</td></tr></table>>];
    bb72__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_174)<br/>StorageDead(_188)<br/>StorageDead(_185)<br/>StorageDead(_182)<br/>StorageDead(_181)<br/>StorageDead(_177)<br/>_172 = move _173<br/>StorageDead(_173)<br/>_171 = &amp;_172<br/>_170 = &amp;(*_171)<br/></td></tr><tr><td align="left">_169 = &lt;std::string::String as Deref&gt;::deref(move _170)</td></tr></table>>];
    bb73__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">_168 = &amp;(*_169)<br/>StorageDead(_170)<br/></td></tr><tr><td align="left">_160 = solana_program::log::sol_log(move _168)</td></tr></table>>];
    bb74__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left">drop(_172)</td></tr></table>>];
    bb75__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_172)<br/>StorageDead(_171)<br/>StorageDead(_169)<br/>StorageDead(_168)<br/></td></tr><tr><td align="left">drop(_167)</td></tr></table>>];
    bb76__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_167)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb77__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_191)<br/>StorageLive(_192)<br/>StorageLive(_193)<br/>_193 = &amp;mut _9<br/></td></tr><tr><td align="left">_192 = last_update::_::&lt;impl last_update::PriceStatusFlags&gt;::set(move _193, const _, const true)</td></tr></table>>];
    bb78__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_193)<br/>StorageDead(_192)<br/>_189 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb79__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_191)<br/>_189 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb80__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_190)<br/>StorageDead(_189)<br/>StorageLive(_194)<br/>StorageLive(_195)<br/>_195 = _12<br/>StorageLive(_196)<br/>_196 = (_7.1: u64)<br/>StorageLive(_197)<br/>_197 = _9<br/>_194 = prices::GetPriceResult { price: move _195, timestamp: move _196, status: move _197 }<br/>StorageDead(_197)<br/>StorageDead(_196)<br/>StorageDead(_195)<br/>_0 = std::option::Option::&lt;prices::GetPriceResult&gt;::Some(move _194)<br/>StorageDead(_194)<br/>StorageDead(_12)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/>_224 = discriminant(_8)<br/></td></tr><tr><td align="left">switchInt(move _224)</td></tr></table>>];
    bb81__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>_226 = discriminant(_13)<br/>_210 = const false<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">drop(_8)</td></tr></table>>];
    bb82__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">_208 = const false<br/>StorageDead(_8)<br/>_211 = const false<br/>StorageDead(_7)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb83__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left">return</td></tr></table>>];
    bb84__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">84 (cleanup)</td></tr><tr><td align="left">drop(_172)</td></tr></table>>];
    bb85__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">85 (cleanup)</td></tr><tr><td align="left">drop(_167)</td></tr></table>>];
    bb86__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">86 (cleanup)</td></tr><tr><td align="left">drop(_142)</td></tr></table>>];
    bb87__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">87 (cleanup)</td></tr><tr><td align="left">drop(_120)</td></tr></table>>];
    bb88__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">88 (cleanup)</td></tr><tr><td align="left">drop(_114)</td></tr></table>>];
    bb89__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">89 (cleanup)</td></tr><tr><td align="left">drop(_87)</td></tr></table>>];
    bb90__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">90 (cleanup)</td></tr><tr><td align="left">drop(_81)</td></tr></table>>];
    bb91__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">91 (cleanup)</td></tr><tr><td align="left">drop(_51)</td></tr></table>>];
    bb92__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">92 (cleanup)</td></tr><tr><td align="left">drop(_27)</td></tr></table>>];
    bb93__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">93 (cleanup)</td></tr><tr><td align="left">drop(_20)</td></tr></table>>];
    bb94__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">94 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb95__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">_216 = discriminant(_45)<br/>_204 = const false<br/>StorageDead(_45)<br/>StorageDead(_44)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>_71 = &amp;(*_2)<br/></td></tr><tr><td align="left">_70 = token_info::TokenInfo::is_twap_enabled(move _71)</td></tr></table>>];
    bb96__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">_218 = discriminant(_75)<br/>_205 = const false<br/>StorageDead(_75)<br/>StorageDead(_74)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>_209 = const false<br/>_106 = move (_73.0: std::boxed::Box&lt;dyn std::ops::FnOnce() -&gt; std::result::Result&lt;fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, anchor_lang::error::Error&gt;&gt;)<br/>StorageLive(_107)<br/>_107 = ()<br/></td></tr><tr><td align="left">_105 = &lt;Box&lt;dyn FnOnce() -&gt; std::result::Result&lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, anchor_lang::error::Error&gt;&gt; as FnOnce&lt;()&gt;&gt;::call_once(move _106, move _107)</td></tr></table>>];
    bb97__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">_220 = discriminant(_104)<br/>_206 = const false<br/>StorageDead(_104)<br/>_209 = const false<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb98__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">_222 = discriminant(_161)<br/>StorageDead(_164)<br/>_207 = const false<br/>StorageDead(_161)<br/>StorageDead(_160)<br/>StorageLive(_189)<br/>StorageLive(_190)<br/>StorageLive(_191)<br/>_191 = ((*_2).8: u8)<br/>_190 = Eq(move _191, const 0_u8)<br/></td></tr><tr><td align="left">switchInt(move _190)</td></tr></table>>];
    bb99__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">_208 = const false<br/>StorageDead(_8)<br/>_211 = const false<br/>StorageDead(_7)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb100__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left">switchInt(_208)</td></tr></table>>];
    bb101__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left">drop(((_8 as Some).0: utils::prices::types::TimestampedPrice))</td></tr></table>>];
    bb102__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">102 (cleanup)</td></tr><tr><td align="left" balign="left">_228 = discriminant(_161)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb103__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">103 (cleanup)</td></tr><tr><td align="left" balign="left">_229 = discriminant(_104)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb104__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">104 (cleanup)</td></tr><tr><td align="left" balign="left">_230 = discriminant(_75)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb105__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">105 (cleanup)</td></tr><tr><td align="left">drop((_73.0: std::boxed::Box&lt;dyn std::ops::FnOnce() -&gt; std::result::Result&lt;fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, anchor_lang::error::Error&gt;&gt;))</td></tr></table>>];
    bb106__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">106 (cleanup)</td></tr><tr><td align="left">switchInt(_209)</td></tr></table>>];
    bb107__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">107 (cleanup)</td></tr><tr><td align="left" balign="left">_231 = discriminant(_45)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb108__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">108 (cleanup)</td></tr><tr><td align="left" balign="left">_232 = discriminant(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb109__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">109 (cleanup)</td></tr><tr><td align="left">switchInt(_208)</td></tr></table>>];
    bb110__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">110 (cleanup)</td></tr><tr><td align="left">drop(((_8 as Some).0: utils::prices::types::TimestampedPrice))</td></tr></table>>];
    bb111__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">111 (cleanup)</td></tr><tr><td align="left" balign="left">_233 = discriminant(_8)<br/></td></tr><tr><td align="left">switchInt(move _233)</td></tr></table>>];
    bb112__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">112 (cleanup)</td></tr><tr><td align="left">drop((_7.0: std::boxed::Box&lt;dyn std::ops::FnOnce() -&gt; std::result::Result&lt;fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, anchor_lang::error::Error&gt;&gt;))</td></tr></table>>];
    bb113__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">113 (cleanup)</td></tr><tr><td align="left">switchInt(_211)</td></tr></table>>];
    bb114__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">114 (cleanup)</td></tr><tr><td align="left">switchInt(_212)</td></tr></table>>];
    bb115__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">115 (cleanup)</td></tr><tr><td align="left">drop((_1.1: std::option::Option&lt;utils::prices::types::TimestampedPrice&gt;))</td></tr></table>>];
    bb116__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">116 (cleanup)</td></tr><tr><td align="left">drop((_1.0: utils::prices::types::TimestampedPrice))</td></tr></table>>];
    bb117__0_2531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">117 (cleanup)</td></tr><tr><td align="left">switchInt(_213)</td></tr></table>>];
    bb0__0_2531 -> bb1__0_2531 [label="return"];
    bb0__0_2531 -> bb117__0_2531 [label="unwind"];
    bb1__0_2531 -> bb2__0_2531 [label="return"];
    bb1__0_2531 -> bb117__0_2531 [label="unwind"];
    bb2__0_2531 -> bb3__0_2531 [label="return"];
    bb2__0_2531 -> bb111__0_2531 [label="unwind"];
    bb3__0_2531 -> bb4__0_2531 [label="return"];
    bb3__0_2531 -> bb111__0_2531 [label="unwind"];
    bb4__0_2531 -> bb5__0_2531 [label="return"];
    bb4__0_2531 -> bb111__0_2531 [label="unwind"];
    bb5__0_2531 -> bb8__0_2531 [label="0"];
    bb5__0_2531 -> bb6__0_2531 [label="1"];
    bb5__0_2531 -> bb7__0_2531 [label="otherwise"];
    bb6__0_2531 -> bb10__0_2531 [label="return"];
    bb6__0_2531 -> bb93__0_2531 [label="unwind"];
    bb8__0_2531 -> bb9__0_2531 [label="return"];
    bb8__0_2531 -> bb108__0_2531 [label="unwind"];
    bb9__0_2531 -> bb17__0_2531 [label="return"];
    bb9__0_2531 -> bb111__0_2531 [label="unwind"];
    bb10__0_2531 -> bb11__0_2531 [label="return"];
    bb10__0_2531 -> bb93__0_2531 [label="unwind"];
    bb11__0_2531 -> bb12__0_2531 [label="return"];
    bb11__0_2531 -> bb93__0_2531 [label="unwind"];
    bb12__0_2531 -> bb13__0_2531 [label="return"];
    bb12__0_2531 -> bb93__0_2531 [label="unwind"];
    bb13__0_2531 -> bb14__0_2531 [label="return"];
    bb13__0_2531 -> bb92__0_2531 [label="unwind"];
    bb14__0_2531 -> bb15__0_2531 [label="return"];
    bb14__0_2531 -> bb92__0_2531 [label="unwind"];
    bb15__0_2531 -> bb16__0_2531 [label="return"];
    bb15__0_2531 -> bb93__0_2531 [label="unwind"];
    bb16__0_2531 -> bb81__0_2531 [label="return"];
    bb16__0_2531 -> bb108__0_2531 [label="unwind"];
    bb17__0_2531 -> bb19__0_2531 [label="0"];
    bb17__0_2531 -> bb18__0_2531 [label="1"];
    bb17__0_2531 -> bb7__0_2531 [label="otherwise"];
    bb18__0_2531 -> bb21__0_2531 [label="return"];
    bb18__0_2531 -> bb91__0_2531 [label="unwind"];
    bb19__0_2531 -> bb20__0_2531 [label="return"];
    bb19__0_2531 -> bb107__0_2531 [label="unwind"];
    bb20__0_2531 -> bb95__0_2531 [label=""];
    bb21__0_2531 -> bb22__0_2531 [label="return"];
    bb21__0_2531 -> bb91__0_2531 [label="unwind"];
    bb22__0_2531 -> bb23__0_2531 [label="return"];
    bb22__0_2531 -> bb91__0_2531 [label="unwind"];
    bb23__0_2531 -> bb24__0_2531 [label="return"];
    bb23__0_2531 -> bb91__0_2531 [label="unwind"];
    bb24__0_2531 -> bb25__0_2531 [label="return"];
    bb24__0_2531 -> bb107__0_2531 [label="unwind"];
    bb25__0_2531 -> bb95__0_2531 [label=""];
    bb26__0_2531 -> bb61__0_2531 [label="0"];
    bb26__0_2531 -> bb27__0_2531 [label="otherwise"];
    bb27__0_2531 -> bb28__0_2531 [label="1"];
    bb27__0_2531 -> bb54__0_2531 [label="otherwise"];
    bb28__0_2531 -> bb29__0_2531 [label="return"];
    bb28__0_2531 -> bb106__0_2531 [label="unwind"];
    bb29__0_2531 -> bb31__0_2531 [label="0"];
    bb29__0_2531 -> bb30__0_2531 [label="1"];
    bb29__0_2531 -> bb7__0_2531 [label="otherwise"];
    bb30__0_2531 -> bb33__0_2531 [label="return"];
    bb30__0_2531 -> bb90__0_2531 [label="unwind"];
    bb31__0_2531 -> bb32__0_2531 [label="return"];
    bb31__0_2531 -> bb104__0_2531 [label="unwind"];
    bb32__0_2531 -> bb96__0_2531 [label=""];
    bb33__0_2531 -> bb34__0_2531 [label="return"];
    bb33__0_2531 -> bb90__0_2531 [label="unwind"];
    bb34__0_2531 -> bb35__0_2531 [label="return"];
    bb34__0_2531 -> bb90__0_2531 [label="unwind"];
    bb35__0_2531 -> bb36__0_2531 [label="return"];
    bb35__0_2531 -> bb90__0_2531 [label="unwind"];
    bb36__0_2531 -> bb37__0_2531 [label="return"];
    bb36__0_2531 -> bb89__0_2531 [label="unwind"];
    bb37__0_2531 -> bb38__0_2531 [label="return"];
    bb37__0_2531 -> bb89__0_2531 [label="unwind"];
    bb38__0_2531 -> bb39__0_2531 [label="return"];
    bb38__0_2531 -> bb90__0_2531 [label="unwind"];
    bb39__0_2531 -> bb40__0_2531 [label="return"];
    bb39__0_2531 -> bb104__0_2531 [label="unwind"];
    bb40__0_2531 -> bb96__0_2531 [label=""];
    bb41__0_2531 -> bb42__0_2531 [label="return"];
    bb41__0_2531 -> bb106__0_2531 [label="unwind"];
    bb42__0_2531 -> bb44__0_2531 [label="0"];
    bb42__0_2531 -> bb43__0_2531 [label="1"];
    bb42__0_2531 -> bb7__0_2531 [label="otherwise"];
    bb43__0_2531 -> bb46__0_2531 [label="return"];
    bb43__0_2531 -> bb88__0_2531 [label="unwind"];
    bb44__0_2531 -> bb45__0_2531 [label="return"];
    bb44__0_2531 -> bb103__0_2531 [label="unwind"];
    bb45__0_2531 -> bb97__0_2531 [label=""];
    bb46__0_2531 -> bb47__0_2531 [label="return"];
    bb46__0_2531 -> bb88__0_2531 [label="unwind"];
    bb47__0_2531 -> bb48__0_2531 [label="return"];
    bb47__0_2531 -> bb88__0_2531 [label="unwind"];
    bb48__0_2531 -> bb49__0_2531 [label="return"];
    bb48__0_2531 -> bb88__0_2531 [label="unwind"];
    bb49__0_2531 -> bb50__0_2531 [label="return"];
    bb49__0_2531 -> bb87__0_2531 [label="unwind"];
    bb50__0_2531 -> bb51__0_2531 [label="return"];
    bb50__0_2531 -> bb87__0_2531 [label="unwind"];
    bb51__0_2531 -> bb52__0_2531 [label="return"];
    bb51__0_2531 -> bb88__0_2531 [label="unwind"];
    bb52__0_2531 -> bb53__0_2531 [label="return"];
    bb52__0_2531 -> bb103__0_2531 [label="unwind"];
    bb53__0_2531 -> bb97__0_2531 [label=""];
    bb54__0_2531 -> bb55__0_2531 [label="return"];
    bb54__0_2531 -> bb111__0_2531 [label="unwind"];
    bb55__0_2531 -> bb56__0_2531 [label="return"];
    bb55__0_2531 -> bb111__0_2531 [label="unwind"];
    bb56__0_2531 -> bb57__0_2531 [label="return"];
    bb56__0_2531 -> bb111__0_2531 [label="unwind"];
    bb57__0_2531 -> bb58__0_2531 [label="return"];
    bb57__0_2531 -> bb86__0_2531 [label="unwind"];
    bb58__0_2531 -> bb59__0_2531 [label="return"];
    bb58__0_2531 -> bb86__0_2531 [label="unwind"];
    bb59__0_2531 -> bb60__0_2531 [label="return"];
    bb59__0_2531 -> bb111__0_2531 [label="unwind"];
    bb60__0_2531 -> bb64__0_2531 [label=""];
    bb61__0_2531 -> bb62__0_2531 [label="return"];
    bb61__0_2531 -> bb111__0_2531 [label="unwind"];
    bb62__0_2531 -> bb63__0_2531 [label="return"];
    bb62__0_2531 -> bb111__0_2531 [label="unwind"];
    bb63__0_2531 -> bb64__0_2531 [label=""];
    bb64__0_2531 -> bb65__0_2531 [label="return"];
    bb64__0_2531 -> bb111__0_2531 [label="unwind"];
    bb65__0_2531 -> bb67__0_2531 [label="0"];
    bb65__0_2531 -> bb66__0_2531 [label="1"];
    bb65__0_2531 -> bb7__0_2531 [label="otherwise"];
    bb66__0_2531 -> bb69__0_2531 [label="return"];
    bb66__0_2531 -> bb85__0_2531 [label="unwind"];
    bb67__0_2531 -> bb68__0_2531 [label="return"];
    bb67__0_2531 -> bb102__0_2531 [label="unwind"];
    bb68__0_2531 -> bb98__0_2531 [label=""];
    bb69__0_2531 -> bb70__0_2531 [label="return"];
    bb69__0_2531 -> bb85__0_2531 [label="unwind"];
    bb70__0_2531 -> bb71__0_2531 [label="return"];
    bb70__0_2531 -> bb85__0_2531 [label="unwind"];
    bb71__0_2531 -> bb72__0_2531 [label="return"];
    bb71__0_2531 -> bb85__0_2531 [label="unwind"];
    bb72__0_2531 -> bb73__0_2531 [label="return"];
    bb72__0_2531 -> bb84__0_2531 [label="unwind"];
    bb73__0_2531 -> bb74__0_2531 [label="return"];
    bb73__0_2531 -> bb84__0_2531 [label="unwind"];
    bb74__0_2531 -> bb75__0_2531 [label="return"];
    bb74__0_2531 -> bb85__0_2531 [label="unwind"];
    bb75__0_2531 -> bb76__0_2531 [label="return"];
    bb75__0_2531 -> bb102__0_2531 [label="unwind"];
    bb76__0_2531 -> bb98__0_2531 [label=""];
    bb77__0_2531 -> bb78__0_2531 [label="return"];
    bb77__0_2531 -> bb111__0_2531 [label="unwind"];
    bb78__0_2531 -> bb80__0_2531 [label=""];
    bb79__0_2531 -> bb80__0_2531 [label=""];
    bb80__0_2531 -> bb100__0_2531 [label="1"];
    bb80__0_2531 -> bb99__0_2531 [label="otherwise"];
    bb81__0_2531 -> bb82__0_2531 [label="return"];
    bb81__0_2531 -> bb113__0_2531 [label="unwind"];
    bb82__0_2531 -> bb83__0_2531 [label=""];
    bb84__0_2531 -> bb85__0_2531 [label="return"];
    bb85__0_2531 -> bb102__0_2531 [label="return"];
    bb86__0_2531 -> bb111__0_2531 [label="return"];
    bb87__0_2531 -> bb88__0_2531 [label="return"];
    bb88__0_2531 -> bb103__0_2531 [label="return"];
    bb89__0_2531 -> bb90__0_2531 [label="return"];
    bb90__0_2531 -> bb104__0_2531 [label="return"];
    bb91__0_2531 -> bb107__0_2531 [label="return"];
    bb92__0_2531 -> bb93__0_2531 [label="return"];
    bb93__0_2531 -> bb108__0_2531 [label="return"];
    bb95__0_2531 -> bb26__0_2531 [label="return"];
    bb95__0_2531 -> bb111__0_2531 [label="unwind"];
    bb96__0_2531 -> bb41__0_2531 [label="return"];
    bb96__0_2531 -> bb106__0_2531 [label="unwind"];
    bb97__0_2531 -> bb64__0_2531 [label=""];
    bb98__0_2531 -> bb79__0_2531 [label="0"];
    bb98__0_2531 -> bb77__0_2531 [label="otherwise"];
    bb99__0_2531 -> bb83__0_2531 [label=""];
    bb100__0_2531 -> bb99__0_2531 [label="0"];
    bb100__0_2531 -> bb101__0_2531 [label="otherwise"];
    bb101__0_2531 -> bb99__0_2531 [label="return"];
    bb101__0_2531 -> bb113__0_2531 [label="unwind"];
    bb102__0_2531 -> bb111__0_2531 [label=""];
    bb103__0_2531 -> bb106__0_2531 [label=""];
    bb104__0_2531 -> bb106__0_2531 [label=""];
    bb105__0_2531 -> bb111__0_2531 [label="return"];
    bb106__0_2531 -> bb111__0_2531 [label="0"];
    bb106__0_2531 -> bb105__0_2531 [label="otherwise"];
    bb107__0_2531 -> bb111__0_2531 [label=""];
    bb108__0_2531 -> bb111__0_2531 [label=""];
    bb109__0_2531 -> bb113__0_2531 [label="0"];
    bb109__0_2531 -> bb110__0_2531 [label="otherwise"];
    bb110__0_2531 -> bb113__0_2531 [label="return"];
    bb111__0_2531 -> bb109__0_2531 [label="1"];
    bb111__0_2531 -> bb113__0_2531 [label="otherwise"];
    bb112__0_2531 -> bb117__0_2531 [label="return"];
    bb113__0_2531 -> bb117__0_2531 [label="0"];
    bb113__0_2531 -> bb112__0_2531 [label="otherwise"];
    bb114__0_2531 -> bb94__0_2531 [label="0"];
    bb114__0_2531 -> bb115__0_2531 [label="otherwise"];
    bb115__0_2531 -> bb94__0_2531 [label="return"];
    bb116__0_2531 -> bb114__0_2531 [label="return"];
    bb117__0_2531 -> bb114__0_2531 [label="0"];
    bb117__0_2531 -> bb116__0_2531 [label="otherwise"];
}
