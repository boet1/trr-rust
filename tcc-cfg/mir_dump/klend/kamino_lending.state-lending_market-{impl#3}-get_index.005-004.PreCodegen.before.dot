digraph Mir_0_1527 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn state::lending_market::ElevationGroup::get_index(_1: &amp;ReErased state::lending_market::ElevationGroup) -&gt; usize<br align="left"/>let mut _2: usize;<br align="left"/>let mut _3: u8;<br align="left"/>let mut _4: (usize, bool);<br align="left"/>debug self =&gt; _1;<br align="left"/>>;
    bb0__0_1527 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>_3 = ((*_1).1: u8)<br/>_2 = move _3 as usize (IntToInt)<br/>StorageDead(_3)<br/>_4 = CheckedSub(_2, const 1_usize)<br/></td></tr><tr><td align="left">assert(!move (_4.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, move _2, const 1_usize)</td></tr></table>>];
    bb1__0_1527 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_0 = move (_4.0: usize)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_1527 -> bb1__0_1527 [label="success"];
}
