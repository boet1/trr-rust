// MIR for `utils::fraction::<impl at programs\klend\src\utils\fraction.rs:236:1: 236:17>::from_num` before PreCodegen

fn utils::fraction::<impl at programs\klend\src\utils\fraction.rs:236:1: 236:17>::from_num(_1: T) -> utils::fraction::BigFraction {
    debug num => _1;
    let mut _0: utils::fraction::BigFraction;
    let _2: utils::fraction::uint_types::U256;
    let mut _3: T;
    let mut _5: utils::fraction::uint_types::U256;
    let mut _6: utils::fraction::uint_types::U256;
    scope 1 {
        debug value => _2;
        let _4: utils::fraction::uint_types::U256;
        scope 2 {
            debug sf => _4;
        }
    }

    bb0: {
        StorageLive(_2);
        StorageLive(_3);
        _3 = move _1;
        _2 = <T as Into<uint_types::U256>>::into(move _3) -> [return: bb1, unwind: bb3];
    }

    bb1: {
        StorageDead(_3);
        StorageLive(_4);
        StorageLive(_5);
        _5 = _2;
        _4 = <uint_types::U256 as Shl<u32>>::shl(move _5, const _) -> [return: bb2, unwind: bb3];
    }

    bb2: {
        StorageDead(_5);
        StorageLive(_6);
        _6 = _4;
        _0 = utils::fraction::BigFraction(move _6);
        StorageDead(_6);
        StorageDead(_4);
        StorageDead(_2);
        return;
    }

    bb3 (cleanup): {
        resume;
    }
}
