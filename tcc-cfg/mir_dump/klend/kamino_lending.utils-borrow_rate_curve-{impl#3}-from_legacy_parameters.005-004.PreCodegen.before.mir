// MIR for `borrow_rate_curve::<impl at programs\klend\src\utils\borrow_rate_curve.rs:141:1: 141:21>::from_legacy_parameters` before PreCodegen

fn borrow_rate_curve::<impl at programs\klend\src\utils\borrow_rate_curve.rs:141:1: 141:21>::from_legacy_parameters(_1: u8, _2: u8, _3: u8, _4: u8) -> BorrowRateCurve {
    debug optimal_utilization_rate_pct => _1;
    debug base_rate_pct => _2;
    debug optimal_rate_pct => _3;
    debug max_rate_pct => _4;
    let mut _0: utils::borrow_rate_curve::BorrowRateCurve;
    let _5: u32;
    let mut _6: u32;
    let mut _7: u8;
    let mut _8: (u32, bool);
    let mut _10: u32;
    let mut _11: u8;
    let mut _12: (u32, bool);
    let mut _14: u32;
    let mut _15: u8;
    let mut _16: (u32, bool);
    let mut _18: u32;
    let mut _19: u8;
    let mut _20: (u32, bool);
    let mut _24: bool;
    let mut _25: u32;
    let mut _26: utils::borrow_rate_curve::CurvePoint;
    let mut _27: u32;
    let mut _28: utils::borrow_rate_curve::CurvePoint;
    let mut _29: u32;
    let mut _30: &[utils::borrow_rate_curve::CurvePoint; 2];
    let _31: &[utils::borrow_rate_curve::CurvePoint; 2];
    let mut _32: bool;
    let mut _33: u32;
    let mut _34: utils::borrow_rate_curve::CurvePoint;
    let mut _35: u32;
    let mut _36: utils::borrow_rate_curve::CurvePoint;
    let mut _37: u32;
    let mut _38: &[utils::borrow_rate_curve::CurvePoint; 2];
    let _39: &[utils::borrow_rate_curve::CurvePoint; 2];
    let mut _40: utils::borrow_rate_curve::CurvePoint;
    let mut _41: u32;
    let mut _42: utils::borrow_rate_curve::CurvePoint;
    let mut _43: u32;
    let mut _44: u32;
    let mut _45: utils::borrow_rate_curve::CurvePoint;
    let mut _46: u32;
    let mut _47: &[utils::borrow_rate_curve::CurvePoint; 3];
    let _48: &[utils::borrow_rate_curve::CurvePoint; 3];
    let mut _49: std::result::Result<utils::borrow_rate_curve::BorrowRateCurve, anchor_lang::error::Error>;
    let mut _50: &[utils::borrow_rate_curve::CurvePoint];
    scope 1 {
        debug optimal_utilization_rate => _5;
        let _9: u32;
        scope 2 {
            debug base_rate => _9;
            let _13: u32;
            scope 3 {
                debug optimal_rate => _13;
                let _17: u32;
                scope 4 {
                    debug max_rate => _17;
                    let _21: [utils::borrow_rate_curve::CurvePoint; 2];
                    scope 5 {
                        debug alloc_1 => _21;
                        let _22: [utils::borrow_rate_curve::CurvePoint; 3];
                        scope 6 {
                            debug alloc_2 => _22;
                            let _23: &[utils::borrow_rate_curve::CurvePoint];
                            scope 7 {
                                debug points => _23;
                            }
                        }
                    }
                }
            }
        }
    }

    bb0: {
        StorageLive(_5);
        StorageLive(_6);
        StorageLive(_7);
        _7 = _1;
        _6 = <u32 as From<u8>>::from(move _7) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_7);
        _8 = CheckedMul(_6, const 100_u32);
        assert(!move (_8.1: bool), "attempt to compute `{} * {}`, which would overflow", move _6, const 100_u32) -> [success: bb2, unwind continue];
    }

    bb2: {
        _5 = move (_8.0: u32);
        StorageDead(_6);
        StorageLive(_9);
        StorageLive(_10);
        StorageLive(_11);
        _11 = _2;
        _10 = <u32 as From<u8>>::from(move _11) -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageDead(_11);
        _12 = CheckedMul(_10, const 100_u32);
        assert(!move (_12.1: bool), "attempt to compute `{} * {}`, which would overflow", move _10, const 100_u32) -> [success: bb4, unwind continue];
    }

    bb4: {
        _9 = move (_12.0: u32);
        StorageDead(_10);
        StorageLive(_13);
        StorageLive(_14);
        StorageLive(_15);
        _15 = _3;
        _14 = <u32 as From<u8>>::from(move _15) -> [return: bb5, unwind continue];
    }

    bb5: {
        StorageDead(_15);
        _16 = CheckedMul(_14, const 100_u32);
        assert(!move (_16.1: bool), "attempt to compute `{} * {}`, which would overflow", move _14, const 100_u32) -> [success: bb6, unwind continue];
    }

    bb6: {
        _13 = move (_16.0: u32);
        StorageDead(_14);
        StorageLive(_17);
        StorageLive(_18);
        StorageLive(_19);
        _19 = _4;
        _18 = <u32 as From<u8>>::from(move _19) -> [return: bb7, unwind continue];
    }

    bb7: {
        StorageDead(_19);
        _20 = CheckedMul(_18, const 100_u32);
        assert(!move (_20.1: bool), "attempt to compute `{} * {}`, which would overflow", move _18, const 100_u32) -> [success: bb8, unwind continue];
    }

    bb8: {
        _17 = move (_20.0: u32);
        StorageDead(_18);
        StorageLive(_21);
        StorageLive(_22);
        StorageLive(_23);
        StorageLive(_24);
        StorageLive(_25);
        _25 = _5;
        _24 = Eq(move _25, const 0_u32);
        switchInt(move _24) -> [0: bb10, otherwise: bb9];
    }

    bb9: {
        StorageDead(_25);
        StorageLive(_26);
        StorageLive(_27);
        _27 = _13;
        _26 = CurvePoint { utilization_rate_bps: const 0_u32, borrow_rate_bps: move _27 };
        StorageDead(_27);
        StorageLive(_28);
        StorageLive(_29);
        _29 = _17;
        _28 = CurvePoint { utilization_rate_bps: const _, borrow_rate_bps: move _29 };
        StorageDead(_29);
        _21 = [move _26, move _28];
        StorageDead(_28);
        StorageDead(_26);
        StorageLive(_30);
        StorageLive(_31);
        _31 = &_21;
        _30 = &(*_31);
        _23 = move _30 as &[utils::borrow_rate_curve::CurvePoint] (PointerCoercion(Unsize));
        StorageDead(_30);
        StorageDead(_31);
        goto -> bb14;
    }

    bb10: {
        StorageDead(_25);
        StorageLive(_32);
        StorageLive(_33);
        _33 = _5;
        _32 = Eq(move _33, const _);
        switchInt(move _32) -> [0: bb12, otherwise: bb11];
    }

    bb11: {
        StorageDead(_33);
        StorageLive(_34);
        StorageLive(_35);
        _35 = _9;
        _34 = CurvePoint { utilization_rate_bps: const 0_u32, borrow_rate_bps: move _35 };
        StorageDead(_35);
        StorageLive(_36);
        StorageLive(_37);
        _37 = _13;
        _36 = CurvePoint { utilization_rate_bps: const _, borrow_rate_bps: move _37 };
        StorageDead(_37);
        _21 = [move _34, move _36];
        StorageDead(_36);
        StorageDead(_34);
        StorageLive(_38);
        StorageLive(_39);
        _39 = &_21;
        _38 = &(*_39);
        _23 = move _38 as &[utils::borrow_rate_curve::CurvePoint] (PointerCoercion(Unsize));
        StorageDead(_38);
        StorageDead(_39);
        goto -> bb13;
    }

    bb12: {
        StorageDead(_33);
        StorageLive(_40);
        StorageLive(_41);
        _41 = _9;
        _40 = CurvePoint { utilization_rate_bps: const 0_u32, borrow_rate_bps: move _41 };
        StorageDead(_41);
        StorageLive(_42);
        StorageLive(_43);
        _43 = _5;
        StorageLive(_44);
        _44 = _13;
        _42 = CurvePoint { utilization_rate_bps: move _43, borrow_rate_bps: move _44 };
        StorageDead(_44);
        StorageDead(_43);
        StorageLive(_45);
        StorageLive(_46);
        _46 = _17;
        _45 = CurvePoint { utilization_rate_bps: const _, borrow_rate_bps: move _46 };
        StorageDead(_46);
        _22 = [move _40, move _42, move _45];
        StorageDead(_45);
        StorageDead(_42);
        StorageDead(_40);
        StorageLive(_47);
        StorageLive(_48);
        _48 = &_22;
        _47 = &(*_48);
        _23 = move _47 as &[utils::borrow_rate_curve::CurvePoint] (PointerCoercion(Unsize));
        StorageDead(_47);
        StorageDead(_48);
        goto -> bb13;
    }

    bb13: {
        StorageDead(_32);
        goto -> bb14;
    }

    bb14: {
        StorageDead(_24);
        StorageLive(_49);
        StorageLive(_50);
        _50 = &(*_23);
        _49 = BorrowRateCurve::from_points(move _50) -> [return: bb15, unwind continue];
    }

    bb15: {
        StorageDead(_50);
        _0 = std::result::Result::<BorrowRateCurve, anchor_lang::error::Error>::unwrap(move _49) -> [return: bb16, unwind: bb17];
    }

    bb16: {
        StorageDead(_49);
        StorageDead(_23);
        StorageDead(_22);
        StorageDead(_21);
        StorageDead(_17);
        StorageDead(_13);
        StorageDead(_9);
        StorageDead(_5);
        return;
    }

    bb17 (cleanup): {
        resume;
    }
}
