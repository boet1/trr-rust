digraph Mir_0_1287 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn lending_operations::withdraw_obligation_collateral(_1: &amp;ReErased state::lending_market::LendingMarket, _2: &amp;ReErased mut state::reserve::Reserve, _3: &amp;ReErased mut state::obligation::Obligation, _4: u64, _5: u64, _6: anchor_lang::prelude::Pubkey, _7: state::types::LtvMaxWithdrawalCheck) -&gt; std::result::Result&lt;u64, anchor_lang::error::Error&gt;<br align="left"/>let _8: ();<br align="left"/>let mut _9: bool;<br align="left"/>let mut _10: u64;<br align="left"/>let mut _11: !;<br align="left"/>let mut _12: anchor_lang::error::Error;<br align="left"/>let mut _13: anchor_lang::error::AnchorError;<br align="left"/>let mut _14: std::string::String;<br align="left"/>let mut _15: &amp;ReErased LendingError;<br align="left"/>let _16: LendingError;<br align="left"/>let mut _17: u32;<br align="left"/>let mut _18: LendingError;<br align="left"/>let mut _19: std::string::String;<br align="left"/>let mut _20: &amp;ReErased LendingError;<br align="left"/>let _21: LendingError;<br align="left"/>let mut _22: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _23: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _24: anchor_lang::error::Source;<br align="left"/>let mut _25: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let _26: bool;<br align="left"/>let mut _27: &amp;ReErased state::obligation::Obligation;<br align="left"/>let _28: state::last_update::PriceStatusFlags;<br align="left"/>let mut _29: bool;<br align="left"/>let _30: ();<br align="left"/>let mut _31: bool;<br align="left"/>let mut _32: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, bool&gt;;<br align="left"/>let mut _33: std::result::Result&lt;bool, anchor_lang::error::Error&gt;;<br align="left"/>let mut _34: &amp;ReErased state::last_update::LastUpdate;<br align="left"/>let mut _35: u64;<br align="left"/>let mut _36: state::last_update::PriceStatusFlags;<br align="left"/>let mut _37: isize;<br align="left"/>let _38: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _39: !;<br align="left"/>let mut _40: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _41: bool;<br align="left"/>let mut _42: !;<br align="left"/>let _43: ();<br align="left"/>let mut _44: &amp;ReErased str;<br align="left"/>let _45: &amp;ReErased str;<br align="left"/>let mut _46: &amp;ReErased std::string::String;<br align="left"/>let _47: &amp;ReErased std::string::String;<br align="left"/>let _48: std::string::String;<br align="left"/>let _49: std::string::String;<br align="left"/>let mut _50: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _51: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _52: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _53: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _54: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _55: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _56: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _57: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _58: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _59: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _60: &amp;ReErased u8;<br align="left"/>let _61: &amp;ReErased u8;<br align="left"/>let _62: state::last_update::PriceStatusFlags;<br align="left"/>let mut _63: &amp;ReErased state::last_update::LastUpdate;<br align="left"/>let mut _64: &amp;ReErased [core::fmt::rt::Placeholder];<br align="left"/>let mut _65: &amp;ReErased [core::fmt::rt::Placeholder; 1_usize];<br align="left"/>let _66: &amp;ReErased [core::fmt::rt::Placeholder; 1_usize];<br align="left"/>let _67: [core::fmt::rt::Placeholder; 1_usize];<br align="left"/>let mut _68: core::fmt::rt::Placeholder;<br align="left"/>let mut _69: core::fmt::rt::Alignment;<br align="left"/>let mut _70: core::fmt::rt::Count;<br align="left"/>let mut _71: core::fmt::rt::Count;<br align="left"/>let mut _72: core::fmt::rt::UnsafeArg;<br align="left"/>let mut _73: anchor_lang::error::Error;<br align="left"/>let mut _74: anchor_lang::error::AnchorError;<br align="left"/>let mut _75: std::string::String;<br align="left"/>let mut _76: &amp;ReErased LendingError;<br align="left"/>let _77: LendingError;<br align="left"/>let mut _78: u32;<br align="left"/>let mut _79: LendingError;<br align="left"/>let mut _80: std::string::String;<br align="left"/>let mut _81: &amp;ReErased LendingError;<br align="left"/>let _82: LendingError;<br align="left"/>let mut _83: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _84: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _85: anchor_lang::error::Source;<br align="left"/>let mut _86: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let _87: ();<br align="left"/>let mut _88: bool;<br align="left"/>let mut _89: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, bool&gt;;<br align="left"/>let mut _90: std::result::Result&lt;bool, anchor_lang::error::Error&gt;;<br align="left"/>let mut _91: &amp;ReErased state::last_update::LastUpdate;<br align="left"/>let mut _92: u64;<br align="left"/>let mut _93: state::last_update::PriceStatusFlags;<br align="left"/>let mut _94: isize;<br align="left"/>let _95: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _96: !;<br align="left"/>let mut _97: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _98: bool;<br align="left"/>let mut _99: !;<br align="left"/>let _100: ();<br align="left"/>let mut _101: &amp;ReErased str;<br align="left"/>let _102: &amp;ReErased str;<br align="left"/>let mut _103: &amp;ReErased std::string::String;<br align="left"/>let _104: &amp;ReErased std::string::String;<br align="left"/>let _105: std::string::String;<br align="left"/>let _106: std::string::String;<br align="left"/>let mut _107: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _108: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _109: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _110: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _111: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _112: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _113: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _114: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _115: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _116: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _117: &amp;ReErased u8;<br align="left"/>let _118: &amp;ReErased u8;<br align="left"/>let _119: state::last_update::PriceStatusFlags;<br align="left"/>let mut _120: &amp;ReErased state::last_update::LastUpdate;<br align="left"/>let mut _121: &amp;ReErased [core::fmt::rt::Placeholder];<br align="left"/>let mut _122: &amp;ReErased [core::fmt::rt::Placeholder; 1_usize];<br align="left"/>let _123: &amp;ReErased [core::fmt::rt::Placeholder; 1_usize];<br align="left"/>let _124: [core::fmt::rt::Placeholder; 1_usize];<br align="left"/>let mut _125: core::fmt::rt::Placeholder;<br align="left"/>let mut _126: core::fmt::rt::Alignment;<br align="left"/>let mut _127: core::fmt::rt::Count;<br align="left"/>let mut _128: core::fmt::rt::Count;<br align="left"/>let mut _129: core::fmt::rt::UnsafeArg;<br align="left"/>let mut _130: anchor_lang::error::Error;<br align="left"/>let mut _131: anchor_lang::error::AnchorError;<br align="left"/>let mut _132: std::string::String;<br align="left"/>let mut _133: &amp;ReErased LendingError;<br align="left"/>let _134: LendingError;<br align="left"/>let mut _135: u32;<br align="left"/>let mut _136: LendingError;<br align="left"/>let mut _137: std::string::String;<br align="left"/>let mut _138: &amp;ReErased LendingError;<br align="left"/>let _139: LendingError;<br align="left"/>let mut _140: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _141: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _142: anchor_lang::error::Source;<br align="left"/>let mut _143: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let _144: usize;<br align="left"/>let mut _145: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, usize&gt;;<br align="left"/>let mut _146: std::result::Result&lt;usize, anchor_lang::error::Error&gt;;<br align="left"/>let mut _147: &amp;ReErased state::obligation::Obligation;<br align="left"/>let mut _148: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _149: isize;<br align="left"/>let _150: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _151: !;<br align="left"/>let mut _152: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _153: usize;<br align="left"/>let _154: &amp;ReErased state::obligation::ObligationCollateral;<br align="left"/>let _155: usize;<br align="left"/>let mut _156: usize;<br align="left"/>let mut _157: bool;<br align="left"/>let _158: ();<br align="left"/>let mut _159: bool;<br align="left"/>let mut _160: u64;<br align="left"/>let mut _161: !;<br align="left"/>let mut _162: anchor_lang::error::Error;<br align="left"/>let mut _163: anchor_lang::error::AnchorError;<br align="left"/>let mut _164: std::string::String;<br align="left"/>let mut _165: &amp;ReErased LendingError;<br align="left"/>let _166: LendingError;<br align="left"/>let mut _167: u32;<br align="left"/>let mut _168: LendingError;<br align="left"/>let mut _169: std::string::String;<br align="left"/>let mut _170: &amp;ReErased LendingError;<br align="left"/>let _171: LendingError;<br align="left"/>let mut _172: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _173: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _174: anchor_lang::error::Source;<br align="left"/>let mut _175: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let _176: ();<br align="left"/>let mut _177: bool;<br align="left"/>let _178: ();<br align="left"/>let mut _179: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _180: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _181: &amp;ReErased state::lending_market::LendingMarket;<br align="left"/>let mut _182: &amp;ReErased state::obligation::Obligation;<br align="left"/>let mut _183: isize;<br align="left"/>let _184: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _185: !;<br align="left"/>let mut _186: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _187: ();<br align="left"/>let _188: ();<br align="left"/>let mut _189: bool;<br align="left"/>let mut _190: &amp;ReErased state::obligation::Obligation;<br align="left"/>let mut _191: bool;<br align="left"/>let mut _192: &amp;ReErased state::reserve::ReserveStatus;<br align="left"/>let _193: state::reserve::ReserveStatus;<br align="left"/>let mut _194: &amp;ReErased state::reserve::ReserveConfig;<br align="left"/>let mut _195: &amp;ReErased state::reserve::ReserveStatus;<br align="left"/>let _196: state::reserve::ReserveStatus;<br align="left"/>let mut _197: !;<br align="left"/>let mut _198: anchor_lang::error::Error;<br align="left"/>let mut _199: anchor_lang::error::AnchorError;<br align="left"/>let mut _200: std::string::String;<br align="left"/>let mut _201: &amp;ReErased LendingError;<br align="left"/>let _202: LendingError;<br align="left"/>let mut _203: u32;<br align="left"/>let mut _204: LendingError;<br align="left"/>let mut _205: std::string::String;<br align="left"/>let mut _206: &amp;ReErased LendingError;<br align="left"/>let _207: LendingError;<br align="left"/>let mut _208: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _209: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _210: anchor_lang::error::Source;<br align="left"/>let mut _211: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let _212: u8;<br align="left"/>let _213: u8;<br align="left"/>let mut _214: (u8, u8);<br align="left"/>let mut _215: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _216: std::option::Option&lt;&amp;ReErased state::lending_market::ElevationGroup&gt;;<br align="left"/>let mut _217: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::option::Option&lt;&amp;ReErased state::lending_market::ElevationGroup&gt;&gt;;<br align="left"/>let mut _218: std::result::Result&lt;std::option::Option&lt;&amp;ReErased state::lending_market::ElevationGroup&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _219: u8;<br align="left"/>let mut _220: &amp;ReErased state::lending_market::LendingMarket;<br align="left"/>let mut _221: isize;<br align="left"/>let _222: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _223: !;<br align="left"/>let mut _224: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _225: std::option::Option&lt;&amp;ReErased state::lending_market::ElevationGroup&gt;;<br align="left"/>let _226: u64;<br align="left"/>let mut _227: bool;<br align="left"/>let mut _228: bool;<br align="left"/>let mut _229: u64;<br align="left"/>let mut _230: u64;<br align="left"/>let mut _231: u64;<br align="left"/>let mut _232: bool;<br align="left"/>let mut _233: u128;<br align="left"/>let mut _234: !;<br align="left"/>let _235: ();<br align="left"/>let mut _236: &amp;ReErased str;<br align="left"/>let _237: &amp;ReErased str;<br align="left"/>let mut _238: anchor_lang::error::Error;<br align="left"/>let mut _239: anchor_lang::error::AnchorError;<br align="left"/>let mut _240: std::string::String;<br align="left"/>let mut _241: &amp;ReErased LendingError;<br align="left"/>let _242: LendingError;<br align="left"/>let mut _243: u32;<br align="left"/>let mut _244: LendingError;<br align="left"/>let mut _245: std::string::String;<br align="left"/>let mut _246: &amp;ReErased LendingError;<br align="left"/>let _247: LendingError;<br align="left"/>let mut _248: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _249: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _250: anchor_lang::error::Source;<br align="left"/>let mut _251: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let _252: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _253: &amp;ReErased state::obligation::Obligation;<br align="left"/>let mut _254: &amp;ReErased state::obligation::ObligationCollateral;<br align="left"/>let mut _255: u8;<br align="left"/>let mut _256: u8;<br align="left"/>let mut _257: state::types::LtvMaxWithdrawalCheck;<br align="left"/>let _258: ();<br align="left"/>let mut _259: bool;<br align="left"/>let mut _260: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _261: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _262: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _263: !;<br align="left"/>let mut _264: anchor_lang::error::Error;<br align="left"/>let mut _265: anchor_lang::error::AnchorError;<br align="left"/>let mut _266: std::string::String;<br align="left"/>let mut _267: &amp;ReErased LendingError;<br align="left"/>let _268: LendingError;<br align="left"/>let mut _269: u32;<br align="left"/>let mut _270: LendingError;<br align="left"/>let mut _271: std::string::String;<br align="left"/>let mut _272: &amp;ReErased LendingError;<br align="left"/>let _273: LendingError;<br align="left"/>let mut _274: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _275: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _276: anchor_lang::error::Source;<br align="left"/>let mut _277: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let _278: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _279: u128;<br align="left"/>let _280: u64;<br align="left"/>let mut _281: bool;<br align="left"/>let mut _282: u64;<br align="left"/>let _283: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _284: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _285: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _286: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _287: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _288: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _289: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _290: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _291: u128;<br align="left"/>let mut _292: u64;<br align="left"/>let _293: u64;<br align="left"/>let mut _294: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _295: u64;<br align="left"/>let mut _296: u64;<br align="left"/>let _297: u64;<br align="left"/>let mut _298: u64;<br align="left"/>let mut _299: u64;<br align="left"/>let _300: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _301: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _302: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _303: u64;<br align="left"/>let mut _304: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _305: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _306: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _307: u64;<br align="left"/>let _308: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _309: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _310: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _311: bool;<br align="left"/>let mut _312: bool;<br align="left"/>let mut _313: &amp;ReErased state::types::LtvMaxWithdrawalCheck;<br align="left"/>let mut _314: &amp;ReErased state::types::LtvMaxWithdrawalCheck;<br align="left"/>let _315: state::types::LtvMaxWithdrawalCheck;<br align="left"/>let mut _316: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _317: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _318: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _319: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _320: ();<br align="left"/>let mut _321: bool;<br align="left"/>let mut _322: !;<br align="left"/>let _323: ();<br align="left"/>let mut _324: &amp;ReErased str;<br align="left"/>let _325: &amp;ReErased str;<br align="left"/>let mut _326: &amp;ReErased std::string::String;<br align="left"/>let _327: &amp;ReErased std::string::String;<br align="left"/>let _328: std::string::String;<br align="left"/>let _329: std::string::String;<br align="left"/>let mut _330: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _331: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _332: &amp;ReErased [&amp;ReErased str; 6_usize];<br align="left"/>let _333: &amp;ReErased [&amp;ReErased str; 6_usize];<br align="left"/>let _334: [&amp;ReErased str; 6_usize];<br align="left"/>let mut _335: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _336: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 6_usize];<br align="left"/>let _337: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 6_usize];<br align="left"/>let _338: [core::fmt::rt::Argument&lt;ReErased&gt;; 6_usize];<br align="left"/>let mut _339: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _340: &amp;ReErased u64;<br align="left"/>let _341: &amp;ReErased u64;<br align="left"/>let mut _342: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _343: &amp;ReErased u64;<br align="left"/>let _344: &amp;ReErased u64;<br align="left"/>let mut _345: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _346: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _347: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _348: utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _349: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _350: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _351: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _352: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _353: utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _354: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _355: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _356: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _357: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _358: utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _359: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _360: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _361: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _362: &amp;ReErased utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _363: utils::fraction::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _364: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _365: anchor_lang::error::Error;<br align="left"/>let mut _366: anchor_lang::error::AnchorError;<br align="left"/>let mut _367: std::string::String;<br align="left"/>let mut _368: &amp;ReErased LendingError;<br align="left"/>let _369: LendingError;<br align="left"/>let mut _370: u32;<br align="left"/>let mut _371: LendingError;<br align="left"/>let mut _372: std::string::String;<br align="left"/>let mut _373: &amp;ReErased LendingError;<br align="left"/>let _374: LendingError;<br align="left"/>let mut _375: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _376: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _377: anchor_lang::error::Source;<br align="left"/>let mut _378: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let _379: ();<br align="left"/>let mut _380: bool;<br align="left"/>let mut _381: u64;<br align="left"/>let mut _382: !;<br align="left"/>let _383: ();<br align="left"/>let mut _384: &amp;ReErased str;<br align="left"/>let _385: &amp;ReErased str;<br align="left"/>let mut _386: anchor_lang::error::Error;<br align="left"/>let mut _387: anchor_lang::error::AnchorError;<br align="left"/>let mut _388: std::string::String;<br align="left"/>let mut _389: &amp;ReErased LendingError;<br align="left"/>let _390: LendingError;<br align="left"/>let mut _391: u32;<br align="left"/>let mut _392: LendingError;<br align="left"/>let mut _393: std::string::String;<br align="left"/>let mut _394: &amp;ReErased LendingError;<br align="left"/>let _395: LendingError;<br align="left"/>let mut _396: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _397: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _398: anchor_lang::error::Source;<br align="left"/>let mut _399: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let _400: u64;<br align="left"/>let _401: state::obligation::WithdrawResult;<br align="left"/>let mut _402: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, state::obligation::WithdrawResult&gt;;<br align="left"/>let mut _403: std::result::Result&lt;state::obligation::WithdrawResult, anchor_lang::error::Error&gt;;<br align="left"/>let mut _404: &amp;ReErased mut state::obligation::Obligation;<br align="left"/>let mut _405: u64;<br align="left"/>let mut _406: usize;<br align="left"/>let mut _407: isize;<br align="left"/>let _408: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _409: !;<br align="left"/>let mut _410: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _411: state::obligation::WithdrawResult;<br align="left"/>let _412: ();<br align="left"/>let mut _413: &amp;ReErased mut state::last_update::LastUpdate;<br align="left"/>let _414: ();<br align="left"/>let mut _415: bool;<br align="left"/>let mut _416: &amp;ReErased state::obligation::WithdrawResult;<br align="left"/>let mut _417: &amp;ReErased state::obligation::WithdrawResult;<br align="left"/>let _418: state::obligation::WithdrawResult;<br align="left"/>let _419: ();<br align="left"/>let mut _420: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _421: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _422: u64;<br align="left"/>let mut _423: u8;<br align="left"/>let mut _424: &amp;ReErased mut state::reserve::Reserve;<br align="left"/>let mut _425: isize;<br align="left"/>let _426: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _427: !;<br align="left"/>let mut _428: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _429: ();<br align="left"/>let _430: ();<br align="left"/>let mut _431: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _432: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _433: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _434: &amp;ReErased state::reserve::CollateralExchangeRate;<br align="left"/>let _435: state::reserve::CollateralExchangeRate;<br align="left"/>let mut _436: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _437: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _438: u64;<br align="left"/>let mut _439: &amp;ReErased state::obligation::Obligation;<br align="left"/>let mut _440: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _441: u8;<br align="left"/>let mut _442: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _443: u128;<br align="left"/>let _444: usize;<br align="left"/>let mut _445: usize;<br align="left"/>let mut _446: bool;<br align="left"/>let mut _447: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _448: u128;<br align="left"/>let mut _449: isize;<br align="left"/>let _450: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _451: !;<br align="left"/>let mut _452: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _453: ();<br align="left"/>let mut _454: u64;<br align="left"/>let mut _455: &amp;ReErased LendingError;<br align="left"/>let mut _456: &amp;ReErased LendingError;<br align="left"/>let mut _457: &amp;ReErased LendingError;<br align="left"/>let mut _458: &amp;ReErased LendingError;<br align="left"/>let mut _459: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _460: &amp;ReErased LendingError;<br align="left"/>let mut _461: &amp;ReErased LendingError;<br align="left"/>let mut _462: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _463: &amp;ReErased LendingError;<br align="left"/>let mut _464: &amp;ReErased LendingError;<br align="left"/>let mut _465: &amp;ReErased LendingError;<br align="left"/>let mut _466: &amp;ReErased LendingError;<br align="left"/>let mut _467: &amp;ReErased state::obligation::WithdrawResult;<br align="left"/>let mut _468: &amp;ReErased LendingError;<br align="left"/>let mut _469: &amp;ReErased LendingError;<br align="left"/>let mut _470: &amp;ReErased LendingError;<br align="left"/>let mut _471: &amp;ReErased LendingError;<br align="left"/>let mut _472: &amp;ReErased LendingError;<br align="left"/>let mut _473: &amp;ReErased LendingError;<br align="left"/>let mut _474: &amp;ReErased LendingError;<br align="left"/>let mut _475: &amp;ReErased LendingError;<br align="left"/>let mut _476: &amp;ReErased [&amp;ReErased str; 6_usize];<br align="left"/>let mut _477: &amp;ReErased state::types::LtvMaxWithdrawalCheck;<br align="left"/>let mut _478: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _479: &amp;ReErased state::reserve::ReserveStatus;<br align="left"/>let mut _480: bool;<br align="left"/>let mut _481: isize;<br align="left"/>let mut _482: isize;<br align="left"/>let mut _483: isize;<br align="left"/>let mut _484: isize;<br align="left"/>let mut _485: isize;<br align="left"/>let mut _486: isize;<br align="left"/>let mut _487: isize;<br align="left"/>let mut _488: isize;<br align="left"/>let mut _489: isize;<br align="left"/>let mut _490: isize;<br align="left"/>let mut _491: isize;<br align="left"/>let mut _492: isize;<br align="left"/>let mut _493: isize;<br align="left"/>let mut _494: isize;<br align="left"/>let mut _495: isize;<br align="left"/>let mut _496: isize;<br align="left"/>let mut _497: isize;<br align="left"/>let mut _498: isize;<br align="left"/>let mut _499: isize;<br align="left"/>let mut _500: isize;<br align="left"/>let mut _501: isize;<br align="left"/>let mut _502: isize;<br align="left"/>let mut _503: isize;<br align="left"/>let mut _504: isize;<br align="left"/>let mut _505: isize;<br align="left"/>let mut _506: isize;<br align="left"/>let mut _507: isize;<br align="left"/>let mut _508: isize;<br align="left"/>let mut _509: isize;<br align="left"/>let mut _510: isize;<br align="left"/>let mut _511: isize;<br align="left"/>let mut _512: isize;<br align="left"/>let mut _513: isize;<br align="left"/>let mut _514: isize;<br align="left"/>let mut _515: isize;<br align="left"/>let mut _516: isize;<br align="left"/>let mut _517: isize;<br align="left"/>let mut _518: isize;<br align="left"/>let mut _519: isize;<br align="left"/>let mut _520: isize;<br align="left"/>let mut _521: isize;<br align="left"/>let mut _522: isize;<br align="left"/>let mut _523: isize;<br align="left"/>let mut _524: isize;<br align="left"/>debug lending_market =&gt; _1;<br align="left"/>debug withdraw_reserve =&gt; _2;<br align="left"/>debug obligation =&gt; _3;<br align="left"/>debug collateral_amount =&gt; _4;<br align="left"/>debug slot =&gt; _5;<br align="left"/>debug withdraw_reserve_pk =&gt; _6;<br align="left"/>debug ltv_max_withdrawal_check =&gt; _7;<br align="left"/>debug is_borrows_empty =&gt; _26;<br align="left"/>debug required_price_status =&gt; _28;<br align="left"/>debug residual =&gt; _38;<br align="left"/>debug val =&gt; _41;<br align="left"/>debug res =&gt; _49;<br align="left"/>debug residual =&gt; _95;<br align="left"/>debug val =&gt; _98;<br align="left"/>debug res =&gt; _106;<br align="left"/>debug collateral_index =&gt; _144;<br align="left"/>debug residual =&gt; _150;<br align="left"/>debug val =&gt; _153;<br align="left"/>debug collateral =&gt; _154;<br align="left"/>debug residual =&gt; _184;<br align="left"/>debug val =&gt; _187;<br align="left"/>debug reserve_max_ltv_pct =&gt; _212;<br align="left"/>debug reserve_liq_threshold_ltv_pct =&gt; _213;<br align="left"/>debug residual =&gt; _222;<br align="left"/>debug val =&gt; _225;<br align="left"/>debug withdraw_amount =&gt; _226;<br align="left"/>debug max_withdraw_value =&gt; _252;<br align="left"/>debug collateral_value =&gt; _278;<br align="left"/>debug withdraw_amount =&gt; _280;<br align="left"/>debug withdraw_value =&gt; _283;<br align="left"/>debug withdraw_ratio =&gt; _286;<br align="left"/>debug ratioed_amount_f =&gt; _289;<br align="left"/>debug ratioed_amount =&gt; _293;<br align="left"/>debug withdraw_amount =&gt; _297;<br align="left"/>debug withdraw_ratio =&gt; _300;<br align="left"/>debug withdraw_value =&gt; _308;<br align="left"/>debug exceeds_max_withdraw_value =&gt; _311;<br align="left"/>debug res =&gt; _329;<br align="left"/>debug previous_debt_in_elevation_group =&gt; _400;<br align="left"/>debug is_full_withdrawal =&gt; _401;<br align="left"/>debug residual =&gt; _408;<br align="left"/>debug val =&gt; _411;<br align="left"/>debug residual =&gt; _426;<br align="left"/>debug val =&gt; _429;<br align="left"/>debug residual =&gt; _450;<br align="left"/>debug val =&gt; _453;<br align="left"/>>;
    bb0__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_480 = const false<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = _4<br/>_9 = Eq(move _10, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _9)</td></tr></table>>];
    bb1__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_456 = const _<br/>_15 = &amp;(*_456)<br/></td></tr><tr><td align="left">_14 = LendingError::name(move _15)</td></tr></table>>];
    bb2__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = LendingError::InvalidAmount<br/></td></tr><tr><td align="left">_17 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _18)</td></tr></table>>];
    bb3__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_455 = const _<br/>_20 = &amp;(*_455)<br/></td></tr><tr><td align="left">_19 = &lt;LendingError as ToString&gt;::to_string(move _20)</td></tr></table>>];
    bb4__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_24 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\lending_market\\lending_operations.rs&quot;, line: const 468_u32 }<br/>_23 = anchor_lang::error::ErrorOrigin::Source(move _24)<br/>StorageDead(_24)<br/>_22 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _23)<br/>StorageDead(_23)<br/>StorageLive(_25)<br/>_25 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_13 = anchor_lang::error::AnchorError { error_name: move _14, error_code_number: move _17, error_msg: move _19, error_origin: move _22, compared_values: move _25 }<br/>StorageDead(_25)<br/>StorageDead(_22)<br/>StorageDead(_19)<br/>StorageDead(_17)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">_12 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _13)</td></tr></table>>];
    bb5__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>_0 = std::result::Result::&lt;u64, anchor_lang::error::Error&gt;::Err(move _12)<br/>StorageDead(_12)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb6__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>_8 = const ()<br/>StorageDead(_9)<br/>StorageDead(_8)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_27 = &amp;(*_3)<br/></td></tr><tr><td align="left">_26 = obligation::Obligation::active_borrows_empty(move _27)</td></tr></table>>];
    bb7__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_29 = _26<br/></td></tr><tr><td align="left">switchInt(move _29)</td></tr></table>>];
    bb8__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">_28 = const _<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">_28 = const _<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>_34 = &amp;((*_2).1: state::last_update::LastUpdate)<br/>StorageLive(_35)<br/>_35 = _5<br/>StorageLive(_36)<br/>_36 = _28<br/></td></tr><tr><td align="left">_33 = last_update::LastUpdate::is_stale(move _34, move _35, move _36)</td></tr></table>>];
    bb11__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_35)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">_32 = &lt;std::result::Result&lt;bool, anchor_lang::error::Error&gt; as Try&gt;::branch(move _33)</td></tr></table>>];
    bb12__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>_37 = discriminant(_32)<br/></td></tr><tr><td align="left">switchInt(move _37)</td></tr></table>>];
    bb13__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_41)<br/>_41 = ((_32 as Continue).0: bool)<br/>_31 = _41<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">switchInt(move _31)</td></tr></table>>];
    bb14__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb15__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_38)<br/>_38 = move ((_32 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_40)<br/>_40 = move _38<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _40)</td></tr></table>>];
    bb16__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageDead(_38)<br/>_515 = discriminant(_32)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>_61 = &amp;(_62.0: u8)<br/>_60 = &amp;(*_61)<br/></td></tr><tr><td align="left">_59 = core::fmt::rt::Argument::&lt;'_&gt;::new_binary::&lt;u8&gt;(move _60)</td></tr></table>>];
    bb18__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>_58 = [move _59]<br/>StorageDead(_59)<br/>_57 = &amp;_58<br/>_56 = &amp;(*_57)<br/>_55 = move _56 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_56)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>_69 = core::fmt::rt::Alignment::Unknown<br/>StorageLive(_70)<br/>_70 = core::fmt::rt::Count::Implied<br/>StorageLive(_71)<br/>_71 = core::fmt::rt::Count::Is(const 8_usize)<br/></td></tr><tr><td align="left">_68 = core::fmt::rt::Placeholder::new(const 0_usize, const ' ', move _69, const 8_u32, move _70, move _71)</td></tr></table>>];
    bb19__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageDead(_70)<br/>StorageDead(_69)<br/>_67 = [move _68]<br/>StorageDead(_68)<br/>_66 = &amp;_67<br/>_65 = &amp;(*_66)<br/>_64 = move _65 as &amp;[core::fmt::rt::Placeholder] (PointerCoercion(Unsize))<br/>StorageDead(_65)<br/>StorageLive(_72)<br/></td></tr><tr><td align="left">_72 = core::fmt::rt::UnsafeArg::new()</td></tr></table>>];
    bb20__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left">_50 = Arguments::&lt;'_&gt;::new_v1_formatted(move _51, move _55, move _64, move _72)</td></tr></table>>];
    bb21__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_64)<br/>StorageDead(_55)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">_49 = format(move _50)</td></tr></table>>];
    bb22__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageDead(_67)<br/>StorageDead(_66)<br/>StorageDead(_62)<br/>StorageDead(_61)<br/>StorageDead(_58)<br/>StorageDead(_57)<br/>StorageDead(_53)<br/>_48 = move _49<br/>StorageDead(_49)<br/>_47 = &amp;_48<br/>_46 = &amp;(*_47)<br/></td></tr><tr><td align="left">_45 = &lt;std::string::String as Deref&gt;::deref(move _46)</td></tr></table>>];
    bb23__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">_44 = &amp;(*_45)<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">_43 = solana_program::log::sol_log(move _44)</td></tr></table>>];
    bb24__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/></td></tr><tr><td align="left">drop(_48)</td></tr></table>>];
    bb25__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageDead(_47)<br/>StorageDead(_45)<br/>StorageDead(_43)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>_458 = const _<br/>_76 = &amp;(*_458)<br/></td></tr><tr><td align="left">_75 = LendingError::name(move _76)</td></tr></table>>];
    bb26__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>_79 = LendingError::ReserveStale<br/></td></tr><tr><td align="left">_78 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _79)</td></tr></table>>];
    bb27__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>_457 = const _<br/>_81 = &amp;(*_457)<br/></td></tr><tr><td align="left">_80 = &lt;LendingError as ToString&gt;::to_string(move _81)</td></tr></table>>];
    bb28__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>_85 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\lending_market\\lending_operations.rs&quot;, line: const 487_u32 }<br/>_84 = anchor_lang::error::ErrorOrigin::Source(move _85)<br/>StorageDead(_85)<br/>_83 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _84)<br/>StorageDead(_84)<br/>StorageLive(_86)<br/>_86 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_74 = anchor_lang::error::AnchorError { error_name: move _75, error_code_number: move _78, error_msg: move _80, error_origin: move _83, compared_values: move _86 }<br/>StorageDead(_86)<br/>StorageDead(_83)<br/>StorageDead(_80)<br/>StorageDead(_78)<br/>StorageDead(_75)<br/></td></tr><tr><td align="left">_73 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _74)</td></tr></table>>];
    bb29__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>_0 = std::result::Result::&lt;u64, anchor_lang::error::Error&gt;::Err(move _73)<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageDead(_92)<br/>StorageDead(_91)<br/></td></tr><tr><td align="left">_89 = &lt;std::result::Result&lt;bool, anchor_lang::error::Error&gt; as Try&gt;::branch(move _90)</td></tr></table>>];
    bb31__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>_94 = discriminant(_89)<br/></td></tr><tr><td align="left">switchInt(move _94)</td></tr></table>>];
    bb32__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_98)<br/>_98 = ((_89 as Continue).0: bool)<br/>_88 = _98<br/>StorageDead(_98)<br/></td></tr><tr><td align="left">switchInt(move _88)</td></tr></table>>];
    bb33__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageLive(_95)<br/>_95 = move ((_89 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_97)<br/>_97 = move _95<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _97)</td></tr></table>>];
    bb34__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>StorageDead(_95)<br/>_513 = discriminant(_89)<br/>StorageDead(_89)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/>_118 = &amp;(_119.0: u8)<br/>_117 = &amp;(*_118)<br/></td></tr><tr><td align="left">_116 = core::fmt::rt::Argument::&lt;'_&gt;::new_binary::&lt;u8&gt;(move _117)</td></tr></table>>];
    bb36__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/>_115 = [move _116]<br/>StorageDead(_116)<br/>_114 = &amp;_115<br/>_113 = &amp;(*_114)<br/>_112 = move _113 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_113)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>_126 = core::fmt::rt::Alignment::Unknown<br/>StorageLive(_127)<br/>_127 = core::fmt::rt::Count::Implied<br/>StorageLive(_128)<br/>_128 = core::fmt::rt::Count::Is(const 8_usize)<br/></td></tr><tr><td align="left">_125 = core::fmt::rt::Placeholder::new(const 0_usize, const ' ', move _126, const 8_u32, move _127, move _128)</td></tr></table>>];
    bb37__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>StorageDead(_127)<br/>StorageDead(_126)<br/>_124 = [move _125]<br/>StorageDead(_125)<br/>_123 = &amp;_124<br/>_122 = &amp;(*_123)<br/>_121 = move _122 as &amp;[core::fmt::rt::Placeholder] (PointerCoercion(Unsize))<br/>StorageDead(_122)<br/>StorageLive(_129)<br/></td></tr><tr><td align="left">_129 = core::fmt::rt::UnsafeArg::new()</td></tr></table>>];
    bb38__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left">_107 = Arguments::&lt;'_&gt;::new_v1_formatted(move _108, move _112, move _121, move _129)</td></tr></table>>];
    bb39__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_129)<br/>StorageDead(_121)<br/>StorageDead(_112)<br/>StorageDead(_108)<br/></td></tr><tr><td align="left">_106 = format(move _107)</td></tr></table>>];
    bb40__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>StorageDead(_124)<br/>StorageDead(_123)<br/>StorageDead(_119)<br/>StorageDead(_118)<br/>StorageDead(_115)<br/>StorageDead(_114)<br/>StorageDead(_110)<br/>_105 = move _106<br/>StorageDead(_106)<br/>_104 = &amp;_105<br/>_103 = &amp;(*_104)<br/></td></tr><tr><td align="left">_102 = &lt;std::string::String as Deref&gt;::deref(move _103)</td></tr></table>>];
    bb41__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">_101 = &amp;(*_102)<br/>StorageDead(_103)<br/></td></tr><tr><td align="left">_100 = solana_program::log::sol_log(move _101)</td></tr></table>>];
    bb42__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/></td></tr><tr><td align="left">drop(_105)</td></tr></table>>];
    bb43__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/>StorageDead(_104)<br/>StorageDead(_102)<br/>StorageDead(_100)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>_461 = const _<br/>_133 = &amp;(*_461)<br/></td></tr><tr><td align="left">_132 = LendingError::name(move _133)</td></tr></table>>];
    bb44__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>_136 = LendingError::ObligationStale<br/></td></tr><tr><td align="left">_135 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _136)</td></tr></table>>];
    bb45__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_136)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>_460 = const _<br/>_138 = &amp;(*_460)<br/></td></tr><tr><td align="left">_137 = &lt;LendingError as ToString&gt;::to_string(move _138)</td></tr></table>>];
    bb46__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>_142 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\lending_market\\lending_operations.rs&quot;, line: const 498_u32 }<br/>_141 = anchor_lang::error::ErrorOrigin::Source(move _142)<br/>StorageDead(_142)<br/>_140 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _141)<br/>StorageDead(_141)<br/>StorageLive(_143)<br/>_143 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_131 = anchor_lang::error::AnchorError { error_name: move _132, error_code_number: move _135, error_msg: move _137, error_origin: move _140, compared_values: move _143 }<br/>StorageDead(_143)<br/>StorageDead(_140)<br/>StorageDead(_137)<br/>StorageDead(_135)<br/>StorageDead(_132)<br/></td></tr><tr><td align="left">_130 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _131)</td></tr></table>>];
    bb47__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_131)<br/>_0 = std::result::Result::&lt;u64, anchor_lang::error::Error&gt;::Err(move _130)<br/>StorageDead(_130)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_148)<br/>StorageDead(_147)<br/></td></tr><tr><td align="left">_145 = &lt;std::result::Result&lt;usize, anchor_lang::error::Error&gt; as Try&gt;::branch(move _146)</td></tr></table>>];
    bb49__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_146)<br/>_149 = discriminant(_145)<br/></td></tr><tr><td align="left">switchInt(move _149)</td></tr></table>>];
    bb50__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageLive(_153)<br/>_153 = ((_145 as Continue).0: usize)<br/>_144 = _153<br/>StorageDead(_153)<br/>_489 = discriminant(_145)<br/>StorageDead(_145)<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>_155 = _144<br/>_156 = Len(((*_3).4: [state::obligation::ObligationCollateral; 8]))<br/>_157 = Lt(_155, _156)<br/></td></tr><tr><td align="left">assert(move _157, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _156, _155)</td></tr></table>>];
    bb51__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageLive(_150)<br/>_150 = move ((_145 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_152)<br/>_152 = move _150<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _152)</td></tr></table>>];
    bb52__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_152)<br/>StorageDead(_150)<br/>_511 = discriminant(_145)<br/>StorageDead(_145)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">_154 = &amp;((*_3).4: [state::obligation::ObligationCollateral; 8])[_155]<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>_160 = ((*_154).1: u64)<br/>_159 = Eq(move _160, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _159)</td></tr></table>>];
    bb54__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_160)<br/>StorageLive(_162)<br/>StorageLive(_163)<br/>StorageLive(_164)<br/>StorageLive(_165)<br/>_464 = const _<br/>_165 = &amp;(*_464)<br/></td></tr><tr><td align="left">_164 = LendingError::name(move _165)</td></tr></table>>];
    bb55__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_165)<br/>StorageLive(_167)<br/>StorageLive(_168)<br/>_168 = LendingError::ObligationCollateralEmpty<br/></td></tr><tr><td align="left">_167 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _168)</td></tr></table>>];
    bb56__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_168)<br/>StorageLive(_169)<br/>StorageLive(_170)<br/>_463 = const _<br/>_170 = &amp;(*_463)<br/></td></tr><tr><td align="left">_169 = &lt;LendingError as ToString&gt;::to_string(move _170)</td></tr></table>>];
    bb57__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_170)<br/>StorageLive(_172)<br/>StorageLive(_173)<br/>StorageLive(_174)<br/>_174 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\lending_market\\lending_operations.rs&quot;, line: const 504_u32 }<br/>_173 = anchor_lang::error::ErrorOrigin::Source(move _174)<br/>StorageDead(_174)<br/>_172 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _173)<br/>StorageDead(_173)<br/>StorageLive(_175)<br/>_175 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_163 = anchor_lang::error::AnchorError { error_name: move _164, error_code_number: move _167, error_msg: move _169, error_origin: move _172, compared_values: move _175 }<br/>StorageDead(_175)<br/>StorageDead(_172)<br/>StorageDead(_169)<br/>StorageDead(_167)<br/>StorageDead(_164)<br/></td></tr><tr><td align="left">_162 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _163)</td></tr></table>>];
    bb58__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_163)<br/>_0 = std::result::Result::&lt;u64, anchor_lang::error::Error&gt;::Err(move _162)<br/>StorageDead(_162)<br/>StorageDead(_159)<br/>StorageDead(_158)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_160)<br/>_158 = const ()<br/>StorageDead(_159)<br/>StorageDead(_158)<br/>StorageLive(_176)<br/>StorageLive(_177)<br/>_177 = _26<br/></td></tr><tr><td align="left">switchInt(move _177)</td></tr></table>>];
    bb60__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">_176 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb61__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageLive(_178)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>StorageLive(_181)<br/>_181 = &amp;(*_1)<br/>StorageLive(_182)<br/>_182 = &amp;(*_3)<br/></td></tr><tr><td align="left">_180 = check_elevation_group_borrowing_enabled(move _181, move _182)</td></tr></table>>];
    bb62__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_182)<br/>StorageDead(_181)<br/></td></tr><tr><td align="left">_179 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _180)</td></tr></table>>];
    bb63__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_180)<br/>_183 = discriminant(_179)<br/></td></tr><tr><td align="left">switchInt(move _183)</td></tr></table>>];
    bb64__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageLive(_187)<br/>_187 = ((_179 as Continue).0: ())<br/>_178 = _187<br/>StorageDead(_187)<br/>_491 = discriminant(_179)<br/>StorageDead(_179)<br/>StorageDead(_178)<br/>_176 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb65__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageLive(_184)<br/>_184 = move ((_179 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_186)<br/>_186 = move _184<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _186)</td></tr></table>>];
    bb66__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_186)<br/>StorageDead(_184)<br/>_509 = discriminant(_179)<br/>StorageDead(_179)<br/>StorageDead(_178)<br/>StorageDead(_177)<br/>StorageDead(_176)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb67__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_177)<br/>StorageDead(_176)<br/>StorageLive(_188)<br/>StorageLive(_189)<br/>StorageLive(_190)<br/>_190 = &amp;(*_3)<br/></td></tr><tr><td align="left">_189 = obligation::Obligation::has_obsolete_reserves(move _190)</td></tr></table>>];
    bb68__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left">switchInt(move _189)</td></tr></table>>];
    bb69__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_190)<br/>StorageLive(_191)<br/>StorageLive(_192)<br/>StorageLive(_193)<br/>StorageLive(_194)<br/>_194 = &amp;((*_2).9: state::reserve::ReserveConfig)<br/></td></tr><tr><td align="left">_193 = reserve::ReserveConfig::status(move _194)</td></tr></table>>];
    bb70__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">_192 = &amp;_193<br/>StorageDead(_194)<br/>StorageLive(_195)<br/>_479 = const _<br/>_195 = &amp;(*_479)<br/></td></tr><tr><td align="left">_191 = &lt;reserve::ReserveStatus as PartialEq&gt;::eq(move _192, move _195)</td></tr></table>>];
    bb71__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left">switchInt(move _191)</td></tr></table>>];
    bb72__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_195)<br/>StorageDead(_193)<br/>StorageDead(_192)<br/>StorageLive(_198)<br/>StorageLive(_199)<br/>StorageLive(_200)<br/>StorageLive(_201)<br/>_466 = const _<br/>_201 = &amp;(*_466)<br/></td></tr><tr><td align="left">_200 = LendingError::name(move _201)</td></tr></table>>];
    bb73__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_201)<br/>StorageLive(_203)<br/>StorageLive(_204)<br/>_204 = LendingError::ObligationInObsoleteReserve<br/></td></tr><tr><td align="left">_203 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _204)</td></tr></table>>];
    bb74__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_204)<br/>StorageLive(_205)<br/>StorageLive(_206)<br/>_465 = const _<br/>_206 = &amp;(*_465)<br/></td></tr><tr><td align="left">_205 = &lt;LendingError as ToString&gt;::to_string(move _206)</td></tr></table>>];
    bb75__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_206)<br/>StorageLive(_208)<br/>StorageLive(_209)<br/>StorageLive(_210)<br/>_210 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\lending_market\\lending_operations.rs&quot;, line: const 514_u32 }<br/>_209 = anchor_lang::error::ErrorOrigin::Source(move _210)<br/>StorageDead(_210)<br/>_208 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _209)<br/>StorageDead(_209)<br/>StorageLive(_211)<br/>_211 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_199 = anchor_lang::error::AnchorError { error_name: move _200, error_code_number: move _203, error_msg: move _205, error_origin: move _208, compared_values: move _211 }<br/>StorageDead(_211)<br/>StorageDead(_208)<br/>StorageDead(_205)<br/>StorageDead(_203)<br/>StorageDead(_200)<br/></td></tr><tr><td align="left">_198 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _199)</td></tr></table>>];
    bb76__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_199)<br/>_0 = std::result::Result::&lt;u64, anchor_lang::error::Error&gt;::Err(move _198)<br/>StorageDead(_198)<br/>StorageDead(_191)<br/>StorageDead(_189)<br/>StorageDead(_188)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb77__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_195)<br/>StorageDead(_193)<br/>StorageDead(_192)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb78__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_190)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb79__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">_188 = const ()<br/>StorageDead(_191)<br/>StorageDead(_189)<br/>StorageDead(_188)<br/>StorageLive(_214)<br/>StorageLive(_215)<br/>_215 = &amp;(*_2)<br/>StorageLive(_216)<br/>StorageLive(_217)<br/>StorageLive(_218)<br/>StorageLive(_219)<br/>_219 = ((*_3).14: u8)<br/>StorageLive(_220)<br/>_220 = &amp;(*_1)<br/></td></tr><tr><td align="left">_218 = get_elevation_group(move _219, move _220)</td></tr></table>>];
    bb80__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_220)<br/>StorageDead(_219)<br/></td></tr><tr><td align="left">_217 = &lt;std::result::Result&lt;std::option::Option&lt;&amp;state::lending_market::ElevationGroup&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _218)</td></tr></table>>];
    bb81__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">_480 = const true<br/>StorageDead(_218)<br/>_221 = discriminant(_217)<br/></td></tr><tr><td align="left">switchInt(move _221)</td></tr></table>>];
    bb82__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageLive(_225)<br/>_225 = ((_217 as Continue).0: std::option::Option&lt;&amp;state::lending_market::ElevationGroup&gt;)<br/>_216 = _225<br/>StorageDead(_225)<br/></td></tr><tr><td align="left">_214 = get_max_ltv_and_liquidation_threshold(move _215, move _216)</td></tr></table>>];
    bb83__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageLive(_222)<br/>_222 = move ((_217 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_224)<br/>_224 = move _222<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _224)</td></tr></table>>];
    bb84__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_224)<br/>StorageDead(_222)<br/>StorageDead(_216)<br/>StorageDead(_215)<br/>_507 = discriminant(_217)<br/>_480 = const false<br/>StorageDead(_217)<br/>StorageDead(_214)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb85__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_216)<br/>StorageDead(_215)<br/>StorageLive(_212)<br/>_212 = (_214.0: u8)<br/>StorageLive(_213)<br/>_213 = (_214.1: u8)<br/>_493 = discriminant(_217)<br/>_480 = const false<br/>StorageDead(_217)<br/>StorageDead(_214)<br/>StorageLive(_226)<br/>StorageLive(_227)<br/>_227 = _26<br/></td></tr><tr><td align="left">switchInt(move _227)</td></tr></table>>];
    bb86__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageLive(_228)<br/>StorageLive(_229)<br/>_229 = _4<br/>_228 = Eq(move _229, const _)<br/></td></tr><tr><td align="left">switchInt(move _228)</td></tr></table>>];
    bb87__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_229)<br/>_226 = ((*_154).1: u64)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb88__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_229)<br/>StorageLive(_230)<br/>_230 = ((*_154).1: u64)<br/>StorageLive(_231)<br/>_231 = _4<br/></td></tr><tr><td align="left">_226 = &lt;u64 as Ord&gt;::min(move _230, move _231)</td></tr></table>>];
    bb89__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_231)<br/>StorageDead(_230)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb90__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_228)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb91__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageLive(_232)<br/>StorageLive(_233)<br/>_233 = ((*_3).6: u128)<br/>_232 = Eq(move _233, const 0_u128)<br/></td></tr><tr><td align="left">switchInt(move _232)</td></tr></table>>];
    bb92__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_233)<br/>StorageLive(_235)<br/>StorageLive(_236)<br/>StorageLive(_237)<br/>_237 = const &quot;Obligation deposited value is zero&quot;<br/>_236 = &amp;(*_237)<br/></td></tr><tr><td align="left">_235 = solana_program::log::sol_log(move _236)</td></tr></table>>];
    bb93__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_236)<br/>StorageDead(_237)<br/>StorageDead(_235)<br/>StorageLive(_238)<br/>StorageLive(_239)<br/>StorageLive(_240)<br/>StorageLive(_241)<br/>_469 = const _<br/>_241 = &amp;(*_469)<br/></td></tr><tr><td align="left">_240 = LendingError::name(move _241)</td></tr></table>>];
    bb94__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_241)<br/>StorageLive(_243)<br/>StorageLive(_244)<br/>_244 = LendingError::ObligationDepositsZero<br/></td></tr><tr><td align="left">_243 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _244)</td></tr></table>>];
    bb95__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_244)<br/>StorageLive(_245)<br/>StorageLive(_246)<br/>_468 = const _<br/>_246 = &amp;(*_468)<br/></td></tr><tr><td align="left">_245 = &lt;LendingError as ToString&gt;::to_string(move _246)</td></tr></table>>];
    bb96__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_246)<br/>StorageLive(_248)<br/>StorageLive(_249)<br/>StorageLive(_250)<br/>_250 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\lending_market\\lending_operations.rs&quot;, line: const 533_u32 }<br/>_249 = anchor_lang::error::ErrorOrigin::Source(move _250)<br/>StorageDead(_250)<br/>_248 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _249)<br/>StorageDead(_249)<br/>StorageLive(_251)<br/>_251 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_239 = anchor_lang::error::AnchorError { error_name: move _240, error_code_number: move _243, error_msg: move _245, error_origin: move _248, compared_values: move _251 }<br/>StorageDead(_251)<br/>StorageDead(_248)<br/>StorageDead(_245)<br/>StorageDead(_243)<br/>StorageDead(_240)<br/></td></tr><tr><td align="left">_238 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _239)</td></tr></table>>];
    bb97__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_239)<br/>_0 = std::result::Result::&lt;u64, anchor_lang::error::Error&gt;::Err(move _238)<br/>StorageDead(_238)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb98__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_233)<br/>StorageLive(_252)<br/>StorageLive(_253)<br/>_253 = &amp;(*_3)<br/>StorageLive(_254)<br/>_254 = &amp;(*_154)<br/>StorageLive(_255)<br/>_255 = _212<br/>StorageLive(_256)<br/>_256 = _213<br/>StorageLive(_257)<br/>_257 = _7<br/></td></tr><tr><td align="left">_252 = obligation::Obligation::max_withdraw_value(move _253, move _254, move _255, move _256, move _257)</td></tr></table>>];
    bb99__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageDead(_257)<br/>StorageDead(_256)<br/>StorageDead(_255)<br/>StorageDead(_254)<br/>StorageDead(_253)<br/>StorageLive(_258)<br/>StorageLive(_259)<br/>StorageLive(_260)<br/>_260 = &amp;_252<br/>StorageLive(_261)<br/>_478 = const _<br/>_261 = &amp;(*_478)<br/></td></tr><tr><td align="left">_259 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as PartialEq&gt;::eq(move _260, move _261)</td></tr></table>>];
    bb100__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left">switchInt(move _259)</td></tr></table>>];
    bb101__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_261)<br/>StorageDead(_260)<br/>StorageLive(_264)<br/>StorageLive(_265)<br/>StorageLive(_266)<br/>StorageLive(_267)<br/>_471 = const _<br/>_267 = &amp;(*_471)<br/></td></tr><tr><td align="left">_266 = LendingError::name(move _267)</td></tr></table>>];
    bb102__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_267)<br/>StorageLive(_269)<br/>StorageLive(_270)<br/>_270 = LendingError::MaximumWithdrawValueZero<br/></td></tr><tr><td align="left">_269 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _270)</td></tr></table>>];
    bb103__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_270)<br/>StorageLive(_271)<br/>StorageLive(_272)<br/>_470 = const _<br/>_272 = &amp;(*_470)<br/></td></tr><tr><td align="left">_271 = &lt;LendingError as ToString&gt;::to_string(move _272)</td></tr></table>>];
    bb104__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_272)<br/>StorageLive(_274)<br/>StorageLive(_275)<br/>StorageLive(_276)<br/>_276 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\lending_market\\lending_operations.rs&quot;, line: const 543_u32 }<br/>_275 = anchor_lang::error::ErrorOrigin::Source(move _276)<br/>StorageDead(_276)<br/>_274 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _275)<br/>StorageDead(_275)<br/>StorageLive(_277)<br/>_277 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_265 = anchor_lang::error::AnchorError { error_name: move _266, error_code_number: move _269, error_msg: move _271, error_origin: move _274, compared_values: move _277 }<br/>StorageDead(_277)<br/>StorageDead(_274)<br/>StorageDead(_271)<br/>StorageDead(_269)<br/>StorageDead(_266)<br/></td></tr><tr><td align="left">_264 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _265)</td></tr></table>>];
    bb105__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_265)<br/>_0 = std::result::Result::&lt;u64, anchor_lang::error::Error&gt;::Err(move _264)<br/>StorageDead(_264)<br/>StorageDead(_259)<br/>StorageDead(_258)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb106__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_261)<br/>StorageDead(_260)<br/>_258 = const ()<br/>StorageDead(_259)<br/>StorageDead(_258)<br/>StorageLive(_278)<br/>StorageLive(_279)<br/>_279 = ((*_154).2: u128)<br/></td></tr><tr><td align="left">_278 = FixedU128::&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;::from_bits(move _279)</td></tr></table>>];
    bb107__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_279)<br/>StorageLive(_280)<br/>StorageLive(_281)<br/>StorageLive(_282)<br/>_282 = _4<br/>_281 = Eq(move _282, const _)<br/></td></tr><tr><td align="left">switchInt(move _281)</td></tr></table>>];
    bb108__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageDead(_282)<br/>StorageLive(_283)<br/>StorageLive(_284)<br/>_284 = _252<br/>StorageLive(_285)<br/>_285 = _278<br/></td></tr><tr><td align="left">_283 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as Ord&gt;::min(move _284, move _285)</td></tr></table>>];
    bb109__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageDead(_285)<br/>StorageDead(_284)<br/>StorageLive(_286)<br/>StorageLive(_287)<br/>_287 = _283<br/>StorageLive(_288)<br/>_288 = _278<br/></td></tr><tr><td align="left">_286 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as std::ops::Div&gt;::div(move _287, move _288)</td></tr></table>>];
    bb110__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_288)<br/>StorageDead(_287)<br/>StorageLive(_289)<br/>StorageLive(_290)<br/>_290 = _286<br/>StorageLive(_291)<br/>StorageLive(_292)<br/>_292 = ((*_154).1: u64)<br/></td></tr><tr><td align="left">_291 = &lt;u128 as From&lt;u64&gt;&gt;::from(move _292)</td></tr></table>>];
    bb111__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_292)<br/></td></tr><tr><td align="left">_289 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as std::ops::Mul&lt;u128&gt;&gt;::mul(move _290, move _291)</td></tr></table>>];
    bb112__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageDead(_291)<br/>StorageDead(_290)<br/>StorageLive(_293)<br/>StorageLive(_294)<br/>_294 = &amp;_289<br/></td></tr><tr><td align="left">_293 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as utils::fraction::FractionExtra&gt;::to_floor::&lt;u64&gt;(move _294)</td></tr></table>>];
    bb113__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageDead(_294)<br/>StorageLive(_295)<br/>_295 = ((*_154).1: u64)<br/>StorageLive(_296)<br/>_296 = _293<br/></td></tr><tr><td align="left">_280 = std::cmp::min::&lt;u64&gt;(move _295, move _296)</td></tr></table>>];
    bb114__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageDead(_296)<br/>StorageDead(_295)<br/>StorageDead(_293)<br/>StorageDead(_289)<br/>StorageDead(_286)<br/>StorageDead(_283)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb115__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageDead(_282)<br/>StorageLive(_297)<br/>StorageLive(_298)<br/>_298 = _4<br/>StorageLive(_299)<br/>_299 = ((*_154).1: u64)<br/></td></tr><tr><td align="left">_297 = &lt;u64 as Ord&gt;::min(move _298, move _299)</td></tr></table>>];
    bb116__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_299)<br/>StorageDead(_298)<br/>StorageLive(_300)<br/>StorageLive(_301)<br/>StorageLive(_302)<br/>StorageLive(_303)<br/>_303 = _297<br/></td></tr><tr><td align="left">_302 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as From&lt;u64&gt;&gt;::from(move _303)</td></tr></table>>];
    bb117__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">_301 = &amp;_302<br/>StorageDead(_303)<br/>StorageLive(_304)<br/>StorageLive(_305)<br/>StorageLive(_306)<br/>StorageLive(_307)<br/>_307 = ((*_154).1: u64)<br/></td></tr><tr><td align="left">_306 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as From&lt;u64&gt;&gt;::from(move _307)</td></tr></table>>];
    bb118__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageDead(_307)<br/>_305 = &amp;_306<br/>_304 = &amp;(*_305)<br/></td></tr><tr><td align="left">_300 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as utils::fraction::FractionExtra&gt;::div_ceil(move _301, move _304)</td></tr></table>>];
    bb119__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageDead(_304)<br/>StorageDead(_301)<br/>StorageDead(_306)<br/>StorageDead(_305)<br/>StorageDead(_302)<br/>StorageLive(_308)<br/>StorageLive(_309)<br/>_309 = _278<br/>StorageLive(_310)<br/>_310 = _300<br/></td></tr><tr><td align="left">_308 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as std::ops::Mul&gt;::mul(move _309, move _310)</td></tr></table>>];
    bb120__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageDead(_310)<br/>StorageDead(_309)<br/>StorageLive(_311)<br/>StorageLive(_312)<br/>StorageLive(_313)<br/>_313 = &amp;_7<br/>StorageLive(_314)<br/>_477 = const _<br/>_314 = &amp;(*_477)<br/></td></tr><tr><td align="left">_312 = &lt;state::types::LtvMaxWithdrawalCheck as PartialEq&gt;::eq(move _313, move _314)</td></tr></table>>];
    bb121__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left">switchInt(move _312)</td></tr></table>>];
    bb122__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageDead(_314)<br/>StorageDead(_313)<br/>StorageLive(_316)<br/>_316 = &amp;_308<br/>StorageLive(_317)<br/>_317 = &amp;_252<br/></td></tr><tr><td align="left">_311 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as PartialOrd&gt;::ge(move _316, move _317)</td></tr></table>>];
    bb123__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageDead(_317)<br/>StorageDead(_316)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb124__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageDead(_314)<br/>StorageDead(_313)<br/>StorageLive(_318)<br/>_318 = &amp;_308<br/>StorageLive(_319)<br/>_319 = &amp;_252<br/></td></tr><tr><td align="left">_311 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as PartialOrd&gt;::gt(move _318, move _319)</td></tr></table>>];
    bb125__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageDead(_319)<br/>StorageDead(_318)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb126__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageDead(_312)<br/>StorageLive(_320)<br/>StorageLive(_321)<br/>_321 = _311<br/></td></tr><tr><td align="left">switchInt(move _321)</td></tr></table>>];
    bb127__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageLive(_323)<br/>StorageLive(_324)<br/>StorageLive(_325)<br/>StorageLive(_326)<br/>StorageLive(_327)<br/>StorageLive(_328)<br/>StorageLive(_329)<br/>StorageLive(_330)<br/>StorageLive(_331)<br/>StorageLive(_332)<br/>StorageLive(_333)<br/>_476 = const _<br/>_333 = &amp;(*_476)<br/>_332 = &amp;(*_333)<br/>_331 = move _332 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_332)<br/>StorageLive(_335)<br/>StorageLive(_336)<br/>StorageLive(_337)<br/>StorageLive(_338)<br/>StorageLive(_339)<br/>StorageLive(_340)<br/>StorageLive(_341)<br/>_341 = &amp;_4<br/>_340 = &amp;(*_341)<br/></td></tr><tr><td align="left">_339 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _340)</td></tr></table>>];
    bb128__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageDead(_340)<br/>StorageLive(_342)<br/>StorageLive(_343)<br/>StorageLive(_344)<br/>_344 = &amp;((*_154).1: u64)<br/>_343 = &amp;(*_344)<br/></td></tr><tr><td align="left">_342 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _343)</td></tr></table>>];
    bb129__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">StorageDead(_343)<br/>StorageLive(_345)<br/>StorageLive(_346)<br/>StorageLive(_347)<br/>StorageLive(_348)<br/>StorageLive(_349)<br/>_349 = &amp;_300<br/></td></tr><tr><td align="left">_348 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as utils::fraction::FractionExtra&gt;::to_display(move _349)</td></tr></table>>];
    bb130__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageDead(_349)<br/>_347 = &amp;_348<br/>_346 = &amp;(*_347)<br/></td></tr><tr><td align="left">_345 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _346)</td></tr></table>>];
    bb131__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageDead(_346)<br/>StorageLive(_350)<br/>StorageLive(_351)<br/>StorageLive(_352)<br/>StorageLive(_353)<br/>StorageLive(_354)<br/>_354 = &amp;_278<br/></td></tr><tr><td align="left">_353 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as utils::fraction::FractionExtra&gt;::to_display(move _354)</td></tr></table>>];
    bb132__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageDead(_354)<br/>_352 = &amp;_353<br/>_351 = &amp;(*_352)<br/></td></tr><tr><td align="left">_350 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _351)</td></tr></table>>];
    bb133__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageDead(_351)<br/>StorageLive(_355)<br/>StorageLive(_356)<br/>StorageLive(_357)<br/>StorageLive(_358)<br/>StorageLive(_359)<br/>_359 = &amp;_252<br/></td></tr><tr><td align="left">_358 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as utils::fraction::FractionExtra&gt;::to_display(move _359)</td></tr></table>>];
    bb134__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageDead(_359)<br/>_357 = &amp;_358<br/>_356 = &amp;(*_357)<br/></td></tr><tr><td align="left">_355 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _356)</td></tr></table>>];
    bb135__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageDead(_356)<br/>StorageLive(_360)<br/>StorageLive(_361)<br/>StorageLive(_362)<br/>StorageLive(_363)<br/>StorageLive(_364)<br/>_364 = &amp;_308<br/></td></tr><tr><td align="left">_363 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as utils::fraction::FractionExtra&gt;::to_display(move _364)</td></tr></table>>];
    bb136__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageDead(_364)<br/>_362 = &amp;_363<br/>_361 = &amp;(*_362)<br/></td></tr><tr><td align="left">_360 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _361)</td></tr></table>>];
    bb137__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">StorageDead(_361)<br/>_338 = [move _339, move _342, move _345, move _350, move _355, move _360]<br/>StorageDead(_360)<br/>StorageDead(_355)<br/>StorageDead(_350)<br/>StorageDead(_345)<br/>StorageDead(_342)<br/>StorageDead(_339)<br/>_337 = &amp;_338<br/>_336 = &amp;(*_337)<br/>_335 = move _336 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_336)<br/></td></tr><tr><td align="left">_330 = Arguments::&lt;'_&gt;::new_v1(move _331, move _335)</td></tr></table>>];
    bb138__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">StorageDead(_335)<br/>StorageDead(_331)<br/></td></tr><tr><td align="left">_329 = format(move _330)</td></tr></table>>];
    bb139__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">StorageDead(_330)<br/>StorageDead(_363)<br/>StorageDead(_362)<br/>StorageDead(_358)<br/>StorageDead(_357)<br/>StorageDead(_353)<br/>StorageDead(_352)<br/>StorageDead(_348)<br/>StorageDead(_347)<br/>StorageDead(_344)<br/>StorageDead(_341)<br/>StorageDead(_338)<br/>StorageDead(_337)<br/>StorageDead(_333)<br/>_328 = move _329<br/>StorageDead(_329)<br/>_327 = &amp;_328<br/>_326 = &amp;(*_327)<br/></td></tr><tr><td align="left">_325 = &lt;std::string::String as Deref&gt;::deref(move _326)</td></tr></table>>];
    bb140__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">_324 = &amp;(*_325)<br/>StorageDead(_326)<br/></td></tr><tr><td align="left">_323 = solana_program::log::sol_log(move _324)</td></tr></table>>];
    bb141__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">StorageDead(_324)<br/></td></tr><tr><td align="left">drop(_328)</td></tr></table>>];
    bb142__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageDead(_328)<br/>StorageDead(_327)<br/>StorageDead(_325)<br/>StorageDead(_323)<br/>StorageLive(_365)<br/>StorageLive(_366)<br/>StorageLive(_367)<br/>StorageLive(_368)<br/>_475 = const _<br/>_368 = &amp;(*_475)<br/></td></tr><tr><td align="left">_367 = LendingError::name(move _368)</td></tr></table>>];
    bb143__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageDead(_368)<br/>StorageLive(_370)<br/>StorageLive(_371)<br/>_371 = LendingError::WithdrawTooLarge<br/></td></tr><tr><td align="left">_370 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _371)</td></tr></table>>];
    bb144__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">StorageDead(_371)<br/>StorageLive(_372)<br/>StorageLive(_373)<br/>_474 = const _<br/>_373 = &amp;(*_474)<br/></td></tr><tr><td align="left">_372 = &lt;LendingError as ToString&gt;::to_string(move _373)</td></tr></table>>];
    bb145__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageDead(_373)<br/>StorageLive(_375)<br/>StorageLive(_376)<br/>StorageLive(_377)<br/>_377 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\lending_market\\lending_operations.rs&quot;, line: const 577_u32 }<br/>_376 = anchor_lang::error::ErrorOrigin::Source(move _377)<br/>StorageDead(_377)<br/>_375 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _376)<br/>StorageDead(_376)<br/>StorageLive(_378)<br/>_378 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_366 = anchor_lang::error::AnchorError { error_name: move _367, error_code_number: move _370, error_msg: move _372, error_origin: move _375, compared_values: move _378 }<br/>StorageDead(_378)<br/>StorageDead(_375)<br/>StorageDead(_372)<br/>StorageDead(_370)<br/>StorageDead(_367)<br/></td></tr><tr><td align="left">_365 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _366)</td></tr></table>>];
    bb146__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">StorageDead(_366)<br/>_0 = std::result::Result::&lt;u64, anchor_lang::error::Error&gt;::Err(move _365)<br/>StorageDead(_365)<br/>StorageDead(_321)<br/>StorageDead(_320)<br/>StorageDead(_311)<br/>StorageDead(_308)<br/>StorageDead(_300)<br/>StorageDead(_297)<br/>StorageDead(_281)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb147__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left" balign="left">_320 = const ()<br/>StorageDead(_321)<br/>StorageDead(_320)<br/>_280 = _297<br/>StorageDead(_311)<br/>StorageDead(_308)<br/>StorageDead(_300)<br/>StorageDead(_297)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb148__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left" balign="left">StorageDead(_281)<br/>StorageLive(_379)<br/>StorageLive(_380)<br/>StorageLive(_381)<br/>_381 = _280<br/>_380 = Eq(move _381, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _380)</td></tr></table>>];
    bb149__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">149</td></tr><tr><td align="left" balign="left">StorageDead(_381)<br/>StorageLive(_383)<br/>StorageLive(_384)<br/>StorageLive(_385)<br/>_385 = const &quot;Withdraw amount is too small to transfer collateral&quot;<br/>_384 = &amp;(*_385)<br/></td></tr><tr><td align="left">_383 = solana_program::log::sol_log(move _384)</td></tr></table>>];
    bb150__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">150</td></tr><tr><td align="left" balign="left">StorageDead(_384)<br/>StorageDead(_385)<br/>StorageDead(_383)<br/>StorageLive(_386)<br/>StorageLive(_387)<br/>StorageLive(_388)<br/>StorageLive(_389)<br/>_473 = const _<br/>_389 = &amp;(*_473)<br/></td></tr><tr><td align="left">_388 = LendingError::name(move _389)</td></tr></table>>];
    bb151__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">151</td></tr><tr><td align="left" balign="left">StorageDead(_389)<br/>StorageLive(_391)<br/>StorageLive(_392)<br/>_392 = LendingError::WithdrawTooSmall<br/></td></tr><tr><td align="left">_391 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _392)</td></tr></table>>];
    bb152__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">152</td></tr><tr><td align="left" balign="left">StorageDead(_392)<br/>StorageLive(_393)<br/>StorageLive(_394)<br/>_472 = const _<br/>_394 = &amp;(*_472)<br/></td></tr><tr><td align="left">_393 = &lt;LendingError as ToString&gt;::to_string(move _394)</td></tr></table>>];
    bb153__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">153</td></tr><tr><td align="left" balign="left">StorageDead(_394)<br/>StorageLive(_396)<br/>StorageLive(_397)<br/>StorageLive(_398)<br/>_398 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\lending_market\\lending_operations.rs&quot;, line: const 584_u32 }<br/>_397 = anchor_lang::error::ErrorOrigin::Source(move _398)<br/>StorageDead(_398)<br/>_396 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _397)<br/>StorageDead(_397)<br/>StorageLive(_399)<br/>_399 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_387 = anchor_lang::error::AnchorError { error_name: move _388, error_code_number: move _391, error_msg: move _393, error_origin: move _396, compared_values: move _399 }<br/>StorageDead(_399)<br/>StorageDead(_396)<br/>StorageDead(_393)<br/>StorageDead(_391)<br/>StorageDead(_388)<br/></td></tr><tr><td align="left">_386 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _387)</td></tr></table>>];
    bb154__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">154</td></tr><tr><td align="left" balign="left">StorageDead(_387)<br/>_0 = std::result::Result::&lt;u64, anchor_lang::error::Error&gt;::Err(move _386)<br/>StorageDead(_386)<br/>StorageDead(_380)<br/>StorageDead(_379)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb155__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">155</td></tr><tr><td align="left" balign="left">StorageDead(_381)<br/>_379 = const ()<br/>StorageDead(_380)<br/>StorageDead(_379)<br/>_226 = _280<br/>StorageDead(_280)<br/>StorageDead(_278)<br/>StorageDead(_252)<br/>StorageDead(_232)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb156__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">156</td></tr><tr><td align="left" balign="left">StorageDead(_227)<br/>StorageLive(_400)<br/>_400 = ((*_154).3: u64)<br/>StorageLive(_401)<br/>StorageLive(_402)<br/>StorageLive(_403)<br/>StorageLive(_404)<br/>_404 = &amp;mut (*_3)<br/>StorageLive(_405)<br/>_405 = _226<br/>StorageLive(_406)<br/>_406 = _144<br/></td></tr><tr><td align="left">_403 = obligation::Obligation::withdraw(move _404, move _405, move _406)</td></tr></table>>];
    bb157__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">157</td></tr><tr><td align="left" balign="left">StorageDead(_406)<br/>StorageDead(_405)<br/>StorageDead(_404)<br/></td></tr><tr><td align="left">_402 = &lt;std::result::Result&lt;obligation::WithdrawResult, anchor_lang::error::Error&gt; as Try&gt;::branch(move _403)</td></tr></table>>];
    bb158__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">158</td></tr><tr><td align="left" balign="left">StorageDead(_403)<br/>_407 = discriminant(_402)<br/></td></tr><tr><td align="left">switchInt(move _407)</td></tr></table>>];
    bb159__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">159</td></tr><tr><td align="left" balign="left">StorageLive(_411)<br/>_411 = ((_402 as Continue).0: state::obligation::WithdrawResult)<br/>_401 = _411<br/>StorageDead(_411)<br/>_495 = discriminant(_402)<br/>StorageDead(_402)<br/>StorageLive(_412)<br/>StorageLive(_413)<br/>_413 = &amp;mut ((*_3).1: state::last_update::LastUpdate)<br/></td></tr><tr><td align="left">_412 = last_update::LastUpdate::mark_stale(move _413)</td></tr></table>>];
    bb160__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">160</td></tr><tr><td align="left" balign="left">StorageLive(_408)<br/>_408 = move ((_402 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_410)<br/>_410 = move _408<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _410)</td></tr></table>>];
    bb161__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">161</td></tr><tr><td align="left" balign="left">StorageDead(_410)<br/>StorageDead(_408)<br/>_505 = discriminant(_402)<br/>StorageDead(_402)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb162__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">162</td></tr><tr><td align="left" balign="left">StorageDead(_413)<br/>StorageDead(_412)<br/>StorageLive(_414)<br/>StorageLive(_415)<br/>StorageLive(_416)<br/>_416 = &amp;_401<br/>StorageLive(_417)<br/>_467 = const _<br/>_417 = &amp;(*_467)<br/></td></tr><tr><td align="left">_415 = &lt;obligation::WithdrawResult as PartialEq&gt;::eq(move _416, move _417)</td></tr></table>>];
    bb163__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">163</td></tr><tr><td align="left">switchInt(move _415)</td></tr></table>>];
    bb164__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">164</td></tr><tr><td align="left" balign="left">StorageDead(_417)<br/>StorageDead(_416)<br/>StorageLive(_419)<br/>StorageLive(_420)<br/>StorageLive(_421)<br/>StorageLive(_422)<br/>_422 = _400<br/>StorageLive(_423)<br/>_423 = ((*_3).14: u8)<br/>StorageLive(_424)<br/>_424 = &amp;mut (*_2)<br/></td></tr><tr><td align="left">_421 = update_elevation_group_debt_trackers_on_full_withdraw(move _422, move _423, move _424)</td></tr></table>>];
    bb165__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">165</td></tr><tr><td align="left" balign="left">StorageDead(_424)<br/>StorageDead(_423)<br/>StorageDead(_422)<br/></td></tr><tr><td align="left">_420 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _421)</td></tr></table>>];
    bb166__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">166</td></tr><tr><td align="left" balign="left">StorageDead(_421)<br/>_425 = discriminant(_420)<br/></td></tr><tr><td align="left">switchInt(move _425)</td></tr></table>>];
    bb167__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">167</td></tr><tr><td align="left" balign="left">StorageLive(_429)<br/>_429 = ((_420 as Continue).0: ())<br/>_419 = _429<br/>StorageDead(_429)<br/>_497 = discriminant(_420)<br/>StorageDead(_420)<br/>StorageDead(_419)<br/>_414 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb168__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">168</td></tr><tr><td align="left" balign="left">StorageLive(_426)<br/>_426 = move ((_420 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_428)<br/>_428 = move _426<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _428)</td></tr></table>>];
    bb169__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">169</td></tr><tr><td align="left" balign="left">StorageDead(_428)<br/>StorageDead(_426)<br/>_503 = discriminant(_420)<br/>StorageDead(_420)<br/>StorageDead(_419)<br/>StorageDead(_415)<br/>StorageDead(_414)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb170__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">170</td></tr><tr><td align="left" balign="left">StorageDead(_417)<br/>StorageDead(_416)<br/>_414 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb171__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">171</td></tr><tr><td align="left" balign="left">StorageDead(_415)<br/>StorageDead(_414)<br/>StorageLive(_430)<br/>StorageLive(_431)<br/>StorageLive(_432)<br/>StorageLive(_433)<br/>StorageLive(_434)<br/>StorageLive(_435)<br/>StorageLive(_436)<br/>_436 = &amp;(*_2)<br/></td></tr><tr><td align="left">_435 = reserve::Reserve::collateral_exchange_rate(move _436)</td></tr></table>>];
    bb172__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">172</td></tr><tr><td align="left" balign="left">_434 = &amp;_435<br/>StorageDead(_436)<br/>StorageLive(_437)<br/>StorageLive(_438)<br/>_438 = _226<br/></td></tr><tr><td align="left">_437 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as From&lt;u64&gt;&gt;::from(move _438)</td></tr></table>>];
    bb173__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">173</td></tr><tr><td align="left" balign="left">StorageDead(_438)<br/></td></tr><tr><td align="left">_433 = reserve::CollateralExchangeRate::fraction_collateral_to_liquidity(move _434, move _437)</td></tr></table>>];
    bb174__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">174</td></tr><tr><td align="left" balign="left">StorageDead(_437)<br/>StorageDead(_434)<br/>StorageLive(_439)<br/>_439 = &amp;(*_3)<br/>StorageLive(_440)<br/>_440 = &amp;(*_2)<br/>StorageLive(_441)<br/>_441 = _213<br/>StorageLive(_442)<br/>StorageLive(_443)<br/>StorageLive(_444)<br/>_444 = _144<br/>_445 = Len(((*_3).4: [state::obligation::ObligationCollateral; 8]))<br/>_446 = Lt(_444, _445)<br/></td></tr><tr><td align="left">assert(move _446, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _445, _444)</td></tr></table>>];
    bb175__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">175</td></tr><tr><td align="left" balign="left">_443 = (((*_3).4: [state::obligation::ObligationCollateral; 8])[_444].2: u128)<br/></td></tr><tr><td align="left">_442 = FixedU128::&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;::from_bits(move _443)</td></tr></table>>];
    bb176__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">176</td></tr><tr><td align="left" balign="left">StorageDead(_443)<br/>StorageLive(_447)<br/>StorageLive(_448)<br/>_448 = ((*_1).20: u128)<br/></td></tr><tr><td align="left">_447 = FixedU128::&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;::from_bits(move _448)</td></tr></table>>];
    bb177__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">177</td></tr><tr><td align="left" balign="left">StorageDead(_448)<br/></td></tr><tr><td align="left">_432 = post_withdraw_obligation_invariants(move _433, move _439, move _440, move _441, move _442, move _447)</td></tr></table>>];
    bb178__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">178</td></tr><tr><td align="left" balign="left">StorageDead(_447)<br/>StorageDead(_442)<br/>StorageDead(_441)<br/>StorageDead(_440)<br/>StorageDead(_439)<br/>StorageDead(_433)<br/></td></tr><tr><td align="left">_431 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _432)</td></tr></table>>];
    bb179__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">179</td></tr><tr><td align="left" balign="left">StorageDead(_432)<br/>_449 = discriminant(_431)<br/></td></tr><tr><td align="left">switchInt(move _449)</td></tr></table>>];
    bb180__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">180</td></tr><tr><td align="left" balign="left">StorageLive(_453)<br/>_453 = ((_431 as Continue).0: ())<br/>_430 = _453<br/>StorageDead(_453)<br/>_499 = discriminant(_431)<br/>StorageDead(_444)<br/>StorageDead(_435)<br/>StorageDead(_431)<br/>StorageDead(_430)<br/>StorageLive(_454)<br/>_454 = _226<br/>_0 = std::result::Result::&lt;u64, anchor_lang::error::Error&gt;::Ok(move _454)<br/>StorageDead(_454)<br/>StorageDead(_401)<br/>StorageDead(_400)<br/>StorageDead(_226)<br/>StorageDead(_213)<br/>StorageDead(_212)<br/>StorageDead(_155)<br/>StorageDead(_154)<br/>StorageDead(_144)<br/>StorageDead(_28)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb181__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">181</td></tr><tr><td align="left" balign="left">StorageLive(_450)<br/>_450 = move ((_431 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_452)<br/>_452 = move _450<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _452)</td></tr></table>>];
    bb182__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">182</td></tr><tr><td align="left" balign="left">StorageDead(_452)<br/>StorageDead(_450)<br/>_501 = discriminant(_431)<br/>StorageDead(_444)<br/>StorageDead(_435)<br/>StorageDead(_431)<br/>StorageDead(_430)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb183__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">183</td></tr><tr><td align="left" balign="left">StorageDead(_401)<br/>StorageDead(_400)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb184__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">184</td></tr><tr><td align="left" balign="left">StorageDead(_280)<br/>StorageDead(_278)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb185__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">185</td></tr><tr><td align="left" balign="left">StorageDead(_252)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb186__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">186</td></tr><tr><td align="left" balign="left">StorageDead(_232)<br/>StorageDead(_227)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb187__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">187</td></tr><tr><td align="left" balign="left">StorageDead(_226)<br/>StorageDead(_213)<br/>StorageDead(_212)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb188__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">188</td></tr><tr><td align="left" balign="left">StorageDead(_155)<br/>StorageDead(_154)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb189__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">189</td></tr><tr><td align="left" balign="left">StorageDead(_144)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb190__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">190</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>StorageDead(_87)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb191__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">191</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb192__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">192</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb193__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">193</td></tr><tr><td align="left">return</td></tr></table>>];
    bb194__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">194 (cleanup)</td></tr><tr><td align="left">drop(_388)</td></tr></table>>];
    bb195__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">195 (cleanup)</td></tr><tr><td align="left">drop(_367)</td></tr></table>>];
    bb196__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">196 (cleanup)</td></tr><tr><td align="left">drop(_328)</td></tr></table>>];
    bb197__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">197 (cleanup)</td></tr><tr><td align="left">drop(_266)</td></tr></table>>];
    bb198__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">198 (cleanup)</td></tr><tr><td align="left">drop(_240)</td></tr></table>>];
    bb199__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">199 (cleanup)</td></tr><tr><td align="left">drop(_200)</td></tr></table>>];
    bb200__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">200 (cleanup)</td></tr><tr><td align="left">drop(_164)</td></tr></table>>];
    bb201__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">201 (cleanup)</td></tr><tr><td align="left">drop(_132)</td></tr></table>>];
    bb202__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">202 (cleanup)</td></tr><tr><td align="left">drop(_105)</td></tr></table>>];
    bb203__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">203 (cleanup)</td></tr><tr><td align="left">drop(_75)</td></tr></table>>];
    bb204__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">204 (cleanup)</td></tr><tr><td align="left">drop(_48)</td></tr></table>>];
    bb205__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">205 (cleanup)</td></tr><tr><td align="left">drop(_14)</td></tr></table>>];
    bb206__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">206 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb207__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">207</td></tr><tr><td align="left" balign="left">_481 = discriminant(_32)<br/>StorageDead(_32)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>_459 = const _<br/>_53 = &amp;(*_459)<br/>_52 = &amp;(*_53)<br/>_51 = move _52 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_52)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>_63 = &amp;((*_2).1: state::last_update::LastUpdate)<br/></td></tr><tr><td align="left">_62 = last_update::LastUpdate::get_price_status(move _63)</td></tr></table>>];
    bb208__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">208</td></tr><tr><td align="left" balign="left">_483 = discriminant(_32)<br/>StorageDead(_32)<br/>_30 = const ()<br/>StorageDead(_31)<br/>StorageDead(_30)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>_91 = &amp;((*_3).1: state::last_update::LastUpdate)<br/>StorageLive(_92)<br/>_92 = _5<br/>StorageLive(_93)<br/>_93 = _28<br/></td></tr><tr><td align="left">_90 = last_update::LastUpdate::is_stale(move _91, move _92, move _93)</td></tr></table>>];
    bb209__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">209</td></tr><tr><td align="left" balign="left">_485 = discriminant(_89)<br/>StorageDead(_89)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>_462 = const _<br/>_110 = &amp;(*_462)<br/>_109 = &amp;(*_110)<br/>_108 = move _109 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_109)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>_120 = &amp;((*_3).1: state::last_update::LastUpdate)<br/></td></tr><tr><td align="left">_119 = last_update::LastUpdate::get_price_status(move _120)</td></tr></table>>];
    bb210__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">210</td></tr><tr><td align="left" balign="left">_487 = discriminant(_89)<br/>StorageDead(_89)<br/>_87 = const ()<br/>StorageDead(_88)<br/>StorageDead(_87)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>_147 = &amp;(*_3)<br/>StorageLive(_148)<br/>_148 = _6<br/></td></tr><tr><td align="left">_146 = obligation::Obligation::position_of_collateral_in_deposits(move _147, move _148)</td></tr></table>>];
    bb211__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">211 (cleanup)</td></tr><tr><td align="left" balign="left">_517 = discriminant(_431)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb212__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">212 (cleanup)</td></tr><tr><td align="left" balign="left">_518 = discriminant(_420)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb213__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">213 (cleanup)</td></tr><tr><td align="left" balign="left">_519 = discriminant(_402)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb214__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">214 (cleanup)</td></tr><tr><td align="left" balign="left">_520 = discriminant(_217)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb215__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">215 (cleanup)</td></tr><tr><td align="left" balign="left">_521 = discriminant(_179)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb216__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">216 (cleanup)</td></tr><tr><td align="left" balign="left">_522 = discriminant(_145)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb217__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">217 (cleanup)</td></tr><tr><td align="left" balign="left">_523 = discriminant(_89)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb218__0_1287 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">218 (cleanup)</td></tr><tr><td align="left" balign="left">_524 = discriminant(_32)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_1287 -> bb6__0_1287 [label="0"];
    bb0__0_1287 -> bb1__0_1287 [label="otherwise"];
    bb1__0_1287 -> bb2__0_1287 [label="return"];
    bb2__0_1287 -> bb3__0_1287 [label="return"];
    bb2__0_1287 -> bb205__0_1287 [label="unwind"];
    bb3__0_1287 -> bb4__0_1287 [label="return"];
    bb3__0_1287 -> bb205__0_1287 [label="unwind"];
    bb4__0_1287 -> bb5__0_1287 [label="return"];
    bb4__0_1287 -> bb206__0_1287 [label="unwind"];
    bb5__0_1287 -> bb193__0_1287 [label=""];
    bb6__0_1287 -> bb7__0_1287 [label="return"];
    bb7__0_1287 -> bb9__0_1287 [label="0"];
    bb7__0_1287 -> bb8__0_1287 [label="otherwise"];
    bb8__0_1287 -> bb10__0_1287 [label=""];
    bb9__0_1287 -> bb10__0_1287 [label=""];
    bb10__0_1287 -> bb11__0_1287 [label="return"];
    bb11__0_1287 -> bb12__0_1287 [label="return"];
    bb11__0_1287 -> bb206__0_1287 [label="unwind"];
    bb12__0_1287 -> bb13__0_1287 [label="0"];
    bb12__0_1287 -> bb15__0_1287 [label="1"];
    bb12__0_1287 -> bb14__0_1287 [label="otherwise"];
    bb13__0_1287 -> bb208__0_1287 [label="0"];
    bb13__0_1287 -> bb207__0_1287 [label="otherwise"];
    bb15__0_1287 -> bb16__0_1287 [label="return"];
    bb15__0_1287 -> bb218__0_1287 [label="unwind"];
    bb16__0_1287 -> bb191__0_1287 [label=""];
    bb17__0_1287 -> bb18__0_1287 [label="return"];
    bb18__0_1287 -> bb19__0_1287 [label="return"];
    bb19__0_1287 -> bb20__0_1287 [label="return"];
    bb20__0_1287 -> bb21__0_1287 [label="return"];
    bb21__0_1287 -> bb22__0_1287 [label="return"];
    bb22__0_1287 -> bb23__0_1287 [label="return"];
    bb22__0_1287 -> bb204__0_1287 [label="unwind"];
    bb23__0_1287 -> bb24__0_1287 [label="return"];
    bb23__0_1287 -> bb204__0_1287 [label="unwind"];
    bb24__0_1287 -> bb25__0_1287 [label="return"];
    bb24__0_1287 -> bb206__0_1287 [label="unwind"];
    bb25__0_1287 -> bb26__0_1287 [label="return"];
    bb26__0_1287 -> bb27__0_1287 [label="return"];
    bb26__0_1287 -> bb203__0_1287 [label="unwind"];
    bb27__0_1287 -> bb28__0_1287 [label="return"];
    bb27__0_1287 -> bb203__0_1287 [label="unwind"];
    bb28__0_1287 -> bb29__0_1287 [label="return"];
    bb28__0_1287 -> bb206__0_1287 [label="unwind"];
    bb29__0_1287 -> bb191__0_1287 [label=""];
    bb30__0_1287 -> bb31__0_1287 [label="return"];
    bb30__0_1287 -> bb206__0_1287 [label="unwind"];
    bb31__0_1287 -> bb32__0_1287 [label="0"];
    bb31__0_1287 -> bb33__0_1287 [label="1"];
    bb31__0_1287 -> bb14__0_1287 [label="otherwise"];
    bb32__0_1287 -> bb210__0_1287 [label="0"];
    bb32__0_1287 -> bb209__0_1287 [label="otherwise"];
    bb33__0_1287 -> bb34__0_1287 [label="return"];
    bb33__0_1287 -> bb217__0_1287 [label="unwind"];
    bb34__0_1287 -> bb190__0_1287 [label=""];
    bb35__0_1287 -> bb36__0_1287 [label="return"];
    bb36__0_1287 -> bb37__0_1287 [label="return"];
    bb37__0_1287 -> bb38__0_1287 [label="return"];
    bb38__0_1287 -> bb39__0_1287 [label="return"];
    bb39__0_1287 -> bb40__0_1287 [label="return"];
    bb40__0_1287 -> bb41__0_1287 [label="return"];
    bb40__0_1287 -> bb202__0_1287 [label="unwind"];
    bb41__0_1287 -> bb42__0_1287 [label="return"];
    bb41__0_1287 -> bb202__0_1287 [label="unwind"];
    bb42__0_1287 -> bb43__0_1287 [label="return"];
    bb42__0_1287 -> bb206__0_1287 [label="unwind"];
    bb43__0_1287 -> bb44__0_1287 [label="return"];
    bb44__0_1287 -> bb45__0_1287 [label="return"];
    bb44__0_1287 -> bb201__0_1287 [label="unwind"];
    bb45__0_1287 -> bb46__0_1287 [label="return"];
    bb45__0_1287 -> bb201__0_1287 [label="unwind"];
    bb46__0_1287 -> bb47__0_1287 [label="return"];
    bb46__0_1287 -> bb206__0_1287 [label="unwind"];
    bb47__0_1287 -> bb190__0_1287 [label=""];
    bb48__0_1287 -> bb49__0_1287 [label="return"];
    bb48__0_1287 -> bb206__0_1287 [label="unwind"];
    bb49__0_1287 -> bb50__0_1287 [label="0"];
    bb49__0_1287 -> bb51__0_1287 [label="1"];
    bb49__0_1287 -> bb14__0_1287 [label="otherwise"];
    bb50__0_1287 -> bb53__0_1287 [label="success"];
    bb51__0_1287 -> bb52__0_1287 [label="return"];
    bb51__0_1287 -> bb216__0_1287 [label="unwind"];
    bb52__0_1287 -> bb189__0_1287 [label=""];
    bb53__0_1287 -> bb59__0_1287 [label="0"];
    bb53__0_1287 -> bb54__0_1287 [label="otherwise"];
    bb54__0_1287 -> bb55__0_1287 [label="return"];
    bb55__0_1287 -> bb56__0_1287 [label="return"];
    bb55__0_1287 -> bb200__0_1287 [label="unwind"];
    bb56__0_1287 -> bb57__0_1287 [label="return"];
    bb56__0_1287 -> bb200__0_1287 [label="unwind"];
    bb57__0_1287 -> bb58__0_1287 [label="return"];
    bb57__0_1287 -> bb206__0_1287 [label="unwind"];
    bb58__0_1287 -> bb188__0_1287 [label=""];
    bb59__0_1287 -> bb61__0_1287 [label="0"];
    bb59__0_1287 -> bb60__0_1287 [label="otherwise"];
    bb60__0_1287 -> bb67__0_1287 [label=""];
    bb61__0_1287 -> bb62__0_1287 [label="return"];
    bb62__0_1287 -> bb63__0_1287 [label="return"];
    bb62__0_1287 -> bb206__0_1287 [label="unwind"];
    bb63__0_1287 -> bb64__0_1287 [label="0"];
    bb63__0_1287 -> bb65__0_1287 [label="1"];
    bb63__0_1287 -> bb14__0_1287 [label="otherwise"];
    bb64__0_1287 -> bb67__0_1287 [label=""];
    bb65__0_1287 -> bb66__0_1287 [label="return"];
    bb65__0_1287 -> bb215__0_1287 [label="unwind"];
    bb66__0_1287 -> bb188__0_1287 [label=""];
    bb67__0_1287 -> bb68__0_1287 [label="return"];
    bb68__0_1287 -> bb78__0_1287 [label="0"];
    bb68__0_1287 -> bb69__0_1287 [label="otherwise"];
    bb69__0_1287 -> bb70__0_1287 [label="return"];
    bb70__0_1287 -> bb71__0_1287 [label="return"];
    bb71__0_1287 -> bb77__0_1287 [label="0"];
    bb71__0_1287 -> bb72__0_1287 [label="otherwise"];
    bb72__0_1287 -> bb73__0_1287 [label="return"];
    bb73__0_1287 -> bb74__0_1287 [label="return"];
    bb73__0_1287 -> bb199__0_1287 [label="unwind"];
    bb74__0_1287 -> bb75__0_1287 [label="return"];
    bb74__0_1287 -> bb199__0_1287 [label="unwind"];
    bb75__0_1287 -> bb76__0_1287 [label="return"];
    bb75__0_1287 -> bb206__0_1287 [label="unwind"];
    bb76__0_1287 -> bb188__0_1287 [label=""];
    bb77__0_1287 -> bb79__0_1287 [label=""];
    bb78__0_1287 -> bb79__0_1287 [label=""];
    bb79__0_1287 -> bb80__0_1287 [label="return"];
    bb80__0_1287 -> bb81__0_1287 [label="return"];
    bb80__0_1287 -> bb206__0_1287 [label="unwind"];
    bb81__0_1287 -> bb82__0_1287 [label="0"];
    bb81__0_1287 -> bb83__0_1287 [label="1"];
    bb81__0_1287 -> bb14__0_1287 [label="otherwise"];
    bb82__0_1287 -> bb85__0_1287 [label="return"];
    bb82__0_1287 -> bb214__0_1287 [label="unwind"];
    bb83__0_1287 -> bb84__0_1287 [label="return"];
    bb83__0_1287 -> bb214__0_1287 [label="unwind"];
    bb84__0_1287 -> bb188__0_1287 [label=""];
    bb85__0_1287 -> bb91__0_1287 [label="0"];
    bb85__0_1287 -> bb86__0_1287 [label="otherwise"];
    bb86__0_1287 -> bb88__0_1287 [label="0"];
    bb86__0_1287 -> bb87__0_1287 [label="otherwise"];
    bb87__0_1287 -> bb90__0_1287 [label=""];
    bb88__0_1287 -> bb89__0_1287 [label="return"];
    bb89__0_1287 -> bb90__0_1287 [label=""];
    bb90__0_1287 -> bb156__0_1287 [label=""];
    bb91__0_1287 -> bb98__0_1287 [label="0"];
    bb91__0_1287 -> bb92__0_1287 [label="otherwise"];
    bb92__0_1287 -> bb93__0_1287 [label="return"];
    bb93__0_1287 -> bb94__0_1287 [label="return"];
    bb94__0_1287 -> bb95__0_1287 [label="return"];
    bb94__0_1287 -> bb198__0_1287 [label="unwind"];
    bb95__0_1287 -> bb96__0_1287 [label="return"];
    bb95__0_1287 -> bb198__0_1287 [label="unwind"];
    bb96__0_1287 -> bb97__0_1287 [label="return"];
    bb96__0_1287 -> bb206__0_1287 [label="unwind"];
    bb97__0_1287 -> bb186__0_1287 [label=""];
    bb98__0_1287 -> bb99__0_1287 [label="return"];
    bb99__0_1287 -> bb100__0_1287 [label="return"];
    bb100__0_1287 -> bb106__0_1287 [label="0"];
    bb100__0_1287 -> bb101__0_1287 [label="otherwise"];
    bb101__0_1287 -> bb102__0_1287 [label="return"];
    bb102__0_1287 -> bb103__0_1287 [label="return"];
    bb102__0_1287 -> bb197__0_1287 [label="unwind"];
    bb103__0_1287 -> bb104__0_1287 [label="return"];
    bb103__0_1287 -> bb197__0_1287 [label="unwind"];
    bb104__0_1287 -> bb105__0_1287 [label="return"];
    bb104__0_1287 -> bb206__0_1287 [label="unwind"];
    bb105__0_1287 -> bb185__0_1287 [label=""];
    bb106__0_1287 -> bb107__0_1287 [label="return"];
    bb107__0_1287 -> bb115__0_1287 [label="0"];
    bb107__0_1287 -> bb108__0_1287 [label="otherwise"];
    bb108__0_1287 -> bb109__0_1287 [label="return"];
    bb109__0_1287 -> bb110__0_1287 [label="return"];
    bb110__0_1287 -> bb111__0_1287 [label="return"];
    bb111__0_1287 -> bb112__0_1287 [label="return"];
    bb112__0_1287 -> bb113__0_1287 [label="return"];
    bb113__0_1287 -> bb114__0_1287 [label="return"];
    bb114__0_1287 -> bb148__0_1287 [label=""];
    bb115__0_1287 -> bb116__0_1287 [label="return"];
    bb116__0_1287 -> bb117__0_1287 [label="return"];
    bb117__0_1287 -> bb118__0_1287 [label="return"];
    bb118__0_1287 -> bb119__0_1287 [label="return"];
    bb119__0_1287 -> bb120__0_1287 [label="return"];
    bb120__0_1287 -> bb121__0_1287 [label="return"];
    bb121__0_1287 -> bb124__0_1287 [label="0"];
    bb121__0_1287 -> bb122__0_1287 [label="otherwise"];
    bb122__0_1287 -> bb123__0_1287 [label="return"];
    bb123__0_1287 -> bb126__0_1287 [label=""];
    bb124__0_1287 -> bb125__0_1287 [label="return"];
    bb125__0_1287 -> bb126__0_1287 [label=""];
    bb126__0_1287 -> bb147__0_1287 [label="0"];
    bb126__0_1287 -> bb127__0_1287 [label="otherwise"];
    bb127__0_1287 -> bb128__0_1287 [label="return"];
    bb128__0_1287 -> bb129__0_1287 [label="return"];
    bb129__0_1287 -> bb130__0_1287 [label="return"];
    bb130__0_1287 -> bb131__0_1287 [label="return"];
    bb131__0_1287 -> bb132__0_1287 [label="return"];
    bb132__0_1287 -> bb133__0_1287 [label="return"];
    bb133__0_1287 -> bb134__0_1287 [label="return"];
    bb134__0_1287 -> bb135__0_1287 [label="return"];
    bb135__0_1287 -> bb136__0_1287 [label="return"];
    bb136__0_1287 -> bb137__0_1287 [label="return"];
    bb137__0_1287 -> bb138__0_1287 [label="return"];
    bb138__0_1287 -> bb139__0_1287 [label="return"];
    bb139__0_1287 -> bb140__0_1287 [label="return"];
    bb139__0_1287 -> bb196__0_1287 [label="unwind"];
    bb140__0_1287 -> bb141__0_1287 [label="return"];
    bb140__0_1287 -> bb196__0_1287 [label="unwind"];
    bb141__0_1287 -> bb142__0_1287 [label="return"];
    bb141__0_1287 -> bb206__0_1287 [label="unwind"];
    bb142__0_1287 -> bb143__0_1287 [label="return"];
    bb143__0_1287 -> bb144__0_1287 [label="return"];
    bb143__0_1287 -> bb195__0_1287 [label="unwind"];
    bb144__0_1287 -> bb145__0_1287 [label="return"];
    bb144__0_1287 -> bb195__0_1287 [label="unwind"];
    bb145__0_1287 -> bb146__0_1287 [label="return"];
    bb145__0_1287 -> bb206__0_1287 [label="unwind"];
    bb146__0_1287 -> bb184__0_1287 [label=""];
    bb147__0_1287 -> bb148__0_1287 [label=""];
    bb148__0_1287 -> bb155__0_1287 [label="0"];
    bb148__0_1287 -> bb149__0_1287 [label="otherwise"];
    bb149__0_1287 -> bb150__0_1287 [label="return"];
    bb150__0_1287 -> bb151__0_1287 [label="return"];
    bb151__0_1287 -> bb152__0_1287 [label="return"];
    bb151__0_1287 -> bb194__0_1287 [label="unwind"];
    bb152__0_1287 -> bb153__0_1287 [label="return"];
    bb152__0_1287 -> bb194__0_1287 [label="unwind"];
    bb153__0_1287 -> bb154__0_1287 [label="return"];
    bb153__0_1287 -> bb206__0_1287 [label="unwind"];
    bb154__0_1287 -> bb184__0_1287 [label=""];
    bb155__0_1287 -> bb156__0_1287 [label=""];
    bb156__0_1287 -> bb157__0_1287 [label="return"];
    bb157__0_1287 -> bb158__0_1287 [label="return"];
    bb157__0_1287 -> bb206__0_1287 [label="unwind"];
    bb158__0_1287 -> bb159__0_1287 [label="0"];
    bb158__0_1287 -> bb160__0_1287 [label="1"];
    bb158__0_1287 -> bb14__0_1287 [label="otherwise"];
    bb159__0_1287 -> bb162__0_1287 [label="return"];
    bb160__0_1287 -> bb161__0_1287 [label="return"];
    bb160__0_1287 -> bb213__0_1287 [label="unwind"];
    bb161__0_1287 -> bb183__0_1287 [label=""];
    bb162__0_1287 -> bb163__0_1287 [label="return"];
    bb163__0_1287 -> bb170__0_1287 [label="0"];
    bb163__0_1287 -> bb164__0_1287 [label="otherwise"];
    bb164__0_1287 -> bb165__0_1287 [label="return"];
    bb165__0_1287 -> bb166__0_1287 [label="return"];
    bb165__0_1287 -> bb206__0_1287 [label="unwind"];
    bb166__0_1287 -> bb167__0_1287 [label="0"];
    bb166__0_1287 -> bb168__0_1287 [label="1"];
    bb166__0_1287 -> bb14__0_1287 [label="otherwise"];
    bb167__0_1287 -> bb171__0_1287 [label=""];
    bb168__0_1287 -> bb169__0_1287 [label="return"];
    bb168__0_1287 -> bb212__0_1287 [label="unwind"];
    bb169__0_1287 -> bb183__0_1287 [label=""];
    bb170__0_1287 -> bb171__0_1287 [label=""];
    bb171__0_1287 -> bb172__0_1287 [label="return"];
    bb172__0_1287 -> bb173__0_1287 [label="return"];
    bb173__0_1287 -> bb174__0_1287 [label="return"];
    bb174__0_1287 -> bb175__0_1287 [label="success"];
    bb175__0_1287 -> bb176__0_1287 [label="return"];
    bb176__0_1287 -> bb177__0_1287 [label="return"];
    bb177__0_1287 -> bb178__0_1287 [label="return"];
    bb178__0_1287 -> bb179__0_1287 [label="return"];
    bb178__0_1287 -> bb206__0_1287 [label="unwind"];
    bb179__0_1287 -> bb180__0_1287 [label="0"];
    bb179__0_1287 -> bb181__0_1287 [label="1"];
    bb179__0_1287 -> bb14__0_1287 [label="otherwise"];
    bb180__0_1287 -> bb193__0_1287 [label=""];
    bb181__0_1287 -> bb182__0_1287 [label="return"];
    bb181__0_1287 -> bb211__0_1287 [label="unwind"];
    bb182__0_1287 -> bb183__0_1287 [label=""];
    bb183__0_1287 -> bb187__0_1287 [label=""];
    bb184__0_1287 -> bb185__0_1287 [label=""];
    bb185__0_1287 -> bb186__0_1287 [label=""];
    bb186__0_1287 -> bb187__0_1287 [label=""];
    bb187__0_1287 -> bb188__0_1287 [label=""];
    bb188__0_1287 -> bb189__0_1287 [label=""];
    bb189__0_1287 -> bb192__0_1287 [label=""];
    bb190__0_1287 -> bb192__0_1287 [label=""];
    bb191__0_1287 -> bb192__0_1287 [label=""];
    bb192__0_1287 -> bb193__0_1287 [label=""];
    bb194__0_1287 -> bb206__0_1287 [label="return"];
    bb195__0_1287 -> bb206__0_1287 [label="return"];
    bb196__0_1287 -> bb206__0_1287 [label="return"];
    bb197__0_1287 -> bb206__0_1287 [label="return"];
    bb198__0_1287 -> bb206__0_1287 [label="return"];
    bb199__0_1287 -> bb206__0_1287 [label="return"];
    bb200__0_1287 -> bb206__0_1287 [label="return"];
    bb201__0_1287 -> bb206__0_1287 [label="return"];
    bb202__0_1287 -> bb206__0_1287 [label="return"];
    bb203__0_1287 -> bb206__0_1287 [label="return"];
    bb204__0_1287 -> bb206__0_1287 [label="return"];
    bb205__0_1287 -> bb206__0_1287 [label="return"];
    bb207__0_1287 -> bb17__0_1287 [label="return"];
    bb208__0_1287 -> bb30__0_1287 [label="return"];
    bb209__0_1287 -> bb35__0_1287 [label="return"];
    bb210__0_1287 -> bb48__0_1287 [label="return"];
    bb211__0_1287 -> bb206__0_1287 [label=""];
    bb212__0_1287 -> bb206__0_1287 [label=""];
    bb213__0_1287 -> bb206__0_1287 [label=""];
    bb214__0_1287 -> bb206__0_1287 [label=""];
    bb215__0_1287 -> bb206__0_1287 [label=""];
    bb216__0_1287 -> bb206__0_1287 [label=""];
    bb217__0_1287 -> bb206__0_1287 [label=""];
    bb218__0_1287 -> bb206__0_1287 [label=""];
}
