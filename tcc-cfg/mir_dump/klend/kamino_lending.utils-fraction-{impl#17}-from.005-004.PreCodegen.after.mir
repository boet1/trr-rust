// MIR for `utils::fraction::<impl at programs\klend\src\utils\fraction.rs:376:1: 376:25>::from` after PreCodegen

fn utils::fraction::<impl at programs\klend\src\utils\fraction.rs:376:1: 376:25>::from(_1: uint_types::U128) -> uint_types::U256 {
    debug value => _1;
    let mut _0: utils::fraction::uint_types::U256;
    let mut _2: [u64; 4];
    let mut _3: u64;
    let _4: usize;
    let mut _5: usize;
    let mut _6: bool;
    let mut _7: u64;
    let _8: usize;
    let mut _9: usize;
    let mut _10: bool;

    bb0: {
        StorageLive(_2);
        StorageLive(_3);
        StorageLive(_4);
        _4 = const 0_usize;
        _5 = Len((_1.0: [u64; 2]));
        _6 = Lt(_4, _5);
        assert(move _6, "index out of bounds: the length is {} but the index is {}", move _5, _4) -> [success: bb1, unwind continue];
    }

    bb1: {
        _3 = (_1.0: [u64; 2])[_4];
        StorageLive(_7);
        StorageLive(_8);
        _8 = const 1_usize;
        _9 = Len((_1.0: [u64; 2]));
        _10 = Lt(_8, _9);
        assert(move _10, "index out of bounds: the length is {} but the index is {}", move _9, _8) -> [success: bb2, unwind continue];
    }

    bb2: {
        _7 = (_1.0: [u64; 2])[_8];
        _2 = [move _3, move _7, const 0_u64, const 0_u64];
        StorageDead(_7);
        StorageDead(_3);
        _0 = uint_types::U256(move _2);
        StorageDead(_2);
        StorageDead(_8);
        StorageDead(_4);
        return;
    }
}
