digraph Mir_0_1696 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn obligation::Obligation::get_borrows_asset_tiers(_1: &amp;ReErased state::obligation::Obligation) -&gt; std::vec::Vec&lt;state::reserve::AssetTier, std::alloc::Global&gt;<br align="left"/>let mut _2: std::iter::FilterMap&lt;std::iter::Enumerate&lt;std::slice::Iter&lt;ReErased, state::obligation::ObligationLiquidity&gt;&gt;, Closure(DefId(0:1697 ~ kamino_lending[6389]::state::obligation::{impl#2}::get_borrows_asset_tiers::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn(((usize, &amp;ReErased state::obligation::ObligationLiquidity),)) -&gt; std::option::Option&lt;state::reserve::AssetTier&gt;, []), (&amp;ReErased state::obligation::Obligation,)])&gt;;<br align="left"/>let mut _3: std::iter::Enumerate&lt;std::slice::Iter&lt;ReErased, state::obligation::ObligationLiquidity&gt;&gt;;<br align="left"/>let mut _4: std::slice::Iter&lt;ReErased, state::obligation::ObligationLiquidity&gt;;<br align="left"/>let mut _5: &amp;ReErased [state::obligation::ObligationLiquidity];<br align="left"/>let mut _6: &amp;ReErased [state::obligation::ObligationLiquidity; 5_usize];<br align="left"/>let mut _7: Closure(DefId(0:1697 ~ kamino_lending[6389]::state::obligation::{impl#2}::get_borrows_asset_tiers::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn(((usize, &amp;ReErased state::obligation::ObligationLiquidity),)) -&gt; std::option::Option&lt;state::reserve::AssetTier&gt;, []), (&amp;ReErased state::obligation::Obligation,)]);<br align="left"/>let mut _8: &amp;ReErased state::obligation::Obligation;<br align="left"/>debug self =&gt; _1;<br align="left"/>>;
    bb0__0_1696 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = &amp;((*_1).7: [state::obligation::ObligationLiquidity; 5])<br/>_5 = move _6 as &amp;[state::obligation::ObligationLiquidity] (PointerCoercion(Unsize))<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = core::slice::&lt;impl [obligation::ObligationLiquidity]&gt;::iter(move _5)</td></tr></table>>];
    bb1__0_1696 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">_3 = &lt;std::slice::Iter&lt;'_, obligation::ObligationLiquidity&gt; as Iterator&gt;::enumerate(move _4)</td></tr></table>>];
    bb2__0_1696 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = &amp;(*_1)<br/>_7 = {closure@programs\klend\src\state\obligation.rs:458:25: 458:42} { self: move _8 }<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">_2 = &lt;Enumerate&lt;std::slice::Iter&lt;'_, obligation::ObligationLiquidity&gt;&gt; as Iterator&gt;::filter_map::&lt;reserve::AssetTier, {closure@programs\klend\src\state\obligation.rs:458:25: 458:42}&gt;(move _3, move _7)</td></tr></table>>];
    bb3__0_1696 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">_0 = &lt;FilterMap&lt;Enumerate&lt;std::slice::Iter&lt;'_, obligation::ObligationLiquidity&gt;&gt;, {closure@programs\klend\src\state\obligation.rs:458:25: 458:42}&gt; as Iterator&gt;::collect::&lt;Vec&lt;reserve::AssetTier&gt;&gt;(move _2)</td></tr></table>>];
    bb4__0_1696 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_2)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_1696 -> bb1__0_1696 [label="return"];
    bb1__0_1696 -> bb2__0_1696 [label="return"];
    bb2__0_1696 -> bb3__0_1696 [label="return"];
    bb3__0_1696 -> bb4__0_1696 [label="return"];
}
