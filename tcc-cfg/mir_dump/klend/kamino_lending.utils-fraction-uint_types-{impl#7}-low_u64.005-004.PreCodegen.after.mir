// MIR for `uint_types::<impl at C:\Users\Yellow Letter HQ\.cargo\registry\src\index.crates.io-6f17d22bba15001f\uint-0.9.5\src\uint.rs:573:3: 573:13>::low_u64` after PreCodegen

fn uint_types::<impl at C:\Users\Yellow Letter HQ\.cargo\registry\src\index.crates.io-6f17d22bba15001f\uint-0.9.5\src\uint.rs:573:3: 573:13>::low_u64(_1: &uint_types::U256) -> u64 {
    debug self => _1;
    let mut _0: u64;
    let _2: &[u64; 4];
    let _3: usize;
    let mut _4: usize;
    let mut _5: bool;
    scope 1 {
        debug arr => _2;
    }

    bb0: {
        StorageLive(_2);
        _2 = &((*_1).0: [u64; 4]);
        StorageLive(_3);
        _3 = const 0_usize;
        _4 = Len((*_2));
        _5 = Lt(_3, _4);
        assert(move _5, "index out of bounds: the length is {} but the index is {}", move _4, _3) -> [success: bb1, unwind continue];
    }

    bb1: {
        _0 = (*_2)[_3];
        StorageDead(_2);
        StorageDead(_3);
        return;
    }
}
