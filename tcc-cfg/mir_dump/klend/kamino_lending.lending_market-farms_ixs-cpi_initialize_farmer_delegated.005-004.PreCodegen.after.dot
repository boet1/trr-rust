digraph Mir_0_1080 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn cpi_initialize_farmer_delegated(_1: &amp;ReErased anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, handlers::handler_init_obligation_farms_for_reserve::InitObligationFarmsForReserve&lt;ReErased&gt;&gt;, _2: &amp;ReErased anchor_lang::prelude::Pubkey, _3: anchor_lang::prelude::Pubkey) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _4: std::cell::Ref&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _5: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::Ref&lt;ReErased, state::lending_market::LendingMarket&gt;&gt;;<br align="left"/>let mut _6: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::lending_market::LendingMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _7: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let mut _8: isize;<br align="left"/>let _9: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _10: !;<br align="left"/>let mut _11: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _12: std::cell::Ref&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let _13: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _14: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let _15: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _16: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _17: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _18: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _19: std::vec::Vec&lt;anchor_lang::prelude::AccountMeta, std::alloc::Global&gt;;<br align="left"/>let mut _20: &amp;ReErased farms::accounts::InitializeUser;<br align="left"/>let _21: farms::accounts::InitializeUser;<br align="left"/>let mut _22: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _23: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _24: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _25: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _26: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _27: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _28: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _29: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _30: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _31: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _32: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _33: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _34: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _35: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _36: &amp;ReErased anchor_lang::prelude::Program&lt;ReErased, anchor_lang::system_program::System&gt;;<br align="left"/>let mut _37: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _38: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _39: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _40: &amp;ReErased anchor_lang::prelude::Sysvar&lt;ReErased, anchor_lang::prelude::Rent&gt;;<br align="left"/>let mut _41: std::option::Option&lt;bool&gt;;<br align="left"/>let _42: std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _43: &amp;ReErased farms::instruction::InitializeUser;<br align="left"/>let _44: farms::instruction::InitializeUser;<br align="left"/>let _45: solana_program::instruction::Instruction;<br align="left"/>let mut _46: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _47: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _48: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _49: &amp;ReErased anchor_lang::prelude::Program&lt;ReErased, farms::program::Farms&gt;;<br align="left"/>let mut _50: std::vec::Vec&lt;anchor_lang::prelude::AccountMeta, std::alloc::Global&gt;;<br align="left"/>let mut _51: std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _52: &amp;ReErased [&amp;ReErased [u8]; 3_usize];<br align="left"/>let _53: [&amp;ReErased [u8]; 3_usize];<br align="left"/>let mut _54: &amp;ReErased [u8];<br align="left"/>let mut _55: &amp;ReErased [u8];<br align="left"/>let _56: &amp;ReErased [u8];<br align="left"/>let mut _57: &amp;ReErased [u8];<br align="left"/>let _58: &amp;ReErased [u8];<br align="left"/>let mut _59: &amp;ReErased [u8];<br align="left"/>let _60: &amp;ReErased [u8];<br align="left"/>let mut _61: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _62: &amp;ReErased [u8];<br align="left"/>let mut _63: &amp;ReErased [u8; 1_usize];<br align="left"/>let _64: &amp;ReErased [u8; 1_usize];<br align="left"/>let _65: [u8; 1_usize];<br align="left"/>let mut _66: u8;<br align="left"/>let mut _67: u64;<br align="left"/>let mut _68: &amp;ReErased state::lending_market::LendingMarket;<br align="left"/>let mut _69: &amp;ReErased std::cell::Ref&lt;ReErased, state::lending_market::LendingMarket&gt;;<br align="left"/>let _70: std::vec::Vec&lt;anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _71: &amp;ReErased handlers::handler_init_obligation_farms_for_reserve::InitObligationFarmsForReserve&lt;ReErased&gt;;<br align="left"/>let mut _72: std::result::Result&lt;(), anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _73: &amp;ReErased solana_program::instruction::Instruction;<br align="left"/>let _74: &amp;ReErased solana_program::instruction::Instruction;<br align="left"/>let mut _75: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let _76: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _77: &amp;ReErased std::vec::Vec&lt;anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, std::alloc::Global&gt;;<br align="left"/>let _78: &amp;ReErased std::vec::Vec&lt;anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _79: &amp;ReErased [&amp;ReErased [&amp;ReErased [u8]]];<br align="left"/>let mut _80: &amp;ReErased [&amp;ReErased [&amp;ReErased [u8]]; 1_usize];<br align="left"/>let _81: &amp;ReErased [&amp;ReErased [&amp;ReErased [u8]]; 1_usize];<br align="left"/>let _82: [&amp;ReErased [&amp;ReErased [u8]]; 1_usize];<br align="left"/>let mut _83: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let mut _84: &amp;ReErased [&amp;ReErased [u8]; 3_usize];<br align="left"/>let mut _85: &amp;ReErased farms::instruction::InitializeUser;<br align="left"/>let mut _86: &amp;ReErased mut handlers::handler_init_obligation_farms_for_reserve::InitObligationFarmsForReserve&lt;ReErased&gt;;<br align="left"/>let mut _87: &amp;ReErased mut handlers::handler_init_obligation_farms_for_reserve::InitObligationFarmsForReserve&lt;ReErased&gt;;<br align="left"/>let mut _88: &amp;ReErased mut handlers::handler_init_obligation_farms_for_reserve::InitObligationFarmsForReserve&lt;ReErased&gt;;<br align="left"/>let mut _89: &amp;ReErased mut handlers::handler_init_obligation_farms_for_reserve::InitObligationFarmsForReserve&lt;ReErased&gt;;<br align="left"/>let mut _90: &amp;ReErased mut handlers::handler_init_obligation_farms_for_reserve::InitObligationFarmsForReserve&lt;ReErased&gt;;<br align="left"/>let mut _91: &amp;ReErased mut handlers::handler_init_obligation_farms_for_reserve::InitObligationFarmsForReserve&lt;ReErased&gt;;<br align="left"/>let mut _92: &amp;ReErased mut handlers::handler_init_obligation_farms_for_reserve::InitObligationFarmsForReserve&lt;ReErased&gt;;<br align="left"/>let mut _93: &amp;ReErased mut handlers::handler_init_obligation_farms_for_reserve::InitObligationFarmsForReserve&lt;ReErased&gt;;<br align="left"/>let mut _94: &amp;ReErased mut handlers::handler_init_obligation_farms_for_reserve::InitObligationFarmsForReserve&lt;ReErased&gt;;<br align="left"/>let mut _95: &amp;ReErased mut handlers::handler_init_obligation_farms_for_reserve::InitObligationFarmsForReserve&lt;ReErased&gt;;<br align="left"/>let mut _96: bool;<br align="left"/>let mut _97: bool;<br align="left"/>let mut _98: isize;<br align="left"/>let mut _99: isize;<br align="left"/>let mut _100: isize;<br align="left"/>let mut _101: isize;<br align="left"/>let mut _102: isize;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug obligation =&gt; _2;<br align="left"/>debug farm =&gt; _3;<br align="left"/>debug lending_market =&gt; _4;<br align="left"/>debug residual =&gt; _9;<br align="left"/>debug val =&gt; _12;<br align="left"/>debug lending_market_key =&gt; _13;<br align="left"/>debug farmer =&gt; _15;<br align="left"/>debug accounts =&gt; _19;<br align="left"/>debug data =&gt; _42;<br align="left"/>debug instruction =&gt; _45;<br align="left"/>debug lending_market_authority_signer_seeds =&gt; _52;<br align="left"/>debug account_infos =&gt; _70;<br align="left"/>>;
    bb0__0_1080 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_97 = const false<br/>_96 = const false<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_86 = deref_copy ((*_1).1: &amp;mut handlers::handler_init_obligation_farms_for_reserve::InitObligationFarmsForReserve&lt;'_&gt;)<br/>_7 = &amp;((*_86).7: anchor_lang::prelude::AccountLoader&lt;'_, state::lending_market::LendingMarket&gt;)<br/></td></tr><tr><td align="left">_6 = anchor_lang::prelude::AccountLoader::&lt;'_, state::lending_market::LendingMarket&gt;::load(move _7)</td></tr></table>>];
    bb1__0_1080 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/></td></tr><tr><td align="left">_5 = &lt;std::result::Result&lt;Ref&lt;'_, state::lending_market::LendingMarket&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _6)</td></tr></table>>];
    bb2__0_1080 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_8 = discriminant(_5)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb3__0_1080 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = move ((_5 as Continue).0: std::cell::Ref&lt;'_, state::lending_market::LendingMarket&gt;)<br/>_4 = move _12<br/>StorageDead(_12)<br/>_98 = discriminant(_5)<br/>StorageDead(_5)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_87 = deref_copy ((*_1).1: &amp;mut handlers::handler_init_obligation_farms_for_reserve::InitObligationFarmsForReserve&lt;'_&gt;)<br/>_14 = &amp;((*_87).7: anchor_lang::prelude::AccountLoader&lt;'_, state::lending_market::LendingMarket&gt;)<br/></td></tr><tr><td align="left">_13 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, state::lending_market::LendingMarket&gt; as anchor_lang::Key&gt;::key(move _14)</td></tr></table>>];
    bb4__0_1080 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_1080 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>_9 = move ((_5 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_11)<br/>_11 = move _9<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _11)</td></tr></table>>];
    bb6__0_1080 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_9)<br/>_100 = discriminant(_5)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_1080 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_88 = deref_copy ((*_1).1: &amp;mut handlers::handler_init_obligation_farms_for_reserve::InitObligationFarmsForReserve&lt;'_&gt;)<br/>_18 = &amp;((*_88).6: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/></td></tr><tr><td align="left">_17 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::ToAccountInfo&lt;'_&gt;&gt;::to_account_info(move _18)</td></tr></table>>];
    bb8__0_1080 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">_16 = &amp;_17<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">_15 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::Key&gt;::key(move _16)</td></tr></table>>];
    bb9__0_1080 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/></td></tr><tr><td align="left">drop(_17)</td></tr></table>>];
    bb10__0_1080 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>_89 = deref_copy ((*_1).1: &amp;mut handlers::handler_init_obligation_farms_for_reserve::InitObligationFarmsForReserve&lt;'_&gt;)<br/>_25 = &amp;((*_89).3: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/></td></tr><tr><td align="left">_24 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::ToAccountInfo&lt;'_&gt;&gt;::to_account_info(move _25)</td></tr></table>>];
    bb11__0_1080 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">_23 = &amp;_24<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">_22 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::Key&gt;::key(move _23)</td></tr></table>>];
    bb12__0_1080 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_90 = deref_copy ((*_1).1: &amp;mut handlers::handler_init_obligation_farms_for_reserve::InitObligationFarmsForReserve&lt;'_&gt;)<br/>_27 = &amp;((*_90).0: anchor_lang::prelude::Signer&lt;'_&gt;)<br/></td></tr><tr><td align="left">_26 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::Key&gt;::key(move _27)</td></tr></table>>];
    bb13__0_1080 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageLive(_28)<br/>_28 = _15<br/>StorageLive(_29)<br/>_29 = _3<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>_91 = deref_copy ((*_1).1: &amp;mut handlers::handler_init_obligation_farms_for_reserve::InitObligationFarmsForReserve&lt;'_&gt;)<br/>_31 = &amp;((*_91).1: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/></td></tr><tr><td align="left">_30 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::Key&gt;::key(move _31)</td></tr></table>>];
    bb14__0_1080 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageLive(_32)<br/>_32 = (*_2)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>_92 = deref_copy ((*_1).1: &amp;mut handlers::handler_init_obligation_farms_for_reserve::InitObligationFarmsForReserve&lt;'_&gt;)<br/>_36 = &amp;((*_92).10: anchor_lang::prelude::Program&lt;'_, anchor_lang::system_program::System&gt;)<br/></td></tr><tr><td align="left">_35 = &lt;anchor_lang::prelude::Program&lt;'_, anchor_lang::system_program::System&gt; as anchor_lang::ToAccountInfo&lt;'_&gt;&gt;::to_account_info(move _36)</td></tr></table>>];
    bb15__0_1080 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">_34 = &amp;_35<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">_33 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::Key&gt;::key(move _34)</td></tr></table>>];
    bb16__0_1080 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_93 = deref_copy ((*_1).1: &amp;mut handlers::handler_init_obligation_farms_for_reserve::InitObligationFarmsForReserve&lt;'_&gt;)<br/>_40 = &amp;((*_93).9: anchor_lang::prelude::Sysvar&lt;'_, anchor_lang::prelude::Rent&gt;)<br/></td></tr><tr><td align="left">_39 = &lt;anchor_lang::prelude::Sysvar&lt;'_, anchor_lang::prelude::Rent&gt; as anchor_lang::ToAccountInfo&lt;'_&gt;&gt;::to_account_info(move _40)</td></tr></table>>];
    bb17__0_1080 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">_38 = &amp;_39<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">_37 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::Key&gt;::key(move _38)</td></tr></table>>];
    bb18__0_1080 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>_21 = farms::accounts::InitializeUser { authority: move _22, payer: move _26, owner: move _30, delegatee: move _32, user_state: move _28, farm_state: move _29, system_program: move _33, rent: move _37 }<br/>_20 = &amp;_21<br/>StorageDead(_37)<br/>StorageDead(_33)<br/>StorageDead(_32)<br/>StorageDead(_30)<br/>StorageDead(_29)<br/>StorageDead(_28)<br/>StorageDead(_26)<br/>StorageDead(_22)<br/>StorageLive(_41)<br/>_41 = std::option::Option::&lt;bool&gt;::None<br/></td></tr><tr><td align="left">_19 = &lt;farms::accounts::InitializeUser as anchor_lang::ToAccountMetas&gt;::to_account_metas(move _20, move _41)</td></tr></table>>];
    bb19__0_1080 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">_97 = const true<br/>StorageDead(_41)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">drop(_39)</td></tr></table>>];
    bb20__0_1080 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/></td></tr><tr><td align="left">drop(_35)</td></tr></table>>];
    bb21__0_1080 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/></td></tr><tr><td align="left">drop(_24)</td></tr></table>>];
    bb22__0_1080 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_21)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>_85 = const _<br/>_43 = &amp;(*_85)<br/></td></tr><tr><td align="left">_42 = &lt;farms::instruction::InitializeUser as InstructionData&gt;::data(move _43)</td></tr></table>>];
    bb23__0_1080 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">_96 = const true<br/>StorageDead(_43)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>_94 = deref_copy ((*_1).1: &amp;mut handlers::handler_init_obligation_farms_for_reserve::InitObligationFarmsForReserve&lt;'_&gt;)<br/>_49 = &amp;((*_94).8: anchor_lang::prelude::Program&lt;'_, farms::program::Farms&gt;)<br/></td></tr><tr><td align="left">_48 = &lt;anchor_lang::prelude::Program&lt;'_, Farms&gt; as Deref&gt;::deref(move _49)</td></tr></table>>];
    bb24__0_1080 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">_47 = &amp;(*_48)<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">_46 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::Key&gt;::key(move _47)</td></tr></table>>];
    bb25__0_1080 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageLive(_50)<br/>_97 = const false<br/>_50 = move _19<br/>StorageLive(_51)<br/>_96 = const false<br/>_51 = move _42<br/>_45 = Instruction { program_id: move _46, accounts: move _50, data: move _51 }<br/>StorageDead(_51)<br/>StorageDead(_50)<br/>StorageDead(_46)<br/>StorageDead(_48)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>_56 = const _<br/>_55 = &amp;(*_56)<br/>_54 = _55<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>_61 = &amp;_13<br/></td></tr><tr><td align="left">_60 = &lt;anchor_lang::prelude::Pubkey as AsRef&lt;[u8]&gt;&gt;::as_ref(move _61)</td></tr></table>>];
    bb26__0_1080 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">_59 = &amp;(*_60)<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">_58 = &lt;[u8] as AsRef&lt;[u8]&gt;&gt;::as_ref(move _59)</td></tr></table>>];
    bb27__0_1080 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">_57 = &amp;(*_58)<br/>StorageDead(_59)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>_69 = &amp;_4<br/></td></tr><tr><td align="left">_68 = &lt;Ref&lt;'_, state::lending_market::LendingMarket&gt; as Deref&gt;::deref(move _69)</td></tr></table>>];
    bb28__0_1080 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>_67 = ((*_68).1: u64)<br/>_66 = move _67 as u8 (IntToInt)<br/>StorageDead(_67)<br/>_65 = [move _66]<br/>StorageDead(_66)<br/>_64 = &amp;_65<br/>_63 = &amp;(*_64)<br/>_62 = move _63 as &amp;[u8] (PointerCoercion(Unsize))<br/>StorageDead(_63)<br/>_53 = [move _54, move _57, move _62]<br/>StorageDead(_62)<br/>StorageDead(_57)<br/>StorageDead(_54)<br/>_52 = &amp;_53<br/>StorageDead(_68)<br/>StorageDead(_64)<br/>StorageDead(_60)<br/>StorageDead(_58)<br/>StorageDead(_56)<br/>StorageDead(_55)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>_95 = deref_copy ((*_1).1: &amp;mut handlers::handler_init_obligation_farms_for_reserve::InitObligationFarmsForReserve&lt;'_&gt;)<br/>_71 = &amp;(*_95)<br/></td></tr><tr><td align="left">_70 = &lt;handlers::handler_init_obligation_farms_for_reserve::InitObligationFarmsForReserve&lt;'_&gt; as anchor_lang::ToAccountInfos&lt;'_&gt;&gt;::to_account_infos(move _71)</td></tr></table>>];
    bb29__0_1080 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>_74 = &amp;_45<br/>_73 = &amp;(*_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>_78 = &amp;_70<br/>_77 = &amp;(*_78)<br/></td></tr><tr><td align="left">_76 = &lt;Vec&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as Deref&gt;::deref(move _77)</td></tr></table>>];
    bb30__0_1080 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">_75 = &amp;(*_76)<br/>StorageDead(_77)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>_84 = &amp;(*_52)<br/>_83 = move _84 as &amp;[&amp;[u8]] (PointerCoercion(Unsize))<br/>StorageDead(_84)<br/>_82 = [move _83]<br/>StorageDead(_83)<br/>_81 = &amp;_82<br/>_80 = &amp;(*_81)<br/>_79 = move _80 as &amp;[&amp;[&amp;[u8]]] (PointerCoercion(Unsize))<br/>StorageDead(_80)<br/></td></tr><tr><td align="left">_72 = invoke_signed(move _73, move _75, move _79)</td></tr></table>>];
    bb31__0_1080 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageDead(_75)<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">_0 = std::result::Result::&lt;(), anchor_lang::prelude::ProgramError&gt;::map_err::&lt;anchor_lang::error::Error, fn(anchor_lang::prelude::ProgramError) -&gt; anchor_lang::error::Error {&lt;anchor_lang::prelude::ProgramError as Into&lt;anchor_lang::error::Error&gt;&gt;::into}&gt;(move _72, &lt;anchor_lang::prelude::ProgramError as Into&lt;anchor_lang::error::Error&gt;&gt;::into)</td></tr></table>>];
    bb32__0_1080 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/></td></tr><tr><td align="left">drop(_70)</td></tr></table>>];
    bb33__0_1080 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_65)<br/>StorageDead(_53)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">drop(_45)</td></tr></table>>];
    bb34__0_1080 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>_96 = const false<br/>StorageDead(_42)<br/>_97 = const false<br/>StorageDead(_19)<br/>StorageDead(_15)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">drop(_4)</td></tr></table>>];
    bb35__0_1080 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageDead(_82)<br/>StorageDead(_81)<br/>StorageDead(_78)<br/>StorageDead(_76)<br/>StorageDead(_74)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_1080 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left">return</td></tr></table>>];
    bb37__0_1080 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">37 (cleanup)</td></tr><tr><td align="left">drop(_70)</td></tr></table>>];
    bb38__0_1080 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">38 (cleanup)</td></tr><tr><td align="left">drop(_45)</td></tr></table>>];
    bb39__0_1080 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">39 (cleanup)</td></tr><tr><td align="left">drop(_35)</td></tr></table>>];
    bb40__0_1080 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">40 (cleanup)</td></tr><tr><td align="left">drop(_24)</td></tr></table>>];
    bb41__0_1080 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">41 (cleanup)</td></tr><tr><td align="left">drop(_39)</td></tr></table>>];
    bb42__0_1080 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">42 (cleanup)</td></tr><tr><td align="left">drop(_35)</td></tr></table>>];
    bb43__0_1080 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">43 (cleanup)</td></tr><tr><td align="left">drop(_24)</td></tr></table>>];
    bb44__0_1080 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">44 (cleanup)</td></tr><tr><td align="left">drop(_17)</td></tr></table>>];
    bb45__0_1080 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">45 (cleanup)</td></tr><tr><td align="left">drop(_4)</td></tr></table>>];
    bb46__0_1080 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">46 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb47__0_1080 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">47 (cleanup)</td></tr><tr><td align="left">drop(_42)</td></tr></table>>];
    bb48__0_1080 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">48 (cleanup)</td></tr><tr><td align="left">switchInt(_96)</td></tr></table>>];
    bb49__0_1080 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">49 (cleanup)</td></tr><tr><td align="left">drop(_19)</td></tr></table>>];
    bb50__0_1080 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">50 (cleanup)</td></tr><tr><td align="left">switchInt(_97)</td></tr></table>>];
    bb51__0_1080 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">51 (cleanup)</td></tr><tr><td align="left" balign="left">_102 = discriminant(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_1080 -> bb1__0_1080 [label="return"];
    bb1__0_1080 -> bb2__0_1080 [label="return"];
    bb1__0_1080 -> bb46__0_1080 [label="unwind"];
    bb2__0_1080 -> bb3__0_1080 [label="0"];
    bb2__0_1080 -> bb5__0_1080 [label="1"];
    bb2__0_1080 -> bb4__0_1080 [label="otherwise"];
    bb3__0_1080 -> bb7__0_1080 [label="return"];
    bb3__0_1080 -> bb45__0_1080 [label="unwind"];
    bb5__0_1080 -> bb6__0_1080 [label="return"];
    bb5__0_1080 -> bb51__0_1080 [label="unwind"];
    bb6__0_1080 -> bb36__0_1080 [label=""];
    bb7__0_1080 -> bb8__0_1080 [label="return"];
    bb7__0_1080 -> bb45__0_1080 [label="unwind"];
    bb8__0_1080 -> bb9__0_1080 [label="return"];
    bb8__0_1080 -> bb44__0_1080 [label="unwind"];
    bb9__0_1080 -> bb10__0_1080 [label="return"];
    bb9__0_1080 -> bb45__0_1080 [label="unwind"];
    bb10__0_1080 -> bb11__0_1080 [label="return"];
    bb10__0_1080 -> bb45__0_1080 [label="unwind"];
    bb11__0_1080 -> bb12__0_1080 [label="return"];
    bb11__0_1080 -> bb43__0_1080 [label="unwind"];
    bb12__0_1080 -> bb13__0_1080 [label="return"];
    bb12__0_1080 -> bb43__0_1080 [label="unwind"];
    bb13__0_1080 -> bb14__0_1080 [label="return"];
    bb13__0_1080 -> bb43__0_1080 [label="unwind"];
    bb14__0_1080 -> bb15__0_1080 [label="return"];
    bb14__0_1080 -> bb43__0_1080 [label="unwind"];
    bb15__0_1080 -> bb16__0_1080 [label="return"];
    bb15__0_1080 -> bb42__0_1080 [label="unwind"];
    bb16__0_1080 -> bb17__0_1080 [label="return"];
    bb16__0_1080 -> bb42__0_1080 [label="unwind"];
    bb17__0_1080 -> bb18__0_1080 [label="return"];
    bb17__0_1080 -> bb41__0_1080 [label="unwind"];
    bb18__0_1080 -> bb19__0_1080 [label="return"];
    bb18__0_1080 -> bb41__0_1080 [label="unwind"];
    bb19__0_1080 -> bb20__0_1080 [label="return"];
    bb19__0_1080 -> bb39__0_1080 [label="unwind"];
    bb20__0_1080 -> bb21__0_1080 [label="return"];
    bb20__0_1080 -> bb40__0_1080 [label="unwind"];
    bb21__0_1080 -> bb22__0_1080 [label="return"];
    bb21__0_1080 -> bb50__0_1080 [label="unwind"];
    bb22__0_1080 -> bb23__0_1080 [label="return"];
    bb22__0_1080 -> bb50__0_1080 [label="unwind"];
    bb23__0_1080 -> bb24__0_1080 [label="return"];
    bb23__0_1080 -> bb48__0_1080 [label="unwind"];
    bb24__0_1080 -> bb25__0_1080 [label="return"];
    bb24__0_1080 -> bb48__0_1080 [label="unwind"];
    bb25__0_1080 -> bb26__0_1080 [label="return"];
    bb25__0_1080 -> bb38__0_1080 [label="unwind"];
    bb26__0_1080 -> bb27__0_1080 [label="return"];
    bb26__0_1080 -> bb38__0_1080 [label="unwind"];
    bb27__0_1080 -> bb28__0_1080 [label="return"];
    bb27__0_1080 -> bb38__0_1080 [label="unwind"];
    bb28__0_1080 -> bb29__0_1080 [label="return"];
    bb28__0_1080 -> bb38__0_1080 [label="unwind"];
    bb29__0_1080 -> bb30__0_1080 [label="return"];
    bb29__0_1080 -> bb37__0_1080 [label="unwind"];
    bb30__0_1080 -> bb31__0_1080 [label="return"];
    bb30__0_1080 -> bb37__0_1080 [label="unwind"];
    bb31__0_1080 -> bb32__0_1080 [label="return"];
    bb31__0_1080 -> bb37__0_1080 [label="unwind"];
    bb32__0_1080 -> bb33__0_1080 [label="return"];
    bb32__0_1080 -> bb38__0_1080 [label="unwind"];
    bb33__0_1080 -> bb34__0_1080 [label="return"];
    bb33__0_1080 -> bb48__0_1080 [label="unwind"];
    bb34__0_1080 -> bb35__0_1080 [label="return"];
    bb34__0_1080 -> bb46__0_1080 [label="unwind"];
    bb35__0_1080 -> bb36__0_1080 [label=""];
    bb37__0_1080 -> bb38__0_1080 [label="return"];
    bb38__0_1080 -> bb48__0_1080 [label="return"];
    bb39__0_1080 -> bb40__0_1080 [label="return"];
    bb40__0_1080 -> bb50__0_1080 [label="return"];
    bb41__0_1080 -> bb42__0_1080 [label="return"];
    bb42__0_1080 -> bb43__0_1080 [label="return"];
    bb43__0_1080 -> bb45__0_1080 [label="return"];
    bb44__0_1080 -> bb45__0_1080 [label="return"];
    bb45__0_1080 -> bb46__0_1080 [label="return"];
    bb47__0_1080 -> bb50__0_1080 [label="return"];
    bb48__0_1080 -> bb50__0_1080 [label="0"];
    bb48__0_1080 -> bb47__0_1080 [label="otherwise"];
    bb49__0_1080 -> bb45__0_1080 [label="return"];
    bb50__0_1080 -> bb45__0_1080 [label="0"];
    bb50__0_1080 -> bb49__0_1080 [label="otherwise"];
    bb51__0_1080 -> bb46__0_1080 [label=""];
}
