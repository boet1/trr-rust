digraph Mir_0_1419 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn update_counter::{closure#3}(_1: Closure(DefId(0:1419 ~ kamino_lending[6389]::lending_market::withdrawal_cap_operations::utils::update_counter::{closure#3}), [i32, Binder(extern &quot;RustCall&quot; fn((std::num::TryFromIntError,)) -&gt; LendingError, []), ()]), _2: std::num::TryFromIntError) -&gt; LendingError<br align="left"/>let mut _3: LendingError;<br align="left"/>let _4: LendingError;<br align="left"/>let _5: ();<br align="left"/>let _6: ();<br align="left"/>let mut _7: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _8: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _9: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _10: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _11: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _12: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _13: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _14: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _15: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _16: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _17: &amp;ReErased &amp;ReErased LendingError;<br align="left"/>let _18: &amp;ReErased &amp;ReErased LendingError;<br align="left"/>let _19: &amp;ReErased LendingError;<br align="left"/>let mut _20: &amp;ReErased [core::fmt::rt::Placeholder];<br align="left"/>let mut _21: &amp;ReErased [core::fmt::rt::Placeholder; 1_usize];<br align="left"/>let _22: &amp;ReErased [core::fmt::rt::Placeholder; 1_usize];<br align="left"/>let _23: [core::fmt::rt::Placeholder; 1_usize];<br align="left"/>let mut _24: core::fmt::rt::Placeholder;<br align="left"/>let mut _25: core::fmt::rt::Alignment;<br align="left"/>let mut _26: core::fmt::rt::Count;<br align="left"/>let mut _27: core::fmt::rt::Count;<br align="left"/>let mut _28: core::fmt::rt::UnsafeArg;<br align="left"/>let mut _29: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>debug tmp =&gt; _4;<br align="left"/>>;
    bb0__0_1419 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>_3 = LendingError::MathOverflow<br/>StorageLive(_4)<br/>_4 = _3<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_29 = const _<br/>_10 = &amp;(*_29)<br/>_9 = &amp;(*_10)<br/>_8 = move _9 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_9)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_19 = &amp;_4<br/>_18 = &amp;_19<br/>_17 = &amp;(*_18)<br/></td></tr><tr><td align="left">_16 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;&amp;LendingError&gt;(move _17)</td></tr></table>>];
    bb1__0_1419 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>_15 = [move _16]<br/>StorageDead(_16)<br/>_14 = &amp;_15<br/>_13 = &amp;(*_14)<br/>_12 = move _13 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_13)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>_25 = core::fmt::rt::Alignment::Unknown<br/>StorageLive(_26)<br/>_26 = core::fmt::rt::Count::Implied<br/>StorageLive(_27)<br/>_27 = core::fmt::rt::Count::Implied<br/></td></tr><tr><td align="left">_24 = core::fmt::rt::Placeholder::new(const 0_usize, const ' ', move _25, const 4_u32, move _26, move _27)</td></tr></table>>];
    bb2__0_1419 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>_23 = [move _24]<br/>StorageDead(_24)<br/>_22 = &amp;_23<br/>_21 = &amp;(*_22)<br/>_20 = move _21 as &amp;[core::fmt::rt::Placeholder] (PointerCoercion(Unsize))<br/>StorageDead(_21)<br/>StorageLive(_28)<br/></td></tr><tr><td align="left">_28 = core::fmt::rt::UnsafeArg::new()</td></tr></table>>];
    bb3__0_1419 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left">_7 = Arguments::&lt;'_&gt;::new_v1_formatted(move _8, move _12, move _20, move _28)</td></tr></table>>];
    bb4__0_1419 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_20)<br/>StorageDead(_12)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">_6 = _print(move _7)</td></tr></table>>];
    bb5__0_1419 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_10)<br/>StorageDead(_6)<br/>_5 = const ()<br/>StorageDead(_5)<br/>_0 = _4<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_1419 -> bb1__0_1419 [label="return"];
    bb1__0_1419 -> bb2__0_1419 [label="return"];
    bb2__0_1419 -> bb3__0_1419 [label="return"];
    bb3__0_1419 -> bb4__0_1419 [label="return"];
    bb4__0_1419 -> bb5__0_1419 [label="return"];
}
