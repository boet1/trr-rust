// MIR for `obligation::<impl at programs\klend\src\state\obligation.rs:179:1: 179:16>::get_deposit_asset_tiers` before PreCodegen

fn obligation::<impl at programs\klend\src\state\obligation.rs:179:1: 179:16>::get_deposit_asset_tiers(_1: &obligation::Obligation) -> Vec<reserve::AssetTier> {
    debug self => _1;
    let mut _0: std::vec::Vec<state::reserve::AssetTier>;
    let mut _2: std::iter::FilterMap<std::iter::Enumerate<std::slice::Iter<'_, state::obligation::ObligationCollateral>>, {closure@programs\klend\src\state\obligation.rs:444:25: 444:43}>;
    let mut _3: std::iter::Enumerate<std::slice::Iter<'_, state::obligation::ObligationCollateral>>;
    let mut _4: std::slice::Iter<'_, state::obligation::ObligationCollateral>;
    let mut _5: &[state::obligation::ObligationCollateral];
    let mut _6: &[state::obligation::ObligationCollateral; 8];
    let mut _7: {closure@programs\klend\src\state\obligation.rs:444:25: 444:43};
    let mut _8: &state::obligation::Obligation;

    bb0: {
        StorageLive(_2);
        StorageLive(_3);
        StorageLive(_4);
        StorageLive(_5);
        StorageLive(_6);
        _6 = &((*_1).4: [state::obligation::ObligationCollateral; 8]);
        _5 = move _6 as &[state::obligation::ObligationCollateral] (PointerCoercion(Unsize));
        StorageDead(_6);
        _4 = core::slice::<impl [obligation::ObligationCollateral]>::iter(move _5) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_5);
        _3 = <std::slice::Iter<'_, obligation::ObligationCollateral> as Iterator>::enumerate(move _4) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_4);
        StorageLive(_7);
        StorageLive(_8);
        _8 = &(*_1);
        _7 = {closure@programs\klend\src\state\obligation.rs:444:25: 444:43} { self: move _8 };
        StorageDead(_8);
        _2 = <Enumerate<std::slice::Iter<'_, obligation::ObligationCollateral>> as Iterator>::filter_map::<reserve::AssetTier, {closure@programs\klend\src\state\obligation.rs:444:25: 444:43}>(move _3, move _7) -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageDead(_7);
        StorageDead(_3);
        _0 = <FilterMap<Enumerate<std::slice::Iter<'_, obligation::ObligationCollateral>>, {closure@programs\klend\src\state\obligation.rs:444:25: 444:43}> as Iterator>::collect::<Vec<reserve::AssetTier>>(move _2) -> [return: bb4, unwind continue];
    }

    bb4: {
        StorageDead(_2);
        return;
    }
}
