digraph Mir_0_1324 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn post_liquidate_redeem(_1: &amp;ReErased mut state::reserve::Reserve, _2: u64, _3: u64, _4: u64, _5: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, _6: state::types::LiquidationReason, _7: u64, _8: &amp;ReErased anchor_lang::prelude::Clock) -&gt; std::result::Result&lt;std::option::Option&lt;(u64, u64)&gt;, anchor_lang::error::Error&gt;<br align="left"/>let mut _9: bool;<br align="left"/>let mut _10: u64;<br align="left"/>let _11: u64;<br align="left"/>let mut _12: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, u64&gt;;<br align="left"/>let mut _13: std::result::Result&lt;u64, anchor_lang::error::Error&gt;;<br align="left"/>let mut _14: &amp;ReErased mut state::reserve::Reserve;<br align="left"/>let mut _15: u64;<br align="left"/>let mut _16: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let mut _17: isize;<br align="left"/>let _18: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _19: !;<br align="left"/>let mut _20: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _21: u64;<br align="left"/>let _22: u8;<br align="left"/>let mut _23: isize;<br align="left"/>let _24: u64;<br align="left"/>let mut _25: u64;<br align="left"/>let mut _26: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _27: u8;<br align="left"/>let _28: u64;<br align="left"/>let mut _29: u64;<br align="left"/>let mut _30: u64;<br align="left"/>let mut _31: (u64, bool);<br align="left"/>let _32: ();<br align="left"/>let _33: ();<br align="left"/>let mut _34: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _35: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _36: &amp;ReErased [&amp;ReErased str; 4_usize];<br align="left"/>let _37: &amp;ReErased [&amp;ReErased str; 4_usize];<br align="left"/>let _38: [&amp;ReErased str; 4_usize];<br align="left"/>let mut _39: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _40: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _41: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _42: [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let mut _43: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _44: &amp;ReErased u64;<br align="left"/>let _45: &amp;ReErased u64;<br align="left"/>let mut _46: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _47: &amp;ReErased u64;<br align="left"/>let _48: &amp;ReErased u64;<br align="left"/>let mut _49: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _50: &amp;ReErased u64;<br align="left"/>let _51: &amp;ReErased u64;<br align="left"/>let _52: ();<br align="left"/>let mut _53: bool;<br align="left"/>let mut _54: u64;<br align="left"/>let mut _55: u64;<br align="left"/>let mut _56: !;<br align="left"/>let mut _57: anchor_lang::error::Error;<br align="left"/>let mut _58: anchor_lang::error::AnchorError;<br align="left"/>let mut _59: std::string::String;<br align="left"/>let mut _60: &amp;ReErased LendingError;<br align="left"/>let _61: LendingError;<br align="left"/>let mut _62: u32;<br align="left"/>let mut _63: LendingError;<br align="left"/>let mut _64: std::string::String;<br align="left"/>let mut _65: &amp;ReErased LendingError;<br align="left"/>let _66: LendingError;<br align="left"/>let mut _67: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _68: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _69: anchor_lang::error::Source;<br align="left"/>let mut _70: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let mut _71: std::option::Option&lt;(u64, u64)&gt;;<br align="left"/>let mut _72: (u64, u64);<br align="left"/>let mut _73: u64;<br align="left"/>let mut _74: u64;<br align="left"/>let _75: u64;<br align="left"/>let mut _76: &amp;ReErased state::reserve::CollateralExchangeRate;<br align="left"/>let _77: state::reserve::CollateralExchangeRate;<br align="left"/>let mut _78: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _79: u64;<br align="left"/>let _80: ();<br align="left"/>let mut _81: bool;<br align="left"/>let mut _82: u64;<br align="left"/>let mut _83: u64;<br align="left"/>let mut _84: !;<br align="left"/>let mut _85: anchor_lang::error::Error;<br align="left"/>let mut _86: anchor_lang::error::AnchorError;<br align="left"/>let mut _87: std::string::String;<br align="left"/>let mut _88: &amp;ReErased LendingError;<br align="left"/>let _89: LendingError;<br align="left"/>let mut _90: u32;<br align="left"/>let mut _91: LendingError;<br align="left"/>let mut _92: std::string::String;<br align="left"/>let mut _93: &amp;ReErased LendingError;<br align="left"/>let _94: LendingError;<br align="left"/>let mut _95: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _96: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _97: anchor_lang::error::Source;<br align="left"/>let mut _98: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let _99: ();<br align="left"/>let _100: ();<br align="left"/>let mut _101: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _102: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _103: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _104: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _105: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _106: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _107: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _108: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _109: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _110: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _111: &amp;ReErased u64;<br align="left"/>let _112: &amp;ReErased u64;<br align="left"/>let mut _113: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _114: &amp;ReErased u64;<br align="left"/>let _115: &amp;ReErased u64;<br align="left"/>let mut _116: std::option::Option&lt;(u64, u64)&gt;;<br align="left"/>let mut _117: &amp;ReErased LendingError;<br align="left"/>let mut _118: &amp;ReErased LendingError;<br align="left"/>let mut _119: &amp;ReErased [&amp;ReErased str; 4_usize];<br align="left"/>let mut _120: &amp;ReErased LendingError;<br align="left"/>let mut _121: &amp;ReErased LendingError;<br align="left"/>let mut _122: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _123: isize;<br align="left"/>let mut _124: isize;<br align="left"/>let mut _125: isize;<br align="left"/>let mut _126: isize;<br align="left"/>let mut _127: isize;<br align="left"/>debug withdraw_reserve =&gt; _1;<br align="left"/>debug repay_amount =&gt; _2;<br align="left"/>debug withdraw_amount =&gt; _3;<br align="left"/>debug withdraw_collateral_amount =&gt; _4;<br align="left"/>debug liquidation_bonus_rate =&gt; _5;<br align="left"/>debug liquidation_reason =&gt; _6;<br align="left"/>debug min_acceptable_received_liquidity_amount =&gt; _7;<br align="left"/>debug clock =&gt; _8;<br align="left"/>debug withdraw_liquidity_amount =&gt; _11;<br align="left"/>debug residual =&gt; _18;<br align="left"/>debug val =&gt; _21;<br align="left"/>debug protocol_liquidation_fee_pct =&gt; _22;<br align="left"/>debug protocol_liquidation_fee =&gt; _24;<br align="left"/>debug net_withdraw_liquidity_amount =&gt; _28;<br align="left"/>debug theoretical_withdraw_liquidity_amount =&gt; _75;<br align="left"/>>;
    bb0__0_1324 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = _4<br/>_9 = Ne(move _10, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _9)</td></tr></table>>];
    bb1__0_1324 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_14 = &amp;mut (*_1)<br/>StorageLive(_15)<br/>_15 = _4<br/>StorageLive(_16)<br/>_16 = &amp;(*_8)<br/></td></tr><tr><td align="left">_13 = lending_operations::redeem_reserve_collateral(move _14, move _15, move _16, const false)</td></tr></table>>];
    bb2__0_1324 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">_12 = &lt;std::result::Result&lt;u64, anchor_lang::error::Error&gt; as Try&gt;::branch(move _13)</td></tr></table>>];
    bb3__0_1324 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>_17 = discriminant(_12)<br/></td></tr><tr><td align="left">switchInt(move _17)</td></tr></table>>];
    bb4__0_1324 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = ((_12 as Continue).0: u64)<br/>_11 = _21<br/>StorageDead(_21)<br/>_123 = discriminant(_12)<br/>StorageDead(_12)<br/>StorageLive(_22)<br/>_23 = discriminant(_6)<br/></td></tr><tr><td align="left">switchInt(move _23)</td></tr></table>>];
    bb5__0_1324 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_1324 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_18)<br/>_18 = move ((_12 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_20)<br/>_20 = move _18<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;std::option::Option&lt;(u64, u64)&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _20)</td></tr></table>>];
    bb7__0_1324 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_18)<br/>_125 = discriminant(_12)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_1324 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">_22 = (((*_1).9: state::reserve::ReserveConfig).4: u8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_1324 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">_22 = (((*_1).9: state::reserve::ReserveConfig).6: u8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_1324 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_24)<br/>StorageLive(_25)<br/>_25 = _11<br/>StorageLive(_26)<br/>_26 = _5<br/>StorageLive(_27)<br/>_27 = _22<br/></td></tr><tr><td align="left">_24 = calculate_protocol_liquidation_fee(move _25, move _26, move _27)</td></tr></table>>];
    bb11__0_1324 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_29 = _11<br/>StorageLive(_30)<br/>_30 = _24<br/>_31 = CheckedSub(_29, _30)<br/></td></tr><tr><td align="left">assert(!move (_31.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, move _29, move _30)</td></tr></table>>];
    bb12__0_1324 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">_28 = move (_31.0: u64)<br/>StorageDead(_30)<br/>StorageDead(_29)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>_119 = const _<br/>_37 = &amp;(*_119)<br/>_36 = &amp;(*_37)<br/>_35 = move _36 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_36)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>_45 = &amp;_2<br/>_44 = &amp;(*_45)<br/></td></tr><tr><td align="left">_43 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _44)</td></tr></table>>];
    bb13__0_1324 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>_48 = &amp;_28<br/>_47 = &amp;(*_48)<br/></td></tr><tr><td align="left">_46 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _47)</td></tr></table>>];
    bb14__0_1324 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>_51 = &amp;_24<br/>_50 = &amp;(*_51)<br/></td></tr><tr><td align="left">_49 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _50)</td></tr></table>>];
    bb15__0_1324 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>_42 = [move _43, move _46, move _49]<br/>StorageDead(_49)<br/>StorageDead(_46)<br/>StorageDead(_43)<br/>_41 = &amp;_42<br/>_40 = &amp;(*_41)<br/>_39 = move _40 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">_34 = Arguments::&lt;'_&gt;::new_v1(move _35, move _39)</td></tr></table>>];
    bb16__0_1324 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">_33 = _print(move _34)</td></tr></table>>];
    bb17__0_1324 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_51)<br/>StorageDead(_48)<br/>StorageDead(_45)<br/>StorageDead(_42)<br/>StorageDead(_41)<br/>StorageDead(_37)<br/>StorageDead(_33)<br/>_32 = const ()<br/>StorageDead(_32)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>_54 = _28<br/>StorageLive(_55)<br/>_55 = _7<br/>_53 = Lt(move _54, move _55)<br/></td></tr><tr><td align="left">switchInt(move _53)</td></tr></table>>];
    bb18__0_1324 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_54)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>_118 = const _<br/>_60 = &amp;(*_118)<br/></td></tr><tr><td align="left">_59 = LendingError::name(move _60)</td></tr></table>>];
    bb19__0_1324 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>_63 = LendingError::LiquidationRewardTooSmall<br/></td></tr><tr><td align="left">_62 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _63)</td></tr></table>>];
    bb20__0_1324 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>_117 = const _<br/>_65 = &amp;(*_117)<br/></td></tr><tr><td align="left">_64 = &lt;LendingError as ToString&gt;::to_string(move _65)</td></tr></table>>];
    bb21__0_1324 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>_69 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\lending_market\\lending_operations.rs&quot;, line: const 1624_u32 }<br/>_68 = anchor_lang::error::ErrorOrigin::Source(move _69)<br/>StorageDead(_69)<br/>_67 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _68)<br/>StorageDead(_68)<br/>StorageLive(_70)<br/>_70 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_58 = anchor_lang::error::AnchorError { error_name: move _59, error_code_number: move _62, error_msg: move _64, error_origin: move _67, compared_values: move _70 }<br/>StorageDead(_70)<br/>StorageDead(_67)<br/>StorageDead(_64)<br/>StorageDead(_62)<br/>StorageDead(_59)<br/></td></tr><tr><td align="left">_57 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _58)</td></tr></table>>];
    bb22__0_1324 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>_0 = std::result::Result::&lt;std::option::Option&lt;(u64, u64)&gt;, anchor_lang::error::Error&gt;::Err(move _57)<br/>StorageDead(_57)<br/>StorageDead(_53)<br/>StorageDead(_52)<br/>StorageDead(_28)<br/>StorageDead(_24)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_1324 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_54)<br/>_52 = const ()<br/>StorageDead(_53)<br/>StorageDead(_52)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>_73 = _11<br/>StorageLive(_74)<br/>_74 = _24<br/>_72 = (move _73, move _74)<br/>StorageDead(_74)<br/>StorageDead(_73)<br/>_71 = std::option::Option::&lt;(u64, u64)&gt;::Some(move _72)<br/>StorageDead(_72)<br/>_0 = std::result::Result::&lt;std::option::Option&lt;(u64, u64)&gt;, anchor_lang::error::Error&gt;::Ok(move _71)<br/>StorageDead(_71)<br/>StorageDead(_28)<br/>StorageDead(_24)<br/>StorageDead(_22)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_1324 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>_78 = &amp;(*_1)<br/></td></tr><tr><td align="left">_77 = reserve::Reserve::collateral_exchange_rate(move _78)</td></tr></table>>];
    bb25__0_1324 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">_76 = &amp;_77<br/>StorageDead(_78)<br/>StorageLive(_79)<br/>_79 = _3<br/></td></tr><tr><td align="left">_75 = reserve::CollateralExchangeRate::collateral_to_liquidity(move _76, move _79)</td></tr></table>>];
    bb26__0_1324 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageDead(_76)<br/>StorageDead(_77)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>_82 = _75<br/>StorageLive(_83)<br/>_83 = _7<br/>_81 = Lt(move _82, move _83)<br/></td></tr><tr><td align="left">switchInt(move _81)</td></tr></table>>];
    bb27__0_1324 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>StorageDead(_82)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>_121 = const _<br/>_88 = &amp;(*_121)<br/></td></tr><tr><td align="left">_87 = LendingError::name(move _88)</td></tr></table>>];
    bb28__0_1324 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>_91 = LendingError::LiquidationRewardTooSmall<br/></td></tr><tr><td align="left">_90 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _91)</td></tr></table>>];
    bb29__0_1324 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>_120 = const _<br/>_93 = &amp;(*_120)<br/></td></tr><tr><td align="left">_92 = &lt;LendingError as ToString&gt;::to_string(move _93)</td></tr></table>>];
    bb30__0_1324 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>_97 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\lending_market\\lending_operations.rs&quot;, line: const 1635_u32 }<br/>_96 = anchor_lang::error::ErrorOrigin::Source(move _97)<br/>StorageDead(_97)<br/>_95 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _96)<br/>StorageDead(_96)<br/>StorageLive(_98)<br/>_98 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_86 = anchor_lang::error::AnchorError { error_name: move _87, error_code_number: move _90, error_msg: move _92, error_origin: move _95, compared_values: move _98 }<br/>StorageDead(_98)<br/>StorageDead(_95)<br/>StorageDead(_92)<br/>StorageDead(_90)<br/>StorageDead(_87)<br/></td></tr><tr><td align="left">_85 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _86)</td></tr></table>>];
    bb31__0_1324 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>_0 = std::result::Result::&lt;std::option::Option&lt;(u64, u64)&gt;, anchor_lang::error::Error&gt;::Err(move _85)<br/>StorageDead(_85)<br/>StorageDead(_81)<br/>StorageDead(_80)<br/>StorageDead(_75)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_1324 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>StorageDead(_82)<br/>_80 = const ()<br/>StorageDead(_81)<br/>StorageDead(_80)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>_122 = const _<br/>_104 = &amp;(*_122)<br/>_103 = &amp;(*_104)<br/>_102 = move _103 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_103)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>_112 = &amp;_2<br/>_111 = &amp;(*_112)<br/></td></tr><tr><td align="left">_110 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _111)</td></tr></table>>];
    bb33__0_1324 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>_115 = &amp;_3<br/>_114 = &amp;(*_115)<br/></td></tr><tr><td align="left">_113 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _114)</td></tr></table>>];
    bb34__0_1324 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/>_109 = [move _110, move _113]<br/>StorageDead(_113)<br/>StorageDead(_110)<br/>_108 = &amp;_109<br/>_107 = &amp;(*_108)<br/>_106 = move _107 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_107)<br/></td></tr><tr><td align="left">_101 = Arguments::&lt;'_&gt;::new_v1(move _102, move _106)</td></tr></table>>];
    bb35__0_1324 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/>StorageDead(_102)<br/></td></tr><tr><td align="left">_100 = _print(move _101)</td></tr></table>>];
    bb36__0_1324 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/>StorageDead(_115)<br/>StorageDead(_112)<br/>StorageDead(_109)<br/>StorageDead(_108)<br/>StorageDead(_104)<br/>StorageDead(_100)<br/>_99 = const ()<br/>StorageDead(_99)<br/>StorageLive(_116)<br/>_116 = std::option::Option::&lt;(u64, u64)&gt;::None<br/>_0 = std::result::Result::&lt;std::option::Option&lt;(u64, u64)&gt;, anchor_lang::error::Error&gt;::Ok(move _116)<br/>StorageDead(_116)<br/>StorageDead(_75)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_1324 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_1324 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_1324 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_1324 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left">return</td></tr></table>>];
    bb41__0_1324 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">41 (cleanup)</td></tr><tr><td align="left">drop(_87)</td></tr></table>>];
    bb42__0_1324 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">42 (cleanup)</td></tr><tr><td align="left">drop(_59)</td></tr></table>>];
    bb43__0_1324 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">43 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb44__0_1324 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">44 (cleanup)</td></tr><tr><td align="left" balign="left">_127 = discriminant(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_1324 -> bb24__0_1324 [label="0"];
    bb0__0_1324 -> bb1__0_1324 [label="otherwise"];
    bb1__0_1324 -> bb2__0_1324 [label="return"];
    bb2__0_1324 -> bb3__0_1324 [label="return"];
    bb2__0_1324 -> bb43__0_1324 [label="unwind"];
    bb3__0_1324 -> bb4__0_1324 [label="0"];
    bb3__0_1324 -> bb6__0_1324 [label="1"];
    bb3__0_1324 -> bb5__0_1324 [label="otherwise"];
    bb4__0_1324 -> bb9__0_1324 [label="0"];
    bb4__0_1324 -> bb9__0_1324 [label="1"];
    bb4__0_1324 -> bb9__0_1324 [label="2"];
    bb4__0_1324 -> bb8__0_1324 [label="3"];
    bb4__0_1324 -> bb5__0_1324 [label="otherwise"];
    bb6__0_1324 -> bb7__0_1324 [label="return"];
    bb6__0_1324 -> bb44__0_1324 [label="unwind"];
    bb7__0_1324 -> bb38__0_1324 [label=""];
    bb8__0_1324 -> bb10__0_1324 [label=""];
    bb9__0_1324 -> bb10__0_1324 [label=""];
    bb10__0_1324 -> bb11__0_1324 [label="return"];
    bb11__0_1324 -> bb12__0_1324 [label="success"];
    bb12__0_1324 -> bb13__0_1324 [label="return"];
    bb13__0_1324 -> bb14__0_1324 [label="return"];
    bb14__0_1324 -> bb15__0_1324 [label="return"];
    bb15__0_1324 -> bb16__0_1324 [label="return"];
    bb16__0_1324 -> bb17__0_1324 [label="return"];
    bb17__0_1324 -> bb23__0_1324 [label="0"];
    bb17__0_1324 -> bb18__0_1324 [label="otherwise"];
    bb18__0_1324 -> bb19__0_1324 [label="return"];
    bb19__0_1324 -> bb20__0_1324 [label="return"];
    bb19__0_1324 -> bb42__0_1324 [label="unwind"];
    bb20__0_1324 -> bb21__0_1324 [label="return"];
    bb20__0_1324 -> bb42__0_1324 [label="unwind"];
    bb21__0_1324 -> bb22__0_1324 [label="return"];
    bb21__0_1324 -> bb43__0_1324 [label="unwind"];
    bb22__0_1324 -> bb38__0_1324 [label=""];
    bb23__0_1324 -> bb37__0_1324 [label=""];
    bb24__0_1324 -> bb25__0_1324 [label="return"];
    bb25__0_1324 -> bb26__0_1324 [label="return"];
    bb26__0_1324 -> bb32__0_1324 [label="0"];
    bb26__0_1324 -> bb27__0_1324 [label="otherwise"];
    bb27__0_1324 -> bb28__0_1324 [label="return"];
    bb28__0_1324 -> bb29__0_1324 [label="return"];
    bb28__0_1324 -> bb41__0_1324 [label="unwind"];
    bb29__0_1324 -> bb30__0_1324 [label="return"];
    bb29__0_1324 -> bb41__0_1324 [label="unwind"];
    bb30__0_1324 -> bb31__0_1324 [label="return"];
    bb30__0_1324 -> bb43__0_1324 [label="unwind"];
    bb31__0_1324 -> bb39__0_1324 [label=""];
    bb32__0_1324 -> bb33__0_1324 [label="return"];
    bb33__0_1324 -> bb34__0_1324 [label="return"];
    bb34__0_1324 -> bb35__0_1324 [label="return"];
    bb35__0_1324 -> bb36__0_1324 [label="return"];
    bb36__0_1324 -> bb37__0_1324 [label=""];
    bb37__0_1324 -> bb40__0_1324 [label=""];
    bb38__0_1324 -> bb39__0_1324 [label=""];
    bb39__0_1324 -> bb40__0_1324 [label=""];
    bb41__0_1324 -> bb43__0_1324 [label="return"];
    bb42__0_1324 -> bb43__0_1324 [label="return"];
    bb44__0_1324 -> bb43__0_1324 [label=""];
}
