digraph Mir_0_1123 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn InstructionLoader::is_forbidden_cpi_call::{closure#0}(_1: &amp;ReErased mut Closure(DefId(0:1123 ~ kamino_lending[6389]::lending_market::ix_utils::InstructionLoader::is_forbidden_cpi_call::{closure#0}), [Self/#0, i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) &amp;ReErased utils::consts::CpiWhitelistedAccount,)) -&gt; bool, [Region(BrAnon)]), (&amp;ReErased anchor_lang::prelude::Pubkey,)]), _2: &amp;ReErased &amp;ReErased utils::consts::CpiWhitelistedAccount) -&gt; bool<br align="left"/>let mut _3: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _4: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _5: &amp;ReErased utils::consts::CpiWhitelistedAccount;<br align="left"/>let mut _6: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>debug account =&gt; _2;<br align="left"/>debug current_ixn__program_id =&gt; (*((*_1).0: &amp;anchor_lang::prelude::Pubkey));<br align="left"/>>;
    bb0__0_1123 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>_5 = deref_copy (*_2)<br/>_3 = &amp;((*_5).0: anchor_lang::prelude::Pubkey)<br/>StorageLive(_4)<br/>_6 = deref_copy ((*_1).0: &amp;anchor_lang::prelude::Pubkey)<br/>_4 = &amp;(*_6)<br/></td></tr><tr><td align="left">_0 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _3, move _4)</td></tr></table>>];
    bb1__0_1123 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_1123 -> bb1__0_1123 [label="return"];
}
