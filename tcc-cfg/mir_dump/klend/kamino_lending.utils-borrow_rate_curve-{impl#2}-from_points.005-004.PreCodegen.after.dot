digraph Mir_0_2209 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn CurveSegment::from_points(_1: utils::borrow_rate_curve::CurvePoint, _2: utils::borrow_rate_curve::CurvePoint) -&gt; std::result::Result&lt;utils::borrow_rate_curve::CurveSegment, anchor_lang::error::Error&gt;<br align="left"/>let _3: u32;<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, u32&gt;;<br align="left"/>let mut _5: std::result::Result&lt;u32, anchor_lang::error::Error&gt;;<br align="left"/>let mut _6: std::option::Option&lt;u32&gt;;<br align="left"/>let mut _7: u32;<br align="left"/>let mut _8: u32;<br align="left"/>let mut _9: Closure(DefId(0:2210 ~ kamino_lending[6389]::utils::borrow_rate_curve::{impl#2}::from_points::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn(()) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _10: isize;<br align="left"/>let _11: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _12: !;<br align="left"/>let mut _13: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _14: u32;<br align="left"/>let _15: ();<br align="left"/>let mut _16: bool;<br align="left"/>let mut _17: u32;<br align="left"/>let mut _18: u32;<br align="left"/>let mut _19: !;<br align="left"/>let _20: ();<br align="left"/>let mut _21: &amp;ReErased str;<br align="left"/>let _22: &amp;ReErased str;<br align="left"/>let mut _23: anchor_lang::error::Error;<br align="left"/>let mut _24: anchor_lang::error::AnchorError;<br align="left"/>let mut _25: std::string::String;<br align="left"/>let mut _26: &amp;ReErased LendingError;<br align="left"/>let _27: LendingError;<br align="left"/>let mut _28: u32;<br align="left"/>let mut _29: LendingError;<br align="left"/>let mut _30: std::string::String;<br align="left"/>let mut _31: &amp;ReErased LendingError;<br align="left"/>let _32: LendingError;<br align="left"/>let mut _33: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _34: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _35: anchor_lang::error::Source;<br align="left"/>let mut _36: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let _37: u32;<br align="left"/>let mut _38: std::option::Option&lt;u32&gt;;<br align="left"/>let mut _39: u32;<br align="left"/>let mut _40: u32;<br align="left"/>let mut _41: utils::borrow_rate_curve::CurveSegment;<br align="left"/>let mut _42: u32;<br align="left"/>let mut _43: u32;<br align="left"/>let mut _44: utils::borrow_rate_curve::CurvePoint;<br align="left"/>let mut _45: &amp;ReErased LendingError;<br align="left"/>let mut _46: &amp;ReErased LendingError;<br align="left"/>let mut _47: isize;<br align="left"/>let mut _48: isize;<br align="left"/>let mut _49: isize;<br align="left"/>let mut _50: isize;<br align="left"/>let mut _51: isize;<br align="left"/>debug start =&gt; _1;<br align="left"/>debug end =&gt; _2;<br align="left"/>debug slope_nom =&gt; _3;<br align="left"/>debug residual =&gt; _11;<br align="left"/>debug val =&gt; _14;<br align="left"/>debug slope_denom =&gt; _37;<br align="left"/>>;
    bb0__0_2209 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = (_2.1: u32)<br/>StorageLive(_8)<br/>_8 = (_1.1: u32)<br/></td></tr><tr><td align="left">_6 = core::num::&lt;impl u32&gt;::checked_sub(move _7, move _8)</td></tr></table>>];
    bb1__0_2209 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_7)<br/>StorageLive(_9)<br/>_9 = {closure@programs\klend\src\utils\borrow_rate_curve.rs:96:25: 96:27}<br/></td></tr><tr><td align="left">_5 = std::option::Option::&lt;u32&gt;::ok_or_else::&lt;anchor_lang::error::Error, {closure@programs\klend\src\utils\borrow_rate_curve.rs:96:25: 96:27}&gt;(move _6, move _9)</td></tr></table>>];
    bb2__0_2209 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;u32, anchor_lang::error::Error&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb3__0_2209 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_10 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _10)</td></tr></table>>];
    bb4__0_2209 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = ((_4 as Continue).0: u32)<br/>_3 = _14<br/>StorageDead(_14)<br/>_47 = discriminant(_4)<br/>StorageDead(_4)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_17 = (_2.0: u32)<br/>StorageLive(_18)<br/>_18 = (_1.0: u32)<br/>_16 = Le(move _17, move _18)<br/></td></tr><tr><td align="left">switchInt(move _16)</td></tr></table>>];
    bb5__0_2209 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_2209 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = move ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_13)<br/>_13 = move _11<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;CurveSegment, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _13)</td></tr></table>>];
    bb7__0_2209 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_11)<br/>_49 = discriminant(_4)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_2209 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_17)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_22 = const &quot;Utilization rate must be ever growing in the curve&quot;<br/>_21 = &amp;(*_22)<br/></td></tr><tr><td align="left">_20 = solana_program::log::sol_log(move _21)</td></tr></table>>];
    bb9__0_2209 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_22)<br/>StorageDead(_20)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_46 = const _<br/>_26 = &amp;(*_46)<br/></td></tr><tr><td align="left">_25 = LendingError::name(move _26)</td></tr></table>>];
    bb10__0_2209 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_29 = LendingError::InvalidBorrowRateCurvePoint<br/></td></tr><tr><td align="left">_28 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _29)</td></tr></table>>];
    bb11__0_2209 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>_45 = const _<br/>_31 = &amp;(*_45)<br/></td></tr><tr><td align="left">_30 = &lt;LendingError as ToString&gt;::to_string(move _31)</td></tr></table>>];
    bb12__0_2209 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>_35 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\utils\\borrow_rate_curve.rs&quot;, line: const 102_u32 }<br/>_34 = anchor_lang::error::ErrorOrigin::Source(move _35)<br/>StorageDead(_35)<br/>_33 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _34)<br/>StorageDead(_34)<br/>StorageLive(_36)<br/>_36 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_24 = anchor_lang::error::AnchorError { error_name: move _25, error_code_number: move _28, error_msg: move _30, error_origin: move _33, compared_values: move _36 }<br/>StorageDead(_36)<br/>StorageDead(_33)<br/>StorageDead(_30)<br/>StorageDead(_28)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">_23 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _24)</td></tr></table>>];
    bb13__0_2209 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>_0 = std::result::Result::&lt;CurveSegment, anchor_lang::error::Error&gt;::Err(move _23)<br/>StorageDead(_23)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_2209 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_17)<br/>_15 = const ()<br/>StorageDead(_16)<br/>StorageDead(_15)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>_39 = (_2.0: u32)<br/>StorageLive(_40)<br/>_40 = (_1.0: u32)<br/></td></tr><tr><td align="left">_38 = core::num::&lt;impl u32&gt;::checked_sub(move _39, move _40)</td></tr></table>>];
    bb15__0_2209 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">_37 = std::option::Option::&lt;u32&gt;::unwrap(move _38)</td></tr></table>>];
    bb16__0_2209 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>_42 = _3<br/>StorageLive(_43)<br/>_43 = _37<br/>StorageLive(_44)<br/>_44 = _1<br/>_41 = CurveSegment { slope_nom: move _42, slope_denom: move _43, start_point: move _44 }<br/>StorageDead(_44)<br/>StorageDead(_43)<br/>StorageDead(_42)<br/>_0 = std::result::Result::&lt;CurveSegment, anchor_lang::error::Error&gt;::Ok(move _41)<br/>StorageDead(_41)<br/>StorageDead(_37)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_2209 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_2209 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left">return</td></tr></table>>];
    bb19__0_2209 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">19 (cleanup)</td></tr><tr><td align="left">drop(_25)</td></tr></table>>];
    bb20__0_2209 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">20 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb21__0_2209 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">21 (cleanup)</td></tr><tr><td align="left" balign="left">_51 = discriminant(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_2209 -> bb1__0_2209 [label="return"];
    bb1__0_2209 -> bb2__0_2209 [label="return"];
    bb2__0_2209 -> bb3__0_2209 [label="return"];
    bb2__0_2209 -> bb20__0_2209 [label="unwind"];
    bb3__0_2209 -> bb4__0_2209 [label="0"];
    bb3__0_2209 -> bb6__0_2209 [label="1"];
    bb3__0_2209 -> bb5__0_2209 [label="otherwise"];
    bb4__0_2209 -> bb14__0_2209 [label="0"];
    bb4__0_2209 -> bb8__0_2209 [label="otherwise"];
    bb6__0_2209 -> bb7__0_2209 [label="return"];
    bb6__0_2209 -> bb21__0_2209 [label="unwind"];
    bb7__0_2209 -> bb17__0_2209 [label=""];
    bb8__0_2209 -> bb9__0_2209 [label="return"];
    bb9__0_2209 -> bb10__0_2209 [label="return"];
    bb10__0_2209 -> bb11__0_2209 [label="return"];
    bb10__0_2209 -> bb19__0_2209 [label="unwind"];
    bb11__0_2209 -> bb12__0_2209 [label="return"];
    bb11__0_2209 -> bb19__0_2209 [label="unwind"];
    bb12__0_2209 -> bb13__0_2209 [label="return"];
    bb12__0_2209 -> bb20__0_2209 [label="unwind"];
    bb13__0_2209 -> bb17__0_2209 [label=""];
    bb14__0_2209 -> bb15__0_2209 [label="return"];
    bb15__0_2209 -> bb16__0_2209 [label="return"];
    bb16__0_2209 -> bb18__0_2209 [label=""];
    bb17__0_2209 -> bb18__0_2209 [label=""];
    bb19__0_2209 -> bb20__0_2209 [label="return"];
    bb21__0_2209 -> bb20__0_2209 [label=""];
}
