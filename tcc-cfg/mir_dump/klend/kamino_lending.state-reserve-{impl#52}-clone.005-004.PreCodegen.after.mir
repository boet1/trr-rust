// MIR for `reserve::<impl at programs\klend\src\state\reserve.rs:131:5: 131:20>::clone` after PreCodegen

fn reserve::<impl at programs\klend\src\state\reserve.rs:131:5: 131:20>::clone(_1: &ReserveFarmKindIter) -> ReserveFarmKindIter {
    debug self => _1;
    let mut _0: state::reserve::ReserveFarmKindIter;
    let mut _2: usize;
    let mut _3: usize;
    let mut _4: std::marker::PhantomData<()>;
    let mut _5: &std::marker::PhantomData<()>;

    bb0: {
        StorageLive(_2);
        _2 = ((*_1).0: usize);
        StorageLive(_3);
        _3 = ((*_1).1: usize);
        StorageLive(_4);
        StorageLive(_5);
        _5 = &((*_1).2: std::marker::PhantomData<()>);
        _4 = <PhantomData<()> as Clone>::clone(move _5) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_5);
        _0 = ReserveFarmKindIter { idx: move _2, back_idx: move _3, marker: move _4 };
        StorageDead(_4);
        StorageDead(_3);
        StorageDead(_2);
        return;
    }
}
