// MIR for `entry::{closure#0}` after PreCodegen

fn entry::{closure#0}(_1: {closure@programs\klend\src\lib.rs:33:1: 33:11}, _2: anchor_lang::error::Error) -> anchor_lang::prelude::ProgramError {
    debug e => _2;
    let mut _0: anchor_lang::prelude::ProgramError;
    let _3: ();
    let mut _4: &anchor_lang::error::Error;
    let mut _5: anchor_lang::error::Error;
    let mut _6: bool;

    bb0: {
        _6 = const false;
        _6 = const true;
        StorageLive(_3);
        StorageLive(_4);
        _4 = &_2;
        _3 = anchor_lang::error::Error::log(move _4) -> [return: bb1, unwind: bb5];
    }

    bb1: {
        StorageDead(_4);
        StorageDead(_3);
        StorageLive(_5);
        _6 = const false;
        _5 = move _2;
        _0 = <anchor_lang::error::Error as Into<anchor_lang::prelude::ProgramError>>::into(move _5) -> [return: bb2, unwind: bb5];
    }

    bb2: {
        StorageDead(_5);
        return;
    }

    bb3 (cleanup): {
        resume;
    }

    bb4 (cleanup): {
        drop(_2) -> [return: bb3, unwind terminate(cleanup)];
    }

    bb5 (cleanup): {
        switchInt(_6) -> [0: bb3, otherwise: bb4];
    }
}
