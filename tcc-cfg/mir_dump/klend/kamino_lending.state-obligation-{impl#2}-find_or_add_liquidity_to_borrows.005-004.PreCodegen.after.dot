digraph Mir_0_1676 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn obligation::Obligation::find_or_add_liquidity_to_borrows(_1: &amp;ReErased mut state::obligation::Obligation, _2: anchor_lang::prelude::Pubkey, _3: utils::fraction::BigFraction, _4: state::reserve::AssetTier) -&gt; std::result::Result&lt;(&amp;ReErased mut state::obligation::ObligationLiquidity, usize), anchor_lang::error::Error&gt;<br align="left"/>let mut _5: std::option::Option&lt;usize&gt;;<br align="left"/>let mut _6: &amp;ReErased state::obligation::Obligation;<br align="left"/>let mut _7: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _8: isize;<br align="left"/>let _9: usize;<br align="left"/>let mut _10: (&amp;ReErased mut state::obligation::ObligationLiquidity, usize);<br align="left"/>let mut _11: &amp;ReErased mut state::obligation::ObligationLiquidity;<br align="left"/>let mut _12: &amp;ReErased mut state::obligation::ObligationLiquidity;<br align="left"/>let _13: usize;<br align="left"/>let mut _14: usize;<br align="left"/>let mut _15: bool;<br align="left"/>let mut _16: usize;<br align="left"/>let mut _17: std::option::Option&lt;(usize, &amp;ReErased mut state::obligation::ObligationLiquidity)&gt;;<br align="left"/>let mut _18: &amp;ReErased mut std::iter::Enumerate&lt;std::slice::IterMut&lt;ReErased, state::obligation::ObligationLiquidity&gt;&gt;;<br align="left"/>let mut _19: std::iter::Enumerate&lt;std::slice::IterMut&lt;ReErased, state::obligation::ObligationLiquidity&gt;&gt;;<br align="left"/>let mut _20: std::slice::IterMut&lt;ReErased, state::obligation::ObligationLiquidity&gt;;<br align="left"/>let mut _21: &amp;ReErased mut [state::obligation::ObligationLiquidity];<br align="left"/>let mut _22: &amp;ReErased mut [state::obligation::ObligationLiquidity; 5_usize];<br align="left"/>let mut _23: Closure(DefId(0:1677 ~ kamino_lending[6389]::state::obligation::{impl#2}::find_or_add_liquidity_to_borrows::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) (usize, &amp;ReErased mut state::obligation::ObligationLiquidity),)) -&gt; bool, [Region(BrAnon)]), ()]);<br align="left"/>let mut _24: isize;<br align="left"/>let _25: usize;<br align="left"/>let _26: &amp;ReErased mut state::obligation::ObligationLiquidity;<br align="left"/>let mut _27: state::obligation::ObligationLiquidity;<br align="left"/>let mut _28: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _29: utils::fraction::BigFraction;<br align="left"/>let mut _30: u8;<br align="left"/>let mut _31: state::reserve::AssetTier;<br align="left"/>let _32: usize;<br align="left"/>let mut _33: usize;<br align="left"/>let mut _34: bool;<br align="left"/>let mut _35: (&amp;ReErased mut state::obligation::ObligationLiquidity, usize);<br align="left"/>let mut _36: &amp;ReErased mut state::obligation::ObligationLiquidity;<br align="left"/>let mut _37: usize;<br align="left"/>let _38: ();<br align="left"/>let _39: ();<br align="left"/>let mut _40: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _41: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _42: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _43: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _44: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _45: anchor_lang::error::Error;<br align="left"/>let mut _46: anchor_lang::error::AnchorError;<br align="left"/>let mut _47: std::string::String;<br align="left"/>let mut _48: &amp;ReErased LendingError;<br align="left"/>let _49: LendingError;<br align="left"/>let mut _50: u32;<br align="left"/>let mut _51: LendingError;<br align="left"/>let mut _52: std::string::String;<br align="left"/>let mut _53: &amp;ReErased LendingError;<br align="left"/>let _54: LendingError;<br align="left"/>let mut _55: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _56: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _57: anchor_lang::error::Source;<br align="left"/>let mut _58: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let mut _59: &amp;ReErased LendingError;<br align="left"/>let mut _60: &amp;ReErased LendingError;<br align="left"/>let mut _61: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>debug self =&gt; _1;<br align="left"/>debug borrow_reserve =&gt; _2;<br align="left"/>debug cumulative_borrow_rate =&gt; _3;<br align="left"/>debug borrow_reserve_asset_tier =&gt; _4;<br align="left"/>debug liquidity_index =&gt; _9;<br align="left"/>debug index =&gt; _25;<br align="left"/>debug liquidity =&gt; _26;<br align="left"/>>;
    bb0__0_1676 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = &amp;(*_1)<br/>StorageLive(_7)<br/>_7 = _2<br/></td></tr><tr><td align="left">_5 = obligation::Obligation::find_liquidity_index_in_borrows(move _6, move _7)</td></tr></table>>];
    bb1__0_1676 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_6)<br/>_8 = discriminant(_5)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb2__0_1676 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>_9 = ((_5 as Some).0: usize)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>_13 = _9<br/>_14 = Len(((*_1).7: [state::obligation::ObligationLiquidity; 5]))<br/>_15 = Lt(_13, _14)<br/></td></tr><tr><td align="left">assert(move _15, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _14, _13)</td></tr></table>>];
    bb3__0_1676 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">_12 = &amp;mut ((*_1).7: [state::obligation::ObligationLiquidity; 5])[_13]<br/>_11 = &amp;mut (*_12)<br/>StorageLive(_16)<br/>_16 = _9<br/>_10 = (move _11, move _16)<br/>StorageDead(_16)<br/>StorageDead(_11)<br/>_0 = std::result::Result::&lt;(&amp;mut obligation::ObligationLiquidity, usize), anchor_lang::error::Error&gt;::Ok(move _10)<br/>StorageDead(_10)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb4__0_1676 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_22 = &amp;mut ((*_1).7: [state::obligation::ObligationLiquidity; 5])<br/>_21 = move _22 as &amp;mut [state::obligation::ObligationLiquidity] (PointerCoercion(Unsize))<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">_20 = core::slice::&lt;impl [obligation::ObligationLiquidity]&gt;::iter_mut(move _21)</td></tr></table>>];
    bb5__0_1676 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/></td></tr><tr><td align="left">_19 = &lt;std::slice::IterMut&lt;'_, obligation::ObligationLiquidity&gt; as Iterator&gt;::enumerate(move _20)</td></tr></table>>];
    bb6__0_1676 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">_18 = &amp;mut _19<br/>StorageDead(_20)<br/>StorageLive(_23)<br/>_23 = {closure@programs\klend\src\state\obligation.rs:386:19: 386:22}<br/></td></tr><tr><td align="left">_17 = &lt;Enumerate&lt;std::slice::IterMut&lt;'_, obligation::ObligationLiquidity&gt;&gt; as Iterator&gt;::find::&lt;{closure@programs\klend\src\state\obligation.rs:386:19: 386:22}&gt;(move _18, move _23)</td></tr></table>>];
    bb7__0_1676 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_18)<br/>_24 = discriminant(_17)<br/></td></tr><tr><td align="left">switchInt(move _24)</td></tr></table>>];
    bb8__0_1676 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_25)<br/>_25 = (((_17 as Some).0: (usize, &amp;mut state::obligation::ObligationLiquidity)).0: usize)<br/>StorageLive(_26)<br/>_26 = move (((_17 as Some).0: (usize, &amp;mut state::obligation::ObligationLiquidity)).1: &amp;mut state::obligation::ObligationLiquidity)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>_28 = _2<br/>StorageLive(_29)<br/>_29 = _3<br/></td></tr><tr><td align="left">_27 = obligation::ObligationLiquidity::new(move _28, move _29)</td></tr></table>>];
    bb9__0_1676 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_28)<br/>(*_26) = move _27<br/>StorageDead(_27)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>_31 = move _4<br/></td></tr><tr><td align="left">_30 = &lt;reserve::AssetTier as Into&lt;u8&gt;&gt;::into(move _31)</td></tr></table>>];
    bb10__0_1676 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageLive(_32)<br/>_32 = _25<br/>_33 = Len(((*_1).13: [u8; 5]))<br/>_34 = Lt(_32, _33)<br/></td></tr><tr><td align="left">assert(move _34, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _33, _32)</td></tr></table>>];
    bb11__0_1676 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">((*_1).13: [u8; 5])[_32] = move _30<br/>StorageDead(_30)<br/>StorageDead(_32)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>_36 = &amp;mut (*_26)<br/>StorageLive(_37)<br/>_37 = _25<br/>_35 = (move _36, move _37)<br/>StorageDead(_37)<br/>StorageDead(_36)<br/>_0 = std::result::Result::&lt;(&amp;mut obligation::ObligationLiquidity, usize), anchor_lang::error::Error&gt;::Ok(move _35)<br/>StorageDead(_35)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_1676 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>_61 = const _<br/>_43 = &amp;(*_61)<br/>_42 = &amp;(*_43)<br/>_41 = move _42 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">_40 = Arguments::&lt;'_&gt;::new_const(move _41)</td></tr></table>>];
    bb13__0_1676 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/></td></tr><tr><td align="left">_39 = _print(move _40)</td></tr></table>>];
    bb14__0_1676 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageDead(_43)<br/>StorageDead(_39)<br/>_38 = const ()<br/>StorageDead(_38)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>_60 = const _<br/>_48 = &amp;(*_60)<br/></td></tr><tr><td align="left">_47 = LendingError::name(move _48)</td></tr></table>>];
    bb15__0_1676 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>_51 = LendingError::ObligationReserveLimit<br/></td></tr><tr><td align="left">_50 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _51)</td></tr></table>>];
    bb16__0_1676 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>_59 = const _<br/>_53 = &amp;(*_59)<br/></td></tr><tr><td align="left">_52 = &lt;LendingError as ToString&gt;::to_string(move _53)</td></tr></table>>];
    bb17__0_1676 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>_57 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\state\\obligation.rs&quot;, line: const 394_u32 }<br/>_56 = anchor_lang::error::ErrorOrigin::Source(move _57)<br/>StorageDead(_57)<br/>_55 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _56)<br/>StorageDead(_56)<br/>StorageLive(_58)<br/>_58 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_46 = anchor_lang::error::AnchorError { error_name: move _47, error_code_number: move _50, error_msg: move _52, error_origin: move _55, compared_values: move _58 }<br/>StorageDead(_58)<br/>StorageDead(_55)<br/>StorageDead(_52)<br/>StorageDead(_50)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">_45 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _46)</td></tr></table>>];
    bb18__0_1676 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>_0 = std::result::Result::&lt;(&amp;mut obligation::ObligationLiquidity, usize), anchor_lang::error::Error&gt;::Err(move _45)<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_1676 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_1676 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb21__0_1676 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">21 (cleanup)</td></tr><tr><td align="left">drop(_47)</td></tr></table>>];
    bb22__0_1676 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">22 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_1676 -> bb1__0_1676 [label="return"];
    bb1__0_1676 -> bb2__0_1676 [label="1"];
    bb1__0_1676 -> bb4__0_1676 [label="otherwise"];
    bb2__0_1676 -> bb3__0_1676 [label="success"];
    bb3__0_1676 -> bb20__0_1676 [label=""];
    bb4__0_1676 -> bb5__0_1676 [label="return"];
    bb5__0_1676 -> bb6__0_1676 [label="return"];
    bb6__0_1676 -> bb7__0_1676 [label="return"];
    bb7__0_1676 -> bb8__0_1676 [label="1"];
    bb7__0_1676 -> bb12__0_1676 [label="otherwise"];
    bb8__0_1676 -> bb9__0_1676 [label="return"];
    bb9__0_1676 -> bb10__0_1676 [label="return"];
    bb10__0_1676 -> bb11__0_1676 [label="success"];
    bb11__0_1676 -> bb19__0_1676 [label=""];
    bb12__0_1676 -> bb13__0_1676 [label="return"];
    bb13__0_1676 -> bb14__0_1676 [label="return"];
    bb14__0_1676 -> bb15__0_1676 [label="return"];
    bb15__0_1676 -> bb16__0_1676 [label="return"];
    bb15__0_1676 -> bb21__0_1676 [label="unwind"];
    bb16__0_1676 -> bb17__0_1676 [label="return"];
    bb16__0_1676 -> bb21__0_1676 [label="unwind"];
    bb17__0_1676 -> bb18__0_1676 [label="return"];
    bb17__0_1676 -> bb22__0_1676 [label="unwind"];
    bb18__0_1676 -> bb19__0_1676 [label=""];
    bb19__0_1676 -> bb20__0_1676 [label=""];
    bb21__0_1676 -> bb22__0_1676 [label="return"];
}
