digraph Mir_0_1286 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn lending_operations::deposit_obligation_collateral(_1: &amp;ReErased state::lending_market::LendingMarket, _2: &amp;ReErased mut state::reserve::Reserve, _3: &amp;ReErased mut state::obligation::Obligation, _4: u64, _5: u64, _6: anchor_lang::prelude::Pubkey, _7: state::types::MaxReservesAsCollateralCheck) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _8: ();<br align="left"/>let mut _9: bool;<br align="left"/>let mut _10: u64;<br align="left"/>let mut _11: !;<br align="left"/>let _12: ();<br align="left"/>let mut _13: &amp;ReErased str;<br align="left"/>let _14: &amp;ReErased str;<br align="left"/>let mut _15: anchor_lang::error::Error;<br align="left"/>let mut _16: anchor_lang::error::AnchorError;<br align="left"/>let mut _17: std::string::String;<br align="left"/>let mut _18: &amp;ReErased LendingError;<br align="left"/>let _19: LendingError;<br align="left"/>let mut _20: u32;<br align="left"/>let mut _21: LendingError;<br align="left"/>let mut _22: std::string::String;<br align="left"/>let mut _23: &amp;ReErased LendingError;<br align="left"/>let _24: LendingError;<br align="left"/>let mut _25: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _26: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _27: anchor_lang::error::Source;<br align="left"/>let mut _28: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let _29: ();<br align="left"/>let mut _30: bool;<br align="left"/>let mut _31: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, bool&gt;;<br align="left"/>let mut _32: std::result::Result&lt;bool, anchor_lang::error::Error&gt;;<br align="left"/>let mut _33: &amp;ReErased state::last_update::LastUpdate;<br align="left"/>let mut _34: u64;<br align="left"/>let mut _35: isize;<br align="left"/>let _36: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _37: !;<br align="left"/>let mut _38: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _39: bool;<br align="left"/>let mut _40: !;<br align="left"/>let _41: ();<br align="left"/>let mut _42: &amp;ReErased str;<br align="left"/>let _43: &amp;ReErased str;<br align="left"/>let mut _44: anchor_lang::error::Error;<br align="left"/>let mut _45: anchor_lang::error::AnchorError;<br align="left"/>let mut _46: std::string::String;<br align="left"/>let mut _47: &amp;ReErased LendingError;<br align="left"/>let _48: LendingError;<br align="left"/>let mut _49: u32;<br align="left"/>let mut _50: LendingError;<br align="left"/>let mut _51: std::string::String;<br align="left"/>let mut _52: &amp;ReErased LendingError;<br align="left"/>let _53: LendingError;<br align="left"/>let mut _54: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _55: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _56: anchor_lang::error::Source;<br align="left"/>let mut _57: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let _58: ();<br align="left"/>let mut _59: bool;<br align="left"/>let mut _60: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, bool&gt;;<br align="left"/>let mut _61: std::result::Result&lt;bool, anchor_lang::error::Error&gt;;<br align="left"/>let mut _62: &amp;ReErased state::last_update::LastUpdate;<br align="left"/>let mut _63: u64;<br align="left"/>let mut _64: isize;<br align="left"/>let _65: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _66: !;<br align="left"/>let mut _67: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _68: bool;<br align="left"/>let mut _69: !;<br align="left"/>let _70: ();<br align="left"/>let mut _71: &amp;ReErased str;<br align="left"/>let _72: &amp;ReErased str;<br align="left"/>let mut _73: anchor_lang::error::Error;<br align="left"/>let mut _74: anchor_lang::error::AnchorError;<br align="left"/>let mut _75: std::string::String;<br align="left"/>let mut _76: &amp;ReErased LendingError;<br align="left"/>let _77: LendingError;<br align="left"/>let mut _78: u32;<br align="left"/>let mut _79: LendingError;<br align="left"/>let mut _80: std::string::String;<br align="left"/>let mut _81: &amp;ReErased LendingError;<br align="left"/>let _82: LendingError;<br align="left"/>let mut _83: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _84: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _85: anchor_lang::error::Source;<br align="left"/>let mut _86: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let _87: ();<br align="left"/>let mut _88: bool;<br align="left"/>let mut _89: u8;<br align="left"/>let mut _90: bool;<br align="left"/>let mut _91: u8;<br align="left"/>let mut _92: bool;<br align="left"/>let mut _93: u128;<br align="left"/>let mut _94: !;<br align="left"/>let _95: ();<br align="left"/>let mut _96: &amp;ReErased str;<br align="left"/>let _97: &amp;ReErased str;<br align="left"/>let mut _98: anchor_lang::error::Error;<br align="left"/>let mut _99: anchor_lang::error::AnchorError;<br align="left"/>let mut _100: std::string::String;<br align="left"/>let mut _101: &amp;ReErased LendingError;<br align="left"/>let _102: LendingError;<br align="left"/>let mut _103: u32;<br align="left"/>let mut _104: LendingError;<br align="left"/>let mut _105: std::string::String;<br align="left"/>let mut _106: &amp;ReErased LendingError;<br align="left"/>let _107: LendingError;<br align="left"/>let mut _108: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _109: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _110: anchor_lang::error::Source;<br align="left"/>let mut _111: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let _112: ();<br align="left"/>let mut _113: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _114: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _115: &amp;ReErased state::obligation::Obligation;<br align="left"/>let mut _116: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _117: isize;<br align="left"/>let _118: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _119: !;<br align="left"/>let mut _120: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _121: ();<br align="left"/>let _122: std::option::Option&lt;&amp;ReErased state::lending_market::ElevationGroup&gt;;<br align="left"/>let mut _123: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::option::Option&lt;&amp;ReErased state::lending_market::ElevationGroup&gt;&gt;;<br align="left"/>let mut _124: std::result::Result&lt;std::option::Option&lt;&amp;ReErased state::lending_market::ElevationGroup&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _125: u8;<br align="left"/>let mut _126: &amp;ReErased state::lending_market::LendingMarket;<br align="left"/>let mut _127: isize;<br align="left"/>let _128: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _129: !;<br align="left"/>let mut _130: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _131: std::option::Option&lt;&amp;ReErased state::lending_market::ElevationGroup&gt;;<br align="left"/>let _132: u8;<br align="left"/>let mut _133: (u8, u8);<br align="left"/>let mut _134: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _135: std::option::Option&lt;&amp;ReErased state::lending_market::ElevationGroup&gt;;<br align="left"/>let _136: ();<br align="left"/>let mut _137: bool;<br align="left"/>let mut _138: u8;<br align="left"/>let _139: ();<br align="left"/>let mut _140: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _141: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _142: &amp;ReErased state::obligation::Obligation;<br align="left"/>let mut _143: isize;<br align="left"/>let _144: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _145: !;<br align="left"/>let mut _146: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _147: ();<br align="left"/>let _148: usize;<br align="left"/>let mut _149: &amp;ReErased state::obligation::Obligation;<br align="left"/>let _150: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _151: &amp;ReErased state::obligation::Obligation;<br align="left"/>let _152: state::reserve::AssetTier;<br align="left"/>let mut _153: &amp;ReErased state::reserve::ReserveConfig;<br align="left"/>let _154: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _155: &amp;ReErased mut state::obligation::ObligationCollateral;<br align="left"/>let _156: bool;<br align="left"/>let mut _157: (&amp;ReErased mut state::obligation::ObligationCollateral, bool);<br align="left"/>let mut _158: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, (&amp;ReErased mut state::obligation::ObligationCollateral, bool)&gt;;<br align="left"/>let mut _159: std::result::Result&lt;(&amp;ReErased mut state::obligation::ObligationCollateral, bool), anchor_lang::error::Error&gt;;<br align="left"/>let mut _160: &amp;ReErased mut state::obligation::Obligation;<br align="left"/>let mut _161: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _162: state::reserve::AssetTier;<br align="left"/>let mut _163: isize;<br align="left"/>let _164: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _165: !;<br align="left"/>let mut _166: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _167: (&amp;ReErased mut state::obligation::ObligationCollateral, bool);<br align="left"/>let _168: ();<br align="left"/>let mut _169: bool;<br align="left"/>let _170: ();<br align="left"/>let mut _171: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _172: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _173: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _174: &amp;ReErased mut state::obligation::ObligationCollateral;<br align="left"/>let mut _175: usize;<br align="left"/>let mut _176: std::option::Option&lt;&amp;ReErased state::lending_market::ElevationGroup&gt;;<br align="left"/>let mut _177: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _178: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _179: &amp;ReErased mut state::reserve::Reserve;<br align="left"/>let mut _180: state::types::MaxReservesAsCollateralCheck;<br align="left"/>let mut _181: isize;<br align="left"/>let _182: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _183: !;<br align="left"/>let mut _184: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _185: ();<br align="left"/>let _186: ();<br align="left"/>let mut _187: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _188: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _189: &amp;ReErased mut state::obligation::ObligationCollateral;<br align="left"/>let mut _190: u64;<br align="left"/>let mut _191: isize;<br align="left"/>let _192: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _193: !;<br align="left"/>let mut _194: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _195: ();<br align="left"/>let mut _196: u128;<br align="left"/>let _197: ();<br align="left"/>let mut _198: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _199: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _200: &amp;ReErased mut state::obligation::Obligation;<br align="left"/>let mut _201: isize;<br align="left"/>let _202: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _203: !;<br align="left"/>let mut _204: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _205: ();<br align="left"/>let _206: ();<br align="left"/>let mut _207: &amp;ReErased mut state::last_update::LastUpdate;<br align="left"/>let _208: ();<br align="left"/>let mut _209: &amp;ReErased mut state::last_update::LastUpdate;<br align="left"/>let _210: ();<br align="left"/>let mut _211: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _212: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _213: &amp;ReErased state::obligation::Obligation;<br align="left"/>let mut _214: isize;<br align="left"/>let _215: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _216: !;<br align="left"/>let mut _217: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _218: ();<br align="left"/>let _219: ();<br align="left"/>let mut _220: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _221: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _222: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _223: &amp;ReErased state::reserve::CollateralExchangeRate;<br align="left"/>let _224: state::reserve::CollateralExchangeRate;<br align="left"/>let mut _225: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _226: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _227: u64;<br align="left"/>let mut _228: &amp;ReErased state::obligation::Obligation;<br align="left"/>let mut _229: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _230: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _231: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _232: u128;<br align="left"/>let mut _233: isize;<br align="left"/>let _234: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _235: !;<br align="left"/>let mut _236: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _237: ();<br align="left"/>let mut _238: ();<br align="left"/>let mut _239: &amp;ReErased LendingError;<br align="left"/>let mut _240: &amp;ReErased LendingError;<br align="left"/>let mut _241: &amp;ReErased LendingError;<br align="left"/>let mut _242: &amp;ReErased LendingError;<br align="left"/>let mut _243: &amp;ReErased LendingError;<br align="left"/>let mut _244: &amp;ReErased LendingError;<br align="left"/>let mut _245: &amp;ReErased LendingError;<br align="left"/>let mut _246: &amp;ReErased LendingError;<br align="left"/>let mut _247: isize;<br align="left"/>let mut _248: isize;<br align="left"/>let mut _249: isize;<br align="left"/>let mut _250: isize;<br align="left"/>let mut _251: isize;<br align="left"/>let mut _252: isize;<br align="left"/>let mut _253: isize;<br align="left"/>let mut _254: isize;<br align="left"/>let mut _255: isize;<br align="left"/>let mut _256: isize;<br align="left"/>let mut _257: isize;<br align="left"/>let mut _258: isize;<br align="left"/>let mut _259: isize;<br align="left"/>let mut _260: isize;<br align="left"/>let mut _261: isize;<br align="left"/>let mut _262: isize;<br align="left"/>let mut _263: isize;<br align="left"/>let mut _264: isize;<br align="left"/>let mut _265: isize;<br align="left"/>let mut _266: isize;<br align="left"/>let mut _267: isize;<br align="left"/>let mut _268: isize;<br align="left"/>let mut _269: isize;<br align="left"/>let mut _270: isize;<br align="left"/>let mut _271: isize;<br align="left"/>let mut _272: isize;<br align="left"/>let mut _273: isize;<br align="left"/>let mut _274: isize;<br align="left"/>let mut _275: isize;<br align="left"/>let mut _276: isize;<br align="left"/>let mut _277: isize;<br align="left"/>let mut _278: isize;<br align="left"/>let mut _279: isize;<br align="left"/>let mut _280: isize;<br align="left"/>let mut _281: isize;<br align="left"/>let mut _282: isize;<br align="left"/>let mut _283: isize;<br align="left"/>let mut _284: isize;<br align="left"/>let mut _285: isize;<br align="left"/>let mut _286: isize;<br align="left"/>let mut _287: isize;<br align="left"/>let mut _288: isize;<br align="left"/>let mut _289: isize;<br align="left"/>let mut _290: isize;<br align="left"/>let mut _291: isize;<br align="left"/>let mut _292: isize;<br align="left"/>let mut _293: isize;<br align="left"/>let mut _294: isize;<br align="left"/>let mut _295: isize;<br align="left"/>let mut _296: isize;<br align="left"/>let mut _297: isize;<br align="left"/>let mut _298: isize;<br align="left"/>let mut _299: isize;<br align="left"/>let mut _300: isize;<br align="left"/>let mut _301: isize;<br align="left"/>let mut _302: isize;<br align="left"/>let mut _303: isize;<br align="left"/>let mut _304: isize;<br align="left"/>let mut _305: isize;<br align="left"/>debug lending_market =&gt; _1;<br align="left"/>debug deposit_reserve =&gt; _2;<br align="left"/>debug obligation =&gt; _3;<br align="left"/>debug slot =&gt; _4;<br align="left"/>debug collateral_amount =&gt; _5;<br align="left"/>debug deposit_reserve_pk =&gt; _6;<br align="left"/>debug max_reserves_as_collateral_check =&gt; _7;<br align="left"/>debug residual =&gt; _36;<br align="left"/>debug val =&gt; _39;<br align="left"/>debug residual =&gt; _65;<br align="left"/>debug val =&gt; _68;<br align="left"/>debug residual =&gt; _118;<br align="left"/>debug val =&gt; _121;<br align="left"/>debug elevation_group =&gt; _122;<br align="left"/>debug residual =&gt; _128;<br align="left"/>debug val =&gt; _131;<br align="left"/>debug liquidation_threshold_pct =&gt; _132;<br align="left"/>debug residual =&gt; _144;<br align="left"/>debug val =&gt; _147;<br align="left"/>debug pre_deposit_count =&gt; _148;<br align="left"/>debug total_borrowed_amount =&gt; _150;<br align="left"/>debug asset_tier =&gt; _152;<br align="left"/>debug pre_collateral_market_value_f =&gt; _154;<br align="left"/>debug obligation_collateral =&gt; _155;<br align="left"/>debug newly_added =&gt; _156;<br align="left"/>debug residual =&gt; _164;<br align="left"/>debug val =&gt; _167;<br align="left"/>debug residual =&gt; _182;<br align="left"/>debug val =&gt; _185;<br align="left"/>debug residual =&gt; _192;<br align="left"/>debug val =&gt; _195;<br align="left"/>debug residual =&gt; _202;<br align="left"/>debug val =&gt; _205;<br align="left"/>debug residual =&gt; _215;<br align="left"/>debug val =&gt; _218;<br align="left"/>debug residual =&gt; _234;<br align="left"/>debug val =&gt; _237;<br align="left"/>>;
    bb0__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = _5<br/>_9 = Eq(move _10, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _9)</td></tr></table>>];
    bb1__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_14 = const &quot;Collateral amount provided cannot be zero&quot;<br/>_13 = &amp;(*_14)<br/></td></tr><tr><td align="left">_12 = solana_program::log::sol_log(move _13)</td></tr></table>>];
    bb2__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_14)<br/>StorageDead(_12)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_240 = const _<br/>_18 = &amp;(*_240)<br/></td></tr><tr><td align="left">_17 = LendingError::name(move _18)</td></tr></table>>];
    bb3__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_21 = LendingError::InvalidAmount<br/></td></tr><tr><td align="left">_20 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _21)</td></tr></table>>];
    bb4__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>_239 = const _<br/>_23 = &amp;(*_239)<br/></td></tr><tr><td align="left">_22 = &lt;LendingError as ToString&gt;::to_string(move _23)</td></tr></table>>];
    bb5__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_27 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\lending_market\\lending_operations.rs&quot;, line: const 373_u32 }<br/>_26 = anchor_lang::error::ErrorOrigin::Source(move _27)<br/>StorageDead(_27)<br/>_25 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _26)<br/>StorageDead(_26)<br/>StorageLive(_28)<br/>_28 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_16 = anchor_lang::error::AnchorError { error_name: move _17, error_code_number: move _20, error_msg: move _22, error_origin: move _25, compared_values: move _28 }<br/>StorageDead(_28)<br/>StorageDead(_25)<br/>StorageDead(_22)<br/>StorageDead(_20)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">_15 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _16)</td></tr></table>>];
    bb6__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _15)<br/>StorageDead(_15)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>_8 = const ()<br/>StorageDead(_9)<br/>StorageDead(_8)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>_33 = &amp;((*_2).1: state::last_update::LastUpdate)<br/>StorageLive(_34)<br/>_34 = _4<br/></td></tr><tr><td align="left">_32 = last_update::LastUpdate::is_stale(move _33, move _34, const _)</td></tr></table>>];
    bb8__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">_31 = &lt;std::result::Result&lt;bool, anchor_lang::error::Error&gt; as Try&gt;::branch(move _32)</td></tr></table>>];
    bb9__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>_35 = discriminant(_31)<br/></td></tr><tr><td align="left">switchInt(move _35)</td></tr></table>>];
    bb10__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_39)<br/>_39 = ((_31 as Continue).0: bool)<br/>_30 = _39<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">switchInt(move _30)</td></tr></table>>];
    bb11__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb12__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_36)<br/>_36 = move ((_31 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_38)<br/>_38 = move _36<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _38)</td></tr></table>>];
    bb13__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_36)<br/>_293 = discriminant(_31)<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_43)<br/>StorageDead(_41)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>_242 = const _<br/>_47 = &amp;(*_242)<br/></td></tr><tr><td align="left">_46 = LendingError::name(move _47)</td></tr></table>>];
    bb15__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>_50 = LendingError::ReserveStale<br/></td></tr><tr><td align="left">_49 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _50)</td></tr></table>>];
    bb16__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>_241 = const _<br/>_52 = &amp;(*_241)<br/></td></tr><tr><td align="left">_51 = &lt;LendingError as ToString&gt;::to_string(move _52)</td></tr></table>>];
    bb17__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>_56 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\lending_market\\lending_operations.rs&quot;, line: const 381_u32 }<br/>_55 = anchor_lang::error::ErrorOrigin::Source(move _56)<br/>StorageDead(_56)<br/>_54 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _55)<br/>StorageDead(_55)<br/>StorageLive(_57)<br/>_57 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_45 = anchor_lang::error::AnchorError { error_name: move _46, error_code_number: move _49, error_msg: move _51, error_origin: move _54, compared_values: move _57 }<br/>StorageDead(_57)<br/>StorageDead(_54)<br/>StorageDead(_51)<br/>StorageDead(_49)<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">_44 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _45)</td></tr></table>>];
    bb18__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _44)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">_60 = &lt;std::result::Result&lt;bool, anchor_lang::error::Error&gt; as Try&gt;::branch(move _61)</td></tr></table>>];
    bb20__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>_64 = discriminant(_60)<br/></td></tr><tr><td align="left">switchInt(move _64)</td></tr></table>>];
    bb21__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_68)<br/>_68 = ((_60 as Continue).0: bool)<br/>_59 = _68<br/>StorageDead(_68)<br/></td></tr><tr><td align="left">switchInt(move _59)</td></tr></table>>];
    bb22__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_65)<br/>_65 = move ((_60 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_67)<br/>_67 = move _65<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _67)</td></tr></table>>];
    bb23__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>StorageDead(_65)<br/>_291 = discriminant(_60)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageDead(_72)<br/>StorageDead(_70)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>_244 = const _<br/>_76 = &amp;(*_244)<br/></td></tr><tr><td align="left">_75 = LendingError::name(move _76)</td></tr></table>>];
    bb25__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>_79 = LendingError::ObligationStale<br/></td></tr><tr><td align="left">_78 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _79)</td></tr></table>>];
    bb26__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>_243 = const _<br/>_81 = &amp;(*_243)<br/></td></tr><tr><td align="left">_80 = &lt;LendingError as ToString&gt;::to_string(move _81)</td></tr></table>>];
    bb27__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>_85 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\lending_market\\lending_operations.rs&quot;, line: const 389_u32 }<br/>_84 = anchor_lang::error::ErrorOrigin::Source(move _85)<br/>StorageDead(_85)<br/>_83 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _84)<br/>StorageDead(_84)<br/>StorageLive(_86)<br/>_86 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_74 = anchor_lang::error::AnchorError { error_name: move _75, error_code_number: move _78, error_msg: move _80, error_origin: move _83, compared_values: move _86 }<br/>StorageDead(_86)<br/>StorageDead(_83)<br/>StorageDead(_80)<br/>StorageDead(_78)<br/>StorageDead(_75)<br/></td></tr><tr><td align="left">_73 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _74)</td></tr></table>>];
    bb28__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _73)<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>_91 = ((*_3).14: u8)<br/>_90 = Eq(move _91, const _)<br/></td></tr><tr><td align="left">switchInt(move _90)</td></tr></table>>];
    bb30__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>_93 = ((*_3).8: u128)<br/>_92 = Gt(move _93, const 0_u128)<br/></td></tr><tr><td align="left">switchInt(move _92)</td></tr></table>>];
    bb32__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>_97 = const &quot;Deposit reserve is disabled for usage as collateral outside elevation group&quot;<br/>_96 = &amp;(*_97)<br/></td></tr><tr><td align="left">_95 = solana_program::log::sol_log(move _96)</td></tr></table>>];
    bb33__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>StorageDead(_97)<br/>StorageDead(_95)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>_246 = const _<br/>_101 = &amp;(*_246)<br/></td></tr><tr><td align="left">_100 = LendingError::name(move _101)</td></tr></table>>];
    bb34__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>_104 = LendingError::DepositDisabledOutsideElevationGroup<br/></td></tr><tr><td align="left">_103 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _104)</td></tr></table>>];
    bb35__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>_245 = const _<br/>_106 = &amp;(*_245)<br/></td></tr><tr><td align="left">_105 = &lt;LendingError as ToString&gt;::to_string(move _106)</td></tr></table>>];
    bb36__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>_110 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\lending_market\\lending_operations.rs&quot;, line: const 397_u32 }<br/>_109 = anchor_lang::error::ErrorOrigin::Source(move _110)<br/>StorageDead(_110)<br/>_108 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _109)<br/>StorageDead(_109)<br/>StorageLive(_111)<br/>_111 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_99 = anchor_lang::error::AnchorError { error_name: move _100, error_code_number: move _103, error_msg: move _105, error_origin: move _108, compared_values: move _111 }<br/>StorageDead(_111)<br/>StorageDead(_108)<br/>StorageDead(_105)<br/>StorageDead(_103)<br/>StorageDead(_100)<br/></td></tr><tr><td align="left">_98 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _99)</td></tr></table>>];
    bb37__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _98)<br/>StorageDead(_98)<br/>StorageDead(_92)<br/>StorageDead(_90)<br/>StorageDead(_88)<br/>StorageDead(_87)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">_87 = const ()<br/>StorageDead(_92)<br/>StorageDead(_90)<br/>StorageDead(_88)<br/>StorageDead(_87)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>_115 = &amp;(*_3)<br/>StorageLive(_116)<br/>_116 = &amp;(*_2)<br/></td></tr><tr><td align="left">_114 = check_same_elevation_group(move _115, move _116)</td></tr></table>>];
    bb41__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_116)<br/>StorageDead(_115)<br/></td></tr><tr><td align="left">_113 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _114)</td></tr></table>>];
    bb42__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/>_117 = discriminant(_113)<br/></td></tr><tr><td align="left">switchInt(move _117)</td></tr></table>>];
    bb43__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageLive(_121)<br/>_121 = ((_113 as Continue).0: ())<br/>_112 = _121<br/>StorageDead(_121)<br/>_255 = discriminant(_113)<br/>StorageDead(_113)<br/>StorageDead(_112)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>_125 = ((*_3).14: u8)<br/>StorageLive(_126)<br/>_126 = &amp;(*_1)<br/></td></tr><tr><td align="left">_124 = get_elevation_group(move _125, move _126)</td></tr></table>>];
    bb44__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_118)<br/>_118 = move ((_113 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_120)<br/>_120 = move _118<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _120)</td></tr></table>>];
    bb45__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/>StorageDead(_118)<br/>_289 = discriminant(_113)<br/>StorageDead(_113)<br/>StorageDead(_112)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/>StorageDead(_125)<br/></td></tr><tr><td align="left">_123 = &lt;std::result::Result&lt;std::option::Option&lt;&amp;state::lending_market::ElevationGroup&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _124)</td></tr></table>>];
    bb47__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_124)<br/>_127 = discriminant(_123)<br/></td></tr><tr><td align="left">switchInt(move _127)</td></tr></table>>];
    bb48__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageLive(_131)<br/>_131 = ((_123 as Continue).0: std::option::Option&lt;&amp;state::lending_market::ElevationGroup&gt;)<br/>_122 = _131<br/>StorageDead(_131)<br/>_257 = discriminant(_123)<br/>StorageDead(_123)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>_134 = &amp;(*_2)<br/>StorageLive(_135)<br/>_135 = _122<br/></td></tr><tr><td align="left">_133 = get_max_ltv_and_liquidation_threshold(move _134, move _135)</td></tr></table>>];
    bb49__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageLive(_128)<br/>_128 = move ((_123 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_130)<br/>_130 = move _128<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _130)</td></tr></table>>];
    bb50__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_130)<br/>StorageDead(_128)<br/>_287 = discriminant(_123)<br/>StorageDead(_123)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb51__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_135)<br/>StorageDead(_134)<br/>StorageLive(_132)<br/>_132 = (_133.1: u8)<br/>StorageDead(_133)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>_138 = _132<br/>_137 = Eq(move _138, const 0_u8)<br/></td></tr><tr><td align="left">switchInt(move _137)</td></tr></table>>];
    bb52__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/>StorageLive(_139)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>_142 = &amp;(*_3)<br/></td></tr><tr><td align="left">_141 = obligation::Obligation::check_not_marked_for_deleveraging(move _142)</td></tr></table>>];
    bb53__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_142)<br/></td></tr><tr><td align="left">_140 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _141)</td></tr></table>>];
    bb54__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_141)<br/>_143 = discriminant(_140)<br/></td></tr><tr><td align="left">switchInt(move _143)</td></tr></table>>];
    bb55__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageLive(_147)<br/>_147 = ((_140 as Continue).0: ())<br/>_139 = _147<br/>StorageDead(_147)<br/>_259 = discriminant(_140)<br/>StorageDead(_140)<br/>StorageDead(_139)<br/>_136 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb56__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageLive(_144)<br/>_144 = move ((_140 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_146)<br/>_146 = move _144<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _146)</td></tr></table>>];
    bb57__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_146)<br/>StorageDead(_144)<br/>_285 = discriminant(_140)<br/>StorageDead(_140)<br/>StorageDead(_139)<br/>StorageDead(_137)<br/>StorageDead(_136)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb58__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/>_136 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_137)<br/>StorageDead(_136)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>_149 = &amp;(*_3)<br/></td></tr><tr><td align="left">_148 = obligation::Obligation::active_deposits_count(move _149)</td></tr></table>>];
    bb60__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_149)<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>_151 = &amp;(*_3)<br/></td></tr><tr><td align="left">_150 = obligation::Obligation::get_borrowed_amount_if_single_token(move _151)</td></tr></table>>];
    bb61__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_151)<br/>StorageLive(_152)<br/>StorageLive(_153)<br/>_153 = &amp;((*_2).9: state::reserve::ReserveConfig)<br/></td></tr><tr><td align="left">_152 = reserve::ReserveConfig::get_asset_tier(move _153)</td></tr></table>>];
    bb62__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_153)<br/>StorageLive(_154)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>_160 = &amp;mut (*_3)<br/>StorageLive(_161)<br/>_161 = _6<br/>StorageLive(_162)<br/>_162 = move _152<br/></td></tr><tr><td align="left">_159 = obligation::Obligation::find_or_add_collateral_to_deposits(move _160, move _161, move _162)</td></tr></table>>];
    bb63__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_162)<br/>StorageDead(_161)<br/>StorageDead(_160)<br/></td></tr><tr><td align="left">_158 = &lt;std::result::Result&lt;(&amp;mut obligation::ObligationCollateral, bool), anchor_lang::error::Error&gt; as Try&gt;::branch(move _159)</td></tr></table>>];
    bb64__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_159)<br/>_163 = discriminant(_158)<br/></td></tr><tr><td align="left">switchInt(move _163)</td></tr></table>>];
    bb65__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageLive(_167)<br/>_167 = move ((_158 as Continue).0: (&amp;mut state::obligation::ObligationCollateral, bool))<br/>_157 = move _167<br/>StorageDead(_167)<br/>StorageLive(_155)<br/>_155 = move (_157.0: &amp;mut state::obligation::ObligationCollateral)<br/>StorageLive(_156)<br/>_156 = (_157.1: bool)<br/>_261 = discriminant(_158)<br/>StorageDead(_158)<br/>StorageDead(_157)<br/>StorageLive(_168)<br/>StorageLive(_169)<br/>_169 = _156<br/></td></tr><tr><td align="left">switchInt(move _169)</td></tr></table>>];
    bb66__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageLive(_164)<br/>_164 = move ((_158 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_166)<br/>_166 = move _164<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _166)</td></tr></table>>];
    bb67__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_166)<br/>StorageDead(_164)<br/>_283 = discriminant(_158)<br/>StorageDead(_158)<br/>StorageDead(_157)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageLive(_170)<br/>StorageLive(_171)<br/>StorageLive(_172)<br/>StorageLive(_173)<br/>_173 = _150<br/>StorageLive(_174)<br/>_174 = &amp;mut (*_155)<br/>StorageLive(_175)<br/>_175 = _148<br/>StorageLive(_176)<br/>_176 = _122<br/>StorageLive(_177)<br/>StorageLive(_178)<br/>_178 = &amp;_6<br/>_177 = &amp;(*_178)<br/>StorageLive(_179)<br/>_179 = &amp;mut (*_2)<br/>StorageLive(_180)<br/>_180 = move _7<br/></td></tr><tr><td align="left">_172 = update_elevation_group_debt_trackers_on_new_deposit(move _173, move _174, move _175, move _176, move _177, move _179, move _180)</td></tr></table>>];
    bb69__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_180)<br/>StorageDead(_179)<br/>StorageDead(_177)<br/>StorageDead(_176)<br/>StorageDead(_175)<br/>StorageDead(_174)<br/>StorageDead(_173)<br/></td></tr><tr><td align="left">_171 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _172)</td></tr></table>>];
    bb70__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_172)<br/>_181 = discriminant(_171)<br/></td></tr><tr><td align="left">switchInt(move _181)</td></tr></table>>];
    bb71__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageLive(_185)<br/>_185 = ((_171 as Continue).0: ())<br/>_170 = _185<br/>StorageDead(_185)<br/>_263 = discriminant(_171)<br/>StorageDead(_178)<br/>StorageDead(_171)<br/>StorageDead(_170)<br/>_168 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb72__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageLive(_182)<br/>_182 = move ((_171 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_184)<br/>_184 = move _182<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _184)</td></tr></table>>];
    bb73__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_184)<br/>StorageDead(_182)<br/>_281 = discriminant(_171)<br/>StorageDead(_178)<br/>StorageDead(_171)<br/>StorageDead(_170)<br/>StorageDead(_169)<br/>StorageDead(_168)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb74__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">_168 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb75__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_169)<br/>StorageDead(_168)<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>StorageLive(_189)<br/>_189 = &amp;mut (*_155)<br/>StorageLive(_190)<br/>_190 = _5<br/></td></tr><tr><td align="left">_188 = obligation::ObligationCollateral::deposit(move _189, move _190)</td></tr></table>>];
    bb76__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_190)<br/>StorageDead(_189)<br/></td></tr><tr><td align="left">_187 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _188)</td></tr></table>>];
    bb77__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_188)<br/>_191 = discriminant(_187)<br/></td></tr><tr><td align="left">switchInt(move _191)</td></tr></table>>];
    bb78__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageLive(_195)<br/>_195 = ((_187 as Continue).0: ())<br/>_186 = _195<br/>StorageDead(_195)<br/>_265 = discriminant(_187)<br/>StorageDead(_187)<br/>StorageDead(_186)<br/>StorageLive(_196)<br/>_196 = ((*_155).2: u128)<br/></td></tr><tr><td align="left">_154 = FixedU128::&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;::from_bits(move _196)</td></tr></table>>];
    bb79__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageLive(_192)<br/>_192 = move ((_187 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_194)<br/>_194 = move _192<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _194)</td></tr></table>>];
    bb80__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_194)<br/>StorageDead(_192)<br/>_279 = discriminant(_187)<br/>StorageDead(_187)<br/>StorageDead(_186)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb81__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_196)<br/>StorageDead(_156)<br/>StorageDead(_155)<br/>StorageLive(_197)<br/>StorageLive(_198)<br/>StorageLive(_199)<br/>StorageLive(_200)<br/>_200 = &amp;mut (*_3)<br/></td></tr><tr><td align="left">_199 = check_orders_supported_after_user_operation(move _200)</td></tr></table>>];
    bb82__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_200)<br/></td></tr><tr><td align="left">_198 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _199)</td></tr></table>>];
    bb83__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_199)<br/>_201 = discriminant(_198)<br/></td></tr><tr><td align="left">switchInt(move _201)</td></tr></table>>];
    bb84__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageLive(_205)<br/>_205 = ((_198 as Continue).0: ())<br/>_197 = _205<br/>StorageDead(_205)<br/>_267 = discriminant(_198)<br/>StorageDead(_198)<br/>StorageDead(_197)<br/>StorageLive(_206)<br/>StorageLive(_207)<br/>_207 = &amp;mut ((*_3).1: state::last_update::LastUpdate)<br/></td></tr><tr><td align="left">_206 = last_update::LastUpdate::mark_stale(move _207)</td></tr></table>>];
    bb85__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageLive(_202)<br/>_202 = move ((_198 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_204)<br/>_204 = move _202<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _204)</td></tr></table>>];
    bb86__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_204)<br/>StorageDead(_202)<br/>_277 = discriminant(_198)<br/>StorageDead(_198)<br/>StorageDead(_197)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb87__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_207)<br/>StorageDead(_206)<br/>StorageLive(_208)<br/>StorageLive(_209)<br/>_209 = &amp;mut ((*_2).1: state::last_update::LastUpdate)<br/></td></tr><tr><td align="left">_208 = last_update::LastUpdate::mark_stale(move _209)</td></tr></table>>];
    bb88__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_209)<br/>StorageDead(_208)<br/>StorageLive(_210)<br/>StorageLive(_211)<br/>StorageLive(_212)<br/>StorageLive(_213)<br/>_213 = &amp;(*_3)<br/></td></tr><tr><td align="left">_212 = validate_obligation_asset_tiers(move _213)</td></tr></table>>];
    bb89__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_213)<br/></td></tr><tr><td align="left">_211 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _212)</td></tr></table>>];
    bb90__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_212)<br/>_214 = discriminant(_211)<br/></td></tr><tr><td align="left">switchInt(move _214)</td></tr></table>>];
    bb91__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageLive(_218)<br/>_218 = ((_211 as Continue).0: ())<br/>_210 = _218<br/>StorageDead(_218)<br/>_269 = discriminant(_211)<br/>StorageDead(_211)<br/>StorageDead(_210)<br/>StorageLive(_219)<br/>StorageLive(_220)<br/>StorageLive(_221)<br/>StorageLive(_222)<br/>StorageLive(_223)<br/>StorageLive(_224)<br/>StorageLive(_225)<br/>_225 = &amp;(*_2)<br/></td></tr><tr><td align="left">_224 = reserve::Reserve::collateral_exchange_rate(move _225)</td></tr></table>>];
    bb92__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageLive(_215)<br/>_215 = move ((_211 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_217)<br/>_217 = move _215<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _217)</td></tr></table>>];
    bb93__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_217)<br/>StorageDead(_215)<br/>_275 = discriminant(_211)<br/>StorageDead(_211)<br/>StorageDead(_210)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb94__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">_223 = &amp;_224<br/>StorageDead(_225)<br/>StorageLive(_226)<br/>StorageLive(_227)<br/>_227 = _5<br/></td></tr><tr><td align="left">_226 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as From&lt;u64&gt;&gt;::from(move _227)</td></tr></table>>];
    bb95__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_227)<br/></td></tr><tr><td align="left">_222 = reserve::CollateralExchangeRate::fraction_collateral_to_liquidity(move _223, move _226)</td></tr></table>>];
    bb96__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_226)<br/>StorageDead(_223)<br/>StorageLive(_228)<br/>_228 = &amp;(*_3)<br/>StorageLive(_229)<br/>_229 = &amp;(*_2)<br/>StorageLive(_230)<br/>_230 = _154<br/>StorageLive(_231)<br/>StorageLive(_232)<br/>_232 = ((*_1).20: u128)<br/></td></tr><tr><td align="left">_231 = FixedU128::&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;::from_bits(move _232)</td></tr></table>>];
    bb97__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_232)<br/></td></tr><tr><td align="left">_221 = post_deposit_obligation_invariants(move _222, move _228, move _229, move _230, move _231)</td></tr></table>>];
    bb98__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_231)<br/>StorageDead(_230)<br/>StorageDead(_229)<br/>StorageDead(_228)<br/>StorageDead(_222)<br/></td></tr><tr><td align="left">_220 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _221)</td></tr></table>>];
    bb99__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageDead(_221)<br/>_233 = discriminant(_220)<br/></td></tr><tr><td align="left">switchInt(move _233)</td></tr></table>>];
    bb100__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageLive(_237)<br/>_237 = ((_220 as Continue).0: ())<br/>_219 = _237<br/>StorageDead(_237)<br/>_271 = discriminant(_220)<br/>StorageDead(_224)<br/>StorageDead(_220)<br/>StorageDead(_219)<br/>StorageLive(_238)<br/>_238 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _238)<br/>StorageDead(_238)<br/>StorageDead(_154)<br/>StorageDead(_152)<br/>StorageDead(_150)<br/>StorageDead(_148)<br/>StorageDead(_132)<br/>StorageDead(_122)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb101__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageLive(_234)<br/>_234 = move ((_220 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_236)<br/>_236 = move _234<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _236)</td></tr></table>>];
    bb102__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_236)<br/>StorageDead(_234)<br/>_273 = discriminant(_220)<br/>StorageDead(_224)<br/>StorageDead(_220)<br/>StorageDead(_219)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb103__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_156)<br/>StorageDead(_155)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb104__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_154)<br/>StorageDead(_152)<br/>StorageDead(_150)<br/>StorageDead(_148)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb105__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_132)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb106__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb107__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb108__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb109__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left">return</td></tr></table>>];
    bb110__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">110 (cleanup)</td></tr><tr><td align="left">drop(_100)</td></tr></table>>];
    bb111__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">111 (cleanup)</td></tr><tr><td align="left">drop(_75)</td></tr></table>>];
    bb112__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">112 (cleanup)</td></tr><tr><td align="left">drop(_46)</td></tr></table>>];
    bb113__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">113 (cleanup)</td></tr><tr><td align="left">drop(_17)</td></tr></table>>];
    bb114__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">114 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb115__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">_247 = discriminant(_31)<br/>StorageDead(_31)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>_43 = const &quot;Deposit reserve is stale and must be refreshed in the current slot&quot;<br/>_42 = &amp;(*_43)<br/></td></tr><tr><td align="left">_41 = solana_program::log::sol_log(move _42)</td></tr></table>>];
    bb116__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">_249 = discriminant(_31)<br/>StorageDead(_31)<br/>_29 = const ()<br/>StorageDead(_30)<br/>StorageDead(_29)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>_62 = &amp;((*_3).1: state::last_update::LastUpdate)<br/>StorageLive(_63)<br/>_63 = _4<br/></td></tr><tr><td align="left">_61 = last_update::LastUpdate::is_stale(move _62, move _63, const _)</td></tr></table>>];
    bb117__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">_251 = discriminant(_60)<br/>StorageDead(_60)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>_72 = const &quot;Obligation is stale and must be refreshed in the current slot&quot;<br/>_71 = &amp;(*_72)<br/></td></tr><tr><td align="left">_70 = solana_program::log::sol_log(move _71)</td></tr></table>>];
    bb118__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">_253 = discriminant(_60)<br/>StorageDead(_60)<br/>_58 = const ()<br/>StorageDead(_59)<br/>StorageDead(_58)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>_89 = (((*_2).9: state::reserve::ReserveConfig).23: u8)<br/>_88 = Gt(move _89, const 0_u8)<br/></td></tr><tr><td align="left">switchInt(move _88)</td></tr></table>>];
    bb119__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">119 (cleanup)</td></tr><tr><td align="left" balign="left">_295 = discriminant(_220)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb120__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">120 (cleanup)</td></tr><tr><td align="left" balign="left">_296 = discriminant(_211)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb121__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">121 (cleanup)</td></tr><tr><td align="left" balign="left">_297 = discriminant(_198)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb122__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">122 (cleanup)</td></tr><tr><td align="left" balign="left">_298 = discriminant(_187)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb123__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">123 (cleanup)</td></tr><tr><td align="left" balign="left">_299 = discriminant(_171)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb124__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">124 (cleanup)</td></tr><tr><td align="left" balign="left">_300 = discriminant(_158)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb125__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">125 (cleanup)</td></tr><tr><td align="left" balign="left">_301 = discriminant(_140)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb126__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">126 (cleanup)</td></tr><tr><td align="left" balign="left">_302 = discriminant(_123)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb127__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">127 (cleanup)</td></tr><tr><td align="left" balign="left">_303 = discriminant(_113)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb128__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">128 (cleanup)</td></tr><tr><td align="left" balign="left">_304 = discriminant(_60)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb129__0_1286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">129 (cleanup)</td></tr><tr><td align="left" balign="left">_305 = discriminant(_31)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_1286 -> bb7__0_1286 [label="0"];
    bb0__0_1286 -> bb1__0_1286 [label="otherwise"];
    bb1__0_1286 -> bb2__0_1286 [label="return"];
    bb2__0_1286 -> bb3__0_1286 [label="return"];
    bb3__0_1286 -> bb4__0_1286 [label="return"];
    bb3__0_1286 -> bb113__0_1286 [label="unwind"];
    bb4__0_1286 -> bb5__0_1286 [label="return"];
    bb4__0_1286 -> bb113__0_1286 [label="unwind"];
    bb5__0_1286 -> bb6__0_1286 [label="return"];
    bb5__0_1286 -> bb114__0_1286 [label="unwind"];
    bb6__0_1286 -> bb109__0_1286 [label=""];
    bb7__0_1286 -> bb8__0_1286 [label="return"];
    bb8__0_1286 -> bb9__0_1286 [label="return"];
    bb8__0_1286 -> bb114__0_1286 [label="unwind"];
    bb9__0_1286 -> bb10__0_1286 [label="0"];
    bb9__0_1286 -> bb12__0_1286 [label="1"];
    bb9__0_1286 -> bb11__0_1286 [label="otherwise"];
    bb10__0_1286 -> bb116__0_1286 [label="0"];
    bb10__0_1286 -> bb115__0_1286 [label="otherwise"];
    bb12__0_1286 -> bb13__0_1286 [label="return"];
    bb12__0_1286 -> bb129__0_1286 [label="unwind"];
    bb13__0_1286 -> bb108__0_1286 [label=""];
    bb14__0_1286 -> bb15__0_1286 [label="return"];
    bb15__0_1286 -> bb16__0_1286 [label="return"];
    bb15__0_1286 -> bb112__0_1286 [label="unwind"];
    bb16__0_1286 -> bb17__0_1286 [label="return"];
    bb16__0_1286 -> bb112__0_1286 [label="unwind"];
    bb17__0_1286 -> bb18__0_1286 [label="return"];
    bb17__0_1286 -> bb114__0_1286 [label="unwind"];
    bb18__0_1286 -> bb108__0_1286 [label=""];
    bb19__0_1286 -> bb20__0_1286 [label="return"];
    bb19__0_1286 -> bb114__0_1286 [label="unwind"];
    bb20__0_1286 -> bb21__0_1286 [label="0"];
    bb20__0_1286 -> bb22__0_1286 [label="1"];
    bb20__0_1286 -> bb11__0_1286 [label="otherwise"];
    bb21__0_1286 -> bb118__0_1286 [label="0"];
    bb21__0_1286 -> bb117__0_1286 [label="otherwise"];
    bb22__0_1286 -> bb23__0_1286 [label="return"];
    bb22__0_1286 -> bb128__0_1286 [label="unwind"];
    bb23__0_1286 -> bb107__0_1286 [label=""];
    bb24__0_1286 -> bb25__0_1286 [label="return"];
    bb25__0_1286 -> bb26__0_1286 [label="return"];
    bb25__0_1286 -> bb111__0_1286 [label="unwind"];
    bb26__0_1286 -> bb27__0_1286 [label="return"];
    bb26__0_1286 -> bb111__0_1286 [label="unwind"];
    bb27__0_1286 -> bb28__0_1286 [label="return"];
    bb27__0_1286 -> bb114__0_1286 [label="unwind"];
    bb28__0_1286 -> bb107__0_1286 [label=""];
    bb29__0_1286 -> bb39__0_1286 [label="0"];
    bb29__0_1286 -> bb31__0_1286 [label="otherwise"];
    bb30__0_1286 -> bb40__0_1286 [label=""];
    bb31__0_1286 -> bb38__0_1286 [label="0"];
    bb31__0_1286 -> bb32__0_1286 [label="otherwise"];
    bb32__0_1286 -> bb33__0_1286 [label="return"];
    bb33__0_1286 -> bb34__0_1286 [label="return"];
    bb34__0_1286 -> bb35__0_1286 [label="return"];
    bb34__0_1286 -> bb110__0_1286 [label="unwind"];
    bb35__0_1286 -> bb36__0_1286 [label="return"];
    bb35__0_1286 -> bb110__0_1286 [label="unwind"];
    bb36__0_1286 -> bb37__0_1286 [label="return"];
    bb36__0_1286 -> bb114__0_1286 [label="unwind"];
    bb37__0_1286 -> bb109__0_1286 [label=""];
    bb38__0_1286 -> bb40__0_1286 [label=""];
    bb39__0_1286 -> bb40__0_1286 [label=""];
    bb40__0_1286 -> bb41__0_1286 [label="return"];
    bb41__0_1286 -> bb42__0_1286 [label="return"];
    bb41__0_1286 -> bb114__0_1286 [label="unwind"];
    bb42__0_1286 -> bb43__0_1286 [label="0"];
    bb42__0_1286 -> bb44__0_1286 [label="1"];
    bb42__0_1286 -> bb11__0_1286 [label="otherwise"];
    bb43__0_1286 -> bb46__0_1286 [label="return"];
    bb44__0_1286 -> bb45__0_1286 [label="return"];
    bb44__0_1286 -> bb127__0_1286 [label="unwind"];
    bb45__0_1286 -> bb109__0_1286 [label=""];
    bb46__0_1286 -> bb47__0_1286 [label="return"];
    bb46__0_1286 -> bb114__0_1286 [label="unwind"];
    bb47__0_1286 -> bb48__0_1286 [label="0"];
    bb47__0_1286 -> bb49__0_1286 [label="1"];
    bb47__0_1286 -> bb11__0_1286 [label="otherwise"];
    bb48__0_1286 -> bb51__0_1286 [label="return"];
    bb49__0_1286 -> bb50__0_1286 [label="return"];
    bb49__0_1286 -> bb126__0_1286 [label="unwind"];
    bb50__0_1286 -> bb106__0_1286 [label=""];
    bb51__0_1286 -> bb58__0_1286 [label="0"];
    bb51__0_1286 -> bb52__0_1286 [label="otherwise"];
    bb52__0_1286 -> bb53__0_1286 [label="return"];
    bb53__0_1286 -> bb54__0_1286 [label="return"];
    bb53__0_1286 -> bb114__0_1286 [label="unwind"];
    bb54__0_1286 -> bb55__0_1286 [label="0"];
    bb54__0_1286 -> bb56__0_1286 [label="1"];
    bb54__0_1286 -> bb11__0_1286 [label="otherwise"];
    bb55__0_1286 -> bb59__0_1286 [label=""];
    bb56__0_1286 -> bb57__0_1286 [label="return"];
    bb56__0_1286 -> bb125__0_1286 [label="unwind"];
    bb57__0_1286 -> bb105__0_1286 [label=""];
    bb58__0_1286 -> bb59__0_1286 [label=""];
    bb59__0_1286 -> bb60__0_1286 [label="return"];
    bb60__0_1286 -> bb61__0_1286 [label="return"];
    bb61__0_1286 -> bb62__0_1286 [label="return"];
    bb62__0_1286 -> bb63__0_1286 [label="return"];
    bb63__0_1286 -> bb64__0_1286 [label="return"];
    bb63__0_1286 -> bb114__0_1286 [label="unwind"];
    bb64__0_1286 -> bb65__0_1286 [label="0"];
    bb64__0_1286 -> bb66__0_1286 [label="1"];
    bb64__0_1286 -> bb11__0_1286 [label="otherwise"];
    bb65__0_1286 -> bb74__0_1286 [label="0"];
    bb65__0_1286 -> bb68__0_1286 [label="otherwise"];
    bb66__0_1286 -> bb67__0_1286 [label="return"];
    bb66__0_1286 -> bb124__0_1286 [label="unwind"];
    bb67__0_1286 -> bb104__0_1286 [label=""];
    bb68__0_1286 -> bb69__0_1286 [label="return"];
    bb69__0_1286 -> bb70__0_1286 [label="return"];
    bb69__0_1286 -> bb114__0_1286 [label="unwind"];
    bb70__0_1286 -> bb71__0_1286 [label="0"];
    bb70__0_1286 -> bb72__0_1286 [label="1"];
    bb70__0_1286 -> bb11__0_1286 [label="otherwise"];
    bb71__0_1286 -> bb75__0_1286 [label=""];
    bb72__0_1286 -> bb73__0_1286 [label="return"];
    bb72__0_1286 -> bb123__0_1286 [label="unwind"];
    bb73__0_1286 -> bb103__0_1286 [label=""];
    bb74__0_1286 -> bb75__0_1286 [label=""];
    bb75__0_1286 -> bb76__0_1286 [label="return"];
    bb76__0_1286 -> bb77__0_1286 [label="return"];
    bb76__0_1286 -> bb114__0_1286 [label="unwind"];
    bb77__0_1286 -> bb78__0_1286 [label="0"];
    bb77__0_1286 -> bb79__0_1286 [label="1"];
    bb77__0_1286 -> bb11__0_1286 [label="otherwise"];
    bb78__0_1286 -> bb81__0_1286 [label="return"];
    bb79__0_1286 -> bb80__0_1286 [label="return"];
    bb79__0_1286 -> bb122__0_1286 [label="unwind"];
    bb80__0_1286 -> bb103__0_1286 [label=""];
    bb81__0_1286 -> bb82__0_1286 [label="return"];
    bb82__0_1286 -> bb83__0_1286 [label="return"];
    bb82__0_1286 -> bb114__0_1286 [label="unwind"];
    bb83__0_1286 -> bb84__0_1286 [label="0"];
    bb83__0_1286 -> bb85__0_1286 [label="1"];
    bb83__0_1286 -> bb11__0_1286 [label="otherwise"];
    bb84__0_1286 -> bb87__0_1286 [label="return"];
    bb85__0_1286 -> bb86__0_1286 [label="return"];
    bb85__0_1286 -> bb121__0_1286 [label="unwind"];
    bb86__0_1286 -> bb104__0_1286 [label=""];
    bb87__0_1286 -> bb88__0_1286 [label="return"];
    bb88__0_1286 -> bb89__0_1286 [label="return"];
    bb89__0_1286 -> bb90__0_1286 [label="return"];
    bb89__0_1286 -> bb114__0_1286 [label="unwind"];
    bb90__0_1286 -> bb91__0_1286 [label="0"];
    bb90__0_1286 -> bb92__0_1286 [label="1"];
    bb90__0_1286 -> bb11__0_1286 [label="otherwise"];
    bb91__0_1286 -> bb94__0_1286 [label="return"];
    bb92__0_1286 -> bb93__0_1286 [label="return"];
    bb92__0_1286 -> bb120__0_1286 [label="unwind"];
    bb93__0_1286 -> bb104__0_1286 [label=""];
    bb94__0_1286 -> bb95__0_1286 [label="return"];
    bb95__0_1286 -> bb96__0_1286 [label="return"];
    bb96__0_1286 -> bb97__0_1286 [label="return"];
    bb97__0_1286 -> bb98__0_1286 [label="return"];
    bb98__0_1286 -> bb99__0_1286 [label="return"];
    bb98__0_1286 -> bb114__0_1286 [label="unwind"];
    bb99__0_1286 -> bb100__0_1286 [label="0"];
    bb99__0_1286 -> bb101__0_1286 [label="1"];
    bb99__0_1286 -> bb11__0_1286 [label="otherwise"];
    bb100__0_1286 -> bb109__0_1286 [label=""];
    bb101__0_1286 -> bb102__0_1286 [label="return"];
    bb101__0_1286 -> bb119__0_1286 [label="unwind"];
    bb102__0_1286 -> bb104__0_1286 [label=""];
    bb103__0_1286 -> bb104__0_1286 [label=""];
    bb104__0_1286 -> bb105__0_1286 [label=""];
    bb105__0_1286 -> bb106__0_1286 [label=""];
    bb106__0_1286 -> bb109__0_1286 [label=""];
    bb107__0_1286 -> bb109__0_1286 [label=""];
    bb108__0_1286 -> bb109__0_1286 [label=""];
    bb110__0_1286 -> bb114__0_1286 [label="return"];
    bb111__0_1286 -> bb114__0_1286 [label="return"];
    bb112__0_1286 -> bb114__0_1286 [label="return"];
    bb113__0_1286 -> bb114__0_1286 [label="return"];
    bb115__0_1286 -> bb14__0_1286 [label="return"];
    bb116__0_1286 -> bb19__0_1286 [label="return"];
    bb117__0_1286 -> bb24__0_1286 [label="return"];
    bb118__0_1286 -> bb30__0_1286 [label="0"];
    bb118__0_1286 -> bb29__0_1286 [label="otherwise"];
    bb119__0_1286 -> bb114__0_1286 [label=""];
    bb120__0_1286 -> bb114__0_1286 [label=""];
    bb121__0_1286 -> bb114__0_1286 [label=""];
    bb122__0_1286 -> bb114__0_1286 [label=""];
    bb123__0_1286 -> bb114__0_1286 [label=""];
    bb124__0_1286 -> bb114__0_1286 [label=""];
    bb125__0_1286 -> bb114__0_1286 [label=""];
    bb126__0_1286 -> bb114__0_1286 [label=""];
    bb127__0_1286 -> bb114__0_1286 [label=""];
    bb128__0_1286 -> bb114__0_1286 [label=""];
    bb129__0_1286 -> bb114__0_1286 [label=""];
}
