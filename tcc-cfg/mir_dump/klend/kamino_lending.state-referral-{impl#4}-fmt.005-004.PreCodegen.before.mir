// MIR for `referral::<impl at programs\klend\src\state\referral.rs:35:1: 38:30>::fmt` before PreCodegen

fn referral::<impl at programs\klend\src\state\referral.rs:35:1: 38:30>::fmt(_1: &referral::ReferrerTokenState, _2: &mut Formatter<'_>) -> std::result::Result<(), std::fmt::Error> {
    debug self => _1;
    debug __f => _2;
    let mut _0: std::result::Result<(), std::fmt::Error>;
    let _3: &anchor_lang::prelude::Pubkey;
    let _4: &anchor_lang::prelude::Pubkey;
    let _5: &u128;
    let _6: &u128;
    let _7: &u64;
    let mut _9: &mut std::fmt::Formatter<'_>;
    let mut _10: &str;
    let _11: &str;
    let mut _12: &mut std::fmt::DebugStruct<'_, '_>;
    let mut _13: &mut std::fmt::DebugStruct<'_, '_>;
    let mut _14: &str;
    let _15: &str;
    let mut _16: &dyn std::fmt::Debug;
    let mut _17: &&anchor_lang::prelude::Pubkey;
    let _18: &&anchor_lang::prelude::Pubkey;
    let _19: &anchor_lang::prelude::Pubkey;
    let mut _20: &mut std::fmt::DebugStruct<'_, '_>;
    let mut _21: &mut std::fmt::DebugStruct<'_, '_>;
    let mut _22: &str;
    let _23: &str;
    let mut _24: &dyn std::fmt::Debug;
    let mut _25: &&anchor_lang::prelude::Pubkey;
    let _26: &&anchor_lang::prelude::Pubkey;
    let _27: &anchor_lang::prelude::Pubkey;
    let mut _28: &mut std::fmt::DebugStruct<'_, '_>;
    let mut _29: &mut std::fmt::DebugStruct<'_, '_>;
    let mut _30: &str;
    let _31: &str;
    let mut _32: &dyn std::fmt::Debug;
    let mut _33: &&u128;
    let _34: &&u128;
    let _35: &u128;
    let mut _36: &mut std::fmt::DebugStruct<'_, '_>;
    let mut _37: &mut std::fmt::DebugStruct<'_, '_>;
    let mut _38: &str;
    let _39: &str;
    let mut _40: &dyn std::fmt::Debug;
    let mut _41: &&u128;
    let _42: &&u128;
    let _43: &u128;
    let mut _44: &mut std::fmt::DebugStruct<'_, '_>;
    let mut _45: &mut std::fmt::DebugStruct<'_, '_>;
    let mut _46: &str;
    let _47: &str;
    let mut _48: &dyn std::fmt::Debug;
    let mut _49: &&u64;
    let _50: &&u64;
    let _51: &u64;
    let mut _52: &mut std::fmt::DebugStruct<'_, '_>;
    scope 1 {
        debug __arg_0 => _3;
        debug __arg_1 => _4;
        debug __arg_2 => _5;
        debug __arg_3 => _6;
        debug __arg_4 => _7;
        let mut _8: std::fmt::DebugStruct<'_, '_>;
        scope 2 {
            debug __debug_trait_builder => _8;
            scope 3 {
                scope 4 {
                    scope 5 {
                        scope 6 {
                            scope 7 {
                            }
                        }
                    }
                }
            }
        }
    }

    bb0: {
        StorageLive(_3);
        _3 = &((*_1).0: anchor_lang::prelude::Pubkey);
        StorageLive(_4);
        _4 = &((*_1).1: anchor_lang::prelude::Pubkey);
        StorageLive(_5);
        _5 = &((*_1).2: u128);
        StorageLive(_6);
        _6 = &((*_1).3: u128);
        StorageLive(_7);
        _7 = &((*_1).4: u64);
        StorageLive(_8);
        StorageLive(_9);
        _9 = &mut (*_2);
        StorageLive(_10);
        StorageLive(_11);
        _11 = const "ReferrerTokenState";
        _10 = &(*_11);
        _8 = Formatter::<'_>::debug_struct(move _9, move _10) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_10);
        StorageDead(_9);
        StorageDead(_11);
        StorageLive(_12);
        StorageLive(_13);
        _13 = &mut _8;
        StorageLive(_14);
        StorageLive(_15);
        _15 = const "referrer";
        _14 = &(*_15);
        StorageLive(_16);
        StorageLive(_17);
        StorageLive(_18);
        StorageLive(_19);
        _19 = &(*_3);
        _18 = &_19;
        _17 = &(*_18);
        _16 = move _17 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_17);
        _12 = DebugStruct::<'_, '_>::field(move _13, move _14, move _16) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_16);
        StorageDead(_14);
        StorageDead(_13);
        StorageDead(_19);
        StorageDead(_18);
        StorageDead(_15);
        StorageDead(_12);
        StorageLive(_20);
        StorageLive(_21);
        _21 = &mut _8;
        StorageLive(_22);
        StorageLive(_23);
        _23 = const "mint";
        _22 = &(*_23);
        StorageLive(_24);
        StorageLive(_25);
        StorageLive(_26);
        StorageLive(_27);
        _27 = &(*_4);
        _26 = &_27;
        _25 = &(*_26);
        _24 = move _25 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_25);
        _20 = DebugStruct::<'_, '_>::field(move _21, move _22, move _24) -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageDead(_24);
        StorageDead(_22);
        StorageDead(_21);
        StorageDead(_27);
        StorageDead(_26);
        StorageDead(_23);
        StorageDead(_20);
        StorageLive(_28);
        StorageLive(_29);
        _29 = &mut _8;
        StorageLive(_30);
        StorageLive(_31);
        _31 = const "amount_unclaimed_sf";
        _30 = &(*_31);
        StorageLive(_32);
        StorageLive(_33);
        StorageLive(_34);
        StorageLive(_35);
        _35 = &(*_5);
        _34 = &_35;
        _33 = &(*_34);
        _32 = move _33 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_33);
        _28 = DebugStruct::<'_, '_>::field(move _29, move _30, move _32) -> [return: bb4, unwind continue];
    }

    bb4: {
        StorageDead(_32);
        StorageDead(_30);
        StorageDead(_29);
        StorageDead(_35);
        StorageDead(_34);
        StorageDead(_31);
        StorageDead(_28);
        StorageLive(_36);
        StorageLive(_37);
        _37 = &mut _8;
        StorageLive(_38);
        StorageLive(_39);
        _39 = const "amount_cumulative_sf";
        _38 = &(*_39);
        StorageLive(_40);
        StorageLive(_41);
        StorageLive(_42);
        StorageLive(_43);
        _43 = &(*_6);
        _42 = &_43;
        _41 = &(*_42);
        _40 = move _41 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_41);
        _36 = DebugStruct::<'_, '_>::field(move _37, move _38, move _40) -> [return: bb5, unwind continue];
    }

    bb5: {
        StorageDead(_40);
        StorageDead(_38);
        StorageDead(_37);
        StorageDead(_43);
        StorageDead(_42);
        StorageDead(_39);
        StorageDead(_36);
        StorageLive(_44);
        StorageLive(_45);
        _45 = &mut _8;
        StorageLive(_46);
        StorageLive(_47);
        _47 = const "bump";
        _46 = &(*_47);
        StorageLive(_48);
        StorageLive(_49);
        StorageLive(_50);
        StorageLive(_51);
        _51 = &(*_7);
        _50 = &_51;
        _49 = &(*_50);
        _48 = move _49 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_49);
        _44 = DebugStruct::<'_, '_>::field(move _45, move _46, move _48) -> [return: bb6, unwind continue];
    }

    bb6: {
        StorageDead(_48);
        StorageDead(_46);
        StorageDead(_45);
        StorageDead(_51);
        StorageDead(_50);
        StorageDead(_47);
        StorageDead(_44);
        StorageLive(_52);
        _52 = &mut _8;
        _0 = DebugStruct::<'_, '_>::finish(move _52) -> [return: bb7, unwind continue];
    }

    bb7: {
        StorageDead(_52);
        StorageDead(_8);
        StorageDead(_7);
        StorageDead(_6);
        StorageDead(_5);
        StorageDead(_4);
        StorageDead(_3);
        return;
    }
}
