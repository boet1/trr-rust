// MIR for `kamino_lending::update_reserve_config` after PreCodegen

fn kamino_lending::update_reserve_config(_1: anchor_lang::context::Context<'_, '_, '_, '_, handlers::handler_update_reserve_config::UpdateReserveConfig<'_>>, _2: state::UpdateConfigMode, _3: Vec<u8>, _4: bool) -> std::result::Result<(), anchor_lang::error::Error> {
    debug ctx => _1;
    debug mode => _2;
    debug value => _3;
    debug skip_config_integrity_validation => _4;
    let mut _0: std::result::Result<(), anchor_lang::error::Error>;
    let mut _5: anchor_lang::context::Context<'_, '_, '_, '_, handlers::handler_update_reserve_config::UpdateReserveConfig<'_>>;
    let mut _6: state::UpdateConfigMode;
    let mut _7: &[u8];
    let _8: &[u8];
    let mut _9: &std::vec::Vec<u8>;
    let _10: &std::vec::Vec<u8>;
    let mut _11: bool;

    bb0: {
        StorageLive(_5);
        _5 = move _1;
        StorageLive(_6);
        _6 = _2;
        StorageLive(_7);
        StorageLive(_8);
        StorageLive(_9);
        StorageLive(_10);
        _10 = &_3;
        _9 = &(*_10);
        _8 = <Vec<u8> as Deref>::deref(move _9) -> [return: bb1, unwind: bb4];
    }

    bb1: {
        _7 = &(*_8);
        StorageDead(_9);
        StorageLive(_11);
        _11 = _4;
        _0 = handlers::handler_update_reserve_config::process(move _5, move _6, move _7, move _11) -> [return: bb2, unwind: bb4];
    }

    bb2: {
        StorageDead(_11);
        StorageDead(_7);
        StorageDead(_6);
        StorageDead(_5);
        StorageDead(_10);
        StorageDead(_8);
        drop(_3) -> [return: bb3, unwind: bb5];
    }

    bb3: {
        return;
    }

    bb4 (cleanup): {
        drop(_3) -> [return: bb5, unwind terminate(cleanup)];
    }

    bb5 (cleanup): {
        resume;
    }
}
