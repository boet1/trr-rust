digraph Mir_0_1566 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_liquidation(_1: &amp;ReErased state::reserve::Reserve, _2: &amp;ReErased state::reserve::Reserve, _3: u64, _4: &amp;ReErased state::lending_market::LendingMarket, _5: &amp;ReErased state::obligation::Obligation, _6: &amp;ReErased state::obligation::ObligationLiquidity, _7: &amp;ReErased state::obligation::ObligationCollateral, _8: u64, _9: bool, _10: bool, _11: std::option::Option&lt;u64&gt;) -&gt; std::result::Result&lt;state::types::CalculateLiquidationResult, anchor_lang::error::Error&gt;<br align="left"/>let _12: ();<br align="left"/>let mut _13: bool;<br align="left"/>let mut _14: u128;<br align="left"/>let mut _15: !;<br align="left"/>let _16: ();<br align="left"/>let mut _17: &amp;ReErased str;<br align="left"/>let _18: &amp;ReErased str;<br align="left"/>let mut _19: anchor_lang::error::Error;<br align="left"/>let mut _20: anchor_lang::error::AnchorError;<br align="left"/>let mut _21: std::string::String;<br align="left"/>let mut _22: &amp;ReErased LendingError;<br align="left"/>let _23: LendingError;<br align="left"/>let mut _24: u32;<br align="left"/>let mut _25: LendingError;<br align="left"/>let mut _26: std::string::String;<br align="left"/>let mut _27: &amp;ReErased LendingError;<br align="left"/>let _28: LendingError;<br align="left"/>let mut _29: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _30: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _31: anchor_lang::error::Source;<br align="left"/>let mut _32: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let _33: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _34: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _35: state::types::LiquidationReason;<br align="left"/>let mut _36: state::types::LiquidationParams;<br align="left"/>let mut _37: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, state::types::LiquidationParams&gt;;<br align="left"/>let mut _38: std::result::Result&lt;state::types::LiquidationParams, anchor_lang::error::Error&gt;;<br align="left"/>let mut _39: &amp;ReErased state::lending_market::LendingMarket;<br align="left"/>let mut _40: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _41: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _42: &amp;ReErased state::obligation::Obligation;<br align="left"/>let mut _43: u64;<br align="left"/>let mut _44: bool;<br align="left"/>let mut _45: bool;<br align="left"/>let mut _46: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _47: isize;<br align="left"/>let _48: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _49: !;<br align="left"/>let mut _50: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _51: state::types::LiquidationParams;<br align="left"/>let _52: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _53: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _54: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _55: &amp;ReErased state::obligation::ObligationLiquidity;<br align="left"/>let _56: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _57: &amp;ReErased state::obligation::ObligationLiquidity;<br align="left"/>let _58: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _59: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _60: u64;<br align="left"/>let mut _61: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _62: bool;<br align="left"/>let mut _63: bool;<br align="left"/>let mut _64: isize;<br align="left"/>let mut _65: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _66: &amp;ReErased u64;<br align="left"/>let _67: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _68: bool;<br align="left"/>let _69: ();<br align="left"/>let mut _70: bool;<br align="left"/>let mut _71: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _72: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _73: !;<br align="left"/>let _74: ();<br align="left"/>let mut _75: &amp;ReErased str;<br align="left"/>let _76: &amp;ReErased str;<br align="left"/>let mut _77: &amp;ReErased std::string::String;<br align="left"/>let _78: &amp;ReErased std::string::String;<br align="left"/>let _79: std::string::String;<br align="left"/>let _80: std::string::String;<br align="left"/>let mut _81: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _82: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _83: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _84: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _85: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _86: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _87: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _88: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _89: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _90: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _91: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _92: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _93: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _94: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _95: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _96: anchor_lang::error::Error;<br align="left"/>let mut _97: anchor_lang::error::AnchorError;<br align="left"/>let mut _98: std::string::String;<br align="left"/>let mut _99: &amp;ReErased LendingError;<br align="left"/>let _100: LendingError;<br align="left"/>let mut _101: u32;<br align="left"/>let mut _102: LendingError;<br align="left"/>let mut _103: std::string::String;<br align="left"/>let mut _104: &amp;ReErased LendingError;<br align="left"/>let _105: LendingError;<br align="left"/>let mut _106: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _107: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _108: anchor_lang::error::Source;<br align="left"/>let mut _109: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let mut _110: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _111: &amp;ReErased state::obligation::Obligation;<br align="left"/>let mut _112: u8;<br align="left"/>let mut _113: u64;<br align="left"/>let mut _114: &amp;ReErased state::obligation::ObligationLiquidity;<br align="left"/>let mut _115: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _116: u8;<br align="left"/>let mut _117: state::types::LiquidationReason;<br align="left"/>let mut _118: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _119: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _120: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _121: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _122: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _123: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _124: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _125: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _126: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _127: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _128: u64;<br align="left"/>let _129: u64;<br align="left"/>let mut _130: (fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, u64, u64);<br align="left"/>let mut _131: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _132: &amp;ReErased state::obligation::ObligationCollateral;<br align="left"/>let mut _133: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _134: bool;<br align="left"/>let _135: ();<br align="left"/>let _136: ();<br align="left"/>let mut _137: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _138: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _139: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _140: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _141: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _142: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _143: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _144: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _145: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _146: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _147: &amp;ReErased u32;<br align="left"/>let _148: &amp;ReErased u32;<br align="left"/>let _149: u32;<br align="left"/>let mut _150: std::option::Option&lt;u32&gt;;<br align="left"/>let mut _151: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _152: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _153: &amp;ReErased u64;<br align="left"/>let _154: &amp;ReErased u64;<br align="left"/>let _155: u64;<br align="left"/>let mut _156: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _157: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _158: state::types::CalculateLiquidationResult;<br align="left"/>let mut _159: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _160: u64;<br align="left"/>let mut _161: u64;<br align="left"/>let mut _162: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _163: state::types::LiquidationReason;<br align="left"/>let mut _164: &amp;ReErased LendingError;<br align="left"/>let mut _165: &amp;ReErased LendingError;<br align="left"/>let mut _166: &amp;ReErased LendingError;<br align="left"/>let mut _167: &amp;ReErased LendingError;<br align="left"/>let mut _168: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _169: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _170: isize;<br align="left"/>let mut _171: isize;<br align="left"/>let mut _172: isize;<br align="left"/>let mut _173: isize;<br align="left"/>let mut _174: isize;<br align="left"/>debug collateral_reserve =&gt; _1;<br align="left"/>debug debt_reserve =&gt; _2;<br align="left"/>debug debt_amount_to_liquidate =&gt; _3;<br align="left"/>debug lending_market =&gt; _4;<br align="left"/>debug obligation =&gt; _5;<br align="left"/>debug liquidity =&gt; _6;<br align="left"/>debug collateral =&gt; _7;<br align="left"/>debug timestamp =&gt; _8;<br align="left"/>debug is_debt_reserve_highest_borrow_factor =&gt; _9;<br align="left"/>debug is_collateral_reserve_lowest_liquidation_ltv =&gt; _10;<br align="left"/>debug max_allowed_ltv_override_pct_opt =&gt; _11;<br align="left"/>debug user_ltv =&gt; _33;<br align="left"/>debug liquidation_bonus_rate =&gt; _34;<br align="left"/>debug liquidation_reason =&gt; _35;<br align="left"/>debug residual =&gt; _48;<br align="left"/>debug val =&gt; _51;<br align="left"/>debug bonus_multiplier =&gt; _52;<br align="left"/>debug borrowed_amount =&gt; _54;<br align="left"/>debug borrowed_value =&gt; _56;<br align="left"/>debug debt_amount_to_liquidate =&gt; _58;<br align="left"/>debug is_below_min_full_liquidation_value_threshold =&gt; _62;<br align="left"/>debug debt_liquidation_amount_f =&gt; _67;<br align="left"/>debug res =&gt; _80;<br align="left"/>debug liquidation_ratio =&gt; _119;<br align="left"/>debug total_liquidation_value_including_bonus =&gt; _122;<br align="left"/>debug settle_amount =&gt; _127;<br align="left"/>debug repay_amount =&gt; _128;<br align="left"/>debug withdraw_amount =&gt; _129;<br align="left"/>>;
    bb0__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_14 = ((*_5).6: u128)<br/>_13 = Eq(move _14, const 0_u128)<br/></td></tr><tr><td align="left">switchInt(move _13)</td></tr></table>>];
    bb1__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = const &quot;Deposited value backing a loan cannot be 0&quot;<br/>_17 = &amp;(*_18)<br/></td></tr><tr><td align="left">_16 = solana_program::log::sol_log(move _17)</td></tr></table>>];
    bb2__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_18)<br/>StorageDead(_16)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_165 = const _<br/>_22 = &amp;(*_165)<br/></td></tr><tr><td align="left">_21 = LendingError::name(move _22)</td></tr></table>>];
    bb3__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>_25 = LendingError::InvalidObligationCollateral<br/></td></tr><tr><td align="left">_24 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _25)</td></tr></table>>];
    bb4__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_164 = const _<br/>_27 = &amp;(*_164)<br/></td></tr><tr><td align="left">_26 = &lt;LendingError as ToString&gt;::to_string(move _27)</td></tr></table>>];
    bb5__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>_31 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\state\\liquidation_operations.rs&quot;, line: const 95_u32 }<br/>_30 = anchor_lang::error::ErrorOrigin::Source(move _31)<br/>StorageDead(_31)<br/>_29 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _30)<br/>StorageDead(_30)<br/>StorageLive(_32)<br/>_32 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_20 = anchor_lang::error::AnchorError { error_name: move _21, error_code_number: move _24, error_msg: move _26, error_origin: move _29, compared_values: move _32 }<br/>StorageDead(_32)<br/>StorageDead(_29)<br/>StorageDead(_26)<br/>StorageDead(_24)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">_19 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _20)</td></tr></table>>];
    bb6__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>_0 = std::result::Result::&lt;state::types::CalculateLiquidationResult, anchor_lang::error::Error&gt;::Err(move _19)<br/>StorageDead(_19)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>_12 = const ()<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>_39 = &amp;(*_4)<br/>StorageLive(_40)<br/>_40 = &amp;(*_1)<br/>StorageLive(_41)<br/>_41 = &amp;(*_2)<br/>StorageLive(_42)<br/>_42 = &amp;(*_5)<br/>StorageLive(_43)<br/>_43 = _8<br/>StorageLive(_44)<br/>_44 = _9<br/>StorageLive(_45)<br/>_45 = _10<br/>StorageLive(_46)<br/>_46 = _11<br/></td></tr><tr><td align="left">_38 = get_liquidation_params(move _39, move _40, move _41, move _42, move _43, move _44, move _45, move _46)</td></tr></table>>];
    bb8__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_45)<br/>StorageDead(_44)<br/>StorageDead(_43)<br/>StorageDead(_42)<br/>StorageDead(_41)<br/>StorageDead(_40)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">_37 = &lt;std::result::Result&lt;state::types::LiquidationParams, anchor_lang::error::Error&gt; as Try&gt;::branch(move _38)</td></tr></table>>];
    bb9__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>_47 = discriminant(_37)<br/></td></tr><tr><td align="left">switchInt(move _47)</td></tr></table>>];
    bb10__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_51)<br/>_51 = move ((_37 as Continue).0: state::types::LiquidationParams)<br/>_36 = move _51<br/>StorageDead(_51)<br/>StorageLive(_33)<br/>_33 = (_36.0: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;)<br/>StorageLive(_34)<br/>_34 = (_36.1: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;)<br/>StorageLive(_35)<br/>_35 = (_36.2: state::types::LiquidationReason)<br/>_170 = discriminant(_37)<br/>StorageDead(_37)<br/>StorageDead(_36)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>_53 = _34<br/></td></tr><tr><td align="left">_52 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as Add&gt;::add(move _53, const _)</td></tr></table>>];
    bb11__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb12__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_48)<br/>_48 = move ((_37 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_50)<br/>_50 = move _48<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;state::types::CalculateLiquidationResult, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _50)</td></tr></table>>];
    bb13__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageDead(_48)<br/>_172 = discriminant(_37)<br/>StorageDead(_37)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>_55 = &amp;(*_6)<br/></td></tr><tr><td align="left">_54 = obligation::ObligationLiquidity::borrowed_amount(move _55)</td></tr></table>>];
    bb15__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>_57 = &amp;(*_6)<br/></td></tr><tr><td align="left">_56 = obligation::ObligationLiquidity::market_value(move _57)</td></tr></table>>];
    bb16__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>_60 = _3<br/></td></tr><tr><td align="left">_59 = FixedU128::&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;::from_num::&lt;u64&gt;(move _60)</td></tr></table>>];
    bb17__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageLive(_61)<br/>_61 = _54<br/></td></tr><tr><td align="left">_58 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as Ord&gt;::min(move _59, move _61)</td></tr></table>>];
    bb18__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_59)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>_64 = discriminant(_35)<br/></td></tr><tr><td align="left">switchInt(move _64)</td></tr></table>>];
    bb19__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">_63 = const false<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">_63 = const true<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left">switchInt(move _63)</td></tr></table>>];
    bb22__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_65)<br/>_65 = &amp;_56<br/>StorageLive(_66)<br/>_66 = &amp;((*_4).12: u64)<br/></td></tr><tr><td align="left">_62 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as PartialOrd&lt;u64&gt;&gt;::lt(move _65, move _66)</td></tr></table>>];
    bb23__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">_62 = const false<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>_68 = _62<br/></td></tr><tr><td align="left">switchInt(move _68)</td></tr></table>>];
    bb26__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>_71 = &amp;_58<br/>StorageLive(_72)<br/>_72 = &amp;_54<br/></td></tr><tr><td align="left">_70 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as PartialOrd&gt;::lt(move _71, move _72)</td></tr></table>>];
    bb27__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left">switchInt(move _70)</td></tr></table>>];
    bb28__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_71)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>_168 = const _<br/>_84 = &amp;(*_168)<br/>_83 = &amp;(*_84)<br/>_82 = move _83 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_83)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>_92 = &amp;_58<br/>_91 = &amp;(*_92)<br/></td></tr><tr><td align="left">_90 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;&gt;(move _91)</td></tr></table>>];
    bb29__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>_95 = &amp;_54<br/>_94 = &amp;(*_95)<br/></td></tr><tr><td align="left">_93 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;&gt;(move _94)</td></tr></table>>];
    bb30__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/>_89 = [move _90, move _93]<br/>StorageDead(_93)<br/>StorageDead(_90)<br/>_88 = &amp;_89<br/>_87 = &amp;(*_88)<br/>_86 = move _87 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_87)<br/></td></tr><tr><td align="left">_81 = Arguments::&lt;'_&gt;::new_v1(move _82, move _86)</td></tr></table>>];
    bb31__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>StorageDead(_82)<br/></td></tr><tr><td align="left">_80 = format(move _81)</td></tr></table>>];
    bb32__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>StorageDead(_95)<br/>StorageDead(_92)<br/>StorageDead(_89)<br/>StorageDead(_88)<br/>StorageDead(_84)<br/>_79 = move _80<br/>StorageDead(_80)<br/>_78 = &amp;_79<br/>_77 = &amp;(*_78)<br/></td></tr><tr><td align="left">_76 = &lt;std::string::String as Deref&gt;::deref(move _77)</td></tr></table>>];
    bb33__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">_75 = &amp;(*_76)<br/>StorageDead(_77)<br/></td></tr><tr><td align="left">_74 = solana_program::log::sol_log(move _75)</td></tr></table>>];
    bb34__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/></td></tr><tr><td align="left">drop(_79)</td></tr></table>>];
    bb35__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageDead(_78)<br/>StorageDead(_76)<br/>StorageDead(_74)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>_167 = const _<br/>_99 = &amp;(*_167)<br/></td></tr><tr><td align="left">_98 = LendingError::name(move _99)</td></tr></table>>];
    bb36__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>_102 = LendingError::RepayTooSmallForFullLiquidation<br/></td></tr><tr><td align="left">_101 = &lt;LendingError as Into&lt;u32&gt;&gt;::into(move _102)</td></tr></table>>];
    bb37__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>_166 = const _<br/>_104 = &amp;(*_166)<br/></td></tr><tr><td align="left">_103 = &lt;LendingError as ToString&gt;::to_string(move _104)</td></tr></table>>];
    bb38__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>_108 = anchor_lang::error::Source { filename: const &quot;programs\\klend\\src\\state\\liquidation_operations.rs&quot;, line: const 136_u32 }<br/>_107 = anchor_lang::error::ErrorOrigin::Source(move _108)<br/>StorageDead(_108)<br/>_106 = std::option::Option::&lt;ErrorOrigin&gt;::Some(move _107)<br/>StorageDead(_107)<br/>StorageLive(_109)<br/>_109 = std::option::Option::&lt;ComparedValues&gt;::None<br/>_97 = anchor_lang::error::AnchorError { error_name: move _98, error_code_number: move _101, error_msg: move _103, error_origin: move _106, compared_values: move _109 }<br/>StorageDead(_109)<br/>StorageDead(_106)<br/>StorageDead(_103)<br/>StorageDead(_101)<br/>StorageDead(_98)<br/></td></tr><tr><td align="left">_96 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _97)</td></tr></table>>];
    bb39__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>_0 = std::result::Result::&lt;state::types::CalculateLiquidationResult, anchor_lang::error::Error&gt;::Err(move _96)<br/>StorageDead(_96)<br/>StorageDead(_70)<br/>StorageDead(_69)<br/>StorageDead(_68)<br/>StorageDead(_67)<br/>StorageDead(_62)<br/>StorageDead(_58)<br/>StorageDead(_56)<br/>StorageDead(_54)<br/>StorageDead(_52)<br/>StorageDead(_35)<br/>StorageDead(_34)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_71)<br/>_69 = const ()<br/>StorageDead(_70)<br/>StorageDead(_69)<br/>_67 = _54<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageLive(_110)<br/>StorageLive(_111)<br/>_111 = &amp;(*_5)<br/>StorageLive(_112)<br/>_112 = ((*_4).10: u8)<br/>StorageLive(_113)<br/>_113 = ((*_4).13: u64)<br/>StorageLive(_114)<br/>_114 = &amp;(*_6)<br/>StorageLive(_115)<br/>_115 = _33<br/>StorageLive(_116)<br/>_116 = ((*_4).11: u8)<br/>StorageLive(_117)<br/>_117 = _35<br/></td></tr><tr><td align="left">_110 = max_liquidatable_borrowed_amount(move _111, move _112, move _113, move _114, move _115, move _116, move _117)</td></tr></table>>];
    bb42__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/>StorageDead(_116)<br/>StorageDead(_115)<br/>StorageDead(_114)<br/>StorageDead(_113)<br/>StorageDead(_112)<br/>StorageDead(_111)<br/>StorageLive(_118)<br/>_118 = _58<br/></td></tr><tr><td align="left">_67 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as Ord&gt;::min(move _110, move _118)</td></tr></table>>];
    bb43__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>StorageDead(_110)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>_120 = _67<br/>StorageLive(_121)<br/>_121 = _54<br/></td></tr><tr><td align="left">_119 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as std::ops::Div&gt;::div(move _120, move _121)</td></tr></table>>];
    bb45__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_121)<br/>StorageDead(_120)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>_124 = _56<br/>StorageLive(_125)<br/>_125 = _119<br/></td></tr><tr><td align="left">_123 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as std::ops::Mul&gt;::mul(move _124, move _125)</td></tr></table>>];
    bb46__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/>StorageDead(_124)<br/>StorageLive(_126)<br/>_126 = _52<br/></td></tr><tr><td align="left">_122 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as std::ops::Mul&gt;::mul(move _123, move _126)</td></tr></table>>];
    bb47__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/>StorageDead(_123)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>_131 = _122<br/>StorageLive(_132)<br/>_132 = &amp;(*_7)<br/>StorageLive(_133)<br/>_133 = _67<br/>StorageLive(_134)<br/>_134 = _62<br/></td></tr><tr><td align="left">_130 = calculate_liquidation_amounts(move _131, move _132, move _133, move _134)</td></tr></table>>];
    bb48__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_134)<br/>StorageDead(_133)<br/>StorageDead(_132)<br/>StorageDead(_131)<br/>StorageLive(_127)<br/>_127 = (_130.0: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;)<br/>StorageLive(_128)<br/>_128 = (_130.1: u64)<br/>StorageLive(_129)<br/>_129 = (_130.2: u64)<br/>StorageDead(_130)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>StorageLive(_140)<br/>_169 = const _<br/>_140 = &amp;(*_169)<br/>_139 = &amp;(*_140)<br/>_138 = move _139 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_139)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>_151 = &amp;_34<br/></td></tr><tr><td align="left">_150 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as utils::fraction::FractionExtra&gt;::to_bps::&lt;u32&gt;(move _151)</td></tr></table>>];
    bb49__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_151)<br/></td></tr><tr><td align="left">_149 = std::option::Option::&lt;u32&gt;::unwrap(move _150)</td></tr></table>>];
    bb50__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_150)<br/>_148 = &amp;_149<br/>_147 = &amp;(*_148)<br/></td></tr><tr><td align="left">_146 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u32&gt;(move _147)</td></tr></table>>];
    bb51__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_147)<br/>StorageLive(_152)<br/>StorageLive(_153)<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>_157 = _127<br/></td></tr><tr><td align="left">_156 = FixedU128::&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;::round(move _157)</td></tr></table>>];
    bb52__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_157)<br/></td></tr><tr><td align="left">_155 = FixedU128::&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;::to_num::&lt;u64&gt;(move _156)</td></tr></table>>];
    bb53__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_156)<br/>_154 = &amp;_155<br/>_153 = &amp;(*_154)<br/></td></tr><tr><td align="left">_152 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _153)</td></tr></table>>];
    bb54__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_153)<br/>_145 = [move _146, move _152]<br/>StorageDead(_152)<br/>StorageDead(_146)<br/>_144 = &amp;_145<br/>_143 = &amp;(*_144)<br/>_142 = move _143 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_143)<br/></td></tr><tr><td align="left">_137 = Arguments::&lt;'_&gt;::new_v1(move _138, move _142)</td></tr></table>>];
    bb55__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_142)<br/>StorageDead(_138)<br/></td></tr><tr><td align="left">_136 = _print(move _137)</td></tr></table>>];
    bb56__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_137)<br/>StorageDead(_155)<br/>StorageDead(_154)<br/>StorageDead(_149)<br/>StorageDead(_148)<br/>StorageDead(_145)<br/>StorageDead(_144)<br/>StorageDead(_140)<br/>StorageDead(_136)<br/>_135 = const ()<br/>StorageDead(_135)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>_159 = _127<br/>StorageLive(_160)<br/>_160 = _128<br/>StorageLive(_161)<br/>_161 = _129<br/>StorageLive(_162)<br/>_162 = _34<br/>StorageLive(_163)<br/>_163 = _35<br/>_158 = state::types::CalculateLiquidationResult { settle_amount: move _159, repay_amount: move _160, withdraw_amount: move _161, liquidation_bonus_rate: move _162, liquidation_reason: move _163 }<br/>StorageDead(_163)<br/>StorageDead(_162)<br/>StorageDead(_161)<br/>StorageDead(_160)<br/>StorageDead(_159)<br/>_0 = std::result::Result::&lt;state::types::CalculateLiquidationResult, anchor_lang::error::Error&gt;::Ok(move _158)<br/>StorageDead(_158)<br/>StorageDead(_129)<br/>StorageDead(_128)<br/>StorageDead(_127)<br/>StorageDead(_122)<br/>StorageDead(_119)<br/>StorageDead(_67)<br/>StorageDead(_62)<br/>StorageDead(_58)<br/>StorageDead(_56)<br/>StorageDead(_54)<br/>StorageDead(_52)<br/>StorageDead(_35)<br/>StorageDead(_34)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb57__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left">return</td></tr></table>>];
    bb58__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">58 (cleanup)</td></tr><tr><td align="left">drop(_98)</td></tr></table>>];
    bb59__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">59 (cleanup)</td></tr><tr><td align="left">drop(_79)</td></tr></table>>];
    bb60__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">60 (cleanup)</td></tr><tr><td align="left">drop(_21)</td></tr></table>>];
    bb61__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">61 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb62__0_1566 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">62 (cleanup)</td></tr><tr><td align="left" balign="left">_174 = discriminant(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_1566 -> bb7__0_1566 [label="0"];
    bb0__0_1566 -> bb1__0_1566 [label="otherwise"];
    bb1__0_1566 -> bb2__0_1566 [label="return"];
    bb2__0_1566 -> bb3__0_1566 [label="return"];
    bb3__0_1566 -> bb4__0_1566 [label="return"];
    bb3__0_1566 -> bb60__0_1566 [label="unwind"];
    bb4__0_1566 -> bb5__0_1566 [label="return"];
    bb4__0_1566 -> bb60__0_1566 [label="unwind"];
    bb5__0_1566 -> bb6__0_1566 [label="return"];
    bb5__0_1566 -> bb61__0_1566 [label="unwind"];
    bb6__0_1566 -> bb57__0_1566 [label=""];
    bb7__0_1566 -> bb8__0_1566 [label="return"];
    bb8__0_1566 -> bb9__0_1566 [label="return"];
    bb8__0_1566 -> bb61__0_1566 [label="unwind"];
    bb9__0_1566 -> bb10__0_1566 [label="0"];
    bb9__0_1566 -> bb12__0_1566 [label="1"];
    bb9__0_1566 -> bb11__0_1566 [label="otherwise"];
    bb10__0_1566 -> bb14__0_1566 [label="return"];
    bb12__0_1566 -> bb13__0_1566 [label="return"];
    bb12__0_1566 -> bb62__0_1566 [label="unwind"];
    bb13__0_1566 -> bb57__0_1566 [label=""];
    bb14__0_1566 -> bb15__0_1566 [label="return"];
    bb15__0_1566 -> bb16__0_1566 [label="return"];
    bb16__0_1566 -> bb17__0_1566 [label="return"];
    bb17__0_1566 -> bb18__0_1566 [label="return"];
    bb18__0_1566 -> bb20__0_1566 [label="3"];
    bb18__0_1566 -> bb19__0_1566 [label="otherwise"];
    bb19__0_1566 -> bb21__0_1566 [label=""];
    bb20__0_1566 -> bb21__0_1566 [label=""];
    bb21__0_1566 -> bb22__0_1566 [label="0"];
    bb21__0_1566 -> bb23__0_1566 [label="otherwise"];
    bb22__0_1566 -> bb24__0_1566 [label="return"];
    bb23__0_1566 -> bb25__0_1566 [label=""];
    bb24__0_1566 -> bb25__0_1566 [label=""];
    bb25__0_1566 -> bb41__0_1566 [label="0"];
    bb25__0_1566 -> bb26__0_1566 [label="otherwise"];
    bb26__0_1566 -> bb27__0_1566 [label="return"];
    bb27__0_1566 -> bb40__0_1566 [label="0"];
    bb27__0_1566 -> bb28__0_1566 [label="otherwise"];
    bb28__0_1566 -> bb29__0_1566 [label="return"];
    bb29__0_1566 -> bb30__0_1566 [label="return"];
    bb30__0_1566 -> bb31__0_1566 [label="return"];
    bb31__0_1566 -> bb32__0_1566 [label="return"];
    bb32__0_1566 -> bb33__0_1566 [label="return"];
    bb32__0_1566 -> bb59__0_1566 [label="unwind"];
    bb33__0_1566 -> bb34__0_1566 [label="return"];
    bb33__0_1566 -> bb59__0_1566 [label="unwind"];
    bb34__0_1566 -> bb35__0_1566 [label="return"];
    bb34__0_1566 -> bb61__0_1566 [label="unwind"];
    bb35__0_1566 -> bb36__0_1566 [label="return"];
    bb36__0_1566 -> bb37__0_1566 [label="return"];
    bb36__0_1566 -> bb58__0_1566 [label="unwind"];
    bb37__0_1566 -> bb38__0_1566 [label="return"];
    bb37__0_1566 -> bb58__0_1566 [label="unwind"];
    bb38__0_1566 -> bb39__0_1566 [label="return"];
    bb38__0_1566 -> bb61__0_1566 [label="unwind"];
    bb39__0_1566 -> bb57__0_1566 [label=""];
    bb40__0_1566 -> bb44__0_1566 [label=""];
    bb41__0_1566 -> bb42__0_1566 [label="return"];
    bb42__0_1566 -> bb43__0_1566 [label="return"];
    bb43__0_1566 -> bb44__0_1566 [label=""];
    bb44__0_1566 -> bb45__0_1566 [label="return"];
    bb45__0_1566 -> bb46__0_1566 [label="return"];
    bb46__0_1566 -> bb47__0_1566 [label="return"];
    bb47__0_1566 -> bb48__0_1566 [label="return"];
    bb48__0_1566 -> bb49__0_1566 [label="return"];
    bb49__0_1566 -> bb50__0_1566 [label="return"];
    bb50__0_1566 -> bb51__0_1566 [label="return"];
    bb51__0_1566 -> bb52__0_1566 [label="return"];
    bb52__0_1566 -> bb53__0_1566 [label="return"];
    bb53__0_1566 -> bb54__0_1566 [label="return"];
    bb54__0_1566 -> bb55__0_1566 [label="return"];
    bb55__0_1566 -> bb56__0_1566 [label="return"];
    bb56__0_1566 -> bb57__0_1566 [label=""];
    bb58__0_1566 -> bb61__0_1566 [label="return"];
    bb59__0_1566 -> bb61__0_1566 [label="return"];
    bb60__0_1566 -> bb61__0_1566 [label="return"];
    bb62__0_1566 -> bb61__0_1566 [label=""];
}
