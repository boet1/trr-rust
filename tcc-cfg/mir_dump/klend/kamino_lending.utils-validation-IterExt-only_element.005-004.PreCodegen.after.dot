digraph Mir_0_2825 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn validation::IterExt::only_element(_1: Self/#0) -&gt; std::option::Option&lt;Alias(Projection, AliasTy { args: [Self/#0], def_id: DefId(2:7902 ~ core[c321]::iter::traits::iterator::Iterator::Item) })&gt;<br align="left"/>let mut _2: Self/#0;<br align="left"/>debug self =&gt; _1;<br align="left"/>>;
    bb0__0_2825 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>_2 = move _1<br/></td></tr><tr><td align="left">_0 = only_element::&lt;&lt;Self as Iterator&gt;::Item, Self&gt;(move _2)</td></tr></table>>];
    bb1__0_2825 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_2)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb2__0_2825 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">2 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_2825 -> bb1__0_2825 [label="return"];
    bb0__0_2825 -> bb2__0_2825 [label="unwind"];
}
