// MIR for `reserve::<impl at programs\klend\src\state\reserve.rs:131:5: 131:20>::size_hint` before PreCodegen

fn reserve::<impl at programs\klend\src\state\reserve.rs:131:5: 131:20>::size_hint(_1: &ReserveFarmKindIter) -> (usize, std::option::Option<usize>) {
    debug self => _1;
    let mut _0: (usize, std::option::Option<usize>);
    let _2: usize;
    let mut _3: bool;
    let mut _4: usize;
    let mut _5: std::option::Option<usize>;
    let mut _6: usize;
    let mut _7: usize;
    let mut _8: std::option::Option<usize>;
    let mut _9: usize;
    let mut _10: std::option::Option<usize>;
    let mut _11: usize;
    let mut _12: usize;
    let mut _13: usize;
    let mut _14: std::option::Option<usize>;
    let mut _15: usize;
    scope 1 {
        debug t => _2;
    }

    bb0: {
        StorageLive(_2);
        StorageLive(_3);
        StorageLive(_4);
        StorageLive(_5);
        StorageLive(_6);
        _6 = ((*_1).0: usize);
        StorageLive(_7);
        _7 = ((*_1).1: usize);
        _5 = core::num::<impl usize>::checked_add(move _6, move _7) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_7);
        StorageDead(_6);
        _4 = std::option::Option::<usize>::unwrap(move _5) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_5);
        _3 = Ge(move _4, const 2_usize);
        switchInt(move _3) -> [0: bb4, otherwise: bb3];
    }

    bb3: {
        StorageDead(_4);
        _2 = const 0_usize;
        goto -> bb9;
    }

    bb4: {
        StorageDead(_4);
        StorageLive(_8);
        StorageLive(_9);
        StorageLive(_10);
        StorageLive(_11);
        _11 = ((*_1).0: usize);
        _10 = core::num::<impl usize>::checked_sub(const 2_usize, move _11) -> [return: bb5, unwind continue];
    }

    bb5: {
        StorageDead(_11);
        _9 = std::option::Option::<usize>::unwrap(move _10) -> [return: bb6, unwind continue];
    }

    bb6: {
        StorageDead(_10);
        StorageLive(_12);
        _12 = ((*_1).1: usize);
        _8 = core::num::<impl usize>::checked_sub(move _9, move _12) -> [return: bb7, unwind continue];
    }

    bb7: {
        StorageDead(_12);
        StorageDead(_9);
        _2 = std::option::Option::<usize>::unwrap(move _8) -> [return: bb8, unwind continue];
    }

    bb8: {
        StorageDead(_8);
        goto -> bb9;
    }

    bb9: {
        StorageDead(_3);
        StorageLive(_13);
        _13 = _2;
        StorageLive(_14);
        StorageLive(_15);
        _15 = _2;
        _14 = std::option::Option::<usize>::Some(move _15);
        StorageDead(_15);
        _0 = (move _13, move _14);
        StorageDead(_14);
        StorageDead(_13);
        StorageDead(_2);
        return;
    }
}
