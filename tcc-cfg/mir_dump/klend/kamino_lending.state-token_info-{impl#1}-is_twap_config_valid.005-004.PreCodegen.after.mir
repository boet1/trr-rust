// MIR for `token_info::<impl at programs\klend\src\state\token_info.rs:74:1: 74:15>::is_twap_config_valid` after PreCodegen

fn token_info::<impl at programs\klend\src\state\token_info.rs:74:1: 74:15>::is_twap_config_valid(_1: &token_info::TokenInfo) -> bool {
    debug self => _1;
    let mut _0: bool;
    let _2: ();
    let mut _3: bool;
    let mut _4: &state::token_info::TokenInfo;
    let mut _5: !;
    let _6: ();
    let mut _7: bool;
    let mut _8: u64;
    let mut _9: !;
    let _10: ();
    let mut _11: bool;
    let mut _12: &state::token_info::ScopeConfiguration;
    let mut _13: bool;
    let mut _14: &state::token_info::ScopeConfiguration;
    let mut _15: !;
    let _16: ();
    let mut _17: bool;
    let mut _18: &state::token_info::SwitchboardConfiguration;
    let mut _19: bool;
    let mut _20: &state::token_info::SwitchboardConfiguration;
    let mut _21: !;

    bb0: {
        StorageLive(_2);
        StorageLive(_3);
        StorageLive(_4);
        _4 = &(*_1);
        _3 = token_info::TokenInfo::is_twap_enabled(move _4) -> [return: bb1, unwind continue];
    }

    bb1: {
        switchInt(move _3) -> [0: bb3, otherwise: bb2];
    }

    bb2: {
        StorageDead(_4);
        _2 = const ();
        StorageDead(_3);
        StorageDead(_2);
        StorageLive(_6);
        StorageLive(_7);
        StorageLive(_8);
        _8 = ((*_1).4: u64);
        _7 = Eq(move _8, const 0_u64);
        switchInt(move _7) -> [0: bb5, otherwise: bb4];
    }

    bb3: {
        StorageDead(_4);
        _0 = const true;
        StorageDead(_3);
        StorageDead(_2);
        goto -> bb20;
    }

    bb4: {
        StorageDead(_8);
        _0 = const false;
        StorageDead(_7);
        StorageDead(_6);
        goto -> bb20;
    }

    bb5: {
        StorageDead(_8);
        _6 = const ();
        StorageDead(_7);
        StorageDead(_6);
        StorageLive(_10);
        StorageLive(_11);
        StorageLive(_12);
        _12 = &((*_1).5: state::token_info::ScopeConfiguration);
        _11 = token_info::ScopeConfiguration::is_enabled(move _12) -> [return: bb6, unwind continue];
    }

    bb6: {
        switchInt(move _11) -> [0: bb11, otherwise: bb7];
    }

    bb7: {
        StorageDead(_12);
        StorageLive(_13);
        StorageLive(_14);
        _14 = &((*_1).5: state::token_info::ScopeConfiguration);
        _13 = token_info::ScopeConfiguration::has_twap(move _14) -> [return: bb8, unwind continue];
    }

    bb8: {
        switchInt(move _13) -> [0: bb10, otherwise: bb9];
    }

    bb9: {
        StorageDead(_14);
        goto -> bb12;
    }

    bb10: {
        StorageDead(_14);
        _0 = const false;
        StorageDead(_13);
        StorageDead(_11);
        StorageDead(_10);
        goto -> bb20;
    }

    bb11: {
        StorageDead(_12);
        goto -> bb12;
    }

    bb12: {
        _10 = const ();
        StorageDead(_13);
        StorageDead(_11);
        StorageDead(_10);
        StorageLive(_16);
        StorageLive(_17);
        StorageLive(_18);
        _18 = &((*_1).6: state::token_info::SwitchboardConfiguration);
        _17 = SwitchboardConfiguration::is_enabled(move _18) -> [return: bb13, unwind continue];
    }

    bb13: {
        switchInt(move _17) -> [0: bb18, otherwise: bb14];
    }

    bb14: {
        StorageDead(_18);
        StorageLive(_19);
        StorageLive(_20);
        _20 = &((*_1).6: state::token_info::SwitchboardConfiguration);
        _19 = SwitchboardConfiguration::has_twap(move _20) -> [return: bb15, unwind continue];
    }

    bb15: {
        switchInt(move _19) -> [0: bb17, otherwise: bb16];
    }

    bb16: {
        StorageDead(_20);
        goto -> bb19;
    }

    bb17: {
        StorageDead(_20);
        _0 = const false;
        StorageDead(_19);
        StorageDead(_17);
        StorageDead(_16);
        goto -> bb20;
    }

    bb18: {
        StorageDead(_18);
        goto -> bb19;
    }

    bb19: {
        _16 = const ();
        StorageDead(_19);
        StorageDead(_17);
        StorageDead(_16);
        _0 = const true;
        goto -> bb20;
    }

    bb20: {
        return;
    }
}
