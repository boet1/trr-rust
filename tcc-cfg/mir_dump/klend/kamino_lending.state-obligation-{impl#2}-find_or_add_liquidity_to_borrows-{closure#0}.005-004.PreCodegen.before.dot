digraph Mir_0_1677 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn obligation::Obligation::find_or_add_liquidity_to_borrows::{closure#0}(_1: &amp;ReErased mut Closure(DefId(0:1677 ~ kamino_lending[6389]::state::obligation::{impl#2}::find_or_add_liquidity_to_borrows::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) (usize, &amp;ReErased mut state::obligation::ObligationLiquidity),)) -&gt; bool, [Region(BrAnon)]), ()]), _2: &amp;ReErased (usize, &amp;ReErased mut state::obligation::ObligationLiquidity)) -&gt; bool<br align="left"/>let mut _3: bool;<br align="left"/>let mut _4: &amp;ReErased state::obligation::ObligationLiquidity;<br align="left"/>let mut _5: &amp;ReErased mut state::obligation::ObligationLiquidity;<br align="left"/>debug c =&gt; _2;<br align="left"/>>;
    bb0__0_1677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>_5 = deref_copy ((*_2).1: &amp;mut state::obligation::ObligationLiquidity)<br/>_4 = &amp;(*_5)<br/></td></tr><tr><td align="left">_3 = obligation::ObligationLiquidity::is_active(move _4)</td></tr></table>>];
    bb1__0_1677 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>_0 = Not(move _3)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_1677 -> bb1__0_1677 [label="return"];
}
