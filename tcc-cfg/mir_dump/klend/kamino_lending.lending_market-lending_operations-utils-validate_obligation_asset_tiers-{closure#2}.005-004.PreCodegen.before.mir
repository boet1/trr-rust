// MIR for `validate_obligation_asset_tiers::{closure#2}` before PreCodegen

fn validate_obligation_asset_tiers::{closure#2}(_1: &mut {closure@programs\klend\src\lending_market\lending_operations.rs:3487:21: 3487:28}, _2: &&reserve::AssetTier) -> bool {
    let mut _0: bool;
    let _3: &state::reserve::AssetTier;
    let mut _4: &state::reserve::AssetTier;
    let mut _5: &state::reserve::AssetTier;
    let _6: state::reserve::AssetTier;
    scope 1 {
        debug tier => _3;
        let mut _7: &state::reserve::AssetTier;
    }

    bb0: {
        StorageLive(_3);
        _3 = (*_2);
        StorageLive(_4);
        _4 = &(*_3);
        StorageLive(_5);
        _7 = const _;
        _5 = &(*_7);
        _0 = <reserve::AssetTier as PartialEq>::eq(move _4, move _5) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_5);
        StorageDead(_4);
        StorageDead(_3);
        return;
    }
}
