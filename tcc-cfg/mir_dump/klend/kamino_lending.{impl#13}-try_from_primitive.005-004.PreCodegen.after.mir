// MIR for `<impl at programs\klend\src\lib.rs:441:44: 441:70>::try_from_primitive` after PreCodegen

fn <impl at programs\klend\src\lib.rs:441:44: 441:70>::try_from_primitive(_1: u32) -> std::result::Result<LendingError, TryFromPrimitiveError<LendingError>> {
    debug number => _1;
    let mut _0: std::result::Result<LendingError, num_enum::TryFromPrimitiveError<LendingError>>;
    let mut _2: LendingError;
    let mut _3: LendingError;
    let mut _4: LendingError;
    let mut _5: LendingError;
    let mut _6: LendingError;
    let mut _7: LendingError;
    let mut _8: LendingError;
    let mut _9: LendingError;
    let mut _10: LendingError;
    let mut _11: LendingError;
    let mut _12: LendingError;
    let mut _13: LendingError;
    let mut _14: LendingError;
    let mut _15: LendingError;
    let mut _16: LendingError;
    let mut _17: LendingError;
    let mut _18: LendingError;
    let mut _19: LendingError;
    let mut _20: LendingError;
    let mut _21: LendingError;
    let mut _22: LendingError;
    let mut _23: LendingError;
    let mut _24: LendingError;
    let mut _25: LendingError;
    let mut _26: LendingError;
    let mut _27: LendingError;
    let mut _28: LendingError;
    let mut _29: LendingError;
    let mut _30: LendingError;
    let mut _31: LendingError;
    let mut _32: LendingError;
    let mut _33: LendingError;
    let mut _34: LendingError;
    let mut _35: LendingError;
    let mut _36: LendingError;
    let mut _37: LendingError;
    let mut _38: LendingError;
    let mut _39: LendingError;
    let mut _40: LendingError;
    let mut _41: LendingError;
    let mut _42: LendingError;
    let mut _43: LendingError;
    let mut _44: LendingError;
    let mut _45: LendingError;
    let mut _46: LendingError;
    let mut _47: LendingError;
    let mut _48: LendingError;
    let mut _49: LendingError;
    let mut _50: LendingError;
    let mut _51: LendingError;
    let mut _52: LendingError;
    let mut _53: LendingError;
    let mut _54: LendingError;
    let mut _55: LendingError;
    let mut _56: LendingError;
    let mut _57: LendingError;
    let mut _58: LendingError;
    let mut _59: LendingError;
    let mut _60: LendingError;
    let mut _61: LendingError;
    let mut _62: LendingError;
    let mut _63: LendingError;
    let mut _64: LendingError;
    let mut _65: LendingError;
    let mut _66: LendingError;
    let mut _67: LendingError;
    let mut _68: LendingError;
    let mut _69: LendingError;
    let mut _70: LendingError;
    let mut _71: LendingError;
    let mut _72: LendingError;
    let mut _73: LendingError;
    let mut _74: LendingError;
    let mut _75: LendingError;
    let mut _76: LendingError;
    let mut _77: LendingError;
    let mut _78: LendingError;
    let mut _79: LendingError;
    let mut _80: LendingError;
    let mut _81: LendingError;
    let mut _82: LendingError;
    let mut _83: LendingError;
    let mut _84: LendingError;
    let mut _85: LendingError;
    let mut _86: LendingError;
    let mut _87: LendingError;
    let mut _88: LendingError;
    let mut _89: LendingError;
    let mut _90: LendingError;
    let mut _91: LendingError;
    let mut _92: LendingError;
    let mut _93: LendingError;
    let mut _94: LendingError;
    let mut _95: LendingError;
    let mut _96: LendingError;
    let mut _97: LendingError;
    let mut _98: LendingError;
    let mut _99: LendingError;
    let mut _100: LendingError;
    let mut _101: LendingError;
    let mut _102: LendingError;
    let mut _103: LendingError;
    let mut _104: LendingError;
    let mut _105: LendingError;
    let mut _106: LendingError;
    let mut _107: LendingError;
    let mut _108: LendingError;
    let mut _109: LendingError;
    let mut _110: LendingError;
    let mut _111: LendingError;
    let mut _112: LendingError;
    let mut _113: LendingError;
    let mut _114: LendingError;
    let mut _115: LendingError;
    let mut _116: LendingError;
    let mut _117: LendingError;
    let mut _118: LendingError;
    let mut _119: LendingError;
    let mut _120: LendingError;
    let mut _121: LendingError;
    let mut _122: LendingError;
    let mut _123: LendingError;
    let mut _124: LendingError;
    let mut _125: LendingError;
    let mut _126: LendingError;
    let mut _127: LendingError;
    let mut _128: LendingError;
    let mut _129: LendingError;
    let mut _130: LendingError;
    let mut _131: LendingError;
    let mut _132: num_enum::TryFromPrimitiveError<LendingError>;
    let mut _133: u32;
    scope 1 {
        scope 2 {
        }
    }

    bb0: {
        switchInt(_1) -> [0: bb2, 1: bb3, 2: bb4, 3: bb5, 4: bb6, 5: bb7, 6: bb8, 7: bb9, 8: bb10, 9: bb11, 10: bb12, 11: bb13, 12: bb14, 13: bb15, 14: bb16, 15: bb17, 16: bb18, 17: bb19, 18: bb20, 19: bb21, 20: bb22, 21: bb23, 22: bb24, 23: bb25, 24: bb26, 25: bb27, 26: bb28, 27: bb29, 28: bb30, 29: bb31, 30: bb32, 31: bb33, 32: bb34, 33: bb35, 34: bb36, 35: bb37, 36: bb38, 37: bb39, 38: bb40, 39: bb41, 40: bb42, 41: bb43, 42: bb44, 43: bb45, 44: bb46, 45: bb47, 46: bb48, 47: bb49, 48: bb50, 49: bb51, 50: bb52, 51: bb53, 52: bb54, 53: bb55, 54: bb56, 55: bb57, 56: bb58, 57: bb59, 58: bb60, 59: bb61, 60: bb62, 61: bb63, 62: bb64, 63: bb65, 64: bb66, 65: bb67, 66: bb68, 67: bb69, 68: bb70, 69: bb71, 70: bb72, 71: bb73, 72: bb74, 73: bb75, 74: bb76, 75: bb77, 76: bb78, 77: bb79, 78: bb80, 79: bb81, 80: bb82, 81: bb83, 82: bb84, 83: bb85, 84: bb86, 85: bb87, 86: bb88, 87: bb89, 88: bb90, 89: bb91, 90: bb92, 91: bb93, 92: bb94, 93: bb95, 94: bb96, 95: bb97, 96: bb98, 97: bb99, 98: bb100, 99: bb101, 100: bb102, 101: bb103, 102: bb104, 103: bb105, 104: bb106, 105: bb107, 106: bb108, 107: bb109, 108: bb110, 109: bb111, 110: bb112, 111: bb113, 112: bb114, 113: bb115, 114: bb116, 115: bb117, 116: bb118, 117: bb119, 118: bb120, 119: bb121, 120: bb122, 121: bb123, 122: bb124, 123: bb125, 124: bb126, 125: bb127, 126: bb128, 127: bb129, 128: bb130, 129: bb131, otherwise: bb1];
    }

    bb1: {
        StorageLive(_132);
        StorageLive(_133);
        _133 = _1;
        _132 = TryFromPrimitiveError::<LendingError>::new(move _133) -> [return: bb132, unwind continue];
    }

    bb2: {
        StorageLive(_2);
        _2 = LendingError::InvalidMarketAuthority;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _2);
        StorageDead(_2);
        goto -> bb133;
    }

    bb3: {
        StorageLive(_3);
        _3 = LendingError::InvalidMarketOwner;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _3);
        StorageDead(_3);
        goto -> bb133;
    }

    bb4: {
        StorageLive(_4);
        _4 = LendingError::InvalidAccountOwner;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _4);
        StorageDead(_4);
        goto -> bb133;
    }

    bb5: {
        StorageLive(_5);
        _5 = LendingError::InvalidAmount;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _5);
        StorageDead(_5);
        goto -> bb133;
    }

    bb6: {
        StorageLive(_6);
        _6 = LendingError::InvalidConfig;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _6);
        StorageDead(_6);
        goto -> bb133;
    }

    bb7: {
        StorageLive(_7);
        _7 = LendingError::InvalidSigner;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _7);
        StorageDead(_7);
        goto -> bb133;
    }

    bb8: {
        StorageLive(_8);
        _8 = LendingError::InvalidAccountInput;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _8);
        StorageDead(_8);
        goto -> bb133;
    }

    bb9: {
        StorageLive(_9);
        _9 = LendingError::MathOverflow;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _9);
        StorageDead(_9);
        goto -> bb133;
    }

    bb10: {
        StorageLive(_10);
        _10 = LendingError::InsufficientLiquidity;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _10);
        StorageDead(_10);
        goto -> bb133;
    }

    bb11: {
        StorageLive(_11);
        _11 = LendingError::ReserveStale;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _11);
        StorageDead(_11);
        goto -> bb133;
    }

    bb12: {
        StorageLive(_12);
        _12 = LendingError::WithdrawTooSmall;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _12);
        StorageDead(_12);
        goto -> bb133;
    }

    bb13: {
        StorageLive(_13);
        _13 = LendingError::WithdrawTooLarge;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _13);
        StorageDead(_13);
        goto -> bb133;
    }

    bb14: {
        StorageLive(_14);
        _14 = LendingError::BorrowTooSmall;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _14);
        StorageDead(_14);
        goto -> bb133;
    }

    bb15: {
        StorageLive(_15);
        _15 = LendingError::BorrowTooLarge;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _15);
        StorageDead(_15);
        goto -> bb133;
    }

    bb16: {
        StorageLive(_16);
        _16 = LendingError::RepayTooSmall;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _16);
        StorageDead(_16);
        goto -> bb133;
    }

    bb17: {
        StorageLive(_17);
        _17 = LendingError::LiquidationTooSmall;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _17);
        StorageDead(_17);
        goto -> bb133;
    }

    bb18: {
        StorageLive(_18);
        _18 = LendingError::ObligationHealthy;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _18);
        StorageDead(_18);
        goto -> bb133;
    }

    bb19: {
        StorageLive(_19);
        _19 = LendingError::ObligationStale;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _19);
        StorageDead(_19);
        goto -> bb133;
    }

    bb20: {
        StorageLive(_20);
        _20 = LendingError::ObligationReserveLimit;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _20);
        StorageDead(_20);
        goto -> bb133;
    }

    bb21: {
        StorageLive(_21);
        _21 = LendingError::InvalidObligationOwner;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _21);
        StorageDead(_21);
        goto -> bb133;
    }

    bb22: {
        StorageLive(_22);
        _22 = LendingError::ObligationDepositsEmpty;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _22);
        StorageDead(_22);
        goto -> bb133;
    }

    bb23: {
        StorageLive(_23);
        _23 = LendingError::ObligationBorrowsEmpty;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _23);
        StorageDead(_23);
        goto -> bb133;
    }

    bb24: {
        StorageLive(_24);
        _24 = LendingError::ObligationDepositsZero;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _24);
        StorageDead(_24);
        goto -> bb133;
    }

    bb25: {
        StorageLive(_25);
        _25 = LendingError::ObligationBorrowsZero;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _25);
        StorageDead(_25);
        goto -> bb133;
    }

    bb26: {
        StorageLive(_26);
        _26 = LendingError::InvalidObligationCollateral;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _26);
        StorageDead(_26);
        goto -> bb133;
    }

    bb27: {
        StorageLive(_27);
        _27 = LendingError::InvalidObligationLiquidity;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _27);
        StorageDead(_27);
        goto -> bb133;
    }

    bb28: {
        StorageLive(_28);
        _28 = LendingError::ObligationCollateralEmpty;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _28);
        StorageDead(_28);
        goto -> bb133;
    }

    bb29: {
        StorageLive(_29);
        _29 = LendingError::ObligationLiquidityEmpty;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _29);
        StorageDead(_29);
        goto -> bb133;
    }

    bb30: {
        StorageLive(_30);
        _30 = LendingError::NegativeInterestRate;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _30);
        StorageDead(_30);
        goto -> bb133;
    }

    bb31: {
        StorageLive(_31);
        _31 = LendingError::InvalidOracleConfig;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _31);
        StorageDead(_31);
        goto -> bb133;
    }

    bb32: {
        StorageLive(_32);
        _32 = LendingError::InsufficientProtocolFeesToRedeem;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _32);
        StorageDead(_32);
        goto -> bb133;
    }

    bb33: {
        StorageLive(_33);
        _33 = LendingError::FlashBorrowCpi;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _33);
        StorageDead(_33);
        goto -> bb133;
    }

    bb34: {
        StorageLive(_34);
        _34 = LendingError::NoFlashRepayFound;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _34);
        StorageDead(_34);
        goto -> bb133;
    }

    bb35: {
        StorageLive(_35);
        _35 = LendingError::InvalidFlashRepay;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _35);
        StorageDead(_35);
        goto -> bb133;
    }

    bb36: {
        StorageLive(_36);
        _36 = LendingError::FlashRepayCpi;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _36);
        StorageDead(_36);
        goto -> bb133;
    }

    bb37: {
        StorageLive(_37);
        _37 = LendingError::MultipleFlashBorrows;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _37);
        StorageDead(_37);
        goto -> bb133;
    }

    bb38: {
        StorageLive(_38);
        _38 = LendingError::FlashLoansDisabled;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _38);
        StorageDead(_38);
        goto -> bb133;
    }

    bb39: {
        StorageLive(_39);
        _39 = LendingError::SwitchboardV2Error;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _39);
        StorageDead(_39);
        goto -> bb133;
    }

    bb40: {
        StorageLive(_40);
        _40 = LendingError::CouldNotDeserializeScope;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _40);
        StorageDead(_40);
        goto -> bb133;
    }

    bb41: {
        StorageLive(_41);
        _41 = LendingError::PriceTooOld;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _41);
        StorageDead(_41);
        goto -> bb133;
    }

    bb42: {
        StorageLive(_42);
        _42 = LendingError::PriceTooDivergentFromTwap;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _42);
        StorageDead(_42);
        goto -> bb133;
    }

    bb43: {
        StorageLive(_43);
        _43 = LendingError::InvalidTwapPrice;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _43);
        StorageDead(_43);
        goto -> bb133;
    }

    bb44: {
        StorageLive(_44);
        _44 = LendingError::GlobalEmergencyMode;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _44);
        StorageDead(_44);
        goto -> bb133;
    }

    bb45: {
        StorageLive(_45);
        _45 = LendingError::InvalidFlag;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _45);
        StorageDead(_45);
        goto -> bb133;
    }

    bb46: {
        StorageLive(_46);
        _46 = LendingError::PriceNotValid;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _46);
        StorageDead(_46);
        goto -> bb133;
    }

    bb47: {
        StorageLive(_47);
        _47 = LendingError::PriceIsBiggerThanHeuristic;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _47);
        StorageDead(_47);
        goto -> bb133;
    }

    bb48: {
        StorageLive(_48);
        _48 = LendingError::PriceIsLowerThanHeuristic;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _48);
        StorageDead(_48);
        goto -> bb133;
    }

    bb49: {
        StorageLive(_49);
        _49 = LendingError::PriceIsZero;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _49);
        StorageDead(_49);
        goto -> bb133;
    }

    bb50: {
        StorageLive(_50);
        _50 = LendingError::PriceConfidenceTooWide;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _50);
        StorageDead(_50);
        goto -> bb133;
    }

    bb51: {
        StorageLive(_51);
        _51 = LendingError::IntegerOverflow;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _51);
        StorageDead(_51);
        goto -> bb133;
    }

    bb52: {
        StorageLive(_52);
        _52 = LendingError::NoFarmForReserve;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _52);
        StorageDead(_52);
        goto -> bb133;
    }

    bb53: {
        StorageLive(_53);
        _53 = LendingError::IncorrectInstructionInPosition;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _53);
        StorageDead(_53);
        goto -> bb133;
    }

    bb54: {
        StorageLive(_54);
        _54 = LendingError::NoPriceFound;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _54);
        StorageDead(_54);
        goto -> bb133;
    }

    bb55: {
        StorageLive(_55);
        _55 = LendingError::InvalidTwapConfig;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _55);
        StorageDead(_55);
        goto -> bb133;
    }

    bb56: {
        StorageLive(_56);
        _56 = LendingError::InvalidPythPriceAccount;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _56);
        StorageDead(_56);
        goto -> bb133;
    }

    bb57: {
        StorageLive(_57);
        _57 = LendingError::InvalidSwitchboardAccount;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _57);
        StorageDead(_57);
        goto -> bb133;
    }

    bb58: {
        StorageLive(_58);
        _58 = LendingError::InvalidScopePriceAccount;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _58);
        StorageDead(_58);
        goto -> bb133;
    }

    bb59: {
        StorageLive(_59);
        _59 = LendingError::ObligationCollateralLtvZero;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _59);
        StorageDead(_59);
        goto -> bb133;
    }

    bb60: {
        StorageLive(_60);
        _60 = LendingError::InvalidObligationSeedsValue;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _60);
        StorageDead(_60);
        goto -> bb133;
    }

    bb61: {
        StorageLive(_61);
        _61 = LendingError::DeprecatedInvalidObligationId;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _61);
        StorageDead(_61);
        goto -> bb133;
    }

    bb62: {
        StorageLive(_62);
        _62 = LendingError::InvalidBorrowRateCurvePoint;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _62);
        StorageDead(_62);
        goto -> bb133;
    }

    bb63: {
        StorageLive(_63);
        _63 = LendingError::InvalidUtilizationRate;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _63);
        StorageDead(_63);
        goto -> bb133;
    }

    bb64: {
        StorageLive(_64);
        _64 = LendingError::CannotSocializeObligationWithCollateral;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _64);
        StorageDead(_64);
        goto -> bb133;
    }

    bb65: {
        StorageLive(_65);
        _65 = LendingError::ObligationEmpty;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _65);
        StorageDead(_65);
        goto -> bb133;
    }

    bb66: {
        StorageLive(_66);
        _66 = LendingError::WithdrawalCapReached;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _66);
        StorageDead(_66);
        goto -> bb133;
    }

    bb67: {
        StorageLive(_67);
        _67 = LendingError::LastTimestampGreaterThanCurrent;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _67);
        StorageDead(_67);
        goto -> bb133;
    }

    bb68: {
        StorageLive(_68);
        _68 = LendingError::LiquidationRewardTooSmall;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _68);
        StorageDead(_68);
        goto -> bb133;
    }

    bb69: {
        StorageLive(_69);
        _69 = LendingError::IsolatedAssetTierViolation;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _69);
        StorageDead(_69);
        goto -> bb133;
    }

    bb70: {
        StorageLive(_70);
        _70 = LendingError::InconsistentElevationGroup;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _70);
        StorageDead(_70);
        goto -> bb133;
    }

    bb71: {
        StorageLive(_71);
        _71 = LendingError::InvalidElevationGroup;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _71);
        StorageDead(_71);
        goto -> bb133;
    }

    bb72: {
        StorageLive(_72);
        _72 = LendingError::InvalidElevationGroupConfig;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _72);
        StorageDead(_72);
        goto -> bb133;
    }

    bb73: {
        StorageLive(_73);
        _73 = LendingError::UnhealthyElevationGroupLtv;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _73);
        StorageDead(_73);
        goto -> bb133;
    }

    bb74: {
        StorageLive(_74);
        _74 = LendingError::ElevationGroupNewLoansDisabled;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _74);
        StorageDead(_74);
        goto -> bb133;
    }

    bb75: {
        StorageLive(_75);
        _75 = LendingError::ReserveDeprecated;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _75);
        StorageDead(_75);
        goto -> bb133;
    }

    bb76: {
        StorageLive(_76);
        _76 = LendingError::ReferrerAccountNotInitialized;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _76);
        StorageDead(_76);
        goto -> bb133;
    }

    bb77: {
        StorageLive(_77);
        _77 = LendingError::ReferrerAccountMintMissmatch;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _77);
        StorageDead(_77);
        goto -> bb133;
    }

    bb78: {
        StorageLive(_78);
        _78 = LendingError::ReferrerAccountWrongAddress;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _78);
        StorageDead(_78);
        goto -> bb133;
    }

    bb79: {
        StorageLive(_79);
        _79 = LendingError::ReferrerAccountReferrerMissmatch;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _79);
        StorageDead(_79);
        goto -> bb133;
    }

    bb80: {
        StorageLive(_80);
        _80 = LendingError::ReferrerAccountMissing;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _80);
        StorageDead(_80);
        goto -> bb133;
    }

    bb81: {
        StorageLive(_81);
        _81 = LendingError::InsufficientReferralFeesToRedeem;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _81);
        StorageDead(_81);
        goto -> bb133;
    }

    bb82: {
        StorageLive(_82);
        _82 = LendingError::CpiDisabled;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _82);
        StorageDead(_82);
        goto -> bb133;
    }

    bb83: {
        StorageLive(_83);
        _83 = LendingError::ShortUrlNotAsciiAlphanumeric;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _83);
        StorageDead(_83);
        goto -> bb133;
    }

    bb84: {
        StorageLive(_84);
        _84 = LendingError::ReserveObsolete;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _84);
        StorageDead(_84);
        goto -> bb133;
    }

    bb85: {
        StorageLive(_85);
        _85 = LendingError::ElevationGroupAlreadyActivated;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _85);
        StorageDead(_85);
        goto -> bb133;
    }

    bb86: {
        StorageLive(_86);
        _86 = LendingError::ObligationInObsoleteReserve;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _86);
        StorageDead(_86);
        goto -> bb133;
    }

    bb87: {
        StorageLive(_87);
        _87 = LendingError::ReferrerStateOwnerMismatch;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _87);
        StorageDead(_87);
        goto -> bb133;
    }

    bb88: {
        StorageLive(_88);
        _88 = LendingError::UserMetadataOwnerAlreadySet;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _88);
        StorageDead(_88);
        goto -> bb133;
    }

    bb89: {
        StorageLive(_89);
        _89 = LendingError::CollateralNonLiquidatable;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _89);
        StorageDead(_89);
        goto -> bb133;
    }

    bb90: {
        StorageLive(_90);
        _90 = LendingError::BorrowingDisabled;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _90);
        StorageDead(_90);
        goto -> bb133;
    }

    bb91: {
        StorageLive(_91);
        _91 = LendingError::BorrowLimitExceeded;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _91);
        StorageDead(_91);
        goto -> bb133;
    }

    bb92: {
        StorageLive(_92);
        _92 = LendingError::DepositLimitExceeded;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _92);
        StorageDead(_92);
        goto -> bb133;
    }

    bb93: {
        StorageLive(_93);
        _93 = LendingError::BorrowingDisabledOutsideElevationGroup;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _93);
        StorageDead(_93);
        goto -> bb133;
    }

    bb94: {
        StorageLive(_94);
        _94 = LendingError::NetValueRemainingTooSmall;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _94);
        StorageDead(_94);
        goto -> bb133;
    }

    bb95: {
        StorageLive(_95);
        _95 = LendingError::WorseLtvBlocked;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _95);
        StorageDead(_95);
        goto -> bb133;
    }

    bb96: {
        StorageLive(_96);
        _96 = LendingError::LiabilitiesBiggerThanAssets;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _96);
        StorageDead(_96);
        goto -> bb133;
    }

    bb97: {
        StorageLive(_97);
        _97 = LendingError::ReserveTokenBalanceMismatch;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _97);
        StorageDead(_97);
        goto -> bb133;
    }

    bb98: {
        StorageLive(_98);
        _98 = LendingError::ReserveVaultBalanceMismatch;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _98);
        StorageDead(_98);
        goto -> bb133;
    }

    bb99: {
        StorageLive(_99);
        _99 = LendingError::ReserveAccountingMismatch;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _99);
        StorageDead(_99);
        goto -> bb133;
    }

    bb100: {
        StorageLive(_100);
        _100 = LendingError::BorrowingAboveUtilizationRateDisabled;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _100);
        StorageDead(_100);
        goto -> bb133;
    }

    bb101: {
        StorageLive(_101);
        _101 = LendingError::LiquidationBorrowFactorPriority;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _101);
        StorageDead(_101);
        goto -> bb133;
    }

    bb102: {
        StorageLive(_102);
        _102 = LendingError::LiquidationLowestLiquidationLtvPriority;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _102);
        StorageDead(_102);
        goto -> bb133;
    }

    bb103: {
        StorageLive(_103);
        _103 = LendingError::ElevationGroupBorrowLimitExceeded;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _103);
        StorageDead(_103);
        goto -> bb133;
    }

    bb104: {
        StorageLive(_104);
        _104 = LendingError::ElevationGroupWithoutDebtReserve;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _104);
        StorageDead(_104);
        goto -> bb133;
    }

    bb105: {
        StorageLive(_105);
        _105 = LendingError::ElevationGroupMaxCollateralReserveZero;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _105);
        StorageDead(_105);
        goto -> bb133;
    }

    bb106: {
        StorageLive(_106);
        _106 = LendingError::ElevationGroupHasAnotherDebtReserve;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _106);
        StorageDead(_106);
        goto -> bb133;
    }

    bb107: {
        StorageLive(_107);
        _107 = LendingError::ElevationGroupDebtReserveAsCollateral;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _107);
        StorageDead(_107);
        goto -> bb133;
    }

    bb108: {
        StorageLive(_108);
        _108 = LendingError::ObligationCollateralExceedsElevationGroupLimit;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _108);
        StorageDead(_108);
        goto -> bb133;
    }

    bb109: {
        StorageLive(_109);
        _109 = LendingError::ObligationElevationGroupMultipleDebtReserve;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _109);
        StorageDead(_109);
        goto -> bb133;
    }

    bb110: {
        StorageLive(_110);
        _110 = LendingError::UnsupportedTokenExtension;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _110);
        StorageDead(_110);
        goto -> bb133;
    }

    bb111: {
        StorageLive(_111);
        _111 = LendingError::InvalidTokenAccount;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _111);
        StorageDead(_111);
        goto -> bb133;
    }

    bb112: {
        StorageLive(_112);
        _112 = LendingError::DepositDisabledOutsideElevationGroup;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _112);
        StorageDead(_112);
        goto -> bb133;
    }

    bb113: {
        StorageLive(_113);
        _113 = LendingError::CannotCalculateReferralAmountDueToSlotsMismatch;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _113);
        StorageDead(_113);
        goto -> bb133;
    }

    bb114: {
        StorageLive(_114);
        _114 = LendingError::ObligationOwnersMustMatch;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _114);
        StorageDead(_114);
        goto -> bb133;
    }

    bb115: {
        StorageLive(_115);
        _115 = LendingError::ObligationsMustMatch;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _115);
        StorageDead(_115);
        goto -> bb133;
    }

    bb116: {
        StorageLive(_116);
        _116 = LendingError::LendingMarketsMustMatch;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _116);
        StorageDead(_116);
        goto -> bb133;
    }

    bb117: {
        StorageLive(_117);
        _117 = LendingError::ObligationCurrentlyMarkedForDeleveraging;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _117);
        StorageDead(_117);
        goto -> bb133;
    }

    bb118: {
        StorageLive(_118);
        _118 = LendingError::MaximumWithdrawValueZero;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _118);
        StorageDead(_118);
        goto -> bb133;
    }

    bb119: {
        StorageLive(_119);
        _119 = LendingError::ZeroMaxLtvAssetsInDeposits;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _119);
        StorageDead(_119);
        goto -> bb133;
    }

    bb120: {
        StorageLive(_120);
        _120 = LendingError::LowestLtvAssetsPriority;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _120);
        StorageDead(_120);
        goto -> bb133;
    }

    bb121: {
        StorageLive(_121);
        _121 = LendingError::WorseLtvThanUnhealthyLtv;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _121);
        StorageDead(_121);
        goto -> bb133;
    }

    bb122: {
        StorageLive(_122);
        _122 = LendingError::FarmAccountsMissing;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _122);
        StorageDead(_122);
        goto -> bb133;
    }

    bb123: {
        StorageLive(_123);
        _123 = LendingError::RepayTooSmallForFullLiquidation;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _123);
        StorageDead(_123);
        goto -> bb133;
    }

    bb124: {
        StorageLive(_124);
        _124 = LendingError::InsufficientRepayAmount;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _124);
        StorageDead(_124);
        goto -> bb133;
    }

    bb125: {
        StorageLive(_125);
        _125 = LendingError::OrderIndexOutOfBounds;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _125);
        StorageDead(_125);
        goto -> bb133;
    }

    bb126: {
        StorageLive(_126);
        _126 = LendingError::InvalidOrderConfiguration;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _126);
        StorageDead(_126);
        goto -> bb133;
    }

    bb127: {
        StorageLive(_127);
        _127 = LendingError::OrderConfigurationNotSupportedByObligation;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _127);
        StorageDead(_127);
        goto -> bb133;
    }

    bb128: {
        StorageLive(_128);
        _128 = LendingError::OperationNotPermittedWithCurrentObligationOrders;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _128);
        StorageDead(_128);
        goto -> bb133;
    }

    bb129: {
        StorageLive(_129);
        _129 = LendingError::OperationNotPermittedMarketImmutable;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _129);
        StorageDead(_129);
        goto -> bb133;
    }

    bb130: {
        StorageLive(_130);
        _130 = LendingError::OrderCreationDisabled;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _130);
        StorageDead(_130);
        goto -> bb133;
    }

    bb131: {
        StorageLive(_131);
        _131 = LendingError::NoUpgradeAuthority;
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Ok(move _131);
        StorageDead(_131);
        goto -> bb133;
    }

    bb132: {
        StorageDead(_133);
        _0 = std::result::Result::<LendingError, TryFromPrimitiveError<LendingError>>::Err(move _132);
        StorageDead(_132);
        goto -> bb133;
    }

    bb133: {
        return;
    }
}
