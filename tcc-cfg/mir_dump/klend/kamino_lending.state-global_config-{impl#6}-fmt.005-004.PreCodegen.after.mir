// MIR for `global_config::<impl at programs\klend\src\state\global_config.rs:18:1: 23:24>::fmt` after PreCodegen

fn global_config::<impl at programs\klend\src\state\global_config.rs:18:1: 23:24>::fmt(_1: &global_config::GlobalConfig, _2: &mut Formatter<'_>) -> std::result::Result<(), std::fmt::Error> {
    debug self => _1;
    debug __f => _2;
    let mut _0: std::result::Result<(), std::fmt::Error>;
    let _3: &anchor_lang::prelude::Pubkey;
    let _4: &anchor_lang::prelude::Pubkey;
    let _5: &anchor_lang::prelude::Pubkey;
    let _6: &[u8; 928];
    let mut _8: &mut std::fmt::Formatter<'_>;
    let mut _9: &str;
    let _10: &str;
    let mut _11: &mut std::fmt::DebugStruct<'_, '_>;
    let mut _12: &mut std::fmt::DebugStruct<'_, '_>;
    let mut _13: &str;
    let _14: &str;
    let mut _15: &dyn std::fmt::Debug;
    let mut _16: &&anchor_lang::prelude::Pubkey;
    let _17: &&anchor_lang::prelude::Pubkey;
    let _18: &anchor_lang::prelude::Pubkey;
    let mut _19: &mut std::fmt::DebugStruct<'_, '_>;
    let mut _20: &mut std::fmt::DebugStruct<'_, '_>;
    let mut _21: &str;
    let _22: &str;
    let mut _23: &dyn std::fmt::Debug;
    let mut _24: &&anchor_lang::prelude::Pubkey;
    let _25: &&anchor_lang::prelude::Pubkey;
    let _26: &anchor_lang::prelude::Pubkey;
    let mut _27: &mut std::fmt::DebugStruct<'_, '_>;
    let mut _28: &mut std::fmt::DebugStruct<'_, '_>;
    let mut _29: &str;
    let _30: &str;
    let mut _31: &dyn std::fmt::Debug;
    let mut _32: &&anchor_lang::prelude::Pubkey;
    let _33: &&anchor_lang::prelude::Pubkey;
    let _34: &anchor_lang::prelude::Pubkey;
    let mut _35: &mut std::fmt::DebugStruct<'_, '_>;
    let mut _36: &mut std::fmt::DebugStruct<'_, '_>;
    let mut _37: &str;
    let _38: &str;
    let mut _39: &dyn std::fmt::Debug;
    let mut _40: &&[u8; 928];
    let _41: &&[u8; 928];
    let _42: &[u8; 928];
    let mut _43: &mut std::fmt::DebugStruct<'_, '_>;
    scope 1 {
        debug __arg_0 => _3;
        debug __arg_1 => _4;
        debug __arg_2 => _5;
        debug __arg_3 => _6;
        let mut _7: std::fmt::DebugStruct<'_, '_>;
        scope 2 {
            debug __debug_trait_builder => _7;
            scope 3 {
                scope 4 {
                    scope 5 {
                        scope 6 {
                        }
                    }
                }
            }
        }
    }

    bb0: {
        StorageLive(_3);
        _3 = &((*_1).0: anchor_lang::prelude::Pubkey);
        StorageLive(_4);
        _4 = &((*_1).1: anchor_lang::prelude::Pubkey);
        StorageLive(_5);
        _5 = &((*_1).2: anchor_lang::prelude::Pubkey);
        StorageLive(_6);
        _6 = &((*_1).3: [u8; 928]);
        StorageLive(_7);
        StorageLive(_8);
        _8 = &mut (*_2);
        StorageLive(_9);
        StorageLive(_10);
        _10 = const "GlobalConfig";
        _9 = &(*_10);
        _7 = Formatter::<'_>::debug_struct(move _8, move _9) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_9);
        StorageDead(_8);
        StorageDead(_10);
        StorageLive(_11);
        StorageLive(_12);
        _12 = &mut _7;
        StorageLive(_13);
        StorageLive(_14);
        _14 = const "global_admin";
        _13 = &(*_14);
        StorageLive(_15);
        StorageLive(_16);
        StorageLive(_17);
        StorageLive(_18);
        _18 = &(*_3);
        _17 = &_18;
        _16 = &(*_17);
        _15 = move _16 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_16);
        _11 = DebugStruct::<'_, '_>::field(move _12, move _13, move _15) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_15);
        StorageDead(_13);
        StorageDead(_12);
        StorageDead(_18);
        StorageDead(_17);
        StorageDead(_14);
        StorageDead(_11);
        StorageLive(_19);
        StorageLive(_20);
        _20 = &mut _7;
        StorageLive(_21);
        StorageLive(_22);
        _22 = const "pending_admin";
        _21 = &(*_22);
        StorageLive(_23);
        StorageLive(_24);
        StorageLive(_25);
        StorageLive(_26);
        _26 = &(*_4);
        _25 = &_26;
        _24 = &(*_25);
        _23 = move _24 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_24);
        _19 = DebugStruct::<'_, '_>::field(move _20, move _21, move _23) -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageDead(_23);
        StorageDead(_21);
        StorageDead(_20);
        StorageDead(_26);
        StorageDead(_25);
        StorageDead(_22);
        StorageDead(_19);
        StorageLive(_27);
        StorageLive(_28);
        _28 = &mut _7;
        StorageLive(_29);
        StorageLive(_30);
        _30 = const "fee_collector";
        _29 = &(*_30);
        StorageLive(_31);
        StorageLive(_32);
        StorageLive(_33);
        StorageLive(_34);
        _34 = &(*_5);
        _33 = &_34;
        _32 = &(*_33);
        _31 = move _32 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_32);
        _27 = DebugStruct::<'_, '_>::field(move _28, move _29, move _31) -> [return: bb4, unwind continue];
    }

    bb4: {
        StorageDead(_31);
        StorageDead(_29);
        StorageDead(_28);
        StorageDead(_34);
        StorageDead(_33);
        StorageDead(_30);
        StorageDead(_27);
        StorageLive(_35);
        StorageLive(_36);
        _36 = &mut _7;
        StorageLive(_37);
        StorageLive(_38);
        _38 = const "padding";
        _37 = &(*_38);
        StorageLive(_39);
        StorageLive(_40);
        StorageLive(_41);
        StorageLive(_42);
        _42 = &(*_6);
        _41 = &_42;
        _40 = &(*_41);
        _39 = move _40 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_40);
        _35 = DebugStruct::<'_, '_>::field(move _36, move _37, move _39) -> [return: bb5, unwind continue];
    }

    bb5: {
        StorageDead(_39);
        StorageDead(_37);
        StorageDead(_36);
        StorageDead(_42);
        StorageDead(_41);
        StorageDead(_38);
        StorageDead(_35);
        StorageLive(_43);
        _43 = &mut _7;
        _0 = DebugStruct::<'_, '_>::finish(move _43) -> [return: bb6, unwind continue];
    }

    bb6: {
        StorageDead(_43);
        StorageDead(_7);
        StorageDead(_6);
        StorageDead(_5);
        StorageDead(_4);
        StorageDead(_3);
        return;
    }
}
