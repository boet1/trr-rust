digraph Mir_0_804 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn handlers::handler_withdraw_obligation_collateral_and_redeem_reserve_collateral::process_v1(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, handlers::handler_withdraw_obligation_collateral_and_redeem_reserve_collateral::WithdrawObligationCollateralAndRedeemReserveCollateral&lt;ReErased&gt;&gt;, _2: u64) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _3: ();<br align="left"/>let _4: std::cell::Ref&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _5: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::Ref&lt;ReErased, state::reserve::Reserve&gt;&gt;;<br align="left"/>let mut _6: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::reserve::Reserve&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _7: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _8: isize;<br align="left"/>let _9: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _10: !;<br align="left"/>let mut _11: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _12: std::cell::Ref&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let _13: ();<br align="left"/>let mut _14: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _15: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _16: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _17: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _18: &amp;ReErased [(anchor_lang::prelude::Pubkey, &amp;ReErased state::reserve::Reserve)];<br align="left"/>let mut _19: &amp;ReErased [(anchor_lang::prelude::Pubkey, &amp;ReErased state::reserve::Reserve); 1_usize];<br align="left"/>let _20: &amp;ReErased [(anchor_lang::prelude::Pubkey, &amp;ReErased state::reserve::Reserve); 1_usize];<br align="left"/>let _21: [(anchor_lang::prelude::Pubkey, &amp;ReErased state::reserve::Reserve); 1_usize];<br align="left"/>let mut _22: (anchor_lang::prelude::Pubkey, &amp;ReErased state::reserve::Reserve);<br align="left"/>let mut _23: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _24: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _25: &amp;ReErased state::reserve::Reserve;<br align="left"/>let _26: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _27: &amp;ReErased std::cell::Ref&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let _28: &amp;ReErased std::cell::Ref&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _29: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _30: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _31: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _32: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _33: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _34: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let mut _35: &amp;ReErased [state::reserve::ReserveFarmKind];<br align="left"/>let mut _36: &amp;ReErased [state::reserve::ReserveFarmKind; 1_usize];<br align="left"/>let _37: &amp;ReErased [state::reserve::ReserveFarmKind; 1_usize];<br align="left"/>let _38: [state::reserve::ReserveFarmKind; 1_usize];<br align="left"/>let mut _39: state::reserve::ReserveFarmKind;<br align="left"/>let mut _40: isize;<br align="left"/>let _41: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _42: !;<br align="left"/>let mut _43: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _44: ();<br align="left"/>let mut _45: bool;<br align="left"/>let mut _46: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, bool&gt;;<br align="left"/>let mut _47: std::result::Result&lt;bool, anchor_lang::error::Error&gt;;<br align="left"/>let mut _48: &amp;ReErased handlers::handler_withdraw_obligation_collateral_and_redeem_reserve_collateral::WithdrawObligationCollateralAndRedeemReserveCollateral&lt;ReErased&gt;;<br align="left"/>let mut _49: u64;<br align="left"/>let mut _50: state::types::LtvMaxWithdrawalCheck;<br align="left"/>let mut _51: isize;<br align="left"/>let _52: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _53: !;<br align="left"/>let mut _54: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _55: bool;<br align="left"/>let mut _56: ();<br align="left"/>let mut _57: &amp;ReErased [state::reserve::ReserveFarmKind; 1_usize];<br align="left"/>let mut _58: &amp;ReErased mut handlers::handler_withdraw_obligation_collateral_and_redeem_reserve_collateral::WithdrawObligationCollateralAndRedeemReserveCollateral&lt;ReErased&gt;;<br align="left"/>let mut _59: &amp;ReErased mut handlers::handler_withdraw_obligation_collateral_and_redeem_reserve_collateral::WithdrawObligationCollateralAndRedeemReserveCollateral&lt;ReErased&gt;;<br align="left"/>let mut _60: &amp;ReErased mut handlers::handler_withdraw_obligation_collateral_and_redeem_reserve_collateral::WithdrawObligationCollateralAndRedeemReserveCollateral&lt;ReErased&gt;;<br align="left"/>let mut _61: &amp;ReErased mut handlers::handler_withdraw_obligation_collateral_and_redeem_reserve_collateral::WithdrawObligationCollateralAndRedeemReserveCollateral&lt;ReErased&gt;;<br align="left"/>let mut _62: &amp;ReErased mut handlers::handler_withdraw_obligation_collateral_and_redeem_reserve_collateral::WithdrawObligationCollateralAndRedeemReserveCollateral&lt;ReErased&gt;;<br align="left"/>let mut _63: isize;<br align="left"/>let mut _64: isize;<br align="left"/>let mut _65: isize;<br align="left"/>let mut _66: isize;<br align="left"/>let mut _67: isize;<br align="left"/>let mut _68: isize;<br align="left"/>let mut _69: isize;<br align="left"/>let mut _70: isize;<br align="left"/>let mut _71: isize;<br align="left"/>let mut _72: isize;<br align="left"/>let mut _73: isize;<br align="left"/>let mut _74: isize;<br align="left"/>let mut _75: isize;<br align="left"/>let mut _76: isize;<br align="left"/>let mut _77: isize;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug collateral_amount =&gt; _2;<br align="left"/>debug _reserve =&gt; _4;<br align="left"/>debug residual =&gt; _9;<br align="left"/>debug val =&gt; _12;<br align="left"/>debug residual =&gt; _41;<br align="left"/>debug val =&gt; _44;<br align="left"/>debug residual =&gt; _52;<br align="left"/>debug val =&gt; _55;<br align="left"/>>;
    bb0__0_804 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_58 = deref_copy (_1.1: &amp;mut handlers::handler_withdraw_obligation_collateral_and_redeem_reserve_collateral::WithdrawObligationCollateralAndRedeemReserveCollateral&lt;'_&gt;)<br/>_7 = &amp;((*_58).4: anchor_lang::prelude::AccountLoader&lt;'_, state::reserve::Reserve&gt;)<br/></td></tr><tr><td align="left">_6 = anchor_lang::prelude::AccountLoader::&lt;'_, reserve::Reserve&gt;::load(move _7)</td></tr></table>>];
    bb1__0_804 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/></td></tr><tr><td align="left">_5 = &lt;std::result::Result&lt;Ref&lt;'_, reserve::Reserve&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _6)</td></tr></table>>];
    bb2__0_804 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_8 = discriminant(_5)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb3__0_804 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = move ((_5 as Continue).0: std::cell::Ref&lt;'_, state::reserve::Reserve&gt;)<br/>_4 = move _12<br/>StorageDead(_12)<br/>_63 = discriminant(_5)<br/>StorageDead(_5)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_59 = deref_copy (_1.1: &amp;mut handlers::handler_withdraw_obligation_collateral_and_redeem_reserve_collateral::WithdrawObligationCollateralAndRedeemReserveCollateral&lt;'_&gt;)<br/>_17 = &amp;((*_59).13: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_16 = &amp;(*_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_60 = deref_copy (_1.1: &amp;mut handlers::handler_withdraw_obligation_collateral_and_redeem_reserve_collateral::WithdrawObligationCollateralAndRedeemReserveCollateral&lt;'_&gt;)<br/>_24 = &amp;((*_60).4: anchor_lang::prelude::AccountLoader&lt;'_, state::reserve::Reserve&gt;)<br/></td></tr><tr><td align="left">_23 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, reserve::Reserve&gt; as anchor_lang::Key&gt;::key(move _24)</td></tr></table>>];
    bb4__0_804 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_804 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>_9 = move ((_5 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_11)<br/>_11 = move _9<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _11)</td></tr></table>>];
    bb6__0_804 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_9)<br/>_73 = discriminant(_5)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_804 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>_28 = &amp;_4<br/>_27 = &amp;(*_28)<br/></td></tr><tr><td align="left">_26 = &lt;Ref&lt;'_, reserve::Reserve&gt; as Deref&gt;::deref(move _27)</td></tr></table>>];
    bb8__0_804 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">_25 = &amp;(*_26)<br/>StorageDead(_27)<br/>_22 = (move _23, move _25)<br/>StorageDead(_25)<br/>StorageDead(_23)<br/>_21 = [move _22]<br/>StorageDead(_22)<br/>_20 = &amp;_21<br/>_19 = &amp;(*_20)<br/>_18 = move _19 as &amp;[(anchor_lang::prelude::Pubkey, &amp;state::reserve::Reserve)] (PointerCoercion(Unsize))<br/>StorageDead(_19)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>_61 = deref_copy (_1.1: &amp;mut handlers::handler_withdraw_obligation_collateral_and_redeem_reserve_collateral::WithdrawObligationCollateralAndRedeemReserveCollateral&lt;'_&gt;)<br/>_34 = &amp;((*_61).1: anchor_lang::prelude::AccountLoader&lt;'_, state::obligation::Obligation&gt;)<br/></td></tr><tr><td align="left">_33 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, obligation::Obligation&gt; as anchor_lang::ToAccountInfo&lt;'_&gt;&gt;::to_account_info(move _34)</td></tr></table>>];
    bb9__0_804 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">_32 = &amp;_33<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">_31 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::Key&gt;::key(move _32)</td></tr></table>>];
    bb10__0_804 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>_30 = &amp;_31<br/>_29 = &amp;(*_30)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>_57 = const _<br/>_37 = &amp;(*_57)<br/>_36 = &amp;(*_37)<br/>_35 = move _36 as &amp;[state::reserve::ReserveFarmKind] (PointerCoercion(Unsize))<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">_15 = refresh_ix_utils::check_refresh(move _16, move _18, move _29, move _35)</td></tr></table>>];
    bb11__0_804 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_29)<br/>StorageDead(_18)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">_14 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _15)</td></tr></table>>];
    bb12__0_804 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>_40 = discriminant(_14)<br/></td></tr><tr><td align="left">switchInt(move _40)</td></tr></table>>];
    bb13__0_804 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_44)<br/>_44 = ((_14 as Continue).0: ())<br/>_13 = _44<br/>StorageDead(_44)<br/>_65 = discriminant(_14)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">drop(_33)</td></tr></table>>];
    bb14__0_804 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_41)<br/>_41 = move ((_14 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_43)<br/>_43 = move _41<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _43)</td></tr></table>>];
    bb15__0_804 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_41)<br/>_71 = discriminant(_14)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">drop(_33)</td></tr></table>>];
    bb16__0_804 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/>StorageDead(_28)<br/>StorageDead(_26)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/>StorageDead(_17)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>_3 = const ()<br/></td></tr><tr><td align="left">drop(_4)</td></tr></table>>];
    bb17__0_804 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>_62 = deref_copy (_1.1: &amp;mut handlers::handler_withdraw_obligation_collateral_and_redeem_reserve_collateral::WithdrawObligationCollateralAndRedeemReserveCollateral&lt;'_&gt;)<br/>_48 = &amp;(*_62)<br/>StorageLive(_49)<br/>_49 = _2<br/>StorageLive(_50)<br/>_50 = state::types::LtvMaxWithdrawalCheck::MaxLtv<br/></td></tr><tr><td align="left">_47 = handlers::handler_withdraw_obligation_collateral_and_redeem_reserve_collateral::process_impl(move _48, move _49, move _50)</td></tr></table>>];
    bb18__0_804 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageDead(_49)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">_46 = &lt;std::result::Result&lt;bool, anchor_lang::error::Error&gt; as Try&gt;::branch(move _47)</td></tr></table>>];
    bb19__0_804 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>_51 = discriminant(_46)<br/></td></tr><tr><td align="left">switchInt(move _51)</td></tr></table>>];
    bb20__0_804 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_55)<br/>_55 = ((_46 as Continue).0: bool)<br/>_45 = _55<br/>StorageDead(_55)<br/>_67 = discriminant(_46)<br/>StorageDead(_46)<br/>StorageDead(_45)<br/>StorageLive(_56)<br/>_56 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _56)<br/>StorageDead(_56)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_804 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_52)<br/>_52 = move ((_46 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_54)<br/>_54 = move _52<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _54)</td></tr></table>>];
    bb22__0_804 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_52)<br/>_69 = discriminant(_46)<br/>StorageDead(_46)<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_804 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/>StorageDead(_28)<br/>StorageDead(_26)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/>StorageDead(_17)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">drop(_4)</td></tr></table>>];
    bb24__0_804 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_804 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left">return</td></tr></table>>];
    bb26__0_804 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">26 (cleanup)</td></tr><tr><td align="left">drop(_33)</td></tr></table>>];
    bb27__0_804 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">27 (cleanup)</td></tr><tr><td align="left">drop(_4)</td></tr></table>>];
    bb28__0_804 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">28 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb29__0_804 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">29 (cleanup)</td></tr><tr><td align="left" balign="left">_75 = discriminant(_46)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_804 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">30 (cleanup)</td></tr><tr><td align="left" balign="left">_76 = discriminant(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_804 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">31 (cleanup)</td></tr><tr><td align="left" balign="left">_77 = discriminant(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_804 -> bb1__0_804 [label="return"];
    bb1__0_804 -> bb2__0_804 [label="return"];
    bb1__0_804 -> bb28__0_804 [label="unwind"];
    bb2__0_804 -> bb3__0_804 [label="0"];
    bb2__0_804 -> bb5__0_804 [label="1"];
    bb2__0_804 -> bb4__0_804 [label="otherwise"];
    bb3__0_804 -> bb7__0_804 [label="return"];
    bb3__0_804 -> bb27__0_804 [label="unwind"];
    bb5__0_804 -> bb6__0_804 [label="return"];
    bb5__0_804 -> bb31__0_804 [label="unwind"];
    bb6__0_804 -> bb24__0_804 [label=""];
    bb7__0_804 -> bb8__0_804 [label="return"];
    bb7__0_804 -> bb27__0_804 [label="unwind"];
    bb8__0_804 -> bb9__0_804 [label="return"];
    bb8__0_804 -> bb27__0_804 [label="unwind"];
    bb9__0_804 -> bb10__0_804 [label="return"];
    bb9__0_804 -> bb26__0_804 [label="unwind"];
    bb10__0_804 -> bb11__0_804 [label="return"];
    bb10__0_804 -> bb26__0_804 [label="unwind"];
    bb11__0_804 -> bb12__0_804 [label="return"];
    bb11__0_804 -> bb26__0_804 [label="unwind"];
    bb12__0_804 -> bb13__0_804 [label="0"];
    bb12__0_804 -> bb14__0_804 [label="1"];
    bb12__0_804 -> bb4__0_804 [label="otherwise"];
    bb13__0_804 -> bb16__0_804 [label="return"];
    bb13__0_804 -> bb27__0_804 [label="unwind"];
    bb14__0_804 -> bb15__0_804 [label="return"];
    bb14__0_804 -> bb30__0_804 [label="unwind"];
    bb15__0_804 -> bb23__0_804 [label="return"];
    bb15__0_804 -> bb27__0_804 [label="unwind"];
    bb16__0_804 -> bb17__0_804 [label="return"];
    bb16__0_804 -> bb28__0_804 [label="unwind"];
    bb17__0_804 -> bb18__0_804 [label="return"];
    bb18__0_804 -> bb19__0_804 [label="return"];
    bb18__0_804 -> bb28__0_804 [label="unwind"];
    bb19__0_804 -> bb20__0_804 [label="0"];
    bb19__0_804 -> bb21__0_804 [label="1"];
    bb19__0_804 -> bb4__0_804 [label="otherwise"];
    bb20__0_804 -> bb25__0_804 [label=""];
    bb21__0_804 -> bb22__0_804 [label="return"];
    bb21__0_804 -> bb29__0_804 [label="unwind"];
    bb22__0_804 -> bb25__0_804 [label=""];
    bb23__0_804 -> bb24__0_804 [label="return"];
    bb23__0_804 -> bb28__0_804 [label="unwind"];
    bb24__0_804 -> bb25__0_804 [label=""];
    bb26__0_804 -> bb27__0_804 [label="return"];
    bb27__0_804 -> bb28__0_804 [label="return"];
    bb29__0_804 -> bb28__0_804 [label=""];
    bb30__0_804 -> bb26__0_804 [label=""];
    bb31__0_804 -> bb28__0_804 [label=""];
}
