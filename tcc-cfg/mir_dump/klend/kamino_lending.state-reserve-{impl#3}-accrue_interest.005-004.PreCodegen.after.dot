digraph Mir_0_1882 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn reserve::Reserve::accrue_interest(_1: &amp;ReErased mut state::reserve::Reserve, _2: u64, _3: u16) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _4: u64;<br align="left"/>let mut _5: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, u64&gt;;<br align="left"/>let mut _6: std::result::Result&lt;u64, anchor_lang::error::Error&gt;;<br align="left"/>let mut _7: &amp;ReErased state::last_update::LastUpdate;<br align="left"/>let mut _8: u64;<br align="left"/>let mut _9: isize;<br align="left"/>let _10: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _11: !;<br align="left"/>let mut _12: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _13: u64;<br align="left"/>let _14: ();<br align="left"/>let mut _15: bool;<br align="left"/>let mut _16: u64;<br align="left"/>let _17: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _18: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;&gt;;<br align="left"/>let mut _19: std::result::Result&lt;fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _20: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _21: isize;<br align="left"/>let _22: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _23: !;<br align="left"/>let mut _24: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _25: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _26: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _27: u8;<br align="left"/>let _28: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _29: u16;<br align="left"/>let _30: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _31: u16;<br align="left"/>let _32: ();<br align="left"/>let mut _33: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, LendingError&gt;, ()&gt;;<br align="left"/>let mut _34: std::result::Result&lt;(), LendingError&gt;;<br align="left"/>let mut _35: &amp;ReErased mut state::reserve::ReserveLiquidity;<br align="left"/>let mut _36: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _37: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _38: u64;<br align="left"/>let mut _39: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _40: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _41: isize;<br align="left"/>let _42: std::result::Result&lt;std::convert::Infallible, LendingError&gt;;<br align="left"/>let mut _43: !;<br align="left"/>let mut _44: std::result::Result&lt;std::convert::Infallible, LendingError&gt;;<br align="left"/>let _45: ();<br align="left"/>let mut _46: ();<br align="left"/>let mut _47: isize;<br align="left"/>let mut _48: isize;<br align="left"/>let mut _49: isize;<br align="left"/>let mut _50: isize;<br align="left"/>let mut _51: isize;<br align="left"/>let mut _52: isize;<br align="left"/>let mut _53: isize;<br align="left"/>let mut _54: isize;<br align="left"/>let mut _55: isize;<br align="left"/>let mut _56: isize;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug current_slot =&gt; _2;<br align="left"/>debug referral_fee_bps =&gt; _3;<br align="left"/>debug slots_elapsed =&gt; _4;<br align="left"/>debug residual =&gt; _10;<br align="left"/>debug val =&gt; _13;<br align="left"/>debug current_borrow_rate =&gt; _17;<br align="left"/>debug residual =&gt; _22;<br align="left"/>debug val =&gt; _25;<br align="left"/>debug protocol_take_rate =&gt; _26;<br align="left"/>debug referral_rate =&gt; _28;<br align="left"/>debug host_fixed_interest_rate =&gt; _30;<br align="left"/>debug residual =&gt; _42;<br align="left"/>debug val =&gt; _45;<br align="left"/>>;
    bb0__0_1882 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = &amp;((*_1).1: state::last_update::LastUpdate)<br/>StorageLive(_8)<br/>_8 = _2<br/></td></tr><tr><td align="left">_6 = last_update::LastUpdate::slots_elapsed(move _7, move _8)</td></tr></table>>];
    bb1__0_1882 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">_5 = &lt;std::result::Result&lt;u64, anchor_lang::error::Error&gt; as Try&gt;::branch(move _6)</td></tr></table>>];
    bb2__0_1882 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_9 = discriminant(_5)<br/></td></tr><tr><td align="left">switchInt(move _9)</td></tr></table>>];
    bb3__0_1882 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = ((_5 as Continue).0: u64)<br/>_4 = _13<br/>StorageDead(_13)<br/>_47 = discriminant(_5)<br/>StorageDead(_5)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_16 = _4<br/>_15 = Gt(move _16, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _15)</td></tr></table>>];
    bb4__0_1882 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_1882 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>_10 = move ((_5 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_12)<br/>_12 = move _10<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _12)</td></tr></table>>];
    bb6__0_1882 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_10)<br/>_53 = discriminant(_5)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_1882 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_20 = &amp;(*_1)<br/></td></tr><tr><td align="left">_19 = reserve::Reserve::current_borrow_rate(move _20)</td></tr></table>>];
    bb8__0_1882 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/></td></tr><tr><td align="left">_18 = &lt;std::result::Result&lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _19)</td></tr></table>>];
    bb9__0_1882 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>_21 = discriminant(_18)<br/></td></tr><tr><td align="left">switchInt(move _21)</td></tr></table>>];
    bb10__0_1882 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_25)<br/>_25 = ((_18 as Continue).0: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;)<br/>_17 = _25<br/>StorageDead(_25)<br/>_49 = discriminant(_18)<br/>StorageDead(_18)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_27 = (((*_1).9: state::reserve::ReserveConfig).5: u8)<br/></td></tr><tr><td align="left">_26 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as utils::fraction::FractionExtra&gt;::from_percent::&lt;u8&gt;(move _27)</td></tr></table>>];
    bb11__0_1882 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_22)<br/>_22 = move ((_18 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_24)<br/>_24 = move _22<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _24)</td></tr></table>>];
    bb12__0_1882 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_22)<br/>_51 = discriminant(_18)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_1882 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_29 = _3<br/></td></tr><tr><td align="left">_28 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as utils::fraction::FractionExtra&gt;::from_bps::&lt;u16&gt;(move _29)</td></tr></table>>];
    bb14__0_1882 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>_31 = (((*_1).9: state::reserve::ReserveConfig).2: u16)<br/></td></tr><tr><td align="left">_30 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as utils::fraction::FractionExtra&gt;::from_bps::&lt;u16&gt;(move _31)</td></tr></table>>];
    bb15__0_1882 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>_35 = &amp;mut ((*_1).5: state::reserve::ReserveLiquidity)<br/>StorageLive(_36)<br/>_36 = _17<br/>StorageLive(_37)<br/>_37 = _30<br/>StorageLive(_38)<br/>_38 = _4<br/>StorageLive(_39)<br/>_39 = _26<br/>StorageLive(_40)<br/>_40 = _28<br/></td></tr><tr><td align="left">_34 = ReserveLiquidity::compound_interest(move _35, move _36, move _37, move _38, move _39, move _40)</td></tr></table>>];
    bb16__0_1882 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageDead(_39)<br/>StorageDead(_38)<br/>StorageDead(_37)<br/>StorageDead(_36)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">_33 = &lt;std::result::Result&lt;(), LendingError&gt; as Try&gt;::branch(move _34)</td></tr></table>>];
    bb17__0_1882 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>_41 = discriminant(_33)<br/></td></tr><tr><td align="left">switchInt(move _41)</td></tr></table>>];
    bb18__0_1882 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_45)<br/>_45 = ((_33 as Continue).0: ())<br/>_32 = _45<br/>StorageDead(_45)<br/>StorageDead(_33)<br/>StorageDead(_32)<br/>_14 = const ()<br/>StorageDead(_30)<br/>StorageDead(_28)<br/>StorageDead(_26)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_1882 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_42)<br/>_42 = ((_33 as Break).0: std::result::Result&lt;std::convert::Infallible, LendingError&gt;)<br/>StorageLive(_44)<br/>_44 = _42<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, LendingError&gt;&gt;&gt;::from_residual(move _44)</td></tr></table>>];
    bb20__0_1882 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_42)<br/>StorageDead(_33)<br/>StorageDead(_32)<br/>StorageDead(_30)<br/>StorageDead(_28)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_1882 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>_14 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_1882 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_14)<br/>StorageLive(_46)<br/>_46 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _46)<br/>StorageDead(_46)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_1882 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_1882 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_1882 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left">return</td></tr></table>>];
    bb26__0_1882 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">26 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb27__0_1882 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">27 (cleanup)</td></tr><tr><td align="left" balign="left">_55 = discriminant(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_1882 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">28 (cleanup)</td></tr><tr><td align="left" balign="left">_56 = discriminant(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_1882 -> bb1__0_1882 [label="return"];
    bb1__0_1882 -> bb2__0_1882 [label="return"];
    bb1__0_1882 -> bb26__0_1882 [label="unwind"];
    bb2__0_1882 -> bb3__0_1882 [label="0"];
    bb2__0_1882 -> bb5__0_1882 [label="1"];
    bb2__0_1882 -> bb4__0_1882 [label="otherwise"];
    bb3__0_1882 -> bb21__0_1882 [label="0"];
    bb3__0_1882 -> bb7__0_1882 [label="otherwise"];
    bb5__0_1882 -> bb6__0_1882 [label="return"];
    bb5__0_1882 -> bb28__0_1882 [label="unwind"];
    bb6__0_1882 -> bb24__0_1882 [label=""];
    bb7__0_1882 -> bb8__0_1882 [label="return"];
    bb8__0_1882 -> bb9__0_1882 [label="return"];
    bb8__0_1882 -> bb26__0_1882 [label="unwind"];
    bb9__0_1882 -> bb10__0_1882 [label="0"];
    bb9__0_1882 -> bb11__0_1882 [label="1"];
    bb9__0_1882 -> bb4__0_1882 [label="otherwise"];
    bb10__0_1882 -> bb13__0_1882 [label="return"];
    bb11__0_1882 -> bb12__0_1882 [label="return"];
    bb11__0_1882 -> bb27__0_1882 [label="unwind"];
    bb12__0_1882 -> bb23__0_1882 [label=""];
    bb13__0_1882 -> bb14__0_1882 [label="return"];
    bb14__0_1882 -> bb15__0_1882 [label="return"];
    bb15__0_1882 -> bb16__0_1882 [label="return"];
    bb16__0_1882 -> bb17__0_1882 [label="return"];
    bb17__0_1882 -> bb18__0_1882 [label="0"];
    bb17__0_1882 -> bb19__0_1882 [label="1"];
    bb17__0_1882 -> bb4__0_1882 [label="otherwise"];
    bb18__0_1882 -> bb22__0_1882 [label=""];
    bb19__0_1882 -> bb20__0_1882 [label="return"];
    bb20__0_1882 -> bb23__0_1882 [label=""];
    bb21__0_1882 -> bb22__0_1882 [label=""];
    bb22__0_1882 -> bb25__0_1882 [label=""];
    bb23__0_1882 -> bb24__0_1882 [label=""];
    bb24__0_1882 -> bb25__0_1882 [label=""];
    bb27__0_1882 -> bb26__0_1882 [label=""];
    bb28__0_1882 -> bb26__0_1882 [label=""];
}
