digraph Mir_0_1788 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn OpportunityType::is_supported_by(_1: &amp;ReErased state::order_operations::OpportunityType, _2: &amp;ReErased state::obligation::Obligation) -&gt; bool<br align="left"/>let mut _3: u8;<br align="left"/>let mut _4: &amp;ReErased std::option::Option&lt;&amp;ReErased state::obligation::ObligationLiquidity&gt;;<br align="left"/>let _5: std::option::Option&lt;&amp;ReErased state::obligation::ObligationLiquidity&gt;;<br align="left"/>let mut _6: &amp;ReErased state::obligation::Obligation;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug obligation =&gt; _2;<br align="left"/>>;
    bb0__0_1788 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_3 = discriminant((*_1))<br/></td></tr><tr><td align="left">switchInt(move _3)</td></tr></table>>];
    bb1__0_1788 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_0 = const true<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb2__0_1788 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb3__0_1788 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = &amp;(*_2)<br/></td></tr><tr><td align="left">_5 = obligation::Obligation::single_debt(move _6)</td></tr></table>>];
    bb4__0_1788 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">_4 = &amp;_5<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">_0 = std::option::Option::&lt;&amp;obligation::ObligationLiquidity&gt;::is_some(move _4)</td></tr></table>>];
    bb5__0_1788 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb6__0_1788 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_1788 -> bb3__0_1788 [label="0"];
    bb0__0_1788 -> bb1__0_1788 [label="1"];
    bb0__0_1788 -> bb2__0_1788 [label="otherwise"];
    bb1__0_1788 -> bb6__0_1788 [label=""];
    bb3__0_1788 -> bb4__0_1788 [label="return"];
    bb4__0_1788 -> bb5__0_1788 [label="return"];
    bb5__0_1788 -> bb6__0_1788 [label=""];
}
