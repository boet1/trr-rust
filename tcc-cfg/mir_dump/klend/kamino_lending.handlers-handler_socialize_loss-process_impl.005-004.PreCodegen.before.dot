digraph Mir_0_660 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn handlers::handler_socialize_loss::process_impl(_1: &amp;ReErased handlers::handler_socialize_loss::SocializeLoss&lt;ReErased&gt;, _2: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;], _3: u64) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _4: anchor_lang::prelude::Clock;<br align="left"/>let mut _5: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _6: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _7: isize;<br align="left"/>let _8: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _9: !;<br align="left"/>let mut _10: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _11: anchor_lang::prelude::Clock;<br align="left"/>let _12: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _13: std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _14: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;&gt;;<br align="left"/>let mut _15: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _16: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _17: isize;<br align="left"/>let _18: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _19: !;<br align="left"/>let mut _20: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _21: std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let _22: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let mut _23: std::cell::RefMut&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let mut _24: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::RefMut&lt;ReErased, state::obligation::Obligation&gt;&gt;;<br align="left"/>let mut _25: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::obligation::Obligation&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _26: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let mut _27: isize;<br align="left"/>let _28: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _29: !;<br align="left"/>let mut _30: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _31: std::cell::RefMut&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let _32: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _33: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;&gt;;<br align="left"/>let mut _34: std::result::Result&lt;fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _35: &amp;ReErased mut state::reserve::Reserve;<br align="left"/>let mut _36: &amp;ReErased mut state::reserve::Reserve;<br align="left"/>let mut _37: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _38: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _39: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _40: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _41: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::reserve::Reserve&gt;;<br align="left"/>let mut _42: &amp;ReErased mut state::obligation::Obligation;<br align="left"/>let mut _43: &amp;ReErased mut state::obligation::Obligation;<br align="left"/>let mut _44: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::obligation::Obligation&gt;;<br align="left"/>let mut _45: u64;<br align="left"/>let mut _46: u64;<br align="left"/>let mut _47: std::iter::Map&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;, Closure(DefId(0:661 ~ kamino_lending[6389]::handlers::handler_socialize_loss::process_impl::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;,)) -&gt; utils::account_loader_trait::FatAccountLoader&lt;ReErased, state::reserve::Reserve&gt;, []), ()])&gt;;<br align="left"/>let mut _48: std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _49: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _50: Closure(DefId(0:661 ~ kamino_lending[6389]::handlers::handler_socialize_loss::process_impl::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;,)) -&gt; utils::account_loader_trait::FatAccountLoader&lt;ReErased, state::reserve::Reserve&gt;, []), ()]);<br align="left"/>let mut _51: isize;<br align="left"/>let _52: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _53: !;<br align="left"/>let mut _54: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _55: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _56: ();<br align="left"/>let mut _57: isize;<br align="left"/>let mut _58: isize;<br align="left"/>let mut _59: isize;<br align="left"/>let mut _60: isize;<br align="left"/>let mut _61: isize;<br align="left"/>let mut _62: isize;<br align="left"/>let mut _63: isize;<br align="left"/>let mut _64: isize;<br align="left"/>let mut _65: isize;<br align="left"/>let mut _66: isize;<br align="left"/>let mut _67: isize;<br align="left"/>let mut _68: isize;<br align="left"/>let mut _69: isize;<br align="left"/>let mut _70: isize;<br align="left"/>let mut _71: isize;<br align="left"/>let mut _72: isize;<br align="left"/>let mut _73: isize;<br align="left"/>let mut _74: isize;<br align="left"/>let mut _75: isize;<br align="left"/>let mut _76: isize;<br align="left"/>debug accounts =&gt; _1;<br align="left"/>debug remaining_accounts =&gt; _2;<br align="left"/>debug liquidity_amount =&gt; _3;<br align="left"/>debug clock =&gt; _4;<br align="left"/>debug residual =&gt; _8;<br align="left"/>debug val =&gt; _11;<br align="left"/>debug repay_reserve =&gt; _12;<br align="left"/>debug residual =&gt; _18;<br align="left"/>debug val =&gt; _21;<br align="left"/>debug obligation =&gt; _22;<br align="left"/>debug residual =&gt; _28;<br align="left"/>debug val =&gt; _31;<br align="left"/>debug residual =&gt; _52;<br align="left"/>debug val =&gt; _55;<br align="left"/>>;
    bb0__0_660 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/></td></tr><tr><td align="left">_6 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb1__0_660 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">_5 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _6)</td></tr></table>>];
    bb2__0_660 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_7 = discriminant(_5)<br/></td></tr><tr><td align="left">switchInt(move _7)</td></tr></table>>];
    bb3__0_660 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = move ((_5 as Continue).0: anchor_lang::prelude::Clock)<br/>_4 = move _11<br/>StorageDead(_11)<br/>_57 = discriminant(_5)<br/>StorageDead(_5)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_16 = &amp;((*_1).3: anchor_lang::prelude::AccountLoader&lt;'_, state::reserve::Reserve&gt;)<br/></td></tr><tr><td align="left">_15 = anchor_lang::prelude::AccountLoader::&lt;'_, reserve::Reserve&gt;::load_mut(move _16)</td></tr></table>>];
    bb4__0_660 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_660 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/>_8 = move ((_5 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_10)<br/>_10 = move _8<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _10)</td></tr></table>>];
    bb6__0_660 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_8)<br/>_71 = discriminant(_5)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_660 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/></td></tr><tr><td align="left">_14 = &lt;std::result::Result&lt;RefMut&lt;'_, reserve::Reserve&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _15)</td></tr></table>>];
    bb8__0_660 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>_17 = discriminant(_14)<br/></td></tr><tr><td align="left">switchInt(move _17)</td></tr></table>>];
    bb9__0_660 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = move ((_14 as Continue).0: std::cell::RefMut&lt;'_, state::reserve::Reserve&gt;)<br/>_13 = move _21<br/>StorageDead(_21)<br/>_12 = &amp;mut _13<br/>_59 = discriminant(_14)<br/>StorageDead(_14)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_26 = &amp;((*_1).1: anchor_lang::prelude::AccountLoader&lt;'_, state::obligation::Obligation&gt;)<br/></td></tr><tr><td align="left">_25 = anchor_lang::prelude::AccountLoader::&lt;'_, obligation::Obligation&gt;::load_mut(move _26)</td></tr></table>>];
    bb10__0_660 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_18)<br/>_18 = move ((_14 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_20)<br/>_20 = move _18<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _20)</td></tr></table>>];
    bb11__0_660 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_18)<br/>_69 = discriminant(_14)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_660 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/></td></tr><tr><td align="left">_24 = &lt;std::result::Result&lt;RefMut&lt;'_, obligation::Obligation&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _25)</td></tr></table>>];
    bb13__0_660 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>_27 = discriminant(_24)<br/></td></tr><tr><td align="left">switchInt(move _27)</td></tr></table>>];
    bb14__0_660 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_31)<br/>_31 = move ((_24 as Continue).0: std::cell::RefMut&lt;'_, state::obligation::Obligation&gt;)<br/>_23 = move _31<br/>StorageDead(_31)<br/>_22 = &amp;mut _23<br/>_61 = discriminant(_24)<br/>StorageDead(_24)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>_37 = &amp;mut (*_12)<br/></td></tr><tr><td align="left">_36 = &lt;RefMut&lt;'_, reserve::Reserve&gt; as DerefMut&gt;::deref_mut(move _37)</td></tr></table>>];
    bb15__0_660 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_28)<br/>_28 = move ((_24 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_30)<br/>_30 = move _28<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _30)</td></tr></table>>];
    bb16__0_660 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_28)<br/>_67 = discriminant(_24)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_660 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">_35 = &amp;mut (*_36)<br/>StorageDead(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>_41 = &amp;((*_1).3: anchor_lang::prelude::AccountLoader&lt;'_, state::reserve::Reserve&gt;)<br/></td></tr><tr><td align="left">_40 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, reserve::Reserve&gt; as anchor_lang::Key&gt;::key(move _41)</td></tr></table>>];
    bb18__0_660 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>_39 = &amp;_40<br/>_38 = &amp;(*_39)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>_44 = &amp;mut (*_22)<br/></td></tr><tr><td align="left">_43 = &lt;RefMut&lt;'_, obligation::Obligation&gt; as DerefMut&gt;::deref_mut(move _44)</td></tr></table>>];
    bb19__0_660 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">_42 = &amp;mut (*_43)<br/>StorageDead(_44)<br/>StorageLive(_45)<br/>_45 = _3<br/>StorageLive(_46)<br/>_46 = (_4.0: u64)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>_49 = &amp;(*_2)<br/></td></tr><tr><td align="left">_48 = core::slice::&lt;impl [anchor_lang::prelude::AccountInfo&lt;'_&gt;]&gt;::iter(move _49)</td></tr></table>>];
    bb20__0_660 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageLive(_50)<br/>_50 = {closure@programs\klend\src\handlers\handler_socialize_loss.rs:56:39: 56:42}<br/></td></tr><tr><td align="left">_47 = &lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as Iterator&gt;::map::&lt;account_loader_trait::FatAccountLoader&lt;'_, reserve::Reserve&gt;, {closure@programs\klend\src\handlers\handler_socialize_loss.rs:56:39: 56:42}&gt;(move _48, move _50)</td></tr></table>>];
    bb21__0_660 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">_34 = lending_operations::socialize_loss::&lt;'_, account_loader_trait::FatAccountLoader&lt;'_, reserve::Reserve&gt;, std::iter::Map&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;, {closure@programs\klend\src\handlers\handler_socialize_loss.rs:56:39: 56:42}&gt;&gt;(move _35, move _38, move _42, move _45, move _46, move _47)</td></tr></table>>];
    bb22__0_660 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_46)<br/>StorageDead(_45)<br/>StorageDead(_42)<br/>StorageDead(_38)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">_33 = &lt;std::result::Result&lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _34)</td></tr></table>>];
    bb23__0_660 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>_51 = discriminant(_33)<br/></td></tr><tr><td align="left">switchInt(move _51)</td></tr></table>>];
    bb24__0_660 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_55)<br/>_55 = ((_33 as Continue).0: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;)<br/>_32 = _55<br/>StorageDead(_55)<br/>_63 = discriminant(_33)<br/>StorageDead(_43)<br/>StorageDead(_40)<br/>StorageDead(_39)<br/>StorageDead(_36)<br/>StorageDead(_33)<br/>StorageDead(_32)<br/>StorageLive(_56)<br/>_56 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _56)<br/>StorageDead(_56)<br/></td></tr><tr><td align="left">drop(_23)</td></tr></table>>];
    bb25__0_660 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_52)<br/>_52 = move ((_33 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_54)<br/>_54 = move _52<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _54)</td></tr></table>>];
    bb26__0_660 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_52)<br/>_65 = discriminant(_33)<br/>StorageDead(_43)<br/>StorageDead(_40)<br/>StorageDead(_39)<br/>StorageDead(_36)<br/>StorageDead(_33)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">drop(_23)</td></tr></table>>];
    bb27__0_660 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">drop(_13)</td></tr></table>>];
    bb28__0_660 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_660 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">drop(_13)</td></tr></table>>];
    bb30__0_660 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_660 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_660 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left">return</td></tr></table>>];
    bb33__0_660 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">33 (cleanup)</td></tr><tr><td align="left">drop(_23)</td></tr></table>>];
    bb34__0_660 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">34 (cleanup)</td></tr><tr><td align="left">drop(_13)</td></tr></table>>];
    bb35__0_660 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">35 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb36__0_660 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">36 (cleanup)</td></tr><tr><td align="left" balign="left">_73 = discriminant(_33)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_660 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">37 (cleanup)</td></tr><tr><td align="left" balign="left">_74 = discriminant(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_660 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">38 (cleanup)</td></tr><tr><td align="left" balign="left">_75 = discriminant(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_660 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">39 (cleanup)</td></tr><tr><td align="left" balign="left">_76 = discriminant(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_660 -> bb1__0_660 [label="return"];
    bb1__0_660 -> bb2__0_660 [label="return"];
    bb1__0_660 -> bb35__0_660 [label="unwind"];
    bb2__0_660 -> bb3__0_660 [label="0"];
    bb2__0_660 -> bb5__0_660 [label="1"];
    bb2__0_660 -> bb4__0_660 [label="otherwise"];
    bb3__0_660 -> bb7__0_660 [label="return"];
    bb5__0_660 -> bb6__0_660 [label="return"];
    bb5__0_660 -> bb39__0_660 [label="unwind"];
    bb6__0_660 -> bb31__0_660 [label=""];
    bb7__0_660 -> bb8__0_660 [label="return"];
    bb7__0_660 -> bb35__0_660 [label="unwind"];
    bb8__0_660 -> bb9__0_660 [label="0"];
    bb8__0_660 -> bb10__0_660 [label="1"];
    bb8__0_660 -> bb4__0_660 [label="otherwise"];
    bb9__0_660 -> bb12__0_660 [label="return"];
    bb9__0_660 -> bb34__0_660 [label="unwind"];
    bb10__0_660 -> bb11__0_660 [label="return"];
    bb10__0_660 -> bb38__0_660 [label="unwind"];
    bb11__0_660 -> bb30__0_660 [label=""];
    bb12__0_660 -> bb13__0_660 [label="return"];
    bb12__0_660 -> bb34__0_660 [label="unwind"];
    bb13__0_660 -> bb14__0_660 [label="0"];
    bb13__0_660 -> bb15__0_660 [label="1"];
    bb13__0_660 -> bb4__0_660 [label="otherwise"];
    bb14__0_660 -> bb17__0_660 [label="return"];
    bb14__0_660 -> bb33__0_660 [label="unwind"];
    bb15__0_660 -> bb16__0_660 [label="return"];
    bb15__0_660 -> bb37__0_660 [label="unwind"];
    bb16__0_660 -> bb29__0_660 [label=""];
    bb17__0_660 -> bb18__0_660 [label="return"];
    bb17__0_660 -> bb33__0_660 [label="unwind"];
    bb18__0_660 -> bb19__0_660 [label="return"];
    bb18__0_660 -> bb33__0_660 [label="unwind"];
    bb19__0_660 -> bb20__0_660 [label="return"];
    bb19__0_660 -> bb33__0_660 [label="unwind"];
    bb20__0_660 -> bb21__0_660 [label="return"];
    bb20__0_660 -> bb33__0_660 [label="unwind"];
    bb21__0_660 -> bb22__0_660 [label="return"];
    bb21__0_660 -> bb33__0_660 [label="unwind"];
    bb22__0_660 -> bb23__0_660 [label="return"];
    bb22__0_660 -> bb33__0_660 [label="unwind"];
    bb23__0_660 -> bb24__0_660 [label="0"];
    bb23__0_660 -> bb25__0_660 [label="1"];
    bb23__0_660 -> bb4__0_660 [label="otherwise"];
    bb24__0_660 -> bb27__0_660 [label="return"];
    bb24__0_660 -> bb34__0_660 [label="unwind"];
    bb25__0_660 -> bb26__0_660 [label="return"];
    bb25__0_660 -> bb36__0_660 [label="unwind"];
    bb26__0_660 -> bb29__0_660 [label="return"];
    bb26__0_660 -> bb34__0_660 [label="unwind"];
    bb27__0_660 -> bb28__0_660 [label="return"];
    bb27__0_660 -> bb35__0_660 [label="unwind"];
    bb28__0_660 -> bb32__0_660 [label=""];
    bb29__0_660 -> bb30__0_660 [label="return"];
    bb29__0_660 -> bb35__0_660 [label="unwind"];
    bb30__0_660 -> bb31__0_660 [label=""];
    bb31__0_660 -> bb32__0_660 [label=""];
    bb33__0_660 -> bb34__0_660 [label="return"];
    bb34__0_660 -> bb35__0_660 [label="return"];
    bb36__0_660 -> bb33__0_660 [label=""];
    bb37__0_660 -> bb34__0_660 [label=""];
    bb38__0_660 -> bb35__0_660 [label=""];
    bb39__0_660 -> bb35__0_660 [label=""];
}
