// MIR for `flash_borrow_checks` before PreCodegen

fn flash_borrow_checks(_1: &anchor_lang::context::Context<'_, '_, '_, '_, handlers::handler_flash_borrow_reserve_liquidity::FlashBorrowReserveLiquidity<'_>>, _2: u64) -> std::result::Result<(), anchor_lang::error::Error> {
    debug ctx => _1;
    debug liquidity_amount => _2;
    let mut _0: std::result::Result<(), anchor_lang::error::Error>;
    let _3: lending_market::ix_utils::BpfInstructionLoader<'_, '_>;
    let mut _4: &anchor_lang::prelude::AccountInfo<'_>;
    let _5: &anchor_lang::prelude::AccountInfo<'_>;
    let mut _6: u64;
    let mut _7: &lending_market::ix_utils::BpfInstructionLoader<'_, '_>;
    let _8: &lending_market::ix_utils::BpfInstructionLoader<'_, '_>;
    let mut _9: &mut handlers::handler_flash_borrow_reserve_liquidity::FlashBorrowReserveLiquidity<'_>;
    scope 1 {
        debug instruction_loader => _3;
    }

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        StorageLive(_5);
        _9 = deref_copy ((*_1).1: &mut handlers::handler_flash_borrow_reserve_liquidity::FlashBorrowReserveLiquidity<'_>);
        _5 = &((*_9).10: anchor_lang::prelude::AccountInfo<'_>);
        _4 = &(*_5);
        _3 = BpfInstructionLoader::<'_, '_> { instruction_sysvar_account_info: move _4 };
        StorageDead(_4);
        StorageDead(_5);
        StorageLive(_6);
        _6 = _2;
        StorageLive(_7);
        StorageLive(_8);
        _8 = &_3;
        _7 = &(*_8);
        _0 = flash_borrow_checks_internal::<BpfInstructionLoader<'_, '_>>(move _6, move _7) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_7);
        StorageDead(_6);
        StorageDead(_3);
        StorageDead(_8);
        return;
    }
}
