// MIR for `handlers::handler_refresh_obligation_farms_for_reserve::<impl at programs\klend\src\handlers\handler_refresh_obligation_farms_for_reserve.rs:77:10: 77:18>::to_account_metas` after PreCodegen

fn handlers::handler_refresh_obligation_farms_for_reserve::<impl at programs\klend\src\handlers\handler_refresh_obligation_farms_for_reserve.rs:77:10: 77:18>::to_account_metas(_1: &handlers::handler_refresh_obligation_farms_for_reserve::RefreshObligationFarmsForReserve<'_>, _2: std::option::Option<bool>) -> Vec<anchor_lang::prelude::AccountMeta> {
    debug self => _1;
    debug is_signer => _2;
    let mut _0: std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _3: std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let _4: ();
    let mut _5: &mut std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _6: std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _7: &anchor_lang::prelude::Signer<'_>;
    let mut _8: std::option::Option<bool>;
    let _9: ();
    let mut _10: &mut std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _11: std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _12: &handlers::handler_refresh_obligation_farms_for_reserve::RefreshObligationFarmsForReserveBase<'_>;
    let mut _13: std::option::Option<bool>;
    let _14: ();
    let mut _15: &mut std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _16: std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _17: &anchor_lang::prelude::Program<'_, farms::program::Farms>;
    let mut _18: std::option::Option<bool>;
    let _19: ();
    let mut _20: &mut std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _21: std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _22: &anchor_lang::prelude::Sysvar<'_, anchor_lang::prelude::Rent>;
    let mut _23: std::option::Option<bool>;
    let _24: ();
    let mut _25: &mut std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _26: std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _27: &anchor_lang::prelude::Program<'_, anchor_lang::system_program::System>;
    let mut _28: std::option::Option<bool>;
    scope 1 {
        debug account_metas => _3;
    }

    bb0: {
        StorageLive(_3);
        _3 = Vec::<anchor_lang::prelude::AccountMeta>::new() -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageLive(_4);
        StorageLive(_5);
        _5 = &mut _3;
        StorageLive(_6);
        StorageLive(_7);
        _7 = &((*_1).0: anchor_lang::prelude::Signer<'_>);
        StorageLive(_8);
        _8 = std::option::Option::<bool>::None;
        _6 = <anchor_lang::prelude::Signer<'_> as anchor_lang::ToAccountMetas>::to_account_metas(move _7, move _8) -> [return: bb2, unwind: bb12];
    }

    bb2: {
        StorageDead(_8);
        StorageDead(_7);
        _4 = <Vec<anchor_lang::prelude::AccountMeta> as Extend<anchor_lang::prelude::AccountMeta>>::extend::<Vec<anchor_lang::prelude::AccountMeta>>(move _5, move _6) -> [return: bb3, unwind: bb12];
    }

    bb3: {
        StorageDead(_6);
        StorageDead(_5);
        StorageDead(_4);
        StorageLive(_9);
        StorageLive(_10);
        _10 = &mut _3;
        StorageLive(_11);
        StorageLive(_12);
        _12 = &((*_1).1: handlers::handler_refresh_obligation_farms_for_reserve::RefreshObligationFarmsForReserveBase<'_>);
        StorageLive(_13);
        _13 = std::option::Option::<bool>::None;
        _11 = <handlers::handler_refresh_obligation_farms_for_reserve::RefreshObligationFarmsForReserveBase<'_> as anchor_lang::ToAccountMetas>::to_account_metas(move _12, move _13) -> [return: bb4, unwind: bb12];
    }

    bb4: {
        StorageDead(_13);
        StorageDead(_12);
        _9 = <Vec<anchor_lang::prelude::AccountMeta> as Extend<anchor_lang::prelude::AccountMeta>>::extend::<Vec<anchor_lang::prelude::AccountMeta>>(move _10, move _11) -> [return: bb5, unwind: bb12];
    }

    bb5: {
        StorageDead(_11);
        StorageDead(_10);
        StorageDead(_9);
        StorageLive(_14);
        StorageLive(_15);
        _15 = &mut _3;
        StorageLive(_16);
        StorageLive(_17);
        _17 = &((*_1).2: anchor_lang::prelude::Program<'_, farms::program::Farms>);
        StorageLive(_18);
        _18 = std::option::Option::<bool>::None;
        _16 = <anchor_lang::prelude::Program<'_, Farms> as anchor_lang::ToAccountMetas>::to_account_metas(move _17, move _18) -> [return: bb6, unwind: bb12];
    }

    bb6: {
        StorageDead(_18);
        StorageDead(_17);
        _14 = <Vec<anchor_lang::prelude::AccountMeta> as Extend<anchor_lang::prelude::AccountMeta>>::extend::<Vec<anchor_lang::prelude::AccountMeta>>(move _15, move _16) -> [return: bb7, unwind: bb12];
    }

    bb7: {
        StorageDead(_16);
        StorageDead(_15);
        StorageDead(_14);
        StorageLive(_19);
        StorageLive(_20);
        _20 = &mut _3;
        StorageLive(_21);
        StorageLive(_22);
        _22 = &((*_1).3: anchor_lang::prelude::Sysvar<'_, anchor_lang::prelude::Rent>);
        StorageLive(_23);
        _23 = std::option::Option::<bool>::None;
        _21 = <anchor_lang::prelude::Sysvar<'_, anchor_lang::prelude::Rent> as anchor_lang::ToAccountMetas>::to_account_metas(move _22, move _23) -> [return: bb8, unwind: bb12];
    }

    bb8: {
        StorageDead(_23);
        StorageDead(_22);
        _19 = <Vec<anchor_lang::prelude::AccountMeta> as Extend<anchor_lang::prelude::AccountMeta>>::extend::<Vec<anchor_lang::prelude::AccountMeta>>(move _20, move _21) -> [return: bb9, unwind: bb12];
    }

    bb9: {
        StorageDead(_21);
        StorageDead(_20);
        StorageDead(_19);
        StorageLive(_24);
        StorageLive(_25);
        _25 = &mut _3;
        StorageLive(_26);
        StorageLive(_27);
        _27 = &((*_1).4: anchor_lang::prelude::Program<'_, anchor_lang::system_program::System>);
        StorageLive(_28);
        _28 = std::option::Option::<bool>::None;
        _26 = <anchor_lang::prelude::Program<'_, anchor_lang::system_program::System> as anchor_lang::ToAccountMetas>::to_account_metas(move _27, move _28) -> [return: bb10, unwind: bb12];
    }

    bb10: {
        StorageDead(_28);
        StorageDead(_27);
        _24 = <Vec<anchor_lang::prelude::AccountMeta> as Extend<anchor_lang::prelude::AccountMeta>>::extend::<Vec<anchor_lang::prelude::AccountMeta>>(move _25, move _26) -> [return: bb11, unwind: bb12];
    }

    bb11: {
        StorageDead(_26);
        StorageDead(_25);
        StorageDead(_24);
        _0 = move _3;
        StorageDead(_3);
        return;
    }

    bb12 (cleanup): {
        drop(_3) -> [return: bb13, unwind terminate(cleanup)];
    }

    bb13 (cleanup): {
        resume;
    }
}
