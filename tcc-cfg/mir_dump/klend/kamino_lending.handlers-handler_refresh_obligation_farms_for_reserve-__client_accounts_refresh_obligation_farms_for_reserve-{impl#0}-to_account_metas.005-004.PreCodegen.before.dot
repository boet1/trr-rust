digraph Mir_0_5031 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;handlers::handler_refresh_obligation_farms_for_reserve::__client_accounts_refresh_obligation_farms_for_reserve::RefreshObligationFarmsForReserve as anchor_lang::ToAccountMetas&gt;::to_account_metas(_1: &amp;ReErased handlers::handler_refresh_obligation_farms_for_reserve::__client_accounts_refresh_obligation_farms_for_reserve::RefreshObligationFarmsForReserve, _2: std::option::Option&lt;bool&gt;) -&gt; std::vec::Vec&lt;anchor_lang::prelude::AccountMeta, std::alloc::Global&gt;<br align="left"/>let mut _3: std::vec::Vec&lt;anchor_lang::prelude::AccountMeta, std::alloc::Global&gt;;<br align="left"/>let _4: ();<br align="left"/>let mut _5: &amp;ReErased mut std::vec::Vec&lt;anchor_lang::prelude::AccountMeta, std::alloc::Global&gt;;<br align="left"/>let mut _6: anchor_lang::prelude::AccountMeta;<br align="left"/>let mut _7: anchor_lang::prelude::Pubkey;<br align="left"/>let _8: ();<br align="left"/>let mut _9: &amp;ReErased mut std::vec::Vec&lt;anchor_lang::prelude::AccountMeta, std::alloc::Global&gt;;<br align="left"/>let mut _10: std::vec::Vec&lt;anchor_lang::prelude::AccountMeta, std::alloc::Global&gt;;<br align="left"/>let mut _11: &amp;ReErased handlers::handler_refresh_obligation_farms_for_reserve::__client_accounts_refresh_obligation_farms_for_reserve_base::RefreshObligationFarmsForReserveBase;<br align="left"/>let mut _12: std::option::Option&lt;bool&gt;;<br align="left"/>let _13: ();<br align="left"/>let mut _14: &amp;ReErased mut std::vec::Vec&lt;anchor_lang::prelude::AccountMeta, std::alloc::Global&gt;;<br align="left"/>let mut _15: anchor_lang::prelude::AccountMeta;<br align="left"/>let mut _16: anchor_lang::prelude::Pubkey;<br align="left"/>let _17: ();<br align="left"/>let mut _18: &amp;ReErased mut std::vec::Vec&lt;anchor_lang::prelude::AccountMeta, std::alloc::Global&gt;;<br align="left"/>let mut _19: anchor_lang::prelude::AccountMeta;<br align="left"/>let mut _20: anchor_lang::prelude::Pubkey;<br align="left"/>let _21: ();<br align="left"/>let mut _22: &amp;ReErased mut std::vec::Vec&lt;anchor_lang::prelude::AccountMeta, std::alloc::Global&gt;;<br align="left"/>let mut _23: anchor_lang::prelude::AccountMeta;<br align="left"/>let mut _24: anchor_lang::prelude::Pubkey;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug is_signer =&gt; _2;<br align="left"/>debug account_metas =&gt; _3;<br align="left"/>>;
    bb0__0_5031 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/></td></tr><tr><td align="left">_3 = Vec::&lt;anchor_lang::prelude::AccountMeta&gt;::new()</td></tr></table>>];
    bb1__0_5031 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = &amp;mut _3<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = ((*_1).0: anchor_lang::prelude::Pubkey)<br/></td></tr><tr><td align="left">_6 = anchor_lang::prelude::AccountMeta::new_readonly(move _7, const true)</td></tr></table>>];
    bb2__0_5031 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/></td></tr><tr><td align="left">_4 = Vec::&lt;anchor_lang::prelude::AccountMeta&gt;::push(move _5, move _6)</td></tr></table>>];
    bb3__0_5031 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = &amp;mut _3<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = &amp;((*_1).1: handlers::handler_refresh_obligation_farms_for_reserve::__client_accounts_refresh_obligation_farms_for_reserve_base::RefreshObligationFarmsForReserveBase)<br/>StorageLive(_12)<br/>_12 = std::option::Option::&lt;bool&gt;::None<br/></td></tr><tr><td align="left">_10 = &lt;handlers::handler_refresh_obligation_farms_for_reserve::__client_accounts_refresh_obligation_farms_for_reserve_base::RefreshObligationFarmsForReserveBase as anchor_lang::ToAccountMetas&gt;::to_account_metas(move _11, move _12)</td></tr></table>>];
    bb4__0_5031 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">_8 = &lt;Vec&lt;anchor_lang::prelude::AccountMeta&gt; as Extend&lt;anchor_lang::prelude::AccountMeta&gt;&gt;::extend::&lt;Vec&lt;anchor_lang::prelude::AccountMeta&gt;&gt;(move _9, move _10)</td></tr></table>>];
    bb5__0_5031 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_14 = &amp;mut _3<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_16 = ((*_1).2: anchor_lang::prelude::Pubkey)<br/></td></tr><tr><td align="left">_15 = anchor_lang::prelude::AccountMeta::new_readonly(move _16, const false)</td></tr></table>>];
    bb6__0_5031 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/></td></tr><tr><td align="left">_13 = Vec::&lt;anchor_lang::prelude::AccountMeta&gt;::push(move _14, move _15)</td></tr></table>>];
    bb7__0_5031 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = &amp;mut _3<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_20 = ((*_1).3: anchor_lang::prelude::Pubkey)<br/></td></tr><tr><td align="left">_19 = anchor_lang::prelude::AccountMeta::new_readonly(move _20, const false)</td></tr></table>>];
    bb8__0_5031 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/></td></tr><tr><td align="left">_17 = Vec::&lt;anchor_lang::prelude::AccountMeta&gt;::push(move _18, move _19)</td></tr></table>>];
    bb9__0_5031 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_22 = &amp;mut _3<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_24 = ((*_1).4: anchor_lang::prelude::Pubkey)<br/></td></tr><tr><td align="left">_23 = anchor_lang::prelude::AccountMeta::new_readonly(move _24, const false)</td></tr></table>>];
    bb10__0_5031 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/></td></tr><tr><td align="left">_21 = Vec::&lt;anchor_lang::prelude::AccountMeta&gt;::push(move _22, move _23)</td></tr></table>>];
    bb11__0_5031 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_22)<br/>StorageDead(_21)<br/>_0 = move _3<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb12__0_5031 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">12 (cleanup)</td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb13__0_5031 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">13 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_5031 -> bb1__0_5031 [label="return"];
    bb1__0_5031 -> bb2__0_5031 [label="return"];
    bb1__0_5031 -> bb12__0_5031 [label="unwind"];
    bb2__0_5031 -> bb3__0_5031 [label="return"];
    bb2__0_5031 -> bb12__0_5031 [label="unwind"];
    bb3__0_5031 -> bb4__0_5031 [label="return"];
    bb3__0_5031 -> bb12__0_5031 [label="unwind"];
    bb4__0_5031 -> bb5__0_5031 [label="return"];
    bb4__0_5031 -> bb12__0_5031 [label="unwind"];
    bb5__0_5031 -> bb6__0_5031 [label="return"];
    bb5__0_5031 -> bb12__0_5031 [label="unwind"];
    bb6__0_5031 -> bb7__0_5031 [label="return"];
    bb6__0_5031 -> bb12__0_5031 [label="unwind"];
    bb7__0_5031 -> bb8__0_5031 [label="return"];
    bb7__0_5031 -> bb12__0_5031 [label="unwind"];
    bb8__0_5031 -> bb9__0_5031 [label="return"];
    bb8__0_5031 -> bb12__0_5031 [label="unwind"];
    bb9__0_5031 -> bb10__0_5031 [label="return"];
    bb9__0_5031 -> bb12__0_5031 [label="unwind"];
    bb10__0_5031 -> bb11__0_5031 [label="return"];
    bb10__0_5031 -> bb12__0_5031 [label="unwind"];
    bb12__0_5031 -> bb13__0_5031 [label="return"];
}
