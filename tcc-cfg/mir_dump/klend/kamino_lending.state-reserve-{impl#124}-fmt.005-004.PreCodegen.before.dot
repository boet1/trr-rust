digraph Mir_0_10076 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;ReserveFees as std::fmt::Debug&gt;::fmt(_1: &amp;ReErased state::reserve::ReserveFees, _2: &amp;ReErased mut std::fmt::Formatter&lt;ReErased&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt;<br align="left"/>let _3: &amp;ReErased u64;<br align="left"/>let _4: &amp;ReErased u64;<br align="left"/>let mut _5: std::fmt::DebugStruct&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _6: &amp;ReErased mut std::fmt::Formatter&lt;ReErased&gt;;<br align="left"/>let mut _7: &amp;ReErased str;<br align="left"/>let _8: &amp;ReErased str;<br align="left"/>let mut _9: &amp;ReErased mut std::fmt::DebugStruct&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _10: &amp;ReErased mut std::fmt::DebugStruct&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _11: &amp;ReErased str;<br align="left"/>let _12: &amp;ReErased str;<br align="left"/>let mut _13: &amp;ReErased dyn [Binder(Trait(std::fmt::Debug), [])] + ReErased;<br align="left"/>let mut _14: &amp;ReErased &amp;ReErased u64;<br align="left"/>let _15: &amp;ReErased &amp;ReErased u64;<br align="left"/>let _16: &amp;ReErased u64;<br align="left"/>let mut _17: &amp;ReErased mut std::fmt::DebugStruct&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _18: &amp;ReErased mut std::fmt::DebugStruct&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _19: &amp;ReErased str;<br align="left"/>let _20: &amp;ReErased str;<br align="left"/>let mut _21: &amp;ReErased dyn [Binder(Trait(std::fmt::Debug), [])] + ReErased;<br align="left"/>let mut _22: &amp;ReErased &amp;ReErased u64;<br align="left"/>let _23: &amp;ReErased &amp;ReErased u64;<br align="left"/>let _24: &amp;ReErased u64;<br align="left"/>let mut _25: &amp;ReErased mut std::fmt::DebugStruct&lt;ReErased, ReErased&gt;;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug __f =&gt; _2;<br align="left"/>debug __arg_0 =&gt; _3;<br align="left"/>debug __arg_1 =&gt; _4;<br align="left"/>debug __debug_trait_builder =&gt; _5;<br align="left"/>>;
    bb0__0_10076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>_3 = &amp;((*_1).0: u64)<br/>StorageLive(_4)<br/>_4 = &amp;((*_1).1: u64)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = &amp;mut (*_2)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = const &quot;ReserveFees&quot;<br/>_7 = &amp;(*_8)<br/></td></tr><tr><td align="left">_5 = Formatter::&lt;'_&gt;::debug_struct(move _6, move _7)</td></tr></table>>];
    bb1__0_10076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_6)<br/>StorageDead(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = &amp;mut _5<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = const &quot;borrow_fee_sf&quot;<br/>_11 = &amp;(*_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_16 = &amp;(*_3)<br/>_15 = &amp;_16<br/>_14 = &amp;(*_15)<br/>_13 = move _14 as &amp;dyn std::fmt::Debug (PointerCoercion(Unsize))<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">_9 = DebugStruct::&lt;'_, '_&gt;::field(move _10, move _11, move _13)</td></tr></table>>];
    bb2__0_10076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_11)<br/>StorageDead(_10)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/>StorageDead(_12)<br/>StorageDead(_9)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = &amp;mut _5<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_20 = const &quot;flash_loan_fee_sf&quot;<br/>_19 = &amp;(*_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_24 = &amp;(*_4)<br/>_23 = &amp;_24<br/>_22 = &amp;(*_23)<br/>_21 = move _22 as &amp;dyn std::fmt::Debug (PointerCoercion(Unsize))<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">_17 = DebugStruct::&lt;'_, '_&gt;::field(move _18, move _19, move _21)</td></tr></table>>];
    bb3__0_10076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/>StorageDead(_20)<br/>StorageDead(_17)<br/>StorageLive(_25)<br/>_25 = &amp;mut _5<br/></td></tr><tr><td align="left">_0 = DebugStruct::&lt;'_, '_&gt;::finish(move _25)</td></tr></table>>];
    bb4__0_10076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_10076 -> bb1__0_10076 [label="return"];
    bb1__0_10076 -> bb2__0_10076 [label="return"];
    bb2__0_10076 -> bb3__0_10076 [label="return"];
    bb3__0_10076 -> bb4__0_10076 [label="return"];
}
