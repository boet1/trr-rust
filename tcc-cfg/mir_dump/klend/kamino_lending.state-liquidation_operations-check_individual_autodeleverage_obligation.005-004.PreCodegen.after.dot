digraph Mir_0_1576 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn check_individual_autodeleverage_obligation(_1: &amp;ReErased state::types::LiquidationCheckInputs&lt;ReErased&gt;) -&gt; std::option::Option&lt;state::types::LiquidationParams&gt;<br align="left"/>let _2: &amp;ReErased state::lending_market::LendingMarket;<br align="left"/>let _3: &amp;ReErased state::reserve::Reserve;<br align="left"/>let _4: &amp;ReErased state::reserve::Reserve;<br align="left"/>let _5: &amp;ReErased state::obligation::Obligation;<br align="left"/>let _6: u64;<br align="left"/>let _7: ();<br align="left"/>let mut _8: bool;<br align="left"/>let mut _9: &amp;ReErased state::obligation::Obligation;<br align="left"/>let mut _10: !;<br align="left"/>let _11: ();<br align="left"/>let mut _12: bool;<br align="left"/>let mut _13: &amp;ReErased state::lending_market::LendingMarket;<br align="left"/>let mut _14: !;<br align="left"/>let _15: ();<br align="left"/>let _16: ();<br align="left"/>let mut _17: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _18: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _19: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _20: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _21: [&amp;ReErased str; 1_usize];<br align="left"/>let _22: ();<br align="left"/>let mut _23: bool;<br align="left"/>let mut _24: u64;<br align="left"/>let mut _25: !;<br align="left"/>let _26: ();<br align="left"/>let _27: ();<br align="left"/>let mut _28: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _29: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _30: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _31: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _32: [&amp;ReErased str; 1_usize];<br align="left"/>let _33: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _34: &amp;ReErased state::obligation::Obligation;<br align="left"/>let _35: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _36: u8;<br align="left"/>let _37: ();<br align="left"/>let mut _38: bool;<br align="left"/>let mut _39: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _40: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _41: !;<br align="left"/>let _42: ();<br align="left"/>let _43: ();<br align="left"/>let mut _44: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _45: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _46: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _47: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _48: [&amp;ReErased str; 1_usize];<br align="left"/>let _49: u64;<br align="left"/>let mut _50: u64;<br align="left"/>let mut _51: u64;<br align="left"/>let _52: u64;<br align="left"/>let mut _53: std::ops::ControlFlow&lt;std::option::Option&lt;std::convert::Infallible&gt;, u64&gt;;<br align="left"/>let mut _54: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _55: u64;<br align="left"/>let mut _56: u64;<br align="left"/>let mut _57: isize;<br align="left"/>let _58: std::option::Option&lt;std::convert::Infallible&gt;;<br align="left"/>let mut _59: !;<br align="left"/>let mut _60: std::option::Option&lt;std::convert::Infallible&gt;;<br align="left"/>let _61: u64;<br align="left"/>let _62: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _63: u64;<br align="left"/>let _64: &amp;ReErased state::reserve::ReserveConfig;<br align="left"/>let mut _65: std::option::Option&lt;&amp;ReErased state::reserve::ReserveConfig&gt;;<br align="left"/>let mut _66: std::array::IntoIter&lt;&amp;ReErased state::reserve::ReserveConfig, 2_usize&gt;;<br align="left"/>let mut _67: [&amp;ReErased state::reserve::ReserveConfig; 2_usize];<br align="left"/>let mut _68: &amp;ReErased state::reserve::ReserveConfig;<br align="left"/>let mut _69: &amp;ReErased state::reserve::ReserveConfig;<br align="left"/>let _70: &amp;ReErased state::reserve::ReserveConfig;<br align="left"/>let mut _71: Closure(DefId(0:1577 ~ kamino_lending[6389]::state::liquidation_operations::check_individual_autodeleverage_obligation::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) &amp;ReErased state::reserve::ReserveConfig,)) -&gt; (u16, u64), [Region(BrAnon)]), ()]);<br align="left"/>let mut _72: &amp;ReErased str;<br align="left"/>let _73: &amp;ReErased str;<br align="left"/>let _74: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _75: u64;<br align="left"/>let mut _76: u16;<br align="left"/>let mut _77: u16;<br align="left"/>let mut _78: &amp;ReErased state::lending_market::LendingMarket;<br align="left"/>let mut _79: &amp;ReErased state::reserve::ReserveConfig;<br align="left"/>let _80: &amp;ReErased state::reserve::ReserveConfig;<br align="left"/>let mut _81: &amp;ReErased state::reserve::ReserveConfig;<br align="left"/>let _82: &amp;ReErased state::reserve::ReserveConfig;<br align="left"/>let mut _83: &amp;ReErased state::obligation::Obligation;<br align="left"/>let mut _84: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _85: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _86: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _87: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _88: &amp;ReErased state::obligation::Obligation;<br align="left"/>let _89: ();<br align="left"/>let _90: ();<br align="left"/>let mut _91: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _92: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _93: &amp;ReErased [&amp;ReErased str; 6_usize];<br align="left"/>let _94: &amp;ReErased [&amp;ReErased str; 6_usize];<br align="left"/>let _95: [&amp;ReErased str; 6_usize];<br align="left"/>let mut _96: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _97: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 5_usize];<br align="left"/>let _98: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 5_usize];<br align="left"/>let _99: [core::fmt::rt::Argument&lt;ReErased&gt;; 5_usize];<br align="left"/>let mut _100: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _101: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _102: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _103: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _104: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _105: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _106: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _107: &amp;ReErased u64;<br align="left"/>let _108: &amp;ReErased u64;<br align="left"/>let mut _109: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _110: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _111: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _112: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _113: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _114: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _115: state::types::LiquidationParams;<br align="left"/>let mut _116: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _117: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _118: state::types::LiquidationReason;<br align="left"/>let mut _119: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _120: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _121: &amp;ReErased [&amp;ReErased str; 6_usize];<br align="left"/>let mut _122: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>debug lending_market =&gt; _2;<br align="left"/>debug collateral_reserve =&gt; _3;<br align="left"/>debug debt_reserve =&gt; _4;<br align="left"/>debug obligation =&gt; _5;<br align="left"/>debug timestamp =&gt; _6;<br align="left"/>debug user_ltv =&gt; _33;<br align="left"/>debug autodeleverage_target_ltv =&gt; _35;<br align="left"/>debug secs_since_margin_call_started =&gt; _49;<br align="left"/>debug secs_since_deleveraging_started =&gt; _52;<br align="left"/>debug residual =&gt; _58;<br align="left"/>debug val =&gt; _61;<br align="left"/>debug days_since_deleveraging_started =&gt; _62;<br align="left"/>debug selected_reserve_config =&gt; _64;<br align="left"/>debug liquidation_bonus_rate =&gt; _74;<br align="left"/>>;
    bb0__0_1576 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>_2 = ((*_1).0: &amp;state::lending_market::LendingMarket)<br/>StorageLive(_3)<br/>_3 = ((*_1).1: &amp;state::reserve::Reserve)<br/>StorageLive(_4)<br/>_4 = ((*_1).2: &amp;state::reserve::Reserve)<br/>StorageLive(_5)<br/>_5 = ((*_1).3: &amp;state::obligation::Obligation)<br/>StorageLive(_6)<br/>_6 = ((*_1).4: u64)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = &amp;(*_5)<br/></td></tr><tr><td align="left">_8 = obligation::Obligation::is_marked_for_deleveraging(move _9)</td></tr></table>>];
    bb1__0_1576 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb2__0_1576 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>_7 = const ()<br/>StorageDead(_8)<br/>StorageDead(_7)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>_13 = &amp;(*_2)<br/></td></tr><tr><td align="left">_12 = state::lending_market::LendingMarket::is_autodeleverage_enabled(move _13)</td></tr></table>>];
    bb3__0_1576 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>_0 = std::option::Option::&lt;state::types::LiquidationParams&gt;::None<br/>StorageDead(_8)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb4__0_1576 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">switchInt(move _12)</td></tr></table>>];
    bb5__0_1576 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>_11 = const ()<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_24 = ((*_2).24: u64)<br/>_23 = Eq(move _24, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _23)</td></tr></table>>];
    bb6__0_1576 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_122 = const _<br/>_20 = &amp;(*_122)<br/>_19 = &amp;(*_20)<br/>_18 = move _19 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">_17 = Arguments::&lt;'_&gt;::new_const(move _18)</td></tr></table>>];
    bb7__0_1576 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/></td></tr><tr><td align="left">_16 = _print(move _17)</td></tr></table>>];
    bb8__0_1576 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_20)<br/>StorageDead(_16)<br/>_15 = const ()<br/>StorageDead(_15)<br/>_0 = std::option::Option::&lt;state::types::LiquidationParams&gt;::None<br/>StorageDead(_12)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_1576 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>_119 = const _<br/>_31 = &amp;(*_119)<br/>_30 = &amp;(*_31)<br/>_29 = move _30 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">_28 = Arguments::&lt;'_&gt;::new_const(move _29)</td></tr></table>>];
    bb10__0_1576 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>_22 = const ()<br/>StorageDead(_23)<br/>StorageDead(_22)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>_34 = &amp;(*_5)<br/></td></tr><tr><td align="left">_33 = obligation::Obligation::loan_to_value(move _34)</td></tr></table>>];
    bb11__0_1576 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/></td></tr><tr><td align="left">_27 = _print(move _28)</td></tr></table>>];
    bb12__0_1576 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_31)<br/>StorageDead(_27)<br/>_26 = const ()<br/>StorageDead(_26)<br/>_0 = std::option::Option::&lt;state::types::LiquidationParams&gt;::None<br/>StorageDead(_23)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_1576 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>_36 = ((*_5).19: u8)<br/></td></tr><tr><td align="left">_35 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as utils::fraction::FractionExtra&gt;::from_percent::&lt;u8&gt;(move _36)</td></tr></table>>];
    bb14__0_1576 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>_39 = &amp;_33<br/>StorageLive(_40)<br/>_40 = &amp;_35<br/></td></tr><tr><td align="left">_38 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as PartialOrd&gt;::le(move _39, move _40)</td></tr></table>>];
    bb15__0_1576 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left">switchInt(move _38)</td></tr></table>>];
    bb16__0_1576 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageDead(_39)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>_120 = const _<br/>_47 = &amp;(*_120)<br/>_46 = &amp;(*_47)<br/>_45 = move _46 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">_44 = Arguments::&lt;'_&gt;::new_const(move _45)</td></tr></table>>];
    bb17__0_1576 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/></td></tr><tr><td align="left">_43 = _print(move _44)</td></tr></table>>];
    bb18__0_1576 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_47)<br/>StorageDead(_43)<br/>_42 = const ()<br/>StorageDead(_42)<br/>_0 = std::option::Option::&lt;state::types::LiquidationParams&gt;::None<br/>StorageDead(_38)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_1576 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageDead(_39)<br/>_37 = const ()<br/>StorageDead(_38)<br/>StorageDead(_37)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>_50 = _6<br/>StorageLive(_51)<br/>_51 = ((*_5).24: u64)<br/></td></tr><tr><td align="left">_49 = core::num::&lt;impl u64&gt;::saturating_sub(move _50, move _51)</td></tr></table>>];
    bb20__0_1576 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageDead(_50)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>_55 = ((*_2).24: u64)<br/>StorageLive(_56)<br/>_56 = _49<br/></td></tr><tr><td align="left">_54 = get_secs_since_deleveraging_started(move _55, move _56)</td></tr></table>>];
    bb21__0_1576 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">_53 = &lt;std::option::Option&lt;u64&gt; as Try&gt;::branch(move _54)</td></tr></table>>];
    bb22__0_1576 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>_57 = discriminant(_53)<br/></td></tr><tr><td align="left">switchInt(move _57)</td></tr></table>>];
    bb23__0_1576 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_61)<br/>_61 = ((_53 as Continue).0: u64)<br/>_52 = _61<br/>StorageDead(_61)<br/>StorageDead(_53)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>_63 = _52<br/></td></tr><tr><td align="left">_62 = to_days_fractional(move _63)</td></tr></table>>];
    bb24__0_1576 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb25__0_1576 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_58)<br/>_58 = ((_53 as Break).0: std::option::Option&lt;std::convert::Infallible&gt;)<br/>StorageLive(_60)<br/>_60 = _58<br/></td></tr><tr><td align="left">_0 = &lt;std::option::Option&lt;state::types::LiquidationParams&gt; as FromResidual&lt;std::option::Option&lt;Infallible&gt;&gt;&gt;::from_residual(move _60)</td></tr></table>>];
    bb26__0_1576 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageDead(_58)<br/>StorageDead(_53)<br/>StorageDead(_52)<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_1576 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>_68 = &amp;((*_3).9: state::reserve::ReserveConfig)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>_70 = &amp;((*_4).9: state::reserve::ReserveConfig)<br/>_69 = &amp;(*_70)<br/>_67 = [move _68, move _69]<br/>StorageDead(_69)<br/>StorageDead(_68)<br/></td></tr><tr><td align="left">_66 = &lt;[&amp;reserve::ReserveConfig; 2] as IntoIterator&gt;::into_iter(move _67)</td></tr></table>>];
    bb28__0_1576 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>StorageLive(_71)<br/>_71 = {closure@programs\klend\src\state\liquidation_operations.rs:481:21: 481:30}<br/></td></tr><tr><td align="left">_65 = &lt;std::array::IntoIter&lt;&amp;reserve::ReserveConfig, 2&gt; as Iterator&gt;::max_by_key::&lt;(u16, u64), {closure@programs\klend\src\state\liquidation_operations.rs:481:21: 481:30}&gt;(move _66, move _71)</td></tr></table>>];
    bb29__0_1576 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageDead(_66)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>_73 = const &quot;must exist for a statically-constructed non-empty array&quot;<br/>_72 = &amp;(*_73)<br/></td></tr><tr><td align="left">_64 = std::option::Option::&lt;&amp;reserve::ReserveConfig&gt;::expect(move _65, move _72)</td></tr></table>>];
    bb30__0_1576 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_65)<br/>StorageDead(_73)<br/>StorageDead(_70)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>_75 = ((*_64).29: u64)<br/>StorageLive(_76)<br/>_76 = ((*_64).10: u16)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>_78 = &amp;(*_2)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>_80 = &amp;((*_3).9: state::reserve::ReserveConfig)<br/>_79 = &amp;(*_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>_82 = &amp;((*_4).9: state::reserve::ReserveConfig)<br/>_81 = &amp;(*_82)<br/>StorageLive(_83)<br/>_83 = &amp;(*_5)<br/></td></tr><tr><td align="left">_77 = get_emode_max_liquidation_bonus(move _78, move _79, move _81, move _83)</td></tr></table>>];
    bb31__0_1576 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>StorageDead(_81)<br/>StorageDead(_79)<br/>StorageDead(_78)<br/>StorageLive(_84)<br/>_84 = _62<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>_88 = &amp;(*_5)<br/></td></tr><tr><td align="left">_87 = obligation::Obligation::no_bf_loan_to_value(move _88)</td></tr></table>>];
    bb32__0_1576 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>_86 = &amp;_87<br/>_85 = &amp;(*_86)<br/></td></tr><tr><td align="left">_74 = calculate_autodeleverage_bonus_rate(move _75, move _76, move _77, move _84, move _85)</td></tr></table>>];
    bb33__0_1576 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>StorageDead(_84)<br/>StorageDead(_77)<br/>StorageDead(_76)<br/>StorageDead(_75)<br/>StorageDead(_87)<br/>StorageDead(_86)<br/>StorageDead(_82)<br/>StorageDead(_80)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>_121 = const _<br/>_94 = &amp;(*_121)<br/>_93 = &amp;(*_94)<br/>_92 = move _93 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_93)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>_102 = &amp;_33<br/>_101 = &amp;(*_102)<br/></td></tr><tr><td align="left">_100 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;&gt;(move _101)</td></tr></table>>];
    bb34__0_1576 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>_105 = &amp;_35<br/>_104 = &amp;(*_105)<br/></td></tr><tr><td align="left">_103 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;&gt;(move _104)</td></tr></table>>];
    bb35__0_1576 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>_108 = &amp;_52<br/>_107 = &amp;(*_108)<br/></td></tr><tr><td align="left">_106 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _107)</td></tr></table>>];
    bb36__0_1576 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>_111 = &amp;_62<br/>_110 = &amp;(*_111)<br/></td></tr><tr><td align="left">_109 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;&gt;(move _110)</td></tr></table>>];
    bb37__0_1576 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>_114 = &amp;_74<br/>_113 = &amp;(*_114)<br/></td></tr><tr><td align="left">_112 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;&gt;(move _113)</td></tr></table>>];
    bb38__0_1576 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_113)<br/>_99 = [move _100, move _103, move _106, move _109, move _112]<br/>StorageDead(_112)<br/>StorageDead(_109)<br/>StorageDead(_106)<br/>StorageDead(_103)<br/>StorageDead(_100)<br/>_98 = &amp;_99<br/>_97 = &amp;(*_98)<br/>_96 = move _97 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_97)<br/></td></tr><tr><td align="left">_91 = Arguments::&lt;'_&gt;::new_v1(move _92, move _96)</td></tr></table>>];
    bb39__0_1576 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>StorageDead(_92)<br/></td></tr><tr><td align="left">_90 = _print(move _91)</td></tr></table>>];
    bb40__0_1576 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/>StorageDead(_114)<br/>StorageDead(_111)<br/>StorageDead(_108)<br/>StorageDead(_105)<br/>StorageDead(_102)<br/>StorageDead(_99)<br/>StorageDead(_98)<br/>StorageDead(_94)<br/>StorageDead(_90)<br/>_89 = const ()<br/>StorageDead(_89)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>_116 = _33<br/>StorageLive(_117)<br/>_117 = _74<br/>StorageLive(_118)<br/>_118 = state::types::LiquidationReason::IndividualDeleveraging<br/>_115 = state::types::LiquidationParams { user_ltv: move _116, liquidation_bonus_rate: move _117, liquidation_reason: move _118 }<br/>StorageDead(_118)<br/>StorageDead(_117)<br/>StorageDead(_116)<br/>_0 = std::option::Option::&lt;state::types::LiquidationParams&gt;::Some(move _115)<br/>StorageDead(_115)<br/>StorageDead(_74)<br/>StorageDead(_64)<br/>StorageDead(_62)<br/>StorageDead(_52)<br/>StorageDead(_49)<br/>StorageDead(_35)<br/>StorageDead(_33)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_1576 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_1576 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_1576 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left">return</td></tr></table>>];
    bb44__0_1576 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">44 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_1576 -> bb1__0_1576 [label="return"];
    bb1__0_1576 -> bb3__0_1576 [label="0"];
    bb1__0_1576 -> bb2__0_1576 [label="otherwise"];
    bb2__0_1576 -> bb4__0_1576 [label="return"];
    bb3__0_1576 -> bb42__0_1576 [label=""];
    bb4__0_1576 -> bb6__0_1576 [label="0"];
    bb4__0_1576 -> bb5__0_1576 [label="otherwise"];
    bb5__0_1576 -> bb10__0_1576 [label="0"];
    bb5__0_1576 -> bb9__0_1576 [label="otherwise"];
    bb6__0_1576 -> bb7__0_1576 [label="return"];
    bb7__0_1576 -> bb8__0_1576 [label="return"];
    bb8__0_1576 -> bb42__0_1576 [label=""];
    bb9__0_1576 -> bb11__0_1576 [label="return"];
    bb10__0_1576 -> bb13__0_1576 [label="return"];
    bb11__0_1576 -> bb12__0_1576 [label="return"];
    bb12__0_1576 -> bb42__0_1576 [label=""];
    bb13__0_1576 -> bb14__0_1576 [label="return"];
    bb14__0_1576 -> bb15__0_1576 [label="return"];
    bb15__0_1576 -> bb19__0_1576 [label="0"];
    bb15__0_1576 -> bb16__0_1576 [label="otherwise"];
    bb16__0_1576 -> bb17__0_1576 [label="return"];
    bb17__0_1576 -> bb18__0_1576 [label="return"];
    bb18__0_1576 -> bb41__0_1576 [label=""];
    bb19__0_1576 -> bb20__0_1576 [label="return"];
    bb20__0_1576 -> bb21__0_1576 [label="return"];
    bb21__0_1576 -> bb22__0_1576 [label="return"];
    bb22__0_1576 -> bb23__0_1576 [label="0"];
    bb22__0_1576 -> bb25__0_1576 [label="1"];
    bb22__0_1576 -> bb24__0_1576 [label="otherwise"];
    bb23__0_1576 -> bb27__0_1576 [label="return"];
    bb25__0_1576 -> bb26__0_1576 [label="return"];
    bb26__0_1576 -> bb41__0_1576 [label=""];
    bb27__0_1576 -> bb28__0_1576 [label="return"];
    bb28__0_1576 -> bb29__0_1576 [label="return"];
    bb28__0_1576 -> bb44__0_1576 [label="unwind"];
    bb29__0_1576 -> bb30__0_1576 [label="return"];
    bb30__0_1576 -> bb31__0_1576 [label="return"];
    bb31__0_1576 -> bb32__0_1576 [label="return"];
    bb32__0_1576 -> bb33__0_1576 [label="return"];
    bb33__0_1576 -> bb34__0_1576 [label="return"];
    bb34__0_1576 -> bb35__0_1576 [label="return"];
    bb35__0_1576 -> bb36__0_1576 [label="return"];
    bb36__0_1576 -> bb37__0_1576 [label="return"];
    bb37__0_1576 -> bb38__0_1576 [label="return"];
    bb38__0_1576 -> bb39__0_1576 [label="return"];
    bb39__0_1576 -> bb40__0_1576 [label="return"];
    bb40__0_1576 -> bb43__0_1576 [label=""];
    bb41__0_1576 -> bb42__0_1576 [label=""];
    bb42__0_1576 -> bb43__0_1576 [label=""];
}
