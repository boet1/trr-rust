digraph Mir_0_1578 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn check_market_wide_autodeleverage_obligation(_1: &amp;ReErased state::types::LiquidationCheckInputs&lt;ReErased&gt;) -&gt; std::option::Option&lt;state::types::LiquidationParams&gt;<br align="left"/>let _2: &amp;ReErased state::lending_market::LendingMarket;<br align="left"/>let _3: &amp;ReErased state::reserve::Reserve;<br align="left"/>let _4: &amp;ReErased state::reserve::Reserve;<br align="left"/>let _5: &amp;ReErased state::obligation::Obligation;<br align="left"/>let _6: u64;<br align="left"/>let _7: ();<br align="left"/>let mut _8: bool;<br align="left"/>let mut _9: &amp;ReErased state::lending_market::LendingMarket;<br align="left"/>let mut _10: !;<br align="left"/>let _11: ();<br align="left"/>let mut _12: bool;<br align="left"/>let mut _13: &amp;ReErased state::reserve::ReserveConfig;<br align="left"/>let _14: std::option::Option&lt;state::types::LiquidationParams&gt;;<br align="left"/>let mut _15: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _16: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _17: u64;<br align="left"/>let mut _18: Closure(DefId(0:1579 ~ kamino_lending[6389]::state::liquidation_operations::check_market_wide_autodeleverage_obligation::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((u64,)) -&gt; std::option::Option&lt;state::types::LiquidationParams&gt;, []), (&amp;ReErased state::reserve::Reserve, &amp;ReErased state::obligation::Obligation)]);<br align="left"/>let mut _19: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _20: &amp;ReErased state::obligation::Obligation;<br align="left"/>let mut _21: bool;<br align="left"/>let mut _22: &amp;ReErased std::option::Option&lt;state::types::LiquidationParams&gt;;<br align="left"/>let mut _23: !;<br align="left"/>let _24: ();<br align="left"/>let mut _25: bool;<br align="left"/>let mut _26: &amp;ReErased state::reserve::ReserveConfig;<br align="left"/>let _27: std::option::Option&lt;state::types::LiquidationParams&gt;;<br align="left"/>let mut _28: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _29: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _30: u64;<br align="left"/>let mut _31: Closure(DefId(0:1580 ~ kamino_lending[6389]::state::liquidation_operations::check_market_wide_autodeleverage_obligation::{closure#1}), [i32, Binder(extern &quot;RustCall&quot; fn((u64,)) -&gt; std::option::Option&lt;state::types::LiquidationParams&gt;, []), (&amp;ReErased state::reserve::Reserve, &amp;ReErased state::obligation::Obligation)]);<br align="left"/>let mut _32: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _33: &amp;ReErased state::obligation::Obligation;<br align="left"/>let mut _34: bool;<br align="left"/>let mut _35: &amp;ReErased std::option::Option&lt;state::types::LiquidationParams&gt;;<br align="left"/>let mut _36: !;<br align="left"/>debug lending_market =&gt; _2;<br align="left"/>debug collateral_reserve =&gt; _3;<br align="left"/>debug debt_reserve =&gt; _4;<br align="left"/>debug obligation =&gt; _5;<br align="left"/>debug timestamp =&gt; _6;<br align="left"/>debug params =&gt; _14;<br align="left"/>debug params =&gt; _27;<br align="left"/>>;
    bb0__0_1578 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>_2 = ((*_1).0: &amp;state::lending_market::LendingMarket)<br/>StorageLive(_3)<br/>_3 = ((*_1).1: &amp;state::reserve::Reserve)<br/>StorageLive(_4)<br/>_4 = ((*_1).2: &amp;state::reserve::Reserve)<br/>StorageLive(_5)<br/>_5 = ((*_1).3: &amp;state::obligation::Obligation)<br/>StorageLive(_6)<br/>_6 = ((*_1).4: u64)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = &amp;(*_2)<br/></td></tr><tr><td align="left">_8 = state::lending_market::LendingMarket::is_autodeleverage_enabled(move _9)</td></tr></table>>];
    bb1__0_1578 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb2__0_1578 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>_7 = const ()<br/>StorageDead(_8)<br/>StorageDead(_7)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>_13 = &amp;((*_3).9: state::reserve::ReserveConfig)<br/></td></tr><tr><td align="left">_12 = reserve::ReserveConfig::is_autodeleverage_enabled(move _13)</td></tr></table>>];
    bb3__0_1578 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>_0 = std::option::Option::&lt;state::types::LiquidationParams&gt;::None<br/>StorageDead(_8)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb4__0_1578 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">switchInt(move _12)</td></tr></table>>];
    bb5__0_1578 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_16 = &amp;(*_3)<br/>StorageLive(_17)<br/>_17 = _6<br/></td></tr><tr><td align="left">_15 = get_secs_since_autodeleverage_obligation_collateral_deposit_limit_crossed(move _16, move _17)</td></tr></table>>];
    bb6__0_1578 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_16)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_19 = &amp;(*_3)<br/>StorageLive(_20)<br/>_20 = &amp;(*_5)<br/>_18 = {closure@programs\klend\src\state\liquidation_operations.rs:530:19: 530:52} { collateral_reserve: move _19, obligation: move _20 }<br/>StorageDead(_20)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">_14 = std::option::Option::&lt;u64&gt;::and_then::&lt;state::types::LiquidationParams, {closure@programs\klend\src\state\liquidation_operations.rs:530:19: 530:52}&gt;(move _15, move _18)</td></tr></table>>];
    bb7__0_1578 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_15)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_22 = &amp;_14<br/></td></tr><tr><td align="left">_21 = std::option::Option::&lt;state::types::LiquidationParams&gt;::is_some(move _22)</td></tr></table>>];
    bb8__0_1578 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left">switchInt(move _21)</td></tr></table>>];
    bb9__0_1578 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>_0 = move _14<br/>StorageDead(_21)<br/>StorageDead(_14)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_1578 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>_11 = const ()<br/>StorageDead(_21)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb11__0_1578 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>_11 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_1578 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_11)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_26 = &amp;((*_4).9: state::reserve::ReserveConfig)<br/></td></tr><tr><td align="left">_25 = reserve::ReserveConfig::is_autodeleverage_enabled(move _26)</td></tr></table>>];
    bb13__0_1578 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left">switchInt(move _25)</td></tr></table>>];
    bb14__0_1578 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_29 = &amp;(*_4)<br/>StorageLive(_30)<br/>_30 = _6<br/></td></tr><tr><td align="left">_28 = get_secs_since_autodeleverage_obligation_debt_borrow_limit_crossed(move _29, move _30)</td></tr></table>>];
    bb15__0_1578 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_29)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>_32 = &amp;(*_4)<br/>StorageLive(_33)<br/>_33 = &amp;(*_5)<br/>_31 = {closure@programs\klend\src\state\liquidation_operations.rs:547:19: 547:52} { debt_reserve: move _32, obligation: move _33 }<br/>StorageDead(_33)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">_27 = std::option::Option::&lt;u64&gt;::and_then::&lt;state::types::LiquidationParams, {closure@programs\klend\src\state\liquidation_operations.rs:547:19: 547:52}&gt;(move _28, move _31)</td></tr></table>>];
    bb16__0_1578 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_28)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>_35 = &amp;_27<br/></td></tr><tr><td align="left">_34 = std::option::Option::&lt;state::types::LiquidationParams&gt;::is_some(move _35)</td></tr></table>>];
    bb17__0_1578 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left">switchInt(move _34)</td></tr></table>>];
    bb18__0_1578 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>_0 = move _27<br/>StorageDead(_34)<br/>StorageDead(_27)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_1578 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>_24 = const ()<br/>StorageDead(_34)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_1578 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>_24 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_1578 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_24)<br/>_0 = std::option::Option::&lt;state::types::LiquidationParams&gt;::None<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_1578 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_1578 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_1578 -> bb1__0_1578 [label="return"];
    bb1__0_1578 -> bb3__0_1578 [label="0"];
    bb1__0_1578 -> bb2__0_1578 [label="otherwise"];
    bb2__0_1578 -> bb4__0_1578 [label="return"];
    bb3__0_1578 -> bb22__0_1578 [label=""];
    bb4__0_1578 -> bb11__0_1578 [label="0"];
    bb4__0_1578 -> bb5__0_1578 [label="otherwise"];
    bb5__0_1578 -> bb6__0_1578 [label="return"];
    bb6__0_1578 -> bb7__0_1578 [label="return"];
    bb7__0_1578 -> bb8__0_1578 [label="return"];
    bb8__0_1578 -> bb10__0_1578 [label="0"];
    bb8__0_1578 -> bb9__0_1578 [label="otherwise"];
    bb9__0_1578 -> bb22__0_1578 [label=""];
    bb10__0_1578 -> bb12__0_1578 [label=""];
    bb11__0_1578 -> bb12__0_1578 [label=""];
    bb12__0_1578 -> bb13__0_1578 [label="return"];
    bb13__0_1578 -> bb20__0_1578 [label="0"];
    bb13__0_1578 -> bb14__0_1578 [label="otherwise"];
    bb14__0_1578 -> bb15__0_1578 [label="return"];
    bb15__0_1578 -> bb16__0_1578 [label="return"];
    bb16__0_1578 -> bb17__0_1578 [label="return"];
    bb17__0_1578 -> bb19__0_1578 [label="0"];
    bb17__0_1578 -> bb18__0_1578 [label="otherwise"];
    bb18__0_1578 -> bb22__0_1578 [label=""];
    bb19__0_1578 -> bb21__0_1578 [label=""];
    bb20__0_1578 -> bb21__0_1578 [label=""];
    bb21__0_1578 -> bb23__0_1578 [label=""];
    bb22__0_1578 -> bb23__0_1578 [label=""];
}
